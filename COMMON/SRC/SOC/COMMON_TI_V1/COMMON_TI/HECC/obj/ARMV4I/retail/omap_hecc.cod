; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\HECC\omap_hecc.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_1CE@JCFLMDCM@?$AAT?$AAx?$AAC?$AAr?$AAi?$AAt?$AAi?$AAc?$AAa?$AAl?$AAM?$AAa?$AAx?$AAE?$AAl?$AAe?$AAm?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@HIGIIIHI@?$AAT?$AAx?$AAM?$AAe?$AAd?$AAi?$AAu?$AAm?$AAM?$AAa?$AAx?$AAE?$AAl?$AAe?$AAm?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@EPBAMBAC@?$AAT?$AAx?$AAL?$AAo?$AAw?$AAM?$AAa?$AAx?$AAE?$AAl?$AAe?$AAm?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BC@GOJKOAHK@?$AAm?$AAa?$AAx?$AAR?$AAx?$AAM?$AAs?$AAg?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BC@JHNNEHFE@?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@IHBIGHFA@?$AAS?$AAt?$AAr?$AAo?$AAb?$AAe?$AAP?$AAi?$AAn?$AAP?$AAo?$AAl?$AAa?$AAr?$AAi?$AAt?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@JIHBNMKH@?$AAS?$AAt?$AAr?$AAo?$AAb?$AAe?$AAP?$AAi?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BC@MIOHADKO@?$AAB?$AAa?$AAu?$AAd?$AAR?$AAa?$AAt?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@NAFKEAOP@?$AAC?$AAa?$AAn?$AAC?$AAt?$AAr?$AAl?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|dpCurSettings| [ DATA ]

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@JCFLMDCM@?$AAT?$AAx?$AAC?$AAr?$AAi?$AAt?$AAi?$AAc?$AAa?$AAl?$AAM?$AAa?$AAx?$AAE?$AAl?$AAe?$AAm?$AA?$AA@| DCB "T"
	DCB	0x0, "x", 0x0, "C", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "i"
	DCB	0x0, "c", 0x0, "a", 0x0, "l", 0x0, "M", 0x0, "a", 0x0, "x"
	DCB	0x0, "E", 0x0, "l", 0x0, "e", 0x0, "m", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@HIGIIIHI@?$AAT?$AAx?$AAM?$AAe?$AAd?$AAi?$AAu?$AAm?$AAM?$AAa?$AAx?$AAE?$AAl?$AAe?$AAm?$AA?$AA@| DCB "T"
	DCB	0x0, "x", 0x0, "M", 0x0, "e", 0x0, "d", 0x0, "i", 0x0, "u"
	DCB	0x0, "m", 0x0, "M", 0x0, "a", 0x0, "x", 0x0, "E", 0x0, "l"
	DCB	0x0, "e", 0x0, "m", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@EPBAMBAC@?$AAT?$AAx?$AAL?$AAo?$AAw?$AAM?$AAa?$AAx?$AAE?$AAl?$AAe?$AAm?$AA?$AA@| DCB "T"
	DCB	0x0, "x", 0x0, "L", 0x0, "o", 0x0, "w", 0x0, "M", 0x0, "a"
	DCB	0x0, "x", 0x0, "E", 0x0, "l", 0x0, "e", 0x0, "m", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BC@GOJKOAHK@?$AAm?$AAa?$AAx?$AAR?$AAx?$AAM?$AAs?$AAg?$AA?$AA@| DCB "m"
	DCB	0x0, "a", 0x0, "x", 0x0, "R", 0x0, "x", 0x0, "M", 0x0, "s"
	DCB	0x0, "g", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BC@JHNNEHFE@?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@| DCB "P"
	DCB	0x0, "r", 0x0, "i", 0x0, "o", 0x0, "r", 0x0, "i", 0x0, "t"
	DCB	0x0, "y", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@IHBIGHFA@?$AAS?$AAt?$AAr?$AAo?$AAb?$AAe?$AAP?$AAi?$AAn?$AAP?$AAo?$AAl?$AAa?$AAr?$AAi?$AAt?$AAy?$AA?$AA@| DCB "S"
	DCB	0x0, "t", 0x0, "r", 0x0, "o", 0x0, "b", 0x0, "e", 0x0, "P"
	DCB	0x0, "i", 0x0, "n", 0x0, "P", 0x0, "o", 0x0, "l", 0x0, "a"
	DCB	0x0, "r", 0x0, "i", 0x0, "t", 0x0, "y", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@JIHBNMKH@?$AAS?$AAt?$AAr?$AAo?$AAb?$AAe?$AAP?$AAi?$AAn?$AA?$AA@| DCB "S"
	DCB	0x0, "t", 0x0, "r", 0x0, "o", 0x0, "b", 0x0, "e", 0x0, "P"
	DCB	0x0, "i", 0x0, "n", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BC@MIOHADKO@?$AAB?$AAa?$AAu?$AAd?$AAR?$AAa?$AAt?$AAe?$AA?$AA@| DCB "B"
	DCB	0x0, "a", 0x0, "u", 0x0, "d", 0x0, "R", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@NAFKEAOP@?$AAC?$AAa?$AAn?$AAC?$AAt?$AAr?$AAl?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?$AA@| DCB "C"
	DCB	0x0, "a", 0x0, "n", 0x0, "C", 0x0, "t", 0x0, "r", 0x0, "l"
	DCB	0x0, "I", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "x", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|RxPriorityMlbxCount| DCD 0x3
	DCD	0x2
	DCD	0x1
	%	4
|s_deviceRegParams| DCD |??_C@_1BK@NAFKEAOP@?$AAC?$AAa?$AAn?$AAC?$AAt?$AAr?$AAl?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?$AA@|
	DCD	0x1
	DCD	0x1
	DCD	0x14
	DCD	0x4
	DCD	0x0
	DCD	|??_C@_1BC@MIOHADKO@?$AAB?$AAa?$AAu?$AAd?$AAR?$AAa?$AAt?$AAe?$AA?$AA@|
	DCD	0x1
	DCD	0x1
	DCD	0x20
	DCD	0x4
	DCD	0xffffffff
	DCD	|??_C@_1BE@JIHBNMKH@?$AAS?$AAt?$AAr?$AAo?$AAb?$AAe?$AAP?$AAi?$AAn?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x18
	DCD	0x4
	DCD	0xffffffff
	DCD	|??_C@_1CE@IHBIGHFA@?$AAS?$AAt?$AAr?$AAo?$AAb?$AAe?$AAP?$AAi?$AAn?$AAP?$AAo?$AAl?$AAa?$AAr?$AAi?$AAt?$AAy?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x1c
	DCD	0x4
	DCD	0xffffffff
	DCD	|??_C@_1BC@JHNNEHFE@?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x10
	DCD	0x4
	DCD	0xfa
	DCD	|??_C@_1BC@GOJKOAHK@?$AAm?$AAa?$AAx?$AAR?$AAx?$AAM?$AAs?$AAg?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x7c
	DCD	0x4
	DCD	0x100
	DCD	|??_C@_1BK@EPBAMBAC@?$AAT?$AAx?$AAL?$AAo?$AAw?$AAM?$AAa?$AAx?$AAE?$AAl?$AAe?$AAm?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x94
	DCD	0x4
	DCD	0x20
	DCD	|??_C@_1CA@HIGIIIHI@?$AAT?$AAx?$AAM?$AAe?$AAd?$AAi?$AAu?$AAm?$AAM?$AAa?$AAx?$AAE?$AAl?$AAe?$AAm?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x90
	DCD	0x4
	DCD	0x20
	DCD	|??_C@_1CE@JCFLMDCM@?$AAT?$AAx?$AAC?$AAr?$AAi?$AAt?$AAi?$AAc?$AAa?$AAl?$AAM?$AAa?$AAx?$AAE?$AAl?$AAe?$AAm?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x8c
	DCD	0x4
	DCD	0x20

  00000			 AREA	 |.data|, DATA
|PriorityMapping| DCB 0x3
	DCB	0x2
	DCB	0x1
	%	5
|dpCurSettings| DCB "C", 0x0, "A", 0x0, "N", 0x0, 0x0, 0x0
	%	56
	DCB	"E", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, "s", 0x0
	DCB	0x0, 0x0
	%	50
	DCB	"W", 0x0, "a", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0
	DCB	"g", 0x0, "s", 0x0, 0x0, 0x0
	%	46
	DCB	"F", 0x0, "u", 0x0, "n", 0x0, "c", 0x0, "t", 0x0, "i", 0x0
	DCB	"o", 0x0, "n", 0x0, 0x0, 0x0
	%	46
	DCB	"I", 0x0, "n", 0x0, "f", 0x0, "o", 0x0, 0x0, 0x0
	%	54
	DCB	"I", 0x0, "S", 0x0, "T", 0x0, 0x0, 0x0
	%	56
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCD	0x3
	EXPORT	|SetEvent|
	IMPORT	|EventModify|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T37808| DCD	|$LN5@SetEvent|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetEvent| PROC

; 235  : _inline BOOL SetEvent(HANDLE h) {

  00000		 |$LN5@SetEvent|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37805|

; 236  : 	return EventModify(h,EVENT_SET);

  00004	e3a01003	 mov         r1, #3
  00008	eb000000	 bl          EventModify

; 237  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M37806|

			 ENDP  ; |SetEvent|

	EXPORT	|GetCurrentProcess|

  00000			 AREA	 |.pdata|, PDATA
|$T37817| DCD	|$LN5@GetCurrent|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetCurrentProcess| PROC

; 361  : _inline HANDLE GetCurrentProcess(void) {

  00000		 |$LN5@GetCurrent|
  00000		 |$M37814|

; 362  : 	return ((HANDLE)(SH_CURPROC+SYS_HANDLE_BASE));

  00000	e3a00042	 mov         r0, #0x42

; 363  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M37815|

			 ENDP  ; |GetCurrentProcess|

; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\hecc\omap_hecc.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T37827| DCD	|$LN5@NextElemen|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?NextElement@@YAPAU_SLE@@PAU1@@Z| PROC ; NextElement

; 86   : {

  00000		 |$LN5@NextElemen|
  00000		 |$M37824|

; 87   :     return pSle->pNext;

  00000	e5900000	 ldr         r0, [r0]

; 88   : }

  00004	e12fff1e	 bx          lr
  00008		 |$M37825|

			 ENDP  ; |?NextElement@@YAPAU_SLE@@PAU1@@Z|, NextElement


  00000			 AREA	 |.pdata|, PDATA
|$T37843| DCD	|$LN12@PushElemen|
	DCD	0x40000f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PushElement@@YAXPAPAU_SLE@@PAU1@@Z| PROC ; PushElement

; 91   : {

  00000		 |$LN12@PushElemen|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37840|

; 92   :     PSLE current;
; 93   :     PSLE previous;
; 94   :     if (*head == NULL)

  00004	e5903000	 ldr         r3, [r0]
  00008	e1b0e003	 movs        lr, r3

; 95   :     {
; 96   :         *head = pSle;

  0000c	05801000	 streq       r1, [r0]

; 108  : }

  00010	049de004	 ldreq       lr, [sp], #4
  00014	012fff1e	 bxeq        lr
  00018		 |$LL3@PushElemen|

; 97   :         return;
; 98   :     }
; 99   :     current = *head;
; 100  :     do 
; 101  :     {
; 102  :         previous = current;
; 103  :         current = NextElement(current);

  00018	e59e3000	 ldr         r3, [lr]
  0001c	e1a0200e	 mov         r2, lr
  00020	e1b0e003	 movs        lr, r3

; 104  :     }
; 105  :     while (current);

  00024	1afffffb	 bne         |$LL3@PushElemen|

; 106  :     pSle->pNext = NULL;

  00028	e3a03000	 mov         r3, #0
  0002c	e5813000	 str         r3, [r1]

; 107  :     previous->pNext = pSle;

  00030	e5821000	 str         r1, [r2]

; 108  : }

  00034	e49de004	 ldr         lr, [sp], #4
  00038	e12fff1e	 bx          lr
  0003c		 |$M37841|

			 ENDP  ; |?PushElement@@YAXPAPAU_SLE@@PAU1@@Z|, PushElement


  00000			 AREA	 |.pdata|, PDATA
|$T37864| DCD	|$LN18@RemoveElem|
	DCD	0x40001100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RemoveElement@@YAXPAPAU_SLE@@PAU1@@Z| PROC ; RemoveElement

; 111  : {

  00000		 |$LN18@RemoveElem|
  00000		 |$M37861|

; 112  :     PSLE current;
; 113  :     PSLE next;
; 114  :     if (*head == NULL)

  00000	e5903000	 ldr         r3, [r0]
  00004	e1b02003	 movs        r2, r3
  00008	0a00000c	 beq         |$LN2@RemoveElem|

; 115  :     {        
; 116  :         return;
; 117  :     }
; 118  :     current = *head;
; 119  :     if (current == pSle)

  0000c	e1520001	 cmp         r2, r1

; 120  :     {
; 121  :         *head = current->pNext;

  00010	05923000	 ldreq       r3, [r2]
  00014	05803000	 streq       r3, [r0]

; 133  :     }    
; 134  : }

  00018	012fff1e	 bxeq        lr
  0001c		 |$LL3@RemoveElem|

; 122  :         return;
; 123  :     }
; 124  :     while (current)
; 125  :     {
; 126  :         next = NextElement(current);

  0001c	e5923000	 ldr         r3, [r2]

; 127  :         if (next == pSle)

  00020	e1530001	 cmp         r3, r1
  00024	0a000003	 beq         |$LN11@RemoveElem|

; 130  :             break;
; 131  :         }
; 132  :         current = next;

  00028	e1a02003	 mov         r2, r3
  0002c	e3530000	 cmp         r3, #0
  00030	1afffff9	 bne         |$LL3@RemoveElem|

; 133  :     }    
; 134  : }

  00034	e12fff1e	 bx          lr
  00038		 |$LN11@RemoveElem|

; 128  :         {
; 129  :             current->pNext = next->pNext;

  00038	e5933000	 ldr         r3, [r3]
  0003c	e5823000	 str         r3, [r2]
  00040		 |$LN2@RemoveElem|

; 133  :     }    
; 134  : }

  00040	e12fff1e	 bx          lr
  00044		 |$M37862|

			 ENDP  ; |?RemoveElement@@YAXPAPAU_SLE@@PAU1@@Z|, RemoveElement


  00000			 AREA	 |.pdata|, PDATA
|$T37876| DCD	|$LN10@IDequal|
	DCD	0x40001300
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IDequal@@YAHTCAN_ID@@0@Z| PROC	; IDequal

; 279  : {

  00000		 |$LN10@IDequal|
  00000		 |$M37873|

; 280  :     if (id1.s_standard.extended)

  00000	e3100102	 tst         r0, #2, 2
  00004	0a000007	 beq         |$LN4@IDequal|

; 281  :     {        
; 282  :         if ((id2.s_extended.extended == 1) && (id1.s_extended.id == id2.s_extended.id))

  00008	e2013102	 and         r3, r1, #2, 2
  0000c	e3530102	 cmp         r3, #2, 2
  00010	1a00000b	 bne         |$LN1@IDequal|
  00014	e0213000	 eor         r3, r1, r0
  00018	e3d3c20e	 bics        r12, r3, #0xE, 4
  0001c		 |$LN7@IDequal|
  0001c	1a000008	 bne         |$LN1@IDequal|

; 283  :         {
; 284  :             return TRUE;

  00020	e3a00001	 mov         r0, #1

; 295  : }

  00024	e12fff1e	 bx          lr
  00028		 |$LN4@IDequal|

; 285  :         }
; 286  :     }
; 287  :     else
; 288  :     {
; 289  :         if ((id2.s_extended.extended == 0) && (id1.s_standard.id == id2.s_standard.id))

  00028	e3110102	 tst         r1, #2, 2
  0002c	1a000004	 bne         |$LN1@IDequal|
  00030	e3a0357f	 mov         r3, #0x7F, 10
  00034	e383270f	 orr         r2, r3, #0xF, 14
  00038	e0213000	 eor         r3, r1, r0
  0003c	e1130002	 tst         r3, r2

; 290  :         {
; 291  :             return TRUE;

  00040	eafffff5	 b           |$LN7@IDequal|
  00044		 |$LN1@IDequal|

; 292  :         }
; 293  :     }
; 294  :     return FALSE;    

  00044	e3a00000	 mov         r0, #0

; 295  : }

  00048	e12fff1e	 bx          lr
  0004c		 |$M37874|

			 ENDP  ; |?IDequal@@YAHTCAN_ID@@0@Z|, IDequal

	EXPORT	|?IDtoCANMID@@YAITCAN_ID@@@Z|		; IDtoCANMID

  00000			 AREA	 |.pdata|, PDATA
|$T37886| DCD	|$LN7@IDtoCANMID|
	DCD	0x40000700
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IDtoCANMID@@YAITCAN_ID@@@Z| PROC	; IDtoCANMID

; 297  : {

  00000		 |$LN7@IDtoCANMID|
  00000		 |$M37883|

; 298  :     if (id.s_extended.extended)

  00000	e3100102	 tst         r0, #2, 2

; 299  :     {
; 300  :         return CANMID_EXTENDED | id.s_extended.id;

  00004	13c0320e	 bicne       r3, r0, #0xE, 4
  00008	13830102	 orrne       r0, r3, #2, 2
  0000c	03a0357f	 moveq       r3, #0x7F, 10

; 301  :     }
; 302  :     else
; 303  :     {
; 304  :         return (id.s_standard.id & 0x7FF) << 18;

  00010	0383370f	 orreq       r3, r3, #0xF, 14
  00014	00000003	 andeq       r0, r0, r3

; 305  :     }
; 306  : }

  00018	e12fff1e	 bx          lr
  0001c		 |$M37884|

			 ENDP  ; |?IDtoCANMID@@YAITCAN_ID@@@Z|, IDtoCANMID

	EXPORT	|?CANMIDtoCANID@@YAXIPATCAN_ID@@@Z|	; CANMIDtoCANID

  00000			 AREA	 |.pdata|, PDATA
|$T37896| DCD	|$LN8@CANMIDtoCA|
	DCD	0x40001301
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CANMIDtoCANID@@YAXIPATCAN_ID@@@Z| PROC ; CANMIDtoCANID

; 309  : {

  00000		 |$LN8@CANMIDtoCA|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37893|
  00004	e1a0e001	 mov         lr, r1

; 310  :     if (canmid & CANMID_EXTENDED)

  00008	e3100102	 tst         r0, #2, 2

; 311  :     {
; 312  :         pId->s_extended.extended = 1;
; 313  :         pId->s_extended.id = canmid & CANMID_IDMASK;

  0000c	159e3000	 ldrne       r3, [lr]
  00010	13c0220e	 bicne       r2, r0, #0xE, 4

; 314  :     }
; 315  :     else
; 316  :     {
; 317  :         pId->s_standard.extended = 0;
; 318  :         pId->s_standard.id = (canmid >> 18) & 0x7FF;

  00014	059e1000	 ldreq       r1, [lr]
  00018	1203320e	 andne       r3, r3, #0xE, 4
  0001c	11833002	 orrne       r3, r3, r2
  00020	13833102	 orrne       r3, r3, #2, 2
  00024	03e0349f	 mvneq       r3, #0x9F, 8
  00028	03a0257f	 moveq       r2, #0x7F, 10
  0002c	0223373f	 eoreq       r3, r3, #0x3F, 14
  00030	0382270f	 orreq       r2, r2, #0xF, 14
  00034	00011003	 andeq       r1, r1, r3
  00038	00003002	 andeq       r3, r0, r2
  0003c	01813003	 orreq       r3, r1, r3
  00040	e58e3000	 str         r3, [lr]

; 319  :     }
; 320  : }

  00044	e49de004	 ldr         lr, [sp], #4
  00048	e12fff1e	 bx          lr
  0004c		 |$M37894|

			 ENDP  ; |?CANMIDtoCANID@@YAXIPATCAN_ID@@@Z|, CANMIDtoCANID

	EXPORT	|?MaskToCANLAM@@YAITCAN_ID@@@Z|		; MaskToCANLAM

  00000			 AREA	 |.pdata|, PDATA
|$T37906| DCD	|$LN7@MaskToCANL|
	DCD	0x40000b00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?MaskToCANLAM@@YAITCAN_ID@@@Z| PROC	; MaskToCANLAM

; 324  : {

  00000		 |$LN7@MaskToCANL|
  00000		 |$M37903|

; 325  :     if (id.s_extended.extended)

  00000	e3100102	 tst         r0, #2, 2

; 326  :     {
; 327  :         return (~id.s_extended.id) & CANMID_IDMASK;

  00004	13e0320e	 mvnne       r3, #0xE, 4
  00008	11c30000	 bicne       r0, r3, r0
  0000c	03a03c07	 moveq       r3, #7, 24

; 328  :     }
; 329  :     else
; 330  :     {
; 331  :         return CANLAM_LAMI | (((~id.s_standard.id) & 0x7FF) << 18);

  00010	038330ff	 orreq       r3, r3, #0xFF
  00014	03e01c1f	 mvneq       r1, #0x1F, 24
  00018	01c32920	 biceq       r2, r3, r0, lsr #18
  0001c	022130ff	 eoreq       r3, r1, #0xFF
  00020	01823003	 orreq       r3, r2, r3
  00024	01a00903	 moveq       r0, r3, lsl #18

; 332  :     }
; 333  : }

  00028	e12fff1e	 bx          lr
  0002c		 |$M37904|

			 ENDP  ; |?MaskToCANLAM@@YAITCAN_ID@@@Z|, MaskToCANLAM

	EXPORT	|?StrobeActive@@YAXPAUT_CAN_DEVICE@@H@Z| ; StrobeActive
	IMPORT	|GPIOSetBit|
	IMPORT	|GPIOClrBit|

  00000			 AREA	 |.pdata|, PDATA
|$T37917| DCD	|$LN9@StrobeActi|
	DCD	0x40000f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?StrobeActive@@YAXPAUT_CAN_DEVICE@@H@Z| PROC ; StrobeActive

; 336  : {

  00000		 |$LN9@StrobeActi|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37914|

; 337  :     if (fActive ^ (pDevice->StrobePinPolarity != ACTIVE_LOW))

  00004	e590301c	 ldr         r3, [r0, #0x1C]
  00008	e3530000	 cmp         r3, #0
  0000c	13a03001	 movne       r3, #1
  00010	03a03000	 moveq       r3, #0
  00014	e1330001	 teq         r3, r1

; 338  :     {
; 339  :         GPIOClrBit(pDevice->hGpio,pDevice->StrobePin);

  00018	e5901018	 ldr         r1, [r0, #0x18]
  0001c	e5900024	 ldr         r0, [r0, #0x24]
  00020	0a000002	 beq         |$LN2@StrobeActi|
  00024	eb000000	 bl          GPIOClrBit

; 344  :     }
; 345  : }

  00028	e49de004	 ldr         lr, [sp], #4
  0002c	e12fff1e	 bx          lr
  00030		 |$LN2@StrobeActi|

; 340  :     }
; 341  :     else
; 342  :     {
; 343  :         GPIOSetBit(pDevice->hGpio,pDevice->StrobePin);

  00030	eb000000	 bl          GPIOSetBit

; 344  :     }
; 345  : }

  00034	e49de004	 ldr         lr, [sp], #4
  00038	e12fff1e	 bx          lr
  0003c		 |$M37915|

			 ENDP  ; |?StrobeActive@@YAXPAUT_CAN_DEVICE@@H@Z|, StrobeActive

	EXPORT	|?CreateMsgQueuePair@@YAHPAGPAPAX1KKK@Z| ; CreateMsgQueuePair
	IMPORT	|CloseHandle|
	IMPORT	|OpenMsgQueue|
	IMPORT	|CreateMsgQueue|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T37933| DCD	|$LN12@CreateMsgQ|
	DCD	0x40002502
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\hecc\omap_hecc.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CreateMsgQueuePair@@YAHPAGPAPAX1KKK@Z| PROC ; CreateMsgQueuePair

; 347  : {

  00000		 |$LN12@CreateMsgQ|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd014	 sub         sp, sp, #0x14
  00008		 |$M37930|
  00008	e1a05002	 mov         r5, r2
  0000c	e1b06001	 movs        r6, r1

; 348  :     MSGQUEUEOPTIONS msqQueueOptions;
; 349  : 
; 350  :     if ((pReader == NULL) || (pWriter==NULL))

  00010	0a00001b	 beq         |$LN4@CreateMsgQ|
  00014	e3550000	 cmp         r5, #0
  00018	0a000019	 beq         |$LN4@CreateMsgQ|

; 353  :     }
; 354  : 
; 355  :     msqQueueOptions.bReadAccess = TRUE;
; 356  :     msqQueueOptions.dwMaxMessages = MaxElem;
; 357  :     msqQueueOptions.cbMaxMessage = ElemSize;

  0001c	e59de028	 ldr         lr, [sp, #0x28]

; 358  :     msqQueueOptions.dwFlags = flags;

  00020	e59d402c	 ldr         r4, [sp, #0x2C]
  00024	e3a02001	 mov         r2, #1

; 359  :     msqQueueOptions.dwSize = sizeof(msqQueueOptions);

  00028	e3a07014	 mov         r7, #0x14

; 360  : 
; 361  :     *pReader = CreateMsgQueue(name,&msqQueueOptions);

  0002c	e28d1000	 add         r1, sp, #0
  00030	e58de00c	 str         lr, [sp, #0xC]
  00034	e58d4004	 str         r4, [sp, #4]
  00038	e58d2010	 str         r2, [sp, #0x10]
  0003c	e58d3008	 str         r3, [sp, #8]
  00040	e58d7000	 str         r7, [sp]
  00044	eb000000	 bl          CreateMsgQueue
  00048	e5860000	 str         r0, [r6]

; 362  :     if (*pReader != INVALID_HANDLE_VALUE)

  0004c	e3700001	 cmn         r0, #1
  00050	0a00000b	 beq         |$LN4@CreateMsgQ|

; 363  :     {
; 364  :         msqQueueOptions.bReadAccess = FALSE;

  00054	e3a03000	 mov         r3, #0

; 365  :         *pWriter = OpenMsgQueue(GetCurrentProcess(),*pReader,&msqQueueOptions);

  00058	e1a01000	 mov         r1, r0
  0005c	e3a00042	 mov         r0, #0x42
  00060	e28d2000	 add         r2, sp, #0
  00064	e58d3010	 str         r3, [sp, #0x10]
  00068	eb000000	 bl          OpenMsgQueue

; 366  :         if (*pWriter != INVALID_HANDLE_VALUE)

  0006c	e3700001	 cmn         r0, #1
  00070	e5850000	 str         r0, [r5]

; 367  :         {
; 368  :             return TRUE;

  00074	13a00001	 movne       r0, #1
  00078	1a000002	 bne         |$LN6@CreateMsgQ|

; 369  :         }
; 370  :         else
; 371  :         {
; 372  :             CloseHandle(*pReader);

  0007c	e5960000	 ldr         r0, [r6]
  00080	eb000000	 bl          CloseHandle
  00084		 |$LN4@CreateMsgQ|

; 351  :     {
; 352  :         return FALSE;

  00084	e3a00000	 mov         r0, #0
  00088		 |$LN6@CreateMsgQ|

; 373  :         }
; 374  :     }
; 375  :     return FALSE;
; 376  : }

  00088	e28dd014	 add         sp, sp, #0x14
  0008c	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00090	e12fff1e	 bx          lr
  00094		 |$M37931|

			 ENDP  ; |?CreateMsgQueuePair@@YAHPAGPAPAX1KKK@Z|, CreateMsgQueuePair

	EXPORT	|?CAN_Deinit@@YAHK@Z|			; CAN_Deinit
	IMPORT	|LocalFree|
	IMPORT	|EnableDeviceClocks|
	IMPORT	|ReleaseDevicePads|
	IMPORT	|GPIOClose|
	IMPORT	|DeleteCriticalSection|
	IMPORT	|MmUnmapIoSpace|
	IMPORT	|KernelIoControl|
	IMPORT	|InterruptDisable|
	IMPORT	|WaitForSingleObject|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T37948| DCD	|$LN14@CAN_Deinit|
	DCD	0x40003d02
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\hecc\omap_hecc.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CAN_Deinit@@YAHK@Z| PROC		; CAN_Deinit

; 559  : {

  00000		 |$LN14@CAN_Deinit|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M37945|
  00008	e1b04000	 movs        r4, r0

; 560  :     BOOL rc = FALSE;

  0000c	e3a00000	 mov         r0, #0

; 561  :     T_CAN_DEVICE *pDevice = (T_CAN_DEVICE*) context;
; 562  : 
; 563  :     if (pDevice == NULL)

  00010	0a000033	 beq         |$cleanUp$36859|

; 564  :     {
; 565  :         goto cleanUp;
; 566  :     }
; 567  :     if (pDevice->hIntrThread)

  00014	e5943008	 ldr         r3, [r4, #8]
  00018	e3530000	 cmp         r3, #0
  0001c	0a000007	 beq         |$LN5@CAN_Deinit|

; 568  :     {
; 569  :         pDevice->fTerminateThread = TRUE;
; 570  :         SetEvent(pDevice->hIntrEvent);

  00020	e5940004	 ldr         r0, [r4, #4]
  00024	e3a03001	 mov         r3, #1
  00028	e3a01003	 mov         r1, #3
  0002c	e584300c	 str         r3, [r4, #0xC]
  00030	eb000000	 bl          EventModify

; 571  :         WaitForSingleObject(pDevice->hIntrThread,INFINITE);

  00034	e5940008	 ldr         r0, [r4, #8]
  00038	e3e01000	 mvn         r1, #0
  0003c	eb000000	 bl          WaitForSingleObject
  00040		 |$LN5@CAN_Deinit|

; 572  :     }
; 573  :     if (pDevice->hIntrEvent)

  00040	e5943004	 ldr         r3, [r4, #4]
  00044	e3530000	 cmp         r3, #0

; 574  :     {
; 575  :         CloseHandle(pDevice->hIntrEvent);

  00048	11a00003	 movne       r0, r3
  0004c	1b000000	 blne        CloseHandle

; 576  :     }
; 577  :     if (pDevice->dwSysintr != SYSINTR_UNDEFINED)

  00050	e5940000	 ldr         r0, [r4]
  00054	e3700001	 cmn         r0, #1
  00058	0a000008	 beq         |$LN3@CAN_Deinit|

; 578  :     {
; 579  :         InterruptDisable(pDevice->dwSysintr);

  0005c	eb000000	 bl          InterruptDisable

; 580  :         KernelIoControl(IOCTL_HAL_RELEASE_SYSINTR,&pDevice->dwSysintr,sizeof(pDevice->dwSysintr),NULL,0,NULL);        

  00060	e59f0088	 ldr         r0, [pc, #0x88]
  00064	e3a0e000	 mov         lr, #0
  00068	e3a03000	 mov         r3, #0
  0006c	e3a02004	 mov         r2, #4
  00070	e1a01004	 mov         r1, r4
  00074	e58de004	 str         lr, [sp, #4]
  00078	e58de000	 str         lr, [sp]
  0007c	eb000000	 bl          KernelIoControl
  00080		 |$LN3@CAN_Deinit|

; 581  :     }
; 582  :     if (pDevice->pCanRegs)

  00080	e594302c	 ldr         r3, [r4, #0x2C]
  00084	e3530000	 cmp         r3, #0

; 583  :     {
; 584  :         MmUnmapIoSpace(pDevice->pCanRegs,sizeof(OMAP_HECC_SCC_REGS));

  00088	13a01dc6	 movne       r1, #0xC6, 26
  0008c	11a00003	 movne       r0, r3
  00090	1b000000	 blne        MmUnmapIoSpace

; 585  :     }
; 586  :     DeleteCriticalSection(&pDevice->regcs);

  00094	e2840030	 add         r0, r4, #0x30
  00098	eb000000	 bl          DeleteCriticalSection

; 587  :     DeleteCriticalSection(&pDevice->filterscs);

  0009c	e2840044	 add         r0, r4, #0x44
  000a0	eb000000	 bl          DeleteCriticalSection

; 588  : 
; 589  :     if (pDevice->hGpio)

  000a4	e5943024	 ldr         r3, [r4, #0x24]
  000a8	e3530000	 cmp         r3, #0
  000ac	0a000004	 beq         |$LN1@CAN_Deinit|

; 590  :     {
; 591  :         StrobeActive(pDevice,FALSE);

  000b0	e3a01000	 mov         r1, #0
  000b4	e1a00004	 mov         r0, r4
  000b8	eb000000	 bl          |?StrobeActive@@YAXPAUT_CAN_DEVICE@@H@Z|

; 592  :         GPIOClose(pDevice->hGpio);

  000bc	e5940024	 ldr         r0, [r4, #0x24]
  000c0	eb000000	 bl          GPIOClose
  000c4		 |$LN1@CAN_Deinit|

; 593  :     }
; 594  :     ReleaseDevicePads(pDevice->device);

  000c4	e5940028	 ldr         r0, [r4, #0x28]
  000c8	eb000000	 bl          ReleaseDevicePads

; 595  : 
; 596  :     EnableDeviceClocks(pDevice->device,FALSE);

  000cc	e5940028	 ldr         r0, [r4, #0x28]
  000d0	e3a01000	 mov         r1, #0
  000d4	eb000000	 bl          EnableDeviceClocks

; 597  : 
; 598  :     LocalFree(pDevice);

  000d8	e1a00004	 mov         r0, r4
  000dc	eb000000	 bl          LocalFree

; 599  : 
; 600  : 
; 601  :     rc = TRUE;

  000e0	e3a00001	 mov         r0, #1
  000e4		 |$cleanUp$36859|

; 602  : 
; 603  : cleanUp:
; 604  : 
; 605  :     return rc;
; 606  : }

  000e4	e28dd008	 add         sp, sp, #8
  000e8	e8bd4010	 ldmia       sp!, {r4, lr}
  000ec	e12fff1e	 bx          lr
  000f0		 |$LN15@CAN_Deinit|
  000f0		 |$LN16@CAN_Deinit|
  000f0	010100d8	 DCD         0x10100d8
  000f4		 |$M37946|

			 ENDP  ; |?CAN_Deinit@@YAHK@Z|, CAN_Deinit

	EXPORT	|?ConfigureTxMailbox@@YAHPAUT_CAN_DEVICE@@K@Z| ; ConfigureTxMailbox
	IMPORT	|LeaveCriticalSection|
	IMPORT	|EnterCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T37961| DCD	|$LN5@ConfigureT|
	DCD	0x40001701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ConfigureTxMailbox@@YAHPAUT_CAN_DEVICE@@K@Z| PROC ; ConfigureTxMailbox

; 608  : {

  00000		 |$LN5@ConfigureT|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37958|
  00004	e1a05001	 mov         r5, r1
  00008	e1a04000	 mov         r4, r0

; 609  :     EnterCriticalSection(&pDevice->regcs);

  0000c	e2840030	 add         r0, r4, #0x30
  00010	eb000000	 bl          EnterCriticalSection

; 610  :     CLRREG32(&pDevice->pCanRegs->CANME,(1<<index));  

  00014	e594202c	 ldr         r2, [r4, #0x2C]
  00018	e3a01001	 mov         r1, #1

; 611  :     CLRREG32(&pDevice->pCanRegs->CANMIL,(1<<index));
; 612  :     SETREG32(&pDevice->pCanRegs->CANMIM,(1<<index));    
; 613  :     LeaveCriticalSection(&pDevice->regcs);

  0001c	e2840030	 add         r0, r4, #0x30
  00020	e5923000	 ldr         r3, [r2]
  00024	e1c33511	 bic         r3, r3, r1, lsl r5
  00028	e5823000	 str         r3, [r2]
  0002c	e594202c	 ldr         r2, [r4, #0x2C]
  00030	e592304c	 ldr         r3, [r2, #0x4C]
  00034	e1c33511	 bic         r3, r3, r1, lsl r5
  00038	e582304c	 str         r3, [r2, #0x4C]
  0003c	e594202c	 ldr         r2, [r4, #0x2C]
  00040	e5923048	 ldr         r3, [r2, #0x48]
  00044	e1833511	 orr         r3, r3, r1, lsl r5
  00048	e5823048	 str         r3, [r2, #0x48]
  0004c	eb000000	 bl          LeaveCriticalSection

; 614  :     return TRUE;

  00050	e3a00001	 mov         r0, #1

; 615  : }

  00054	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00058	e12fff1e	 bx          lr
  0005c		 |$M37959|

			 ENDP  ; |?ConfigureTxMailbox@@YAHPAUT_CAN_DEVICE@@K@Z|, ConfigureTxMailbox

	EXPORT	|?CAN_Open@@YAKKKK@Z|			; CAN_Open
	IMPORT	|malloc|

  00000			 AREA	 |.pdata|, PDATA
|$T37973| DCD	|$LN8@CAN_Open|
	DCD	0x40001201
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CAN_Open@@YAKKKK@Z| PROC		; CAN_Open

; 630  : {

  00000		 |$LN8@CAN_Open|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37970|
  00004	e1b05000	 movs        r5, r0

; 631  :     T_CAN_DEVICE *pDevice = (T_CAN_DEVICE *)context;
; 632  :     T_CAN_OPEN_CTXT *pCtxt;
; 633  : 
; 634  :     UNREFERENCED_PARAMETER(accessCode);
; 635  :     UNREFERENCED_PARAMETER(shareMode);
; 636  : 
; 637  :     if (pDevice == NULL) return 0;

  00008	1a000001	 bne         |$LN2@CAN_Open|
  0000c		 |$LN5@CAN_Open|
  0000c	e3a04000	 mov         r4, #0
  00010	ea000009	 b           |$LN3@CAN_Open|
  00014		 |$LN2@CAN_Open|

; 638  : 
; 639  :     pCtxt = (T_CAN_OPEN_CTXT*) malloc(sizeof(T_CAN_OPEN_CTXT));

  00014	e3a00004	 mov         r0, #4
  00018	eb000000	 bl          malloc
  0001c	e1b04000	 movs        r4, r0

; 640  :     if (pCtxt ==NULL) return 0;

  00020	0afffff9	 beq         |$LN5@CAN_Open|

; 641  : 
; 642  :     memset(pCtxt,0,sizeof(T_CAN_OPEN_CTXT));
; 643  :     pCtxt->pDevice = pDevice;
; 644  : 
; 645  :     EnableDeviceClocks(pDevice->device,TRUE);

  00024	e5950028	 ldr         r0, [r5, #0x28]
  00028	e3a03000	 mov         r3, #0
  0002c	e5843000	 str         r3, [r4]
  00030	e3a01001	 mov         r1, #1
  00034	e5845000	 str         r5, [r4]
  00038	eb000000	 bl          EnableDeviceClocks

; 646  :    
; 647  :     return (DWORD) pCtxt;

  0003c		 |$LN3@CAN_Open|

; 648  : }

  0003c	e1a00004	 mov         r0, r4
  00040	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00044	e12fff1e	 bx          lr
  00048		 |$M37971|

			 ENDP  ; |?CAN_Open@@YAKKKK@Z|, CAN_Open

	EXPORT	|?CAN_Close@@YAHK@Z|			; CAN_Close

  00000			 AREA	 |.pdata|, PDATA
|$T37984| DCD	|$LN7@CAN_Close|
	DCD	0x40001201
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CAN_Close@@YAHK@Z| PROC		; CAN_Close

; 660  : {

  00000		 |$LN7@CAN_Close|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37981|
  00004	e1b05000	 movs        r5, r0

; 661  :     T_CAN_OPEN_CTXT *pCtxt = (T_CAN_OPEN_CTXT*) context;
; 662  :     if (pCtxt)

  00008	0a00000b	 beq         |$LN2@CAN_Close|

; 663  :     {
; 664  :         T_CAN_DEVICE *pDevice = pCtxt->pDevice;

  0000c	e5954000	 ldr         r4, [r5]

; 665  :         StrobeActive(pDevice,FALSE);

  00010	e3a01000	 mov         r1, #0
  00014	e1a00004	 mov         r0, r4
  00018	eb000000	 bl          |?StrobeActive@@YAXPAUT_CAN_DEVICE@@H@Z|

; 666  :         EnableDeviceClocks(pDevice->device,FALSE);

  0001c	e5940028	 ldr         r0, [r4, #0x28]
  00020	e3a01000	 mov         r1, #0
  00024	eb000000	 bl          EnableDeviceClocks

; 667  :         LocalFree(pCtxt);        

  00028	e1a00005	 mov         r0, r5
  0002c	eb000000	 bl          LocalFree

; 668  :         return TRUE;

  00030	e3a00001	 mov         r0, #1

; 673  :     }
; 674  : }

  00034	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$LN2@CAN_Close|

; 669  :     }
; 670  :     else
; 671  :     {
; 672  :         return FALSE;

  0003c	e3a00000	 mov         r0, #0

; 673  :     }
; 674  : }

  00040	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00044	e12fff1e	 bx          lr
  00048		 |$M37982|

			 ENDP  ; |?CAN_Close@@YAHK@Z|, CAN_Close

	EXPORT	|?CAN_PowerUp@@YAXK@Z|			; CAN_PowerUp

  00000			 AREA	 |.pdata|, PDATA
|$T37991| DCD	|$LN5@CAN_PowerU|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CAN_PowerUp@@YAXK@Z| PROC		; CAN_PowerUp

; 688  : {

  00000		 |$LN5@CAN_PowerU|
  00000		 |$M37988|

; 689  :     UNREFERENCED_PARAMETER(context);
; 690  : }

  00000	e12fff1e	 bx          lr
  00004		 |$M37989|

			 ENDP  ; |?CAN_PowerUp@@YAXK@Z|, CAN_PowerUp

	EXPORT	|?CAN_PowerDown@@YAXK@Z|		; CAN_PowerDown

  00000			 AREA	 |.pdata|, PDATA
|$T37998| DCD	|$LN5@CAN_PowerD|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CAN_PowerDown@@YAXK@Z| PROC		; CAN_PowerDown

; 702  : {

  00000		 |$LN5@CAN_PowerD|
  00000		 |$M37995|

; 703  :     UNREFERENCED_PARAMETER(context);
; 704  : }

  00000	e12fff1e	 bx          lr
  00004		 |$M37996|

			 ENDP  ; |?CAN_PowerDown@@YAXK@Z|, CAN_PowerDown

	EXPORT	|?SendMsg@@YAXPAUT_CAN_DEVICE@@PAUCAN_MESSAGE@@KE@Z| ; SendMsg

  00000			 AREA	 |.pdata|, PDATA
|$T38019| DCD	|$LN9@SendMsg|
	DCD	0x40001601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SendMsg@@YAXPAUT_CAN_DEVICE@@PAUCAN_MESSAGE@@KE@Z| PROC ; SendMsg

; 900  : {    

  00000		 |$LN9@SendMsg|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M38016|
  00004	e1a04003	 mov         r4, r3

; 901  :     OMAP_HECC_SCC_MAILBOX* pMbx;    
; 902  :     pMbx = &pDevice->pCanRegs->MailBoxes[mailbox];

  00008	e590002c	 ldr         r0, [r0, #0x2C]

; 903  :     pMbx->CANMDH = pMsg->MDH;

  0000c	e591e004	 ldr         lr, [r1, #4]
  00010	e2822c02	 add         r2, r2, #2, 24
  00014	e0800202	 add         r0, r0, r2, lsl #4
  00018	e580e00c	 str         lr, [r0, #0xC]

; 904  :     pMbx->CANMDL = pMsg->MDL;

  0001c	e5912000	 ldr         r2, [r1]
  00020	e5802008	 str         r2, [r0, #8]

; 905  :     pMbx->CANMID = IDtoCANMID(pMsg->id);

  00024	e591200c	 ldr         r2, [r1, #0xC]
  00028	e3120102	 tst         r2, #2, 2
  0002c	13c2220e	 bicne       r2, r2, #0xE, 4
  00030	03a0357f	 moveq       r3, #0x7F, 10
  00034	13822102	 orrne       r2, r2, #2, 2
  00038	0383370f	 orreq       r3, r3, #0xF, 14
  0003c	00022003	 andeq       r2, r2, r3
  00040	e5802000	 str         r2, [r0]

; 906  :     pMbx->CANMCF = pMsg->length | (TPL << 8);        

  00044	e5d13008	 ldrb        r3, [r1, #8]
  00048	e1833404	 orr         r3, r3, r4, lsl #8
  0004c	e5803004	 str         r3, [r0, #4]

; 907  : }

  00050	e8bd4010	 ldmia       sp!, {r4, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$M38017|

			 ENDP  ; |?SendMsg@@YAXPAUT_CAN_DEVICE@@PAUCAN_MESSAGE@@KE@Z|, SendMsg

	EXPORT	|?StartTransmit@@YAXPAUT_CAN_DEVICE@@@Z| ; StartTransmit
	IMPORT	|InterlockedIncrement|
	IMPORT	|InterlockedDecrement|
	IMPORT	|ReadMsgQueue|

  00000			 AREA	 |.pdata|, PDATA
|$T38035| DCD	|$LN17@StartTrans|
	DCD	0x40003f02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?StartTransmit@@YAXPAUT_CAN_DEVICE@@@Z| PROC ; StartTransmit

; 910  : {        

  00000		 |$LN17@StartTrans|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd020	 sub         sp, sp, #0x20
  00008		 |$M38032|
  00008	e1a04000	 mov         r4, r0

; 911  :     DWORD trs;
; 912  :     OMAP_HECC_SCC_REGS* pRegs = pDevice->pCanRegs;

  0000c	e594602c	 ldr         r6, [r4, #0x2C]

; 913  : 
; 914  :     trs = INREG32(&pRegs->CANTRS);
; 915  : 
; 916  :     //If we still have some mailbox waiting to transmit, we do no nothing in order to
; 917  :     //keep a correct transmit order
; 918  :     if ((trs & pDevice->TxMailBoxMask) != 0)

  00010	e59420c0	 ldr         r2, [r4, #0xC0]
  00014	e5963008	 ldr         r3, [r6, #8]
  00018	e1120003	 tst         r2, r3
  0001c	1a000032	 bne         |$LN9@StartTrans|

; 919  :     {          
; 920  :         return;
; 921  :     }
; 922  : 
; 923  : 
; 924  : 
; 925  :     // All TX mailboxes are free. we fill them all with data
; 926  :     EnterCriticalSection(&pDevice->regcs);    

  00020	e2840030	 add         r0, r4, #0x30
  00024	eb000000	 bl          EnterCriticalSection

; 927  :     CLRREG32(&pRegs->CANME,pDevice->TxMailBoxMask);

  00028	e59420c0	 ldr         r2, [r4, #0xC0]
  0002c	e5963000	 ldr         r3, [r6]

; 928  :     for (int TxMailBox=LAST_TX_MAILBOX;TxMailBox>=FIRST_TX_MAILBOX;TxMailBox--)

  00030	e59fa0c0	 ldr         r10, [pc, #0xC0]
  00034	e3a09015	 mov         r9, #0x15
  00038	e1c33002	 bic         r3, r3, r2
  0003c	e5863000	 str         r3, [r6]
  00040	e28d8008	 add         r8, sp, #8
  00044	e3a0b000	 mov         r11, #0
  00048		 |$LL7@StartTrans|

; 929  :     {            
; 930  :         DWORD flags;
; 931  :         DWORD nbRead;
; 932  :         CAN_MESSAGE msg;               
; 933  : 
; 934  :         int priority=0;

  00048	e3a05000	 mov         r5, #0
  0004c	e1a07004	 mov         r7, r4
  00050		 |$LL4@StartTrans|

; 935  :         while ( (priority <NB_TX_PRIORITIES) && (ReadMsgQueue(pDevice->TxMsgQ[priority][MSQ_READER],&msg,sizeof(msg),&nbRead,0,&flags) == FALSE))

  00050	e5970060	 ldr         r0, [r7, #0x60]
  00054	e28d300c	 add         r3, sp, #0xC
  00058	e3a02010	 mov         r2, #0x10
  0005c	e28d1010	 add         r1, sp, #0x10
  00060	e58d8004	 str         r8, [sp, #4]
  00064	e58db000	 str         r11, [sp]
  00068	eb000000	 bl          ReadMsgQueue
  0006c	e3500000	 cmp         r0, #0
  00070	1a000003	 bne         |$LN3@StartTrans|

; 936  :         {
; 937  :             priority++;

  00074	e2855001	 add         r5, r5, #1
  00078	e3550003	 cmp         r5, #3
  0007c	e2877008	 add         r7, r7, #8
  00080	bafffff2	 blt         |$LL4@StartTrans|
  00084		 |$LN3@StartTrans|

; 938  :         }
; 939  : 
; 940  :         if (priority <NB_TX_PRIORITIES)

  00084	e3550003	 cmp         r5, #3
  00088	aa000015	 bge         |$LN2@StartTrans|

; 941  :         {                    
; 942  :             SendMsg(pDevice,&msg,TxMailBox,PriorityMapping[priority]);

  0008c	e7d5300a	 ldrb        r3, [r5, +r10]
  00090	e1a02009	 mov         r2, r9
  00094	e28d1010	 add         r1, sp, #0x10
  00098	e1a00004	 mov         r0, r4
  0009c	eb000000	 bl          |?SendMsg@@YAXPAUT_CAN_DEVICE@@PAUCAN_MESSAGE@@KE@Z|

; 943  :             pDevice->TxMailBoxAvailableMask &= ~(1<<TxMailBox);

  000a0	e59430bc	 ldr         r3, [r4, #0xBC]
  000a4	e3a0e001	 mov         lr, #1
  000a8	e1a0191e	 mov         r1, lr, lsl r9
  000ac	e1c3391e	 bic         r3, r3, lr, lsl r9
  000b0	e58430bc	 str         r3, [r4, #0xBC]

; 944  :             SETREG32(&pRegs->CANME,1<<TxMailBox);

  000b4	e5962000	 ldr         r2, [r6]

; 945  :             OUTREG32(&pRegs->CANTRS,1<<TxMailBox);
; 946  :             
; 947  :             InterlockedDecrement(&pDevice->canStatus.currentTxMsg[priority]);

  000b8	e2853020	 add         r3, r5, #0x20
  000bc	e0840103	 add         r0, r4, r3, lsl #2
  000c0	e182391e	 orr         r3, r2, lr, lsl r9
  000c4	e5863000	 str         r3, [r6]
  000c8	e5861008	 str         r1, [r6, #8]
  000cc	eb000000	 bl          InterlockedDecrement

; 948  :             InterlockedIncrement(&pDevice->canStatus.TotalSent);

  000d0	e28400b0	 add         r0, r4, #0xB0
  000d4	eb000000	 bl          InterlockedIncrement
  000d8	e2499001	 sub         r9, r9, #1
  000dc	e3590013	 cmp         r9, #0x13
  000e0	aaffffd8	 bge         |$LL7@StartTrans|
  000e4		 |$LN2@StartTrans|

; 949  :         }
; 950  :         else
; 951  :         {
; 952  :             break;
; 953  :         }                   
; 954  :     }    
; 955  :     LeaveCriticalSection(&pDevice->regcs);

  000e4	e2840030	 add         r0, r4, #0x30
  000e8	eb000000	 bl          LeaveCriticalSection
  000ec		 |$LN9@StartTrans|

; 956  :         
; 957  : }

  000ec	e28dd020	 add         sp, sp, #0x20
  000f0	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  000f4	e12fff1e	 bx          lr
  000f8		 |$LN18@StartTrans|
  000f8		 |$LN19@StartTrans|
  000f8	00000000	 DCD         |PriorityMapping|
  000fc		 |$M38033|

			 ENDP  ; |?StartTransmit@@YAXPAUT_CAN_DEVICE@@@Z|, StartTransmit

	EXPORT	|?HandleTXMailboxInterrupt@@YAXPAUT_CAN_DEVICE@@@Z| ; HandleTXMailboxInterrupt

  00000			 AREA	 |.pdata|, PDATA
|$T38052| DCD	|$LN11@HandleTXMa|
	DCD	0x40001d01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?HandleTXMailboxInterrupt@@YAXPAUT_CAN_DEVICE@@@Z| PROC ; HandleTXMailboxInterrupt

; 959  : {    

  00000		 |$LN11@HandleTXMa|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M38049|
  00004	e1a04000	 mov         r4, r0

; 960  :     DWORD canaa,canta;
; 961  :     OMAP_HECC_SCC_REGS* pRegs = pDevice->pCanRegs;

  00008	e594502c	 ldr         r5, [r4, #0x2C]

; 962  : 
; 963  :     //Handle TX mailboxes
; 964  :     canaa = INREG32(&pRegs->CANAA);

  0000c	e5953014	 ldr         r3, [r5, #0x14]
  00010	e1b06003	 movs        r6, r3

; 965  :     if (canaa)

  00014	0a000007	 beq         |$LN2@HandleTXMa|

; 966  :     {
; 967  :         RETAILMSG(0,(TEXT("TX interrupt (abort) 0x%x\r\n"),canaa));
; 968  :         OUTREG32(&pRegs->CANTA,canaa);
; 969  :         EnterCriticalSection(&pDevice->regcs);

  00018	e2840030	 add         r0, r4, #0x30
  0001c	e5856010	 str         r6, [r5, #0x10]
  00020	eb000000	 bl          EnterCriticalSection

; 970  :         pDevice->TxMailBoxAvailableMask |= canaa;

  00024	e59430bc	 ldr         r3, [r4, #0xBC]

; 971  :         LeaveCriticalSection(&pDevice->regcs);

  00028	e2840030	 add         r0, r4, #0x30
  0002c	e1833006	 orr         r3, r3, r6
  00030	e58430bc	 str         r3, [r4, #0xBC]
  00034	eb000000	 bl          LeaveCriticalSection
  00038		 |$LN2@HandleTXMa|

; 972  :     }        
; 973  : 
; 974  :     canta = INREG32(&pRegs->CANTA);

  00038	e5953010	 ldr         r3, [r5, #0x10]
  0003c	e1b06003	 movs        r6, r3

; 975  :     if (canta)

  00040	0a000007	 beq         |$LN1@HandleTXMa|

; 976  :     {
; 977  :         RETAILMSG(0,(TEXT("TX interrupt (acknoledge) 0x%x\r\n"),canta));
; 978  :         OUTREG32(&pRegs->CANTA,canta);
; 979  :         EnterCriticalSection(&pDevice->regcs);

  00044	e2840030	 add         r0, r4, #0x30
  00048	e5856010	 str         r6, [r5, #0x10]
  0004c	eb000000	 bl          EnterCriticalSection

; 980  :         pDevice->TxMailBoxAvailableMask |= canta;

  00050	e59430bc	 ldr         r3, [r4, #0xBC]

; 981  :         LeaveCriticalSection(&pDevice->regcs);

  00054	e2840030	 add         r0, r4, #0x30
  00058	e1833006	 orr         r3, r3, r6
  0005c	e58430bc	 str         r3, [r4, #0xBC]
  00060	eb000000	 bl          LeaveCriticalSection
  00064		 |$LN1@HandleTXMa|

; 982  :     }
; 983  :     StartTransmit(pDevice);

  00064	e1a00004	 mov         r0, r4
  00068	eb000000	 bl          |?StartTransmit@@YAXPAUT_CAN_DEVICE@@@Z|

; 984  : 
; 985  : }

  0006c	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00070	e12fff1e	 bx          lr
  00074		 |$M38050|

			 ENDP  ; |?HandleTXMailboxInterrupt@@YAXPAUT_CAN_DEVICE@@@Z|, HandleTXMailboxInterrupt

	EXPORT	|?FindClassFilterFromMailbox@@YAPAUCLASS_FILTER_INTERNAL@@PAUT_CAN_DEVICE@@H@Z| ; FindClassFilterFromMailbox

  00000			 AREA	 |.pdata|, PDATA
|$T38071| DCD	|$LN13@FindClassF|
	DCD	0x40000c00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?FindClassFilterFromMailbox@@YAPAUCLASS_FILTER_INTERNAL@@PAUT_CAN_DEVICE@@H@Z| PROC ; FindClassFilterFromMailbox

; 988  : {

  00000		 |$LN13@FindClassF|
  00000		 |$M38068|

; 989  :     CLASS_FILTER_INTERNAL* pCurrent = pDevice->ClassFilterList;   

  00000	e59030d8	 ldr         r3, [r0, #0xD8]
  00004	e1b00003	 movs        r0, r3

; 990  :     while (pCurrent)

  00008	0a000007	 beq         |$LN4@FindClassF|
  0000c	e3a03001	 mov         r3, #1
  00010	e1a02113	 mov         r2, r3, lsl r1
  00014		 |$LL3@FindClassF|

; 991  :     {   
; 992  :         if (pCurrent->mailboxMask & (1<<mailbox))

  00014	e5903014	 ldr         r3, [r0, #0x14]
  00018	e1130002	 tst         r3, r2
  0001c	1a000002	 bne         |$LN4@FindClassF|

; 993  :         {
; 994  :             return pCurrent;
; 995  :         }
; 996  :         pCurrent = (CLASS_FILTER_INTERNAL*) NextElement(&pCurrent->sle);

  00020	e5903000	 ldr         r3, [r0]
  00024	e1b00003	 movs        r0, r3
  00028	1afffff9	 bne         |$LL3@FindClassF|
  0002c		 |$LN4@FindClassF|

; 997  :     }
; 998  :     return pCurrent;
; 999  : }

  0002c	e12fff1e	 bx          lr
  00030		 |$M38069|

			 ENDP  ; |?FindClassFilterFromMailbox@@YAPAUCLASS_FILTER_INTERNAL@@PAUT_CAN_DEVICE@@H@Z|, FindClassFilterFromMailbox

	EXPORT	|?HandleRxOverrun@@YAXPAUT_CAN_DEVICE@@@Z| ; HandleRxOverrun

  00000			 AREA	 |.pdata|, PDATA
|$T38078| DCD	|$LN5@HandleRxOv|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?HandleRxOverrun@@YAXPAUT_CAN_DEVICE@@@Z| PROC ; HandleRxOverrun

; 1125 : {

  00000		 |$LN5@HandleRxOv|
  00000		 |$M38075|

; 1126 :     UNREFERENCED_PARAMETER(pDevice);
; 1127 : 
; 1128 : }

  00000	e12fff1e	 bx          lr
  00004		 |$M38076|

			 ENDP  ; |?HandleRxOverrun@@YAXPAUT_CAN_DEVICE@@@Z|, HandleRxOverrun

	EXPORT	|?HandleBusOffInterrupt@@YAXPAUT_CAN_DEVICE@@@Z| ; HandleBusOffInterrupt
	EXPORT	|??_C@_1CO@FOMMEIDD@?$AAB?$AAU?$AAS?$AA?5?$AAO?$AAF?$AAF?$AA?4?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|NKDbgPrintfW|

  00000			 AREA	 |.pdata|, PDATA
|$T38088| DCD	|$LN7@HandleBusO|
	DCD	0x40000b01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@FOMMEIDD@?$AAB?$AAU?$AAS?$AA?5?$AAO?$AAF?$AAF?$AA?4?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "B"
	DCB	0x0, "U", 0x0, "S", 0x0, " ", 0x0, "O", 0x0, "F", 0x0, "F"
	DCB	0x0, ".", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "u", 0x0, "s", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?HandleBusOffInterrupt@@YAXPAUT_CAN_DEVICE@@@Z| PROC ; HandleBusOffInterrupt

; 1130 : {

  00000		 |$LN7@HandleBusO|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M38085|
  00004	e1a04000	 mov         r4, r0

; 1131 : //    OMAP_HECC_SCC_REGS* pRegs = pDevice->pCanRegs;
; 1132 :     RETAILMSG(1,(TEXT("BUS OFF. status 0x%x\r\n"),pDevice->pCanRegs->CANGIF0));

  00008	e594302c	 ldr         r3, [r4, #0x2C]
  0000c	e59f0014	 ldr         r0, [pc, #0x14]
  00010	e593103c	 ldr         r1, [r3, #0x3C]
  00014	eb000000	 bl          NKDbgPrintfW

; 1133 :     pDevice->canStatus.BusState = BUS_OFF;

  00018	e3a03003	 mov         r3, #3
  0001c	e5843098	 str         r3, [r4, #0x98]

; 1134 : 
; 1135 : }

  00020	e8bd4010	 ldmia       sp!, {r4, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$LN8@HandleBusO|
  00028		 |$LN9@HandleBusO|
  00028	00000000	 DCD         |??_C@_1CO@FOMMEIDD@?$AAB?$AAU?$AAS?$AA?5?$AAO?$AAF?$AAF?$AA?4?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  0002c		 |$M38086|

			 ENDP  ; |?HandleBusOffInterrupt@@YAXPAUT_CAN_DEVICE@@@Z|, HandleBusOffInterrupt

	EXPORT	|?HandleErrorPassiveInterrupt@@YAXPAUT_CAN_DEVICE@@@Z| ; HandleErrorPassiveInterrupt
	EXPORT	|??_C@_1DK@IKHJICBP@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAp?$AAa?$AAs?$AAs?$AAi?$AAv?$AAe?$AA?4?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T38100| DCD	|$LN7@HandleErro|
	DCD	0x40000b01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@IKHJICBP@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAp?$AAa?$AAs?$AAs?$AAi?$AAv?$AAe?$AA?4?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "E"
	DCB	0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "p"
	DCB	0x0, "a", 0x0, "s", 0x0, "s", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, ".", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "u", 0x0, "s", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?HandleErrorPassiveInterrupt@@YAXPAUT_CAN_DEVICE@@@Z| PROC ; HandleErrorPassiveInterrupt

; 1137 : {

  00000		 |$LN7@HandleErro|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M38097|
  00004	e1a04000	 mov         r4, r0

; 1138 : //    OMAP_HECC_SCC_REGS* pRegs = pDevice->pCanRegs;
; 1139 :     RETAILMSG(1,(TEXT("Error passive. status 0x%x\r\n"),pDevice->pCanRegs->CANGIF0));

  00008	e594302c	 ldr         r3, [r4, #0x2C]
  0000c	e59f0014	 ldr         r0, [pc, #0x14]
  00010	e593103c	 ldr         r1, [r3, #0x3C]
  00014	eb000000	 bl          NKDbgPrintfW

; 1140 :     pDevice->canStatus.BusState = ERROR_PASSIVE;

  00018	e3a03002	 mov         r3, #2
  0001c	e5843098	 str         r3, [r4, #0x98]

; 1141 : }

  00020	e8bd4010	 ldmia       sp!, {r4, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$LN8@HandleErro|
  00028		 |$LN9@HandleErro|
  00028	00000000	 DCD         |??_C@_1DK@IKHJICBP@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAp?$AAa?$AAs?$AAs?$AAi?$AAv?$AAe?$AA?4?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  0002c		 |$M38098|

			 ENDP  ; |?HandleErrorPassiveInterrupt@@YAXPAUT_CAN_DEVICE@@@Z|, HandleErrorPassiveInterrupt

	EXPORT	|?HandleWarningLevelInterrupt@@YAXPAUT_CAN_DEVICE@@@Z| ; HandleWarningLevelInterrupt
	EXPORT	|??_C@_1DK@MEOEDCIG@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAl?$AAe?$AAv?$AAe?$AAl?$AA?4?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T38112| DCD	|$LN7@HandleWarn|
	DCD	0x40000b01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@MEOEDCIG@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAl?$AAe?$AAv?$AAe?$AAl?$AA?4?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "W"
	DCB	0x0, "a", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "l", 0x0, "e", 0x0, "v", 0x0, "e", 0x0, "l"
	DCB	0x0, ".", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "u", 0x0, "s", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?HandleWarningLevelInterrupt@@YAXPAUT_CAN_DEVICE@@@Z| PROC ; HandleWarningLevelInterrupt

; 1143 : {

  00000		 |$LN7@HandleWarn|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M38109|
  00004	e1a04000	 mov         r4, r0

; 1144 : //    OMAP_HECC_SCC_REGS* pRegs = pDevice->pCanRegs;
; 1145 :     RETAILMSG(1,(TEXT("Warning level. status 0x%x\r\n"),pDevice->pCanRegs->CANGIF0));

  00008	e594302c	 ldr         r3, [r4, #0x2C]
  0000c	e59f0014	 ldr         r0, [pc, #0x14]
  00010	e593103c	 ldr         r1, [r3, #0x3C]
  00014	eb000000	 bl          NKDbgPrintfW

; 1146 :     pDevice->canStatus.BusState = ERROR_ACTIVE_WARNED;

  00018	e3a03001	 mov         r3, #1
  0001c	e5843098	 str         r3, [r4, #0x98]

; 1147 : }

  00020	e8bd4010	 ldmia       sp!, {r4, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$LN8@HandleWarn|
  00028		 |$LN9@HandleWarn|
  00028	00000000	 DCD         |??_C@_1DK@MEOEDCIG@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAl?$AAe?$AAv?$AAe?$AAl?$AA?4?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  0002c		 |$M38110|

			 ENDP  ; |?HandleWarningLevelInterrupt@@YAXPAUT_CAN_DEVICE@@@Z|, HandleWarningLevelInterrupt

	EXPORT	|?HandleOtherInterrupts@@YAKPAUT_CAN_DEVICE@@@Z| ; HandleOtherInterrupts
	EXPORT	|??_C@_1EA@MJKOPJDB@?$AAH?$AAE?$AAC?$AAC?$AA?5?$AA?3?$AA?5?$AAW?$AAa?$AAk?$AAe?$AA?5?$AAU?$AAp?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAt?$AAp?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DG@OJMHPLO@?$AAH?$AAE?$AAC?$AAC?$AA?5?$AA?3?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAe?$AA?5?$AAd?$AAe?$AAn?$AAi?$AAe?$AAd?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T38133| DCD	|$LN15@HandleOthe|
	DCD	0x40001b01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@MJKOPJDB@?$AAH?$AAE?$AAC?$AAC?$AA?5?$AA?3?$AA?5?$AAW?$AAa?$AAk?$AAe?$AA?5?$AAU?$AAp?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAt?$AAp?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "H"
	DCB	0x0, "E", 0x0, "C", 0x0, "C", 0x0, " ", 0x0, ":", 0x0, " "
	DCB	0x0, "W", 0x0, "a", 0x0, "k", 0x0, "e", 0x0, " ", 0x0, "U"
	DCB	0x0, "p", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "u", 0x0, "t", 0x0, "p", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@OJMHPLO@?$AAH?$AAE?$AAC?$AAC?$AA?5?$AA?3?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAe?$AA?5?$AAd?$AAe?$AAn?$AAi?$AAe?$AAd?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "H"
	DCB	0x0, "E", 0x0, "C", 0x0, "C", 0x0, " ", 0x0, ":", 0x0, " "
	DCB	0x0, "w", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "d", 0x0, "e", 0x0, "n", 0x0, "i", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?HandleOtherInterrupts@@YAKPAUT_CAN_DEVICE@@@Z| PROC ; HandleOtherInterrupts

; 1151 : {

  00000		 |$LN15@HandleOthe|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M38130|

; 1152 :     DWORD clearMask = 0;
; 1153 :     DWORD dwStatus = INREG32(&pDevice->pCanRegs->CANGIF0);

  00004	e590302c	 ldr         r3, [r0, #0x2C]
  00008	e3a04000	 mov         r4, #0
  0000c	e593503c	 ldr         r5, [r3, #0x3C]

; 1154 : //    OMAP_HECC_SCC_REGS* pRegs = pDevice->pCanRegs;
; 1155 :     
; 1156 :     if (dwStatus & CANGIx_RMLIM)

  00010	e3150b02	 tst         r5, #2, 22

; 1157 :     {        
; 1158 :         HandleRxOverrun(pDevice);
; 1159 :         clearMask |= CANGIx_RMLIM;

  00014	13a04b02	 movne       r4, #2, 22

; 1160 :     }
; 1161 :     if (dwStatus & CANGIx_AAIM)

  00018	e3150901	 tst         r5, #1, 18
  0001c	0a000001	 beq         |$LN3@HandleOthe|

; 1162 :     {
; 1163 :         HandleTXMailboxInterrupt(pDevice);

  00020	eb000000	 bl          |?HandleTXMailboxInterrupt@@YAXPAUT_CAN_DEVICE@@@Z|

; 1164 :         clearMask |= CANGIx_AAIM;

  00024	e3844901	 orr         r4, r4, #1, 18
  00028		 |$LN3@HandleOthe|

; 1165 :     }
; 1166 :     if (dwStatus & CANGIx_WDIM)

  00028	e3150a02	 tst         r5, #2, 20
  0002c	0a000003	 beq         |$LN2@HandleOthe|

; 1167 :     {        
; 1168 :         RETAILMSG(1,(TEXT("HECC : write denied 0x%x\r\n"),dwStatus));

  00030	e59f0030	 ldr         r0, [pc, #0x30]
  00034	e1a01005	 mov         r1, r5
  00038	eb000000	 bl          NKDbgPrintfW

; 1169 :         clearMask |= CANGIx_WDIM;

  0003c	e3844a02	 orr         r4, r4, #2, 20
  00040		 |$LN2@HandleOthe|

; 1170 :     }
; 1171 :     if (dwStatus & CANGIx_WUIM)

  00040	e3150a01	 tst         r5, #1, 20
  00044	0a000003	 beq         |$LN1@HandleOthe|

; 1172 :     {        
; 1173 :         RETAILMSG(1,(TEXT("HECC : Wake Up interrutp 0x%x\r\n"),dwStatus));

  00048	e59f0014	 ldr         r0, [pc, #0x14]
  0004c	e1a01005	 mov         r1, r5
  00050	eb000000	 bl          NKDbgPrintfW

; 1174 :         clearMask |= CANGIx_WUIM;

  00054	e3844a01	 orr         r4, r4, #1, 20
  00058		 |$LN1@HandleOthe|

; 1175 :     }
; 1176 : 
; 1177 : #ifdef DEBUG
; 1178 :     if ((dwStatus & CANGIx_OTHER_INTERRUPTS) & ~clearMask)
; 1179 :     {        
; 1180 :         RETAILMSG(1,(TEXT("HECC : HandleOtherInterrupts : remaining bits 0x%x\r\n"),dwStatus & ~clearMask));
; 1181 :     }
; 1182 : #endif
; 1183 :     return clearMask;
; 1184 : }

  00058	e1a00004	 mov         r0, r4
  0005c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$LN16@HandleOthe|
  00064		 |$LN17@HandleOthe|
  00064	00000000	 DCD         |??_C@_1EA@MJKOPJDB@?$AAH?$AAE?$AAC?$AAC?$AA?5?$AA?3?$AA?5?$AAW?$AAa?$AAk?$AAe?$AA?5?$AAU?$AAp?$AA?5?$AAi?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAt?$AAp?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00068		 |$LN18@HandleOthe|
  00068	00000000	 DCD         |??_C@_1DG@OJMHPLO@?$AAH?$AAE?$AAC?$AAC?$AA?5?$AA?3?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAe?$AA?5?$AAd?$AAe?$AAn?$AAi?$AAe?$AAd?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  0006c		 |$M38131|

			 ENDP  ; |?HandleOtherInterrupts@@YAKPAUT_CAN_DEVICE@@@Z|, HandleOtherInterrupts

	EXPORT	|?ShowErrors@@YAXPAUOMAP_HECC_SCC_REGS@@@Z| ; ShowErrors

  00000			 AREA	 |.pdata|, PDATA
|$T38143| DCD	|$LN5@ShowErrors|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ShowErrors@@YAXPAUOMAP_HECC_SCC_REGS@@@Z| PROC ; ShowErrors

; 1188 : {

  00000		 |$LN5@ShowErrors|
  00000		 |$M38140|

; 1189 : #ifdef DEBUG
; 1190 :     DWORD CANES1,CANES2;
; 1191 :     CANES1 = INREG32(&pRegs->CANES);
; 1192 :     OUTREG32(&pRegs->CANES,CANES1);
; 1193 :     CANES2 = INREG32(&pRegs->CANES);
; 1194 :     OUTREG32(&pRegs->CANES,CANES2);
; 1195 :     DEBUGMSG(1,(TEXT("CANES1 0x%x\tCANES2 0x%x\tCANREC %d\tCANTEC %d\r\n"),
; 1196 :         CANES1,CANES2,pRegs->CANREC,pRegs->CANTEC));
; 1197 : #else
; 1198 :     UNREFERENCED_PARAMETER(pRegs);
; 1199 : #endif
; 1200 : }

  00000	e12fff1e	 bx          lr
  00004		 |$M38141|

			 ENDP  ; |?ShowErrors@@YAXPAUOMAP_HECC_SCC_REGS@@@Z|, ShowErrors

	EXPORT	|DllMain|
	IMPORT	|DisableThreadLibraryCalls|
	IMPORT	|RegisterDbgZones|

  00000			 AREA	 |.pdata|, PDATA
|$T38154| DCD	|$LN8@DllMain|
	DCD	0x40000c01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DllMain| PROC

; 1309 : {

  00000		 |$LN8@DllMain|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M38151|
  00004	e1a04000	 mov         r4, r0

; 1310 :     UNREFERENCED_PARAMETER(pReserved);
; 1311 :     switch (reason)

  00008	e3510001	 cmp         r1, #1
  0000c	1a000003	 bne         |$LN2@DllMain|

; 1312 :     {
; 1313 :     case DLL_PROCESS_ATTACH:
; 1314 :         RETAILREGISTERZONES((HMODULE)hDLL);

  00010	e59f1014	 ldr         r1, [pc, #0x14]
  00014	eb000000	 bl          RegisterDbgZones

; 1315 :         DisableThreadLibraryCalls((HMODULE)hDLL);

  00018	e1a00004	 mov         r0, r4
  0001c	eb000000	 bl          DisableThreadLibraryCalls
  00020		 |$LN2@DllMain|

; 1316 :         break;
; 1317 :     }
; 1318 :     return TRUE;

  00020	e3a00001	 mov         r0, #1

; 1319 : }

  00024	e8bd4010	 ldmia       sp!, {r4, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$LN9@DllMain|
  0002c		 |$LN10@DllMain|
  0002c	00000000	 DCD         |dpCurSettings|
  00030		 |$M38152|

			 ENDP  ; |DllMain|

	EXPORT	|?CANAllowConfigChange@@YAXPAUOMAP_HECC_SCC_REGS@@H@Z| ; CANAllowConfigChange
	IMPORT	|Sleep|

  00000			 AREA	 |.pdata|, PDATA
|$T38173| DCD	|$LN19@CANAllowCo|
	DCD	0x40001a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CANAllowConfigChange@@YAXPAUOMAP_HECC_SCC_REGS@@H@Z| PROC ; CANAllowConfigChange

; 1471 : {    

  00000		 |$LN19@CANAllowCo|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M38170|
  00004	e3510000	 cmp         r1, #0
  00008	e1a04000	 mov         r4, r0

; 1472 :     if (fAllowed)
; 1473 :     {
; 1474 :         
; 1475 :         SETREG32(&pRegs->CANMC,CANMC_CCR);

  0000c	e5943028	 ldr         r3, [r4, #0x28]
  00010	0a000009	 beq         |$LN6@CANAllowCo|

; 1476 :         while ((INREG32(&pRegs->CANES) & CANES_CCE) == 0) Sleep(1);

  00014	e3833a01	 orr         r3, r3, #1, 20
  00018	e5843028	 str         r3, [r4, #0x28]
  0001c	ea000001	 b           |$LN14@CANAllowCo|
  00020		 |$LL5@CANAllowCo|
  00020	e3a00001	 mov         r0, #1
  00024	eb000000	 bl          Sleep
  00028		 |$LN14@CANAllowCo|
  00028	e5943030	 ldr         r3, [r4, #0x30]
  0002c	e3130010	 tst         r3, #0x10
  00030	0afffffa	 beq         |$LL5@CANAllowCo|

; 1482 :     }    
; 1483 : }

  00034	e8bd4010	 ldmia       sp!, {r4, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$LN6@CANAllowCo|

; 1477 :     }
; 1478 :     else
; 1479 :     {
; 1480 :         CLRREG32(&pRegs->CANMC,CANMC_CCR);
; 1481 :         while ((INREG32(&pRegs->CANES) & CANES_CCE) == CANES_CCE) Sleep(1);

  0003c	e3c33a01	 bic         r3, r3, #1, 20
  00040	e5843028	 str         r3, [r4, #0x28]
  00044	ea000001	 b           |$LN16@CANAllowCo|
  00048		 |$LL2@CANAllowCo|
  00048	e3a00001	 mov         r0, #1
  0004c	eb000000	 bl          Sleep
  00050		 |$LN16@CANAllowCo|
  00050	e5943030	 ldr         r3, [r4, #0x30]
  00054	e2033010	 and         r3, r3, #0x10
  00058	e3530010	 cmp         r3, #0x10
  0005c	0afffff9	 beq         |$LL2@CANAllowCo|

; 1482 :     }    
; 1483 : }

  00060	e8bd4010	 ldmia       sp!, {r4, lr}
  00064	e12fff1e	 bx          lr
  00068		 |$M38171|

			 ENDP  ; |?CANAllowConfigChange@@YAXPAUOMAP_HECC_SCC_REGS@@H@Z|, CANAllowConfigChange

	EXPORT	|?FindBestCanBitTiming@@YAHHHPAH00@Z|	; FindBestCanBitTiming
	IMPORT	|__rt_sdiv|

  00000			 AREA	 |.pdata|, PDATA
|$T38194| DCD	|$LN15@FindBestCa|
	DCD	0x40003502
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?FindBestCanBitTiming@@YAHHHPAH00@Z| PROC ; FindBestCanBitTiming

; 1486 : {

  00000		 |$LN15@FindBestCa|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M38191|
  00008	e58d3000	 str         r3, [sp]
  0000c	e1a03002	 mov         r3, r2
  00010	e58d3004	 str         r3, [sp, #4]
  00014	e1a08001	 mov         r8, r1
  00018	e1a09000	 mov         r9, r0

; 1487 : #define MAX_ERROR_PERTHOUSAND   10
; 1488 :     int TSEG1,TSEG2,BRP;
; 1489 :     int TSEGTotal = 0;    
; 1490 :     BOOL found;
; 1491 :     //bitrate = Fin / (BRP *(TSEG1+TSEG2+1);
; 1492 : 
; 1493 :     found = FALSE;
; 1494 :     BRP = 255;

  0001c	e59fe0ac	 ldr         lr, [pc, #0xAC]
  00020	e3a050ff	 mov         r5, #0xFF
  00024	e0687408	 rsb         r7, r8, r8, lsl #8
  00028	e0ce4e99	 smull       r4, lr, r9, lr
  0002c	e268a000	 rsb         r10, r8, #0
  00030	e1a0b34e	 mov         r11, lr, asr #6
  00034		 |$LL6@FindBestCa|

; 1495 :     while (BRP)
; 1496 :     {
; 1497 :         TSEGTotal = Fin / (bitrate * BRP);

  00034	e1a00007	 mov         r0, r7
  00038	e1a01009	 mov         r1, r9
  0003c	eb000000	 bl          __rt_sdiv
  00040	e1a06000	 mov         r6, r0

; 1498 :         if (((Fin-(TSEGTotal * (bitrate * BRP))) / (Fin/1000)) < MAX_ERROR_PERTHOUSAND)

  00044	e0040695	 mul         r4, r5, r6
  00048	e08b0fab	 add         r0, r11, r11, lsr #31
  0004c	e00e0894	 mul         lr, r4, r8
  00050	e049100e	 sub         r1, r9, lr
  00054	eb000000	 bl          __rt_sdiv
  00058	e350000a	 cmp         r0, #0xA
  0005c	aa000003	 bge         |$LN3@FindBestCa|

; 1499 :         {     
; 1500 :             if ((TSEGTotal < (16+8+1)) && (TSEGTotal >=4))

  00060	e3560019	 cmp         r6, #0x19
  00064	aa000001	 bge         |$LN3@FindBestCa|
  00068	e3560004	 cmp         r6, #4
  0006c	aa000002	 bge         |$LN10@FindBestCa|
  00070		 |$LN3@FindBestCa|

; 1501 :             {
; 1502 :                 break;
; 1503 :             }   
; 1504 :         }
; 1505 :         BRP--;

  00070	e2555001	 subs        r5, r5, #1
  00074	e087700a	 add         r7, r7, r10
  00078	1affffed	 bne         |$LL6@FindBestCa|
  0007c		 |$LN10@FindBestCa|

; 1506 :     }
; 1507 :     if (BRP==0)

  0007c	e3550000	 cmp         r5, #0
  00080	e59db000	 ldr         r11, [sp]

; 1508 :     {
; 1509 :         return FALSE;

  00084	03a00000	 moveq       r0, #0
  00088	0a00000c	 beq         |$LN7@FindBestCa|

; 1510 :     }
; 1511 :     TSEG2 = (TSEGTotal-1)/3; //sample point at 66%

  0008c	e59f3038	 ldr         r3, [pc, #0x38]
  00090	e2462001	 sub         r2, r6, #1

; 1512 :     if (TSEG2 == 0) TSEG2 = 1;
; 1513 :     TSEG1 = (TSEGTotal-1)-TSEG2;
; 1514 : 
; 1515 : 
; 1516 :     *pBrp = BRP;
; 1517 :     *Tseg1 = TSEG1;
; 1518 :     *Tseg2 = TSEG2;

  00094	e59d0004	 ldr         r0, [sp, #4]
  00098	e0c13392	 smull       r3, r1, r2, r3
  0009c	e59d202c	 ldr         r2, [sp, #0x2C]
  000a0	e5805000	 str         r5, [r0]

; 1519 :     return TRUE;

  000a4	e3a00001	 mov         r0, #1
  000a8	e0911fa1	 adds        r1, r1, r1, lsr #31
  000ac	03a01001	 moveq       r1, #1
  000b0	e0463001	 sub         r3, r6, r1
  000b4	e2433001	 sub         r3, r3, #1
  000b8	e58b3000	 str         r3, [r11]
  000bc	e5821000	 str         r1, [r2]
  000c0		 |$LN7@FindBestCa|

; 1520 : }

  000c0	e28dd008	 add         sp, sp, #8
  000c4	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  000c8	e12fff1e	 bx          lr
  000cc		 |$LN16@FindBestCa|
  000cc		 |$LN17@FindBestCa|
  000cc	55555556	 DCD         0x55555556
  000d0		 |$LN18@FindBestCa|
  000d0	10624dd3	 DCD         0x10624dd3
  000d4		 |$M38192|

			 ENDP  ; |?FindBestCanBitTiming@@YAHHHPAH00@Z|, FindBestCanBitTiming

	EXPORT	|?CANConfigureBaudrate@@YAHPAXK@Z|	; CANConfigureBaudrate

  00000			 AREA	 |.pdata|, PDATA
|$T38229| DCD	|$LN24@CANConfigu|
	DCD	0x40003d02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CANConfigureBaudrate@@YAHPAXK@Z| PROC ; CANConfigureBaudrate

; 1524 : {

  00000		 |$LN24@CANConfigu|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd010	 sub         sp, sp, #0x10
  00008		 |$M38226|
  00008	e1a04000	 mov         r4, r0

; 1525 :     int brp,tseg1,tseg2;
; 1526 : 
; 1527 :     T_CAN_DEVICE *pDevice = (T_CAN_DEVICE*) ctxt;
; 1528 :     OMAP_HECC_SCC_REGS* pRegs = pDevice->pCanRegs;
; 1529 :     if (pDevice->canStatus.CtrlState != STOPPED)

  0000c	e594309c	 ldr         r3, [r4, #0x9C]
  00010	e594502c	 ldr         r5, [r4, #0x2C]
  00014	e3530000	 cmp         r3, #0
  00018	0a000001	 beq         |$LN2@CANConfigu|
  0001c		 |$LN21@CANConfigu|

; 1530 :     {
; 1531 :         return FALSE;

  0001c	e3a00000	 mov         r0, #0
  00020	ea00002f	 b           |$LN3@CANConfigu|
  00024		 |$LN2@CANConfigu|

; 1532 :     }
; 1533 :     if (FindBestCanBitTiming(13000000,baudrate,&brp,&tseg1,&tseg2) == FALSE)

  00024	e59f00c4	 ldr         r0, [pc, #0xC4]
  00028	e28de004	 add         lr, sp, #4
  0002c	e28d300c	 add         r3, sp, #0xC
  00030	e28d2008	 add         r2, sp, #8
  00034	e58de000	 str         lr, [sp]
  00038	eb000000	 bl          |?FindBestCanBitTiming@@YAHHHPAH00@Z|
  0003c	e3500000	 cmp         r0, #0

; 1534 :     {
; 1535 :         return FALSE;

  00040	0afffff5	 beq         |$LN21@CANConfigu|

; 1536 :     }
; 1537 : 
; 1538 :     EnterCriticalSection(&pDevice->regcs);

  00044	e2840030	 add         r0, r4, #0x30
  00048	eb000000	 bl          EnterCriticalSection

; 1539 :     CANAllowConfigChange(pRegs,TRUE);

  0004c	e3a01001	 mov         r1, #1
  00050	e1a00005	 mov         r0, r5
  00054	eb000000	 bl          |?CANAllowConfigChange@@YAXPAUOMAP_HECC_SCC_REGS@@H@Z|

; 1540 : 
; 1541 :     
; 1542 :     OUTREG32(&pRegs->CANBTC,
; 1543 :         ((brp-1) << 16) | ((tseg2-1) << 0) | ((tseg1-1) << 3)   |   //BRP | TSEG2 | TSEG1
; 1544 :         ((min(tseg2,4)-1) << 8)                                 |   //SJW
; 1545 :         (CANBTC_ERM )|                                                // resync on both edges
; 1546 :         ((brp >= 5) ? CANBTC_SAM : 0)                                // Use oversampling if possible
; 1547 :         );

  00058	e59d6004	 ldr         r6, [sp, #4]
  0005c	e59d1008	 ldr         r1, [sp, #8]
  00060	e59d300c	 ldr         r3, [sp, #0xC]
  00064	e3560004	 cmp         r6, #4
  00068	b1a02006	 movlt       r2, r6
  0006c	a3a02004	 movge       r2, #4
  00070	e3510005	 cmp         r1, #5
  00074	e1a02402	 mov         r2, r2, lsl #8
  00078	e1a01801	 mov         r1, r1, lsl #16
  0007c	e1a00183	 mov         r0, r3, lsl #3
  00080	e242ec01	 sub         lr, r2, #1, 24
  00084	e2413801	 sub         r3, r1, #1, 16
  00088	e18e3003	 orr         r3, lr, r3
  0008c	e2402008	 sub         r2, r0, #8
  00090	e1832002	 orr         r2, r3, r2
  00094	e2463001	 sub         r3, r6, #1
  00098	a3a07080	 movge       r7, #0x80
  0009c	e1823003	 orr         r3, r2, r3
  000a0	b3a07000	 movlt       r7, #0
  000a4	e1833007	 orr         r3, r3, r7
  000a8	e3833b01	 orr         r3, r3, #1, 22
  000ac	e585302c	 str         r3, [r5, #0x2C]

; 1548 :     
; 1549 :     CANAllowConfigChange(pRegs,FALSE);

  000b0	e5953028	 ldr         r3, [r5, #0x28]
  000b4	e3c33a01	 bic         r3, r3, #1, 20
  000b8	e5853028	 str         r3, [r5, #0x28]
  000bc	ea000001	 b           |$LN20@CANConfigu|
  000c0		 |$LL10@CANConfigu|
  000c0	e3a00001	 mov         r0, #1
  000c4	eb000000	 bl          Sleep
  000c8		 |$LN20@CANConfigu|
  000c8	e5953030	 ldr         r3, [r5, #0x30]
  000cc	e2033010	 and         r3, r3, #0x10
  000d0	e3530010	 cmp         r3, #0x10
  000d4	0afffff9	 beq         |$LL10@CANConfigu|

; 1550 :     LeaveCriticalSection(&pDevice->regcs);

  000d8	e2840030	 add         r0, r4, #0x30
  000dc	eb000000	 bl          LeaveCriticalSection

; 1551 : 
; 1552 : 
; 1553 :     return TRUE;

  000e0	e3a00001	 mov         r0, #1
  000e4		 |$LN3@CANConfigu|

; 1554 : }

  000e4	e28dd010	 add         sp, sp, #0x10
  000e8	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  000ec	e12fff1e	 bx          lr
  000f0		 |$LN25@CANConfigu|
  000f0		 |$LN26@CANConfigu|
  000f0	00c65d40	 DCD         0xc65d40
  000f4		 |$M38227|

			 ENDP  ; |?CANConfigureBaudrate@@YAHPAXK@Z|, CANConfigureBaudrate

	EXPORT	|?CANStatus@@YAHPAXPAUCAN_STATUS@@@Z|	; CANStatus
	IMPORT	|memcpy|

  00000			 AREA	 |.pdata|, PDATA
|$T38243| DCD	|$LN7@CANStatus|
	DCD	0x40001c01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CANStatus@@YAHPAXPAUCAN_STATUS@@@Z| PROC ; CANStatus

; 1557 : {

  00000		 |$LN7@CANStatus|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M38240|
  00004	e1a05001	 mov         r5, r1
  00008	e1a04000	 mov         r4, r0

; 1558 :     T_CAN_DEVICE *pDevice = (T_CAN_DEVICE*) ctxt;
; 1559 :     if (((pDevice->pCanRegs->CANGIF0 & CANGIx_BOIM) == 0) && 
; 1560 :         ((pDevice->pCanRegs->CANGIF0 & CANGIx_EPIM) == 0))

  0000c	e594202c	 ldr         r2, [r4, #0x2C]
  00010	e592303c	 ldr         r3, [r2, #0x3C]
  00014	e3130b01	 tst         r3, #1, 22
  00018	0592303c	 ldreq       r3, [r2, #0x3C]
  0001c	03130c02	 tsteq       r3, #2, 24

; 1561 :     {
; 1562 :         pDevice->canStatus.BusState = ERROR_ACTIVE;

  00020	03a03000	 moveq       r3, #0
  00024	05843098	 streq       r3, [r4, #0x98]

; 1563 :     }
; 1564 :     if (pStatus)

  00028	e3550000	 cmp         r5, #0
  0002c	0a00000c	 beq         |$LN1@CANStatus|

; 1565 :     {
; 1566 :         memcpy(pStatus,&pDevice->canStatus,sizeof(CAN_STATUS));

  00030	e2841078	 add         r1, r4, #0x78
  00034	e3a02044	 mov         r2, #0x44
  00038	e1a00005	 mov         r0, r5
  0003c	eb000000	 bl          memcpy

; 1567 :         pStatus->CANREC = pDevice->pCanRegs->CANREC;

  00040	e594302c	 ldr         r3, [r4, #0x2C]

; 1568 :         pStatus->CANTEC = pDevice->pCanRegs->CANTEC;
; 1569 :         return TRUE;

  00044	e3a00001	 mov         r0, #1
  00048	e5933038	 ldr         r3, [r3, #0x38]
  0004c	e5853040	 str         r3, [r5, #0x40]
  00050	e594302c	 ldr         r3, [r4, #0x2C]
  00054	e5933034	 ldr         r3, [r3, #0x34]
  00058	e585303c	 str         r3, [r5, #0x3C]

; 1572 : }

  0005c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$LN1@CANStatus|

; 1570 :     }
; 1571 :     return FALSE;

  00064	e3a00000	 mov         r0, #0

; 1572 : }

  00068	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0006c	e12fff1e	 bx          lr
  00070		 |$M38241|

			 ENDP  ; |?CANStatus@@YAHPAXPAUCAN_STATUS@@@Z|, CANStatus

	EXPORT	|?CANSend@@YAHPAXPAUCAN_MESSAGE@@KPAKW4TXCAN_PRIORITY@@K@Z| ; CANSend
	EXPORT	|??_C@_1KA@HGKICKLA@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@INAHIDFN@?$AAm?$AAs?$AAg?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAh?$AAt?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAi?$AAs?$AA?5?$AA?$DO?$AA?5?$AA8?$AA?4?$AA?5?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?5@| [ DATA ] ; `string'
	IMPORT	|WriteMsgQueue|

  00000			 AREA	 |.pdata|, PDATA
|$T38268| DCD	|$LN20@CANSend|
	DCD	0x40003a02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KA@HGKICKLA@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "P"
	DCB	0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "M", 0x0, "\\", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M"
	DCB	0x0, "O", 0x0, "N", 0x0, "\\", 0x0, "S", 0x0, "R", 0x0, "C"
	DCB	0x0, "\\", 0x0, "S", 0x0, "O", 0x0, "C", 0x0, "\\", 0x0, "C"
	DCB	0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N", 0x0, "_"
	DCB	0x0, "T", 0x0, "I", 0x0, "_", 0x0, "V", 0x0, "1", 0x0, "\\"
	DCB	0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N"
	DCB	0x0, "_", 0x0, "T", 0x0, "I", 0x0, "\\", 0x0, "H", 0x0, "E"
	DCB	0x0, "C", 0x0, "C", 0x0, "\\", 0x0, ".", 0x0, "\\", 0x0, "o"
	DCB	0x0, "m", 0x0, "a", 0x0, "p", 0x0, "_", 0x0, "h", 0x0, "e"
	DCB	0x0, "c", 0x0, "c", 0x0, ".", 0x0, "c", 0x0, "p", 0x0, "p"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ":", 0x0, " "
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@INAHIDFN@?$AAm?$AAs?$AAg?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAh?$AAt?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAi?$AAs?$AA?5?$AA?$DO?$AA?5?$AA8?$AA?4?$AA?5?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?5@| DCB "m"
	DCB	0x0, "s", 0x0, "g", 0x0, " ", 0x0, "l", 0x0, "e", 0x0, "n"
	DCB	0x0, "g", 0x0, "h", 0x0, "t", 0x0, " ", 0x0, "(", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " "
	DCB	0x0, ">", 0x0, " ", 0x0, "8", 0x0, ".", 0x0, " ", 0x0, "M"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, "a", 0x0, "g", 0x0, "e"
	DCB	0x0, " ", 0x0, "s", 0x0, "k", 0x0, "i", 0x0, "p", 0x0, "p"
	DCB	0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CANSend@@YAHPAXPAUCAN_MESSAGE@@KPAKW4TXCAN_PRIORITY@@K@Z| PROC ; CANSend

; 1575 : {

  00000		 |$LN20@CANSend|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M38265|
  00008	e1a08003	 mov         r8, r3
  0000c	e58d8004	 str         r8, [sp, #4]
  00010	e1a07002	 mov         r7, r2
  00014	e1a05001	 mov         r5, r1
  00018	e1a06000	 mov         r6, r0

; 1576 :     BOOL fFirstMsg = TRUE;
; 1577 :     DWORD nbMsgRemaining = nbMsg;
; 1578 :     DWORD nbSentOk = 0;
; 1579 :     T_CAN_DEVICE *pDevice = (T_CAN_DEVICE*) ctxt;
; 1580 :     if (priority < NB_TX_PRIORITIES)

  0001c	e59d102c	 ldr         r1, [sp, #0x2C]
  00020	e3a04000	 mov         r4, #0
  00024	e3510003	 cmp         r1, #3
  00028	aa000024	 bge         |$LN7@CANSend|

; 1581 :     {                       
; 1582 :         while (nbMsgRemaining)

  0002c	e3570000	 cmp         r7, #0
  00030	0a000020	 beq         |$LN15@CANSend|
  00034	e59d9030	 ldr         r9, [sp, #0x30]
  00038	e3a08c06	 mov         r8, #6, 24
  0003c	e281a020	 add         r10, r1, #0x20
  00040	e3a0e000	 mov         lr, #0
  00044	e086b181	 add         r11, r6, r1, lsl #3
  00048		 |$LL6@CANSend|

; 1583 :         {       
; 1584 :             if (msg->length > 8)

  00048	e5d53008	 ldrb        r3, [r5, #8]
  0004c	e3530008	 cmp         r3, #8
  00050	9a000007	 bls         |$LN4@CANSend|

; 1585 :             {
; 1586 :                 ERRORMSG(1,(TEXT("msg lenght (%d) is > 8. Message skipped\r\n"),msg->length));

  00054	e59f1088	 ldr         r1, [pc, #0x88]
  00058	e59f0080	 ldr         r0, [pc, #0x80]
  0005c	e3882032	 orr         r2, r8, #0x32
  00060	eb000000	 bl          NKDbgPrintfW
  00064	e5d51008	 ldrb        r1, [r5, #8]
  00068	e59f006c	 ldr         r0, [pc, #0x6C]
  0006c	eb000000	 bl          NKDbgPrintfW

; 1587 :             }
; 1588 :             else 

  00070	ea00000b	 b           |$LN3@CANSend|
  00074		 |$LN4@CANSend|

; 1589 :             {
; 1590 :                 if (WriteMsgQueue(pDevice->TxMsgQ[priority][MSQ_WRITER],msg,sizeof(*msg),timeout,0) == FALSE)

  00074	e59b0064	 ldr         r0, [r11, #0x64]
  00078	e1a03009	 mov         r3, r9
  0007c	e3a02010	 mov         r2, #0x10
  00080	e1a01005	 mov         r1, r5
  00084	e58de000	 str         lr, [sp]
  00088	eb000000	 bl          WriteMsgQueue
  0008c	e3500000	 cmp         r0, #0
  00090	0a000007	 beq         |$LN17@CANSend|

; 1591 :                 {
; 1592 :                     break;
; 1593 :                 }
; 1594 :                 if (fFirstMsg)
; 1595 :                 {
; 1596 :                     timeout = 0; 
; 1597 :                 }
; 1598 :                 InterlockedIncrement(&pDevice->canStatus.currentTxMsg[priority]);                

  00094	e086010a	 add         r0, r6, r10, lsl #2
  00098	e3a09000	 mov         r9, #0
  0009c	eb000000	 bl          InterlockedIncrement

; 1599 :                 nbSentOk++;

  000a0	e2844001	 add         r4, r4, #1
  000a4		 |$LN3@CANSend|

; 1600 :             }
; 1601 :             nbMsgRemaining--;

  000a4	e2577001	 subs        r7, r7, #1

; 1602 :             msg++;

  000a8	e2855010	 add         r5, r5, #0x10
  000ac	e3a0e000	 mov         lr, #0
  000b0	1affffe4	 bne         |$LL6@CANSend|
  000b4		 |$LN17@CANSend|

; 1575 : {

  000b4	e59d8004	 ldr         r8, [sp, #4]
  000b8		 |$LN15@CANSend|

; 1603 :         }
; 1604 :         
; 1605 :         // In case the trasnmit is stopped, re-start it.
; 1606 :         StartTransmit(pDevice);

  000b8	e1a00006	 mov         r0, r6
  000bc	eb000000	 bl          |?StartTransmit@@YAXPAUT_CAN_DEVICE@@@Z|
  000c0		 |$LN7@CANSend|

; 1607 :     }
; 1608 :     *nbMsgSent = nbSentOk;
; 1609 :     return (nbSentOk != 0) ? TRUE : FALSE;

  000c0	e3540000	 cmp         r4, #0
  000c4	13a00001	 movne       r0, #1
  000c8	03a00000	 moveq       r0, #0
  000cc	e5884000	 str         r4, [r8]

; 1610 : }

  000d0	e28dd008	 add         sp, sp, #8
  000d4	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  000d8	e12fff1e	 bx          lr
  000dc		 |$LN21@CANSend|
  000dc		 |$LN22@CANSend|
  000dc	00000000	 DCD         |??_C@_1FE@INAHIDFN@?$AAm?$AAs?$AAg?$AA?5?$AAl?$AAe?$AAn?$AAg?$AAh?$AAt?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAi?$AAs?$AA?5?$AA?$DO?$AA?5?$AA8?$AA?4?$AA?5?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?5@|
  000e0		 |$LN23@CANSend|
  000e0	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  000e4		 |$LN24@CANSend|
  000e4	00000000	 DCD         |??_C@_1KA@HGKICKLA@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  000e8		 |$M38266|

			 ENDP  ; |?CANSend@@YAHPAXPAUCAN_MESSAGE@@KPAKW4TXCAN_PRIORITY@@K@Z|, CANSend

	EXPORT	|?CANReceive@@YAHPAXPAUCAN_MESSAGE@@KPAKK@Z| ; CANReceive

  00000			 AREA	 |.pdata|, PDATA
|$T38292| DCD	|$LN13@CANReceive|
	DCD	0x40002002
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CANReceive@@YAHPAXPAUCAN_MESSAGE@@KPAKK@Z| PROC ; CANReceive

; 1612 : {

  00000		 |$LN13@CANReceive|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004	e24dd010	 sub         sp, sp, #0x10
  00008		 |$M38289|
  00008	e1a07003	 mov         r7, r3
  0000c	e1b05002	 movs        r5, r2
  00010	e1a06001	 mov         r6, r1
  00014	e1a09000	 mov         r9, r0

; 1613 :     DWORD nbMsgRemaining = nbMaxMsg; 

  00018	e1a04005	 mov         r4, r5

; 1614 :     DWORD nbRead,flags;
; 1615 :     T_CAN_DEVICE *pDevice = (T_CAN_DEVICE*) ctxt;
; 1616 :     BOOL fFirstMsg = TRUE;
; 1617 : 
; 1618 :     while (nbMsgRemaining && ReadMsgQueue(pDevice->RxMsgQ[MSQ_READER],msg,sizeof(*msg),&nbRead,timeout,&flags))

  0001c	0a000010	 beq         |$LN10@CANReceive|
  00020	e59d8030	 ldr         r8, [sp, #0x30]
  00024	e28da008	 add         r10, sp, #8
  00028		 |$LL3@CANReceive|
  00028	e5990058	 ldr         r0, [r9, #0x58]
  0002c	e28d300c	 add         r3, sp, #0xC
  00030	e3a02010	 mov         r2, #0x10
  00034	e1a01006	 mov         r1, r6
  00038	e58da004	 str         r10, [sp, #4]
  0003c	e58d8000	 str         r8, [sp]
  00040	eb000000	 bl          ReadMsgQueue
  00044	e3500000	 cmp         r0, #0
  00048	0a000005	 beq         |$LN10@CANReceive|

; 1619 :     {
; 1620 :         if (fFirstMsg)
; 1621 :         {
; 1622 :             timeout = 0;
; 1623 :         }
; 1624 :         InterlockedDecrement(&pDevice->canStatus.currentRxMsg);    

  0004c	e2890078	 add         r0, r9, #0x78
  00050	e3a08000	 mov         r8, #0
  00054	eb000000	 bl          InterlockedDecrement

; 1625 :         nbMsgRemaining--;

  00058	e2544001	 subs        r4, r4, #1

; 1626 :         msg++;

  0005c	e2866010	 add         r6, r6, #0x10
  00060	1afffff0	 bne         |$LL3@CANReceive|
  00064		 |$LN10@CANReceive|

; 1627 :     }
; 1628 :     *nbMsgReceived = nbMaxMsg - nbMsgRemaining;

  00064	e0553004	 subs        r3, r5, r4

; 1629 : 
; 1630 :     return (*nbMsgReceived != 0) ? TRUE : FALSE;

  00068	13a00001	 movne       r0, #1
  0006c	03a00000	 moveq       r0, #0
  00070	e5873000	 str         r3, [r7]

; 1631 : }

  00074	e28dd010	 add         sp, sp, #0x10
  00078	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  0007c	e12fff1e	 bx          lr
  00080		 |$M38290|

			 ENDP  ; |?CANReceive@@YAHPAXPAUCAN_MESSAGE@@KPAKK@Z|, CANReceive

	EXPORT	|?CANConfigureAutoAnswer@@YAHPAXPAUCAN_MESSAGE@@H@Z| ; CANConfigureAutoAnswer

  00000			 AREA	 |.pdata|, PDATA
|$T38341| DCD	|$LN41@CANConfigu@2|
	DCD	0x40007602
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CANConfigureAutoAnswer@@YAHPAXPAUCAN_MESSAGE@@H@Z| PROC ; CANConfigureAutoAnswer

; 1636 : {

  00000		 |$LN41@CANConfigu@2|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M38338|
  00008	e1a06002	 mov         r6, r2
  0000c	e1a0a001	 mov         r10, r1
  00010	e1a05000	 mov         r5, r0

; 1637 :     UINT32 AutoAnswerMask;    
; 1638 :     int mailbox = -1;
; 1639 :     int i;
; 1640 :     T_CAN_DEVICE *pDevice = (T_CAN_DEVICE*) ctxt;
; 1641 :     
; 1642 :     if ((msg->length > 8) && fEnabled)

  00014	e5da3008	 ldrb        r3, [r10, #8]
  00018	e3e04000	 mvn         r4, #0
  0001c	e3530008	 cmp         r3, #8
  00020	9a000002	 bls         |$LN14@CANConfigu@2|
  00024	e3560000	 cmp         r6, #0

; 1643 :     {
; 1644 :         return FALSE;

  00028	13a04000	 movne       r4, #0
  0002c	1a000065	 bne         |$LN3@CANConfigu@2|
  00030		 |$LN14@CANConfigu@2|

; 1645 :     }
; 1646 : 
; 1647 :     EnterCriticalSection(&pDevice->regcs);

  00030	e2850030	 add         r0, r5, #0x30
  00034	eb000000	 bl          EnterCriticalSection

; 1648 : 
; 1649 :     AutoAnswerMask = pDevice->AutoAnswerMask;

  00038	e59530cc	 ldr         r3, [r5, #0xCC]
  0003c	e3a0257f	 mov         r2, #0x7F, 10
  00040	e382b70f	 orr         r11, r2, #0xF, 14
  00044	e1b08003	 movs        r8, r3

; 1650 :     //Find matching mailbox if it already exists
; 1651 :     i = 0;

  00048	e3a07000	 mov         r7, #0

; 1652 :     while (AutoAnswerMask)

  0004c	0a00001b	 beq         |$LN12@CANConfigu@2|
  00050	e3a09a02	 mov         r9, #2, 20
  00054		 |$LL13@CANConfigu@2|

; 1653 :     {
; 1654 :         if (AutoAnswerMask & 0x1)

  00054	e3180001	 tst         r8, #1
  00058	0a000012	 beq         |$LN17@CANConfigu@2|

; 1655 :         {
; 1656 :         CAN_ID mbxId;
; 1657 :         
; 1658 :             CANMIDtoCANID(pDevice->pCanRegs->MailBoxes[i].CANMID,&mbxId);

  0005c	e595302c	 ldr         r3, [r5, #0x2C]
  00060	e28d1000	 add         r1, sp, #0
  00064	e7990003	 ldr         r0, [r9, +r3]
  00068	eb000000	 bl          |?CANMIDtoCANID@@YAXIPATCAN_ID@@@Z|

; 1659 : 
; 1660 :             if (IDequal(mbxId,msg->id))

  0006c	e59d1000	 ldr         r1, [sp]
  00070	e59a200c	 ldr         r2, [r10, #0xC]
  00074	e3110102	 tst         r1, #2, 2
  00078	0a000005	 beq         |$LN20@CANConfigu@2|
  0007c	e2023102	 and         r3, r2, #2, 2
  00080	e3530102	 cmp         r3, #2, 2
  00084	1a000007	 bne         |$LN17@CANConfigu@2|
  00088	e0213002	 eor         r3, r1, r2
  0008c	e3d3c20e	 bics        r12, r3, #0xE, 4
  00090	ea000003	 b           |$LN38@CANConfigu@2|
  00094		 |$LN20@CANConfigu@2|
  00094	e3120102	 tst         r2, #2, 2
  00098	1a000002	 bne         |$LN17@CANConfigu@2|
  0009c	e0213002	 eor         r3, r1, r2
  000a0	e113000b	 tst         r3, r11
  000a4		 |$LN38@CANConfigu@2|
  000a4	0a000004	 beq         |$LN29@CANConfigu@2|
  000a8		 |$LN17@CANConfigu@2|

; 1663 :                 break;
; 1664 :             }
; 1665 :         }
; 1666 :         AutoAnswerMask>>=1;

  000a8	e1b080a8	 movs        r8, r8, lsr #1

; 1667 :         i++;

  000ac	e2877001	 add         r7, r7, #1
  000b0	e2899010	 add         r9, r9, #0x10
  000b4	1affffe6	 bne         |$LL13@CANConfigu@2|

; 1652 :     while (AutoAnswerMask)

  000b8	ea000000	 b           |$LN12@CANConfigu@2|
  000bc		 |$LN29@CANConfigu@2|

; 1661 :             {
; 1662 :                 mailbox = i;

  000bc	e1a04007	 mov         r4, r7
  000c0		 |$LN12@CANConfigu@2|

; 1668 :     }
; 1669 :             
; 1670 :     if (fEnabled && (mailbox == -1)) // no matching mailbox found ?

  000c0	e3560000	 cmp         r6, #0
  000c4	0a00000d	 beq         |$LN6@CANConfigu@2|
  000c8	e3740001	 cmn         r4, #1
  000cc	1a00000e	 bne         |$LN4@CANConfigu@2|

; 1671 :     {
; 1672 :         //Try to allocate a mailbox
; 1673 :         for (i=NB_MAILBOXES-1;i>=0;i--)

  000d0	e59530c4	 ldr         r3, [r5, #0xC4]
  000d4	e3a0401f	 mov         r4, #0x1F
  000d8	e3a02001	 mov         r2, #1
  000dc		 |$LL8@CANConfigu@2|

; 1674 :         {
; 1675 :             if (pDevice->FreeMailboxMask & (1<<i))

  000dc	e1130412	 tst         r3, r2, lsl r4
  000e0	1a000003	 bne         |$LN30@CANConfigu@2|

; 1671 :     {
; 1672 :         //Try to allocate a mailbox
; 1673 :         for (i=NB_MAILBOXES-1;i>=0;i--)

  000e4	e2544001	 subs        r4, r4, #1
  000e8	5afffffb	 bpl         |$LL8@CANConfigu@2|
  000ec	e3a04000	 mov         r4, #0
  000f0	ea000032	 b           |$LN37@CANConfigu@2|
  000f4		 |$LN30@CANConfigu@2|

; 1676 :             {
; 1677 :                 mailbox = i;
; 1678 :                 pDevice->FreeMailboxMask &= ~(1<<mailbox);

  000f4	e3a02001	 mov         r2, #1
  000f8	e1c33412	 bic         r3, r3, r2, lsl r4
  000fc	e58530c4	 str         r3, [r5, #0xC4]
  00100		 |$LN6@CANConfigu@2|

; 1679 :                 break;
; 1680 :             }
; 1681 :         }
; 1682 :     }
; 1683 : 
; 1684 :     if (mailbox == -1)

  00100	e3740001	 cmn         r4, #1
  00104	03a04000	 moveq       r4, #0
  00108	0a00002c	 beq         |$LN37@CANConfigu@2|
  0010c		 |$LN4@CANConfigu@2|

; 1688 :         return FALSE;
; 1689 :     }
; 1690 :     else
; 1691 :     {
; 1692 :         BOOL rc = TRUE;
; 1693 :         OMAP_HECC_SCC_MAILBOX* pMbx = &pDevice->pCanRegs->MailBoxes[mailbox];

  0010c	e595202c	 ldr         r2, [r5, #0x2C]
  00110	e2843c02	 add         r3, r4, #2, 24

; 1694 :         if (fEnabled)

  00114	e3560000	 cmp         r6, #0
  00118	e0821203	 add         r1, r2, r3, lsl #4

; 1695 :         {
; 1696 :             // configure mailbox for autoanswer
; 1697 :             pDevice->pCanRegs->CANME &= ~(1<<mailbox);

  0011c	e5923000	 ldr         r3, [r2]
  00120	0a00001c	 beq         |$LN2@CANConfigu@2|
  00124	e3a00001	 mov         r0, #1

; 1698 :             pDevice->pCanRegs->CANMD &= ~(1<<mailbox);
; 1699 :             pMbx->CANMDH = msg->MDH;

  00128	e1c33410	 bic         r3, r3, r0, lsl r4
  0012c	e5823000	 str         r3, [r2]
  00130	e595202c	 ldr         r2, [r5, #0x2C]

; 1700 :             pMbx->CANMDL = msg->MDL;

  00134	e5923004	 ldr         r3, [r2, #4]
  00138	e1c33410	 bic         r3, r3, r0, lsl r4
  0013c	e5823004	 str         r3, [r2, #4]
  00140	e59a3004	 ldr         r3, [r10, #4]
  00144	e581300c	 str         r3, [r1, #0xC]
  00148	e59a3000	 ldr         r3, [r10]
  0014c	e5813008	 str         r3, [r1, #8]

; 1701 :             pMbx->CANMID = IDtoCANMID(msg->id) | CANMID_AMM;

  00150	e59a300c	 ldr         r3, [r10, #0xC]
  00154	e3130102	 tst         r3, #2, 2
  00158	13c3320e	 bicne       r3, r3, #0xE, 4
  0015c	13833102	 orrne       r3, r3, #2, 2
  00160	0003300b	 andeq       r3, r3, r11
  00164	e3833202	 orr         r3, r3, #2, 4
  00168	e5813000	 str         r3, [r1]

; 1702 :             pMbx->CANMCF = msg->length | (0x3 << 8);    //use highest priority for Remote frames

  0016c	e5da3008	 ldrb        r3, [r10, #8]
  00170	e3833c03	 orr         r3, r3, #3, 24
  00174	e5813004	 str         r3, [r1, #4]

; 1703 :             pDevice->pCanRegs->CANME |= (1<<mailbox);

  00178	e595202c	 ldr         r2, [r5, #0x2C]
  0017c	e5923000	 ldr         r3, [r2]
  00180	e1833410	 orr         r3, r3, r0, lsl r4
  00184	e5823000	 str         r3, [r2]

; 1704 :             pDevice->AutoAnswerMask |= (1<<mailbox);

  00188	e59530cc	 ldr         r3, [r5, #0xCC]
  0018c	e1833410	 orr         r3, r3, r0, lsl r4
  00190	e58530cc	 str         r3, [r5, #0xCC]

; 1705 :         }
; 1706 :         else

  00194	ea000008	 b           |$LN1@CANConfigu@2|
  00198		 |$LN2@CANConfigu@2|

; 1707 :         {
; 1708 :             // unconfigure mailbox
; 1709 :             pDevice->pCanRegs->CANME &= ~(1<<mailbox);            

  00198	e3a01001	 mov         r1, #1
  0019c	e1c33411	 bic         r3, r3, r1, lsl r4
  001a0	e5823000	 str         r3, [r2]

; 1710 :             // and release it
; 1711 :             pDevice->FreeMailboxMask |= (1<<mailbox);

  001a4	e59530c4	 ldr         r3, [r5, #0xC4]

; 1712 :             pDevice->AutoAnswerMask &= ~(1<<mailbox);

  001a8	e59520cc	 ldr         r2, [r5, #0xCC]
  001ac	e1833411	 orr         r3, r3, r1, lsl r4
  001b0	e1c22411	 bic         r2, r2, r1, lsl r4
  001b4	e58530c4	 str         r3, [r5, #0xC4]
  001b8	e58520cc	 str         r2, [r5, #0xCC]
  001bc		 |$LN1@CANConfigu@2|
  001bc	e3a04001	 mov         r4, #1
  001c0		 |$LN37@CANConfigu@2|

; 1685 :     {
; 1686 :         //no mailbox found
; 1687 :         LeaveCriticalSection(&pDevice->regcs);

  001c0	e2850030	 add         r0, r5, #0x30
  001c4	eb000000	 bl          LeaveCriticalSection
  001c8		 |$LN3@CANConfigu@2|

; 1713 :         }
; 1714 :         LeaveCriticalSection(&pDevice->regcs);
; 1715 :         return rc;
; 1716 :     }
; 1717 : }

  001c8	e1a00004	 mov         r0, r4
  001cc	e28dd004	 add         sp, sp, #4
  001d0	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  001d4	e12fff1e	 bx          lr
  001d8		 |$M38339|

			 ENDP  ; |?CANConfigureAutoAnswer@@YAHPAXPAUCAN_MESSAGE@@H@Z|, CANConfigureAutoAnswer

	EXPORT	|?ConfigureMailboxAndAcceptanceFilter@@YAXPAUT_CAN_DEVICE@@IPAUCLASS_FILTER@@@Z| ; ConfigureMailboxAndAcceptanceFilter

  00000			 AREA	 |.pdata|, PDATA
|$T38377| DCD	|$LN21@ConfigureM|
	DCD	0x40004b02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ConfigureMailboxAndAcceptanceFilter@@YAXPAUT_CAN_DEVICE@@IPAUCLASS_FILTER@@@Z| PROC ; ConfigureMailboxAndAcceptanceFilter

; 1720 : {    

  00000		 |$LN21@ConfigureM|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M38374|
  00008	e1a0a002	 mov         r10, r2
  0000c	e3510000	 cmp         r1, #0
  00010	e58d1004	 str         r1, [sp, #4]

; 1721 :     DWORD mask = filterMailboxMask;
; 1722 :     BOOL lowestMailbox=TRUE;
; 1723 :     DWORD index = 0;
; 1724 :     OMAP_HECC_SCC_REGS* pRegs = pDevice->pCanRegs;

  00014	e590e02c	 ldr         lr, [r0, #0x2C]

; 1725 :     OMAP_HECC_SCC_MAILBOX* pMailbox;
; 1726 : 
; 1727 :     // Disable the mailboxes (although at this point, they should already be disabled)
; 1728 :     CLRREG32(&pRegs->CANME,filterMailboxMask);

  00018	e1a05001	 mov         r5, r1
  0001c	e3a09001	 mov         r9, #1
  00020	e59e3000	 ldr         r3, [lr]
  00024	e3a04000	 mov         r4, #0
  00028	e1c33001	 bic         r3, r3, r1
  0002c	e58e3000	 str         r3, [lr]

; 1729 : 
; 1730 :     while(mask)

  00030	0a000037	 beq         |$LN4@ConfigureM|
  00034	e3a0357f	 mov         r3, #0x7F, 10
  00038	e3a02c07	 mov         r2, #7, 24
  0003c	e383b70f	 orr         r11, r3, #0xF, 14
  00040	e38230ff	 orr         r3, r2, #0xFF
  00044	e58d3000	 str         r3, [sp]
  00048	e3a07a02	 mov         r7, #2, 20
  0004c	e59d1000	 ldr         r1, [sp]
  00050	e28e6a03	 add         r6, lr, #3, 20
  00054	e3a03001	 mov         r3, #1
  00058	e3a02001	 mov         r2, #1
  0005c		 |$LL5@ConfigureM|

; 1731 :     {
; 1732 :         if (mask & 0x1)

  0005c	e3150001	 tst         r5, #1
  00060	0a000025	 beq         |$LN3@ConfigureM|

; 1733 :         {            
; 1734 :             pMailbox = &pDevice->pCanRegs->MailBoxes[index];
; 1735 : 
; 1736 : 
; 1737 : 
; 1738 :             if (lowestMailbox)

  00064	e3590000	 cmp         r9, #0

; 1739 :             {
; 1740 :                 // if this is the first mailbox of the chain, then we do not protect it against overwrite so that we're aware of lost messages
; 1741 :                 lowestMailbox = FALSE;
; 1742 :                 CLRREG32(&pRegs->CANOPC,(1<<index));                    //Do not rotect against overwrites    

  00068	11a02413	 movne       r2, r3, lsl r4
  0006c	159e3050	 ldrne       r3, [lr, #0x50]
  00070	e590802c	 ldr         r8, [r0, #0x2C]
  00074	13a09000	 movne       r9, #0
  00078	11c33002	 bicne       r3, r3, r2

; 1743 :             }
; 1744 :             else
; 1745 :             {
; 1746 :                 // protecting against overwrites makes the ctrl look for another mailbox if this one is already full
; 1747 :                 SETREG32(&pRegs->CANOPC,(1<<index));                    //Protect against overwrites

  0007c	059e3050	 ldreq       r3, [lr, #0x50]
  00080	01a02412	 moveq       r2, r2, lsl r4
  00084	01833002	 orreq       r3, r3, r2
  00088	e58e3050	 str         r3, [lr, #0x50]

; 1748 :             }
; 1749 :             SETREG32(&pRegs->CANMD,(1<<index));                     //Configure for recpetion

  0008c	e59e3004	 ldr         r3, [lr, #4]
  00090	e1833002	 orr         r3, r3, r2
  00094	e58e3004	 str         r3, [lr, #4]

; 1750 :             SETREG32(&pRegs->CANMIL,(1<<index));                    //RX mailboxes trigger CAN IRQ 1

  00098	e59e304c	 ldr         r3, [lr, #0x4C]
  0009c	e1833002	 orr         r3, r3, r2
  000a0	e58e304c	 str         r3, [lr, #0x4C]

; 1751 :             SETREG32(&pRegs->CANMIM,(1<<index));                    // Unmask the interrupt

  000a4	e59e3048	 ldr         r3, [lr, #0x48]
  000a8	e1833002	 orr         r3, r3, r2
  000ac	e58e3048	 str         r3, [lr, #0x48]

; 1752 : 
; 1753 :             OUTREG32(&pMailbox->CANMID,CANMID_AME | IDtoCANMID(pClassFilter->id));

  000b0	e59a3000	 ldr         r3, [r10]
  000b4	e3e0220e	 mvn         r2, #0xE, 4
  000b8	e3130102	 tst         r3, #2, 2
  000bc	10033002	 andne       r3, r3, r2
  000c0	13833102	 orrne       r3, r3, #2, 2
  000c4	0003300b	 andeq       r3, r3, r11
  000c8	e3833101	 orr         r3, r3, #1, 2
  000cc	e7883007	 str         r3, [r8, +r7]

; 1754 :             OUTREG32(&pRegs->CANLAM[index], MaskToCANLAM(pClassFilter->mask));            

  000d0	e59a3004	 ldr         r3, [r10, #4]
  000d4	e3130102	 tst         r3, #2, 2
  000d8	11c23003	 bicne       r3, r2, r3
  000dc	03e08c1f	 mvneq       r8, #0x1F, 24
  000e0	01c13923	 biceq       r3, r1, r3, lsr #18
  000e4	022820ff	 eoreq       r2, r8, #0xFF
  000e8	01833002	 orreq       r3, r3, r2
  000ec	01a03903	 moveq       r3, r3, lsl #18
  000f0	e5863000	 str         r3, [r6]
  000f4	e3a03001	 mov         r3, #1
  000f8	e3a02001	 mov         r2, #1
  000fc		 |$LN3@ConfigureM|

; 1755 :         }
; 1756 :         mask >>= 1;

  000fc	e1b050a5	 movs        r5, r5, lsr #1

; 1757 :         index++;

  00100	e2844001	 add         r4, r4, #1
  00104	e2877010	 add         r7, r7, #0x10
  00108	e2866004	 add         r6, r6, #4
  0010c	1affffd2	 bne         |$LL5@ConfigureM|

; 1720 : {    

  00110	e59d1004	 ldr         r1, [sp, #4]
  00114		 |$LN4@ConfigureM|

; 1758 :     }
; 1759 :     SETREG32(&pRegs->CANME,filterMailboxMask);                     //Finally enabel the mailbox

  00114	e59e3000	 ldr         r3, [lr]
  00118	e1833001	 orr         r3, r3, r1
  0011c	e58e3000	 str         r3, [lr]

; 1760 : }

  00120	e28dd008	 add         sp, sp, #8
  00124	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00128	e12fff1e	 bx          lr
  0012c		 |$M38375|

			 ENDP  ; |?ConfigureMailboxAndAcceptanceFilter@@YAXPAUT_CAN_DEVICE@@IPAUCLASS_FILTER@@@Z|, ConfigureMailboxAndAcceptanceFilter

	EXPORT	|?CANCreateClassFilter@@YAHPAXPAUCLASS_FILTER@@W4RXCAN_PRIORITY@@H@Z| ; CANCreateClassFilter
	EXPORT	|??_C@_1DG@FNCLOOFM@?$AAT?$AAh?$AAi?$AAs?$AA?5?$AAs?$AAh?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAe?$AAv?$AAe?$AAr?$AA?5?$AAh?$AAa?$AAp?$AAp?$AAe?$AAn?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|LocalAlloc|

  00000			 AREA	 |.pdata|, PDATA
|$T38421| DCD	|$LN36@CANCreateC|
	DCD	0x40005e01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@FNCLOOFM@?$AAT?$AAh?$AAi?$AAs?$AA?5?$AAs?$AAh?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAe?$AAv?$AAe?$AAr?$AA?5?$AAh?$AAa?$AAp?$AAp?$AAe?$AAn?$AA?$AN?$AA?6?$AA?$AA@| DCB "T"
	DCB	0x0, "h", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "s", 0x0, "h"
	DCB	0x0, "o", 0x0, "u", 0x0, "l", 0x0, "d", 0x0, " ", 0x0, "n"
	DCB	0x0, "e", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "h"
	DCB	0x0, "a", 0x0, "p", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CANCreateClassFilter@@YAHPAXPAUCLASS_FILTER@@W4RXCAN_PRIORITY@@H@Z| PROC ; CANCreateClassFilter

; 1764 : {

  00000		 |$LN36@CANCreateC|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004		 |$M38418|
  00004	e1a09003	 mov         r9, r3
  00008	e1a05002	 mov         r5, r2
  0000c	e1a07001	 mov         r7, r1
  00010	e1b04000	 movs        r4, r0

; 1765 :     T_CAN_DEVICE *pDevice = (T_CAN_DEVICE*) ctxt;
; 1766 :     CLASS_FILTER_INTERNAL* pNewClassFilter = NULL;
; 1767 :     DWORD filterMailboxMask;
; 1768 :     DWORD count;
; 1769 : 
; 1770 :     if (pDevice == NULL)
; 1771 :     {
; 1772 :         return FALSE;

  00014	0a000035	 beq         |$LN32@CANCreateC|

; 1773 :     }
; 1774 :     if (!(NB_RX_PRIORITIES > priority))

  00018	e3550003	 cmp         r5, #3

; 1775 :     {
; 1776 :         DEBUGMSG(1,(TEXT("Invalid RX priority\r\n")));
; 1777 :         return FALSE;

  0001c	aa000033	 bge         |$LN32@CANCreateC|

; 1778 :     }
; 1779 :     EnterCriticalSection(&pDevice->regcs);

  00020	e2840030	 add         r0, r4, #0x30
  00024	eb000000	 bl          EnterCriticalSection

; 1780 :     
; 1781 : 
; 1782 :     if (pDevice->nbFreeClassFilter < RxPriorityMlbxCount[priority])

  00028	e59f6144	 ldr         r6, [pc, #0x144]
  0002c	e59420dc	 ldr         r2, [r4, #0xDC]
  00030	e7b63105	 ldr         r3, [r6, +r5, lsl #2]!
  00034	e1520003	 cmp         r2, r3
  00038	3a00002a	 bcc         |$LN1@CANCreateC|

; 1783 :     {
; 1784 :         DEBUGMSG(1,(TEXT("Not enough Mailboxes to implement filter class\r\n")));
; 1785 :         goto error;
; 1786 :     }
; 1787 :     pNewClassFilter = (CLASS_FILTER_INTERNAL*) LocalAlloc(LPTR,sizeof(CLASS_FILTER_INTERNAL));

  0003c	e3a01018	 mov         r1, #0x18
  00040	e3a00040	 mov         r0, #0x40
  00044	eb000000	 bl          LocalAlloc
  00048	e1b05000	 movs        r5, r0

; 1788 :     if (pNewClassFilter==NULL)

  0004c	0a000025	 beq         |$LN1@CANCreateC|

; 1789 :     {
; 1790 :         DEBUGMSG(1,(TEXT("Unable to allocate  pNewClassFilter\r\n")));
; 1791 :         goto error;
; 1792 :     }
; 1793 :     pDevice->nbFreeClassFilter -= RxPriorityMlbxCount[priority];    

  00050	e59420dc	 ldr         r2, [r4, #0xDC]
  00054	e5963000	 ldr         r3, [r6]

; 1794 :     pNewClassFilter->classFilter = *pClassFilterIn;    
; 1795 :     pNewClassFilter->subFilter = NULL;

  00058	e3a0b000	 mov         r11, #0

; 1796 :     pNewClassFilter->enabled = fEnabled;    
; 1797 : 
; 1798 :     filterMailboxMask = 0;

  0005c	e3a00000	 mov         r0, #0
  00060	e0423003	 sub         r3, r2, r3
  00064	e58430dc	 str         r3, [r4, #0xDC]
  00068	e5973000	 ldr         r3, [r7]

; 1799 :     count = 0;

  0006c	e3a02000	 mov         r2, #0

; 1800 : 
; 1801 :     for (int i=NB_MAILBOXES-1;i>=0;i--)

  00070	e3a0101f	 mov         r1, #0x1F
  00074	e5853004	 str         r3, [r5, #4]
  00078	e5973004	 ldr         r3, [r7, #4]
  0007c	e585b00c	 str         r11, [r5, #0xC]
  00080	e5859010	 str         r9, [r5, #0x10]
  00084	e5853008	 str         r3, [r5, #8]
  00088	e59480c4	 ldr         r8, [r4, #0xC4]
  0008c	e3a0a001	 mov         r10, #1
  00090		 |$LL9@CANCreateC|

; 1802 :     {
; 1803 :         if (pDevice->FreeMailboxMask & (1<<i))

  00090	e1a0e11a	 mov         lr, r10, lsl r1
  00094	e118000e	 tst         r8, lr
  00098	0a000004	 beq         |$LN8@CANCreateC|

; 1804 :         {
; 1805 :             filterMailboxMask |= (1<<i);
; 1806 :             count++;
; 1807 :             if (count == RxPriorityMlbxCount[priority])

  0009c	e5963000	 ldr         r3, [r6]
  000a0	e2822001	 add         r2, r2, #1
  000a4	e18e0000	 orr         r0, lr, r0
  000a8	e1520003	 cmp         r2, r3
  000ac	0a000001	 beq         |$LN30@CANCreateC|
  000b0		 |$LN8@CANCreateC|

; 1800 : 
; 1801 :     for (int i=NB_MAILBOXES-1;i>=0;i--)

  000b0	e2511001	 subs        r1, r1, #1
  000b4	5afffff5	 bpl         |$LL9@CANCreateC|
  000b8		 |$LN30@CANCreateC|

; 1808 :             {
; 1809 :                 break;
; 1810 :             }
; 1811 :         }
; 1812 :     }
; 1813 :     if (count != RxPriorityMlbxCount[priority])

  000b8	e5963000	 ldr         r3, [r6]
  000bc	e1520003	 cmp         r2, r3
  000c0	0a00000d	 beq         |$LN4@CANCreateC|

; 1814 :     {
; 1815 :         ERRORMSG(1,(TEXT("This should never happen\r\n")));

  000c4	e59f10a4	 ldr         r1, [pc, #0xA4]
  000c8	e59f009c	 ldr         r0, [pc, #0x9C]
  000cc	e3a03c07	 mov         r3, #7, 24
  000d0	e3832017	 orr         r2, r3, #0x17
  000d4	eb000000	 bl          NKDbgPrintfW
  000d8	e59f0088	 ldr         r0, [pc, #0x88]
  000dc	eb000000	 bl          NKDbgPrintfW

; 1838 : error:
; 1839 :     if (pNewClassFilter)
; 1840 :     {
; 1841 :         LocalFree(pNewClassFilter);

  000e0	e1a00005	 mov         r0, r5
  000e4		 |$error$37477|
  000e4	eb000000	 bl          LocalFree
  000e8		 |$LN1@CANCreateC|

; 1842 :     }
; 1843 :     LeaveCriticalSection(&pDevice->regcs);

  000e8	e2840030	 add         r0, r4, #0x30
  000ec	eb000000	 bl          LeaveCriticalSection
  000f0		 |$LN32@CANCreateC|

; 1844 :     return FALSE;

  000f0	e3a00000	 mov         r0, #0

; 1845 : 
; 1846 : }

  000f4	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  000f8	e12fff1e	 bx          lr
  000fc		 |$LN4@CANCreateC|

; 1816 :         ASSERT(0);
; 1817 :         goto error;
; 1818 :     }
; 1819 : 
; 1820 :     
; 1821 : 
; 1822 :     PushElement((PSLE*)&pDevice->ClassFilterList,&pNewClassFilter->sle);

  000fc	e1a02004	 mov         r2, r4
  00100	e5b230d8	 ldr         r3, [r2, #0xD8]!
  00104	e1b01003	 movs        r1, r3
  00108	0a000004	 beq         |$LN33@CANCreateC|
  0010c		 |$LL22@CANCreateC|
  0010c	e5913000	 ldr         r3, [r1]
  00110	e1a02001	 mov         r2, r1
  00114	e1b01003	 movs        r1, r3
  00118	1afffffb	 bne         |$LL22@CANCreateC|
  0011c	e585b000	 str         r11, [r5]
  00120		 |$LN33@CANCreateC|
  00120	e5825000	 str         r5, [r2]

; 1823 :     
; 1824 :     pDevice->RxMailboxMask |= filterMailboxMask;

  00124	e59430c8	 ldr         r3, [r4, #0xC8]

; 1825 :     pDevice->FreeMailboxMask &= ~(filterMailboxMask);

  00128	e59420c4	 ldr         r2, [r4, #0xC4]

; 1826 :     pNewClassFilter->mailboxMask = filterMailboxMask;
; 1827 : 
; 1828 :     if (fEnabled)

  0012c	e3590000	 cmp         r9, #0
  00130	e1833000	 orr         r3, r3, r0
  00134	e1c22000	 bic         r2, r2, r0
  00138	e58430c8	 str         r3, [r4, #0xC8]
  0013c	e58420c4	 str         r2, [r4, #0xC4]
  00140	e5850014	 str         r0, [r5, #0x14]

; 1829 :     {
; 1830 :         ConfigureMailboxAndAcceptanceFilter(pDevice,pNewClassFilter->mailboxMask,pClassFilterIn);

  00144	11a01000	 movne       r1, r0
  00148	11a00004	 movne       r0, r4
  0014c	11a02007	 movne       r2, r7
  00150	1b000000	 blne        |?ConfigureMailboxAndAcceptanceFilter@@YAXPAUT_CAN_DEVICE@@IPAUCLASS_FILTER@@@Z|

; 1831 :     }
; 1832 : 
; 1833 : 
; 1834 : 
; 1835 :     
; 1836 :     LeaveCriticalSection(&pDevice->regcs);

  00154	e2840030	 add         r0, r4, #0x30
  00158	eb000000	 bl          LeaveCriticalSection

; 1837 :     return TRUE;

  0015c	e3a00001	 mov         r0, #1

; 1845 : 
; 1846 : }

  00160	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00164	e12fff1e	 bx          lr
  00168		 |$LN37@CANCreateC|
  00168		 |$LN38@CANCreateC|
  00168	00000000	 DCD         |??_C@_1DG@FNCLOOFM@?$AAT?$AAh?$AAi?$AAs?$AA?5?$AAs?$AAh?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAe?$AAv?$AAe?$AAr?$AA?5?$AAh?$AAa?$AAp?$AAp?$AAe?$AAn?$AA?$AN?$AA?6?$AA?$AA@|
  0016c		 |$LN39@CANCreateC|
  0016c	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  00170		 |$LN40@CANCreateC|
  00170	00000000	 DCD         |??_C@_1KA@HGKICKLA@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  00174		 |$LN41@CANCreateC|
  00174	00000000	 DCD         |RxPriorityMlbxCount|
  00178		 |$M38419|

			 ENDP  ; |?CANCreateClassFilter@@YAHPAXPAUCLASS_FILTER@@W4RXCAN_PRIORITY@@H@Z|, CANCreateClassFilter

	EXPORT	|?FindClassFilterInstance@@YAPAUCLASS_FILTER_INTERNAL@@PAUT_CAN_DEVICE@@PAUCLASS_FILTER@@@Z| ; FindClassFilterInstance

  00000			 AREA	 |.pdata|, PDATA
|$T38446| DCD	|$LN15@FindClassF@2|
	DCD	0x40001401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?FindClassFilterInstance@@YAPAUCLASS_FILTER_INTERNAL@@PAUT_CAN_DEVICE@@PAUCLASS_FILTER@@@Z| PROC ; FindClassFilterInstance

; 1850 : {

  00000		 |$LN15@FindClassF@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M38443|
  00004	e1b0e001	 movs        lr, r1

; 1851 :     CLASS_FILTER_INTERNAL* pCurrent = pDevice->ClassFilterList;

  00008	e59000d8	 ldr         r0, [r0, #0xD8]

; 1852 :     if (pClassFilter == NULL)
; 1853 :     {
; 1854 :         return NULL;

  0000c	0a00000c	 beq         |$LN12@FindClassF@2|

; 1855 :     }
; 1856 :     while (pCurrent)

  00010	e3500000	 cmp         r0, #0
  00014	0a00000a	 beq         |$LN12@FindClassF@2|
  00018	e59e1000	 ldr         r1, [lr]
  0001c		 |$LL3@FindClassF@2|

; 1857 :     {
; 1858 :         if ((pCurrent->classFilter.id.u32 == pClassFilter->id.u32)&&(pCurrent->classFilter.mask.u32 == pClassFilter->mask.u32))

  0001c	e5903004	 ldr         r3, [r0, #4]
  00020	e1530001	 cmp         r3, r1
  00024	1a000003	 bne         |$LN1@FindClassF@2|
  00028	e5902008	 ldr         r2, [r0, #8]
  0002c	e59e3004	 ldr         r3, [lr, #4]
  00030	e1520003	 cmp         r2, r3
  00034	0a000003	 beq         |$LN5@FindClassF@2|
  00038		 |$LN1@FindClassF@2|

; 1859 :         {
; 1860 :             return pCurrent;
; 1861 :         }
; 1862 :         pCurrent = (CLASS_FILTER_INTERNAL*) NextElement(&pCurrent->sle);

  00038	e5903000	 ldr         r3, [r0]
  0003c	e1b00003	 movs        r0, r3
  00040	1afffff5	 bne         |$LL3@FindClassF@2|
  00044		 |$LN12@FindClassF@2|

; 1863 :       
; 1864 : 
; 1865 :     }    
; 1866 :     return NULL;

  00044	e3a00000	 mov         r0, #0
  00048		 |$LN5@FindClassF@2|

; 1867 : }

  00048	e49de004	 ldr         lr, [sp], #4
  0004c	e12fff1e	 bx          lr
  00050		 |$M38444|

			 ENDP  ; |?FindClassFilterInstance@@YAPAUCLASS_FILTER_INTERNAL@@PAUT_CAN_DEVICE@@PAUCLASS_FILTER@@@Z|, FindClassFilterInstance

	EXPORT	|?CANDeleteClassFilter@@YAHPAXPAUCLASS_FILTER@@@Z| ; CANDeleteClassFilter

  00000			 AREA	 |.pdata|, PDATA
|$T38495| DCD	|$LN30@CANDeleteC|
	DCD	0x40003c01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CANDeleteClassFilter@@YAHPAXPAUCLASS_FILTER@@@Z| PROC ; CANDeleteClassFilter

; 1871 : {

  00000		 |$LN30@CANDeleteC|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M38492|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0

; 1872 :     T_CAN_DEVICE *pDevice = (T_CAN_DEVICE*) ctxt;
; 1873 :     CLASS_FILTER_INTERNAL* pClassFilterInstance;
; 1874 :     SUBCLASS_FILTER_INTERNAL* pCurrentSubClassFilter;
; 1875 : 
; 1876 :     EnterCriticalSection(&pDevice->regcs);

  0000c	e2850030	 add         r0, r5, #0x30
  00010	eb000000	 bl          EnterCriticalSection

; 1877 :     pClassFilterInstance = FindClassFilterInstance(pDevice,pClassFilterIn);

  00014	e1a01004	 mov         r1, r4
  00018	e1a00005	 mov         r0, r5
  0001c	eb000000	 bl          |?FindClassFilterInstance@@YAPAUCLASS_FILTER_INTERNAL@@PAUT_CAN_DEVICE@@PAUCLASS_FILTER@@@Z|
  00020	e1b06000	 movs        r6, r0

; 1878 :     if (pClassFilterInstance == NULL)

  00024	1a000004	 bne         |$LN3@CANDeleteC|

; 1879 :     {
; 1880 :         LeaveCriticalSection(&pDevice->regcs);

  00028	e2850030	 add         r0, r5, #0x30
  0002c	eb000000	 bl          LeaveCriticalSection

; 1881 :         return FALSE;

  00030	e3a00000	 mov         r0, #0

; 1901 : }

  00034	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$LN3@CANDeleteC|

; 1882 :     }
; 1883 : 
; 1884 :     RemoveElement((PSLE*) &pDevice->ClassFilterList,&pClassFilterInstance->sle);

  0003c	e1a01005	 mov         r1, r5
  00040	e5b130d8	 ldr         r3, [r1, #0xD8]!
  00044	e1b02003	 movs        r2, r3
  00048	0a00000c	 beq         |$LN7@CANDeleteC|
  0004c	e1520006	 cmp         r2, r6
  00050	05923000	 ldreq       r3, [r2]
  00054	05813000	 streq       r3, [r1]
  00058	0a000008	 beq         |$LN7@CANDeleteC|
  0005c		 |$LL8@CANDeleteC|
  0005c	e5923000	 ldr         r3, [r2]
  00060	e1530006	 cmp         r3, r6
  00064	0a000003	 beq         |$LN19@CANDeleteC|
  00068	e1a02003	 mov         r2, r3
  0006c	e3530000	 cmp         r3, #0
  00070	1afffff9	 bne         |$LL8@CANDeleteC|
  00074	ea000001	 b           |$LN7@CANDeleteC|
  00078		 |$LN19@CANDeleteC|
  00078	e5933000	 ldr         r3, [r3]
  0007c	e5823000	 str         r3, [r2]
  00080		 |$LN7@CANDeleteC|

; 1885 :     
; 1886 :     CLRREG32(&pDevice->pCanRegs->CANME,pClassFilterInstance->mailboxMask);    

  00080	e595102c	 ldr         r1, [r5, #0x2C]
  00084	e5962014	 ldr         r2, [r6, #0x14]

; 1887 :     pDevice->FreeMailboxMask |= (pClassFilterInstance->mailboxMask);
; 1888 :     pDevice->RxMailboxMask &= ~pClassFilterInstance->mailboxMask;
; 1889 :     LeaveCriticalSection(&pDevice->regcs);

  00088	e2850030	 add         r0, r5, #0x30
  0008c	e5913000	 ldr         r3, [r1]
  00090	e1c33002	 bic         r3, r3, r2
  00094	e5813000	 str         r3, [r1]
  00098	e5962014	 ldr         r2, [r6, #0x14]
  0009c	e59530c4	 ldr         r3, [r5, #0xC4]
  000a0	e59510c8	 ldr         r1, [r5, #0xC8]
  000a4	e1823003	 orr         r3, r2, r3
  000a8	e58530c4	 str         r3, [r5, #0xC4]
  000ac	e5963014	 ldr         r3, [r6, #0x14]
  000b0	e1c13003	 bic         r3, r1, r3
  000b4	e58530c8	 str         r3, [r5, #0xC8]
  000b8	eb000000	 bl          LeaveCriticalSection

; 1890 : 
; 1891 :    pCurrentSubClassFilter = pClassFilterInstance->subFilter;

  000bc	e596300c	 ldr         r3, [r6, #0xC]
  000c0	e1b04003	 movs        r4, r3

; 1892 :     while (pCurrentSubClassFilter)

  000c4	0a000004	 beq         |$LN1@CANDeleteC|
  000c8		 |$LL2@CANDeleteC|

; 1893 :     {
; 1894 :         SUBCLASS_FILTER_INTERNAL* pNext;
; 1895 :         pNext = (SUBCLASS_FILTER_INTERNAL*) NextElement(&pCurrentSubClassFilter->sle);
; 1896 :         LocalFree(pCurrentSubClassFilter);

  000c8	e1a00004	 mov         r0, r4
  000cc	e5944000	 ldr         r4, [r4]
  000d0	eb000000	 bl          LocalFree

; 1897 :         pCurrentSubClassFilter = pNext;

  000d4	e3540000	 cmp         r4, #0
  000d8	1afffffa	 bne         |$LL2@CANDeleteC|
  000dc		 |$LN1@CANDeleteC|

; 1898 :     }
; 1899 :     LocalFree(pClassFilterInstance);

  000dc	e1a00006	 mov         r0, r6
  000e0	eb000000	 bl          LocalFree

; 1900 :     return TRUE;

  000e4	e3a00001	 mov         r0, #1

; 1901 : }

  000e8	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000ec	e12fff1e	 bx          lr
  000f0		 |$M38493|

			 ENDP  ; |?CANDeleteClassFilter@@YAHPAXPAUCLASS_FILTER@@@Z|, CANDeleteClassFilter

	EXPORT	|?CANEnableClassFilter@@YAHPAXPAUCLASS_FILTER@@H@Z| ; CANEnableClassFilter

  00000			 AREA	 |.pdata|, PDATA
|$T38509| DCD	|$LN10@CANEnableC|
	DCD	0x40002001
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CANEnableClassFilter@@YAHPAXPAUCLASS_FILTER@@H@Z| PROC ; CANEnableClassFilter

; 1904 : {

  00000		 |$LN10@CANEnableC|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M38506|
  00004	e1a04002	 mov         r4, r2
  00008	e1a06001	 mov         r6, r1
  0000c	e1a05000	 mov         r5, r0

; 1905 :     T_CAN_DEVICE *pDevice = (T_CAN_DEVICE*) ctxt;
; 1906 :     CLASS_FILTER_INTERNAL* pClassFilterInstance;
; 1907 : 
; 1908 :     EnterCriticalSection(&pDevice->regcs);

  00010	e2850030	 add         r0, r5, #0x30
  00014	eb000000	 bl          EnterCriticalSection

; 1909 :     pClassFilterInstance = FindClassFilterInstance(pDevice,pClassFilterIn);

  00018	e1a01006	 mov         r1, r6
  0001c	e1a00005	 mov         r0, r5
  00020	eb000000	 bl          |?FindClassFilterInstance@@YAPAUCLASS_FILTER_INTERNAL@@PAUT_CAN_DEVICE@@PAUCLASS_FILTER@@@Z|
  00024	e3500000	 cmp         r0, #0

; 1910 :     if (pClassFilterInstance)

  00028	0a00000e	 beq         |$LN4@CANEnableC|

; 1911 :     {
; 1912 :         if (fEnabled)

  0002c	e3540000	 cmp         r4, #0
  00030	0a000005	 beq         |$LN3@CANEnableC|

; 1913 :         {
; 1914 :             ConfigureMailboxAndAcceptanceFilter(pDevice,pClassFilterInstance->mailboxMask,pClassFilterIn);

  00034	e5901014	 ldr         r1, [r0, #0x14]
  00038	e1a02006	 mov         r2, r6
  0003c	e1a00005	 mov         r0, r5
  00040	eb000000	 bl          |?ConfigureMailboxAndAcceptanceFilter@@YAXPAUT_CAN_DEVICE@@IPAUCLASS_FILTER@@@Z|
  00044	e3a04001	 mov         r4, #1
  00048	ea000007	 b           |$LN7@CANEnableC|
  0004c		 |$LN3@CANEnableC|

; 1915 :         }
; 1916 :         else
; 1917 :         {            
; 1918 :             CLRREG32(&pDevice->pCanRegs->CANME,pClassFilterInstance->mailboxMask);

  0004c	e595102c	 ldr         r1, [r5, #0x2C]
  00050	e5902014	 ldr         r2, [r0, #0x14]
  00054	e3a04001	 mov         r4, #1
  00058	e5913000	 ldr         r3, [r1]
  0005c	e1c33002	 bic         r3, r3, r2
  00060	e5813000	 str         r3, [r1]
  00064	ea000000	 b           |$LN7@CANEnableC|
  00068		 |$LN4@CANEnableC|
  00068	e3a04000	 mov         r4, #0
  0006c		 |$LN7@CANEnableC|

; 1919 :             
; 1920 :         }
; 1921 :         LeaveCriticalSection(&pDevice->regcs);

  0006c	e2850030	 add         r0, r5, #0x30
  00070	eb000000	 bl          LeaveCriticalSection

; 1922 :         return TRUE;
; 1923 :     }
; 1924 :     else
; 1925 :     {
; 1926 :         LeaveCriticalSection(&pDevice->regcs);
; 1927 :         return FALSE;
; 1928 :     }
; 1929 : 
; 1930 : }

  00074	e1a00004	 mov         r0, r4
  00078	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0007c	e12fff1e	 bx          lr
  00080		 |$M38507|

			 ENDP  ; |?CANEnableClassFilter@@YAHPAXPAUCLASS_FILTER@@H@Z|, CANEnableClassFilter

	EXPORT	|?CANAddSubClassFilter@@YAHPAXPAUSUBCLASS_FILTER@@@Z| ; CANAddSubClassFilter

  00000			 AREA	 |.pdata|, PDATA
|$T38543| DCD	|$LN19@CANAddSubC|
	DCD	0x40002f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CANAddSubClassFilter@@YAHPAXPAUSUBCLASS_FILTER@@@Z| PROC ; CANAddSubClassFilter

; 1934 : {    

  00000		 |$LN19@CANAddSubC|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M38540|
  00004	e1a06001	 mov         r6, r1
  00008	e1a05000	 mov         r5, r0

; 1935 :     T_CAN_DEVICE *pDevice = (T_CAN_DEVICE*) ctxt;
; 1936 :     CLASS_FILTER_INTERNAL* pClassFilterInstance;
; 1937 :     SUBCLASS_FILTER_INTERNAL* pNewSubclassFilter;
; 1938 : 
; 1939 :     pNewSubclassFilter = (SUBCLASS_FILTER_INTERNAL*) LocalAlloc(LPTR,sizeof(SUBCLASS_FILTER_INTERNAL));

  0000c	e3a01010	 mov         r1, #0x10
  00010	e3a00040	 mov         r0, #0x40
  00014	eb000000	 bl          LocalAlloc
  00018	e1b04000	 movs        r4, r0

; 1940 :     if (pNewSubclassFilter == NULL)

  0001c	1a000002	 bne         |$LN4@CANAddSubC|
  00020		 |$LN16@CANAddSubC|

; 1941 :     {
; 1942 :         return FALSE;

  00020	e3a00000	 mov         r0, #0

; 1966 : }

  00024	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$LN4@CANAddSubC|

; 1943 :     }
; 1944 :     pNewSubclassFilter->enabled = TRUE;

  0002c	e3a03001	 mov         r3, #1
  00030	e584300c	 str         r3, [r4, #0xC]

; 1945 :     pNewSubclassFilter->id.u32 = pSubclassFilter->id.u32 & pSubclassFilter->mask.u32;

  00034	e596200c	 ldr         r2, [r6, #0xC]
  00038	e5963008	 ldr         r3, [r6, #8]

; 1946 :     pNewSubclassFilter->mask.u32 = pSubclassFilter->mask.u32;
; 1947 : 
; 1948 :     EnterCriticalSection(&pDevice->regcs);

  0003c	e2850030	 add         r0, r5, #0x30
  00040	e0023003	 and         r3, r2, r3
  00044	e5843004	 str         r3, [r4, #4]
  00048	e596300c	 ldr         r3, [r6, #0xC]
  0004c	e5843008	 str         r3, [r4, #8]
  00050	eb000000	 bl          EnterCriticalSection

; 1949 : 
; 1950 :     pClassFilterInstance = FindClassFilterInstance(pDevice,&pSubclassFilter->classFilter);

  00054	e1a01006	 mov         r1, r6
  00058	e1a00005	 mov         r0, r5
  0005c	eb000000	 bl          |?FindClassFilterInstance@@YAPAUCLASS_FILTER_INTERNAL@@PAUT_CAN_DEVICE@@PAUCLASS_FILTER@@@Z|
  00060	e3500000	 cmp         r0, #0

; 1951 :     if (pClassFilterInstance == NULL)

  00064	1a000004	 bne         |$LN3@CANAddSubC|

; 1959 : error:    
; 1960 :     LeaveCriticalSection(&pDevice->regcs);

  00068	e2850030	 add         r0, r5, #0x30
  0006c		 |$error$37553|
  0006c	eb000000	 bl          LeaveCriticalSection

; 1961 :     if (pNewSubclassFilter)
; 1962 :     {
; 1963 :         LocalFree(pNewSubclassFilter);

  00070	e1a00004	 mov         r0, r4
  00074	eb000000	 bl          LocalFree

; 1964 :     }
; 1965 :     return FALSE;

  00078	eaffffe8	 b           |$LN16@CANAddSubC|
  0007c		 |$LN3@CANAddSubC|

; 1952 :     {
; 1953 :         goto error;
; 1954 :     }
; 1955 :     PushElement((PSLE*)&pClassFilterInstance->subFilter,&pNewSubclassFilter->sle);

  0007c	e5b0300c	 ldr         r3, [r0, #0xC]!
  00080	e1b02003	 movs        r2, r3
  00084	05804000	 streq       r4, [r0]
  00088	0a000006	 beq         |$LN11@CANAddSubC|
  0008c		 |$LL9@CANAddSubC|
  0008c	e5923000	 ldr         r3, [r2]
  00090	e1a01002	 mov         r1, r2
  00094	e1b02003	 movs        r2, r3
  00098	1afffffb	 bne         |$LL9@CANAddSubC|
  0009c	e3a03000	 mov         r3, #0
  000a0	e5843000	 str         r3, [r4]
  000a4	e5814000	 str         r4, [r1]
  000a8		 |$LN11@CANAddSubC|

; 1956 : 
; 1957 :     LeaveCriticalSection(&pDevice->regcs);

  000a8	e2850030	 add         r0, r5, #0x30
  000ac	eb000000	 bl          LeaveCriticalSection

; 1958 :     return TRUE;

  000b0	e3a00001	 mov         r0, #1

; 1966 : }

  000b4	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000b8	e12fff1e	 bx          lr
  000bc		 |$M38541|

			 ENDP  ; |?CANAddSubClassFilter@@YAHPAXPAUSUBCLASS_FILTER@@@Z|, CANAddSubClassFilter

	EXPORT	|?CANRemoveSubClassFilter@@YAHPAXPAUSUBCLASS_FILTER@@@Z| ; CANRemoveSubClassFilter

  00000			 AREA	 |.pdata|, PDATA
|$T38573| DCD	|$LN25@CANRemoveS|
	DCD	0x40003201
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CANRemoveSubClassFilter@@YAHPAXPAUSUBCLASS_FILTER@@@Z| PROC ; CANRemoveSubClassFilter

; 1968 : {

  00000		 |$LN25@CANRemoveS|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M38570|
  00004	e1a07001	 mov         r7, r1
  00008	e1a05000	 mov         r5, r0

; 1969 :     T_CAN_DEVICE *pDevice = (T_CAN_DEVICE*) ctxt;
; 1970 :     CLASS_FILTER_INTERNAL* pClassFilterInstance;
; 1971 :     SUBCLASS_FILTER_INTERNAL* pCurrent;
; 1972 :     SUBCLASS_FILTER_INTERNAL* pPrevious;
; 1973 : 
; 1974 :     EnterCriticalSection(&pDevice->regcs);

  0000c	e2850030	 add         r0, r5, #0x30
  00010	eb000000	 bl          EnterCriticalSection

; 1975 : 
; 1976 :     pClassFilterInstance = FindClassFilterInstance(pDevice,&pSubclassFilter->classFilter);

  00014	e1a01007	 mov         r1, r7
  00018	e1a00005	 mov         r0, r5
  0001c	eb000000	 bl          |?FindClassFilterInstance@@YAPAUCLASS_FILTER_INTERNAL@@PAUT_CAN_DEVICE@@PAUCLASS_FILTER@@@Z|
  00020	e1b06000	 movs        r6, r0

; 1977 :     if (pClassFilterInstance == NULL)

  00024	0a000022	 beq         |$error$37567|

; 1978 :     {
; 1979 :         goto error;
; 1980 :     }
; 1981 : 
; 1982 :     if (pClassFilterInstance->subFilter == NULL)

  00028	e596300c	 ldr         r3, [r6, #0xC]
  0002c	e3530000	 cmp         r3, #0
  00030	0a00001f	 beq         |$error$37567|

; 1983 :     {
; 1984 :         goto error;
; 1985 :     }
; 1986 :     pPrevious = NULL;

  00034	e3a04000	 mov         r4, #0
  00038	ea000016	 b           |$LN22@CANRemoveS|
  0003c		 |$LL6@CANRemoveS|

; 1987 :     pCurrent = pClassFilterInstance->subFilter;
; 1988 :     while (pCurrent)
; 1989 :     {
; 1990 :         if ((pCurrent->id.u32 == (pSubclassFilter->id.u32 & pSubclassFilter->mask.u32)) && 
; 1991 :             (pCurrent->mask.u32 == pSubclassFilter->mask.u32))

  0003c	e597e00c	 ldr         lr, [r7, #0xC]
  00040	e5973008	 ldr         r3, [r7, #8]
  00044	e5902004	 ldr         r2, [r0, #4]
  00048	e00e3003	 and         r3, lr, r3
  0004c	e1520003	 cmp         r2, r3
  00050	1a00000c	 bne         |$LN2@CANRemoveS|
  00054	e5903008	 ldr         r3, [r0, #8]
  00058	e153000e	 cmp         r3, lr
  0005c	1a000009	 bne         |$LN2@CANRemoveS|

; 1992 :         {
; 1993 :             if (pPrevious)
; 1994 :             {
; 1995 :                 pPrevious->sle.pNext = NextElement(&pCurrent->sle);

  00060	e5903000	 ldr         r3, [r0]
  00064	e3540000	 cmp         r4, #0
  00068	0a000003	 beq         |$LN3@CANRemoveS|

; 1996 :                 LocalFree(pCurrent);

  0006c	e5843000	 str         r3, [r4]
  00070	eb000000	 bl          LocalFree

; 1997 :                 pCurrent = pPrevious;

  00074	e1a00004	 mov         r0, r4

; 1998 :             }
; 1999 :             else

  00078	ea000002	 b           |$LN2@CANRemoveS|
  0007c		 |$LN3@CANRemoveS|

; 2000 :             {
; 2001 :                 pClassFilterInstance->subFilter =(SUBCLASS_FILTER_INTERNAL*) NextElement(&pCurrent->sle);
; 2002 :                 LocalFree(pCurrent);

  0007c	e586300c	 str         r3, [r6, #0xC]
  00080	eb000000	 bl          LocalFree

; 2003 :                 pCurrent = NULL;

  00084	e3a00000	 mov         r0, #0
  00088		 |$LN2@CANRemoveS|

; 2004 :             }
; 2005 :         }
; 2006 :         pPrevious = pCurrent;

  00088	e1a04000	 mov         r4, r0

; 2007 :         if (pCurrent)

  0008c	e3500000	 cmp         r0, #0
  00090	0a000002	 beq         |$LN21@CANRemoveS|

; 2008 :         {
; 2009 :             pCurrent = (SUBCLASS_FILTER_INTERNAL*) NextElement(&pCurrent->sle);

  00094	e5903000	 ldr         r3, [r0]
  00098		 |$LN22@CANRemoveS|
  00098	e1b00003	 movs        r0, r3
  0009c	1affffe6	 bne         |$LL6@CANRemoveS|
  000a0		 |$LN21@CANRemoveS|

; 2010 :         }
; 2011 :     }
; 2012 : 
; 2013 :     
; 2014 :     LeaveCriticalSection(&pDevice->regcs);

  000a0	e2850030	 add         r0, r5, #0x30
  000a4	eb000000	 bl          LeaveCriticalSection

; 2015 :     return TRUE;

  000a8	e3a00001	 mov         r0, #1

; 2019 : }

  000ac	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  000b0	e12fff1e	 bx          lr
  000b4		 |$error$37567|

; 2016 : error:    
; 2017 :     LeaveCriticalSection(&pDevice->regcs);

  000b4	e2850030	 add         r0, r5, #0x30
  000b8	eb000000	 bl          LeaveCriticalSection

; 2018 :     return FALSE;

  000bc	e3a00000	 mov         r0, #0

; 2019 : }

  000c0	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  000c4	e12fff1e	 bx          lr
  000c8		 |$M38571|

			 ENDP  ; |?CANRemoveSubClassFilter@@YAHPAXPAUSUBCLASS_FILTER@@@Z|, CANRemoveSubClassFilter

	EXPORT	|?CANisIDAccepted@@YAHTCAN_ID@@PAUSUBCLASS_FILTER_INTERNAL@@@Z| ; CANisIDAccepted

  00000			 AREA	 |.pdata|, PDATA
|$T38597| DCD	|$LN19@CANisIDAcc|
	DCD	0x40000e00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CANisIDAccepted@@YAHTCAN_ID@@PAUSUBCLASS_FILTER_INTERNAL@@@Z| PROC ; CANisIDAccepted

; 2022 : {    

  00000		 |$LN19@CANisIDAcc|
  00000		 |$M38594|
  00000	e3510000	 cmp         r1, #0

; 2023 :     SUBCLASS_FILTER_INTERNAL* pCurrent = pList;
; 2024 :     if (pList == NULL)
; 2025 :     {
; 2026 :         return TRUE;

  00004	0a000009	 beq         |$LN10@CANisIDAcc|
  00008		 |$LL3@CANisIDAcc|

; 2027 :     }
; 2028 :     while (pCurrent)
; 2029 :     {   
; 2030 :         if (pCurrent->id.u32  == (id.u32 & pCurrent->mask.u32))

  00008	e5913008	 ldr         r3, [r1, #8]
  0000c	e5912004	 ldr         r2, [r1, #4]
  00010	e0033000	 and         r3, r3, r0
  00014	e1520003	 cmp         r2, r3
  00018	0a000004	 beq         |$LN10@CANisIDAcc|

; 2033 :         }
; 2034 :         pCurrent = (SUBCLASS_FILTER_INTERNAL*) NextElement(&pCurrent->sle);

  0001c	e5913000	 ldr         r3, [r1]
  00020	e1b01003	 movs        r1, r3
  00024	1afffff7	 bne         |$LL3@CANisIDAcc|

; 2035 :     }
; 2036 :     return FALSE;

  00028	e3a00000	 mov         r0, #0

; 2037 : }

  0002c	e12fff1e	 bx          lr
  00030		 |$LN10@CANisIDAcc|

; 2031 :         {
; 2032 :             return TRUE;

  00030	e3a00001	 mov         r0, #1

; 2037 : }

  00034	e12fff1e	 bx          lr
  00038		 |$M38595|

			 ENDP  ; |?CANisIDAccepted@@YAHTCAN_ID@@PAUSUBCLASS_FILTER_INTERNAL@@@Z|, CANisIDAccepted

	EXPORT	|?CANRemoteRequest@@YAHPAXPAUCAN_REMOTE_REQUEST@@@Z| ; CANRemoteRequest
	EXPORT	|??_C@_1GE@OEKNAFA@?$AAu?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAa?$AA?5?$AAf?$AAe?$AAr?$AAe?$AA?5?$AAm?$AAa?$AAi?$AAl?$AAb?$AAo?$AAx?$AA?5?$AAf?$AAo?$AAr@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T38626| DCD	|$LN20@CANRemoteR|
	DCD	0x40004101

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@OEKNAFA@?$AAu?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAa?$AA?5?$AAf?$AAe?$AAr?$AAe?$AA?5?$AAm?$AAa?$AAi?$AAl?$AAb?$AAo?$AAx?$AA?5?$AAf?$AAo?$AAr@| DCB "u"
	DCB	0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "g", 0x0, "e", 0x0, "t"
	DCB	0x0, " ", 0x0, "a", 0x0, " ", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, "e", 0x0, " ", 0x0, "m", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "b", 0x0, "o", 0x0, "x", 0x0, " ", 0x0, "f", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "m", 0x0, "o"
	DCB	0x0, "t", 0x0, "e", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "q"
	DCB	0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CANRemoteRequest@@YAHPAXPAUCAN_REMOTE_REQUEST@@@Z| PROC ; CANRemoteRequest

; 2040 : {    

  00000		 |$LN20@CANRemoteR|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M38623|
  00004	e1a06001	 mov         r6, r1
  00008	e1a04000	 mov         r4, r0

; 2041 :     int mailbox = -1;
; 2042 :     T_CAN_DEVICE *pDevice = (T_CAN_DEVICE*) ctxt;    
; 2043 :     OMAP_HECC_SCC_MAILBOX* pMbx;
; 2044 :     OMAP_HECC_SCC_REGS* pCanRegs = pDevice->pCanRegs;
; 2045 :     
; 2046 :     EnterCriticalSection(&pDevice->regcs);

  0000c	e594502c	 ldr         r5, [r4, #0x2C]
  00010	e2840030	 add         r0, r4, #0x30
  00014	eb000000	 bl          EnterCriticalSection

; 2047 :     for (int i=NB_MAILBOXES-1;i>=0;i--)

  00018	e59430c4	 ldr         r3, [r4, #0xC4]
  0001c	e3a0201f	 mov         r2, #0x1F
  00020	e3a01001	 mov         r1, #1
  00024		 |$LL5@CANRemoteR|

; 2048 :     {
; 2049 :         if (pDevice->FreeMailboxMask & (1<<i))

  00024	e1130211	 tst         r3, r1, lsl r2
  00028	1a000002	 bne         |$LN15@CANRemoteR|

; 2047 :     for (int i=NB_MAILBOXES-1;i>=0;i--)

  0002c	e2522001	 subs        r2, r2, #1
  00030	5afffffb	 bpl         |$LL5@CANRemoteR|

; 2048 :     {
; 2049 :         if (pDevice->FreeMailboxMask & (1<<i))

  00034	ea000005	 b           |$LN17@CANRemoteR|
  00038		 |$LN15@CANRemoteR|

; 2050 :         {
; 2051 :             pDevice->FreeMailboxMask &= ~(1<<i);      

  00038	e3a01001	 mov         r1, #1
  0003c	e1a0e211	 mov         lr, r1, lsl r2

; 2052 :             mailbox = i;
; 2053 :             break;
; 2054 :         }
; 2055 :     }
; 2056 :     
; 2057 :     if (mailbox == -1)

  00040	e3720001	 cmn         r2, #1
  00044	e1c3300e	 bic         r3, r3, lr
  00048	e58430c4	 str         r3, [r4, #0xC4]
  0004c	1a000006	 bne         |$LN1@CANRemoteR|
  00050		 |$LN17@CANRemoteR|

; 2058 :     {
; 2059 :         LeaveCriticalSection(&pDevice->regcs);

  00050	e2840030	 add         r0, r4, #0x30
  00054	eb000000	 bl          LeaveCriticalSection

; 2060 :         RETAILMSG(1,(TEXT("unable to get a fere mailbox for remote request\r\n")));

  00058	e59f00a0	 ldr         r0, [pc, #0xA0]
  0005c	eb000000	 bl          NKDbgPrintfW

; 2061 :         return FALSE;

  00060	e3a00000	 mov         r0, #0

; 2079 : }

  00064	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00068	e12fff1e	 bx          lr
  0006c		 |$LN1@CANRemoteR|

; 2062 : 
; 2063 :     }
; 2064 : 
; 2065 :     pDevice->RemoteRequestMask |= (1<<mailbox);

  0006c	e59430d0	 ldr         r3, [r4, #0xD0]

; 2066 :     pMbx = &pDevice->pCanRegs->MailBoxes[mailbox];

  00070	e594102c	 ldr         r1, [r4, #0x2C]
  00074	e2822c02	 add         r2, r2, #2, 24
  00078	e183300e	 orr         r3, r3, lr
  0007c	e58430d0	 str         r3, [r4, #0xD0]

; 2067 :     //Configure the mailbox for remote frame rquest     
; 2068 :     pCanRegs->CANME &= ~(1<<mailbox);            

  00080	e5953000	 ldr         r3, [r5]
  00084	e0811202	 add         r1, r1, r2, lsl #4

; 2069 :     pMbx->CANMID = IDtoCANMID(pRemoteRequest->id);    
; 2070 :     pMbx->CANMCF = CANMCF_RTR | 8 |(0x3 << 8);    //use highest priority for Remote frames    
; 2071 :     pCanRegs->CANMD |=  (1<<mailbox);
; 2072 :     pCanRegs->CANMIM |= (1<<mailbox);
; 2073 :     SETREG32(&pCanRegs->CANMIL,(1<<mailbox));                    //Remote request mailboxes trigger CAN IRQ 1
; 2074 :     pCanRegs->CANME |= (1<<mailbox);    
; 2075 :     pCanRegs->CANTRS = (1<<mailbox);
; 2076 :     
; 2077 :     LeaveCriticalSection(&pDevice->regcs);

  00088	e2840030	 add         r0, r4, #0x30
  0008c	e1c3300e	 bic         r3, r3, lr
  00090	e5853000	 str         r3, [r5]
  00094	e5962000	 ldr         r2, [r6]
  00098	e3120102	 tst         r2, #2, 2
  0009c	13c2320e	 bicne       r3, r2, #0xE, 4
  000a0	13833102	 orrne       r3, r3, #2, 2
  000a4	03a0357f	 moveq       r3, #0x7F, 10
  000a8	0383370f	 orreq       r3, r3, #0xF, 14
  000ac	00023003	 andeq       r3, r2, r3
  000b0	e3a02fc6	 mov         r2, #0xC6, 30
  000b4	e5813000	 str         r3, [r1]
  000b8	e5812004	 str         r2, [r1, #4]
  000bc	e5953004	 ldr         r3, [r5, #4]
  000c0	e183300e	 orr         r3, r3, lr
  000c4	e5853004	 str         r3, [r5, #4]
  000c8	e5953048	 ldr         r3, [r5, #0x48]
  000cc	e183300e	 orr         r3, r3, lr
  000d0	e5853048	 str         r3, [r5, #0x48]
  000d4	e595304c	 ldr         r3, [r5, #0x4C]
  000d8	e183300e	 orr         r3, r3, lr
  000dc	e585304c	 str         r3, [r5, #0x4C]
  000e0	e5953000	 ldr         r3, [r5]
  000e4	e183300e	 orr         r3, r3, lr
  000e8	e5853000	 str         r3, [r5]
  000ec	e585e008	 str         lr, [r5, #8]
  000f0	eb000000	 bl          LeaveCriticalSection

; 2078 :     return TRUE;    

  000f4	e3a00001	 mov         r0, #1

; 2079 : }

  000f8	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000fc	e12fff1e	 bx          lr
  00100		 |$LN21@CANRemoteR|
  00100		 |$LN22@CANRemoteR|
  00100	00000000	 DCD         |??_C@_1GE@OEKNAFA@?$AAu?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAa?$AA?5?$AAf?$AAe?$AAr?$AAe?$AA?5?$AAm?$AAa?$AAi?$AAl?$AAb?$AAo?$AAx?$AA?5?$AAf?$AAo?$AAr@|
  00104		 |$M38624|

			 ENDP  ; |?CANRemoteRequest@@YAHPAXPAUCAN_REMOTE_REQUEST@@@Z|, CANRemoteRequest

	EXPORT	|?HandleRXMailboxInterrupt@@YAXPAUT_CAN_DEVICE@@@Z| ; HandleRXMailboxInterrupt
	EXPORT	|??_C@_1JE@PINEAJCM@?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAa?$AA?5?$AAm?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAn?$AAo?$AA?5?$AAf?$AAi?$AAl?$AAt?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@IIGLFKGD@?$AAu?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?5?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$HM?$AA?5?$AA?$CF?$AAi?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@BCDBGOBM@?$AAr?$AAe?$AAm?$AAo?$AAt?$AAe?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAa?$AAn?$AAs?$AAw?$AAe?$AAr?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@FOGLPLCN@?$AAR?$AAe?$AAm?$AAo?$AAt?$AAe?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$HM?$AA?5?$AA?$CF?$AAi?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T38681| DCD	|$LN51@HandleRXMa|
	DCD	0x40009702

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JE@PINEAJCM@?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAa?$AA?5?$AAm?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAn?$AAo?$AA?5?$AAf?$AAi?$AAl?$AAt?$AAe@| DCB "R"
	DCB	0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "a", 0x0, " ", 0x0, "m", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, " "
	DCB	0x0, "w", 0x0, "i", 0x0, "t", 0x0, "h", 0x0, " ", 0x0, "n"
	DCB	0x0, "o", 0x0, " ", 0x0, "f", 0x0, "i", 0x0, "l", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, ".", 0x0, " ", 0x0, "V", 0x0, "e"
	DCB	0x0, "r", 0x0, "y", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "g", 0x0, "e", 0x0, ".", 0x0, " "
	DCB	0x0, "A", 0x0, "c", 0x0, "c", 0x0, "e", 0x0, "p", 0x0, "t"
	DCB	0x0, " ", 0x0, "i", 0x0, "t", 0x0, " ", 0x0, "j", 0x0, "u"
	DCB	0x0, "s", 0x0, "t", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, " "
	DCB	0x0, "c", 0x0, "a", 0x0, "s", 0x0, "e", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@IIGLFKGD@?$AAu?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?5?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$HM?$AA?5?$AA?$CF?$AAi?$AA?$AN?$AA?6@| DCB "u"
	DCB	0x0, "n", 0x0, "k", 0x0, "n", 0x0, "o", 0x0, "w", 0x0, "n"
	DCB	0x0, " ", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, " ", 0x0, "|", 0x0, " ", 0x0, "%", 0x0, "i", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@BCDBGOBM@?$AAr?$AAe?$AAm?$AAo?$AAt?$AAe?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAa?$AAn?$AAs?$AAw?$AAe?$AAr?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?$AN?$AA?6@| DCB "r"
	DCB	0x0, "e", 0x0, "m", 0x0, "o", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s"
	DCB	0x0, "t", 0x0, " ", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "w"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "c"
	DCB	0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@FOGLPLCN@?$AAR?$AAe?$AAm?$AAo?$AAt?$AAe?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$HM?$AA?5?$AA?$CF?$AAi?$AA?$AN?$AA?6?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "m", 0x0, "o", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "|"
	DCB	0x0, " ", 0x0, "%", 0x0, "i", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?HandleRXMailboxInterrupt@@YAXPAUT_CAN_DEVICE@@@Z| PROC ; HandleRXMailboxInterrupt

; 1004 : {    

  00000		 |$LN51@HandleRXMa|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dde22	 sub         sp, sp, #0x22, 28
  00008		 |$M38678|
  00008	e1a04000	 mov         r4, r0

; 1005 :     OMAP_HECC_SCC_MAILBOX mailboxCopy[NB_MAILBOXES];
; 1006 :     CLASS_FILTER_INTERNAL* pClassFilter;
; 1007 :     DWORD dwRmpStatus;
; 1008 :     DWORD cpy;
; 1009 :     int i;
; 1010 :     DWORD LocalRemoteRequestMask;
; 1011 :     OMAP_HECC_SCC_REGS* pRegs = pDevice->pCanRegs;  

  0000c	e594802c	 ldr         r8, [r4, #0x2C]

; 1012 :     DWORD dwRmlStatus = INREG32(&pRegs->CANRML);    
; 1013 : 
; 1014 : 
; 1015 : 
; 1016 :     EnterCriticalSection(&pDevice->regcs);

  00010	e2840030	 add         r0, r4, #0x30
  00014	e598301c	 ldr         r3, [r8, #0x1C]
  00018	e58d301c	 str         r3, [sp, #0x1C]
  0001c	eb000000	 bl          EnterCriticalSection

; 1017 : 
; 1018 :         
; 1019 :     dwRmpStatus = INREG32(&pRegs->CANRMP);

  00020	e5983018	 ldr         r3, [r8, #0x18]

; 1020 :     
; 1021 :     //First of all make a copy of the mailbox as fast as possible.
; 1022 :     //We do this because filtering takes CPU time and thus interleaving mailbox mgnt and filtering
; 1023 :     //increase the risk of overruns and msg order change
; 1024 :     LocalRemoteRequestMask = pDevice->RemoteRequestMask;

  00024	e59420d0	 ldr         r2, [r4, #0xD0]

; 1025 :     cpy = dwRmpStatus;
; 1026 :     i = NB_MAILBOXES-1;    

  00028	e3a0a01f	 mov         r10, #0x1F
  0002c	e1b0b003	 movs        r11, r3
  00030	e58db018	 str         r11, [sp, #0x18]
  00034	e1a0900b	 mov         r9, r11
  00038	e58d2014	 str         r2, [sp, #0x14]

; 1027 :     while (cpy)

  0003c	0a00002c	 beq         |$LN17@HandleRXMa|
  00040	e59db01c	 ldr         r11, [sp, #0x1C]
  00044	e28d6e21	 add         r6, sp, #0x21, 28
  00048	e2887e1f	 add         r7, r8, #0x1F, 28
  0004c	e3a03001	 mov         r3, #1
  00050		 |$LL18@HandleRXMa|

; 1028 :     {        
; 1029 :         register DWORD mask = 1<<i;

  00050	e1a05a13	 mov         r5, r3, lsl r10

; 1030 :         if (cpy & mask)

  00054	e1150009	 tst         r5, r9
  00058	0a00001f	 beq         |$LN16@HandleRXMa|

; 1031 :         {
; 1032 :             mailboxCopy[i] = pRegs->MailBoxes[i];

  0005c	e2870a02	 add         r0, r7, #2, 20
  00060	e590000c	 ldr         r0, [r0, #0xC]
  00064	e2873a02	 add         r3, r7, #2, 20
  00068	e5933000	 ldr         r3, [r3]
  0006c	e2872a02	 add         r2, r7, #2, 20
  00070	e5922004	 ldr         r2, [r2, #4]
  00074	e2871a02	 add         r1, r7, #2, 20
  00078	e5911008	 ldr         r1, [r1, #8]

; 1033 :             
; 1034 :   
; 1035 :             if (dwRmlStatus &(1<<i))

  0007c	e115000b	 tst         r5, r11
  00080	e586000c	 str         r0, [r6, #0xC]

; 1036 :             {
; 1037 : //                RETAILMSG(1,(TEXT("mailbox %d generated a RX LOST interrup\r\n"),i));            
; 1038 :                 OUTREG32(&pRegs->CANRML,(1<<i));
; 1039 :                 InterlockedIncrement(&pDevice->canStatus.RxLost);

  00084	128400a4	 addne       r0, r4, #0xA4
  00088	e5863000	 str         r3, [r6]
  0008c	e5862004	 str         r2, [r6, #4]
  00090	e5861008	 str         r1, [r6, #8]
  00094	1588501c	 strne       r5, [r8, #0x1C]
  00098	1b000000	 blne        InterlockedIncrement

; 1040 :             }
; 1041 :             OUTREG32(&pRegs->CANRMP,mask);
; 1042 :             
; 1043 :             if (LocalRemoteRequestMask & mask)

  0009c	e59d3014	 ldr         r3, [sp, #0x14]
  000a0	e5885018	 str         r5, [r8, #0x18]
  000a4	e1150003	 tst         r5, r3
  000a8	0a000009	 beq         |$LN14@HandleRXMa|

; 1044 :             {                
; 1045 :                 CLRREG32(&pDevice->pCanRegs->CANME,mask);

  000ac	e594202c	 ldr         r2, [r4, #0x2C]
  000b0	e5923000	 ldr         r3, [r2]
  000b4	e1c33005	 bic         r3, r3, r5
  000b8	e5823000	 str         r3, [r2]

; 1046 :                 pDevice->RemoteRequestMask &= ~mask;

  000bc	e59430d0	 ldr         r3, [r4, #0xD0]

; 1047 :                 pDevice->FreeMailboxMask |= mask;

  000c0	e59420c4	 ldr         r2, [r4, #0xC4]
  000c4	e1c33005	 bic         r3, r3, r5
  000c8	e1822005	 orr         r2, r2, r5
  000cc	e58430d0	 str         r3, [r4, #0xD0]
  000d0	e58420c4	 str         r2, [r4, #0xC4]
  000d4		 |$LN14@HandleRXMa|

; 1048 :             }
; 1049 :             else
; 1050 :             {
; 1051 :                // SETREG32(&pDevice->pCanRegs->CANME,mask);
; 1052 :             }
; 1053 :             cpy &= ~mask;

  000d4	e1c99005	 bic         r9, r9, r5
  000d8	e3a03001	 mov         r3, #1
  000dc		 |$LN16@HandleRXMa|

; 1054 :         }
; 1055 :         i--;

  000dc	e24aa001	 sub         r10, r10, #1
  000e0	e2477010	 sub         r7, r7, #0x10
  000e4	e2466010	 sub         r6, r6, #0x10
  000e8	e3590000	 cmp         r9, #0
  000ec	1affffd7	 bne         |$LL18@HandleRXMa|

; 1025 :     cpy = dwRmpStatus;
; 1026 :     i = NB_MAILBOXES-1;    

  000f0	e59db018	 ldr         r11, [sp, #0x18]
  000f4		 |$LN17@HandleRXMa|

; 1056 :     }
; 1057 : 
; 1058 :     LeaveCriticalSection(&pDevice->regcs);

  000f4	e2840030	 add         r0, r4, #0x30
  000f8	eb000000	 bl          LeaveCriticalSection

; 1059 :     
; 1060 :     
; 1061 :     // We have a copy of the 'full' mailboxex, we can look at each of them now
; 1062 :     i = NB_MAILBOXES-1;

  000fc	e3a0501f	 mov         r5, #0x1F

; 1063 :     while (dwRmpStatus)

  00100	e35b0000	 cmp         r11, #0
  00104	0a00004b	 beq         |$LN11@HandleRXMa|
  00108	e28d7e21	 add         r7, sp, #0x21, 28
  0010c	e3a0ab01	 mov         r10, #1, 22
  00110	e3a08001	 mov         r8, #1
  00114	e3a09000	 mov         r9, #0
  00118		 |$LL12@HandleRXMa|

; 1064 :     {
; 1065 :         DWORD mask = 1<<i;        

  00118	e1a06518	 mov         r6, r8, lsl r5

; 1066 :         if (dwRmpStatus & mask) //Is mailbox full ?

  0011c	e116000b	 tst         r6, r11
  00120	0a000040	 beq         |$LN1@HandleRXMa|

; 1067 :         {
; 1068 :             CAN_MESSAGE msg;
; 1069 :             OMAP_HECC_SCC_MAILBOX* pMbx;
; 1070 :             pMbx = &mailboxCopy[i];            
; 1071 :             
; 1072 :             RETAILMSG(0,(TEXT("mailbox %d generated a RX interrup\r\n"),i));       
; 1073 :             //Translate the mailbox content into a CAN_MESSAGE
; 1074 :             msg.MDH = pMbx->CANMDH;

  00124	e597200c	 ldr         r2, [r7, #0xC]

; 1075 :             msg.MDL = pMbx->CANMDL;

  00128	e5973008	 ldr         r3, [r7, #8]

; 1076 :             CANMIDtoCANID(pMbx->CANMID,&msg.id);            

  0012c	e5970000	 ldr         r0, [r7]
  00130	e28d1010	 add         r1, sp, #0x10
  00134	e58d3004	 str         r3, [sp, #4]
  00138	e58d2008	 str         r2, [sp, #8]
  0013c	eb000000	 bl          |?CANMIDtoCANID@@YAXIPATCAN_ID@@@Z|

; 1077 :             msg.length = (BYTE) (pMbx->CANMCF & 0xF);

  00140	e5973004	 ldr         r3, [r7, #4]

; 1078 :             InterlockedIncrement(&pDevice->canStatus.TotalReceived);

  00144	e28400ac	 add         r0, r4, #0xAC
  00148	e203300f	 and         r3, r3, #0xF
  0014c	e5cd300c	 strb        r3, [sp, #0xC]
  00150	eb000000	 bl          InterlockedIncrement

; 1079 : 
; 1080 :             // Filter the message out
; 1081 :             BOOL fAccepted = TRUE;
; 1082 :             if (LocalRemoteRequestMask & mask)

  00154	e59d3014	 ldr         r3, [sp, #0x14]
  00158	e1160003	 tst         r6, r3
  0015c	0a000008	 beq         |$LN9@HandleRXMa|

; 1083 :             {
; 1084 :                 RETAILMSG(1,(TEXT("remote request answer received\r\n")));

  00160	e59f00f0	 ldr         r0, [pc, #0xF0]
  00164	eb000000	 bl          NKDbgPrintfW

; 1085 :                 RETAILMSG(1,(TEXT("Remote 0x%08x 0x%08x %d | %i\r\n"),msg.MDH,msg.MDL,msg.length,i));                

  00168	e5dd300c	 ldrb        r3, [sp, #0xC]
  0016c	e59d2004	 ldr         r2, [sp, #4]
  00170	e59d1008	 ldr         r1, [sp, #8]
  00174	e59f00d8	 ldr         r0, [pc, #0xD8]
  00178	e58d5000	 str         r5, [sp]
  0017c	eb000000	 bl          NKDbgPrintfW

; 1086 :             }
; 1087 :             else

  00180	ea000013	 b           |$LN45@HandleRXMa|
  00184		 |$LN9@HandleRXMa|

; 1088 :             {
; 1089 :                 
; 1090 :                 pClassFilter = FindClassFilterFromMailbox(pDevice,i);            

  00184	e59430d8	 ldr         r3, [r4, #0xD8]
  00188	ea000003	 b           |$LN47@HandleRXMa|
  0018c		 |$LL33@HandleRXMa|
  0018c	e5923014	 ldr         r3, [r2, #0x14]
  00190	e1160003	 tst         r6, r3
  00194	1a000018	 bne         |$LN41@HandleRXMa|
  00198	e5923000	 ldr         r3, [r2]
  0019c		 |$LN47@HandleRXMa|
  0019c	e1b02003	 movs        r2, r3
  001a0	1afffff9	 bne         |$LL33@HandleRXMa|
  001a4		 |$LN46@HandleRXMa|

; 1092 :                 {
; 1093 :                     ERRORMSG(1,(TEXT("Received a message with no filter. Very strange. Accept it just in case\r\n")));                    

  001a4	e59f10a4	 ldr         r1, [pc, #0xA4]
  001a8	e59f009c	 ldr         r0, [pc, #0x9C]
  001ac	e38a2045	 orr         r2, r10, #0x45
  001b0	eb000000	 bl          NKDbgPrintfW
  001b4	e59f008c	 ldr         r0, [pc, #0x8C]
  001b8	eb000000	 bl          NKDbgPrintfW

; 1094 :                     RETAILMSG(1,(TEXT("unknown  0x%08x 0x%08x %d | %i\r\n"),msg.MDH,msg.MDL,msg.length,i));

  001bc	e5dd300c	 ldrb        r3, [sp, #0xC]
  001c0	e59d2004	 ldr         r2, [sp, #4]
  001c4	e59d1008	 ldr         r1, [sp, #8]
  001c8	e59f0074	 ldr         r0, [pc, #0x74]
  001cc	e58d5000	 str         r5, [sp]
  001d0	eb000000	 bl          NKDbgPrintfW
  001d4		 |$LN45@HandleRXMa|

; 1104 :             {
; 1105 :                 if (WriteMsgQueue(pDevice->RxMsgQ[MSQ_WRITER],&msg,sizeof(msg),0,0) == FALSE)

  001d4	e594005c	 ldr         r0, [r4, #0x5C]
  001d8	e3a03000	 mov         r3, #0
  001dc	e3a02010	 mov         r2, #0x10
  001e0	e28d1004	 add         r1, sp, #4
  001e4	e58d9000	 str         r9, [sp]
  001e8	eb000000	 bl          WriteMsgQueue
  001ec	e3500000	 cmp         r0, #0
  001f0	1a00000a	 bne         |$LN3@HandleRXMa|

; 1106 :                 {
; 1107 :                     InterlockedIncrement(& pDevice->canStatus.RxDiscarded);

  001f4	e28400a0	 add         r0, r4, #0xA0

; 1108 :                 }
; 1109 :                 else

  001f8	ea000009	 b           |$LN48@HandleRXMa|
  001fc		 |$LN41@HandleRXMa|

; 1091 :                 if (pClassFilter == NULL)

  001fc	e3520000	 cmp         r2, #0
  00200	0affffe7	 beq         |$LN46@HandleRXMa|

; 1095 :                 }
; 1096 :                 else  if (CANisIDAccepted(msg.id,pClassFilter->subFilter) == FALSE)

  00204	e592100c	 ldr         r1, [r2, #0xC]
  00208	e59d0010	 ldr         r0, [sp, #0x10]
  0020c	eb000000	 bl          |?CANisIDAccepted@@YAHTCAN_ID@@PAUSUBCLASS_FILTER_INTERNAL@@@Z|
  00210	e3500000	 cmp         r0, #0

; 1097 :                 {
; 1098 :                     fAccepted = FALSE;
; 1099 :                 }
; 1100 :             }
; 1101 : 
; 1102 :             // If the message is accepted, then post it in the RX queue
; 1103 :             if (fAccepted)

  00214	1affffee	 bne         |$LN45@HandleRXMa|

; 1112 :                 }
; 1113 :             }
; 1114 :             else
; 1115 :             {
; 1116 :                 InterlockedIncrement(& pDevice->canStatus.FilteredOut);

  00218	e28400a8	 add         r0, r4, #0xA8
  0021c	ea000000	 b           |$LN48@HandleRXMa|
  00220		 |$LN3@HandleRXMa|

; 1110 :                 {
; 1111 :                     InterlockedIncrement(& pDevice->canStatus.currentRxMsg);

  00220	e2840078	 add         r0, r4, #0x78
  00224		 |$LN48@HandleRXMa|
  00224	eb000000	 bl          InterlockedIncrement

; 1112 :                 }
; 1113 :             }
; 1114 :             else
; 1115 :             {
; 1116 :                 InterlockedIncrement(& pDevice->canStatus.FilteredOut);

  00228		 |$LN1@HandleRXMa|

; 1117 :             }            
; 1118 :         }
; 1119 :         //Process next message
; 1120 :         dwRmpStatus &= ~mask;

  00228	e1dbb006	 bics        r11, r11, r6

; 1121 :         i--;

  0022c	e2455001	 sub         r5, r5, #1
  00230	e2477010	 sub         r7, r7, #0x10
  00234	1affffb7	 bne         |$LL12@HandleRXMa|
  00238		 |$LN11@HandleRXMa|

; 1122 :     }
; 1123 : }

  00238	e28dde22	 add         sp, sp, #0x22, 28
  0023c	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00240	e12fff1e	 bx          lr
  00244		 |$LN52@HandleRXMa|
  00244		 |$LN53@HandleRXMa|
  00244	00000000	 DCD         |??_C@_1EC@IIGLFKGD@?$AAu?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?5?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$HM?$AA?5?$AA?$CF?$AAi?$AA?$AN?$AA?6@|
  00248		 |$LN54@HandleRXMa|
  00248	00000000	 DCD         |??_C@_1JE@PINEAJCM@?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAa?$AA?5?$AAm?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAn?$AAo?$AA?5?$AAf?$AAi?$AAl?$AAt?$AAe@|
  0024c		 |$LN55@HandleRXMa|
  0024c	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  00250		 |$LN56@HandleRXMa|
  00250	00000000	 DCD         |??_C@_1KA@HGKICKLA@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  00254		 |$LN57@HandleRXMa|
  00254	00000000	 DCD         |??_C@_1DO@FOGLPLCN@?$AAR?$AAe?$AAm?$AAo?$AAt?$AAe?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$HM?$AA?5?$AA?$CF?$AAi?$AA?$AN?$AA?6?$AA?$AA@|
  00258		 |$LN58@HandleRXMa|
  00258	00000000	 DCD         |??_C@_1EC@BCDBGOBM@?$AAr?$AAe?$AAm?$AAo?$AAt?$AAe?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAa?$AAn?$AAs?$AAw?$AAe?$AAr?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?$AN?$AA?6@|
  0025c		 |$M38679|

			 ENDP  ; |?HandleRXMailboxInterrupt@@YAXPAUT_CAN_DEVICE@@@Z|, HandleRXMailboxInterrupt

	EXPORT	|?CANHandleIrq@@YAHPAUT_CAN_DEVICE@@@Z|	; CANHandleIrq

  00000			 AREA	 |.pdata|, PDATA
|$T38735| DCD	|$LN33@CANHandleI|
	DCD	0x40004b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CANHandleIrq@@YAHPAUT_CAN_DEVICE@@@Z| PROC ; CANHandleIrq

; 1203 : {

  00000		 |$LN33@CANHandleI|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M38732|
  00004	e1a04000	 mov         r4, r0

; 1204 :     BOOL fSpurious = TRUE;
; 1205 :     OMAP_HECC_SCC_REGS* pRegs = pDevice->pCanRegs;

  00008	e594302c	 ldr         r3, [r4, #0x2C]
  0000c	e3a06001	 mov         r6, #1

; 1206 :     DWORD status0,status1;
; 1207 :     status0 = INREG32(&pRegs->CANGIF0);

  00010	e593503c	 ldr         r5, [r3, #0x3C]

; 1208 :     status1 = INREG32(&pRegs->CANGIF1);

  00014	e5937044	 ldr         r7, [r3, #0x44]

; 1209 : 
; 1210 :     if (((status0 & CANGIx_BOIM) == 0) && ((status0 & CANGIx_EPIM) == 0))

  00018	e2158b01	 ands        r8, r5, #1, 22
  0001c	1a000006	 bne         |$LN7@CANHandleI|
  00020	e3150c02	 tst         r5, #2, 24
  00024	1a000004	 bne         |$LN7@CANHandleI|

; 1211 :     {
; 1212 :         if (pDevice->canStatus.BusState != ERROR_ACTIVE)

  00028	e5943098	 ldr         r3, [r4, #0x98]
  0002c	e3530000	 cmp         r3, #0

; 1213 :         {
; 1214 :             pDevice->canStatus.BusState = ERROR_ACTIVE;

  00030	13a03000	 movne       r3, #0
  00034	15843098	 strne       r3, [r4, #0x98]

; 1215 :             // In case the trasnmit is stopped, re-start it.
; 1216 :             StartTransmit(pDevice);

  00038	1b000000	 blne        |?StartTransmit@@YAXPAUT_CAN_DEVICE@@@Z|
  0003c		 |$LN7@CANHandleI|

; 1217 :         }
; 1218 :     }
; 1219 : 
; 1220 :     if (status1 & CANGIF_GMIFx)

  0003c	e3170902	 tst         r7, #2, 18

; 1221 :     {
; 1222 :         fSpurious = FALSE;
; 1223 :         HandleRXMailboxInterrupt(pDevice);

  00040	11a00004	 movne       r0, r4
  00044	13a06000	 movne       r6, #0
  00048	1b000000	 blne        |?HandleRXMailboxInterrupt@@YAXPAUT_CAN_DEVICE@@@Z|

; 1224 :     }
; 1225 :     if (status0 & CANGIF_GMIFx)

  0004c	e3150902	 tst         r5, #2, 18

; 1226 :     {
; 1227 :         fSpurious = FALSE;
; 1228 :         HandleTXMailboxInterrupt(pDevice);

  00050	11a00004	 movne       r0, r4
  00054	13a06000	 movne       r6, #0
  00058	1b000000	 blne        |?HandleTXMailboxInterrupt@@YAXPAUT_CAN_DEVICE@@@Z|

; 1229 :     }    
; 1230 : 
; 1231 :     if (status0 & CANGIx_BOIM)

  0005c	e3580000	 cmp         r8, #0
  00060	0a000009	 beq         |$LN17@CANHandleI|

; 1232 :     {
; 1233 :         fSpurious = FALSE;
; 1234 :         HandleBusOffInterrupt(pDevice);

  00064	e594302c	 ldr         r3, [r4, #0x2C]
  00068	e59f00b8	 ldr         r0, [pc, #0xB8]
  0006c	e3a06000	 mov         r6, #0
  00070	e593103c	 ldr         r1, [r3, #0x3C]
  00074	eb000000	 bl          NKDbgPrintfW

; 1235 :         OUTREG32(&pDevice->pCanRegs->CANGIF0,CANGIx_BOIM);

  00078	e594302c	 ldr         r3, [r4, #0x2C]
  0007c	e3a02003	 mov         r2, #3
  00080	e3a01b01	 mov         r1, #1, 22
  00084	e5842098	 str         r2, [r4, #0x98]
  00088	e583103c	 str         r1, [r3, #0x3C]

; 1236 :         ShowErrors(pDevice->pCanRegs);

  0008c		 |$LN17@CANHandleI|

; 1237 :     }
; 1238 :     
; 1239 :     if (status0 & CANGIx_EPIM)

  0008c	e3150c02	 tst         r5, #2, 24
  00090	0a000009	 beq         |$LN23@CANHandleI|

; 1240 :     {
; 1241 :         fSpurious = FALSE;
; 1242 :         HandleErrorPassiveInterrupt(pDevice);

  00094	e594302c	 ldr         r3, [r4, #0x2C]
  00098	e59f0084	 ldr         r0, [pc, #0x84]
  0009c	e3a06000	 mov         r6, #0
  000a0	e593103c	 ldr         r1, [r3, #0x3C]
  000a4	eb000000	 bl          NKDbgPrintfW

; 1243 :         OUTREG32(&pDevice->pCanRegs->CANGIF0,CANGIx_EPIM);

  000a8	e594302c	 ldr         r3, [r4, #0x2C]
  000ac	e3a02002	 mov         r2, #2
  000b0	e3a01c02	 mov         r1, #2, 24
  000b4	e5842098	 str         r2, [r4, #0x98]
  000b8	e583103c	 str         r1, [r3, #0x3C]

; 1244 :         ShowErrors(pDevice->pCanRegs);

  000bc		 |$LN23@CANHandleI|

; 1245 :     }
; 1246 : 
; 1247 :     if (status0 & CANGIx_WLIM)

  000bc	e3150c01	 tst         r5, #1, 24
  000c0	0a000009	 beq         |$LN29@CANHandleI|

; 1248 :     {
; 1249 :         fSpurious = FALSE;
; 1250 :         HandleWarningLevelInterrupt(pDevice);

  000c4	e594302c	 ldr         r3, [r4, #0x2C]
  000c8	e59f0050	 ldr         r0, [pc, #0x50]
  000cc	e3a06000	 mov         r6, #0
  000d0	e593103c	 ldr         r1, [r3, #0x3C]
  000d4	eb000000	 bl          NKDbgPrintfW

; 1251 :         OUTREG32(&pDevice->pCanRegs->CANGIF0,CANGIx_WLIM);

  000d8	e594302c	 ldr         r3, [r4, #0x2C]
  000dc	e3a02001	 mov         r2, #1
  000e0	e3a01c01	 mov         r1, #1, 24
  000e4	e5842098	 str         r2, [r4, #0x98]
  000e8	e583103c	 str         r1, [r3, #0x3C]

; 1252 :         ShowErrors(pDevice->pCanRegs);

  000ec		 |$LN29@CANHandleI|

; 1253 :     }
; 1254 :     
; 1255 :     if (status0 & CANGIx_OTHER_INTERRUPTS)

  000ec	e3150b1e	 tst         r5, #0x1E, 22
  000f0	0a000004	 beq         |$LN1@CANHandleI|

; 1256 :     {
; 1257 :         DWORD clearMask;
; 1258 :         fSpurious = FALSE;
; 1259 :         clearMask = HandleOtherInterrupts(pDevice);

  000f4	e1a00004	 mov         r0, r4
  000f8	e3a06000	 mov         r6, #0
  000fc	eb000000	 bl          |?HandleOtherInterrupts@@YAKPAUT_CAN_DEVICE@@@Z|

; 1260 :         OUTREG32(&pDevice->pCanRegs->CANGIF0, clearMask);

  00100	e594302c	 ldr         r3, [r4, #0x2C]
  00104	e583003c	 str         r0, [r3, #0x3C]
  00108		 |$LN1@CANHandleI|

; 1261 :     }
; 1262 : 
; 1263 :     return !fSpurious;   

  00108	e3560000	 cmp         r6, #0
  0010c	03a00001	 moveq       r0, #1

; 1264 : }

  00110	08bd41f0	 ldmeqia     sp!, {r4 - r8, lr}

; 1261 :     }
; 1262 : 
; 1263 :     return !fSpurious;   

  00114	13a00000	 movne       r0, #0

; 1264 : }

  00118	18bd41f0	 ldmneia     sp!, {r4 - r8, lr}
  0011c	e12fff1e	 bx          lr
  00120		 |$LN34@CANHandleI|
  00120		 |$LN35@CANHandleI|
  00120	00000000	 DCD         |??_C@_1DK@MEOEDCIG@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAl?$AAe?$AAv?$AAe?$AAl?$AA?4?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00124		 |$LN36@CANHandleI|
  00124	00000000	 DCD         |??_C@_1DK@IKHJICBP@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAp?$AAa?$AAs?$AAs?$AAi?$AAv?$AAe?$AA?4?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00128		 |$LN37@CANHandleI|
  00128	00000000	 DCD         |??_C@_1CO@FOMMEIDD@?$AAB?$AAU?$AAS?$AA?5?$AAO?$AAF?$AAF?$AA?4?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  0012c		 |$M38733|

			 ENDP  ; |?CANHandleIrq@@YAHPAUT_CAN_DEVICE@@@Z|, CANHandleIrq

	EXPORT	|?CANIntrThread@@YAKPAX@Z|		; CANIntrThread
	IMPORT	|InterruptDone|

  00000			 AREA	 |.pdata|, PDATA
|$T38754| DCD	|$LN16@CANIntrThr|
	DCD	0x40001701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CANIntrThread@@YAKPAX@Z| PROC	; CANIntrThread

; 1275 : {

  00000		 |$LN16@CANIntrThr|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M38751|
  00004	e1a04000	 mov         r4, r0

; 1276 :     T_CAN_DEVICE *pDevice = (T_CAN_DEVICE*) pContext;
; 1277 :     while (!pDevice->fTerminateThread)

  00008	ea00000d	 b           |$LN1@CANIntrThr|
  0000c		 |$LL6@CANIntrThr|

; 1278 :     {
; 1279 :         InterruptDone(pDevice->dwSysintr);

  0000c	e5940000	 ldr         r0, [r4]
  00010	eb000000	 bl          InterruptDone

; 1280 :         // Wait for CAN interrupt
; 1281 :         if (WaitForSingleObject(pDevice->hIntrEvent, INFINITE) == WAIT_OBJECT_0)

  00014	e5940004	 ldr         r0, [r4, #4]
  00018	e3e01000	 mvn         r1, #0
  0001c	eb000000	 bl          WaitForSingleObject
  00020	e3500000	 cmp         r0, #0
  00024	1a000006	 bne         |$LN1@CANIntrThr|

; 1282 :         {
; 1283 :             if (pDevice->fTerminateThread)

  00028	e594300c	 ldr         r3, [r4, #0xC]
  0002c	e3530000	 cmp         r3, #0
  00030	1a000006	 bne         |$LN12@CANIntrThr|
  00034		 |$LL2@CANIntrThr|

; 1284 :             {
; 1285 :                 break;
; 1286 :             }
; 1287 :             while (CANHandleIrq(pDevice)); 

  00034	e1a00004	 mov         r0, r4
  00038	eb000000	 bl          |?CANHandleIrq@@YAHPAUT_CAN_DEVICE@@@Z|
  0003c	e3500000	 cmp         r0, #0
  00040	1afffffb	 bne         |$LL2@CANIntrThr|
  00044		 |$LN1@CANIntrThr|

; 1276 :     T_CAN_DEVICE *pDevice = (T_CAN_DEVICE*) pContext;
; 1277 :     while (!pDevice->fTerminateThread)

  00044	e594300c	 ldr         r3, [r4, #0xC]
  00048	e3530000	 cmp         r3, #0
  0004c	0affffee	 beq         |$LL6@CANIntrThr|
  00050		 |$LN12@CANIntrThr|

; 1288 :         }
; 1289 : 
; 1290 :     }
; 1291 : 
; 1292 :     DEBUGMSG(ZONE_IST, (L"-CANIntrThread\r\n"));
; 1293 :     return ERROR_SUCCESS;

  00050	e3a00000	 mov         r0, #0

; 1294 : }

  00054	e8bd4010	 ldmia       sp!, {r4, lr}
  00058	e12fff1e	 bx          lr
  0005c		 |$M38752|

			 ENDP  ; |?CANIntrThread@@YAKPAX@Z|, CANIntrThread

	EXPORT	|?CANInitHardware@@YAHPAX@Z|		; CANInitHardware

  00000			 AREA	 |.pdata|, PDATA
|$T38769| DCD	|$LN15@CANInitHar|
	DCD	0x40003001
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CANInitHardware@@YAHPAX@Z| PROC	; CANInitHardware

; 1326 : {

  00000		 |$LN15@CANInitHar|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M38766|
  00004	e1a05000	 mov         r5, r0

; 1327 :     T_CAN_DEVICE *pDevice = (T_CAN_DEVICE*) ctxt;
; 1328 :     int i;
; 1329 :         
; 1330 :     // Soft reset the CTRL
; 1331 :     OUTREG32(&pDevice->pCanRegs->CANMC,CANMC_SRES);

  00008	e595302c	 ldr         r3, [r5, #0x2C]
  0000c	e3a02020	 mov         r2, #0x20

; 1332 :     Sleep(1);

  00010	e3a00001	 mov         r0, #1
  00014	e5832028	 str         r2, [r3, #0x28]
  00018	eb000000	 bl          Sleep

; 1333 : 
; 1334 :     //Configure PIn as CAN pins (not IOs)
; 1335 : 
; 1336 : 
; 1337 :     pDevice->pCanRegs->CANTIOC = CANTIOC_TXFUNC;

  0001c	e595302c	 ldr         r3, [r5, #0x2C]
  00020	e3a01008	 mov         r1, #8
  00024	e3a02ce6	 mov         r2, #0xE6, 24
  00028	e5831054	 str         r1, [r3, #0x54]

; 1338 :     pDevice->pCanRegs->CANRIOC = CANRIOC_RXFUNC;

  0002c	e595302c	 ldr         r3, [r5, #0x2C]

; 1339 : 
; 1340 : 
; 1341 :     OUTREG32(&pDevice->pCanRegs->CANMC,CANMC_SCM | CANMC_LNTC | CANMC_LNTM | CANMC_ABO | CANMC_DBO |/*CANMC_STM |*/ CANMC_WUBA);

  00030	e3822080	 orr         r2, r2, #0x80

; 1342 :     
; 1343 : 
; 1344 : 
; 1345 :     // Set default baudrate
; 1346 :     CANConfigureBaudrate(pDevice,pDevice->BaudRate);

  00034	e1a00005	 mov         r0, r5
  00038	e5831058	 str         r1, [r3, #0x58]
  0003c	e595302c	 ldr         r3, [r5, #0x2C]
  00040	e5832028	 str         r2, [r3, #0x28]
  00044	e5951020	 ldr         r1, [r5, #0x20]
  00048	eb000000	 bl          |?CANConfigureBaudrate@@YAHPAXK@Z|

; 1347 : 
; 1348 :     // Init Mailboxes
; 1349 :     OUTREG32(&pDevice->pCanRegs->CANME,0);

  0004c	e595302c	 ldr         r3, [r5, #0x2C]
  00050	e3a01000	 mov         r1, #0
  00054	e3a02000	 mov         r2, #0
  00058	e5831000	 str         r1, [r3]
  0005c		 |$LL6@CANInitHar|

; 1350 :     for (i=0;i<NB_MAILBOXES;i++)
; 1351 :     {        
; 1352 :         pDevice->pCanRegs->MailBoxes[i].CANMCF = 0;

  0005c	e595302c	 ldr         r3, [r5, #0x2C]
  00060	e0823003	 add         r3, r2, r3
  00064	e2833a02	 add         r3, r3, #2, 20
  00068	e5831004	 str         r1, [r3, #4]

; 1353 :         pDevice->pCanRegs->MailBoxes[i].CANMID = 0;

  0006c	e595302c	 ldr         r3, [r5, #0x2C]
  00070	e0823003	 add         r3, r2, r3
  00074	e2833a02	 add         r3, r3, #2, 20
  00078	e2822010	 add         r2, r2, #0x10
  0007c	e5831000	 str         r1, [r3]
  00080	e3520c02	 cmp         r2, #2, 24
  00084	bafffff4	 blt         |$LL6@CANInitHar|

; 1354 :     }
; 1355 : 
; 1356 :     pDevice->pCanRegs->CANGIM =  CANGIx_AAIM    |
; 1357 :                                  CANES_EP    |
; 1358 :                                  CANGIx_WUIM    |
; 1359 :                                  CANGIx_RMLIM   |
; 1360 :                                  CANGIx_BOIM    |
; 1361 :                                  CANGIx_EPIM    |
; 1362 :                                  CANGIx_WLIM    ;

  00088	e595202c	 ldr         r2, [r5, #0x2C]
  0008c	e3a03b97	 mov         r3, #0x97, 22
  00090	e3833c03	 orr         r3, r3, #3, 24
  00094	e5823040	 str         r3, [r2, #0x40]

; 1363 : 
; 1364 :     
; 1365 :     for (int TxMailBox=FIRST_TX_MAILBOX;TxMailBox<=LAST_TX_MAILBOX;TxMailBox++)

  00098	e3a04013	 mov         r4, #0x13
  0009c		 |$LL3@CANInitHar|

; 1366 :     {
; 1367 :         ConfigureTxMailbox(pDevice, TxMailBox);

  0009c	e1a01004	 mov         r1, r4
  000a0	e1a00005	 mov         r0, r5
  000a4	eb000000	 bl          |?ConfigureTxMailbox@@YAHPAUT_CAN_DEVICE@@K@Z|
  000a8	e2844001	 add         r4, r4, #1
  000ac	e3540015	 cmp         r4, #0x15
  000b0	dafffff9	 ble         |$LL3@CANInitHar|

; 1368 :     }
; 1369 :     
; 1370 :     return TRUE;

  000b4	e3a00001	 mov         r0, #1

; 1371 : }

  000b8	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000bc	e12fff1e	 bx          lr
  000c0		 |$M38767|

			 ENDP  ; |?CANInitHardware@@YAHPAX@Z|, CANInitHardware

	EXPORT	|?CANCommand@@YAHPAXW4CAN_COMMAND@@@Z|	; CANCommand
	IMPORT	|SetLastError|
	IMPORT	|memset|

  00000			 AREA	 |.pdata|, PDATA
|$T38808| DCD	|$LN42@CANCommand|
	DCD	0x40009102
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CANCommand@@YAHPAXW4CAN_COMMAND@@@Z| PROC ; CANCommand

; 1373 : {

  00000		 |$LN42@CANCommand|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd020	 sub         sp, sp, #0x20
  00008		 |$M38805|
  00008	e3510000	 cmp         r1, #0
  0000c	e1a04000	 mov         r4, r0

; 1374 :     DWORD flags;
; 1375 :     BOOL rc = TRUE;

  00010	e3a08001	 mov         r8, #1

; 1376 :     T_CAN_DEVICE *pDevice = (T_CAN_DEVICE*) ctxt;
; 1377 :     switch(cmd)

  00014	0a000079	 beq         |$LN2@CANCommand|
  00018	e3510001	 cmp         r1, #1
  0001c	0a000069	 beq         |$LN18@CANCommand|
  00020	e3510002	 cmp         r1, #2
  00024	0a000003	 beq         |$LN17@CANCommand|

; 1461 : 
; 1462 :         break;
; 1463 :     default:
; 1464 :         SetLastError(ERROR_INVALID_PARAMETER);

  00028	e3a00057	 mov         r0, #0x57
  0002c	eb000000	 bl          SetLastError

; 1465 :         rc = FALSE;

  00030	e3a08000	 mov         r8, #0

; 1466 :         break;

  00034	ea00007e	 b           |$LN19@CANCommand|
  00038		 |$LN17@CANCommand|

; 1393 :     case RESET:                
; 1394 :         
; 1395 :         //Clear the status
; 1396 :         memset(&pDevice->canStatus,0,sizeof(pDevice->canStatus));

  00038	e3a02044	 mov         r2, #0x44
  0003c	e3a01000	 mov         r1, #0
  00040	e2840078	 add         r0, r4, #0x78
  00044	eb000000	 bl          memset

; 1397 :         // move to the stopped state
; 1398 :         CANCommand(ctxt,STOP);

  00048	e3a01000	 mov         r1, #0
  0004c	e1a00004	 mov         r0, r4
  00050	eb000000	 bl          |?CANCommand@@YAHPAXW4CAN_COMMAND@@@Z|

; 1399 : 
; 1400 :         CLASS_FILTER_INTERNAL* pClassFilter;        
; 1401 :         pClassFilter = pDevice->ClassFilterList;

  00054	e59430d8	 ldr         r3, [r4, #0xD8]
  00058	e1b05003	 movs        r5, r3

; 1402 :         while (pClassFilter)

  0005c	0a00000d	 beq         |$LN15@CANCommand|
  00060		 |$LL16@CANCommand|

; 1403 :         {
; 1404 :             CLASS_FILTER_INTERNAL* pNext;
; 1405 :             SUBCLASS_FILTER_INTERNAL* pSubFilter;
; 1406 :             pNext = (CLASS_FILTER_INTERNAL*) NextElement(&pClassFilter->sle);
; 1407 :             pSubFilter = pClassFilter->subFilter;

  00060	e595300c	 ldr         r3, [r5, #0xC]
  00064	e5957000	 ldr         r7, [r5]
  00068	e1b06003	 movs        r6, r3

; 1408 :             while (pSubFilter)

  0006c	0a000004	 beq         |$LN13@CANCommand|
  00070		 |$LL14@CANCommand|

; 1409 :             {
; 1410 :                 SUBCLASS_FILTER_INTERNAL* pNextSub;
; 1411 :                 pNextSub = (SUBCLASS_FILTER_INTERNAL*) NextElement(&pSubFilter->sle);
; 1412 :                 LocalFree(pSubFilter);

  00070	e1a00006	 mov         r0, r6
  00074	e5966000	 ldr         r6, [r6]
  00078	eb000000	 bl          LocalFree

; 1413 :                 pSubFilter = pNextSub;

  0007c	e3560000	 cmp         r6, #0
  00080	1afffffa	 bne         |$LL14@CANCommand|
  00084		 |$LN13@CANCommand|

; 1414 :             }
; 1415 :             LocalFree(pClassFilter);

  00084	e1a00005	 mov         r0, r5
  00088	eb000000	 bl          LocalFree

; 1416 :             pClassFilter = pNext;

  0008c	e1a05007	 mov         r5, r7
  00090	e3570000	 cmp         r7, #0
  00094	1afffff1	 bne         |$LL16@CANCommand|
  00098		 |$LN15@CANCommand|

; 1417 :         }
; 1418 : 
; 1419 :         pDevice->ClassFilterList = NULL;
; 1420 :         pDevice->nbFreeClassFilter = NB_MAX_CLASS_FILTER; 

  00098	e3a03020	 mov         r3, #0x20
  0009c	e3a0b000	 mov         r11, #0

; 1421 :         
; 1422 :         pDevice->FreeMailboxMask = (DWORD) (((UINT64)1<<NB_MAILBOXES)-1);

  000a0	e3e01000	 mvn         r1, #0
  000a4	e58430dc	 str         r3, [r4, #0xDC]
  000a8	e584b0d8	 str         r11, [r4, #0xD8]
  000ac	e58410c4	 str         r1, [r4, #0xC4]

; 1423 :         pDevice->TxMailBoxMask = 0;

  000b0	e584b0c0	 str         r11, [r4, #0xC0]

; 1424 :         pDevice->AutoAnswerMask = 0;

  000b4	e584b0cc	 str         r11, [r4, #0xCC]

; 1425 :         pDevice->RxMailboxMask = 0;

  000b8	e584b0c8	 str         r11, [r4, #0xC8]

; 1426 :         pDevice->RemoteRequestMask = 0;

  000bc	e584b0d0	 str         r11, [r4, #0xD0]

; 1427 :         for (int TxMailBox=FIRST_TX_MAILBOX;TxMailBox<=LAST_TX_MAILBOX;TxMailBox++)

  000c0	e3a02013	 mov         r2, #0x13
  000c4	e3a0e000	 mov         lr, #0
  000c8		 |$LL12@CANCommand|

; 1428 :         {
; 1429 :             pDevice->TxMailBoxMask |= (1<<TxMailBox);

  000c8	e3a03001	 mov         r3, #1
  000cc	e18ee213	 orr         lr, lr, r3, lsl r2

; 1430 :             pDevice->FreeMailboxMask &= ~(1<<TxMailBox);

  000d0	e1e03213	 mvn         r3, r3, lsl r2
  000d4	e2822001	 add         r2, r2, #1
  000d8	e0031001	 and         r1, r3, r1
  000dc	e3520015	 cmp         r2, #0x15
  000e0	dafffff8	 ble         |$LL12@CANCommand|

; 1431 :         }
; 1432 :         pDevice->TxMailBoxAvailableMask = pDevice->TxMailBoxMask;
; 1433 : 
; 1434 :         // Reinit the hardware
; 1435 :         CANInitHardware(pDevice);               

  000e4	e1a00004	 mov         r0, r4
  000e8	e58410c4	 str         r1, [r4, #0xC4]
  000ec	e584e0c0	 str         lr, [r4, #0xC0]
  000f0	e584e0bc	 str         lr, [r4, #0xBC]
  000f4	eb000000	 bl          |?CANInitHardware@@YAHPAX@Z|
  000f8	e1a05004	 mov         r5, r4
  000fc	e1a06004	 mov         r6, r4
  00100	e3a07003	 mov         r7, #3
  00104	e28d9008	 add         r9, sp, #8
  00108	e28da008	 add         r10, sp, #8
  0010c		 |$LL9@CANCommand|

; 1436 : 
; 1437 :         //Reset the Messages Queues        
; 1438 :         CAN_MESSAGE msg;
; 1439 :         DWORD nbRead;
; 1440 :         for (int i=0;i<NB_TX_PRIORITIES;i++)
; 1441 :         {            
; 1442 :             while (ReadMsgQueue(pDevice->TxMsgQ[i][MSQ_READER],&msg,sizeof(msg),&nbRead,0,&flags) == TRUE) Sleep(1);

  0010c	e5960060	 ldr         r0, [r6, #0x60]
  00110	e28d300c	 add         r3, sp, #0xC
  00114	e3a02010	 mov         r2, #0x10
  00118	e28d1010	 add         r1, sp, #0x10
  0011c	e58d9004	 str         r9, [sp, #4]
  00120	e58db000	 str         r11, [sp]
  00124	eb000000	 bl          ReadMsgQueue
  00128	ea000008	 b           |$LN39@CANCommand|
  0012c		 |$LL6@CANCommand|
  0012c	e3a00001	 mov         r0, #1
  00130	eb000000	 bl          Sleep
  00134	e5960060	 ldr         r0, [r6, #0x60]
  00138	e28d300c	 add         r3, sp, #0xC
  0013c	e3a02010	 mov         r2, #0x10
  00140	e28d1010	 add         r1, sp, #0x10
  00144	e58da004	 str         r10, [sp, #4]
  00148	e58db000	 str         r11, [sp]
  0014c	eb000000	 bl          ReadMsgQueue
  00150		 |$LN39@CANCommand|
  00150	e3500001	 cmp         r0, #1
  00154	0afffff4	 beq         |$LL6@CANCommand|

; 1443 :             pDevice->canStatus.currentTxMsg[i] = 0;

  00158	e585b080	 str         r11, [r5, #0x80]
  0015c	e2855004	 add         r5, r5, #4
  00160	e2866008	 add         r6, r6, #8
  00164	e2577001	 subs        r7, r7, #1
  00168	1affffe7	 bne         |$LL9@CANCommand|

; 1444 :         }
; 1445 :         while (ReadMsgQueue(pDevice->RxMsgQ[MSQ_READER],&msg,sizeof(msg),&nbRead,0,&flags) == TRUE) Sleep(1);

  0016c	e5940058	 ldr         r0, [r4, #0x58]
  00170	e28de008	 add         lr, sp, #8
  00174	e28d300c	 add         r3, sp, #0xC
  00178	e3a02010	 mov         r2, #0x10
  0017c	e28d1010	 add         r1, sp, #0x10
  00180	e58de004	 str         lr, [sp, #4]
  00184	e58db000	 str         r11, [sp]
  00188	eb000000	 bl          ReadMsgQueue
  0018c	e3500001	 cmp         r0, #1
  00190	1a000027	 bne         |$LN19@CANCommand|
  00194	e28d5008	 add         r5, sp, #8
  00198		 |$LL4@CANCommand|
  00198	e3a00001	 mov         r0, #1
  0019c	eb000000	 bl          Sleep
  001a0	e5940058	 ldr         r0, [r4, #0x58]
  001a4	e28d300c	 add         r3, sp, #0xC
  001a8	e3a02010	 mov         r2, #0x10
  001ac	e28d1010	 add         r1, sp, #0x10
  001b0	e58d5004	 str         r5, [sp, #4]
  001b4	e58db000	 str         r11, [sp]
  001b8	eb000000	 bl          ReadMsgQueue
  001bc	e3500001	 cmp         r0, #1
  001c0	0afffff4	 beq         |$LL4@CANCommand|

; 1446 :                 
; 1447 :         break;

  001c4	ea00001a	 b           |$LN19@CANCommand|
  001c8		 |$LN18@CANCommand|

; 1378 :     {
; 1379 :     case START:
; 1380 :         pDevice->canStatus.CtrlState = STARTED;
; 1381 :         
; 1382 :         EnterCriticalSection(&pDevice->regcs);        

  001c8	e3a03001	 mov         r3, #1
  001cc	e2840030	 add         r0, r4, #0x30
  001d0	e584309c	 str         r3, [r4, #0x9C]
  001d4	eb000000	 bl          EnterCriticalSection

; 1383 :         
; 1384 :         //Enable the interrupts       
; 1385 :         SETREG32(&pDevice->pCanRegs->CANGIM,CANGIM_I0EN | CANGIM_I1EN);

  001d8	e594202c	 ldr         r2, [r4, #0x2C]

; 1386 :         
; 1387 :         LeaveCriticalSection(&pDevice->regcs);

  001dc	e2840030	 add         r0, r4, #0x30
  001e0	e5923040	 ldr         r3, [r2, #0x40]
  001e4	e3833003	 orr         r3, r3, #3
  001e8	e5823040	 str         r3, [r2, #0x40]
  001ec	eb000000	 bl          LeaveCriticalSection

; 1388 : 
; 1389 :         //assert the Strobe
; 1390 :         StrobeActive(pDevice,TRUE);

  001f0	e3a01001	 mov         r1, #1
  001f4	e1a00004	 mov         r0, r4
  001f8	eb000000	 bl          |?StrobeActive@@YAXPAUT_CAN_DEVICE@@H@Z|

; 1391 : 
; 1392 :         break;

  001fc	ea00000c	 b           |$LN19@CANCommand|
  00200		 |$LN2@CANCommand|

; 1448 : 
; 1449 :     case STOP:
; 1450 :         pDevice->canStatus.CtrlState = STOPPED;

  00200	e3a03000	 mov         r3, #0

; 1451 : 
; 1452 :         //Deassert the Strobe
; 1453 :         StrobeActive(pDevice,FALSE);

  00204	e3a01000	 mov         r1, #0
  00208	e1a00004	 mov         r0, r4
  0020c	e584309c	 str         r3, [r4, #0x9C]
  00210	eb000000	 bl          |?StrobeActive@@YAXPAUT_CAN_DEVICE@@H@Z|

; 1454 : 
; 1455 :         EnterCriticalSection(&pDevice->regcs);       

  00214	e2840030	 add         r0, r4, #0x30
  00218	eb000000	 bl          EnterCriticalSection

; 1456 : 
; 1457 :         //Disable the interrupts
; 1458 :         CLRREG32(&pDevice->pCanRegs->CANGIM,CANGIM_I0EN  | CANGIM_I1EN);        

  0021c	e594202c	 ldr         r2, [r4, #0x2C]

; 1459 :         
; 1460 :         LeaveCriticalSection(&pDevice->regcs);

  00220	e2840030	 add         r0, r4, #0x30
  00224	e5923040	 ldr         r3, [r2, #0x40]
  00228	e3c33003	 bic         r3, r3, #3
  0022c	e5823040	 str         r3, [r2, #0x40]
  00230	eb000000	 bl          LeaveCriticalSection
  00234		 |$LN19@CANCommand|

; 1467 :     }
; 1468 :     return rc;
; 1469 : }

  00234	e1a00008	 mov         r0, r8
  00238	e28dd020	 add         sp, sp, #0x20
  0023c	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00240	e12fff1e	 bx          lr
  00244		 |$M38806|

			 ENDP  ; |?CANCommand@@YAHPAXW4CAN_COMMAND@@@Z|, CANCommand

	EXPORT	|?CAN_Init@@YAKPBGPBX@Z|		; CAN_Init
	EXPORT	|??_C@_19CFPJNJHM@?$AAI?$AAN?$AAT?$AA0?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_19JNEFLOBJ@?$AAI?$AAN?$AAT?$AA1?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|ResumeThread|
	IMPORT	|RequestDevicePads|
	IMPORT	|CeSetThreadPriority|
	IMPORT	|CreateThread|
	IMPORT	|InterruptInitialize|
	IMPORT	|CreateEventW|
	IMPORT	|MmMapIoSpace|
	IMPORT	|InitializeCriticalSection|
	IMPORT	|GetIrqByDevice|
	IMPORT	|GetAddressByDevice|
	IMPORT	|SOCGetCANDevice|
	IMPORT	|GPIOSetMode|
	IMPORT	|GPIOOpen|
	IMPORT	|GetDeviceRegistryParams|

  00000			 AREA	 |.pdata|, PDATA
|$T38831| DCD	|$LN51@CAN_Init|
	DCD	0x4000c502

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_19CFPJNJHM@?$AAI?$AAN?$AAT?$AA0?$AA?$AA@| DCB "I", 0x0, "N", 0x0, "T"
	DCB	0x0, "0", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_19JNEFLOBJ@?$AAI?$AAN?$AAT?$AA1?$AA?$AA@| DCB "I", 0x0, "N", 0x0, "T"
	DCB	0x0, "1", 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CAN_Init@@YAKPBGPBX@Z| PROC		; CAN_Init

; 388  : {

  00000		 |$LN51@CAN_Init|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd018	 sub         sp, sp, #0x18
  00008		 |$M38828|
  00008	e1a05000	 mov         r5, r0

; 389  :     DWORD rc = (DWORD)NULL;    
; 390  :     DWORD irq[4];
; 391  :     PHYSICAL_ADDRESS pa;    
; 392  :     T_CAN_DEVICE* pDevice = (T_CAN_DEVICE*) malloc(sizeof(T_CAN_DEVICE));

  0000c	e3a000e0	 mov         r0, #0xE0
  00010	e3a09000	 mov         r9, #0
  00014	eb000000	 bl          malloc

; 393  : 
; 394  :     UNREFERENCED_PARAMETER(pBusContext);
; 395  : 
; 396  :     irq[0] = (DWORD) -1;
; 397  :     irq[1] = OAL_INTR_STATIC;

  00018	e1b04000	 movs        r4, r0
  0001c	e3a03002	 mov         r3, #2
  00020	e3e08000	 mvn         r8, #0

; 398  : 
; 399  :     if (pDevice==NULL) return 0;

  00024	03a09000	 moveq       r9, #0
  00028	e58d300c	 str         r3, [sp, #0xC]
  0002c	e58d8008	 str         r8, [sp, #8]
  00030	0a0000ae	 beq         |$LN1@CAN_Init|

; 400  :     memset(pDevice,0,sizeof(T_CAN_DEVICE));

  00034	e3a020e0	 mov         r2, #0xE0
  00038	e3a01000	 mov         r1, #0
  0003c	e1a00004	 mov         r0, r4
  00040	eb000000	 bl          memset

; 401  :     pDevice->dwSysintr = (DWORD) SYSINTR_UNDEFINED;
; 402  :     
; 403  :     
; 404  : 
; 405  :     // Read parameters from registry
; 406  :     if (GetDeviceRegistryParams(
; 407  :         szContext, 
; 408  :         pDevice, 
; 409  :         dimof(s_deviceRegParams), 
; 410  :         s_deviceRegParams) != ERROR_SUCCESS)

  00044	e59f32c4	 ldr         r3, [pc, #0x2C4]
  00048	e3a02009	 mov         r2, #9
  0004c	e1a01004	 mov         r1, r4
  00050	e1a00005	 mov         r0, r5
  00054	e5848000	 str         r8, [r4]
  00058	eb000000	 bl          GetDeviceRegistryParams
  0005c	e3500000	 cmp         r0, #0
  00060	1a0000a0	 bne         |$LN48@CAN_Init|

; 411  :     {
; 412  :         DEBUGMSG(ZONE_ERROR, (TEXT("ERROR: CAN_Init: Error reading from Registry.\r\n")));
; 413  :         goto cleanUp;
; 414  :     }
; 415  : 
; 416  :     if (pDevice->StrobePin != (DWORD) -1)

  00064	e5943018	 ldr         r3, [r4, #0x18]
  00068	e3730001	 cmn         r3, #1
  0006c	0a00000d	 beq         |$LN37@CAN_Init|

; 417  :     {
; 418  :         if (pDevice->StrobePinPolarity == (DWORD) -1)

  00070	e594301c	 ldr         r3, [r4, #0x1C]
  00074	e3730001	 cmn         r3, #1
  00078	0a00009a	 beq         |$LN48@CAN_Init|

; 419  :         {
; 420  :             DEBUGMSG(ZONE_ERROR, (L"ERROR: CAN_Init: strobe without polarity\r\n"));
; 421  :             goto cleanUp;
; 422  :         }
; 423  :         pDevice->hGpio = GPIOOpen();

  0007c	eb000000	 bl          GPIOOpen
  00080	e3500000	 cmp         r0, #0
  00084	e5840024	 str         r0, [r4, #0x24]

; 424  :         if (pDevice->hGpio == NULL)

  00088	0a000096	 beq         |$LN48@CAN_Init|

; 425  :         {
; 426  :             DEBUGMSG(ZONE_ERROR, (L"ERROR: CAN_Init: unable to open GPIO\r\n"));
; 427  :             goto cleanUp;
; 428  :         }
; 429  :         StrobeActive(pDevice,FALSE);

  0008c	e3a01000	 mov         r1, #0
  00090	e1a00004	 mov         r0, r4
  00094	eb000000	 bl          |?StrobeActive@@YAXPAUT_CAN_DEVICE@@H@Z|

; 430  :         GPIOSetMode(pDevice->hGpio,pDevice->StrobePin,GPIO_DIR_OUTPUT);

  00098	e5941018	 ldr         r1, [r4, #0x18]
  0009c	e5940024	 ldr         r0, [r4, #0x24]
  000a0	e3a02000	 mov         r2, #0
  000a4	eb000000	 bl          GPIOSetMode
  000a8		 |$LN37@CAN_Init|

; 431  :     }
; 432  : 
; 433  :     if (CreateMsgQueuePair(NULL,&pDevice->RxMsgQ[MSQ_READER],&pDevice->RxMsgQ[MSQ_WRITER],
; 434  :         pDevice->canStatus.maxRxMsg,sizeof(CAN_MESSAGE),MSGQUEUE_ALLOW_BROKEN) == FALSE)

  000a8	e594307c	 ldr         r3, [r4, #0x7C]
  000ac	e3a0a002	 mov         r10, #2
  000b0	e3a0b010	 mov         r11, #0x10
  000b4	e284205c	 add         r2, r4, #0x5C
  000b8	e2841058	 add         r1, r4, #0x58
  000bc	e3a00000	 mov         r0, #0
  000c0	e58da004	 str         r10, [sp, #4]
  000c4	e58db000	 str         r11, [sp]
  000c8	eb000000	 bl          |?CreateMsgQueuePair@@YAHPAGPAPAX1KKK@Z|
  000cc	e3500000	 cmp         r0, #0
  000d0	0a000084	 beq         |$LN48@CAN_Init|

; 435  :     {
; 436  :         goto cleanUp;
; 437  :     }
; 438  :     for (int i=0;i<NB_TX_PRIORITIES;i++)

  000d4	e3a05000	 mov         r5, #0
  000d8	e1a07004	 mov         r7, r4
  000dc	e2846060	 add         r6, r4, #0x60
  000e0		 |$LL30@CAN_Init|

; 439  :     {
; 440  :         if (CreateMsgQueuePair(NULL,&pDevice->TxMsgQ[i][MSQ_READER],&pDevice->TxMsgQ[i][MSQ_WRITER],
; 441  :             pDevice->canStatus.maxTxMsg[i],sizeof(CAN_MESSAGE),MSGQUEUE_ALLOW_BROKEN) == FALSE)

  000e0	e597308c	 ldr         r3, [r7, #0x8C]
  000e4	e2862004	 add         r2, r6, #4
  000e8	e1a01006	 mov         r1, r6
  000ec	e3a00000	 mov         r0, #0
  000f0	e58da004	 str         r10, [sp, #4]
  000f4	e58db000	 str         r11, [sp]
  000f8	eb000000	 bl          |?CreateMsgQueuePair@@YAHPAGPAPAX1KKK@Z|
  000fc	e3500000	 cmp         r0, #0
  00100	0a000078	 beq         |$LN48@CAN_Init|
  00104	e2855001	 add         r5, r5, #1
  00108	e3550003	 cmp         r5, #3
  0010c	e2877004	 add         r7, r7, #4
  00110	e2866008	 add         r6, r6, #8
  00114	bafffff1	 blt         |$LL30@CAN_Init|

; 442  :         {
; 443  :             goto cleanUp;
; 444  :         }
; 445  :     }
; 446  : 
; 447  :     pDevice->device = SOCGetCANDevice(pDevice->CanCtrlIndex);

  00118	e5940014	 ldr         r0, [r4, #0x14]
  0011c	eb000000	 bl          SOCGetCANDevice
  00120	e5840028	 str         r0, [r4, #0x28]

; 448  :     if (pDevice->device == OMAP_DEVICE_NONE)

  00124	e3700001	 cmn         r0, #1
  00128	0a00006e	 beq         |$LN48@CAN_Init|

; 449  :     {
; 450  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: CAN_Init: unable to get associated Device (check the CAN CTRL index)\r\n"));
; 451  :         goto cleanUp;
; 452  :     }
; 453  :     pa.QuadPart = GetAddressByDevice(pDevice->device);

  0012c	eb000000	 bl          GetAddressByDevice
  00130	e1a05000	 mov         r5, r0

; 454  :     if (pa.QuadPart == 0)

  00134	e3953000	 orrs        r3, r5, #0
  00138	0a00006a	 beq         |$LN48@CAN_Init|

; 455  :     {
; 456  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: CAN_Init: unable to get base address\r\n"));
; 457  :         goto cleanUp;
; 458  :     }
; 459  : 
; 460  :     irq[2] = GetIrqByDevice(pDevice->device,L"INT0");

  0013c	e59f11c8	 ldr         r1, [pc, #0x1C8]
  00140	e5940028	 ldr         r0, [r4, #0x28]
  00144	eb000000	 bl          GetIrqByDevice

; 461  :     irq[3] = GetIrqByDevice(pDevice->device,L"INT1");

  00148	e59f11b8	 ldr         r1, [pc, #0x1B8]
  0014c	e1a03000	 mov         r3, r0
  00150	e5940028	 ldr         r0, [r4, #0x28]
  00154	e58d3010	 str         r3, [sp, #0x10]
  00158	eb000000	 bl          GetIrqByDevice

; 462  :     if ((irq[2]==(DWORD)-1) || (irq[3]==(DWORD)-1))

  0015c	e59d3010	 ldr         r3, [sp, #0x10]
  00160	e58d0014	 str         r0, [sp, #0x14]
  00164	e3730001	 cmn         r3, #1
  00168	0a00005e	 beq         |$LN48@CAN_Init|
  0016c	e3700001	 cmn         r0, #1
  00170	0a00005c	 beq         |$LN48@CAN_Init|

; 463  :     {
; 464  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: CAN_Init: unable to get the interrupts\r\n"));
; 465  :         goto cleanUp;
; 466  :     }
; 467  : 
; 468  :     InitializeCriticalSection(&pDevice->regcs);

  00174	e2840030	 add         r0, r4, #0x30
  00178	eb000000	 bl          InitializeCriticalSection

; 469  :     InitializeCriticalSection(&pDevice->filterscs);

  0017c	e2840044	 add         r0, r4, #0x44
  00180	eb000000	 bl          InitializeCriticalSection

; 470  :     pDevice->pCanRegs = (OMAP_HECC_SCC_REGS*) MmMapIoSpace(pa,sizeof(OMAP_HECC_SCC_REGS),FALSE);

  00184	e3a03000	 mov         r3, #0
  00188	e3a02dc6	 mov         r2, #0xC6, 26
  0018c	e1a00005	 mov         r0, r5
  00190	e3a01000	 mov         r1, #0
  00194	eb000000	 bl          MmMapIoSpace
  00198	e3500000	 cmp         r0, #0
  0019c	e584002c	 str         r0, [r4, #0x2C]

; 471  :     if (pDevice->pCanRegs == NULL)

  001a0	0a000050	 beq         |$LN48@CAN_Init|

; 472  :     {
; 473  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: CAN_Init: unable to remap the registers\r\n"));
; 474  :         goto cleanUp;
; 475  :     }    
; 476  :     pDevice->hRTREvent = CreateEvent(NULL, FALSE, FALSE, NULL);

  001a4	e3a03000	 mov         r3, #0
  001a8	e3a02000	 mov         r2, #0
  001ac	e3a01000	 mov         r1, #0
  001b0	e3a00000	 mov         r0, #0
  001b4	eb000000	 bl          CreateEventW
  001b8	e3500000	 cmp         r0, #0
  001bc	e58400d4	 str         r0, [r4, #0xD4]

; 477  :     if (pDevice->hRTREvent == NULL)

  001c0	0a000048	 beq         |$LN48@CAN_Init|

; 478  :     {
; 479  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: CAN_Init: Failed create Remote Request event\r\n"));
; 480  :         goto cleanUp;
; 481  :     }
; 482  : 
; 483  :     // Create interrupt event
; 484  :     pDevice->hIntrEvent = CreateEvent(NULL, FALSE, FALSE, NULL);

  001c4	e3a03000	 mov         r3, #0
  001c8	e3a02000	 mov         r2, #0
  001cc	e3a01000	 mov         r1, #0
  001d0	e3a00000	 mov         r0, #0
  001d4	eb000000	 bl          CreateEventW
  001d8	e3500000	 cmp         r0, #0
  001dc	e5840004	 str         r0, [r4, #4]

; 485  :     if (pDevice->hIntrEvent == NULL)

  001e0	0a000040	 beq         |$LN48@CAN_Init|

; 486  :     {
; 487  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: CAN_Init: Failed create interrupt event\r\n"));
; 488  :         goto cleanUp;
; 489  :     }
; 490  : 
; 491  :     if (KernelIoControl(IOCTL_HAL_REQUEST_SYSINTR,irq,sizeof(irq),&pDevice->dwSysintr,sizeof(pDevice->dwSysintr),NULL)== FALSE)

  001e4	e59f0118	 ldr         r0, [pc, #0x118]
  001e8	e3a05000	 mov         r5, #0
  001ec	e3a06004	 mov         r6, #4
  001f0	e1a03004	 mov         r3, r4
  001f4	e3a02010	 mov         r2, #0x10
  001f8	e28d1008	 add         r1, sp, #8
  001fc	e58d5004	 str         r5, [sp, #4]
  00200	e58d6000	 str         r6, [sp]
  00204	eb000000	 bl          KernelIoControl
  00208	e3500000	 cmp         r0, #0
  0020c	0a000035	 beq         |$LN48@CAN_Init|

; 492  :     {
; 493  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: CAN_Init: unable to request a SYSINTR\r\n"));
; 494  :         goto cleanUp;
; 495  :     }
; 496  : 
; 497  : 
; 498  :     if (InterruptInitialize(pDevice->dwSysintr,pDevice->hIntrEvent,NULL,0)==FALSE)

  00210	e5941004	 ldr         r1, [r4, #4]
  00214	e5940000	 ldr         r0, [r4]
  00218	e3a03000	 mov         r3, #0
  0021c	e3a02000	 mov         r2, #0
  00220	eb000000	 bl          InterruptInitialize
  00224	e3500000	 cmp         r0, #0
  00228	0a00002e	 beq         |$LN48@CAN_Init|

; 499  :     {
; 500  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: CAN_Init: unable to initialize the interrupt\r\n"));
; 501  :         goto cleanUp;
; 502  :     }
; 503  : 
; 504  :     pDevice->hIntrThread = CreateThread(NULL, 0, CANIntrThread, pDevice, CREATE_SUSPENDED, NULL);

  0022c	e59f20cc	 ldr         r2, [pc, #0xCC]
  00230	e1a03004	 mov         r3, r4
  00234	e3a01000	 mov         r1, #0
  00238	e3a00000	 mov         r0, #0
  0023c	e58d5004	 str         r5, [sp, #4]
  00240	e58d6000	 str         r6, [sp]
  00244	eb000000	 bl          CreateThread
  00248	e3500000	 cmp         r0, #0
  0024c	e5840008	 str         r0, [r4, #8]

; 505  :     if (!pDevice->hIntrThread)

  00250	0a000024	 beq         |$LN48@CAN_Init|

; 506  :     {
; 507  :         DEBUGMSG (ZONE_ERROR, (L"ERROR: CAN_Init: Failed create interrupt thread\r\n"));
; 508  :         goto cleanUp;
; 509  :     }          
; 510  :     CeSetThreadPriority(pDevice->hIntrThread,pDevice->ThreadPriority);

  00254	e5941010	 ldr         r1, [r4, #0x10]
  00258	eb000000	 bl          CeSetThreadPriority

; 511  : 
; 512  :     pDevice->canStatus.BusState = ERROR_ACTIVE;

  0025c	e5845098	 str         r5, [r4, #0x98]

; 513  :     pDevice->canStatus.CtrlState = STOPPED;

  00260	e584509c	 str         r5, [r4, #0x9C]

; 514  :     
; 515  :     pDevice->FreeMailboxMask = (DWORD) (((UINT64)1<<NB_MAILBOXES)-1);

  00264	e58480c4	 str         r8, [r4, #0xC4]

; 516  :     pDevice->TxMailBoxMask = 0;

  00268	e58450c0	 str         r5, [r4, #0xC0]

; 517  :     pDevice->RxMailboxMask = 0;

  0026c	e58450c8	 str         r5, [r4, #0xC8]

; 518  :     pDevice->AutoAnswerMask = 0;

  00270	e58450cc	 str         r5, [r4, #0xCC]

; 519  :     pDevice->RemoteRequestMask = 0;

  00274	e58450d0	 str         r5, [r4, #0xD0]

; 520  :     for (int TxMailBox=FIRST_TX_MAILBOX;TxMailBox<=LAST_TX_MAILBOX;TxMailBox++)

  00278	e3a02013	 mov         r2, #0x13
  0027c	e3a01000	 mov         r1, #0
  00280		 |$LL6@CAN_Init|

; 521  :     {
; 522  :         pDevice->TxMailBoxMask |= (1<<TxMailBox);

  00280	e3a03001	 mov         r3, #1
  00284	e1811213	 orr         r1, r1, r3, lsl r2

; 523  :         pDevice->FreeMailboxMask &= ~(1<<TxMailBox);

  00288	e1e03213	 mvn         r3, r3, lsl r2
  0028c	e2822001	 add         r2, r2, #1
  00290	e0038008	 and         r8, r3, r8
  00294	e3520015	 cmp         r2, #0x15
  00298	dafffff8	 ble         |$LL6@CAN_Init|

; 524  :     }
; 525  :     pDevice->TxMailBoxAvailableMask = pDevice->TxMailBoxMask;
; 526  :     
; 527  : 
; 528  :     if (!RequestDevicePads(pDevice->device))

  0029c	e5940028	 ldr         r0, [r4, #0x28]
  002a0	e58480c4	 str         r8, [r4, #0xC4]
  002a4	e58410c0	 str         r1, [r4, #0xC0]
  002a8	e58410bc	 str         r1, [r4, #0xBC]
  002ac	eb000000	 bl          RequestDevicePads
  002b0	e3500000	 cmp         r0, #0
  002b4	0a00000b	 beq         |$LN48@CAN_Init|

; 529  :     {
; 530  :         DEBUGMSG (ZONE_ERROR, (L"ERROR: CAN_Init: RequestDevicePads failed\r\n"));
; 531  :         goto cleanUp;
; 532  :     }
; 533  :     EnableDeviceClocks(pDevice->device,TRUE);

  002b8	e5940028	 ldr         r0, [r4, #0x28]
  002bc	e3a01001	 mov         r1, #1
  002c0	eb000000	 bl          EnableDeviceClocks

; 534  :     //initialize the hardware    
; 535  :     CANInitHardware(pDevice);   

  002c4	e1a00004	 mov         r0, r4
  002c8	eb000000	 bl          |?CANInitHardware@@YAHPAX@Z|

; 536  :     EnableDeviceClocks(pDevice->device,FALSE);

  002cc	e5940028	 ldr         r0, [r4, #0x28]
  002d0	e3a01000	 mov         r1, #0
  002d4	eb000000	 bl          EnableDeviceClocks

; 537  : 
; 538  :     ResumeThread(pDevice->hIntrThread);

  002d8	e5940008	 ldr         r0, [r4, #8]
  002dc	eb000000	 bl          ResumeThread

; 539  :     // Return non-null value
; 540  :     rc = (DWORD)pDevice;

  002e0	e1a09004	 mov         r9, r4
  002e4		 |$cleanUp$36783|

; 541  : cleanUp:
; 542  :     if (rc == (DWORD)NULL)

  002e4	ea000001	 b           |$LN1@CAN_Init|
  002e8		 |$LN48@CAN_Init|

; 543  :     {
; 544  :         CAN_Deinit((DWORD) pDevice);

  002e8	e1a00004	 mov         r0, r4
  002ec	eb000000	 bl          |?CAN_Deinit@@YAHK@Z|
  002f0		 |$LN1@CAN_Init|

; 545  :     }
; 546  :     return rc;
; 547  : }

  002f0	e1a00009	 mov         r0, r9
  002f4	e28dd018	 add         sp, sp, #0x18
  002f8	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  002fc	e12fff1e	 bx          lr
  00300		 |$LN52@CAN_Init|
  00300		 |$LN53@CAN_Init|
  00300	00000000	 DCD         |?CANIntrThread@@YAKPAX@Z|
  00304		 |$LN54@CAN_Init|
  00304	01010098	 DCD         0x1010098
  00308		 |$LN55@CAN_Init|
  00308	00000000	 DCD         |??_C@_19JNEFLOBJ@?$AAI?$AAN?$AAT?$AA1?$AA?$AA@|
  0030c		 |$LN56@CAN_Init|
  0030c	00000000	 DCD         |??_C@_19CFPJNJHM@?$AAI?$AAN?$AAT?$AA0?$AA?$AA@|
  00310		 |$LN57@CAN_Init|
  00310	00000000	 DCD         |s_deviceRegParams|
  00314		 |$M38829|

			 ENDP  ; |?CAN_Init@@YAKPBGPBX@Z|, CAN_Init

	EXPORT	|?CAN_IOControl@@YAHKKPAEK0KPAK@Z|	; CAN_IOControl

  00000			 AREA	 |.pdata|, PDATA
|$T38942| DCD	|$LN118@CAN_IOCont|
	DCD	0x40010b02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CAN_IOControl@@YAHKKPAEK0KPAK@Z| PROC ; CAN_IOControl

; 722  : {

  00000		 |$LN118@CAN_IOCont|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M38939|
  00008	e1a07003	 mov         r7, r3
  0000c	e1a05002	 mov         r5, r2

; 723  :     BOOL rc = FALSE;
; 724  :     T_CAN_OPEN_CTXT *pCtxt = (T_CAN_OPEN_CTXT*) context;
; 725  :     T_CAN_DEVICE *ctxt = pCtxt->pDevice;
; 726  : 
; 727  : 
; 728  :     UNREFERENCED_PARAMETER(pOutSize);    
; 729  : 
; 730  :     //Parameter check
; 731  :     switch (code)

  00010	e3a0381b	 mov         r3, #0x1B, 16
  00014	e3833e41	 orr         r3, r3, #0x41, 28
  00018	e5906000	 ldr         r6, [r0]
  0001c	e1510003	 cmp         r1, r3
  00020	e3a04000	 mov         r4, #0
  00024	8a00004a	 bhi         |$LN63@CAN_IOCont|
  00028	0a00003a	 beq         |$LN31@CAN_IOCont|
  0002c	e3a0381b	 mov         r3, #0x1B, 16
  00030	e3830b01	 orr         r0, r3, #1, 22
  00034	e1510000	 cmp         r1, r0
  00038	0a00002d	 beq         |$LN58@CAN_IOCont|
  0003c	e59fe3e4	 ldr         lr, [pc, #0x3E4]
  00040	e151000e	 cmp         r1, lr
  00044	0a00001e	 beq         |$LN52@CAN_IOCont|
  00048	e59f33d4	 ldr         r3, [pc, #0x3D4]
  0004c	e1510003	 cmp         r1, r3
  00050	0a000011	 beq         |$LN55@CAN_IOCont|
  00054	e59f33c4	 ldr         r3, [pc, #0x3C4]
  00058	e1510003	 cmp         r1, r3
  0005c	1a0000c3	 bne         |$LN32@CAN_IOCont|

; 778  :             {
; 779  :             case CREATE_CLASS_FILTER_CFG:
; 780  :             case ENABLE_DISABLE_CLASS_FILTER_CFG:
; 781  :             case DELETE_CLASS_FILTER_CFG:
; 782  :             case ADD_SUBCLASS_FILTER_CFG:
; 783  :             case REMOVE_SUBCLASS_FILTER_CFG:
; 784  :                 break;
; 785  :             default:
; 786  :                 return FALSE;
; 787  :             }
; 788  :         }
; 789  :         break;
; 790  :     case IOCTL_CAN_SEND: 
; 791  :         if ((inSize != sizeof(IOCTL_CAN_SEND_IN)) || (pInBuffer == NULL))

  00060	e3570014	 cmp         r7, #0x14
  00064	1a0000c1	 bne         |$LN32@CAN_IOCont|
  00068	e3550000	 cmp         r5, #0
  0006c	0a0000bf	 beq         |$LN32@CAN_IOCont|

; 860  :                 break;                
; 861  :             }
; 862  :         }    
; 863  :         break;
; 864  :     case IOCTL_CAN_SEND: 
; 865  :         {
; 866  :             IOCTL_CAN_SEND_IN* pSendIn = (IOCTL_CAN_SEND_IN*) pInBuffer;
; 867  :             rc = CANSend(ctxt,pSendIn->msgArray,pSendIn->nbMsg,&pSendIn->nbMsgSent,pSendIn->priority,pSendIn->timeout);            

  00070	e5953008	 ldr         r3, [r5, #8]
  00074	e595e00c	 ldr         lr, [r5, #0xC]
  00078	e5952000	 ldr         r2, [r5]
  0007c	e5951010	 ldr         r1, [r5, #0x10]
  00080	e58d3004	 str         r3, [sp, #4]
  00084	e2853004	 add         r3, r5, #4
  00088	e1a00006	 mov         r0, r6
  0008c	e58de000	 str         lr, [sp]
  00090	eb000000	 bl          |?CANSend@@YAHPAXPAUCAN_MESSAGE@@KPAKW4TXCAN_PRIORITY@@K@Z|

; 877  :                 break;
; 878  :             case DELETE_AUTO_ANSWER:
; 879  :                 rc = CANConfigureAutoAnswer(ctxt,&pAutoAnswerIn->msg,FALSE);            

  00094	e1a04000	 mov         r4, r0

; 880  :                 break;

  00098	ea0000b5	 b           |$LN61@CAN_IOCont|
  0009c		 |$LN55@CAN_IOCont|

; 735  :         {
; 736  :             return FALSE;
; 737  :         }
; 738  :         break;
; 739  :     case IOCTL_CAN_STATUS: 
; 740  :         if ((outSize < sizeof(IOCTL_CAN_STATUS_OUT)) || (pOutBuffer == NULL))

  0009c	e59d302c	 ldr         r3, [sp, #0x2C]
  000a0	e3530044	 cmp         r3, #0x44
  000a4	3a0000b1	 bcc         |$LN32@CAN_IOCont|
  000a8	e59d1028	 ldr         r1, [sp, #0x28]
  000ac	e3510000	 cmp         r1, #0
  000b0	0a0000ae	 beq         |$LN32@CAN_IOCont|

; 822  :         break;
; 823  :     case IOCTL_CAN_STATUS: 
; 824  :         rc = CANStatus(ctxt,(IOCTL_CAN_STATUS_OUT*)pOutBuffer);

  000b4	e1a00006	 mov         r0, r6
  000b8	eb000000	 bl          |?CANStatus@@YAHPAXPAUCAN_STATUS@@@Z|

; 877  :                 break;
; 878  :             case DELETE_AUTO_ANSWER:
; 879  :                 rc = CANConfigureAutoAnswer(ctxt,&pAutoAnswerIn->msg,FALSE);            

  000bc	e1a04000	 mov         r4, r0

; 880  :                 break;

  000c0	ea0000ab	 b           |$LN61@CAN_IOCont|
  000c4		 |$LN52@CAN_IOCont|

; 741  :         {
; 742  :             return FALSE;
; 743  :         }
; 744  :         break;
; 745  :     case IOCTL_CAN_CONFIG: 
; 746  :         {
; 747  :             IOCTL_CAN_CONFIG_IN* pCfgIn;
; 748  :             if ((inSize != sizeof(IOCTL_CAN_CONFIG_IN)) || (pInBuffer == NULL))

  000c4	e3570008	 cmp         r7, #8
  000c8	1a0000a8	 bne         |$LN32@CAN_IOCont|
  000cc	e3550000	 cmp         r5, #0
  000d0	0a0000a6	 beq         |$LN32@CAN_IOCont|

; 749  :             {
; 750  :                 return FALSE;
; 751  :             }
; 752  :             pCfgIn = (IOCTL_CAN_CONFIG_IN*) pInBuffer;
; 753  :             switch (pCfgIn->cfgType)

  000d4	e5953000	 ldr         r3, [r5]
  000d8	e3530000	 cmp         r3, #0

; 754  :             {
; 755  :             case BAUDRATE_CFG:
; 756  :                 break;
; 757  :             default:
; 758  :                 return FALSE;

  000dc	1a0000a3	 bne         |$LN32@CAN_IOCont|

; 825  :         break;
; 826  :     case IOCTL_CAN_CONFIG: 
; 827  :         {
; 828  :             IOCTL_CAN_CONFIG_IN* pCfgIn;
; 829  :             pCfgIn = (IOCTL_CAN_CONFIG_IN*) pInBuffer;
; 830  :             switch (pCfgIn->cfgType)
; 831  :             {
; 832  :             case BAUDRATE_CFG:
; 833  :                 rc = CANConfigureBaudrate(ctxt,pCfgIn->BaudRate);

  000e0	e5951004	 ldr         r1, [r5, #4]
  000e4	e1a00006	 mov         r0, r6
  000e8	eb000000	 bl          |?CANConfigureBaudrate@@YAHPAXK@Z|

; 877  :                 break;
; 878  :             case DELETE_AUTO_ANSWER:
; 879  :                 rc = CANConfigureAutoAnswer(ctxt,&pAutoAnswerIn->msg,FALSE);            

  000ec	e1a04000	 mov         r4, r0

; 880  :                 break;

  000f0	ea00009f	 b           |$LN61@CAN_IOCont|
  000f4		 |$LN58@CAN_IOCont|

; 732  :     {
; 733  :     case IOCTL_CAN_COMMAND: 
; 734  :         if ((inSize != sizeof(IOCTL_CAN_COMMAND_IN)) || (pInBuffer == NULL))

  000f4	e3570004	 cmp         r7, #4
  000f8	1a00009c	 bne         |$LN32@CAN_IOCont|
  000fc	e3550000	 cmp         r5, #0
  00100	0a00009a	 beq         |$LN32@CAN_IOCont|

; 816  :     }
; 817  : 
; 818  :     switch (code)
; 819  :     {
; 820  :     case IOCTL_CAN_COMMAND: 
; 821  :         rc = CANCommand(ctxt,*((IOCTL_CAN_COMMAND_IN*)pInBuffer));

  00104	e5951000	 ldr         r1, [r5]
  00108	e1a00006	 mov         r0, r6
  0010c	eb000000	 bl          |?CANCommand@@YAHPAXW4CAN_COMMAND@@@Z|

; 877  :                 break;
; 878  :             case DELETE_AUTO_ANSWER:
; 879  :                 rc = CANConfigureAutoAnswer(ctxt,&pAutoAnswerIn->msg,FALSE);            

  00110	e1a04000	 mov         r4, r0

; 880  :                 break;

  00114	ea000096	 b           |$LN61@CAN_IOCont|
  00118		 |$LN31@CAN_IOCont|

; 800  :         }
; 801  :         break;
; 802  :     case IOCTL_CAN_RECEIVE: 
; 803  :         if ((outSize < sizeof(IOCTL_CAN_RECEIVE_OUT)) || (pOutBuffer == NULL))

  00118	e59d302c	 ldr         r3, [sp, #0x2C]
  0011c	e3530010	 cmp         r3, #0x10
  00120	3a000092	 bcc         |$LN32@CAN_IOCont|
  00124	e59d0028	 ldr         r0, [sp, #0x28]
  00128	e3500000	 cmp         r0, #0
  0012c	0a00008f	 beq         |$LN32@CAN_IOCont|

; 888  :         }
; 889  :         break;
; 890  :     case IOCTL_CAN_RECEIVE: 
; 891  :         {
; 892  :             IOCTL_CAN_RECEIVE_OUT* pRcvOut = (IOCTL_CAN_RECEIVE_OUT*) pOutBuffer;            
; 893  :             rc = CANReceive(ctxt,pRcvOut->msgArray,pRcvOut->nbMaxMsg,&pRcvOut->nbMsgReceived,pRcvOut->timeout);

  00130	e5903008	 ldr         r3, [r0, #8]
  00134	e5902000	 ldr         r2, [r0]
  00138	e590100c	 ldr         r1, [r0, #0xC]
  0013c	e58d3000	 str         r3, [sp]
  00140	e2803004	 add         r3, r0, #4
  00144	e1a00006	 mov         r0, r6
  00148	eb000000	 bl          |?CANReceive@@YAHPAXPAUCAN_MESSAGE@@KPAKK@Z|
  0014c	e1a04000	 mov         r4, r0
  00150	ea000087	 b           |$LN61@CAN_IOCont|
  00154		 |$LN63@CAN_IOCont|

; 723  :     BOOL rc = FALSE;
; 724  :     T_CAN_OPEN_CTXT *pCtxt = (T_CAN_OPEN_CTXT*) context;
; 725  :     T_CAN_DEVICE *ctxt = pCtxt->pDevice;
; 726  : 
; 727  : 
; 728  :     UNREFERENCED_PARAMETER(pOutSize);    
; 729  : 
; 730  :     //Parameter check
; 731  :     switch (code)

  00154	e59f32c0	 ldr         r3, [pc, #0x2C0]
  00158	e1510003	 cmp         r1, r3
  0015c	0a00003d	 beq         |$LN34@CAN_IOCont|
  00160	e59f32b0	 ldr         r3, [pc, #0x2B0]
  00164	e1510003	 cmp         r1, r3
  00168	0a00000b	 beq         |$LN45@CAN_IOCont|
  0016c	e59f32a0	 ldr         r3, [pc, #0x2A0]
  00170	e1510003	 cmp         r1, r3

; 810  :         {
; 811  :             return FALSE;
; 812  :         }
; 813  :         break;
; 814  :     default:
; 815  :         return FALSE;

  00174	1a00007d	 bne         |$LN32@CAN_IOCont|

; 804  :         {
; 805  :             return FALSE;
; 806  :         }
; 807  :         break;
; 808  :     case IOCTL_CAN_REMOTE_REQUEST:
; 809  :         if ((inSize < sizeof(IOCTL_CAN_REMOTE_REQUEST_IN)) || (pInBuffer == NULL))

  00178	e3570004	 cmp         r7, #4
  0017c	3a00007b	 bcc         |$LN32@CAN_IOCont|
  00180	e3550000	 cmp         r5, #0
  00184	0a000079	 beq         |$LN32@CAN_IOCont|

; 881  :             }
; 882  :         }
; 883  :         break;
; 884  :     case IOCTL_CAN_REMOTE_REQUEST:
; 885  :         {
; 886  :             IOCTL_CAN_REMOTE_REQUEST_IN* pRemoteRequest = (IOCTL_CAN_REMOTE_REQUEST_IN*) pInBuffer;
; 887  :             rc = CANRemoteRequest(ctxt,pRemoteRequest);

  00188	e1a01005	 mov         r1, r5
  0018c	e1a00006	 mov         r0, r6
  00190	eb000000	 bl          |?CANRemoteRequest@@YAHPAXPAUCAN_REMOTE_REQUEST@@@Z|
  00194	e1a04000	 mov         r4, r0
  00198	ea000075	 b           |$LN61@CAN_IOCont|
  0019c		 |$LN45@CAN_IOCont|

; 759  :             }
; 760  :         }
; 761  :         break;
; 762  :     case IOCTL_CAN_FILTER_CONFIG: 
; 763  :         {
; 764  :             IOCTL_CAN_CLASS_FILTER_CONFIG_IN* pCfgIn;
; 765  : 
; 766  : #pragma warning(push)
; 767  : #pragma warning(disable:6287) //If sizeof(IOCTL_CAN_CLASS_FILTER_CONFIG_IN) == sizeof(IOCTL_CAN_SUBCLASS_FILTER_CONFIG_IN) we have a warning of redudant testing
; 768  :             if (((inSize != sizeof(IOCTL_CAN_CLASS_FILTER_CONFIG_IN)) && 
; 769  :                 (inSize != sizeof(IOCTL_CAN_SUBCLASS_FILTER_CONFIG_IN)))
; 770  :                 || (pInBuffer == NULL))

  0019c	e3570014	 cmp         r7, #0x14
  001a0	1a000072	 bne         |$LN32@CAN_IOCont|
  001a4	e3550000	 cmp         r5, #0
  001a8	0a000070	 beq         |$LN32@CAN_IOCont|

; 771  : #pragma warning(pop)
; 772  : 
; 773  :             {
; 774  :                 return FALSE;
; 775  :             }
; 776  :             pCfgIn = (IOCTL_CAN_CLASS_FILTER_CONFIG_IN*) pInBuffer;
; 777  :             switch (pCfgIn->cfgType)

  001ac	e5953000	 ldr         r3, [r5]
  001b0	e1b02003	 movs        r2, r3
  001b4	4a00006d	 bmi         |$LN32@CAN_IOCont|
  001b8	e3520004	 cmp         r2, #4
  001bc	ca00006b	 bgt         |$LN32@CAN_IOCont|

; 834  :                 break;
; 835  :             }
; 836  :         }
; 837  :         break;
; 838  :     case IOCTL_CAN_FILTER_CONFIG:
; 839  :         {
; 840  :             IOCTL_CAN_CLASS_FILTER_CONFIG_IN* pClassCfgIn;
; 841  :             IOCTL_CAN_SUBCLASS_FILTER_CONFIG_IN* pSubClassCfgIn;
; 842  :             pClassCfgIn = (IOCTL_CAN_CLASS_FILTER_CONFIG_IN*) pInBuffer;
; 843  :             pSubClassCfgIn = (IOCTL_CAN_SUBCLASS_FILTER_CONFIG_IN*) pInBuffer;
; 844  :             switch (pClassCfgIn->cfgType)

  001c0	e3530000	 cmp         r3, #0
  001c4	0a00001c	 beq         |$LN13@CAN_IOCont|
  001c8	e3530001	 cmp         r3, #1
  001cc	0a000014	 beq         |$LN12@CAN_IOCont|
  001d0	e3530002	 cmp         r3, #2
  001d4	0a00000d	 beq         |$LN11@CAN_IOCont|
  001d8	e3530003	 cmp         r3, #3
  001dc	0a000006	 beq         |$LN10@CAN_IOCont|
  001e0	e3530004	 cmp         r3, #4
  001e4	1a000062	 bne         |$LN61@CAN_IOCont|

; 857  :                 break;
; 858  :             case REMOVE_SUBCLASS_FILTER_CFG:
; 859  :                 rc = CANRemoveSubClassFilter(ctxt,&pSubClassCfgIn->subClassFilter);

  001e8	e2851004	 add         r1, r5, #4
  001ec	e1a00006	 mov         r0, r6
  001f0	eb000000	 bl          |?CANRemoveSubClassFilter@@YAHPAXPAUSUBCLASS_FILTER@@@Z|

; 877  :                 break;
; 878  :             case DELETE_AUTO_ANSWER:
; 879  :                 rc = CANConfigureAutoAnswer(ctxt,&pAutoAnswerIn->msg,FALSE);            

  001f4	e1a04000	 mov         r4, r0

; 880  :                 break;

  001f8	ea00005d	 b           |$LN61@CAN_IOCont|
  001fc		 |$LN10@CAN_IOCont|

; 854  :                 break;
; 855  :             case ADD_SUBCLASS_FILTER_CFG:
; 856  :                 rc = CANAddSubClassFilter(ctxt,&pSubClassCfgIn->subClassFilter);

  001fc	e2851004	 add         r1, r5, #4
  00200	e1a00006	 mov         r0, r6
  00204	eb000000	 bl          |?CANAddSubClassFilter@@YAHPAXPAUSUBCLASS_FILTER@@@Z|

; 877  :                 break;
; 878  :             case DELETE_AUTO_ANSWER:
; 879  :                 rc = CANConfigureAutoAnswer(ctxt,&pAutoAnswerIn->msg,FALSE);            

  00208	e1a04000	 mov         r4, r0

; 880  :                 break;

  0020c	ea000058	 b           |$LN61@CAN_IOCont|
  00210		 |$LN11@CAN_IOCont|

; 851  :                 break;
; 852  :             case DELETE_CLASS_FILTER_CFG:
; 853  :                 rc = CANDeleteClassFilter(ctxt,&pClassCfgIn->classFilter);

  00210	e2851004	 add         r1, r5, #4
  00214	e1a00006	 mov         r0, r6
  00218	eb000000	 bl          |?CANDeleteClassFilter@@YAHPAXPAUCLASS_FILTER@@@Z|

; 877  :                 break;
; 878  :             case DELETE_AUTO_ANSWER:
; 879  :                 rc = CANConfigureAutoAnswer(ctxt,&pAutoAnswerIn->msg,FALSE);            

  0021c	e1a04000	 mov         r4, r0

; 880  :                 break;

  00220	ea000053	 b           |$LN61@CAN_IOCont|
  00224		 |$LN12@CAN_IOCont|

; 848  :                 break;
; 849  :             case ENABLE_DISABLE_CLASS_FILTER_CFG:
; 850  :                 rc = CANEnableClassFilter(ctxt,&pClassCfgIn->classFilter,pClassCfgIn->fEnabled);

  00224	e5952010	 ldr         r2, [r5, #0x10]
  00228	e2851004	 add         r1, r5, #4
  0022c	e1a00006	 mov         r0, r6
  00230	eb000000	 bl          |?CANEnableClassFilter@@YAHPAXPAUCLASS_FILTER@@H@Z|

; 877  :                 break;
; 878  :             case DELETE_AUTO_ANSWER:
; 879  :                 rc = CANConfigureAutoAnswer(ctxt,&pAutoAnswerIn->msg,FALSE);            

  00234	e1a04000	 mov         r4, r0

; 880  :                 break;

  00238	ea00004d	 b           |$LN61@CAN_IOCont|
  0023c		 |$LN13@CAN_IOCont|

; 845  :             {
; 846  :             case CREATE_CLASS_FILTER_CFG:
; 847  :                 rc = CANCreateClassFilter(ctxt,&pClassCfgIn->classFilter,pClassCfgIn->rxPriority,pClassCfgIn->fEnabled);

  0023c	e5953010	 ldr         r3, [r5, #0x10]
  00240	e595200c	 ldr         r2, [r5, #0xC]
  00244	e2851004	 add         r1, r5, #4
  00248	e1a00006	 mov         r0, r6
  0024c	eb000000	 bl          |?CANCreateClassFilter@@YAHPAXPAUCLASS_FILTER@@W4RXCAN_PRIORITY@@H@Z|

; 877  :                 break;
; 878  :             case DELETE_AUTO_ANSWER:
; 879  :                 rc = CANConfigureAutoAnswer(ctxt,&pAutoAnswerIn->msg,FALSE);            

  00250	e1a04000	 mov         r4, r0

; 880  :                 break;

  00254	ea000046	 b           |$LN61@CAN_IOCont|
  00258		 |$LN34@CAN_IOCont|

; 792  :         {
; 793  :             return FALSE;
; 794  :         }
; 795  :         break;
; 796  :     case IOCTL_CAN_REMOTE_CONFIGURE_AUTO_ANSWER: 
; 797  :         if ((inSize != sizeof(IOCTL_CAN_REMOTE_CONFIGURE_AUTO_ANSWER_IN)) || (pInBuffer == NULL))

  00258	e3570014	 cmp         r7, #0x14
  0025c	1a000043	 bne         |$LN32@CAN_IOCont|
  00260	e3550000	 cmp         r5, #0
  00264	0a000041	 beq         |$LN32@CAN_IOCont|

; 868  :         }
; 869  :         break;
; 870  :     case IOCTL_CAN_REMOTE_CONFIGURE_AUTO_ANSWER:
; 871  :         {
; 872  :             IOCTL_CAN_REMOTE_CONFIGURE_AUTO_ANSWER_IN* pAutoAnswerIn = (IOCTL_CAN_REMOTE_CONFIGURE_AUTO_ANSWER_IN*) pInBuffer;
; 873  :             switch (pAutoAnswerIn->cfgType)

  00268	e5953000	 ldr         r3, [r5]
  0026c	e3530000	 cmp         r3, #0
  00270	0a000007	 beq         |$LN4@CAN_IOCont|
  00274	e3530001	 cmp         r3, #1
  00278	1a00003d	 bne         |$LN61@CAN_IOCont|

; 877  :                 break;
; 878  :             case DELETE_AUTO_ANSWER:
; 879  :                 rc = CANConfigureAutoAnswer(ctxt,&pAutoAnswerIn->msg,FALSE);            

  0027c	e3a02000	 mov         r2, #0
  00280	e2851004	 add         r1, r5, #4
  00284	e1a00006	 mov         r0, r6
  00288	eb000000	 bl          |?CANConfigureAutoAnswer@@YAHPAXPAUCAN_MESSAGE@@H@Z|
  0028c	e1a04000	 mov         r4, r0

; 880  :                 break;

  00290	ea000037	 b           |$LN61@CAN_IOCont|
  00294		 |$LN4@CAN_IOCont|

; 874  :             {
; 875  :             case SET_AUTO_ANSWER:
; 876  :                 rc = CANConfigureAutoAnswer(ctxt,&pAutoAnswerIn->msg,TRUE);            

  00294	e5d5300c	 ldrb        r3, [r5, #0xC]
  00298	e3530008	 cmp         r3, #8
  0029c	8a000033	 bhi         |$LN32@CAN_IOCont|
  002a0	e2860030	 add         r0, r6, #0x30
  002a4	eb000000	 bl          EnterCriticalSection
  002a8	e59630cc	 ldr         r3, [r6, #0xCC]
  002ac	e3a0257f	 mov         r2, #0x7F, 10
  002b0	e382970f	 orr         r9, r2, #0xF, 14
  002b4	e1b07003	 movs        r7, r3
  002b8	e3a04000	 mov         r4, #0
  002bc	0a00001c	 beq         |$LN97@CAN_IOCont|
  002c0	e3a08a02	 mov         r8, #2, 20
  002c4		 |$LL77@CAN_IOCont|
  002c4	e3170001	 tst         r7, #1
  002c8	0a000012	 beq         |$LN81@CAN_IOCont|
  002cc	e596302c	 ldr         r3, [r6, #0x2C]
  002d0	e28d1008	 add         r1, sp, #8
  002d4	e7980003	 ldr         r0, [r8, +r3]
  002d8	eb000000	 bl          |?CANMIDtoCANID@@YAXIPATCAN_ID@@@Z|
  002dc	e59d1008	 ldr         r1, [sp, #8]
  002e0	e5952010	 ldr         r2, [r5, #0x10]
  002e4	e3110102	 tst         r1, #2, 2
  002e8	0a000005	 beq         |$LN84@CAN_IOCont|
  002ec	e2023102	 and         r3, r2, #2, 2
  002f0	e3530102	 cmp         r3, #2, 2
  002f4	1a000007	 bne         |$LN81@CAN_IOCont|
  002f8	e0213002	 eor         r3, r1, r2
  002fc	e3d3c20e	 bics        r12, r3, #0xE, 4
  00300	ea000003	 b           |$LN114@CAN_IOCont|
  00304		 |$LN84@CAN_IOCont|
  00304	e3120102	 tst         r2, #2, 2
  00308	1a000002	 bne         |$LN81@CAN_IOCont|
  0030c	e0213002	 eor         r3, r1, r2
  00310	e1130009	 tst         r3, r9
  00314		 |$LN114@CAN_IOCont|
  00314	0a000004	 beq         |$LN93@CAN_IOCont|
  00318		 |$LN81@CAN_IOCont|
  00318	e1b070a7	 movs        r7, r7, lsr #1
  0031c	e2844001	 add         r4, r4, #1
  00320	e2888010	 add         r8, r8, #0x10
  00324	1affffe6	 bne         |$LL77@CAN_IOCont|
  00328	ea000001	 b           |$LN97@CAN_IOCont|
  0032c		 |$LN93@CAN_IOCont|
  0032c	e3740001	 cmn         r4, #1
  00330	1a000013	 bne         |$LN68@CAN_IOCont|
  00334		 |$LN97@CAN_IOCont|
  00334	e59630c4	 ldr         r3, [r6, #0xC4]
  00338	e3a0401f	 mov         r4, #0x1F
  0033c	e3a02001	 mov         r2, #1
  00340		 |$LL72@CAN_IOCont|
  00340	e1130412	 tst         r3, r2, lsl r4
  00344	1a000002	 bne         |$LN94@CAN_IOCont|
  00348	e2544001	 subs        r4, r4, #1
  0034c	5afffffb	 bpl         |$LL72@CAN_IOCont|
  00350	ea000004	 b           |$LN98@CAN_IOCont|
  00354		 |$LN94@CAN_IOCont|
  00354	e3a02001	 mov         r2, #1
  00358	e1c33412	 bic         r3, r3, r2, lsl r4
  0035c	e3740001	 cmn         r4, #1
  00360	e58630c4	 str         r3, [r6, #0xC4]
  00364	1a000006	 bne         |$LN68@CAN_IOCont|
  00368		 |$LN98@CAN_IOCont|
  00368	e2860030	 add         r0, r6, #0x30
  0036c	eb000000	 bl          LeaveCriticalSection
  00370		 |$LN32@CAN_IOCont|

; 798  :         {
; 799  :             return FALSE;

  00370	e3a04000	 mov         r4, #0
  00374		 |$LN61@CAN_IOCont|

; 898  : }

  00374	e1a00004	 mov         r0, r4
  00378	e28dd00c	 add         sp, sp, #0xC
  0037c	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  00380	e12fff1e	 bx          lr

; 874  :             {
; 875  :             case SET_AUTO_ANSWER:
; 876  :                 rc = CANConfigureAutoAnswer(ctxt,&pAutoAnswerIn->msg,TRUE);            

  00384		 |$LN68@CAN_IOCont|
  00384	e596002c	 ldr         r0, [r6, #0x2C]
  00388	e3a0e001	 mov         lr, #1
  0038c	e2842c02	 add         r2, r4, #2, 24
  00390	e5903000	 ldr         r3, [r0]
  00394	e0802202	 add         r2, r0, r2, lsl #4
  00398	e1c3341e	 bic         r3, r3, lr, lsl r4
  0039c	e5803000	 str         r3, [r0]
  003a0	e596102c	 ldr         r1, [r6, #0x2C]
  003a4	e2860030	 add         r0, r6, #0x30
  003a8	e5913004	 ldr         r3, [r1, #4]
  003ac	e1c3341e	 bic         r3, r3, lr, lsl r4
  003b0	e5813004	 str         r3, [r1, #4]
  003b4	e5953008	 ldr         r3, [r5, #8]
  003b8	e582300c	 str         r3, [r2, #0xC]
  003bc	e5953004	 ldr         r3, [r5, #4]
  003c0	e5823008	 str         r3, [r2, #8]
  003c4	e5953010	 ldr         r3, [r5, #0x10]
  003c8	e3130102	 tst         r3, #2, 2
  003cc	13c3320e	 bicne       r3, r3, #0xE, 4
  003d0	13833102	 orrne       r3, r3, #2, 2
  003d4	00033009	 andeq       r3, r3, r9
  003d8	e3833202	 orr         r3, r3, #2, 4
  003dc	e5823000	 str         r3, [r2]
  003e0	e5d5300c	 ldrb        r3, [r5, #0xC]
  003e4	e3833c03	 orr         r3, r3, #3, 24
  003e8	e5823004	 str         r3, [r2, #4]
  003ec	e596202c	 ldr         r2, [r6, #0x2C]
  003f0	e5923000	 ldr         r3, [r2]
  003f4	e183341e	 orr         r3, r3, lr, lsl r4
  003f8	e5823000	 str         r3, [r2]
  003fc	e59630cc	 ldr         r3, [r6, #0xCC]
  00400	e183341e	 orr         r3, r3, lr, lsl r4
  00404	e58630cc	 str         r3, [r6, #0xCC]
  00408	eb000000	 bl          LeaveCriticalSection
  0040c	e3a04001	 mov         r4, #1

; 894  :         }        
; 895  :         break;
; 896  :     }
; 897  :     return rc;

  00410	eaffffd7	 b           |$LN61@CAN_IOCont|
  00414		 |$LN119@CAN_IOCont|
  00414		 |$LN120@CAN_IOCont|
  00414	001b041c	 DCD         0x1b041c
  00418		 |$LN121@CAN_IOCont|
  00418	001b0418	 DCD         0x1b0418
  0041c		 |$LN122@CAN_IOCont|
  0041c	001b0414	 DCD         0x1b0414
  00420		 |$LN123@CAN_IOCont|
  00420	001b040c	 DCD         0x1b040c
  00424		 |$LN124@CAN_IOCont|
  00424	001b0408	 DCD         0x1b0408
  00428		 |$LN125@CAN_IOCont|
  00428	001b0404	 DCD         0x1b0404
  0042c		 |$M38940|

			 ENDP  ; |?CAN_IOControl@@YAHKKPAEK0KPAK@Z|, CAN_IOControl

	END
