; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\USB\USB2COM\sync.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|PulseEvent|
	IMPORT	|EventModify|
; File c:\wince600\osdesigns\z2170p\z2170p\wince600\z2170p_armv4i\cesysgen\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T33680| DCD	|$LN5@PulseEvent|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PulseEvent| PROC

; 211  : _inline BOOL PulseEvent(HANDLE h) {

  00000		 |$LN5@PulseEvent|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M33677|

; 212  : 	return EventModify(h,EVENT_PULSE);

  00004	e3a01001	 mov         r1, #1
  00008	eb000000	 bl          EventModify

; 213  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M33678|

			 ENDP  ; |PulseEvent|

	EXPORT	|ResetEvent|

  00000			 AREA	 |.pdata|, PDATA
|$T33690| DCD	|$LN5@ResetEvent|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |ResetEvent| PROC

; 223  : _inline BOOL ResetEvent(HANDLE h) {

  00000		 |$LN5@ResetEvent|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M33687|

; 224  : 	return EventModify(h,EVENT_RESET);

  00004	e3a01002	 mov         r1, #2
  00008	eb000000	 bl          EventModify

; 225  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M33688|

			 ENDP  ; |ResetEvent|

	EXPORT	|SetEvent|

  00000			 AREA	 |.pdata|, PDATA
|$T33700| DCD	|$LN5@SetEvent|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetEvent| PROC

; 235  : _inline BOOL SetEvent(HANDLE h) {

  00000		 |$LN5@SetEvent|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M33697|

; 236  : 	return EventModify(h,EVENT_SET);

  00004	e3a01003	 mov         r1, #3
  00008	eb000000	 bl          EventModify

; 237  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M33698|

			 ENDP  ; |SetEvent|

	EXPORT	|GetCurrentThreadId|
	IMPORT	|__GetUserKData|

  00000			 AREA	 |.pdata|, PDATA
|$T33709| DCD	|$LN5@GetCurrent|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetCurrentThreadId| PROC

; 369  : _inline DWORD GetCurrentThreadId(void) {

  00000		 |$LN5@GetCurrent|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M33706|

; 370  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURTHREAD * sizeof(HANDLE)));

  00004	e3a00008	 mov         r0, #8
  00008	eb000000	 bl          __GetUserKData

; 371  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M33707|

			 ENDP  ; |GetCurrentThreadId|

	EXPORT	|?EnterCritSec_Ex@CritSec_Ex@@QAA?AW4e_CritSec_Status@@K@Z| ; CritSec_Ex::EnterCritSec_Ex
	IMPORT	|WaitForSingleObject|
	IMPORT	|LeaveCriticalSection|
	IMPORT	|EnterCriticalSection|
	IMPORT	|GetTickCount|

  00000			 AREA	 |.pdata|, PDATA
|$T33737| DCD	|$LN29@EnterCritS|
	DCD	0x40004b02
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\usb\usb2com\sync.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?EnterCritSec_Ex@CritSec_Ex@@QAA?AW4e_CritSec_Status@@K@Z| PROC ; CritSec_Ex::EnterCritSec_Ex

; 131  : {

  00000		 |$LN29@EnterCritS|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M33734|
  00008	e1a08001	 mov         r8, r1
  0000c	e1a04000	 mov         r4, r0

; 132  :     DWORD r;
; 133  :     ULONG tStart, tNow, tLeft;
; 134  :     CritSec_Status retval;
; 135  :     BOOL fWaiting;
; 136  :     DWORD me;
; 137  : 
; 138  :     tStart = GetTickCount();

  00010	eb000000	 bl          GetTickCount
  00014	e1a0a000	 mov         r10, r0

; 139  :     r = ! WAIT_TIMEOUT;  // anything other than WAIT_TIMEOUT will suffice
; 140  :     me = GetCurrentThreadId();

  00018	e3a00008	 mov         r0, #8
  0001c	e3a06000	 mov         r6, #0
  00020	eb000000	 bl          __GetUserKData

; 141  : 
; 142  :     // Help destruction proceed more quickly by preventing anyone new from using
; 143  :     // the IPC objects when we're pending destruction. Do this here for speed
; 144  :     // and again within the critical section for correctness.
; 145  :     if (m_fClosing)

  00024	e5943024	 ldr         r3, [r4, #0x24]
  00028	e1a09000	 mov         r9, r0
  0002c	e3530000	 cmp         r3, #0
  00030	0a000004	 beq         |$LN17@EnterCritS|

; 146  :         return CSS_DESTROYED;

  00034	e3a05001	 mov         r5, #1
  00038		 |$LN25@EnterCritS|

; 190  : 
; 191  :     return retval;
; 192  : }

  00038	e1a00005	 mov         r0, r5
  0003c	e28dd004	 add         sp, sp, #4
  00040	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00044	e12fff1e	 bx          lr
  00048		 |$LN17@EnterCritS|

; 147  : 
; 148  :     EnterCriticalSection(&m_cs);

  00048	e2840010	 add         r0, r4, #0x10
  0004c	eb000000	 bl          EnterCriticalSection
  00050	e3a03c01	 mov         r3, #1, 24
  00054	e59d5000	 ldr         r5, [sp]
  00058	e383b002	 orr         r11, r3, #2
  0005c		 |$LN26@EnterCritS|

; 149  :     do {
; 150  :         fWaiting = FALSE;
; 151  : 
; 152  :         if (m_fClosing) {

  0005c	e5943024	 ldr         r3, [r4, #0x24]
  00060	e3a02001	 mov         r2, #1
  00064	e3a07000	 mov         r7, #0
  00068	e3530000	 cmp         r3, #0
  0006c	0a000004	 beq         |$LN13@EnterCritS|

; 153  :             SetEvent(m_hev);

  00070	e594000c	 ldr         r0, [r4, #0xC]
  00074	e3a01003	 mov         r1, #3
  00078	eb000000	 bl          EventModify

; 154  :             retval = CSS_DESTROYED;

  0007c	e3a05001	 mov         r5, #1
  00080	ea000011	 b           |$LN6@EnterCritS|
  00084		 |$LN13@EnterCritS|

; 155  :         }
; 156  :         else if (r == WAIT_TIMEOUT) {

  00084	e156000b	 cmp         r6, r11

; 157  :             retval = CSS_TIMEOUT;

  00088	03a05002	 moveq       r5, #2
  0008c	0a00000e	 beq         |$LN6@EnterCritS|

; 158  :         }
; 159  :         else if (m_hOwnerThread == 0) {

  00090	e5943000	 ldr         r3, [r4]
  00094	e3530000	 cmp         r3, #0

; 160  :             m_hOwnerThread = me;

  00098	05849000	 streq       r9, [r4]

; 161  :             m_cOwnerReferences = 1;

  0009c	05842004	 streq       r2, [r4, #4]

; 162  :             retval = CSS_SUCCESS;

  000a0	03a05000	 moveq       r5, #0
  000a4	0a000008	 beq         |$LN6@EnterCritS|

; 163  :         }
; 164  :         else if (m_hOwnerThread == me) {

  000a8	e1530009	 cmp         r3, r9

; 165  :             ++m_cOwnerReferences;

  000ac	05943004	 ldreq       r3, [r4, #4]

; 166  :             retval = CSS_SUCCESS;

  000b0	03a05000	 moveq       r5, #0

; 167  :         }
; 168  :         else {
; 169  :             // Oh well, we've got to wait.
; 170  :             ++m_cWaitingThreads;
; 171  :             fWaiting = TRUE;

  000b4	13a07001	 movne       r7, #1
  000b8	02833001	 addeq       r3, r3, #1
  000bc	05843004	 streq       r3, [r4, #4]
  000c0	15943008	 ldrne       r3, [r4, #8]
  000c4	12833001	 addne       r3, r3, #1
  000c8	15843008	 strne       r3, [r4, #8]
  000cc		 |$LN6@EnterCritS|

; 172  :         }
; 173  :         LeaveCriticalSection(&m_cs);

  000cc	e2840010	 add         r0, r4, #0x10
  000d0	eb000000	 bl          LeaveCriticalSection

; 174  : 
; 175  :         if (fWaiting) {

  000d4	e3570000	 cmp         r7, #0
  000d8	0affffd6	 beq         |$LN25@EnterCritS|

; 176  :             if (ulTimeout != INFINITE) {

  000dc	e3780001	 cmn         r8, #1
  000e0	0a000007	 beq         |$LN4@EnterCritS|

; 177  :                 tNow = GetTickCount();

  000e4	eb000000	 bl          GetTickCount

; 178  :                 if (tNow - tStart < ulTimeout)

  000e8	e040300a	 sub         r3, r0, r10
  000ec	e1530008	 cmp         r3, r8

; 179  :                     tLeft = ulTimeout - (tNow - tStart);

  000f0	304a3000	 subcc       r3, r10, r0
  000f4	30831008	 addcc       r1, r3, r8
  000f8	3a000002	 bcc         |$LN1@EnterCritS|

; 180  :                 else
; 181  :                     tLeft = 0; // poll one more time

  000fc	e3a01000	 mov         r1, #0

; 182  :             } else {

  00100	ea000000	 b           |$LN1@EnterCritS|
  00104		 |$LN4@EnterCritS|

; 183  :                 tLeft = INFINITE;

  00104	e3e01000	 mvn         r1, #0
  00108		 |$LN1@EnterCritS|

; 184  :             }
; 185  :             r = WaitForSingleObject(m_hev, tLeft);

  00108	e594000c	 ldr         r0, [r4, #0xC]
  0010c	eb000000	 bl          WaitForSingleObject
  00110	e1a06000	 mov         r6, r0

; 186  :             EnterCriticalSection(&m_cs);

  00114	e2840010	 add         r0, r4, #0x10
  00118	eb000000	 bl          EnterCriticalSection

; 187  :             --m_cWaitingThreads;

  0011c	e5943008	 ldr         r3, [r4, #8]
  00120	e2433001	 sub         r3, r3, #1
  00124	e5843008	 str         r3, [r4, #8]

; 188  :         }
; 189  :     } while (fWaiting);

  00128	eaffffcb	 b           |$LN26@EnterCritS|
  0012c		 |$M33735|

			 ENDP  ; |?EnterCritSec_Ex@CritSec_Ex@@QAA?AW4e_CritSec_Status@@K@Z|, CritSec_Ex::EnterCritSec_Ex

	EXPORT	|?LeaveCritSec_Ex@CritSec_Ex@@QAAXXZ|	; CritSec_Ex::LeaveCritSec_Ex
; File c:\wince600\osdesigns\z2170p\z2170p\wince600\z2170p_armv4i\cesysgen\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T33749| DCD	|$LN8@LeaveCritS|
	DCD	0x40001001
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\usb\usb2com\sync.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?LeaveCritSec_Ex@CritSec_Ex@@QAAXXZ| PROC ; CritSec_Ex::LeaveCritSec_Ex

; 195  : {

  00000		 |$LN8@LeaveCritS|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M33746|
  00004	e1a04000	 mov         r4, r0

; 196  : #ifdef POLITE // but not by default // default is to fail so the debugger knows you botched
; 197  :     if (m_fClosing && m_hOwnerThread == NULL)
; 198  :         // our caller violated protocol but we'll ignore it
; 199  :         return;
; 200  : #endif
; 201  :     ASSERT(m_hOwnerThread == GetCurrentThreadId());
; 202  :     
; 203  :     EnterCriticalSection(&m_cs);

  00008	e2840010	 add         r0, r4, #0x10
  0000c	eb000000	 bl          EnterCriticalSection

; 204  : 
; 205  :     // this would be symptomatic of a logic error in the caller
; 206  :     ASSERT(m_cOwnerReferences > 0);
; 207  : 
; 208  :     if (--m_cOwnerReferences == 0) {

  00010	e5943004	 ldr         r3, [r4, #4]
  00014	e2533001	 subs        r3, r3, #1

; 209  :         m_hOwnerThread = 0;
; 210  :         SetEvent(m_hev);

  00018	0594000c	 ldreq       r0, [r4, #0xC]
  0001c	e5843004	 str         r3, [r4, #4]
  00020	03a03000	 moveq       r3, #0
  00024	03a01003	 moveq       r1, #3
  00028	05843000	 streq       r3, [r4]
  0002c	0b000000	 bleq        EventModify

; 211  :     }
; 212  : 
; 213  :     LeaveCriticalSection(&m_cs);

  00030	e2840010	 add         r0, r4, #0x10
  00034	eb000000	 bl          LeaveCriticalSection

; 214  : }

  00038	e8bd4010	 ldmia       sp!, {r4, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$M33747|

			 ENDP  ; |?LeaveCritSec_Ex@CritSec_Ex@@QAAXXZ|, CritSec_Ex::LeaveCritSec_Ex

	EXPORT	|?Initialize@CritSec_Ex@@QAAXXZ|	; CritSec_Ex::Initialize

  00000			 AREA	 |.pdata|, PDATA
|$T33757| DCD	|$LN5@Initialize|
	DCD	0x40000d01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Initialize@CritSec_Ex@@QAAXXZ| PROC	; CritSec_Ex::Initialize

; 227  : {

  00000		 |$LN5@Initialize|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M33754|
  00004	e1a04000	 mov         r4, r0

; 228  :     EnterCriticalSection(&m_cs);

  00008	e2840010	 add         r0, r4, #0x10
  0000c	eb000000	 bl          EnterCriticalSection

; 229  :     m_hOwnerThread = 0;

  00010	e3a03000	 mov         r3, #0

; 230  :     m_cOwnerReferences = 0;
; 231  :     m_cWaitingThreads = 0;
; 232  :     m_fClosing = FALSE;
; 233  :     LeaveCriticalSection(&m_cs);

  00014	e2840010	 add         r0, r4, #0x10
  00018	e5843000	 str         r3, [r4]
  0001c	e5843004	 str         r3, [r4, #4]
  00020	e5843008	 str         r3, [r4, #8]
  00024	e5843024	 str         r3, [r4, #0x24]
  00028	eb000000	 bl          LeaveCriticalSection

; 234  : }

  0002c	e8bd4010	 ldmia       sp!, {r4, lr}
  00030	e12fff1e	 bx          lr
  00034		 |$M33755|

			 ENDP  ; |?Initialize@CritSec_Ex@@QAAXXZ|, CritSec_Ex::Initialize

	EXPORT	|?PrepareDeleteCritSec_Ex@CritSec_Ex@@QAAXXZ| ; CritSec_Ex::PrepareDeleteCritSec_Ex
; File c:\wince600\osdesigns\z2170p\z2170p\wince600\z2170p_armv4i\cesysgen\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T33773| DCD	|$LN10@PrepareDel|
	DCD	0x40001401
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\usb\usb2com\sync.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PrepareDeleteCritSec_Ex@CritSec_Ex@@QAAXXZ| PROC ; CritSec_Ex::PrepareDeleteCritSec_Ex

; 237  : {

  00000		 |$LN10@PrepareDel|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M33770|
  00004	e1a05000	 mov         r5, r0

; 238  :     DWORD me = GetCurrentThreadId();

  00008	e3a00008	 mov         r0, #8
  0000c	eb000000	 bl          __GetUserKData

; 239  :     
; 240  :     EnterCriticalSection(&m_cs);

  00010	e1a04000	 mov         r4, r0
  00014	e2850010	 add         r0, r5, #0x10
  00018	eb000000	 bl          EnterCriticalSection

; 241  :     m_fClosing = TRUE;
; 242  :     if (m_hOwnerThread == me) {

  0001c	e5953000	 ldr         r3, [r5]
  00020	e3a02001	 mov         r2, #1

; 243  :         // m_cOwnerReferences is >=1 but the caller had better not Leave after this...
; 244  :         m_hOwnerThread = 0;
; 245  :     }
; 246  :     LeaveCriticalSection(&m_cs);

  00024	e2850010	 add         r0, r5, #0x10
  00028	e1530004	 cmp         r3, r4
  0002c	03a03000	 moveq       r3, #0
  00030	05853000	 streq       r3, [r5]
  00034	e5852024	 str         r2, [r5, #0x24]
  00038	eb000000	 bl          LeaveCriticalSection

; 247  : 
; 248  :     // start waking up threads blocked on this critsec;
; 249  :     // each thread woken this way will set the event again.
; 250  :     SetEvent(m_hev);

  0003c	e595000c	 ldr         r0, [r5, #0xC]
  00040	e3a01003	 mov         r1, #3
  00044	eb000000	 bl          EventModify

; 251  : }

  00048	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$M33771|

			 ENDP  ; |?PrepareDeleteCritSec_Ex@CritSec_Ex@@QAAXXZ|, CritSec_Ex::PrepareDeleteCritSec_Ex

	EXPORT	|??1CritSec_Ex@@QAA@XZ|			; CritSec_Ex::~CritSec_Ex
	IMPORT	|DeleteCriticalSection|
	IMPORT	|CloseHandle|
; File c:\wince600\osdesigns\z2170p\z2170p\wince600\z2170p_armv4i\cesysgen\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T33795| DCD	|$LN17@CritSec_Ex|
	DCD	0x40001b01
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\usb\usb2com\sync.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CritSec_Ex@@QAA@XZ| PROC		; CritSec_Ex::~CritSec_Ex

; 254  : {

  00000		 |$LN17@CritSec_Ex|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M33792|
  00004	e1a04000	 mov         r4, r0

; 255  :     BOOL bDone;
; 256  : 
; 257  :     // In case it wasn't already done:
; 258  :     PrepareDeleteCritSec_Ex();

  00008	eb000000	 bl          |?PrepareDeleteCritSec_Ex@CritSec_Ex@@QAAXXZ|

; 259  : 
; 260  :     EnterCriticalSection(&m_cs);
; 261  :     bDone = m_hOwnerThread == 0 && m_cWaitingThreads == 0;

  0000c	ea000004	 b           |$LN14@CritSec_Ex|
  00010		 |$LL2@CritSec_Ex|

; 262  :     LeaveCriticalSection(&m_cs);
; 263  : 
; 264  :     while (!bDone) {
; 265  :         // force someone to wake up, leaving the event reset
; 266  :         // so that the next statement can actually block.
; 267  :         PulseEvent(m_hev);

  00010	e3a01001	 mov         r1, #1
  00014	eb000000	 bl          EventModify

; 268  : 
; 269  :         // and wait for the next waiting thread to set the event again
; 270  :         // which will happen when they relinquish or when they note the
; 271  :         // m_fClosing flag.
; 272  :         WaitForSingleObject(m_hev, INFINITE);

  00018	e594000c	 ldr         r0, [r4, #0xC]
  0001c	e3e01000	 mvn         r1, #0
  00020	eb000000	 bl          WaitForSingleObject
  00024		 |$LN14@CritSec_Ex|

; 273  : 
; 274  :         EnterCriticalSection(&m_cs);

  00024	e2840010	 add         r0, r4, #0x10
  00028	eb000000	 bl          EnterCriticalSection

; 275  :         bDone = m_hOwnerThread == 0 && m_cWaitingThreads == 0;

  0002c	e5943000	 ldr         r3, [r4]

; 276  :         LeaveCriticalSection(&m_cs);

  00030	e2840010	 add         r0, r4, #0x10
  00034	e3530000	 cmp         r3, #0
  00038	05943008	 ldreq       r3, [r4, #8]
  0003c	03530000	 cmpeq       r3, #0
  00040	03a05001	 moveq       r5, #1
  00044	13a05000	 movne       r5, #0
  00048	eb000000	 bl          LeaveCriticalSection

; 277  :     }
; 278  : 
; 279  :     CloseHandle(m_hev);

  0004c	e594000c	 ldr         r0, [r4, #0xC]
  00050	e3550000	 cmp         r5, #0
  00054	0affffed	 beq         |$LL2@CritSec_Ex|
  00058	eb000000	 bl          CloseHandle

; 280  :     DeleteCriticalSection(&m_cs);

  0005c	e2840010	 add         r0, r4, #0x10
  00060	eb000000	 bl          DeleteCriticalSection

; 281  : }

  00064	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00068	e12fff1e	 bx          lr
  0006c		 |$M33793|

			 ENDP  ; |??1CritSec_Ex@@QAA@XZ|, CritSec_Ex::~CritSec_Ex

	EXPORT	|??0Countdown@@QAA@K@Z|			; Countdown::Countdown
	IMPORT	|InitializeCriticalSection|
	IMPORT	|CreateEventW|

  00000			 AREA	 |.pdata|, PDATA
|$T33808| DCD	|$LN7@Countdown|
	DCD	0x40001301
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0Countdown@@QAA@K@Z| PROC		; Countdown::Countdown

; 285  : {

  00000		 |$LN7@Countdown|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M33805|
  00004	e3510000	 cmp         r1, #0
  00008	e1a04000	 mov         r4, r0

; 286  :     count = cInitial;

  0000c	e584101c	 str         r1, [r4, #0x1C]

; 287  :     hev = CreateEvent(NULL, TRUE, cInitial ? FALSE : TRUE, NULL);

  00010	13a02000	 movne       r2, #0
  00014	03a02001	 moveq       r2, #1
  00018	e3a01001	 mov         r1, #1
  0001c	e3a03000	 mov         r3, #0
  00020	e3a00000	 mov         r0, #0
  00024	eb000000	 bl          CreateEventW
  00028	e1a03000	 mov         r3, r0

; 288  :     InitializeCriticalSection(&cs);

  0002c	e1a00004	 mov         r0, r4
  00030	e5843014	 str         r3, [r4, #0x14]
  00034	eb000000	 bl          InitializeCriticalSection

; 289  :     lock = FALSE;

  00038	e3a03000	 mov         r3, #0
  0003c	e5843018	 str         r3, [r4, #0x18]

; 290  : }

  00040	e1a00004	 mov         r0, r4
  00044	e8bd4010	 ldmia       sp!, {r4, lr}
  00048	e12fff1e	 bx          lr
  0004c		 |$M33806|

			 ENDP  ; |??0Countdown@@QAA@K@Z|, Countdown::Countdown

	EXPORT	|?IncrCountdown@Countdown@@QAAHXZ|	; Countdown::IncrCountdown
; File c:\wince600\osdesigns\z2170p\z2170p\wince600\z2170p_armv4i\cesysgen\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T33823| DCD	|$LN10@IncrCountd|
	DCD	0x40001401
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\usb\usb2com\sync.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IncrCountdown@Countdown@@QAAHXZ| PROC ; Countdown::IncrCountdown

; 293  : {

  00000		 |$LN10@IncrCountd|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M33820|
  00004	e1a04000	 mov         r4, r0

; 294  :     BOOL r = TRUE;
; 295  : 
; 296  :     EnterCriticalSection(&cs);

  00008	e3a05001	 mov         r5, #1
  0000c	eb000000	 bl          EnterCriticalSection

; 297  :     if (lock)

  00010	e5943018	 ldr         r3, [r4, #0x18]
  00014	e3530000	 cmp         r3, #0

; 298  :         r = FALSE;

  00018	13a05000	 movne       r5, #0
  0001c	1a000006	 bne         |$LN6@IncrCountd|

; 299  :     else
; 300  :         if (count++ == 0)

  00020	e594301c	 ldr         r3, [r4, #0x1C]
  00024	e3530000	 cmp         r3, #0

; 301  :             ResetEvent(hev);

  00028	05940014	 ldreq       r0, [r4, #0x14]
  0002c	e2833001	 add         r3, r3, #1
  00030	03a01002	 moveq       r1, #2
  00034	e584301c	 str         r3, [r4, #0x1C]
  00038	0b000000	 bleq        EventModify
  0003c		 |$LN6@IncrCountd|

; 302  :     LeaveCriticalSection(&cs);

  0003c	e1a00004	 mov         r0, r4
  00040	eb000000	 bl          LeaveCriticalSection

; 303  : 
; 304  :     return r;
; 305  : }

  00044	e1a00005	 mov         r0, r5
  00048	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$M33821|

			 ENDP  ; |?IncrCountdown@Countdown@@QAAHXZ|, Countdown::IncrCountdown

	EXPORT	|?DecrCountdown@Countdown@@QAAXXZ|	; Countdown::DecrCountdown
; File c:\wince600\osdesigns\z2170p\z2170p\wince600\z2170p_armv4i\cesysgen\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T33835| DCD	|$LN8@DecrCountd@2|
	DCD	0x40000d01
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\usb\usb2com\sync.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DecrCountdown@Countdown@@QAAXXZ| PROC ; Countdown::DecrCountdown

; 308  : {

  00000		 |$LN8@DecrCountd@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M33832|
  00004	e1a04000	 mov         r4, r0

; 309  :     EnterCriticalSection(&cs);

  00008	eb000000	 bl          EnterCriticalSection

; 310  :     ASSERT(count > 0);
; 311  :     if (--count == 0)

  0000c	e594301c	 ldr         r3, [r4, #0x1C]
  00010	e2533001	 subs        r3, r3, #1

; 312  :         SetEvent(hev);

  00014	05940014	 ldreq       r0, [r4, #0x14]
  00018	03a01003	 moveq       r1, #3
  0001c	e584301c	 str         r3, [r4, #0x1C]
  00020	0b000000	 bleq        EventModify

; 313  :     LeaveCriticalSection(&cs);

  00024	e1a00004	 mov         r0, r4
  00028	eb000000	 bl          LeaveCriticalSection

; 314  : }

  0002c	e8bd4010	 ldmia       sp!, {r4, lr}
  00030	e12fff1e	 bx          lr
  00034		 |$M33833|

			 ENDP  ; |?DecrCountdown@Countdown@@QAAXXZ|, Countdown::DecrCountdown

	EXPORT	|?LockCountdown@Countdown@@AAAXXZ|	; Countdown::LockCountdown

  00000			 AREA	 |.pdata|, PDATA
|$T33843| DCD	|$LN5@LockCountd|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?LockCountdown@Countdown@@AAAXXZ| PROC ; Countdown::LockCountdown

; 317  : {

  00000		 |$LN5@LockCountd|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M33840|
  00004	e1a04000	 mov         r4, r0

; 318  :     EnterCriticalSection(&cs);

  00008	eb000000	 bl          EnterCriticalSection

; 319  :     lock = TRUE;

  0000c	e3a03001	 mov         r3, #1

; 320  :     LeaveCriticalSection(&cs);

  00010	e1a00004	 mov         r0, r4
  00014	e5843018	 str         r3, [r4, #0x18]
  00018	eb000000	 bl          LeaveCriticalSection

; 321  : }

  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$M33841|

			 ENDP  ; |?LockCountdown@Countdown@@AAAXXZ|, Countdown::LockCountdown

	EXPORT	|?WaitForCountdown@Countdown@@QAAXH@Z|	; Countdown::WaitForCountdown

  00000			 AREA	 |.pdata|, PDATA
|$T33855| DCD	|$LN7@WaitForCou|
	DCD	0x40000e01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?WaitForCountdown@Countdown@@QAAXH@Z| PROC ; Countdown::WaitForCountdown

; 325  : {

  00000		 |$LN7@WaitForCou|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M33852|
  00004	e1a05001	 mov         r5, r1
  00008	e1a04000	 mov         r4, r0

; 326  :     LockCountdown();

  0000c	eb000000	 bl          EnterCriticalSection
  00010	e3a03001	 mov         r3, #1
  00014	e1a00004	 mov         r0, r4
  00018	e5843018	 str         r3, [r4, #0x18]
  0001c	eb000000	 bl          LeaveCriticalSection

; 327  :     
; 328  :     WaitForSingleObject(hev, INFINITE);

  00020	e5940014	 ldr         r0, [r4, #0x14]
  00024	e3e01000	 mvn         r1, #0
  00028	eb000000	 bl          WaitForSingleObject

; 329  :     ASSERT(count == 0);
; 330  : 
; 331  :     lock = keepLocked;

  0002c	e5845018	 str         r5, [r4, #0x18]

; 332  : }

  00030	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M33853|

			 ENDP  ; |?WaitForCountdown@Countdown@@QAAXH@Z|, Countdown::WaitForCountdown

	EXPORT	|??1Countdown@@QAA@XZ|			; Countdown::~Countdown

  00000			 AREA	 |.pdata|, PDATA
|$T33863| DCD	|$LN5@Countdown@2|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1Countdown@@QAA@XZ| PROC		; Countdown::~Countdown

; 335  : {

  00000		 |$LN5@Countdown@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M33860|
  00004	e1a04000	 mov         r4, r0

; 336  :     WaitForCountdown( TRUE);

  00008	e3a01001	 mov         r1, #1
  0000c	eb000000	 bl          |?WaitForCountdown@Countdown@@QAAXH@Z|

; 337  : 
; 338  :     CloseHandle(hev);

  00010	e5940014	 ldr         r0, [r4, #0x14]
  00014	eb000000	 bl          CloseHandle

; 339  :     DeleteCriticalSection(&cs);

  00018	e1a00004	 mov         r0, r4
  0001c	eb000000	 bl          DeleteCriticalSection

; 340  : }

  00020	e8bd4010	 ldmia       sp!, {r4, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M33861|

			 ENDP  ; |??1Countdown@@QAA@XZ|, Countdown::~Countdown

	EXPORT	|??0CritSec_Ex@@QAA@XZ|			; CritSec_Ex::CritSec_Ex
	IMPORT	|RaiseException|

  00000			 AREA	 |.pdata|, PDATA
|$T33873| DCD	|$LN6@CritSec_Ex@2|
	DCD	0x40001501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CritSec_Ex@@QAA@XZ| PROC		; CritSec_Ex::CritSec_Ex

; 217  : {

  00000		 |$LN6@CritSec_Ex@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M33870|
  00004	e1a04000	 mov         r4, r0

; 218  :     m_hev = CreateEvent(NULL, FALSE, TRUE, 0);   // initially set!

  00008	e3a03000	 mov         r3, #0
  0000c	e3a02001	 mov         r2, #1
  00010	e3a01000	 mov         r1, #0
  00014	e3a00000	 mov         r0, #0
  00018	eb000000	 bl          CreateEventW
  0001c	e3500000	 cmp         r0, #0
  00020	e584000c	 str         r0, [r4, #0xC]

; 219  :     if (m_hev == NULL) {
; 220  :         // simulate InitializeCriticalSection - see docs
; 221  :         RaiseException(STATUS_NO_MEMORY, 0, 0, NULL);

  00024	03a03000	 moveq       r3, #0
  00028	03a02000	 moveq       r2, #0
  0002c	03a01000	 moveq       r1, #0
  00030	03a0015f	 moveq       r0, #0x5F, 2
  00034	0b000000	 bleq        RaiseException

; 222  :     }
; 223  :     InitializeCriticalSection(&m_cs);

  00038	e2840010	 add         r0, r4, #0x10
  0003c	eb000000	 bl          InitializeCriticalSection

; 224  :     Initialize();

  00040	e1a00004	 mov         r0, r4
  00044	eb000000	 bl          |?Initialize@CritSec_Ex@@QAAXXZ|

; 225  : }

  00048	e1a00004	 mov         r0, r4
  0004c	e8bd4010	 ldmia       sp!, {r4, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$M33871|

			 ENDP  ; |??0CritSec_Ex@@QAA@XZ|, CritSec_Ex::CritSec_Ex

	END
