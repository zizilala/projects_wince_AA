; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\USB\USB2COM\hcddrv.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|?g_CSection@@3UCRITICAL_SECTION@@A| [ DATA ] ; g_CSection
	EXPORT	|g_IstThreadPriority| [ DATA ]
	EXPORT	|g_dwContext| [ DATA ]
	EXPORT	|?gc_HcdFuncs@@3U_HCD_FUNCS@@A| [ DATA ] ; gc_HcdFuncs

  00000			 AREA	 |.bss|, NOINIT
|?g_CSection@@3UCRITICAL_SECTION@@A| % 0x14		; g_CSection
|g_IstThreadPriority| % 0x4
|g_dwContext| %	0x4

  00000			 AREA	 |.data|, DATA
|?gc_HcdFuncs@@3U_HCD_FUNCS@@A| DCD 0x34		; gc_HcdFuncs
	DCD	|HcdGetFrameNumber|
	DCD	|HcdGetFrameLength|
	DCD	|HcdSetFrameLength|
	DCD	|HcdStopAdjustingFrame|
	DCD	|HcdOpenPipe|
	DCD	|HcdClosePipe|
	DCD	|HcdResetPipe|
	DCD	|HcdIsPipeHalted|
	DCD	|HcdIssueTransfer|
	DCD	|HcdAbortTransfer|
	DCD	|HcdDisableDevice|
	DCD	|HcdSuspendResume|
	EXPORT	|?InittedOK@CPhysMem@@QAAHXZ|		; CPhysMem::InittedOK
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\usb\usb2com\cphysmem.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T35075| DCD	|$LN5@InittedOK|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InittedOK@CPhysMem@@QAAHXZ| PROC	; CPhysMem::InittedOK

; 128  :     InittedOK() { return m_fInitted; };

  00000		 |$LN5@InittedOK|
  00000		 |$M35072|
  00000	e5900024	 ldr         r0, [r0, #0x24]
  00004	e12fff1e	 bx          lr
  00008		 |$M35073|

			 ENDP  ; |?InittedOK@CPhysMem@@QAAHXZ|, CPhysMem::InittedOK

	EXPORT	|DllMain|
	IMPORT	|HcdPdd_DllMain|
	IMPORT	|DeleteCriticalSection|
	IMPORT	|InitializeCriticalSection|
	IMPORT	|DisableThreadLibraryCalls|
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\usb\usb2com\hcddrv.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T35087| DCD	|$LN8@DllMain|
	DCD	0x40001701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DllMain| PROC

; 103  : {

  00000		 |$LN8@DllMain|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M35084|
  00004	e1a06002	 mov         r6, r2
  00008	e1a04001	 mov         r4, r1
  0000c	e1a05000	 mov         r5, r0

; 104  :     if ( dwReason == DLL_PROCESS_ATTACH ) {

  00010	e3540001	 cmp         r4, #1
  00014	1a000006	 bne         |$LN3@DllMain|

; 105  :         DEBUGREGISTER((HINSTANCE)hinstDLL);
; 106  :         DEBUGMSG (ZONE_INIT,(TEXT("HCD driver DLL attach\r\n")));
; 107  :         DisableThreadLibraryCalls((HMODULE) hinstDLL);

  00018	eb000000	 bl          DisableThreadLibraryCalls

; 108  :         g_dwContext = 0;

  0001c	e59f3034	 ldr         r3, [pc, #0x34]
  00020	e3a02000	 mov         r2, #0

; 109  :         InitializeCriticalSection( &g_CSection );

  00024	e1a00003	 mov         r0, r3
  00028	e5832014	 str         r2, [r3, #0x14]
  0002c	eb000000	 bl          InitializeCriticalSection
  00030	ea000002	 b           |$LN1@DllMain|
  00034		 |$LN3@DllMain|

; 110  :     }
; 111  :     else if (dwReason == DLL_PROCESS_DETACH) {

  00034	e3540000	 cmp         r4, #0

; 112  :         DeleteCriticalSection( &g_CSection );

  00038	059f0018	 ldreq       r0, [pc, #0x18]
  0003c	0b000000	 bleq        DeleteCriticalSection
  00040		 |$LN1@DllMain|

; 113  :     }
; 114  :     return HcdPdd_DllMain(hinstDLL, dwReason, lpvReserved);

  00040	e1a02006	 mov         r2, r6
  00044	e1a01004	 mov         r1, r4
  00048	e1a00005	 mov         r0, r5
  0004c	eb000000	 bl          HcdPdd_DllMain

; 115  : }

  00050	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$LN9@DllMain|
  00058		 |$LN10@DllMain|
  00058	00000000	 DCD         |?g_CSection@@3UCRITICAL_SECTION@@A|
  0005c		 |$M35085|

			 ENDP  ; |DllMain|


  00000			 AREA	 |.pdata|, PDATA
|$T35100| DCD	|$LN5@HcdGetFram|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HcdGetFrameNumber| PROC

; 119  : {

  00000		 |$LN5@HcdGetFram|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35097|

; 120  :     CHcd * const pHcd = (CHcd *)lpvHcd;
; 121  :     return pHcd->GetFrameNumber(lpdwFrameNumber);

  00004	e5903000	 ldr         r3, [r0]
  00008	e5933014	 ldr         r3, [r3, #0x14]
  0000c	e1a0e00f	 mov         lr, pc
  00010	e12fff13	 bx          r3

; 122  : }

  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M35098|

			 ENDP  ; |HcdGetFrameNumber|


  00000			 AREA	 |.pdata|, PDATA
|$T35111| DCD	|$LN5@HcdGetFram@2|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HcdGetFrameLength| PROC

; 125  : {

  00000		 |$LN5@HcdGetFram@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35108|

; 126  :     CHcd * const pHcd = (CHcd *)lpvHcd;
; 127  :     return pHcd->GetFrameLength(lpuFrameLength);

  00004	e5903000	 ldr         r3, [r0]
  00008	e5933018	 ldr         r3, [r3, #0x18]
  0000c	e1a0e00f	 mov         lr, pc
  00010	e12fff13	 bx          r3

; 128  : }

  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M35109|

			 ENDP  ; |HcdGetFrameLength|


  00000			 AREA	 |.pdata|, PDATA
|$T35123| DCD	|$LN5@HcdSetFram|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HcdSetFrameLength| PROC

; 131  : {

  00000		 |$LN5@HcdSetFram|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35120|

; 132  :     CHcd * const pHcd = (CHcd *)lpvHcd;
; 133  :     return pHcd->SetFrameLength(hEvent, uFrameLength);

  00004	e5903000	 ldr         r3, [r0]
  00008	e593301c	 ldr         r3, [r3, #0x1C]
  0000c	e1a0e00f	 mov         lr, pc
  00010	e12fff13	 bx          r3

; 134  : }

  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M35121|

			 ENDP  ; |HcdSetFrameLength|


  00000			 AREA	 |.pdata|, PDATA
|$T35133| DCD	|$LN5@HcdStopAdj|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HcdStopAdjustingFrame| PROC

; 137  : {

  00000		 |$LN5@HcdStopAdj|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35130|

; 138  :     CHcd * const pHcd = (CHcd *)lpvHcd;
; 139  :     return pHcd->StopAdjustingFrame();

  00004	e5903000	 ldr         r3, [r0]
  00008	e5933020	 ldr         r3, [r3, #0x20]
  0000c	e1a0e00f	 mov         lr, pc
  00010	e12fff13	 bx          r3

; 140  : }

  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M35131|

			 ENDP  ; |HcdStopAdjustingFrame|

	IMPORT	|?OpenPipe@CHcd@@QAAHIPBU_USB_ENDPOINT_DESCRIPTOR@@PAI@Z| ; CHcd::OpenPipe

  00000			 AREA	 |.pdata|, PDATA
|$T35146| DCD	|$LN5@HcdOpenPip|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HcdOpenPipe| PROC

; 145  : {

  00000		 |$LN5@HcdOpenPip|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35143|

; 146  :     CHcd * const pHcd = (CHcd *)lpvHcd;
; 147  :     return pHcd->OpenPipe(iDevice, lpEndpointDescriptor, lpiEndpointIndex);

  00004	eb000000	 bl          |?OpenPipe@CHcd@@QAAHIPBU_USB_ENDPOINT_DESCRIPTOR@@PAI@Z|

; 148  : }

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M35144|

			 ENDP  ; |HcdOpenPipe|

	IMPORT	|?ClosePipe@CHcd@@QAAHII@Z|		; CHcd::ClosePipe

  00000			 AREA	 |.pdata|, PDATA
|$T35158| DCD	|$LN5@HcdClosePi|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HcdClosePipe| PROC

; 151  : {

  00000		 |$LN5@HcdClosePi|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35155|

; 152  :     CHcd * const pHcd = (CHcd *)lpvHcd;
; 153  :     return pHcd->ClosePipe(iDevice, iEndpointIndex);

  00004	eb000000	 bl          |?ClosePipe@CHcd@@QAAHII@Z|

; 154  : }

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M35156|

			 ENDP  ; |HcdClosePipe|

	IMPORT	|?ResetPipe@CHcd@@QAAHII@Z|		; CHcd::ResetPipe

  00000			 AREA	 |.pdata|, PDATA
|$T35170| DCD	|$LN5@HcdResetPi|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HcdResetPipe| PROC

; 157  : {

  00000		 |$LN5@HcdResetPi|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35167|

; 158  :     CHcd * const pHcd = (CHcd *)lpvHcd;
; 159  :     return pHcd->ResetPipe(iDevice, iEndpointIndex);

  00004	eb000000	 bl          |?ResetPipe@CHcd@@QAAHII@Z|

; 160  : }

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M35168|

			 ENDP  ; |HcdResetPipe|

	IMPORT	|?IsPipeHalted@CHcd@@QAAHIIPAH@Z|	; CHcd::IsPipeHalted

  00000			 AREA	 |.pdata|, PDATA
|$T35183| DCD	|$LN5@HcdIsPipeH|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HcdIsPipeHalted| PROC

; 163  : {

  00000		 |$LN5@HcdIsPipeH|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35180|

; 164  :     CHcd * const pHcd = (CHcd *)lpvHcd;
; 165  :     return pHcd->IsPipeHalted(iDevice, iEndpointIndex, lpbHalted);

  00004	eb000000	 bl          |?IsPipeHalted@CHcd@@QAAHIIPAH@Z|

; 166  : }

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M35181|

			 ENDP  ; |HcdIsPipeHalted|

	IMPORT	|?IssueTransfer@CHcd@@QAAHIIP6AKPAX@Z0KPBXKKPBKK0K2PAK4PAH44@Z| ; CHcd::IssueTransfer

  00000			 AREA	 |.pdata|, PDATA
|$T35196| DCD	|$LN5@HcdIssueTr|
	DCD	0x40002c02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HcdIssueTransfer| PROC

; 175  : {

  00000		 |$LN5@HcdIssueTr|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd04c	 sub         sp, sp, #0x4C
  00008		 |$M35193|
  00008	e58d303c	 str         r3, [sp, #0x3C]
  0000c	e58d2040	 str         r2, [sp, #0x40]
  00010	e58d1044	 str         r1, [sp, #0x44]
  00014	e58d0048	 str         r0, [sp, #0x48]

; 176  :     CHcd * const pHcd = (CHcd *)lpvHcd;
; 177  :     return pHcd->IssueTransfer(iDevice, iEndpointIndex, lpStartAddress,
; 178  :             lpParameter, dwFlags, lpvControlHeader, dwStartingFrame, dwFrames,
; 179  :             aLengths, dwBufferSize, lpvBuffer, paBuffer, lpvCancelId,
; 180  :             adwIsochErrors, adwIsochLengths,lpfComplete, lpdwBytesTransfered,
; 181  :             lpdwError);

  00018	e59d3084	 ldr         r3, [sp, #0x84]
  0001c	e59d2080	 ldr         r2, [sp, #0x80]
  00020	e59d107c	 ldr         r1, [sp, #0x7C]
  00024	e58d3014	 str         r3, [sp, #0x14]
  00028	e59d3074	 ldr         r3, [sp, #0x74]
  0002c	e59d0078	 ldr         r0, [sp, #0x78]
  00030	e59d40a4	 ldr         r4, [sp, #0xA4]
  00034	e58d3004	 str         r3, [sp, #4]
  00038	e59d3070	 ldr         r3, [sp, #0x70]
  0003c	e59d50a0	 ldr         r5, [sp, #0xA0]
  00040	e59d609c	 ldr         r6, [sp, #0x9C]
  00044	e59d7098	 ldr         r7, [sp, #0x98]
  00048	e59d8094	 ldr         r8, [sp, #0x94]
  0004c	e59d9090	 ldr         r9, [sp, #0x90]
  00050	e59da08c	 ldr         r10, [sp, #0x8C]
  00054	e59db088	 ldr         r11, [sp, #0x88]
  00058	e59de0a8	 ldr         lr, [sp, #0xA8]
  0005c	e58d3000	 str         r3, [sp]
  00060	e59d303c	 ldr         r3, [sp, #0x3C]
  00064	e58d2010	 str         r2, [sp, #0x10]
  00068	e59d2040	 ldr         r2, [sp, #0x40]
  0006c	e58d100c	 str         r1, [sp, #0xC]
  00070	e59d1044	 ldr         r1, [sp, #0x44]
  00074	e58d0008	 str         r0, [sp, #8]
  00078	e59d0048	 ldr         r0, [sp, #0x48]
  0007c	e58de038	 str         lr, [sp, #0x38]
  00080	e58d4034	 str         r4, [sp, #0x34]
  00084	e58d5030	 str         r5, [sp, #0x30]
  00088	e58d602c	 str         r6, [sp, #0x2C]
  0008c	e58d7028	 str         r7, [sp, #0x28]
  00090	e58d8024	 str         r8, [sp, #0x24]
  00094	e58d9020	 str         r9, [sp, #0x20]
  00098	e58da01c	 str         r10, [sp, #0x1C]
  0009c	e58db018	 str         r11, [sp, #0x18]
  000a0	eb000000	 bl          |?IssueTransfer@CHcd@@QAAHIIP6AKPAX@Z0KPBXKKPBKK0K2PAK4PAH44@Z|

; 182  : }

  000a4	e28dd04c	 add         sp, sp, #0x4C
  000a8	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  000ac	e12fff1e	 bx          lr
  000b0		 |$M35194|

			 ENDP  ; |HcdIssueTransfer|

	IMPORT	|?AbortTransfer@CHcd@@QAAHIIP6AKPAX@Z0PBX@Z| ; CHcd::AbortTransfer

  00000			 AREA	 |.pdata|, PDATA
|$T35209| DCD	|$LN5@HcdAbortTr|
	DCD	0x40000a02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HcdAbortTransfer| PROC

; 187  : {

  00000		 |$LN5@HcdAbortTr|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M35206|

; 188  :     CHcd * const pHcd = (CHcd *)lpvHcd;
; 189  :     return pHcd->AbortTransfer(iDevice, iEndpointIndex, lpStartAddress,
; 190  :             lpParameter, lpvCancelId);

  00008	e59de014	 ldr         lr, [sp, #0x14]
  0000c	e59d4010	 ldr         r4, [sp, #0x10]
  00010	e58de004	 str         lr, [sp, #4]
  00014	e58d4000	 str         r4, [sp]
  00018	eb000000	 bl          |?AbortTransfer@CHcd@@QAAHIIP6AKPAX@Z0PBX@Z|

; 191  : }

  0001c	e28dd008	 add         sp, sp, #8
  00020	e8bd4010	 ldmia       sp!, {r4, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M35207|

			 ENDP  ; |HcdAbortTransfer|


  00000			 AREA	 |.pdata|, PDATA
|$T35221| DCD	|$LN5@HcdDisable|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HcdDisableDevice| PROC

; 193  : {

  00000		 |$LN5@HcdDisable|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35218|

; 194  :     CHcd * const pHcd = (CHcd *)lpvHcd;
; 195  :     return pHcd->DisableDevice(iDevice,fReset);

  00004	e5903000	 ldr         r3, [r0]
  00008	e5933028	 ldr         r3, [r3, #0x28]
  0000c	e1a0e00f	 mov         lr, pc
  00010	e12fff13	 bx          r3

; 196  : }

  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M35219|

			 ENDP  ; |HcdDisableDevice|


  00000			 AREA	 |.pdata|, PDATA
|$T35233| DCD	|$LN5@HcdSuspend|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HcdSuspendResume| PROC

; 199  : {

  00000		 |$LN5@HcdSuspend|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35230|

; 200  :     CHcd * const pHcd = (CHcd *)lpvHcd;
; 201  :     return pHcd->SuspendResume(iDevice, fSuspend);

  00004	e5903000	 ldr         r3, [r0]
  00008	e593302c	 ldr         r3, [r3, #0x2C]
  0000c	e1a0e00f	 mov         lr, pc
  00010	e12fff13	 bx          r3

; 202  : }

  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M35231|

			 ENDP  ; |HcdSuspendResume|

	EXPORT	|??_C@_1BI@BHLBGEOK@?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|RegCloseKey|
	IMPORT	|RegQueryValueExW|
	IMPORT	|OpenDeviceKey|

  00000			 AREA	 |.pdata|, PDATA
|$T35244| DCD	|$LN6@GetInterru|
	DCD	0x40001902

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@BHLBGEOK@?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@| DCB "P"
	DCB	0x0, "r", 0x0, "i", 0x0, "o", 0x0, "r", 0x0, "i", 0x0, "t"
	DCB	0x0, "y", 0x0, "2", 0x0, "5", 0x0, "6", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetInterruptThreadPriority@@YAKPAG@Z| PROC ; GetInterruptThreadPriority

; 214  : {

  00000		 |$LN6@GetInterru|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd014	 sub         sp, sp, #0x14
  00008		 |$M35241|

; 215  :     HKEY hDevKey;
; 216  :     DWORD dwValType;
; 217  :     DWORD dwValLen;
; 218  :     DWORD dwPrio;
; 219  : 
; 220  :     dwPrio = DEFAULT_UHCD_IST_PRIORITY;

  00008	e3a03065	 mov         r3, #0x65
  0000c	e58d3008	 str         r3, [sp, #8]

; 221  : 
; 222  :     hDevKey = OpenDeviceKey(lpszActiveKey);

  00010	eb000000	 bl          OpenDeviceKey
  00014	e1b05000	 movs        r5, r0

; 223  :     if (hDevKey) {

  00018	0a00000c	 beq         |$LN1@GetInterru|

; 224  :         dwValLen = sizeof(DWORD);
; 225  :         RegQueryValueEx(
; 226  :             hDevKey,
; 227  :             TEXT("Priority256"),
; 228  :             NULL,
; 229  :             &dwValType,
; 230  :             (PUCHAR)&dwPrio,
; 231  :             &dwValLen);

  0001c	e59f103c	 ldr         r1, [pc, #0x3C]
  00020	e3a06004	 mov         r6, #4
  00024	e28de00c	 add         lr, sp, #0xC
  00028	e28d4008	 add         r4, sp, #8
  0002c	e28d3010	 add         r3, sp, #0x10
  00030	e3a02000	 mov         r2, #0
  00034	e1a00005	 mov         r0, r5
  00038	e58d600c	 str         r6, [sp, #0xC]
  0003c	e58de004	 str         lr, [sp, #4]
  00040	e58d4000	 str         r4, [sp]
  00044	eb000000	 bl          RegQueryValueExW

; 232  :         RegCloseKey(hDevKey);

  00048	e1a00005	 mov         r0, r5
  0004c	eb000000	 bl          RegCloseKey
  00050		 |$LN1@GetInterru|

; 233  :     }
; 234  :     return dwPrio;

  00050	e59d0008	 ldr         r0, [sp, #8]

; 235  : }

  00054	e28dd014	 add         sp, sp, #0x14
  00058	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0005c	e12fff1e	 bx          lr
  00060		 |$LN7@GetInterru|
  00060		 |$LN8@GetInterru|
  00060	00000000	 DCD         |??_C@_1BI@BHLBGEOK@?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@|
  00064		 |$M35242|

			 ENDP  ; |?GetInterruptThreadPriority@@YAKPAG@Z|, GetInterruptThreadPriority

	EXPORT	|??_GCPhysMem@@QAAPAXI@Z|		; CPhysMem::`scalar deleting destructor'
	IMPORT	|??3@YAXPAX@Z|				; operator delete
	IMPORT	|??1CPhysMem@@QAA@XZ|			; CPhysMem::~CPhysMem

  00000			 AREA	 |.pdata|, PDATA
|$T35257| DCD	|$LN6@scalar|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GCPhysMem@@QAAPAXI@Z| PROC		; CPhysMem::`scalar deleting destructor'
  00000		 |$LN6@scalar|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M35254|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0
  0000c	eb000000	 bl          |??1CPhysMem@@QAA@XZ|
  00010	e3140001	 tst         r4, #1
  00014	11a00005	 movne       r0, r5
  00018	1b000000	 blne        |??3@YAXPAX@Z|
  0001c	e1a00005	 mov         r0, r5
  00020	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M35255|

			 ENDP  ; |??_GCPhysMem@@QAAPAXI@Z|, CPhysMem::`scalar deleting destructor'

	EXPORT	|HcdMdd_CreateHcdObject|
	IMPORT	|?CreateHCDObject@@YAPAVCHcd@@PAXPAVCPhysMem@@PBGRAEK@Z| ; CreateHCDObject

  00000			 AREA	 |.pdata|, PDATA
|$T35275| DCD	|$LN9@HcdMdd_Cre|
	DCD	0x40001902
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HcdMdd_CreateHcdObject| PROC

; 260  : {

  00000		 |$LN9@HcdMdd_Cre|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M35272|

; 261  :     CHcd * pobUhcd = CreateHCDObject(lpvUhcdPddObject,(CPhysMem *)lpvMemoryObject,szRegKey,ioPortBase,dwSysIntr);

  00008	e59de00c	 ldr         lr, [sp, #0xC]
  0000c	e58de000	 str         lr, [sp]
  00010	eb000000	 bl          |?CreateHCDObject@@YAPAVCHcd@@PAXPAVCPhysMem@@PBGRAEK@Z|
  00014	e1b04000	 movs        r4, r0

; 262  :     
; 263  :     if ( pobUhcd != NULL ) {

  00018	0a00000d	 beq         |$LN1@HcdMdd_Cre|

; 264  :         if ( !pobUhcd->DeviceInitialize( )) {

  0001c	e5943000	 ldr         r3, [r4]
  00020	e1a00004	 mov         r0, r4
  00024	e593300c	 ldr         r3, [r3, #0xC]
  00028	e1a0e00f	 mov         lr, pc
  0002c	e12fff13	 bx          r3
  00030	e3500000	 cmp         r0, #0
  00034	1a000006	 bne         |$LN1@HcdMdd_Cre|

; 265  :             delete pobUhcd;

  00038	e5943000	 ldr         r3, [r4]
  0003c	e3a01001	 mov         r1, #1
  00040	e1a00004	 mov         r0, r4
  00044	e5933008	 ldr         r3, [r3, #8]
  00048	e1a0e00f	 mov         lr, pc
  0004c	e12fff13	 bx          r3

; 266  :             pobUhcd = NULL;

  00050	e3a04000	 mov         r4, #0
  00054		 |$LN1@HcdMdd_Cre|

; 267  :         }
; 268  :     }
; 269  : 
; 270  :     return pobUhcd;
; 271  : }

  00054	e1a00004	 mov         r0, r4
  00058	e28dd004	 add         sp, sp, #4
  0005c	e8bd4010	 ldmia       sp!, {r4, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$M35273|

			 ENDP  ; |HcdMdd_CreateHcdObject|

	EXPORT	|HcdMdd_DestroyHcdObject|

  00000			 AREA	 |.pdata|, PDATA
|$T35289| DCD	|$LN7@HcdMdd_Des|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HcdMdd_DestroyHcdObject| PROC

; 274  : {

  00000		 |$LN7@HcdMdd_Des|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35286|
  00004	e3500000	 cmp         r0, #0

; 275  :     CHcd * pobUhcd = (CHcd *)lpvUhcdObject;
; 276  :     delete pobUhcd;

  00008	15903000	 ldrne       r3, [r0]
  0000c	13a01001	 movne       r1, #1
  00010	15933008	 ldrne       r3, [r3, #8]
  00014	11a0e00f	 movne       lr, pc
  00018	112fff13	 bxne        r3

; 277  : 
; 278  :     return TRUE;

  0001c	e3a00001	 mov         r0, #1

; 279  : }

  00020	e49de004	 ldr         lr, [sp], #4
  00024	e12fff1e	 bx          lr
  00028		 |$M35287|

			 ENDP  ; |HcdMdd_DestroyHcdObject|

	EXPORT	|HcdMdd_DestroyMemoryObject|

  00000			 AREA	 |.pdata|, PDATA
|$T35307| DCD	|$LN10@HcdMdd_Des@2|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HcdMdd_DestroyMemoryObject| PROC

; 282  : {

  00000		 |$LN10@HcdMdd_Des@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M35304|
  00004	e1b04000	 movs        r4, r0

; 283  :     CPhysMem * pobMem = (CPhysMem *)lpvMemoryObject;
; 284  :     delete pobMem;

  00008	0a000003	 beq         |$LN3@HcdMdd_Des@2|
  0000c	e1a00004	 mov         r0, r4
  00010	eb000000	 bl          |??1CPhysMem@@QAA@XZ|
  00014	e1a00004	 mov         r0, r4
  00018	eb000000	 bl          |??3@YAXPAX@Z|
  0001c		 |$LN3@HcdMdd_Des@2|

; 285  : 
; 286  :     return TRUE;

  0001c	e3a00001	 mov         r0, #1

; 287  : }

  00020	e8bd4010	 ldmia       sp!, {r4, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M35305|

			 ENDP  ; |HcdMdd_DestroyMemoryObject|

	EXPORT	|HcdMdd_PowerUp|

  00000			 AREA	 |.pdata|, PDATA
|$T35317| DCD	|$LN5@HcdMdd_Pow|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HcdMdd_PowerUp| PROC

; 290  : {

  00000		 |$LN5@HcdMdd_Pow|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35314|

; 291  :     CHcd * pobUhcd = (CHcd *)lpvUhcdObject;
; 292  :     pobUhcd->PowerMgmtCallback(FALSE);

  00004	e5903000	 ldr         r3, [r0]
  00008	e3a01000	 mov         r1, #0
  0000c	e5933024	 ldr         r3, [r3, #0x24]
  00010	e1a0e00f	 mov         lr, pc
  00014	e12fff13	 bx          r3

; 293  : 
; 294  :     return TRUE;

  00018	e3a00001	 mov         r0, #1

; 295  : }

  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M35315|

			 ENDP  ; |HcdMdd_PowerUp|

	EXPORT	|HcdMdd_PowerDown|

  00000			 AREA	 |.pdata|, PDATA
|$T35327| DCD	|$LN5@HcdMdd_Pow@2|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HcdMdd_PowerDown| PROC

; 298  : {

  00000		 |$LN5@HcdMdd_Pow@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35324|

; 299  :     CHcd * pobUhcd = (CHcd *)lpvUhcdObject;
; 300  :     pobUhcd->PowerMgmtCallback(TRUE);

  00004	e5903000	 ldr         r3, [r0]
  00008	e3a01001	 mov         r1, #1
  0000c	e5933024	 ldr         r3, [r3, #0x24]
  00010	e1a0e00f	 mov         lr, pc
  00014	e12fff13	 bx          r3

; 301  : 
; 302  :     return TRUE;

  00018	e3a00001	 mov         r0, #1

; 303  : }

  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M35325|

			 ENDP  ; |HcdMdd_PowerDown|

	EXPORT	|HcdMdd_SetCapability|

  00000			 AREA	 |.pdata|, PDATA
|$T35338| DCD	|$LN5@HcdMdd_Set|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HcdMdd_SetCapability| PROC

; 306  : {

  00000		 |$LN5@HcdMdd_Set|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35335|

; 307  :     CHcd * pobUhcd = (CHcd *)lpvUhcdObject;
; 308  :     return pobUhcd->SetCapability(dwCapability);

  00004	e5903000	 ldr         r3, [r0]
  00008	e5933048	 ldr         r3, [r3, #0x48]
  0000c	e1a0e00f	 mov         lr, pc
  00010	e12fff13	 bx          r3

; 309  : }

  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M35336|

			 ENDP  ; |HcdMdd_SetCapability|

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|HCD_Init|
	EXPORT	|??_C@_17KACEIPNC@?$AAK?$AAe?$AAy?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|LeaveCriticalSection|
	IMPORT	|HcdPdd_Init|
	IMPORT	|EnterCriticalSection|
	IMPORT	|RegOpenKeyExW|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_cookie|
	IMPORT	|__security_check_cookie|

  00000			 AREA	 |.pdata|, PDATA
|$T35366| DCD	|$LN11@HCD_Init|
	DCD	0xc0005102

  00000			 AREA	 |.xdata|, DATA
|$T35362| DCD	0xffffffe8

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17KACEIPNC@?$AAK?$AAe?$AAy?$AA?$AA@| DCB "K", 0x0, "e", 0x0, "y", 0x0
	DCB	0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T35362|

  00008		 |HCD_Init| PROC

; 319  : {

  00008		 |$LN11@HCD_Init|
  00008	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  0000c	e24ddf89	 sub         sp, sp, #0x89, 30
  00010		 |$M35363|
  00010	e1a06000	 mov         r6, r0
  00014	e59f312c	 ldr         r3, [pc, #0x12C]
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3220	 str         r3, [sp, #0x220]

; 320  :     HKEY ActiveKey;
; 321  :     WCHAR RegKeyPath[DEVKEY_LEN];
; 322  :     DWORD status;
; 323  :     DWORD ValType;
; 324  :     DWORD ValLen;
; 325  : 
; 326  :     DEBUGMSG (ZONE_INIT, (TEXT("EHCD!HCD_Init\r\n")));
; 327  : 
; 328  :     
; 329  :     // Open driver's ACTIVE key
; 330  :     status = RegOpenKeyEx(
; 331  :                 HKEY_LOCAL_MACHINE,
; 332  :                 (LPCWSTR)dwContext,
; 333  :                 0,
; 334  :                 0,
; 335  :                 &ActiveKey);

  00020	e28de008	 add         lr, sp, #8
  00024	e1a01006	 mov         r1, r6
  00028	e3a03000	 mov         r3, #0
  0002c	e3a02000	 mov         r2, #0
  00030	e3a0010a	 mov         r0, #0xA, 2
  00034	e58de000	 str         lr, [sp]
  00038	eb000000	 bl          RegOpenKeyExW
  0003c	e3500000	 cmp         r0, #0

; 336  :     if (status != ERROR_SUCCESS) {

  00040	0a000003	 beq         |$LN2@HCD_Init|
  00044		 |$LN8@HCD_Init|

; 337  :         DEBUGMSG(ZONE_INIT|ZONE_ERROR,
; 338  :             (TEXT("EHCD!HCD_Init RegOpenKeyEx(%s) returned %d.\r\n"),
; 339  :             (LPCWSTR)dwContext, status));
; 340  :         return NULL;

  00044	e59d0220	 ldr         r0, [sp, #0x220]
  00048	eb000000	 bl          __security_check_cookie
  0004c	e3a05000	 mov         r5, #0
  00050	ea000035	 b           |$LN3@HCD_Init|
  00054		 |$LN2@HCD_Init|

; 341  :     }
; 342  : 
; 343  :     // Get Key value, which points to driver's key
; 344  :     ValLen = sizeof(RegKeyPath);
; 345  :     status = RegQueryValueEx(
; 346  :                 ActiveKey,
; 347  :                 DEVLOAD_DEVKEY_VALNAME,
; 348  :                 NULL,
; 349  :                 &ValType,
; 350  :                 (PUCHAR)RegKeyPath,
; 351  :                 &ValLen);

  00054	e59f10e8	 ldr         r1, [pc, #0xE8]
  00058	e59d0008	 ldr         r0, [sp, #8]
  0005c	e3a05c02	 mov         r5, #2, 24
  00060	e28de014	 add         lr, sp, #0x14
  00064	e28d4020	 add         r4, sp, #0x20
  00068	e28d3018	 add         r3, sp, #0x18
  0006c	e3a02000	 mov         r2, #0
  00070	e58d5014	 str         r5, [sp, #0x14]
  00074	e58de004	 str         lr, [sp, #4]
  00078	e58d4000	 str         r4, [sp]
  0007c	eb000000	 bl          RegQueryValueExW
  00080	e3500000	 cmp         r0, #0

; 352  :     if (status != ERROR_SUCCESS) {
; 353  :         DEBUGMSG(ZONE_INIT|ZONE_ERROR,
; 354  :             (TEXT("EHCD!HCD_Init RegQueryValueEx(%s\\%s) returned %d\r\n"),
; 355  :             (LPCWSTR)dwContext, DEVLOAD_DEVKEY_VALNAME, status));
; 356  :         RegCloseKey(ActiveKey);

  00084	e59d0008	 ldr         r0, [sp, #8]
  00088	0a000001	 beq         |$LN1@HCD_Init|
  0008c	eb000000	 bl          RegCloseKey

; 357  :         return NULL;

  00090	eaffffeb	 b           |$LN8@HCD_Init|
  00094		 |$LN1@HCD_Init|

; 358  :     }
; 359  : 
; 360  :     RegCloseKey(ActiveKey);

  00094	eb000000	 bl          RegCloseKey

; 361  :     g_IstThreadPriority = GetInterruptThreadPriority((LPTSTR)dwContext);

  00098	e3a03065	 mov         r3, #0x65
  0009c	e1a00006	 mov         r0, r6
  000a0	e58d300c	 str         r3, [sp, #0xC]
  000a4	eb000000	 bl          OpenDeviceKey
  000a8	e1b05000	 movs        r5, r0
  000ac	0a00000c	 beq         |$LN5@HCD_Init|
  000b0	e59f1088	 ldr         r1, [pc, #0x88]
  000b4	e3a07004	 mov         r7, #4
  000b8	e28de010	 add         lr, sp, #0x10
  000bc	e28d400c	 add         r4, sp, #0xC
  000c0	e28d301c	 add         r3, sp, #0x1C
  000c4	e3a02000	 mov         r2, #0
  000c8	e1a00005	 mov         r0, r5
  000cc	e58d7010	 str         r7, [sp, #0x10]
  000d0	e58de004	 str         lr, [sp, #4]
  000d4	e58d4000	 str         r4, [sp]
  000d8	eb000000	 bl          RegQueryValueExW
  000dc	e1a00005	 mov         r0, r5
  000e0	eb000000	 bl          RegCloseKey
  000e4		 |$LN5@HCD_Init|
  000e4	e59f4050	 ldr         r4, [pc, #0x50]
  000e8	e59d300c	 ldr         r3, [sp, #0xC]

; 362  :     RegKeyPath[DEVKEY_LEN-1] = 0 ;

  000ec	e3a02000	 mov         r2, #0

; 363  :     
; 364  :     EnterCriticalSection( &g_CSection );

  000f0	e2840004	 add         r0, r4, #4
  000f4	e5843000	 str         r3, [r4]
  000f8	e28dcc02	 add         r12, sp, #2, 24
  000fc	e1cc21be	 strh        r2, [r12, #0x1E]
  00100	eb000000	 bl          EnterCriticalSection

; 365  :     g_dwContext = dwContext;
; 366  :     DWORD dwReturn =HcdPdd_Init((DWORD)RegKeyPath);

  00104	e28d0020	 add         r0, sp, #0x20
  00108	e5846018	 str         r6, [r4, #0x18]
  0010c	eb000000	 bl          HcdPdd_Init
  00110	e1a05000	 mov         r5, r0

; 367  :     g_dwContext = 0;

  00114	e3a03000	 mov         r3, #0

; 368  :     LeaveCriticalSection( &g_CSection );

  00118	e2840004	 add         r0, r4, #4
  0011c	e5843018	 str         r3, [r4, #0x18]
  00120	eb000000	 bl          LeaveCriticalSection

; 369  :     
; 370  :     return dwReturn;

  00124	e59d0220	 ldr         r0, [sp, #0x220]
  00128	eb000000	 bl          __security_check_cookie
  0012c		 |$LN3@HCD_Init|

; 371  : }

  0012c	e1a00005	 mov         r0, r5
  00130	e28ddf89	 add         sp, sp, #0x89, 30
  00134	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00138	e12fff1e	 bx          lr
  0013c		 |$LN12@HCD_Init|
  0013c		 |$LN13@HCD_Init|
  0013c	00000000	 DCD         |g_IstThreadPriority|
  00140		 |$LN14@HCD_Init|
  00140	00000000	 DCD         |??_C@_1BI@BHLBGEOK@?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@|
  00144		 |$LN15@HCD_Init|
  00144	00000000	 DCD         |??_C@_17KACEIPNC@?$AAK?$AAe?$AAy?$AA?$AA@|
  00148		 |$LN16@HCD_Init|
  00148	00000000	 DCD         |__security_cookie|
  0014c		 |$M35364|

			 ENDP  ; |HCD_Init|

	EXPORT	|HCD_PowerUp|
	IMPORT	|HcdPdd_PowerUp|

  00000			 AREA	 |.pdata|, PDATA
|$T35380| DCD	|$LN5@HCD_PowerU|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HCD_PowerUp| PROC

; 375  : {

  00000		 |$LN5@HCD_PowerU|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35377|

; 376  :     HcdPdd_PowerUp(hDeviceContext);

  00004	eb000000	 bl          HcdPdd_PowerUp

; 377  : 
; 378  :     return;
; 379  : }

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M35378|

			 ENDP  ; |HCD_PowerUp|

	EXPORT	|HCD_PowerDown|
	IMPORT	|HcdPdd_PowerDown|

  00000			 AREA	 |.pdata|, PDATA
|$T35388| DCD	|$LN5@HCD_PowerD|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HCD_PowerDown| PROC

; 383  : {

  00000		 |$LN5@HCD_PowerD|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35385|

; 384  :     HcdPdd_PowerDown(hDeviceContext);

  00004	eb000000	 bl          HcdPdd_PowerDown

; 385  : 
; 386  :     return;
; 387  : }

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M35386|

			 ENDP  ; |HCD_PowerDown|

	EXPORT	|HCD_Deinit|
	IMPORT	|HcdPdd_Deinit|

  00000			 AREA	 |.pdata|, PDATA
|$T35398| DCD	|$LN5@HCD_Deinit|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HCD_Deinit| PROC

; 391  : {

  00000		 |$LN5@HCD_Deinit|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35395|

; 392  :     DEBUGMSG (ZONE_INIT, (TEXT("UHCD: HCD_Deinit\r\n")));
; 393  :     return HcdPdd_Deinit(hDeviceContext);

  00004	eb000000	 bl          HcdPdd_Deinit

; 394  : }

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M35396|

			 ENDP  ; |HCD_Deinit|

	EXPORT	|HCD_Open|
	IMPORT	|HcdPdd_Open|

  00000			 AREA	 |.pdata|, PDATA
|$T35410| DCD	|$LN5@HCD_Open|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HCD_Open| PROC

; 399  : {

  00000		 |$LN5@HCD_Open|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35407|

; 400  :     return HcdPdd_Open(hDeviceContext, AccessCode, ShareMode);

  00004	eb000000	 bl          HcdPdd_Open

; 401  : }

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M35408|

			 ENDP  ; |HCD_Open|

	EXPORT	|HCD_Close|
	IMPORT	|HcdPdd_Close|

  00000			 AREA	 |.pdata|, PDATA
|$T35420| DCD	|$LN5@HCD_Close|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HCD_Close| PROC

; 405  : {

  00000		 |$LN5@HCD_Close|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35417|

; 406  :     return HcdPdd_Close(hOpenContext);

  00004	eb000000	 bl          HcdPdd_Close

; 407  : }

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M35418|

			 ENDP  ; |HCD_Close|

	EXPORT	|HCD_Read|
	IMPORT	|HcdPdd_Read|

  00000			 AREA	 |.pdata|, PDATA
|$T35432| DCD	|$LN5@HCD_Read|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HCD_Read| PROC

; 411  : {

  00000		 |$LN5@HCD_Read|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35429|

; 412  :     return HcdPdd_Read(hOpenContext, pBuffer, Count);

  00004	eb000000	 bl          HcdPdd_Read

; 413  : }

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M35430|

			 ENDP  ; |HCD_Read|

	EXPORT	|HCD_Write|
	IMPORT	|HcdPdd_Write|

  00000			 AREA	 |.pdata|, PDATA
|$T35444| DCD	|$LN5@HCD_Write|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HCD_Write| PROC

; 418  : {

  00000		 |$LN5@HCD_Write|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35441|

; 419  :     return HcdPdd_Write(hOpenContext, pSourceBytes, NumberOfBytes);

  00004	eb000000	 bl          HcdPdd_Write

; 420  : }

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M35442|

			 ENDP  ; |HCD_Write|

	EXPORT	|HCD_Seek|
	IMPORT	|HcdPdd_Seek|

  00000			 AREA	 |.pdata|, PDATA
|$T35456| DCD	|$LN5@HCD_Seek|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HCD_Seek| PROC

; 424  : {

  00000		 |$LN5@HCD_Seek|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35453|

; 425  :     return HcdPdd_Seek(hOpenContext, Amount, Type);

  00004	eb000000	 bl          HcdPdd_Seek

; 426  : }

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M35454|

			 ENDP  ; |HCD_Seek|

	EXPORT	|HCD_IOControl|
	IMPORT	|HcdPdd_IOControl|

  00000			 AREA	 |.pdata|, PDATA
|$T35469| DCD	|$LN5@HCD_IOCont|
	DCD	0x40000c02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HCD_IOControl| PROC

; 431  : {

  00000		 |$LN5@HCD_IOCont|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M35466|

; 432  :     return HcdPdd_IOControl(hOpenContext, dwCode, pBufIn, dwLenIn, pBufOut,
; 433  :             dwLenOut, pdwActualOut);

  00008	e59de020	 ldr         lr, [sp, #0x20]
  0000c	e59d401c	 ldr         r4, [sp, #0x1C]
  00010	e59d5018	 ldr         r5, [sp, #0x18]
  00014	e58de008	 str         lr, [sp, #8]
  00018	e58d4004	 str         r4, [sp, #4]
  0001c	e58d5000	 str         r5, [sp]
  00020	eb000000	 bl          HcdPdd_IOControl

; 434  : }

  00024	e28dd00c	 add         sp, sp, #0xC
  00028	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M35467|

			 ENDP  ; |HCD_IOControl|

	EXPORT	|HcdMdd_CreateMemoryObject|
	IMPORT	|??0CPhysMem@@QAA@KKPAE0@Z|		; CPhysMem::CPhysMem
	IMPORT	|??2@YAPAXI@Z|				; operator new

  00000			 AREA	 |.pdata|, PDATA
|$T35499| DCD	|$LN16@HcdMdd_Cre@2|
	DCD	0x40002002
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HcdMdd_CreateMemoryObject| PROC

; 240  : {

  00000		 |$LN16@HcdMdd_Cre@2|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M35496|
  00008	e1a04003	 mov         r4, r3
  0000c	e1a05002	 mov         r5, r2
  00010	e1a06001	 mov         r6, r1
  00014	e1a07000	 mov         r7, r0

; 241  :     //
; 242  :     // We need at least a USBPAGE for Special allocation and a PAGE for normal
; 243  :     // allocation.
; 244  :     //
; 245  :     ASSERT((cbHighPrioritySize + (2*USBPAGESIZE)) < cbSize);
; 246  : 
; 247  :     CPhysMem * pobMem = new CPhysMem(cbSize,cbHighPrioritySize,pVirtAddr,pPhysAddr);

  00018	e3a00078	 mov         r0, #0x78
  0001c	eb000000	 bl          |??2@YAPAXI@Z|
  00020	e3500000	 cmp         r0, #0
  00024	0a000006	 beq         |$LN5@HcdMdd_Cre@2|
  00028	e1a03005	 mov         r3, r5
  0002c	e1a02006	 mov         r2, r6
  00030	e1a01007	 mov         r1, r7
  00034	e58d4000	 str         r4, [sp]
  00038	eb000000	 bl          |??0CPhysMem@@QAA@KKPAE0@Z|
  0003c	e1a04000	 mov         r4, r0
  00040	ea000000	 b           |$LN6@HcdMdd_Cre@2|
  00044		 |$LN5@HcdMdd_Cre@2|
  00044	e3a04000	 mov         r4, #0
  00048		 |$LN6@HcdMdd_Cre@2|

; 248  :     if (pobMem)

  00048	e3540000	 cmp         r4, #0
  0004c	0a000007	 beq         |$LN1@HcdMdd_Cre@2|

; 249  :         if ( ! pobMem->InittedOK() ) {

  00050	e5943024	 ldr         r3, [r4, #0x24]
  00054	e3530000	 cmp         r3, #0
  00058	1a000004	 bne         |$LN1@HcdMdd_Cre@2|

; 250  :             delete pobMem;

  0005c	e1a00004	 mov         r0, r4
  00060	eb000000	 bl          |??1CPhysMem@@QAA@XZ|
  00064	e1a00004	 mov         r0, r4
  00068	eb000000	 bl          |??3@YAXPAX@Z|

; 251  :             pobMem = 0;

  0006c	e3a04000	 mov         r4, #0
  00070		 |$LN1@HcdMdd_Cre@2|

; 252  :         }
; 253  : 
; 254  :     return pobMem;
; 255  : }

  00070	e1a00004	 mov         r0, r4
  00074	e28dd004	 add         sp, sp, #4
  00078	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  0007c	e12fff1e	 bx          lr
  00080		 |$M35497|

			 ENDP  ; |HcdMdd_CreateMemoryObject|

	END
