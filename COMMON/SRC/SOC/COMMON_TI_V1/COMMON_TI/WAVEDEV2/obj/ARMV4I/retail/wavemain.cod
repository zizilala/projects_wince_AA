; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\WAVEDEV2\wavemain.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|?Lock@HardwareContext@@QAAXXZ|		; HardwareContext::Lock
	IMPORT	|EnterCriticalSection|
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\wavedev2\hwctxt.h

  00000			 AREA	 |.pdata|, PDATA
|$T35468| DCD	|$LN5@Lock|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Lock@HardwareContext@@QAAXXZ| PROC	; HardwareContext::Lock

; 53   :     void Lock()   {EnterCriticalSection(&m_Lock);}

  00000		 |$LN5@Lock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35465|
  00004	e2800040	 add         r0, r0, #0x40
  00008	eb000000	 bl          EnterCriticalSection
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M35466|

			 ENDP  ; |?Lock@HardwareContext@@QAAXXZ|, HardwareContext::Lock

	EXPORT	|?Unlock@HardwareContext@@QAAXXZ|	; HardwareContext::Unlock
	IMPORT	|LeaveCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T35476| DCD	|$LN5@Unlock|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Unlock@HardwareContext@@QAAXXZ| PROC	; HardwareContext::Unlock

; 54   :     void Unlock() {LeaveCriticalSection(&m_Lock);}

  00000		 |$LN5@Unlock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35473|
  00004	e2800040	 add         r0, r0, #0x40
  00008	eb000000	 bl          LeaveCriticalSection
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M35474|

			 ENDP  ; |?Unlock@HardwareContext@@QAAXXZ|, HardwareContext::Unlock

	EXPORT	|?GetNumInputDevices@HardwareContext@@QAAKXZ| ; HardwareContext::GetNumInputDevices

  00000			 AREA	 |.pdata|, PDATA
|$T35485| DCD	|$LN5@GetNumInpu|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetNumInputDevices@HardwareContext@@QAAKXZ| PROC ; HardwareContext::GetNumInputDevices

; 56   :     DWORD GetNumInputDevices()  {return 1;}

  00000		 |$LN5@GetNumInpu|
  00000		 |$M35482|
  00000	e3a00001	 mov         r0, #1
  00004	e12fff1e	 bx          lr
  00008		 |$M35483|

			 ENDP  ; |?GetNumInputDevices@HardwareContext@@QAAKXZ|, HardwareContext::GetNumInputDevices

	EXPORT	|?GetNumOutputDevices@HardwareContext@@QAAKXZ| ; HardwareContext::GetNumOutputDevices

  00000			 AREA	 |.pdata|, PDATA
|$T35494| DCD	|$LN5@GetNumOutp|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetNumOutputDevices@HardwareContext@@QAAKXZ| PROC ; HardwareContext::GetNumOutputDevices

; 57   :     DWORD GetNumOutputDevices() {return 1;}

  00000		 |$LN5@GetNumOutp|
  00000		 |$M35491|
  00000	e3a00001	 mov         r0, #1
  00004	e12fff1e	 bx          lr
  00008		 |$M35492|

			 ENDP  ; |?GetNumOutputDevices@HardwareContext@@QAAKXZ|, HardwareContext::GetNumOutputDevices

	EXPORT	|?GetInputDeviceContext@HardwareContext@@QAAPAVDeviceContext@@I@Z| ; HardwareContext::GetInputDeviceContext

  00000			 AREA	 |.pdata|, PDATA
|$T35504| DCD	|$LN5@GetInputDe|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetInputDeviceContext@HardwareContext@@QAAPAVDeviceContext@@I@Z| PROC ; HardwareContext::GetInputDeviceContext

; 61   :     {

  00000		 |$LN5@GetInputDe|
  00000		 |$M35501|

; 62   : 		UNREFERENCED_PARAMETER(DeviceId);
; 63   : 
; 64   : 		return &m_InputDeviceContext;

  00000	e280005c	 add         r0, r0, #0x5C

; 65   :     }

  00004	e12fff1e	 bx          lr
  00008		 |$M35502|

			 ENDP  ; |?GetInputDeviceContext@HardwareContext@@QAAPAVDeviceContext@@I@Z|, HardwareContext::GetInputDeviceContext

	EXPORT	|?GetOutputDeviceContext@HardwareContext@@QAAPAVDeviceContext@@I@Z| ; HardwareContext::GetOutputDeviceContext

  00000			 AREA	 |.pdata|, PDATA
|$T35514| DCD	|$LN5@GetOutputD|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetOutputDeviceContext@HardwareContext@@QAAPAVDeviceContext@@I@Z| PROC ; HardwareContext::GetOutputDeviceContext

; 68   :     {

  00000		 |$LN5@GetOutputD|
  00000		 |$M35511|

; 69   : 		UNREFERENCED_PARAMETER(DeviceId);
; 70   : 
; 71   : 		return &m_OutputDeviceContext;

  00000	e280008c	 add         r0, r0, #0x8C

; 72   :     }

  00004	e12fff1e	 bx          lr
  00008		 |$M35512|

			 ENDP  ; |?GetOutputDeviceContext@HardwareContext@@QAAPAVDeviceContext@@I@Z|, HardwareContext::GetOutputDeviceContext

	EXPORT	|EnterMutex|

  00000			 AREA	 |.bss|, NOINIT
|s_cs|	%	0x14
|s_cs|	%	0x14
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\wavedev2\wavemain.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T35521| DCD	|$LN5@EnterMutex|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |EnterMutex| PROC

; 68   : {

  00000		 |$LN5@EnterMutex|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35518|

; 69   :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+EnterMutex\r\n"));
; 70   : 
; 71   :     ::EnterCriticalSection(&s_cs);

  00004	e59f0008	 ldr         r0, [pc, #8]
  00008	eb000000	 bl          EnterCriticalSection

; 72   : 
; 73   :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-EnterMutex\r\n"));
; 74   : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$LN6@EnterMutex|
  00014		 |$LN7@EnterMutex|
  00014	00000000	 DCD         |s_cs|
  00018		 |$M35519|

			 ENDP  ; |EnterMutex|

	EXPORT	|ExitMutex|

  00000			 AREA	 |.pdata|, PDATA
|$T35530| DCD	|$LN5@ExitMutex|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |ExitMutex| PROC

; 88   : {

  00000		 |$LN5@ExitMutex|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35527|

; 89   :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+ExitMutex\r\n"));
; 90   : 
; 91   :     ::LeaveCriticalSection(&s_cs);

  00004	e59f0008	 ldr         r0, [pc, #8]
  00008	eb000000	 bl          LeaveCriticalSection

; 92   : 
; 93   :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-ExitMutex\r\n"));
; 94   : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$LN6@ExitMutex|
  00014		 |$LN7@ExitMutex|
  00014	00000000	 DCD         |s_cs|
  00018		 |$M35528|

			 ENDP  ; |ExitMutex|

	EXPORT	|DllMain|
	IMPORT	|DisableThreadLibraryCalls|

  00000			 AREA	 |.pdata|, PDATA
|$T35543| DCD	|$LN12@DllMain|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DllMain| PROC

; 99   : {

  00000		 |$LN12@DllMain|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35540|

; 100  : 	UNREFERENCED_PARAMETER(lpvReserved);
; 101  : 
; 102  :     switch (dwReason) {

  00004	e3510001	 cmp         r1, #1

; 103  :         case DLL_PROCESS_ATTACH :
; 104  :             DEBUGREGISTER((HINSTANCE)hDLL);
; 105  :             DisableThreadLibraryCalls((HMODULE) hDLL);

  00008	0b000000	 bleq        DisableThreadLibraryCalls

; 106  :             break;
; 107  : 
; 108  :         case DLL_PROCESS_DETACH :
; 109  :             break;
; 110  : 
; 111  :         case DLL_THREAD_DETACH :
; 112  :             break;
; 113  : 
; 114  :         case DLL_THREAD_ATTACH :
; 115  :             break;
; 116  : 
; 117  :         default :
; 118  :             break;
; 119  :     }
; 120  :     return TRUE;

  0000c	e3a00001	 mov         r0, #1

; 121  : }

  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$M35541|

			 ENDP  ; |DllMain|

	EXPORT	|WAV_Init|
	IMPORT	|?CreateHWContext@HardwareContext@@SAHK@Z| ; HardwareContext::CreateHWContext
	IMPORT	|InitializeCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T35553| DCD	|$LN5@WAV_Init|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |WAV_Init| PROC

; 189  : {

  00000		 |$LN5@WAV_Init|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M35550|
  00004	e1a04000	 mov         r4, r0

; 190  : 	InitializeCriticalSection(&s_cs);

  00008	e59f0010	 ldr         r0, [pc, #0x10]
  0000c	eb000000	 bl          InitializeCriticalSection

; 191  : 
; 192  :     return((DWORD)HardwareContext::CreateHWContext(Index));

  00010	e1a00004	 mov         r0, r4
  00014	eb000000	 bl          |?CreateHWContext@HardwareContext@@SAHK@Z|

; 193  : }

  00018	e8bd4010	 ldmia       sp!, {r4, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$LN6@WAV_Init|
  00020		 |$LN7@WAV_Init|
  00020	00000000	 DCD         |s_cs|
  00024		 |$M35551|

			 ENDP  ; |WAV_Init|

	EXPORT	|WAV_Deinit|
	IMPORT	|?Deinit@HardwareContext@@QAAHXZ|	; HardwareContext::Deinit
	IMPORT	|?g_pHWContext@@3PAVHardwareContext@@A|	; g_pHWContext
	IMPORT	|DeleteCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T35564| DCD	|$LN5@WAV_Deinit|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |WAV_Deinit| PROC

; 207  : {

  00000		 |$LN5@WAV_Deinit|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35561|

; 208  : 	UNREFERENCED_PARAMETER(dwData);
; 209  : 
; 210  :     DeleteCriticalSection(&s_cs);

  00004	e59f0018	 ldr         r0, [pc, #0x18]
  00008	eb000000	 bl          DeleteCriticalSection

; 211  : 
; 212  :     return(g_pHWContext->Deinit());

  0000c	e59f300c	 ldr         r3, [pc, #0xC]
  00010	e5930000	 ldr         r0, [r3]
  00014	eb000000	 bl          |?Deinit@HardwareContext@@QAAHXZ|

; 213  : }

  00018	e49de004	 ldr         lr, [sp], #4
  0001c	e12fff1e	 bx          lr
  00020		 |$LN6@WAV_Deinit|
  00020		 |$LN7@WAV_Deinit|
  00020	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  00024		 |$LN8@WAV_Deinit|
  00024	00000000	 DCD         |s_cs|
  00028		 |$M35562|

			 ENDP  ; |WAV_Deinit|

	EXPORT	|WAV_Open|
	IMPORT	|??2@YAPAXI@Z|				; operator new

  00000			 AREA	 |.pdata|, PDATA
|$T35580| DCD	|$LN7@WAV_Open|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |WAV_Open| PROC

; 236  : {

  00000		 |$LN7@WAV_Open|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35577|

; 237  : 	UNREFERENCED_PARAMETER(dwData);
; 238  : 	UNREFERENCED_PARAMETER(dwAccess);
; 239  : 	UNREFERENCED_PARAMETER(dwShareMode);
; 240  : 
; 241  :     // allocate and return handle context to efficiently verify caller trust level
; 242  :     return new DWORD(NULL); // assume untrusted. Can't tell for sure until WAV_IoControl

  00004	e3a00004	 mov         r0, #4
  00008	eb000000	 bl          |??2@YAPAXI@Z|
  0000c	e3500000	 cmp         r0, #0
  00010	13a03000	 movne       r3, #0
  00014	15803000	 strne       r3, [r0]

; 243  : }

  00018	149de004	 ldrne       lr, [sp], #4

; 237  : 	UNREFERENCED_PARAMETER(dwData);
; 238  : 	UNREFERENCED_PARAMETER(dwAccess);
; 239  : 	UNREFERENCED_PARAMETER(dwShareMode);
; 240  : 
; 241  :     // allocate and return handle context to efficiently verify caller trust level
; 242  :     return new DWORD(NULL); // assume untrusted. Can't tell for sure until WAV_IoControl

  0001c	03a00000	 moveq       r0, #0

; 243  : }

  00020	049de004	 ldreq       lr, [sp], #4
  00024	e12fff1e	 bx          lr
  00028		 |$M35578|

			 ENDP  ; |WAV_Open|

	EXPORT	|WAV_Close|
	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$T35591| DCD	|$LN5@WAV_Close|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |WAV_Close| PROC

; 257  : {

  00000		 |$LN5@WAV_Close|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35588|

; 258  :     // we trust the device manager to give us a valid context to free.
; 259  :     delete pdwData;

  00004	eb000000	 bl          |??3@YAXPAX@Z|

; 260  :     return(TRUE);

  00008	e3a00001	 mov         r0, #1

; 261  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M35589|

			 ENDP  ; |WAV_Close|

	EXPORT	|?HandleWaveMessage@@YAHPAUMMDRV_MESSAGE_PARAMS@@PAK@Z| ; HandleWaveMessage
	IMPORT	|?SetSecondaryGainLimit@DeviceContext@@QAAKKK@Z| ; DeviceContext::SetSecondaryGainLimit
	IMPORT	|?ForceSpeaker@HardwareContext@@QAAKH@Z| ; HardwareContext::ForceSpeaker
	IMPORT	|?ForceSpeaker@StreamContext@@QAAKH@Z|	; StreamContext::ForceSpeaker
	IMPORT	|?SetSecondaryGainClass@StreamContext@@QAAKK@Z| ; StreamContext::SetSecondaryGainClass
	IMPORT	|?SetProperty@DeviceContext@@QAAKPAUtag_WAVEPROPINFO@@@Z| ; DeviceContext::SetProperty
	IMPORT	|?SetProperty@StreamContext@@QAAKPAUtag_WAVEPROPINFO@@@Z| ; StreamContext::SetProperty
	IMPORT	|?GetProperty@DeviceContext@@QAAKPAUtag_WAVEPROPINFO@@@Z| ; DeviceContext::GetProperty
	IMPORT	|?GetProperty@StreamContext@@QAAKPAUtag_WAVEPROPINFO@@@Z| ; StreamContext::GetProperty
	IMPORT	|?GetRate@WaveStreamContext@@QAAKPAK@Z|	; WaveStreamContext::GetRate
	IMPORT	|?BreakLoop@StreamContext@@QAAKXZ|	; StreamContext::BreakLoop
	IMPORT	|?SetMasterVolume@@YAIK@Z|		; SetMasterVolume
	IMPORT	|?SetGain@StreamContext@@QAAKK@Z|	; StreamContext::SetGain
	IMPORT	|?GetMasterVolume@@YAKXZ|		; GetMasterVolume
	IMPORT	|?GetGain@StreamContext@@QAAKXZ|	; StreamContext::GetGain
	IMPORT	|?Release@StreamContext@@QAAJXZ|	; StreamContext::Release
	IMPORT	|?OpenStream@DeviceContext@@QAAKPAUwaveopendesc_tag@@KPAPAVStreamContext@@@Z| ; DeviceContext::OpenStream
	IMPORT	|?GetDeviceContext@StreamContext@@QAAPAVDeviceContext@@XZ| ; StreamContext::GetDeviceContext
	IMPORT	|SetLastError|
	IMPORT	|__C_specific_handler|
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\wavedev2\hwctxt.h

  00000			 AREA	 |.pdata|, PDATA
|$T35684| DCD	|$LN109@HandleWave|
	DCD	0xc0011205

  00000			 AREA	 |.pdata|, PDATA
|$T35686| DCD	|$LN60@HandleWave|
	DCD	0x40000401

  00000			 AREA	 |.xdata|, DATA
|$T35682| DCD	0x1
	DCD	|$LN64@HandleWave|
	DCD	|$LN65@HandleWave|
	DCD	|$LN60@HandleWave|
	DCD	|$LN61@HandleWave|
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\wavedev2\wavemain.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T35682|

  00008		 |?HandleWaveMessage@@YAHPAUMMDRV_MESSAGE_PARAMS@@PAK@Z| PROC ; HandleWaveMessage

; 264  : {

  00008		 |$LN109@HandleWave|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d0003	 stmdb       sp!, {r0, r1}
  00010	e92d5ff0	 stmdb       sp!, {r4 - r12, lr}
  00014	e28db028	 add         r11, sp, #0x28
  00018	e24dd008	 sub         sp, sp, #8
  0001c		 |$LN107@HandleWave|
  0001c	e1a0a001	 mov         r10, r1
  00020	e58ba004	 str         r10, [r11, #4]
  00024	e1a04000	 mov         r4, r0

; 265  :     //  set the error code to be no error first
; 266  :     SetLastError(MMSYSERR_NOERROR);

  00028	e3a00000	 mov         r0, #0
  0002c	eb000000	 bl          SetLastError

; 267  : 
; 268  :     UINT uMsg = pParams->uMsg;
; 269  :     UINT uDeviceId = pParams->uDeviceId;
; 270  :     DWORD dwParam1 = pParams->dwParam1;
; 271  :     DWORD dwParam2 = pParams->dwParam2;
; 272  :     DWORD dwUser   = pParams->dwUser;
; 273  :     StreamContext *pStreamContext = (StreamContext *)dwUser;
; 274  : 
; 275  :     DWORD dwRet;
; 276  : 
; 277  :     g_pHWContext->Lock();

  00030	e59f8424	 ldr         r8, [pc, #0x424]
  00034	e5947004	 ldr         r7, [r4, #4]
  00038	e594600c	 ldr         r6, [r4, #0xC]
  0003c	e5983000	 ldr         r3, [r8]
  00040	e5949010	 ldr         r9, [r4, #0x10]
  00044	e5945008	 ldr         r5, [r4, #8]
  00048	e2830040	 add         r0, r3, #0x40
  0004c	eb000000	 bl          EnterCriticalSection
  00050		 |$LN64@HandleWave|

; 278  : 
; 279  :     _try
; 280  :     {
; 281  :         switch (uMsg)

  00050	e3570b01	 cmp         r7, #1, 22
  00054	8a0000ce	 bhi         |$LN58@HandleWave|
  00058	0a0000c5	 beq         |$LN23@HandleWave|
  0005c	e2472003	 sub         r2, r7, #3
  00060	e352003b	 cmp         r2, #0x3B
  00064	8a0000d2	 bhi         |$LN2@HandleWave|
  00068	e1a03082	 mov         r3, r2, lsl #1
  0006c	e083300f	 add         r3, r3, pc
  00070	e1d330b4	 ldrh        r3, [r3, #4]
  00074	e08ff003	 add         pc, pc, r3
  00078		 |$LN112@HandleWave|
  00078		 |$LN111@HandleWave|
  00078		 |$LN113@HandleWave|
  00078	0074		 DCW         0x74
  0007a		 |$LN114@HandleWave|
  0007a	007c		 DCW         0x7c
  0007c		 |$LN115@HandleWave|
  0007c	0124		 DCW         0x124
  0007e		 |$LN116@HandleWave|
  0007e	014c		 DCW         0x14c
  00080		 |$LN117@HandleWave|
  00080	0338		 DCW         0x338
  00082		 |$LN118@HandleWave|
  00082	0338		 DCW         0x338
  00084		 |$LN119@HandleWave|
  00084	01dc		 DCW         0x1dc
  00086		 |$LN120@HandleWave|
  00086	0190		 DCW         0x190
  00088		 |$LN121@HandleWave|
  00088	0178		 DCW         0x178
  0008a		 |$LN122@HandleWave|
  0008a	01c4		 DCW         0x1c4
  0008c		 |$LN123@HandleWave|
  0008c	01a8		 DCW         0x1a8
  0008e		 |$LN124@HandleWave|
  0008e	0338		 DCW         0x338
  00090		 |$LN125@HandleWave|
  00090	0338		 DCW         0x338
  00092		 |$LN126@HandleWave|
  00092	01f8		 DCW         0x1f8
  00094		 |$LN127@HandleWave|
  00094	021c		 DCW         0x21c
  00096		 |$LN128@HandleWave|
  00096	0268		 DCW         0x268
  00098		 |$LN129@HandleWave|
  00098	024c		 DCW         0x24c
  0009a		 |$LN130@HandleWave|
  0009a	0240		 DCW         0x240
  0009c		 |$LN131@HandleWave|
  0009c	0338		 DCW         0x338
  0009e		 |$LN132@HandleWave|
  0009e	00ec		 DCW         0xec
  000a0		 |$LN133@HandleWave|
  000a0	0278		 DCW         0x278
  000a2		 |$LN134@HandleWave|
  000a2	02b8		 DCW         0x2b8
  000a4		 |$LN135@HandleWave|
  000a4	0338		 DCW         0x338
  000a6		 |$LN136@HandleWave|
  000a6	0338		 DCW         0x338
  000a8		 |$LN137@HandleWave|
  000a8	0338		 DCW         0x338
  000aa		 |$LN138@HandleWave|
  000aa	0338		 DCW         0x338
  000ac		 |$LN139@HandleWave|
  000ac	0338		 DCW         0x338
  000ae		 |$LN140@HandleWave|
  000ae	0338		 DCW         0x338
  000b0		 |$LN141@HandleWave|
  000b0	0338		 DCW         0x338
  000b2		 |$LN142@HandleWave|
  000b2	0338		 DCW         0x338
  000b4		 |$LN143@HandleWave|
  000b4	0338		 DCW         0x338
  000b6		 |$LN144@HandleWave|
  000b6	0338		 DCW         0x338
  000b8		 |$LN145@HandleWave|
  000b8	0338		 DCW         0x338
  000ba		 |$LN146@HandleWave|
  000ba	0338		 DCW         0x338
  000bc		 |$LN147@HandleWave|
  000bc	0338		 DCW         0x338
  000be		 |$LN148@HandleWave|
  000be	0338		 DCW         0x338
  000c0		 |$LN149@HandleWave|
  000c0	0338		 DCW         0x338
  000c2		 |$LN150@HandleWave|
  000c2	0338		 DCW         0x338
  000c4		 |$LN151@HandleWave|
  000c4	0338		 DCW         0x338
  000c6		 |$LN152@HandleWave|
  000c6	0338		 DCW         0x338
  000c8		 |$LN153@HandleWave|
  000c8	0338		 DCW         0x338
  000ca		 |$LN154@HandleWave|
  000ca	0338		 DCW         0x338
  000cc		 |$LN155@HandleWave|
  000cc	0338		 DCW         0x338
  000ce		 |$LN156@HandleWave|
  000ce	0338		 DCW         0x338
  000d0		 |$LN157@HandleWave|
  000d0	0338		 DCW         0x338
  000d2		 |$LN158@HandleWave|
  000d2	0338		 DCW         0x338
  000d4		 |$LN159@HandleWave|
  000d4	0338		 DCW         0x338
  000d6		 |$LN160@HandleWave|
  000d6	0074		 DCW         0x74
  000d8		 |$LN161@HandleWave|
  000d8	00b4		 DCW         0xb4
  000da		 |$LN162@HandleWave|
  000da	0140		 DCW         0x140
  000dc		 |$LN163@HandleWave|
  000dc	014c		 DCW         0x14c
  000de		 |$LN164@HandleWave|
  000de	0338		 DCW         0x338
  000e0		 |$LN165@HandleWave|
  000e0	0338		 DCW         0x338
  000e2		 |$LN166@HandleWave|
  000e2	01dc		 DCW         0x1dc
  000e4		 |$LN167@HandleWave|
  000e4	0178		 DCW         0x178
  000e6		 |$LN168@HandleWave|
  000e6	0190		 DCW         0x190
  000e8		 |$LN169@HandleWave|
  000e8	01c4		 DCW         0x1c4
  000ea		 |$LN170@HandleWave|
  000ea	01a8		 DCW         0x1a8
  000ec		 |$LN171@HandleWave|
  000ec	02a0		 DCW         0x2a0
  000ee		 |$LN172@HandleWave|
  000ee	02e0		 DCW         0x2e0
  000f0		 |$LN52@HandleWave|

; 282  :         {
; 283  :         case WODM_GETNUMDEVS:
; 284  :             {
; 285  :                 dwRet = g_pHWContext->GetNumOutputDevices();

  000f0	e3a04001	 mov         r4, #1

; 286  :                 break;

  000f4	ea0000c4	 b           |$LN98@HandleWave|
  000f8		 |$LN50@HandleWave|

; 287  :             }
; 288  : 
; 289  :         case WIDM_GETNUMDEVS:
; 290  :             {
; 291  :                 dwRet = g_pHWContext->GetNumInputDevices();
; 292  :                 break;
; 293  :             }
; 294  : 
; 295  :         case WODM_GETDEVCAPS:
; 296  :             {
; 297  :                 DeviceContext *pDeviceContext;
; 298  : 
; 299  :                 if (pStreamContext)

  000f8	e3550000	 cmp         r5, #0
  000fc	0a000002	 beq         |$LN49@HandleWave|

; 300  :                 {
; 301  :                     pDeviceContext=pStreamContext->GetDeviceContext();

  00100	e1a00005	 mov         r0, r5
  00104	eb000000	 bl          |?GetDeviceContext@StreamContext@@QAAPAVDeviceContext@@XZ|

; 302  :                 }
; 303  :                 else

  00108	ea000001	 b           |$LN48@HandleWave|
  0010c		 |$LN49@HandleWave|

; 304  :                 {
; 305  :                     pDeviceContext = g_pHWContext->GetOutputDeviceContext(uDeviceId);

  0010c	e5983000	 ldr         r3, [r8]
  00110	e283008c	 add         r0, r3, #0x8C
  00114		 |$LN48@HandleWave|

; 306  :                 }
; 307  : 
; 308  :                 dwRet = pDeviceContext->GetDevCaps((PVOID)dwParam1,dwParam2);

  00114	e5903000	 ldr         r3, [r0]
  00118	e1a02009	 mov         r2, r9
  0011c	e1a01006	 mov         r1, r6
  00120	e593300c	 ldr         r3, [r3, #0xC]
  00124	e1a0e00f	 mov         lr, pc
  00128	e12fff13	 bx          r3

; 309  :                 break;

  0012c	ea0000b5	 b           |$LN99@HandleWave|
  00130		 |$LN47@HandleWave|

; 310  :             }
; 311  : 
; 312  : 
; 313  :         case WIDM_GETDEVCAPS:
; 314  :             {
; 315  :                 DeviceContext *pDeviceContext;
; 316  : 
; 317  :                 if (pStreamContext)

  00130	e3550000	 cmp         r5, #0
  00134	0a000002	 beq         |$LN46@HandleWave|

; 318  :                 {
; 319  :                     pDeviceContext=pStreamContext->GetDeviceContext();

  00138	e1a00005	 mov         r0, r5
  0013c	eb000000	 bl          |?GetDeviceContext@StreamContext@@QAAPAVDeviceContext@@XZ|

; 320  :                 }
; 321  :                 else

  00140	ea000001	 b           |$LN45@HandleWave|
  00144		 |$LN46@HandleWave|

; 322  :                 {
; 323  :                     pDeviceContext = g_pHWContext->GetInputDeviceContext(uDeviceId);

  00144	e5983000	 ldr         r3, [r8]
  00148	e283005c	 add         r0, r3, #0x5C
  0014c		 |$LN45@HandleWave|

; 324  :                 }
; 325  : 
; 326  :                 dwRet = pDeviceContext->GetDevCaps((PVOID)dwParam1,dwParam2);

  0014c	e5903000	 ldr         r3, [r0]
  00150	e1a02009	 mov         r2, r9
  00154	e1a01006	 mov         r1, r6
  00158	e593300c	 ldr         r3, [r3, #0xC]
  0015c	e1a0e00f	 mov         lr, pc
  00160	e12fff13	 bx          r3

; 327  :                 break;

  00164	ea0000a7	 b           |$LN99@HandleWave|
  00168		 |$LN44@HandleWave|

; 328  :             }
; 329  : 
; 330  :         case WODM_GETEXTDEVCAPS:
; 331  :             {
; 332  :                 DeviceContext *pDeviceContext;
; 333  : 
; 334  :                 if (pStreamContext)

  00168	e3550000	 cmp         r5, #0
  0016c	0a000002	 beq         |$LN43@HandleWave|

; 335  :                 {
; 336  :                     pDeviceContext=pStreamContext->GetDeviceContext();

  00170	e1a00005	 mov         r0, r5
  00174	eb000000	 bl          |?GetDeviceContext@StreamContext@@QAAPAVDeviceContext@@XZ|

; 337  :                 }
; 338  :                 else

  00178	ea000001	 b           |$LN42@HandleWave|
  0017c		 |$LN43@HandleWave|

; 339  :                 {
; 340  :                     pDeviceContext = g_pHWContext->GetOutputDeviceContext(uDeviceId);

  0017c	e5983000	 ldr         r3, [r8]
  00180	e283008c	 add         r0, r3, #0x8C
  00184		 |$LN42@HandleWave|

; 341  :                 }
; 342  : 
; 343  :                 dwRet = pDeviceContext->GetExtDevCaps((PVOID)dwParam1,dwParam2);

  00184	e5903000	 ldr         r3, [r0]
  00188	e1a02009	 mov         r2, r9
  0018c	e1a01006	 mov         r1, r6
  00190	e5933008	 ldr         r3, [r3, #8]
  00194	e1a0e00f	 mov         lr, pc
  00198	e12fff13	 bx          r3

; 344  :                 break;

  0019c	ea000099	 b           |$LN99@HandleWave|
  001a0		 |$LN41@HandleWave|

; 345  :             }
; 346  : 
; 347  :         case WODM_OPEN:
; 348  :             {
; 349  :                 // DEBUGMSG(1, (TEXT("WODM_OPEN\r\n"));
; 350  :                 DeviceContext *pDeviceContext = g_pHWContext->GetOutputDeviceContext(uDeviceId);

  001a0	e5981000	 ldr         r1, [r8]

; 351  :                 dwRet = pDeviceContext->OpenStream((LPWAVEOPENDESC)dwParam1, dwParam2, (StreamContext **)dwUser);

  001a4	e281008c	 add         r0, r1, #0x8C
  001a8		 |$LN106@HandleWave|
  001a8	e1a02009	 mov         r2, r9
  001ac	e1a03005	 mov         r3, r5
  001b0	e1a01006	 mov         r1, r6
  001b4	eb000000	 bl          |?OpenStream@DeviceContext@@QAAKPAUwaveopendesc_tag@@KPAPAVStreamContext@@@Z|

; 352  :                 break;

  001b8	ea000092	 b           |$LN99@HandleWave|
  001bc		 |$LN40@HandleWave|

; 353  :             }
; 354  : 
; 355  :         case WIDM_OPEN:
; 356  :             {
; 357  :                 // DEBUGMSG(1, (TEXT("WIDM_OPEN\r\n"));
; 358  :                 DeviceContext *pDeviceContext = g_pHWContext->GetInputDeviceContext(uDeviceId);

  001bc	e5981000	 ldr         r1, [r8]

; 359  :                 dwRet = pDeviceContext->OpenStream((LPWAVEOPENDESC)dwParam1, dwParam2, (StreamContext **)dwUser);

  001c0	e281005c	 add         r0, r1, #0x5C

; 360  :                 break;

  001c4	eafffff7	 b           |$LN106@HandleWave|
  001c8		 |$LN39@HandleWave|

; 361  :             }
; 362  : 
; 363  :         case WODM_CLOSE:
; 364  :         case WIDM_CLOSE:
; 365  :             {
; 366  :                 // DEBUGMSG(1, (TEXT("WIDM_CLOSE/WODM_CLOSE\r\n"));
; 367  :                 dwRet = pStreamContext->Close();

  001c8	e5953000	 ldr         r3, [r5]
  001cc	e1a00005	 mov         r0, r5
  001d0	e5933008	 ldr         r3, [r3, #8]
  001d4	e1a0e00f	 mov         lr, pc
  001d8	e12fff13	 bx          r3
  001dc	e1b04000	 movs        r4, r0
  001e0	e50b4030	 str         r4, [r11, #-0x30]

; 368  : 
; 369  :                 // Release stream context here, rather than inside StreamContext::Close, so that if someone
; 370  :                 // (like CMidiStream) has subclassed Close there's no chance that the object will get released
; 371  :                 // out from under them.
; 372  :                 if (dwRet==MMSYSERR_NOERROR)

  001e4	1a000089	 bne         |$LN65@HandleWave|

; 373  :                 {
; 374  :                     pStreamContext->Release();

  001e8	e1a00005	 mov         r0, r5
  001ec	eb000000	 bl          |?Release@StreamContext@@QAAJXZ|

; 375  :                 }
; 376  :                 break;

  001f0	ea000086	 b           |$LN65@HandleWave|
  001f4		 |$LN37@HandleWave|

; 377  :             }
; 378  : 
; 379  :         case WODM_RESTART:
; 380  :         case WIDM_START:
; 381  :             {
; 382  :                 dwRet = pStreamContext->Run();

  001f4	e5953000	 ldr         r3, [r5]
  001f8	e1a00005	 mov         r0, r5
  001fc	e5933010	 ldr         r3, [r3, #0x10]
  00200	e1a0e00f	 mov         lr, pc
  00204	e12fff13	 bx          r3

; 383  :                 break;

  00208	ea00007e	 b           |$LN99@HandleWave|
  0020c		 |$LN36@HandleWave|

; 384  :             }
; 385  : 
; 386  :         case WODM_PAUSE:
; 387  :         case WIDM_STOP:
; 388  :             {
; 389  :                 dwRet = pStreamContext->Stop();

  0020c	e5953000	 ldr         r3, [r5]
  00210	e1a00005	 mov         r0, r5
  00214	e5933014	 ldr         r3, [r3, #0x14]
  00218	e1a0e00f	 mov         lr, pc
  0021c	e12fff13	 bx          r3

; 390  :                 break;

  00220	ea000078	 b           |$LN99@HandleWave|
  00224		 |$LN35@HandleWave|

; 391  :             }
; 392  : 
; 393  :         case WODM_GETPOS:
; 394  :         case WIDM_GETPOS:
; 395  :             {
; 396  :                 dwRet = pStreamContext->GetPos((PMMTIME)dwParam1);

  00224	e5953000	 ldr         r3, [r5]
  00228	e1a01006	 mov         r1, r6
  0022c	e1a00005	 mov         r0, r5
  00230	e593300c	 ldr         r3, [r3, #0xC]
  00234	e1a0e00f	 mov         lr, pc
  00238	e12fff13	 bx          r3

; 397  :                 break;

  0023c	ea000071	 b           |$LN99@HandleWave|
  00240		 |$LN34@HandleWave|

; 398  :             }
; 399  : 
; 400  :         case WODM_RESET:
; 401  :         case WIDM_RESET:
; 402  :             {
; 403  :                 dwRet = pStreamContext->Reset();

  00240	e5953000	 ldr         r3, [r5]
  00244	e1a00005	 mov         r0, r5
  00248	e5933018	 ldr         r3, [r3, #0x18]
  0024c	e1a0e00f	 mov         lr, pc
  00250	e12fff13	 bx          r3

; 404  :                 break;

  00254	ea00006b	 b           |$LN99@HandleWave|
  00258		 |$LN33@HandleWave|

; 405  :             }
; 406  : 
; 407  :         case WODM_WRITE:
; 408  :         case WIDM_ADDBUFFER:
; 409  :             {
; 410  :                 // DEBUGMSG(1, (TEXT("WODM_WRITE/WIDM_ADDBUFFER, Buffer=0x%x\r\n"),dwParam1);
; 411  :                 dwRet = pStreamContext->QueueBuffer((LPWAVEHDR)dwParam1);

  00258	e5953000	 ldr         r3, [r5]
  0025c	e1a01006	 mov         r1, r6
  00260	e1a00005	 mov         r0, r5
  00264	e5933030	 ldr         r3, [r3, #0x30]
  00268	e1a0e00f	 mov         lr, pc
  0026c	e12fff13	 bx          r3

; 412  :                 break;

  00270	ea000064	 b           |$LN99@HandleWave|
  00274		 |$LN32@HandleWave|

; 413  :             }
; 414  : 
; 415  :         case WODM_GETVOLUME:
; 416  :             {
; 417  :                 PDWORD pdwGain = (PDWORD)dwParam1;
; 418  : 
; 419  :                 if (pStreamContext)

  00274	e3550000	 cmp         r5, #0
  00278	0a000002	 beq         |$LN31@HandleWave|

; 420  :                 {
; 421  :                     *pdwGain = pStreamContext->GetGain();

  0027c	e1a00005	 mov         r0, r5
  00280	eb000000	 bl          |?GetGain@StreamContext@@QAAKXZ|

; 422  :                 }
; 423  :                 else

  00284	ea000000	 b           |$LN100@HandleWave|
  00288		 |$LN31@HandleWave|

; 424  :                 {
; 425  :                     *pdwGain = GetMasterVolume();

  00288	eb000000	 bl          |?GetMasterVolume@@YAKXZ|
  0028c		 |$LN100@HandleWave|
  0028c	e5860000	 str         r0, [r6]

; 426  :                 }
; 427  :                 dwRet = MMSYSERR_NOERROR;

  00290	e3a04000	 mov         r4, #0

; 428  :                 break;

  00294	ea00005c	 b           |$LN98@HandleWave|
  00298		 |$LN29@HandleWave|

; 429  :             }
; 430  : 
; 431  :         case WODM_SETVOLUME:
; 432  :             {
; 433  :                 DWORD dwGain = dwParam1;
; 434  :                 if (pStreamContext)

  00298	e3550000	 cmp         r5, #0
  0029c	0a000003	 beq         |$LN28@HandleWave|

; 435  :                 {
; 436  :                     dwRet = pStreamContext->SetGain(dwGain);

  002a0	e1a01006	 mov         r1, r6
  002a4	e1a00005	 mov         r0, r5
  002a8	eb000000	 bl          |?SetGain@StreamContext@@QAAKK@Z|

; 437  :                 }
; 438  :                 else

  002ac	ea000055	 b           |$LN99@HandleWave|
  002b0		 |$LN28@HandleWave|

; 439  :                 {
; 440  :                     dwRet = SetMasterVolume(dwGain);

  002b0	e1a00006	 mov         r0, r6
  002b4	eb000000	 bl          |?SetMasterVolume@@YAIK@Z|

; 441  :                 }
; 442  :                 break;

  002b8	ea000052	 b           |$LN99@HandleWave|
  002bc		 |$LN26@HandleWave|

; 443  :             }
; 444  : 
; 445  :         case WODM_BREAKLOOP:
; 446  :             {
; 447  :                 dwRet = pStreamContext->BreakLoop();

  002bc	e1a00005	 mov         r0, r5
  002c0	eb000000	 bl          |?BreakLoop@StreamContext@@QAAKXZ|

; 448  :                 break;

  002c4	ea00004f	 b           |$LN99@HandleWave|
  002c8		 |$LN25@HandleWave|

; 449  :             }
; 450  : 
; 451  :         case WODM_SETPLAYBACKRATE:
; 452  :             {
; 453  :                 WaveStreamContext *pWaveStream = (WaveStreamContext *)dwUser;
; 454  :                 dwRet = pWaveStream->SetRate(dwParam1);

  002c8	e5953000	 ldr         r3, [r5]
  002cc	e1a01006	 mov         r1, r6
  002d0	e1a00005	 mov         r0, r5
  002d4	e593303c	 ldr         r3, [r3, #0x3C]
  002d8	e1a0e00f	 mov         lr, pc
  002dc	e12fff13	 bx          r3

; 455  :                 break;

  002e0	ea000048	 b           |$LN99@HandleWave|
  002e4		 |$LN24@HandleWave|

; 456  :             }
; 457  : 
; 458  :         case WODM_GETPLAYBACKRATE:
; 459  :             {
; 460  :                 WaveStreamContext *pWaveStream = (WaveStreamContext *)dwUser;
; 461  :                 dwRet = pWaveStream->GetRate((DWORD *)dwParam1);

  002e4	e1a01006	 mov         r1, r6
  002e8	e1a00005	 mov         r0, r5
  002ec	eb000000	 bl          |?GetRate@WaveStreamContext@@QAAKPAK@Z|

; 462  :                 break;

  002f0	ea000044	 b           |$LN99@HandleWave|
  002f4		 |$LN14@HandleWave|

; 504  :             }
; 505  : 
; 506  :         case WODM_GETPROP:
; 507  :             {
; 508  :                 // DEBUGMSG(ZONE_WODM, (TEXT("WODM_GETPROP\r\n")));
; 509  : 
; 510  :                 PWAVEPROPINFO pPropInfo = (PWAVEPROPINFO) dwParam1;
; 511  :                 if (pStreamContext)

  002f4	e3550000	 cmp         r5, #0

; 512  :                 {
; 513  :                     dwRet = pStreamContext->GetProperty(pPropInfo);

  002f8	e1a01006	 mov         r1, r6

; 504  :             }
; 505  : 
; 506  :         case WODM_GETPROP:
; 507  :             {
; 508  :                 // DEBUGMSG(ZONE_WODM, (TEXT("WODM_GETPROP\r\n")));
; 509  : 
; 510  :                 PWAVEPROPINFO pPropInfo = (PWAVEPROPINFO) dwParam1;
; 511  :                 if (pStreamContext)

  002fc	0a000002	 beq         |$LN13@HandleWave|
  00300		 |$LN102@HandleWave|

; 512  :                 {
; 513  :                     dwRet = pStreamContext->GetProperty(pPropInfo);

  00300	e1a00005	 mov         r0, r5
  00304	eb000000	 bl          |?GetProperty@StreamContext@@QAAKPAUtag_WAVEPROPINFO@@@Z|

; 514  :                 }
; 515  :                 else

  00308	ea00003e	 b           |$LN99@HandleWave|
  0030c		 |$LN13@HandleWave|

; 516  :                 {
; 517  :                     DeviceContext *pDeviceContext = g_pHWContext->GetOutputDeviceContext(uDeviceId);

  0030c	e5983000	 ldr         r3, [r8]

; 518  :                     dwRet = pDeviceContext->GetProperty(pPropInfo);

  00310	e283008c	 add         r0, r3, #0x8C
  00314		 |$LN103@HandleWave|
  00314	eb000000	 bl          |?GetProperty@DeviceContext@@QAAKPAUtag_WAVEPROPINFO@@@Z|

; 519  :                 }
; 520  :                 break;

  00318	ea00003a	 b           |$LN99@HandleWave|
  0031c		 |$LN11@HandleWave|

; 521  :             }
; 522  : 
; 523  :         case WIDM_GETPROP:
; 524  :             {
; 525  :                 // DEBUGMSG(ZONE_WODM, (TEXT("WIDM_GETPROP\r\n")));
; 526  : 
; 527  :                 PWAVEPROPINFO pPropInfo = (PWAVEPROPINFO) dwParam1;
; 528  :                 if (pStreamContext)

  0031c	e3550000	 cmp         r5, #0

; 529  :                 {
; 530  :                     dwRet = pStreamContext->GetProperty(pPropInfo);

  00320	e1a01006	 mov         r1, r6

; 531  :                 }
; 532  :                 else

  00324	1afffff5	 bne         |$LN102@HandleWave|

; 533  :                 {
; 534  :                     DeviceContext *pDeviceContext = g_pHWContext->GetInputDeviceContext(uDeviceId);

  00328	e5983000	 ldr         r3, [r8]

; 535  :                     dwRet = pDeviceContext->GetProperty(pPropInfo);

  0032c	e283005c	 add         r0, r3, #0x5C

; 536  :                 }
; 537  :                 break;

  00330	eafffff7	 b           |$LN103@HandleWave|
  00334		 |$LN8@HandleWave|

; 538  :             }
; 539  : 
; 540  :         case WODM_SETPROP:
; 541  :             {
; 542  :                 // DEBUGMSG(ZONE_WODM, (TEXT("WODM_SETPROP\r\n")));
; 543  : 
; 544  :                 PWAVEPROPINFO pPropInfo = (PWAVEPROPINFO) dwParam1;
; 545  :                 if (pStreamContext)

  00334	e3550000	 cmp         r5, #0

; 546  :                 {
; 547  :                     dwRet = pStreamContext->SetProperty(pPropInfo);

  00338	e1a01006	 mov         r1, r6

; 538  :             }
; 539  : 
; 540  :         case WODM_SETPROP:
; 541  :             {
; 542  :                 // DEBUGMSG(ZONE_WODM, (TEXT("WODM_SETPROP\r\n")));
; 543  : 
; 544  :                 PWAVEPROPINFO pPropInfo = (PWAVEPROPINFO) dwParam1;
; 545  :                 if (pStreamContext)

  0033c	0a000002	 beq         |$LN7@HandleWave|
  00340		 |$LN104@HandleWave|

; 546  :                 {
; 547  :                     dwRet = pStreamContext->SetProperty(pPropInfo);

  00340	e1a00005	 mov         r0, r5
  00344	eb000000	 bl          |?SetProperty@StreamContext@@QAAKPAUtag_WAVEPROPINFO@@@Z|

; 548  :                 }
; 549  :                 else

  00348	ea00002e	 b           |$LN99@HandleWave|
  0034c		 |$LN7@HandleWave|

; 550  :                 {
; 551  :                     DeviceContext *pDeviceContext = g_pHWContext->GetOutputDeviceContext(uDeviceId);

  0034c	e5983000	 ldr         r3, [r8]

; 552  :                     dwRet = pDeviceContext->SetProperty(pPropInfo);

  00350	e283008c	 add         r0, r3, #0x8C
  00354		 |$LN105@HandleWave|
  00354	eb000000	 bl          |?SetProperty@DeviceContext@@QAAKPAUtag_WAVEPROPINFO@@@Z|

; 553  :                 }
; 554  :                 break;

  00358	ea00002a	 b           |$LN99@HandleWave|
  0035c		 |$LN5@HandleWave|

; 555  :             }
; 556  : 
; 557  :         case WIDM_SETPROP:
; 558  :             {
; 559  :                 // DEBUGMSG(ZONE_WODM, (TEXT("WIDM_SETPROP\r\n")));
; 560  : 
; 561  :                 PWAVEPROPINFO pPropInfo = (PWAVEPROPINFO) dwParam1;
; 562  :                 if (pStreamContext)

  0035c	e3550000	 cmp         r5, #0

; 563  :                 {
; 564  :                     dwRet = pStreamContext->SetProperty(pPropInfo);

  00360	e1a01006	 mov         r1, r6

; 565  :                 }
; 566  :                 else

  00364	1afffff5	 bne         |$LN104@HandleWave|

; 567  :                 {
; 568  :                     DeviceContext *pDeviceContext = g_pHWContext->GetInputDeviceContext(uDeviceId);

  00368	e5983000	 ldr         r3, [r8]

; 569  :                     dwRet = pDeviceContext->SetProperty(pPropInfo);

  0036c	e283005c	 add         r0, r3, #0x5C

; 570  :                 }
; 571  :                 break;

  00370	eafffff7	 b           |$LN105@HandleWave|
  00374		 |$LN23@HandleWave|

; 463  :             }
; 464  : 
; 465  :         case MM_WOM_SETSECONDARYGAINCLASS:
; 466  :             {
; 467  :                 if (pStreamContext)

  00374	e3550000	 cmp         r5, #0
  00378	0a000003	 beq         |$LN22@HandleWave|

; 468  :                 {
; 469  :                     dwRet = pStreamContext->SetSecondaryGainClass(dwParam1);

  0037c	e1a01006	 mov         r1, r6
  00380	e1a00005	 mov         r0, r5
  00384	eb000000	 bl          |?SetSecondaryGainClass@StreamContext@@QAAKK@Z|

; 470  :                 }
; 471  :                 else

  00388	ea00001e	 b           |$LN99@HandleWave|
  0038c		 |$LN22@HandleWave|

; 472  :                 {
; 473  :                     dwRet = MMSYSERR_INVALPARAM;

  0038c	e3a0400b	 mov         r4, #0xB

; 474  :                 }
; 475  :                 break;

  00390	ea00001d	 b           |$LN98@HandleWave|
  00394		 |$LN58@HandleWave|
  00394	e3a03b01	 mov         r3, #1, 22

; 278  : 
; 279  :     _try
; 280  :     {
; 281  :         switch (uMsg)

  00398	e3833001	 orr         r3, r3, #1
  0039c	e1570003	 cmp         r7, r3
  003a0	0a00000e	 beq         |$LN20@HandleWave|
  003a4	e3a03b01	 mov         r3, #1, 22
  003a8	e3833002	 orr         r3, r3, #2
  003ac	e1570003	 cmp         r7, r3
  003b0	0a000001	 beq         |$LN17@HandleWave|
  003b4		 |$LN2@HandleWave|

; 572  :             }
; 573  : 
; 574  :     // unsupported messages
; 575  :         case WODM_GETPITCH:
; 576  :         case WODM_SETPITCH:
; 577  :         case WODM_PREPARE:
; 578  :         case WODM_UNPREPARE:
; 579  :         case WIDM_PREPARE:
; 580  :         case WIDM_UNPREPARE:
; 581  :             default:
; 582  :             dwRet  = MMSYSERR_NOTSUPPORTED;

  003b4	e3a04008	 mov         r4, #8
  003b8	ea000013	 b           |$LN98@HandleWave|
  003bc		 |$LN17@HandleWave|

; 490  :                 break;
; 491  :             }
; 492  : 
; 493  :         case MM_WOM_FORCESPEAKER:
; 494  :             {
; 495  :                 if (pStreamContext)

  003bc	e3550000	 cmp         r5, #0

; 496  :                 {
; 497  :                     dwRet = pStreamContext->ForceSpeaker((BOOL)dwParam1);

  003c0	e1a01006	 mov         r1, r6

; 490  :                 break;
; 491  :             }
; 492  : 
; 493  :         case MM_WOM_FORCESPEAKER:
; 494  :             {
; 495  :                 if (pStreamContext)

  003c4	0a000002	 beq         |$LN16@HandleWave|

; 496  :                 {
; 497  :                     dwRet = pStreamContext->ForceSpeaker((BOOL)dwParam1);

  003c8	e1a00005	 mov         r0, r5
  003cc	eb000000	 bl          |?ForceSpeaker@StreamContext@@QAAKH@Z|

; 498  :                 }
; 499  :                 else

  003d0	ea00000c	 b           |$LN99@HandleWave|
  003d4		 |$LN16@HandleWave|

; 500  :                 {
; 501  :                     dwRet = g_pHWContext->ForceSpeaker((BOOL)dwParam1);

  003d4	e5980000	 ldr         r0, [r8]
  003d8	eb000000	 bl          |?ForceSpeaker@HardwareContext@@QAAKH@Z|

; 502  :                 }
; 503  :                 break;

  003dc	ea000009	 b           |$LN99@HandleWave|
  003e0		 |$LN20@HandleWave|

; 476  :             }
; 477  : 
; 478  :         case MM_WOM_SETSECONDARYGAINLIMIT:
; 479  :             {
; 480  :                 DeviceContext *pDeviceContext;
; 481  :                 if (pStreamContext)

  003e0	e3550000	 cmp         r5, #0
  003e4	0a000002	 beq         |$LN19@HandleWave|

; 482  :                 {
; 483  :                     pDeviceContext = pStreamContext->GetDeviceContext();

  003e8	e1a00005	 mov         r0, r5
  003ec	eb000000	 bl          |?GetDeviceContext@StreamContext@@QAAPAVDeviceContext@@XZ|

; 484  :                 }
; 485  :                 else

  003f0	ea000001	 b           |$LN18@HandleWave|
  003f4		 |$LN19@HandleWave|

; 486  :                 {
; 487  :                     pDeviceContext = g_pHWContext->GetOutputDeviceContext(uDeviceId);

  003f4	e5983000	 ldr         r3, [r8]
  003f8	e283008c	 add         r0, r3, #0x8C
  003fc		 |$LN18@HandleWave|

; 488  :                 }
; 489  :                 dwRet = pDeviceContext->SetSecondaryGainLimit(dwParam1,dwParam2);

  003fc	e1a02009	 mov         r2, r9
  00400	e1a01006	 mov         r1, r6
  00404	eb000000	 bl          |?SetSecondaryGainLimit@DeviceContext@@QAAKKK@Z|
  00408		 |$LN99@HandleWave|
  00408	e1a04000	 mov         r4, r0
  0040c		 |$LN98@HandleWave|
  0040c	e50b4030	 str         r4, [r11, #-0x30]
  00410		 |$LN65@HandleWave|

; 583  :         }
; 584  :     }

  00410	ea000003	 b           |$LN66@HandleWave|
  00414		 |$LN61@HandleWave|

; 586  :     {
; 587  :         dwRet  = MMSYSERR_INVALPARAM;

  00414	e3a0400b	 mov         r4, #0xB
  00418	e50b4030	 str         r4, [r11, #-0x30]
  0041c	e59f8038	 ldr         r8, [pc, #0x38]
  00420	e59ba004	 ldr         r10, [r11, #4]
  00424		 |$LN66@HandleWave|

; 588  :     }
; 589  : 
; 590  :     g_pHWContext->Unlock();

  00424	e5983000	 ldr         r3, [r8]
  00428	e2830040	 add         r0, r3, #0x40
  0042c	eb000000	 bl          LeaveCriticalSection

; 591  : 
; 592  :     // Pass the return code back via pBufOut
; 593  :     if (pdwResult)

  00430	e35a0000	 cmp         r10, #0

; 594  :     {
; 595  :         *pdwResult = dwRet;

  00434	158a4000	 strne       r4, [r10]

; 596  :     }
; 597  : 
; 598  :     return(TRUE);

  00438	e3a00001	 mov         r0, #1
  0043c	ea000000	 b           |$LN56@HandleWave|
  00440		 |$LN97@HandleWave|
  00440	e51b002c	 ldr         r0, [r11, #-0x2C]
  00444		 |$LN56@HandleWave|

; 599  : }

  00444	e24bd028	 sub         sp, r11, #0x28
  00448	e89d6ff0	 ldmia       sp, {r4 - r11, sp, lr}
  0044c	e12fff1e	 bx          lr

			 ENDP  ; |?HandleWaveMessage@@YAHPAUMMDRV_MESSAGE_PARAMS@@PAK@Z|, HandleWaveMessage

  00450		 |$LN60@HandleWave|
  00450		 |$LN108@HandleWave|

; 585  :     _except (EXCEPTION_EXECUTE_HANDLER)

  00450	e52de004	 str         lr, [sp, #-4]!
  00454		 |$LN63@HandleWave|
  00454		 |$LN173@HandleWave|
  00454	e3a00001	 mov         r0, #1
  00458		 |$LN62@HandleWave|
  00458	e49df004	 ldr         pc, [sp], #4
  0045c		 |$LN175@HandleWave|
  0045c		 |$LN176@HandleWave|
  0045c	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  00460		 |$LN174@HandleWave|
  00460		 |$LN110@HandleWave|
	EXPORT	|WAV_IOControl|
	IMPORT	|?PmControlMessage@HardwareContext@@QAAHKPAEK0KPAK@Z| ; HardwareContext::PmControlMessage
	IMPORT	|?HandleMixerMessage@@YAHPAUMMDRV_MESSAGE_PARAMS@@PAK@Z| ; HandleMixerMessage
	IMPORT	|CeGetCallerTrust|

  00000			 AREA	 |.pdata|, PDATA
|$T35770| DCD	|$LN15@WAV_IOCont|
	DCD	0x40004102
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |WAV_IOControl| PROC

; 638  : {

  00000		 |$LN15@WAV_IOCont|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M35767|
  00008	e1a08003	 mov         r8, r3
  0000c	e1a07002	 mov         r7, r2
  00010	e1a06001	 mov         r6, r1
  00014	e1a04000	 mov         r4, r0

; 639  : 
; 640  :     // check caller trust. if context hasn't been initialized, load from CeGetCallerTrust.
; 641  :     if (*pdwOpenData != OEM_CERTIFY_TRUST) {

  00018	e594e000	 ldr         lr, [r4]
  0001c	e35e0002	 cmp         lr, #2
  00020	0a000007	 beq         |$LN6@WAV_IOCont|

; 642  :         if (OEM_CERTIFY_TRUST != (*pdwOpenData = CeGetCallerTrust())) {

  00024	eb000000	 bl          CeGetCallerTrust
  00028	e5840000	 str         r0, [r4]
  0002c	e3500002	 cmp         r0, #2
  00030	0a000003	 beq         |$LN6@WAV_IOCont|

; 643  :             PRINTMSG(ZONE_WARN, (TEXT("WAV_IoControl: untrusted process\r\n")));
; 644  :             SetLastError(ERROR_ACCESS_DENIED);

  00034	e3a00005	 mov         r0, #5
  00038	eb000000	 bl          SetLastError
  0003c		 |$LN12@WAV_IOCont|

; 645  :             return FALSE;

  0003c	e3a00000	 mov         r0, #0
  00040	ea000028	 b           |$LN8@WAV_IOCont|
  00044		 |$LN6@WAV_IOCont|
  00044	e3a0381d	 mov         r3, #0x1D, 16

; 646  :         }
; 647  :     }
; 648  : 
; 649  :     switch (dwCode)

  00048	e383300c	 orr         r3, r3, #0xC
  0004c	e1560003	 cmp         r6, r3
  00050	0a000021	 beq         |$LN2@WAV_IOCont|
  00054	e3a03832	 mov         r3, #0x32, 16
  00058	e3833a01	 orr         r3, r3, #1, 20
  0005c	e1560003	 cmp         r6, r3
  00060	0a000010	 beq         |$LN1@WAV_IOCont|
  00064	e59f3094	 ldr         r3, [pc, #0x94]
  00068	e1560003	 cmp         r6, r3
  0006c	0a00000d	 beq         |$LN1@WAV_IOCont|
  00070	e59f3084	 ldr         r3, [pc, #0x84]
  00074	e1560003	 cmp         r6, r3
  00078	0a00000a	 beq         |$LN1@WAV_IOCont|
  0007c	e59f3074	 ldr         r3, [pc, #0x74]
  00080	e1560003	 cmp         r6, r3
  00084	0a000007	 beq         |$LN1@WAV_IOCont|
  00088	e3a03102	 mov         r3, #2, 2
  0008c	e3833c01	 orr         r3, r3, #1, 24
  00090	e1560003	 cmp         r6, r3

; 664  :     }
; 665  : 
; 666  :     return(FALSE);

  00094	1affffe8	 bne         |$LN12@WAV_IOCont|
  00098	e59d1024	 ldr         r1, [sp, #0x24]
  0009c	e1a00007	 mov         r0, r7
  000a0	eb000000	 bl          |?HandleMixerMessage@@YAHPAUMMDRV_MESSAGE_PARAMS@@PAK@Z|
  000a4	ea00000f	 b           |$LN8@WAV_IOCont|
  000a8		 |$LN1@WAV_IOCont|

; 656  : 
; 657  :     // Power management functions.
; 658  :     case IOCTL_POWER_CAPABILITIES:
; 659  :     case IOCTL_POWER_QUERY:
; 660  :     case IOCTL_POWER_SET:
; 661  :     case IOCTL_POWER_GET:
; 662  :         return g_pHWContext->PmControlMessage
; 663  :                             (dwCode, pBufIn, dwLenIn, pBufOut, dwLenOut, pdwActualOut);

  000a8	e59f3044	 ldr         r3, [pc, #0x44]
  000ac	e59de02c	 ldr         lr, [sp, #0x2C]
  000b0	e59d4028	 ldr         r4, [sp, #0x28]
  000b4	e59d5024	 ldr         r5, [sp, #0x24]
  000b8	e5930000	 ldr         r0, [r3]
  000bc	e1a03008	 mov         r3, r8
  000c0	e1a02007	 mov         r2, r7
  000c4	e1a01006	 mov         r1, r6
  000c8	e58de008	 str         lr, [sp, #8]
  000cc	e58d4004	 str         r4, [sp, #4]
  000d0	e58d5000	 str         r5, [sp]
  000d4	eb000000	 bl          |?PmControlMessage@HardwareContext@@QAAHKPAEK0KPAK@Z|
  000d8	ea000002	 b           |$LN8@WAV_IOCont|
  000dc		 |$LN2@WAV_IOCont|

; 650  :     {
; 651  :     case IOCTL_MIX_MESSAGE:
; 652  :         return HandleMixerMessage((PMMDRV_MESSAGE_PARAMS)pBufIn, (DWORD *)pBufOut);
; 653  : 
; 654  :     case IOCTL_WAV_MESSAGE:
; 655  :         return HandleWaveMessage((PMMDRV_MESSAGE_PARAMS)pBufIn, (DWORD *)pBufOut);

  000dc	e59d1024	 ldr         r1, [sp, #0x24]
  000e0	e1a00007	 mov         r0, r7
  000e4	eb000000	 bl          |?HandleWaveMessage@@YAHPAUMMDRV_MESSAGE_PARAMS@@PAK@Z|
  000e8		 |$LN8@WAV_IOCont|

; 667  : }

  000e8	e28dd00c	 add         sp, sp, #0xC
  000ec	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  000f0	e12fff1e	 bx          lr
  000f4		 |$LN16@WAV_IOCont|
  000f4		 |$LN17@WAV_IOCont|
  000f4	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  000f8		 |$LN18@WAV_IOCont|
  000f8	0032100c	 DCD         0x32100c
  000fc		 |$LN19@WAV_IOCont|
  000fc	00321008	 DCD         0x321008
  00100		 |$LN20@WAV_IOCont|
  00100	00321004	 DCD         0x321004
  00104		 |$M35768|

			 ENDP  ; |WAV_IOControl|

	END
