; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\WAVEDEV2\mixerdrv.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_1BG@OGJPAHBK@?$AAM?$AAi?$AAc?$AAr?$AAo?$AAp?$AAh?$AAo?$AAn?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@BJPEGCKG@?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@KOFAABPH@?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@OALPFLIM@?$AAP?$AAl?$AAa?$AAy?$AAb?$AAa?$AAc?$AAk?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?m_cControls@MixerControlList@@0KB| [ DATA ] ; MixerControlList::m_cControls

  00000			 AREA	 |.bss|, NOINIT
|g_pMixerControlList| % 0x4

  00000			 AREA	 |.rdata|, DATA, READONLY
|?m_cControls@MixerControlList@@0KB| DCD 0x6		; MixerControlList::m_cControls

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@OGJPAHBK@?$AAM?$AAi?$AAc?$AAr?$AAo?$AAp?$AAh?$AAo?$AAn?$AAe?$AA?$AA@| DCB "M"
	DCB	0x0, "i", 0x0, "c", 0x0, "r", 0x0, "o", 0x0, "p", 0x0, "h"
	DCB	0x0, "o", 0x0, "n", 0x0, "e", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@BJPEGCKG@?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "c", 0x0, "o", 0x0, "r", 0x0, "d", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "C", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@KOFAABPH@?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "c", 0x0, "o", 0x0, "r", 0x0, "d", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "C", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@OALPFLIM@?$AAP?$AAl?$AAa?$AAy?$AAb?$AAa?$AAc?$AAk?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$AA@| DCB "P"
	DCB	0x0, "l", 0x0, "a", 0x0, "y", 0x0, "b", 0x0, "a", 0x0, "c"
	DCB	0x0, "k", 0x0, " ", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|g_dst_lines| DCW 0xff80
	DCW	0xff81
|g_PCM_IN_sources| DCW 0x8281
	%	2
|g_mixerline| DCD 0x4
	DCD	|??_C@_1CC@OALPFLIM@?$AAP?$AAl?$AAa?$AAy?$AAb?$AAa?$AAc?$AAk?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$AA@|
	DCD	|??_C@_1CC@OALPFLIM@?$AAP?$AAl?$AAa?$AAy?$AAb?$AAa?$AAc?$AAk?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCW	0xff80
	DCB	0x2
	DCB	0x0
	DCB	0x2
	%	3
	DCD	0x1
	DCB	0x0
	DCB	0xff
	%	2
	DCD	0x7
	DCD	|??_C@_1CA@KOFAABPH@?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AA?$AA@|
	DCD	|??_C@_1CE@BJPEGCKG@?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$AA@|
	DCD	0x1
	DCD	|g_PCM_IN_sources|
	DCW	0xff81
	DCB	0x2
	DCB	0x1
	DCB	0x4
	%	3
	DCD	0x2
	DCB	0x1
	DCB	0xff
	%	2
	DCD	0x1003
	DCD	|??_C@_1BG@OGJPAHBK@?$AAM?$AAi?$AAc?$AAr?$AAo?$AAp?$AAh?$AAo?$AAn?$AAe?$AA?$AA@|
	DCD	|??_C@_1BG@OGJPAHBK@?$AAM?$AAi?$AAc?$AAr?$AAo?$AAp?$AAh?$AAo?$AAn?$AAe?$AA?$AA@|
	DCD	0x80000001
	DCD	0x0
	DCW	0x8281
	DCB	0x1
	DCB	0x0
	DCB	0x2
	%	3
	DCD	0x2
	DCB	0x1
	DCB	0x1
	%	2
	EXPORT	|?LookupMxLine@@YAPBUtagMXLINEDESC@@G@Z| ; LookupMxLine
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\wavedev2\mixerdrv.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T36406| DCD	|$LN12@LookupMxLi|
	DCD	0x40001301
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?LookupMxLine@@YAPBUtagMXLINEDESC@@G@Z| PROC ; LookupMxLine

; 243  : {

  00000		 |$LN12@LookupMxLi|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36403|

; 244  :     // scan for mixer line
; 245  :     int Index;
; 246  :     for (Index = 0; Index < nlines; Index++)

  00004	e59fe03c	 ldr         lr, [pc, #0x3C]
  00008	e3a02000	 mov         r2, #0
  0000c	e1a0100e	 mov         r1, lr
  00010		 |$LL4@LookupMxLi|

; 247  :     {
; 248  :         if (g_mixerline[Index].usLineID == usLineID)

  00010	e1d131b4	 ldrh        r3, [r1, #0x14]
  00014	e1530000	 cmp         r3, r0
  00018	0a000006	 beq         |$LN8@LookupMxLi|
  0001c	e2822001	 add         r2, r2, #1
  00020	e3520003	 cmp         r2, #3
  00024	e2811024	 add         r1, r1, #0x24
  00028	bafffff8	 blt         |$LL4@LookupMxLi|

; 251  :         }
; 252  :     }
; 253  :     return NULL;

  0002c	e3a00000	 mov         r0, #0

; 254  : }

  00030	e49de004	 ldr         lr, [sp], #4
  00034	e12fff1e	 bx          lr
  00038		 |$LN8@LookupMxLi|

; 249  :         {
; 250  :             return &g_mixerline[Index];

  00038	e0823182	 add         r3, r2, r2, lsl #3
  0003c	e08e0103	 add         r0, lr, r3, lsl #2

; 254  : }

  00040	e49de004	 ldr         lr, [sp], #4
  00044	e12fff1e	 bx          lr
  00048		 |$LN13@LookupMxLi|
  00048		 |$LN14@LookupMxLi|
  00048	00000000	 DCD         |g_mixerline|
  0004c		 |$M36404|

			 ENDP  ; |?LookupMxLine@@YAPBUtagMXLINEDESC@@G@Z|, LookupMxLine

	EXPORT	|??0MixerControl@@QAA@XZ|		; MixerControl::MixerControl
	EXPORT	|??_7MixerControl@@6B@| [ DATA ]	; MixerControl::`vftable'
	EXPORT	|?SetControlID@MixerControl@@UAAXK@Z|	; MixerControl::SetControlID
	EXPORT	|?CopyMixerControl@MixerControl@@UAAXPAUtMIXERCONTROL@@@Z| ; MixerControl::CopyMixerControl
	EXPORT	|?GetControlDetails@MixerControl@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| ; MixerControl::GetControlDetails
	EXPORT	|?SetControlDetails@MixerControl@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| ; MixerControl::SetControlDetails
	IMPORT	|??_EMixerControl@@UAAPAXI@Z|, WEAK |??_GMixerControl@@UAAPAXI@Z| ; MixerControl::`vector deleting destructor', MixerControl::`scalar deleting destructor'
	IMPORT	|_purecall|

  00000			 AREA	 |.pdata|, PDATA
|$T36418| DCD	|$LN5@MixerContr|
	DCD	0x40000600

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7MixerControl@@6B@| DCD |??_EMixerControl@@UAAPAXI@Z| ; MixerControl::`vftable'
	DCD	|?SetControlID@MixerControl@@UAAXK@Z|
	DCD	|?CopyMixerControl@MixerControl@@UAAXPAUtMIXERCONTROL@@@Z|
	DCD	|?GetControlDetails@MixerControl@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?SetControlDetails@MixerControl@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|_purecall|
	DCD	|_purecall|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0MixerControl@@QAA@XZ| PROC		; MixerControl::MixerControl

; 260  :     MixerControl() : m_dwControlID((DWORD)-1) {}

  00000		 |$LN5@MixerContr|
  00000		 |$M36415|
  00000	e59f300c	 ldr         r3, [pc, #0xC]
  00004	e3e02000	 mvn         r2, #0
  00008	e5802004	 str         r2, [r0, #4]
  0000c	e5803000	 str         r3, [r0]
  00010	e12fff1e	 bx          lr
  00014		 |$LN6@MixerContr|
  00014		 |$LN7@MixerContr|
  00014	00000000	 DCD         |??_7MixerControl@@6B@|
  00018		 |$M36416|

			 ENDP  ; |??0MixerControl@@QAA@XZ|, MixerControl::MixerControl

	EXPORT	|??1MixerControl@@UAA@XZ|		; MixerControl::~MixerControl

  00000			 AREA	 |.pdata|, PDATA
|$T36428| DCD	|$LN5@MixerContr@2|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1MixerControl@@UAA@XZ| PROC		; MixerControl::~MixerControl

; 261  :     virtual ~MixerControl() {}

  00000		 |$LN5@MixerContr@2|
  00000		 |$M36425|
  00000	e59f3004	 ldr         r3, [pc, #4]
  00004	e5803000	 str         r3, [r0]
  00008	e12fff1e	 bx          lr
  0000c		 |$LN6@MixerContr@2|
  0000c		 |$LN7@MixerContr@2|
  0000c	00000000	 DCD         |??_7MixerControl@@6B@|
  00010		 |$M36426|

			 ENDP  ; |??1MixerControl@@UAA@XZ|, MixerControl::~MixerControl


  00000			 AREA	 |.pdata|, PDATA
|$T36439| DCD	|$LN5@SetControl|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetControlID@MixerControl@@UAAXK@Z| PROC ; MixerControl::SetControlID

; 263  :     virtual void SetControlID(DWORD dwControlID) {m_dwControlID = dwControlID;}

  00000		 |$LN5@SetControl|
  00000		 |$M36436|
  00000	e5801004	 str         r1, [r0, #4]
  00004	e12fff1e	 bx          lr
  00008		 |$M36437|

			 ENDP  ; |?SetControlID@MixerControl@@UAAXK@Z|, MixerControl::SetControlID

	EXPORT	|?GetControlID@MixerControl@@QAAKXZ|	; MixerControl::GetControlID

  00000			 AREA	 |.pdata|, PDATA
|$T36449| DCD	|$LN5@GetControl|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetControlID@MixerControl@@QAAKXZ| PROC ; MixerControl::GetControlID

; 264  :     DWORD GetControlID() {return m_dwControlID;}

  00000		 |$LN5@GetControl|
  00000		 |$M36446|
  00000	e5900004	 ldr         r0, [r0, #4]
  00004	e12fff1e	 bx          lr
  00008		 |$M36447|

			 ENDP  ; |?GetControlID@MixerControl@@QAAKXZ|, MixerControl::GetControlID


  00000			 AREA	 |.pdata|, PDATA
|$T36462| DCD	|$LN7@CopyMixerC|
	DCD	0x40001e01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CopyMixerControl@MixerControl@@UAAXPAUtMIXERCONTROL@@@Z| PROC ; MixerControl::CopyMixerControl

; 267  :     {

  00000		 |$LN7@CopyMixerC|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M36459|
  00004	e1a07001	 mov         r7, r1
  00008	e1a06000	 mov         r6, r0

; 268  :         pamxctrl->cbStruct = sizeof(MIXERCONTROL);

  0000c	e3a030e4	 mov         r3, #0xE4
  00010	e5c73000	 strb        r3, [r7]
  00014	e3a03000	 mov         r3, #0
  00018	e5c73001	 strb        r3, [r7, #1]
  0001c	e5c73002	 strb        r3, [r7, #2]
  00020	e5c73003	 strb        r3, [r7, #3]

; 269  :         pamxctrl->dwControlID = GetControlID();

  00024	e5965004	 ldr         r5, [r6, #4]

; 270  :         pamxctrl->dwControlType = GetControlType();

  00028	e1a03425	 mov         r3, r5, lsr #8
  0002c	e1a02825	 mov         r2, r5, lsr #16
  00030	e1a04c25	 mov         r4, r5, lsr #24
  00034	e5c73005	 strb        r3, [r7, #5]
  00038	e5c72006	 strb        r2, [r7, #6]
  0003c	e5c74007	 strb        r4, [r7, #7]
  00040	e5c75004	 strb        r5, [r7, #4]
  00044	e5963000	 ldr         r3, [r6]
  00048	e5933014	 ldr         r3, [r3, #0x14]
  0004c	e1a0e00f	 mov         lr, pc
  00050	e12fff13	 bx          r3
  00054	e1a03420	 mov         r3, r0, lsr #8
  00058	e1a02820	 mov         r2, r0, lsr #16
  0005c	e1a01c20	 mov         r1, r0, lsr #24
  00060	e5c73009	 strb        r3, [r7, #9]
  00064	e5c7200a	 strb        r2, [r7, #0xA]
  00068	e5c7100b	 strb        r1, [r7, #0xB]
  0006c	e5c70008	 strb        r0, [r7, #8]

; 271  :     }

  00070	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00074	e12fff1e	 bx          lr
  00078		 |$M36460|

			 ENDP  ; |?CopyMixerControl@MixerControl@@UAAXPAUtMIXERCONTROL@@@Z|, MixerControl::CopyMixerControl


  00000			 AREA	 |.pdata|, PDATA
|$T36471| DCD	|$LN5@GetControl@2|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetControlDetails@MixerControl@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| PROC ; MixerControl::GetControlDetails

; 273  :     virtual DWORD GetControlDetails (PMIXERCONTROLDETAILS pDetail, DWORD dwFlags) {UNREFERENCED_PARAMETER(pDetail); UNREFERENCED_PARAMETER(dwFlags); return MMSYSERR_NOTSUPPORTED;}

  00000		 |$LN5@GetControl@2|
  00000		 |$M36468|
  00000	e3a00008	 mov         r0, #8
  00004	e12fff1e	 bx          lr
  00008		 |$M36469|

			 ENDP  ; |?GetControlDetails@MixerControl@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|, MixerControl::GetControlDetails


  00000			 AREA	 |.pdata|, PDATA
|$T36480| DCD	|$LN5@SetControl@2|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetControlDetails@MixerControl@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| PROC ; MixerControl::SetControlDetails

; 274  :     virtual DWORD SetControlDetails (PMIXERCONTROLDETAILS pDetail, DWORD dwFlags) {UNREFERENCED_PARAMETER(pDetail); UNREFERENCED_PARAMETER(dwFlags); return MMSYSERR_NOTSUPPORTED;}

  00000		 |$LN5@SetControl@2|
  00000		 |$M36477|
  00000	e3a00008	 mov         r0, #8
  00004	e12fff1e	 bx          lr
  00008		 |$M36478|

			 ENDP  ; |?SetControlDetails@MixerControl@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|, MixerControl::SetControlDetails

	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$T36494| DCD	|$LN8@scalar|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GMixerControl@@UAAPAXI@Z| PROC	; MixerControl::`scalar deleting destructor'
  00000		 |$LN8@scalar|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M36491|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3014	 ldr         r3, [pc, #0x14]
  0000c	e3110001	 tst         r1, #1
  00010	e5843000	 str         r3, [r4]
  00014	1b000000	 blne        |??3@YAXPAX@Z|
  00018	e1a00004	 mov         r0, r4
  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$LN9@scalar|
  00024		 |$LN10@scalar|
  00024	00000000	 DCD         |??_7MixerControl@@6B@|
  00028		 |$M36492|

			 ENDP  ; |??_GMixerControl@@UAAPAXI@Z|, MixerControl::`scalar deleting destructor'

	EXPORT	|??0MixerControlVolume@@QAA@XZ|		; MixerControlVolume::MixerControlVolume
	EXPORT	|??_7MixerControlVolume@@6B@| [ DATA ]	; MixerControlVolume::`vftable'
	EXPORT	|?CopyMixerControl@MixerControlVolume@@UAAXPAUtMIXERCONTROL@@@Z| ; MixerControlVolume::CopyMixerControl
	EXPORT	|?GetControlDetails@MixerControlVolume@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| ; MixerControlVolume::GetControlDetails
	EXPORT	|?SetControlDetails@MixerControlVolume@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| ; MixerControlVolume::SetControlDetails
	EXPORT	|?GetControlType@MixerControlVolume@@UAAKXZ| ; MixerControlVolume::GetControlType
	IMPORT	|??_EMixerControlVolume@@UAAPAXI@Z|, WEAK |??_GMixerControlVolume@@UAAPAXI@Z| ; MixerControlVolume::`vector deleting destructor', MixerControlVolume::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T36509| DCD	|$LN7@MixerContr@3|
	DCD	0x40000600

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7MixerControlVolume@@6B@| DCD |??_EMixerControlVolume@@UAAPAXI@Z| ; MixerControlVolume::`vftable'
	DCD	|?SetControlID@MixerControl@@UAAXK@Z|
	DCD	|?CopyMixerControl@MixerControlVolume@@UAAXPAUtMIXERCONTROL@@@Z|
	DCD	|?GetControlDetails@MixerControlVolume@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?SetControlDetails@MixerControlVolume@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?GetControlType@MixerControlVolume@@UAAKXZ|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0MixerControlVolume@@QAA@XZ| PROC	; MixerControlVolume::MixerControlVolume

; 292  :     MixerControlVolume() : MixerControl() {}

  00000		 |$LN7@MixerContr@3|
  00000		 |$M36506|
  00000	e59f300c	 ldr         r3, [pc, #0xC]
  00004	e3e02000	 mvn         r2, #0
  00008	e5802004	 str         r2, [r0, #4]
  0000c	e5803000	 str         r3, [r0]
  00010	e12fff1e	 bx          lr
  00014		 |$LN8@MixerContr@3|
  00014		 |$LN9@MixerContr@3|
  00014	00000000	 DCD         |??_7MixerControlVolume@@6B@|
  00018		 |$M36507|

			 ENDP  ; |??0MixerControlVolume@@QAA@XZ|, MixerControlVolume::MixerControlVolume


  00000			 AREA	 |.pdata|, PDATA
|$T36520| DCD	|$LN5@CopyMixerC@2|
	DCD	0x40001c01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CopyMixerControl@MixerControlVolume@@UAAXPAUtMIXERCONTROL@@@Z| PROC ; MixerControlVolume::CopyMixerControl

; 295  :     {

  00000		 |$LN5@CopyMixerC@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M36517|
  00004	e1a04001	 mov         r4, r1

; 296  :         MixerControl::CopyMixerControl(pamxctrl);

  00008	eb000000	 bl          |?CopyMixerControl@MixerControl@@UAAXPAUtMIXERCONTROL@@@Z|

; 297  : 
; 298  :         pamxctrl->fdwControl = 0;
; 299  :         pamxctrl->cMultipleItems = 0;
; 300  :         pamxctrl->Bounds.dwMinimum = LOGICAL_VOLUME_MIN;
; 301  :         pamxctrl->Bounds.dwMaximum = LOGICAL_VOLUME_MAX;
; 302  :         pamxctrl->Metrics.cSteps =  LOGICAL_VOLUME_STEPS;

  0000c	e3a03001	 mov         r3, #1
  00010	e3a01000	 mov         r1, #0
  00014	e3a020ff	 mov         r2, #0xFF
  00018	e5c430cc	 strb        r3, [r4, #0xCC]
  0001c	e5c4100c	 strb        r1, [r4, #0xC]
  00020	e5c4100d	 strb        r1, [r4, #0xD]
  00024	e5c4100e	 strb        r1, [r4, #0xE]
  00028	e5c4100f	 strb        r1, [r4, #0xF]
  0002c	e5c41010	 strb        r1, [r4, #0x10]
  00030	e5c41011	 strb        r1, [r4, #0x11]
  00034	e5c41012	 strb        r1, [r4, #0x12]
  00038	e5c41013	 strb        r1, [r4, #0x13]
  0003c	e5c410b4	 strb        r1, [r4, #0xB4]
  00040	e5c410b5	 strb        r1, [r4, #0xB5]
  00044	e5c410b6	 strb        r1, [r4, #0xB6]
  00048	e5c410b7	 strb        r1, [r4, #0xB7]
  0004c	e5c420b8	 strb        r2, [r4, #0xB8]
  00050	e5c420b9	 strb        r2, [r4, #0xB9]
  00054	e5c410ba	 strb        r1, [r4, #0xBA]
  00058	e5c410bb	 strb        r1, [r4, #0xBB]
  0005c	e5c410cd	 strb        r1, [r4, #0xCD]
  00060	e5c410ce	 strb        r1, [r4, #0xCE]
  00064	e5c410cf	 strb        r1, [r4, #0xCF]

; 303  :     }

  00068	e8bd4010	 ldmia       sp!, {r4, lr}
  0006c	e12fff1e	 bx          lr
  00070		 |$M36518|

			 ENDP  ; |?CopyMixerControl@MixerControlVolume@@UAAXPAUtMIXERCONTROL@@@Z|, MixerControlVolume::CopyMixerControl


  00000			 AREA	 |.pdata|, PDATA
|$T36529| DCD	|$LN5@GetControl@3|
	DCD	0x40000300
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetControlType@MixerControlVolume@@UAAKXZ| PROC ; MixerControlVolume::GetControlType

; 306  :     {

  00000		 |$LN5@GetControl@3|
  00000		 |$M36526|
  00000	e3a03215	 mov         r3, #0x15, 4

; 307  :         return MIXERCONTROL_CONTROLTYPE_VOLUME;

  00004	e3830803	 orr         r0, r3, #3, 16

; 308  :     }

  00008	e12fff1e	 bx          lr
  0000c		 |$M36527|

			 ENDP  ; |?GetControlType@MixerControlVolume@@UAAKXZ|, MixerControlVolume::GetControlType


  00000			 AREA	 |.pdata|, PDATA
|$T36546| DCD	|$LN10@GetControl@4|
	DCD	0x40003e01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetControlDetails@MixerControlVolume@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| PROC ; MixerControlVolume::GetControlDetails

; 315  :     {

  00000		 |$LN10@GetControl@4|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M36543|
  00004	e1a08001	 mov         r8, r1
  00008	e1a04000	 mov         r4, r0

; 316  : 		UNREFERENCED_PARAMETER(dwFlags);
; 317  : 
; 318  :         PMXLINEDESC pLine = LookupMxLine(GetLineID());

  0000c	e5943000	 ldr         r3, [r4]
  00010	e5933018	 ldr         r3, [r3, #0x18]
  00014	e1a0e00f	 mov         lr, pc
  00018	e12fff13	 bx          r3
  0001c	e1a00800	 mov         r0, r0, lsl #16
  00020	e1a00820	 mov         r0, r0, lsr #16
  00024	eb000000	 bl          |?LookupMxLine@@YAPBUtagMXLINEDESC@@G@Z|

; 319  : 
; 320  :         ULONG ulControlValue = GetGain();

  00028	e5943000	 ldr         r3, [r4]
  0002c	e1a05000	 mov         r5, r0
  00030	e1a00004	 mov         r0, r4
  00034	e5933020	 ldr         r3, [r3, #0x20]
  00038	e1a0e00f	 mov         lr, pc
  0003c	e12fff13	 bx          r3

; 321  : 
; 322  :         MIXERCONTROLDETAILS_UNSIGNED * pValue = (MIXERCONTROLDETAILS_UNSIGNED * ) pDetail->paDetails;

  00040	e5d82014	 ldrb        r2, [r8, #0x14]
  00044	e5d83015	 ldrb        r3, [r8, #0x15]
  00048	e5d8e016	 ldrb        lr, [r8, #0x16]

; 323  :         ULONG ulVolR, ulVolL;
; 324  : 
; 325  :         // Low order word is left channel setting
; 326  :         ulVolL = ulControlValue & 0xffff;
; 327  :         if (pLine->ucChannels == 2)

  0004c	e5d55016	 ldrb        r5, [r5, #0x16]
  00050	e1823403	 orr         r3, r2, r3, lsl #8
  00054	e5d84017	 ldrb        r4, [r8, #0x17]
  00058	e3a01cff	 mov         r1, #0xFF, 24
  0005c	e183280e	 orr         r2, r3, lr, lsl #16
  00060	e38130ff	 orr         r3, r1, #0xFF
  00064	e3550002	 cmp         r5, #2
  00068	e0007003	 and         r7, r0, r3

; 328  :         {
; 329  :             ulVolR = (ulControlValue >> 16) & 0xffff;
; 330  :         }
; 331  :         else
; 332  :         {
; 333  :             ulVolR = ulVolL;
; 334  :         }
; 335  : 
; 336  :         if (pDetail->cChannels == 1)

  0006c	e5d83009	 ldrb        r3, [r8, #9]
  00070	01a05820	 moveq       r5, r0, lsr #16
  00074	e5d80008	 ldrb        r0, [r8, #8]
  00078	e1826c04	 orr         r6, r2, r4, lsl #24
  0007c	e5d8200a	 ldrb        r2, [r8, #0xA]
  00080	e5d8100b	 ldrb        r1, [r8, #0xB]
  00084	e1803403	 orr         r3, r0, r3, lsl #8
  00088	e1833802	 orr         r3, r3, r2, lsl #16
  0008c	e1833c01	 orr         r3, r3, r1, lsl #24
  00090	11a05007	 movne       r5, r7
  00094	e3530001	 cmp         r3, #1

; 337  :         {
; 338  :             pValue[0].dwValue = (ulVolR + ulVolL)/2;

  00098	00853007	 addeq       r3, r5, r7
  0009c	01a000a3	 moveq       r0, r3, lsr #1
  000a0	01a03420	 moveq       r3, r0, lsr #8
  000a4	01a02820	 moveq       r2, r0, lsr #16
  000a8	01a01c20	 moveq       r1, r0, lsr #24
  000ac	05c60000	 streqb      r0, [r6]
  000b0	0a00000a	 beq         |$LN7@GetControl@4|

; 339  :         }
; 340  :         else
; 341  :         {
; 342  :             pValue[0].dwValue = ulVolL;
; 343  :             pValue[1].dwValue = ulVolR;

  000b4	e1a00425	 mov         r0, r5, lsr #8
  000b8	e1a0e825	 mov         lr, r5, lsr #16
  000bc	e1a04c25	 mov         r4, r5, lsr #24
  000c0	e5c60005	 strb        r0, [r6, #5]
  000c4	e5c6e006	 strb        lr, [r6, #6]
  000c8	e5c64007	 strb        r4, [r6, #7]
  000cc	e1a03427	 mov         r3, r7, lsr #8
  000d0	e1a02827	 mov         r2, r7, lsr #16
  000d4	e1a01c27	 mov         r1, r7, lsr #24
  000d8	e5c67000	 strb        r7, [r6]
  000dc	e5c65004	 strb        r5, [r6, #4]
  000e0		 |$LN7@GetControl@4|
  000e0	e5c61003	 strb        r1, [r6, #3]
  000e4	e5c62002	 strb        r2, [r6, #2]
  000e8	e5c63001	 strb        r3, [r6, #1]

; 344  :         }
; 345  : 
; 346  :         return MMSYSERR_NOERROR;

  000ec	e3a00000	 mov         r0, #0

; 347  :     }

  000f0	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  000f4	e12fff1e	 bx          lr
  000f8		 |$M36544|

			 ENDP  ; |?GetControlDetails@MixerControlVolume@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|, MixerControlVolume::GetControlDetails


  00000			 AREA	 |.pdata|, PDATA
|$T36562| DCD	|$LN11@SetControl@3|
	DCD	0x40003e01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetControlDetails@MixerControlVolume@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| PROC ; MixerControlVolume::SetControlDetails

; 350  :     {

  00000		 |$LN11@SetControl@3|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004		 |$M36559|
  00004	e1a06001	 mov         r6, r1
  00008	e1a09000	 mov         r9, r0

; 351  : 		UNREFERENCED_PARAMETER(dwFlags);
; 352  : 
; 353  :         PMXLINEDESC pLine = LookupMxLine(GetLineID());

  0000c	e5993000	 ldr         r3, [r9]
  00010	e5933018	 ldr         r3, [r3, #0x18]
  00014	e1a0e00f	 mov         lr, pc
  00018	e12fff13	 bx          r3
  0001c	e1a00800	 mov         r0, r0, lsl #16
  00020	e1a00820	 mov         r0, r0, lsr #16
  00024	eb000000	 bl          |?LookupMxLine@@YAPBUtagMXLINEDESC@@G@Z|

; 354  : 
; 355  :         MIXERCONTROLDETAILS_UNSIGNED * pValue = (MIXERCONTROLDETAILS_UNSIGNED * ) pDetail->paDetails;

  00028	e5d64014	 ldrb        r4, [r6, #0x14]
  0002c	e5d63015	 ldrb        r3, [r6, #0x15]
  00030	e5d62016	 ldrb        r2, [r6, #0x16]
  00034	e5d6e017	 ldrb        lr, [r6, #0x17]
  00038	e1843403	 orr         r3, r4, r3, lsl #8
  0003c	e1833802	 orr         r3, r3, r2, lsl #16

; 356  :         DWORD dwSetting, dwSettingL, dwSettingR;
; 357  :         dwSettingL = pValue[0].dwValue;
; 358  : 
; 359  :         // setting might be mono or stereo. For mono, apply same volume to both channels
; 360  :         if (pDetail->cChannels == 2)

  00040	e5d67008	 ldrb        r7, [r6, #8]
  00044	e1838c0e	 orr         r8, r3, lr, lsl #24
  00048	e5d63009	 ldrb        r3, [r6, #9]
  0004c	e5d6400a	 ldrb        r4, [r6, #0xA]
  00050	e5d6600b	 ldrb        r6, [r6, #0xB]
  00054	e5d8e000	 ldrb        lr, [r8]
  00058	e5d82001	 ldrb        r2, [r8, #1]
  0005c	e1873403	 orr         r3, r7, r3, lsl #8
  00060	e5d85002	 ldrb        r5, [r8, #2]
  00064	e1833804	 orr         r3, r3, r4, lsl #16
  00068	e5d81003	 ldrb        r1, [r8, #3]
  0006c	e1833c06	 orr         r3, r3, r6, lsl #24
  00070	e18e2402	 orr         r2, lr, r2, lsl #8
  00074	e3530002	 cmp         r3, #2

; 361  :         {
; 362  :             dwSettingR = pValue[1].dwValue;

  00078	05d8e004	 ldreqb      lr, [r8, #4]
  0007c	05d83005	 ldreqb      r3, [r8, #5]
  00080	e1822805	 orr         r2, r2, r5, lsl #16
  00084	e1824c01	 orr         r4, r2, r1, lsl #24
  00088	05d82006	 ldreqb      r2, [r8, #6]
  0008c	05d81007	 ldreqb      r1, [r8, #7]
  00090	018e3403	 orreq       r3, lr, r3, lsl #8
  00094	01833802	 orreq       r3, r3, r2, lsl #16
  00098	01832c01	 orreq       r2, r3, r1, lsl #24

; 363  :         }
; 364  :         else
; 365  :         {
; 366  :             dwSettingR = dwSettingL;
; 367  :         }
; 368  : 
; 369  :         if ( (dwSettingL > LOGICAL_VOLUME_MAX) || (dwSettingR > LOGICAL_VOLUME_MAX) )

  0009c	e3a03cff	 mov         r3, #0xFF, 24
  000a0	e38330ff	 orr         r3, r3, #0xFF
  000a4	11a02004	 movne       r2, r4
  000a8	e1540003	 cmp         r4, r3
  000ac	8a00000e	 bhi         |$LN3@SetControl@3|
  000b0	e1520003	 cmp         r2, r3
  000b4	8a00000c	 bhi         |$LN3@SetControl@3|

; 373  :         }
; 374  : 
; 375  :         if (pLine->ucChannels == 1)

  000b8	e5d03016	 ldrb        r3, [r0, #0x16]

; 376  :         {
; 377  :             dwSetting = (dwSettingL + dwSettingR) / 2;
; 378  :         }
; 379  :         else
; 380  :         {
; 381  :             // Low order word is left channel setting
; 382  :             dwSetting = (dwSettingR << 16) | dwSettingL;
; 383  :         }
; 384  : 
; 385  :         SetGain(dwSetting);

  000bc	e1a00009	 mov         r0, r9
  000c0	e3530001	 cmp         r3, #1
  000c4	00823004	 addeq       r3, r2, r4
  000c8	01a010a3	 moveq       r1, r3, lsr #1
  000cc	e5993000	 ldr         r3, [r9]
  000d0	11841802	 orrne       r1, r4, r2, lsl #16
  000d4	e593301c	 ldr         r3, [r3, #0x1C]
  000d8	e1a0e00f	 mov         lr, pc
  000dc	e12fff13	 bx          r3

; 386  : 
; 387  :         return MMSYSERR_NOERROR;

  000e0	e3a00000	 mov         r0, #0

; 388  :     }

  000e4	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  000e8	e12fff1e	 bx          lr
  000ec		 |$LN3@SetControl@3|

; 370  :         {
; 371  :             DEBUGMSG(ZONE_ERROR, (TEXT("SetMixerControlDetails: Volume exceeds bounds\r\n")));
; 372  :             return MMSYSERR_INVALPARAM;

  000ec	e3a0000b	 mov         r0, #0xB

; 388  :     }

  000f0	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  000f4	e12fff1e	 bx          lr
  000f8		 |$M36560|

			 ENDP  ; |?SetControlDetails@MixerControlVolume@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|, MixerControlVolume::SetControlDetails

	EXPORT	|??1MixerControlVolume@@UAA@XZ|		; MixerControlVolume::~MixerControlVolume

  00000			 AREA	 |.pdata|, PDATA
|$T36573| DCD	|$LN7@MixerContr@4|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1MixerControlVolume@@UAA@XZ| PROC	; MixerControlVolume::~MixerControlVolume
  00000		 |$LN7@MixerContr@4|
  00000		 |$M36570|
  00000	e59f3004	 ldr         r3, [pc, #4]
  00004	e5803000	 str         r3, [r0]
  00008	e12fff1e	 bx          lr
  0000c		 |$LN8@MixerContr@4|
  0000c		 |$LN9@MixerContr@4|
  0000c	00000000	 DCD         |??_7MixerControl@@6B@|
  00010		 |$M36571|

			 ENDP  ; |??1MixerControlVolume@@UAA@XZ|, MixerControlVolume::~MixerControlVolume

	EXPORT	|??0MixerControlVolumeMaster@@QAA@XZ|	; MixerControlVolumeMaster::MixerControlVolumeMaster
	EXPORT	|??_7MixerControlVolumeMaster@@6B@| [ DATA ] ; MixerControlVolumeMaster::`vftable'
	EXPORT	|?CopyMixerControl@MixerControlVolumeMaster@@UAAXPAUtMIXERCONTROL@@@Z| ; MixerControlVolumeMaster::CopyMixerControl
	EXPORT	|?GetLineID@MixerControlVolumeMaster@@UAAGXZ| ; MixerControlVolumeMaster::GetLineID
	EXPORT	|?SetGain@MixerControlVolumeMaster@@UAAXK@Z| ; MixerControlVolumeMaster::SetGain
	EXPORT	|?GetGain@MixerControlVolumeMaster@@UAAKXZ| ; MixerControlVolumeMaster::GetGain
	IMPORT	|??_EMixerControlVolumeMaster@@UAAPAXI@Z|, WEAK |??_GMixerControlVolumeMaster@@UAAPAXI@Z| ; MixerControlVolumeMaster::`vector deleting destructor', MixerControlVolumeMaster::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T36593| DCD	|$LN9@MixerContr@5|
	DCD	0x40000600

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7MixerControlVolumeMaster@@6B@| DCD |??_EMixerControlVolumeMaster@@UAAPAXI@Z| ; MixerControlVolumeMaster::`vftable'
	DCD	|?SetControlID@MixerControl@@UAAXK@Z|
	DCD	|?CopyMixerControl@MixerControlVolumeMaster@@UAAXPAUtMIXERCONTROL@@@Z|
	DCD	|?GetControlDetails@MixerControlVolume@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?SetControlDetails@MixerControlVolume@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?GetControlType@MixerControlVolume@@UAAKXZ|
	DCD	|?GetLineID@MixerControlVolumeMaster@@UAAGXZ|
	DCD	|?SetGain@MixerControlVolumeMaster@@UAAXK@Z|
	DCD	|?GetGain@MixerControlVolumeMaster@@UAAKXZ|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0MixerControlVolumeMaster@@QAA@XZ| PROC ; MixerControlVolumeMaster::MixerControlVolumeMaster

; 396  :     MixerControlVolumeMaster() : MixerControlVolume() {}

  00000		 |$LN9@MixerContr@5|
  00000		 |$M36590|
  00000	e59f300c	 ldr         r3, [pc, #0xC]
  00004	e3e02000	 mvn         r2, #0
  00008	e5802004	 str         r2, [r0, #4]
  0000c	e5803000	 str         r3, [r0]
  00010	e12fff1e	 bx          lr
  00014		 |$LN10@MixerContr@5|
  00014		 |$LN11@MixerContr@5|
  00014	00000000	 DCD         |??_7MixerControlVolumeMaster@@6B@|
  00018		 |$M36591|

			 ENDP  ; |??0MixerControlVolumeMaster@@QAA@XZ|, MixerControlVolumeMaster::MixerControlVolumeMaster

	EXPORT	|??_C@_1BM@DBCMFCBE@?$AAM?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAV?$AAo?$AAl?$AAu?$AAm?$AAe?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|wcscpy|

  00000			 AREA	 |.pdata|, PDATA
|$T36605| DCD	|$LN5@CopyMixerC@3|
	DCD	0x40000c01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@DBCMFCBE@?$AAM?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAV?$AAo?$AAl?$AAu?$AAm?$AAe?$AA?$AA@| DCB "M"
	DCB	0x0, "a", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "V", 0x0, "o", 0x0, "l", 0x0, "u", 0x0, "m", 0x0, "e"
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CopyMixerControl@MixerControlVolumeMaster@@UAAXPAUtMIXERCONTROL@@@Z| PROC ; MixerControlVolumeMaster::CopyMixerControl

; 399  :     {

  00000		 |$LN5@CopyMixerC@3|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M36602|
  00004	e1a04001	 mov         r4, r1

; 400  :         MixerControlVolume::CopyMixerControl(pamxctrl);

  00008	eb000000	 bl          |?CopyMixerControl@MixerControlVolume@@UAAXPAUtMIXERCONTROL@@@Z|

; 401  :         wcscpy(pamxctrl->szName, TEXT("Master Volume"));

  0000c	e59f1018	 ldr         r1, [pc, #0x18]
  00010	e2840034	 add         r0, r4, #0x34
  00014	eb000000	 bl          wcscpy

; 402  :         wcscpy(pamxctrl->szShortName, TEXT("Master Volume"));

  00018	e59f100c	 ldr         r1, [pc, #0xC]
  0001c	e2840014	 add         r0, r4, #0x14
  00020	eb000000	 bl          wcscpy

; 403  :     }

  00024	e8bd4010	 ldmia       sp!, {r4, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$LN6@CopyMixerC@3|
  0002c		 |$LN7@CopyMixerC@3|
  0002c	00000000	 DCD         |??_C@_1BM@DBCMFCBE@?$AAM?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAV?$AAo?$AAl?$AAu?$AAm?$AAe?$AA?$AA@|
  00030		 |$M36603|

			 ENDP  ; |?CopyMixerControl@MixerControlVolumeMaster@@UAAXPAUtMIXERCONTROL@@@Z|, MixerControlVolumeMaster::CopyMixerControl


  00000			 AREA	 |.pdata|, PDATA
|$T36616| DCD	|$LN5@GetLineID|
	DCD	0x40000300
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetLineID@MixerControlVolumeMaster@@UAAGXZ| PROC ; MixerControlVolumeMaster::GetLineID

; 404  :     USHORT GetLineID() {return MXLINEID(LINE_OUT,NOLINE);}

  00000		 |$LN5@GetLineID|
  00000		 |$M36613|
  00000	e3a03cff	 mov         r3, #0xFF, 24
  00004	e3830080	 orr         r0, r3, #0x80
  00008	e12fff1e	 bx          lr
  0000c		 |$M36614|

			 ENDP  ; |?GetLineID@MixerControlVolumeMaster@@UAAGXZ|, MixerControlVolumeMaster::GetLineID

	IMPORT	|?SetOutputGain@HardwareContext@@QAAIK@Z| ; HardwareContext::SetOutputGain
	IMPORT	|?g_pHWContext@@3PAVHardwareContext@@A|	; g_pHWContext

  00000			 AREA	 |.pdata|, PDATA
|$T36624| DCD	|$LN5@SetGain|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetGain@MixerControlVolumeMaster@@UAAXK@Z| PROC ; MixerControlVolumeMaster::SetGain

; 407  :     {

  00000		 |$LN5@SetGain|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36621|

; 408  :         g_pHWContext->SetOutputGain(dwSetting);

  00004	e59f300c	 ldr         r3, [pc, #0xC]
  00008	e5930000	 ldr         r0, [r3]
  0000c	eb000000	 bl          |?SetOutputGain@HardwareContext@@QAAIK@Z|

; 409  :     }

  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$LN6@SetGain|
  00018		 |$LN7@SetGain|
  00018	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  0001c		 |$M36622|

			 ENDP  ; |?SetGain@MixerControlVolumeMaster@@UAAXK@Z|, MixerControlVolumeMaster::SetGain

	IMPORT	|?GetOutputGain@HardwareContext@@QAAKXZ| ; HardwareContext::GetOutputGain

  00000			 AREA	 |.pdata|, PDATA
|$T36635| DCD	|$LN5@GetGain|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetGain@MixerControlVolumeMaster@@UAAKXZ| PROC ; MixerControlVolumeMaster::GetGain

; 412  :     {

  00000		 |$LN5@GetGain|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36632|

; 413  :         return g_pHWContext->GetOutputGain();

  00004	e59f300c	 ldr         r3, [pc, #0xC]
  00008	e5930000	 ldr         r0, [r3]
  0000c	eb000000	 bl          |?GetOutputGain@HardwareContext@@QAAKXZ|

; 414  :     }

  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$LN6@GetGain|
  00018		 |$LN7@GetGain|
  00018	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  0001c		 |$M36633|

			 ENDP  ; |?GetGain@MixerControlVolumeMaster@@UAAKXZ|, MixerControlVolumeMaster::GetGain

	EXPORT	|??1MixerControlVolumeMaster@@UAA@XZ|	; MixerControlVolumeMaster::~MixerControlVolumeMaster

  00000			 AREA	 |.pdata|, PDATA
|$T36653| DCD	|$LN9@MixerContr@6|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1MixerControlVolumeMaster@@UAA@XZ| PROC ; MixerControlVolumeMaster::~MixerControlVolumeMaster
  00000		 |$LN9@MixerContr@6|
  00000		 |$M36650|
  00000	e59f3004	 ldr         r3, [pc, #4]
  00004	e5803000	 str         r3, [r0]
  00008	e12fff1e	 bx          lr
  0000c		 |$LN10@MixerContr@6|
  0000c		 |$LN11@MixerContr@6|
  0000c	00000000	 DCD         |??_7MixerControl@@6B@|
  00010		 |$M36651|

			 ENDP  ; |??1MixerControlVolumeMaster@@UAA@XZ|, MixerControlVolumeMaster::~MixerControlVolumeMaster

	EXPORT	|??0MixerControlVolumeInput@@QAA@XZ|	; MixerControlVolumeInput::MixerControlVolumeInput
	EXPORT	|??_7MixerControlVolumeInput@@6B@| [ DATA ] ; MixerControlVolumeInput::`vftable'
	EXPORT	|?CopyMixerControl@MixerControlVolumeInput@@UAAXPAUtMIXERCONTROL@@@Z| ; MixerControlVolumeInput::CopyMixerControl
	EXPORT	|?GetLineID@MixerControlVolumeInput@@UAAGXZ| ; MixerControlVolumeInput::GetLineID
	EXPORT	|?SetGain@MixerControlVolumeInput@@UAAXK@Z| ; MixerControlVolumeInput::SetGain
	EXPORT	|?GetGain@MixerControlVolumeInput@@UAAKXZ| ; MixerControlVolumeInput::GetGain
	IMPORT	|?SetInputGain@HardwareContext@@QAAIK@Z| ; HardwareContext::SetInputGain
	IMPORT	|??_EMixerControlVolumeInput@@UAAPAXI@Z|, WEAK |??_GMixerControlVolumeInput@@UAAPAXI@Z| ; MixerControlVolumeInput::`vector deleting destructor', MixerControlVolumeInput::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T36673| DCD	|$LN9@MixerContr@7|
	DCD	0x40000e01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7MixerControlVolumeInput@@6B@| DCD |??_EMixerControlVolumeInput@@UAAPAXI@Z| ; MixerControlVolumeInput::`vftable'
	DCD	|?SetControlID@MixerControl@@UAAXK@Z|
	DCD	|?CopyMixerControl@MixerControlVolumeInput@@UAAXPAUtMIXERCONTROL@@@Z|
	DCD	|?GetControlDetails@MixerControlVolume@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?SetControlDetails@MixerControlVolume@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?GetControlType@MixerControlVolume@@UAAKXZ|
	DCD	|?GetLineID@MixerControlVolumeInput@@UAAGXZ|
	DCD	|?SetGain@MixerControlVolumeInput@@UAAXK@Z|
	DCD	|?GetGain@MixerControlVolumeInput@@UAAKXZ|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0MixerControlVolumeInput@@QAA@XZ| PROC ; MixerControlVolumeInput::MixerControlVolumeInput

; 422  : 	{

  00000		 |$LN9@MixerContr@7|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M36670|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3024	 ldr         r3, [pc, #0x24]

; 423  : 		// Set default value
; 424  : 		g_pHWContext->SetInputGain(0xFFFFFFFF);		

  0000c	e59f201c	 ldr         r2, [pc, #0x1C]
  00010	e3e01000	 mvn         r1, #0
  00014	e5843000	 str         r3, [r4]
  00018	e5841004	 str         r1, [r4, #4]
  0001c	e5920000	 ldr         r0, [r2]
  00020	eb000000	 bl          |?SetInputGain@HardwareContext@@QAAIK@Z|

; 425  : 	}

  00024	e1a00004	 mov         r0, r4
  00028	e8bd4010	 ldmia       sp!, {r4, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$LN10@MixerContr@7|
  00030		 |$LN11@MixerContr@7|
  00030	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  00034		 |$LN12@MixerContr@7|
  00034	00000000	 DCD         |??_7MixerControlVolumeInput@@6B@|
  00038		 |$M36671|

			 ENDP  ; |??0MixerControlVolumeInput@@QAA@XZ|, MixerControlVolumeInput::MixerControlVolumeInput

	EXPORT	|??_C@_1BK@FEKAJMFI@?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?5?$AAV?$AAo?$AAl?$AAu?$AAm?$AAe?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T36685| DCD	|$LN5@CopyMixerC@4|
	DCD	0x40000c01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@FEKAJMFI@?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?5?$AAV?$AAo?$AAl?$AAu?$AAm?$AAe?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "p", 0x0, "u", 0x0, "t", 0x0, " ", 0x0, "V"
	DCB	0x0, "o", 0x0, "l", 0x0, "u", 0x0, "m", 0x0, "e", 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CopyMixerControl@MixerControlVolumeInput@@UAAXPAUtMIXERCONTROL@@@Z| PROC ; MixerControlVolumeInput::CopyMixerControl

; 428  :     {

  00000		 |$LN5@CopyMixerC@4|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M36682|
  00004	e1a04001	 mov         r4, r1

; 429  :         MixerControlVolume::CopyMixerControl(pamxctrl);

  00008	eb000000	 bl          |?CopyMixerControl@MixerControlVolume@@UAAXPAUtMIXERCONTROL@@@Z|

; 430  :         wcscpy(pamxctrl->szName, TEXT("Input Volume"));

  0000c	e59f1018	 ldr         r1, [pc, #0x18]
  00010	e2840034	 add         r0, r4, #0x34
  00014	eb000000	 bl          wcscpy

; 431  :         wcscpy(pamxctrl->szShortName, TEXT("Input Volume"));

  00018	e59f100c	 ldr         r1, [pc, #0xC]
  0001c	e2840014	 add         r0, r4, #0x14
  00020	eb000000	 bl          wcscpy

; 432  :     }

  00024	e8bd4010	 ldmia       sp!, {r4, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$LN6@CopyMixerC@4|
  0002c		 |$LN7@CopyMixerC@4|
  0002c	00000000	 DCD         |??_C@_1BK@FEKAJMFI@?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?5?$AAV?$AAo?$AAl?$AAu?$AAm?$AAe?$AA?$AA@|
  00030		 |$M36683|

			 ENDP  ; |?CopyMixerControl@MixerControlVolumeInput@@UAAXPAUtMIXERCONTROL@@@Z|, MixerControlVolumeInput::CopyMixerControl


  00000			 AREA	 |.pdata|, PDATA
|$T36696| DCD	|$LN5@GetLineID@2|
	DCD	0x40000300
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetLineID@MixerControlVolumeInput@@UAAGXZ| PROC ; MixerControlVolumeInput::GetLineID

; 434  :     USHORT GetLineID() {return MXLINEID(PCM_IN,NOLINE);}

  00000		 |$LN5@GetLineID@2|
  00000		 |$M36693|
  00000	e3a03cff	 mov         r3, #0xFF, 24
  00004	e3830081	 orr         r0, r3, #0x81
  00008	e12fff1e	 bx          lr
  0000c		 |$M36694|

			 ENDP  ; |?GetLineID@MixerControlVolumeInput@@UAAGXZ|, MixerControlVolumeInput::GetLineID


  00000			 AREA	 |.pdata|, PDATA
|$T36704| DCD	|$LN5@SetGain@2|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetGain@MixerControlVolumeInput@@UAAXK@Z| PROC ; MixerControlVolumeInput::SetGain

; 437  :     {

  00000		 |$LN5@SetGain@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36701|

; 438  :         g_pHWContext->SetInputGain(dwSetting);

  00004	e59f300c	 ldr         r3, [pc, #0xC]
  00008	e5930000	 ldr         r0, [r3]
  0000c	eb000000	 bl          |?SetInputGain@HardwareContext@@QAAIK@Z|

; 439  :     }

  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$LN6@SetGain@2|
  00018		 |$LN7@SetGain@2|
  00018	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  0001c		 |$M36702|

			 ENDP  ; |?SetGain@MixerControlVolumeInput@@UAAXK@Z|, MixerControlVolumeInput::SetGain

	IMPORT	|?GetInputGain@HardwareContext@@QAAKXZ|	; HardwareContext::GetInputGain

  00000			 AREA	 |.pdata|, PDATA
|$T36715| DCD	|$LN5@GetGain@2|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetGain@MixerControlVolumeInput@@UAAKXZ| PROC ; MixerControlVolumeInput::GetGain

; 442  :     {

  00000		 |$LN5@GetGain@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36712|

; 443  :         return g_pHWContext->GetInputGain();

  00004	e59f300c	 ldr         r3, [pc, #0xC]
  00008	e5930000	 ldr         r0, [r3]
  0000c	eb000000	 bl          |?GetInputGain@HardwareContext@@QAAKXZ|

; 444  :     }

  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$LN6@GetGain@2|
  00018		 |$LN7@GetGain@2|
  00018	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  0001c		 |$M36713|

			 ENDP  ; |?GetGain@MixerControlVolumeInput@@UAAKXZ|, MixerControlVolumeInput::GetGain

	EXPORT	|??1MixerControlVolumeInput@@UAA@XZ|	; MixerControlVolumeInput::~MixerControlVolumeInput

  00000			 AREA	 |.pdata|, PDATA
|$T36733| DCD	|$LN9@MixerContr@8|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1MixerControlVolumeInput@@UAA@XZ| PROC ; MixerControlVolumeInput::~MixerControlVolumeInput
  00000		 |$LN9@MixerContr@8|
  00000		 |$M36730|
  00000	e59f3004	 ldr         r3, [pc, #4]
  00004	e5803000	 str         r3, [r0]
  00008	e12fff1e	 bx          lr
  0000c		 |$LN10@MixerContr@8|
  0000c		 |$LN11@MixerContr@8|
  0000c	00000000	 DCD         |??_7MixerControl@@6B@|
  00010		 |$M36731|

			 ENDP  ; |??1MixerControlVolumeInput@@UAA@XZ|, MixerControlVolumeInput::~MixerControlVolumeInput

	EXPORT	|??0MixerControlBoolean@@QAA@XZ|	; MixerControlBoolean::MixerControlBoolean
	EXPORT	|??_7MixerControlBoolean@@6B@| [ DATA ]	; MixerControlBoolean::`vftable'
	EXPORT	|?CopyMixerControl@MixerControlBoolean@@UAAXPAUtMIXERCONTROL@@@Z| ; MixerControlBoolean::CopyMixerControl
	EXPORT	|?GetControlDetails@MixerControlBoolean@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| ; MixerControlBoolean::GetControlDetails
	EXPORT	|?SetControlDetails@MixerControlBoolean@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| ; MixerControlBoolean::SetControlDetails
	EXPORT	|?GetControlType@MixerControlBoolean@@UAAKXZ| ; MixerControlBoolean::GetControlType
	IMPORT	|??_EMixerControlBoolean@@UAAPAXI@Z|, WEAK |??_GMixerControlBoolean@@UAAPAXI@Z| ; MixerControlBoolean::`vector deleting destructor', MixerControlBoolean::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T36748| DCD	|$LN7@MixerContr@9|
	DCD	0x40000600

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7MixerControlBoolean@@6B@| DCD |??_EMixerControlBoolean@@UAAPAXI@Z| ; MixerControlBoolean::`vftable'
	DCD	|?SetControlID@MixerControl@@UAAXK@Z|
	DCD	|?CopyMixerControl@MixerControlBoolean@@UAAXPAUtMIXERCONTROL@@@Z|
	DCD	|?GetControlDetails@MixerControlBoolean@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?SetControlDetails@MixerControlBoolean@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?GetControlType@MixerControlBoolean@@UAAKXZ|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0MixerControlBoolean@@QAA@XZ| PROC	; MixerControlBoolean::MixerControlBoolean

; 451  :     MixerControlBoolean() : MixerControl() {}

  00000		 |$LN7@MixerContr@9|
  00000		 |$M36745|
  00000	e59f300c	 ldr         r3, [pc, #0xC]
  00004	e3e02000	 mvn         r2, #0
  00008	e5802004	 str         r2, [r0, #4]
  0000c	e5803000	 str         r3, [r0]
  00010	e12fff1e	 bx          lr
  00014		 |$LN8@MixerContr@9|
  00014		 |$LN9@MixerContr@9|
  00014	00000000	 DCD         |??_7MixerControlBoolean@@6B@|
  00018		 |$M36746|

			 ENDP  ; |??0MixerControlBoolean@@QAA@XZ|, MixerControlBoolean::MixerControlBoolean


  00000			 AREA	 |.pdata|, PDATA
|$T36759| DCD	|$LN5@CopyMixerC@5|
	DCD	0x40001b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CopyMixerControl@MixerControlBoolean@@UAAXPAUtMIXERCONTROL@@@Z| PROC ; MixerControlBoolean::CopyMixerControl

; 454  :     {

  00000		 |$LN5@CopyMixerC@5|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M36756|
  00004	e1a04001	 mov         r4, r1

; 455  :         MixerControl::CopyMixerControl(pamxctrl);

  00008	eb000000	 bl          |?CopyMixerControl@MixerControl@@UAAXPAUtMIXERCONTROL@@@Z|

; 456  :         pamxctrl->fdwControl = MIXERCONTROL_CONTROLF_UNIFORM;

  0000c	e3a03001	 mov         r3, #1
  00010	e3a02000	 mov         r2, #0
  00014	e5c4300c	 strb        r3, [r4, #0xC]
  00018	e5c4200d	 strb        r2, [r4, #0xD]
  0001c	e5c4200e	 strb        r2, [r4, #0xE]
  00020	e5c4200f	 strb        r2, [r4, #0xF]

; 457  :         pamxctrl->cMultipleItems = 0;

  00024	e5c42010	 strb        r2, [r4, #0x10]
  00028	e5c42011	 strb        r2, [r4, #0x11]
  0002c	e5c42012	 strb        r2, [r4, #0x12]
  00030	e5c42013	 strb        r2, [r4, #0x13]

; 458  :         pamxctrl->Bounds.dwMinimum = 0;

  00034	e5c420b4	 strb        r2, [r4, #0xB4]
  00038	e5c420b5	 strb        r2, [r4, #0xB5]
  0003c	e5c420b6	 strb        r2, [r4, #0xB6]
  00040	e5c420b7	 strb        r2, [r4, #0xB7]

; 459  :         pamxctrl->Bounds.dwMaximum = 1;

  00044	e5c430b8	 strb        r3, [r4, #0xB8]
  00048	e5c420b9	 strb        r2, [r4, #0xB9]
  0004c	e5c420ba	 strb        r2, [r4, #0xBA]
  00050	e5c420bb	 strb        r2, [r4, #0xBB]

; 460  :         pamxctrl->Metrics.cSteps =  0;

  00054	e5c420cc	 strb        r2, [r4, #0xCC]
  00058	e5c420cd	 strb        r2, [r4, #0xCD]
  0005c	e5c420ce	 strb        r2, [r4, #0xCE]
  00060	e5c420cf	 strb        r2, [r4, #0xCF]

; 461  :     }

  00064	e8bd4010	 ldmia       sp!, {r4, lr}
  00068	e12fff1e	 bx          lr
  0006c		 |$M36757|

			 ENDP  ; |?CopyMixerControl@MixerControlBoolean@@UAAXPAUtMIXERCONTROL@@@Z|, MixerControlBoolean::CopyMixerControl


  00000			 AREA	 |.pdata|, PDATA
|$T36768| DCD	|$LN5@GetControl@5|
	DCD	0x40000300
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetControlType@MixerControlBoolean@@UAAKXZ| PROC ; MixerControlBoolean::GetControlType

; 463  :     DWORD GetControlType() {return MIXERCONTROL_CONTROLTYPE_BOOLEAN;}

  00000		 |$LN5@GetControl@5|
  00000		 |$M36765|
  00000	e3a03202	 mov         r3, #2, 4
  00004	e3830801	 orr         r0, r3, #1, 16
  00008	e12fff1e	 bx          lr
  0000c		 |$M36766|

			 ENDP  ; |?GetControlType@MixerControlBoolean@@UAAKXZ|, MixerControlBoolean::GetControlType


  00000			 AREA	 |.pdata|, PDATA
|$T36780| DCD	|$LN5@GetControl@6|
	DCD	0x40001701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetControlDetails@MixerControlBoolean@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| PROC ; MixerControlBoolean::GetControlDetails

; 470  :     {

  00000		 |$LN5@GetControl@6|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M36777|
  00004	e1a04001	 mov         r4, r1

; 471  : 		UNREFERENCED_PARAMETER(dwFlags);
; 472  : 
; 473  :         ULONG ulControlValue = GetValue();

  00008	e5903000	 ldr         r3, [r0]
  0000c	e593301c	 ldr         r3, [r3, #0x1C]
  00010	e1a0e00f	 mov         lr, pc
  00014	e12fff13	 bx          r3

; 474  : 
; 475  :         MIXERCONTROLDETAILS_BOOLEAN * pValue = (MIXERCONTROLDETAILS_BOOLEAN *) pDetail->paDetails;
; 476  :         pValue[0].fValue = ulControlValue;

  00018	e5d4e014	 ldrb        lr, [r4, #0x14]
  0001c	e5d43015	 ldrb        r3, [r4, #0x15]
  00020	e5d42016	 ldrb        r2, [r4, #0x16]
  00024	e5d41017	 ldrb        r1, [r4, #0x17]
  00028	e18e3403	 orr         r3, lr, r3, lsl #8
  0002c	e1833802	 orr         r3, r3, r2, lsl #16
  00030	e183ec01	 orr         lr, r3, r1, lsl #24
  00034	e1a03420	 mov         r3, r0, lsr #8
  00038	e1a01c20	 mov         r1, r0, lsr #24
  0003c	e1a02820	 mov         r2, r0, lsr #16
  00040	e5ce0000	 strb        r0, [lr]
  00044	e5ce3001	 strb        r3, [lr, #1]
  00048	e5ce1003	 strb        r1, [lr, #3]

; 477  :         return MMSYSERR_NOERROR;

  0004c	e3a00000	 mov         r0, #0
  00050	e5ce2002	 strb        r2, [lr, #2]

; 478  :     }

  00054	e8bd4010	 ldmia       sp!, {r4, lr}
  00058	e12fff1e	 bx          lr
  0005c		 |$M36778|

			 ENDP  ; |?GetControlDetails@MixerControlBoolean@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|, MixerControlBoolean::GetControlDetails


  00000			 AREA	 |.pdata|, PDATA
|$T36791| DCD	|$LN5@SetControl@4|
	DCD	0x40001601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetControlDetails@MixerControlBoolean@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| PROC ; MixerControlBoolean::SetControlDetails

; 481  :     {

  00000		 |$LN5@SetControl@4|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M36788|

; 482  : 		UNREFERENCED_PARAMETER(dwFlags);
; 483  : 
; 484  :         MIXERCONTROLDETAILS_BOOLEAN * pValue = (MIXERCONTROLDETAILS_BOOLEAN *) pDetail->paDetails;
; 485  : 
; 486  :         // now apply the setting to the hardware
; 487  :         SetValue(pValue[0].fValue);

  00004	e5d1e014	 ldrb        lr, [r1, #0x14]
  00008	e5d13015	 ldrb        r3, [r1, #0x15]
  0000c	e5d12016	 ldrb        r2, [r1, #0x16]
  00010	e5d11017	 ldrb        r1, [r1, #0x17]
  00014	e18e3403	 orr         r3, lr, r3, lsl #8
  00018	e1833802	 orr         r3, r3, r2, lsl #16
  0001c	e1834c01	 orr         r4, r3, r1, lsl #24
  00020	e5d42000	 ldrb        r2, [r4]
  00024	e5d43001	 ldrb        r3, [r4, #1]
  00028	e5d41002	 ldrb        r1, [r4, #2]
  0002c	e590e000	 ldr         lr, [r0]
  00030	e1823403	 orr         r3, r2, r3, lsl #8
  00034	e5d42003	 ldrb        r2, [r4, #3]
  00038	e1833801	 orr         r3, r3, r1, lsl #16
  0003c	e59e4020	 ldr         r4, [lr, #0x20]
  00040	e1831c02	 orr         r1, r3, r2, lsl #24
  00044	e1a0e00f	 mov         lr, pc
  00048	e12fff14	 bx          r4

; 488  : 
; 489  :         return MMSYSERR_NOERROR;

  0004c	e3a00000	 mov         r0, #0

; 490  :     }

  00050	e8bd4010	 ldmia       sp!, {r4, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$M36789|

			 ENDP  ; |?SetControlDetails@MixerControlBoolean@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|, MixerControlBoolean::SetControlDetails

	EXPORT	|??1MixerControlBoolean@@UAA@XZ|	; MixerControlBoolean::~MixerControlBoolean

  00000			 AREA	 |.pdata|, PDATA
|$T36802| DCD	|$LN7@MixerContr@10|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1MixerControlBoolean@@UAA@XZ| PROC	; MixerControlBoolean::~MixerControlBoolean
  00000		 |$LN7@MixerContr@10|
  00000		 |$M36799|
  00000	e59f3004	 ldr         r3, [pc, #4]
  00004	e5803000	 str         r3, [r0]
  00008	e12fff1e	 bx          lr
  0000c		 |$LN8@MixerContr@10|
  0000c		 |$LN9@MixerContr@10|
  0000c	00000000	 DCD         |??_7MixerControl@@6B@|
  00010		 |$M36800|

			 ENDP  ; |??1MixerControlBoolean@@UAA@XZ|, MixerControlBoolean::~MixerControlBoolean

	EXPORT	|??0MixerControlMuteMaster@@QAA@XZ|	; MixerControlMuteMaster::MixerControlMuteMaster
	EXPORT	|??_7MixerControlMuteMaster@@6B@| [ DATA ] ; MixerControlMuteMaster::`vftable'
	EXPORT	|?CopyMixerControl@MixerControlMuteMaster@@UAAXPAUtMIXERCONTROL@@@Z| ; MixerControlMuteMaster::CopyMixerControl
	EXPORT	|?GetControlType@MixerControlMuteMaster@@UAAKXZ| ; MixerControlMuteMaster::GetControlType
	EXPORT	|?GetLineID@MixerControlMuteMaster@@UAAGXZ| ; MixerControlMuteMaster::GetLineID
	EXPORT	|?GetValue@MixerControlMuteMaster@@UAAHXZ| ; MixerControlMuteMaster::GetValue
	EXPORT	|?SetValue@MixerControlMuteMaster@@UAAXH@Z| ; MixerControlMuteMaster::SetValue
	IMPORT	|??_EMixerControlMuteMaster@@UAAPAXI@Z|, WEAK |??_GMixerControlMuteMaster@@UAAPAXI@Z| ; MixerControlMuteMaster::`vector deleting destructor', MixerControlMuteMaster::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T36822| DCD	|$LN9@MixerContr@11|
	DCD	0x40000600

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7MixerControlMuteMaster@@6B@| DCD |??_EMixerControlMuteMaster@@UAAPAXI@Z| ; MixerControlMuteMaster::`vftable'
	DCD	|?SetControlID@MixerControl@@UAAXK@Z|
	DCD	|?CopyMixerControl@MixerControlMuteMaster@@UAAXPAUtMIXERCONTROL@@@Z|
	DCD	|?GetControlDetails@MixerControlBoolean@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?SetControlDetails@MixerControlBoolean@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?GetControlType@MixerControlMuteMaster@@UAAKXZ|
	DCD	|?GetLineID@MixerControlMuteMaster@@UAAGXZ|
	DCD	|?GetValue@MixerControlMuteMaster@@UAAHXZ|
	DCD	|?SetValue@MixerControlMuteMaster@@UAAXH@Z|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0MixerControlMuteMaster@@QAA@XZ| PROC ; MixerControlMuteMaster::MixerControlMuteMaster

; 497  :     MixerControlMuteMaster() : MixerControlBoolean() {}

  00000		 |$LN9@MixerContr@11|
  00000		 |$M36819|
  00000	e59f300c	 ldr         r3, [pc, #0xC]
  00004	e3e02000	 mvn         r2, #0
  00008	e5802004	 str         r2, [r0, #4]
  0000c	e5803000	 str         r3, [r0]
  00010	e12fff1e	 bx          lr
  00014		 |$LN10@MixerContr@11|
  00014		 |$LN11@MixerContr@11|
  00014	00000000	 DCD         |??_7MixerControlMuteMaster@@6B@|
  00018		 |$M36820|

			 ENDP  ; |??0MixerControlMuteMaster@@QAA@XZ|, MixerControlMuteMaster::MixerControlMuteMaster

	EXPORT	|??_C@_1BI@PEAJCPFH@?$AAM?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAM?$AAu?$AAt?$AAe?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T36833| DCD	|$LN5@CopyMixerC@6|
	DCD	0x40000c01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@PEAJCPFH@?$AAM?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAM?$AAu?$AAt?$AAe?$AA?$AA@| DCB "M"
	DCB	0x0, "a", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "M", 0x0, "u", 0x0, "t", 0x0, "e", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CopyMixerControl@MixerControlMuteMaster@@UAAXPAUtMIXERCONTROL@@@Z| PROC ; MixerControlMuteMaster::CopyMixerControl

; 500  :     {

  00000		 |$LN5@CopyMixerC@6|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M36830|
  00004	e1a04001	 mov         r4, r1

; 501  :         MixerControlBoolean::CopyMixerControl(pamxctrl);

  00008	eb000000	 bl          |?CopyMixerControl@MixerControlBoolean@@UAAXPAUtMIXERCONTROL@@@Z|

; 502  :         wcscpy(pamxctrl->szName, TEXT("Master Mute"));

  0000c	e59f1018	 ldr         r1, [pc, #0x18]
  00010	e2840034	 add         r0, r4, #0x34
  00014	eb000000	 bl          wcscpy

; 503  :         wcscpy(pamxctrl->szShortName, TEXT("Master Mute"));

  00018	e59f100c	 ldr         r1, [pc, #0xC]
  0001c	e2840014	 add         r0, r4, #0x14
  00020	eb000000	 bl          wcscpy

; 504  :     }

  00024	e8bd4010	 ldmia       sp!, {r4, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$LN6@CopyMixerC@6|
  0002c		 |$LN7@CopyMixerC@6|
  0002c	00000000	 DCD         |??_C@_1BI@PEAJCPFH@?$AAM?$AAa?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAM?$AAu?$AAt?$AAe?$AA?$AA@|
  00030		 |$M36831|

			 ENDP  ; |?CopyMixerControl@MixerControlMuteMaster@@UAAXPAUtMIXERCONTROL@@@Z|, MixerControlMuteMaster::CopyMixerControl


  00000			 AREA	 |.pdata|, PDATA
|$T36844| DCD	|$LN5@GetControl@7|
	DCD	0x40000300
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetControlType@MixerControlMuteMaster@@UAAKXZ| PROC ; MixerControlMuteMaster::GetControlType

; 505  :     DWORD GetControlType() {return MIXERCONTROL_CONTROLTYPE_MUTE;}

  00000		 |$LN5@GetControl@7|
  00000		 |$M36841|
  00000	e3a03222	 mov         r3, #0x22, 4
  00004	e3830801	 orr         r0, r3, #1, 16
  00008	e12fff1e	 bx          lr
  0000c		 |$M36842|

			 ENDP  ; |?GetControlType@MixerControlMuteMaster@@UAAKXZ|, MixerControlMuteMaster::GetControlType


  00000			 AREA	 |.pdata|, PDATA
|$T36853| DCD	|$LN5@GetLineID@3|
	DCD	0x40000300
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetLineID@MixerControlMuteMaster@@UAAGXZ| PROC ; MixerControlMuteMaster::GetLineID

; 506  :     USHORT GetLineID() { return MXLINEID(LINE_OUT,NOLINE); }

  00000		 |$LN5@GetLineID@3|
  00000		 |$M36850|
  00000	e3a03cff	 mov         r3, #0xFF, 24
  00004	e3830080	 orr         r0, r3, #0x80
  00008	e12fff1e	 bx          lr
  0000c		 |$M36851|

			 ENDP  ; |?GetLineID@MixerControlMuteMaster@@UAAGXZ|, MixerControlMuteMaster::GetLineID

	IMPORT	|?GetOutputMute@HardwareContext@@QAAHXZ| ; HardwareContext::GetOutputMute

  00000			 AREA	 |.pdata|, PDATA
|$T36862| DCD	|$LN5@GetValue|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetValue@MixerControlMuteMaster@@UAAHXZ| PROC ; MixerControlMuteMaster::GetValue

; 507  :     BOOL GetValue() { return g_pHWContext->GetOutputMute(); }

  00000		 |$LN5@GetValue|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36859|
  00004	e59f300c	 ldr         r3, [pc, #0xC]
  00008	e5930000	 ldr         r0, [r3]
  0000c	eb000000	 bl          |?GetOutputMute@HardwareContext@@QAAHXZ|
  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$LN6@GetValue|
  00018		 |$LN7@GetValue|
  00018	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  0001c		 |$M36860|

			 ENDP  ; |?GetValue@MixerControlMuteMaster@@UAAHXZ|, MixerControlMuteMaster::GetValue

	IMPORT	|?SetOutputMute@HardwareContext@@QAAIH@Z| ; HardwareContext::SetOutputMute

  00000			 AREA	 |.pdata|, PDATA
|$T36872| DCD	|$LN5@SetValue|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetValue@MixerControlMuteMaster@@UAAXH@Z| PROC ; MixerControlMuteMaster::SetValue

; 508  :     void SetValue(BOOL bMute) { g_pHWContext->SetOutputMute(bMute); }

  00000		 |$LN5@SetValue|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36869|
  00004	e59f300c	 ldr         r3, [pc, #0xC]
  00008	e5930000	 ldr         r0, [r3]
  0000c	eb000000	 bl          |?SetOutputMute@HardwareContext@@QAAIH@Z|
  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$LN6@SetValue|
  00018		 |$LN7@SetValue|
  00018	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  0001c		 |$M36870|

			 ENDP  ; |?SetValue@MixerControlMuteMaster@@UAAXH@Z|, MixerControlMuteMaster::SetValue

	EXPORT	|??1MixerControlMuteMaster@@UAA@XZ|	; MixerControlMuteMaster::~MixerControlMuteMaster

  00000			 AREA	 |.pdata|, PDATA
|$T36890| DCD	|$LN9@MixerContr@12|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1MixerControlMuteMaster@@UAA@XZ| PROC ; MixerControlMuteMaster::~MixerControlMuteMaster
  00000		 |$LN9@MixerContr@12|
  00000		 |$M36887|
  00000	e59f3004	 ldr         r3, [pc, #4]
  00004	e5803000	 str         r3, [r0]
  00008	e12fff1e	 bx          lr
  0000c		 |$LN10@MixerContr@12|
  0000c		 |$LN11@MixerContr@12|
  0000c	00000000	 DCD         |??_7MixerControl@@6B@|
  00010		 |$M36888|

			 ENDP  ; |??1MixerControlMuteMaster@@UAA@XZ|, MixerControlMuteMaster::~MixerControlMuteMaster

	EXPORT	|??0MixerControlInputMute@@QAA@XZ|	; MixerControlInputMute::MixerControlInputMute
	EXPORT	|??_7MixerControlInputMute@@6B@| [ DATA ] ; MixerControlInputMute::`vftable'
	EXPORT	|?CopyMixerControl@MixerControlInputMute@@UAAXPAUtMIXERCONTROL@@@Z| ; MixerControlInputMute::CopyMixerControl
	EXPORT	|?GetLineID@MixerControlInputMute@@UAAGXZ| ; MixerControlInputMute::GetLineID
	EXPORT	|?GetValue@MixerControlInputMute@@UAAHXZ| ; MixerControlInputMute::GetValue
	EXPORT	|?SetValue@MixerControlInputMute@@UAAXH@Z| ; MixerControlInputMute::SetValue
	IMPORT	|??_EMixerControlInputMute@@UAAPAXI@Z|, WEAK |??_GMixerControlInputMute@@UAAPAXI@Z| ; MixerControlInputMute::`vector deleting destructor', MixerControlInputMute::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T36910| DCD	|$LN9@MixerContr@13|
	DCD	0x40000600

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7MixerControlInputMute@@6B@| DCD |??_EMixerControlInputMute@@UAAPAXI@Z| ; MixerControlInputMute::`vftable'
	DCD	|?SetControlID@MixerControl@@UAAXK@Z|
	DCD	|?CopyMixerControl@MixerControlInputMute@@UAAXPAUtMIXERCONTROL@@@Z|
	DCD	|?GetControlDetails@MixerControlBoolean@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?SetControlDetails@MixerControlBoolean@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?GetControlType@MixerControlBoolean@@UAAKXZ|
	DCD	|?GetLineID@MixerControlInputMute@@UAAGXZ|
	DCD	|?GetValue@MixerControlInputMute@@UAAHXZ|
	DCD	|?SetValue@MixerControlInputMute@@UAAXH@Z|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0MixerControlInputMute@@QAA@XZ| PROC ; MixerControlInputMute::MixerControlInputMute

; 515  :     MixerControlInputMute() : MixerControlBoolean() {}

  00000		 |$LN9@MixerContr@13|
  00000		 |$M36907|
  00000	e59f300c	 ldr         r3, [pc, #0xC]
  00004	e3e02000	 mvn         r2, #0
  00008	e5802004	 str         r2, [r0, #4]
  0000c	e5803000	 str         r3, [r0]
  00010	e12fff1e	 bx          lr
  00014		 |$LN10@MixerContr@13|
  00014		 |$LN11@MixerContr@13|
  00014	00000000	 DCD         |??_7MixerControlInputMute@@6B@|
  00018		 |$M36908|

			 ENDP  ; |??0MixerControlInputMute@@QAA@XZ|, MixerControlInputMute::MixerControlInputMute

	EXPORT	|??_C@_1BG@JBBFNCIB@?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?5?$AAM?$AAu?$AAt?$AAe?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T36921| DCD	|$LN5@CopyMixerC@7|
	DCD	0x40000c01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@JBBFNCIB@?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?5?$AAM?$AAu?$AAt?$AAe?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "p", 0x0, "u", 0x0, "t", 0x0, " ", 0x0, "M"
	DCB	0x0, "u", 0x0, "t", 0x0, "e", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CopyMixerControl@MixerControlInputMute@@UAAXPAUtMIXERCONTROL@@@Z| PROC ; MixerControlInputMute::CopyMixerControl

; 518  :     {

  00000		 |$LN5@CopyMixerC@7|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M36918|
  00004	e1a04001	 mov         r4, r1

; 519  :         MixerControlBoolean::CopyMixerControl(pamxctrl);

  00008	eb000000	 bl          |?CopyMixerControl@MixerControlBoolean@@UAAXPAUtMIXERCONTROL@@@Z|

; 520  :         wcscpy(pamxctrl->szName, TEXT("Input Mute"));

  0000c	e59f1018	 ldr         r1, [pc, #0x18]
  00010	e2840034	 add         r0, r4, #0x34
  00014	eb000000	 bl          wcscpy

; 521  :         wcscpy(pamxctrl->szShortName, TEXT("Input Mute"));

  00018	e59f100c	 ldr         r1, [pc, #0xC]
  0001c	e2840014	 add         r0, r4, #0x14
  00020	eb000000	 bl          wcscpy

; 522  :     }

  00024	e8bd4010	 ldmia       sp!, {r4, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$LN6@CopyMixerC@7|
  0002c		 |$LN7@CopyMixerC@7|
  0002c	00000000	 DCD         |??_C@_1BG@JBBFNCIB@?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?5?$AAM?$AAu?$AAt?$AAe?$AA?$AA@|
  00030		 |$M36919|

			 ENDP  ; |?CopyMixerControl@MixerControlInputMute@@UAAXPAUtMIXERCONTROL@@@Z|, MixerControlInputMute::CopyMixerControl


  00000			 AREA	 |.pdata|, PDATA
|$T36932| DCD	|$LN5@GetLineID@4|
	DCD	0x40000300
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetLineID@MixerControlInputMute@@UAAGXZ| PROC ; MixerControlInputMute::GetLineID

; 524  :     USHORT GetLineID() { return MXLINEID(PCM_IN,NOLINE); }

  00000		 |$LN5@GetLineID@4|
  00000		 |$M36929|
  00000	e3a03cff	 mov         r3, #0xFF, 24
  00004	e3830081	 orr         r0, r3, #0x81
  00008	e12fff1e	 bx          lr
  0000c		 |$M36930|

			 ENDP  ; |?GetLineID@MixerControlInputMute@@UAAGXZ|, MixerControlInputMute::GetLineID

	IMPORT	|?GetInputMute@HardwareContext@@QAAHXZ|	; HardwareContext::GetInputMute

  00000			 AREA	 |.pdata|, PDATA
|$T36941| DCD	|$LN5@GetValue@2|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetValue@MixerControlInputMute@@UAAHXZ| PROC ; MixerControlInputMute::GetValue

; 525  :     BOOL GetValue() { return g_pHWContext->GetInputMute(); }

  00000		 |$LN5@GetValue@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36938|
  00004	e59f300c	 ldr         r3, [pc, #0xC]
  00008	e5930000	 ldr         r0, [r3]
  0000c	eb000000	 bl          |?GetInputMute@HardwareContext@@QAAHXZ|
  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$LN6@GetValue@2|
  00018		 |$LN7@GetValue@2|
  00018	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  0001c		 |$M36939|

			 ENDP  ; |?GetValue@MixerControlInputMute@@UAAHXZ|, MixerControlInputMute::GetValue

	IMPORT	|?SetInputMute@HardwareContext@@QAAIH@Z| ; HardwareContext::SetInputMute

  00000			 AREA	 |.pdata|, PDATA
|$T36951| DCD	|$LN5@SetValue@2|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetValue@MixerControlInputMute@@UAAXH@Z| PROC ; MixerControlInputMute::SetValue

; 526  :     void SetValue(BOOL bMute) { g_pHWContext->SetInputMute(bMute); }

  00000		 |$LN5@SetValue@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36948|
  00004	e59f300c	 ldr         r3, [pc, #0xC]
  00008	e5930000	 ldr         r0, [r3]
  0000c	eb000000	 bl          |?SetInputMute@HardwareContext@@QAAIH@Z|
  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$LN6@SetValue@2|
  00018		 |$LN7@SetValue@2|
  00018	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  0001c		 |$M36949|

			 ENDP  ; |?SetValue@MixerControlInputMute@@UAAXH@Z|, MixerControlInputMute::SetValue

	EXPORT	|??1MixerControlInputMute@@UAA@XZ|	; MixerControlInputMute::~MixerControlInputMute

  00000			 AREA	 |.pdata|, PDATA
|$T36969| DCD	|$LN9@MixerContr@14|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1MixerControlInputMute@@UAA@XZ| PROC ; MixerControlInputMute::~MixerControlInputMute
  00000		 |$LN9@MixerContr@14|
  00000		 |$M36966|
  00000	e59f3004	 ldr         r3, [pc, #4]
  00004	e5803000	 str         r3, [r0]
  00008	e12fff1e	 bx          lr
  0000c		 |$LN10@MixerContr@14|
  0000c		 |$LN11@MixerContr@14|
  0000c	00000000	 DCD         |??_7MixerControl@@6B@|
  00010		 |$M36967|

			 ENDP  ; |??1MixerControlInputMute@@UAA@XZ|, MixerControlInputMute::~MixerControlInputMute

	EXPORT	|??0MixerControlSingleMultiSelect@@QAA@XZ| ; MixerControlSingleMultiSelect::MixerControlSingleMultiSelect
	EXPORT	|??_7MixerControlSingleMultiSelect@@6B@| [ DATA ] ; MixerControlSingleMultiSelect::`vftable'
	EXPORT	|?CopyMixerControl@MixerControlSingleMultiSelect@@UAAXPAUtMIXERCONTROL@@@Z| ; MixerControlSingleMultiSelect::CopyMixerControl
	EXPORT	|?GetControlDetails@MixerControlSingleMultiSelect@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| ; MixerControlSingleMultiSelect::GetControlDetails
	EXPORT	|?SetControlDetails@MixerControlSingleMultiSelect@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| ; MixerControlSingleMultiSelect::SetControlDetails
	IMPORT	|??_EMixerControlSingleMultiSelect@@UAAPAXI@Z|, WEAK |??_GMixerControlSingleMultiSelect@@UAAPAXI@Z| ; MixerControlSingleMultiSelect::`vector deleting destructor', MixerControlSingleMultiSelect::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T36984| DCD	|$LN7@MixerContr@15|
	DCD	0x40000600

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7MixerControlSingleMultiSelect@@6B@| DCD |??_EMixerControlSingleMultiSelect@@UAAPAXI@Z| ; MixerControlSingleMultiSelect::`vftable'
	DCD	|?SetControlID@MixerControl@@UAAXK@Z|
	DCD	|?CopyMixerControl@MixerControlSingleMultiSelect@@UAAXPAUtMIXERCONTROL@@@Z|
	DCD	|?GetControlDetails@MixerControlSingleMultiSelect@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?SetControlDetails@MixerControlSingleMultiSelect@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0MixerControlSingleMultiSelect@@QAA@XZ| PROC ; MixerControlSingleMultiSelect::MixerControlSingleMultiSelect

; 533  :     MixerControlSingleMultiSelect() : MixerControl() {}

  00000		 |$LN7@MixerContr@15|
  00000		 |$M36981|
  00000	e59f300c	 ldr         r3, [pc, #0xC]
  00004	e3e02000	 mvn         r2, #0
  00008	e5802004	 str         r2, [r0, #4]
  0000c	e5803000	 str         r3, [r0]
  00010	e12fff1e	 bx          lr
  00014		 |$LN8@MixerContr@15|
  00014		 |$LN9@MixerContr@15|
  00014	00000000	 DCD         |??_7MixerControlSingleMultiSelect@@6B@|
  00018		 |$M36982|

			 ENDP  ; |??0MixerControlSingleMultiSelect@@QAA@XZ|, MixerControlSingleMultiSelect::MixerControlSingleMultiSelect


  00000			 AREA	 |.pdata|, PDATA
|$T36995| DCD	|$LN5@CopyMixerC@8|
	DCD	0x40002001
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CopyMixerControl@MixerControlSingleMultiSelect@@UAAXPAUtMIXERCONTROL@@@Z| PROC ; MixerControlSingleMultiSelect::CopyMixerControl

; 536  :     {

  00000		 |$LN5@CopyMixerC@8|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M36992|
  00004	e1a05001	 mov         r5, r1
  00008	e1a04000	 mov         r4, r0

; 537  :         MixerControl::CopyMixerControl(pamxctrl);

  0000c	eb000000	 bl          |?CopyMixerControl@MixerControl@@UAAXPAUtMIXERCONTROL@@@Z|

; 538  :         pamxctrl->Bounds.dwMinimum = 0;
; 539  :         pamxctrl->Bounds.dwMaximum = 1;

  00010	e3a03001	 mov         r3, #1
  00014	e3a02000	 mov         r2, #0
  00018	e5c530b8	 strb        r3, [r5, #0xB8]
  0001c	e5c520b4	 strb        r2, [r5, #0xB4]
  00020	e5c520b5	 strb        r2, [r5, #0xB5]
  00024	e5c520b6	 strb        r2, [r5, #0xB6]
  00028	e5c520b7	 strb        r2, [r5, #0xB7]
  0002c	e5c520b9	 strb        r2, [r5, #0xB9]
  00030	e5c520ba	 strb        r2, [r5, #0xBA]
  00034	e5c520bb	 strb        r2, [r5, #0xBB]

; 540  :         pamxctrl->Metrics.cSteps =  0;

  00038	e5c520cc	 strb        r2, [r5, #0xCC]
  0003c	e5c520cd	 strb        r2, [r5, #0xCD]
  00040	e5c520ce	 strb        r2, [r5, #0xCE]
  00044	e5c520cf	 strb        r2, [r5, #0xCF]

; 541  :         pamxctrl->cMultipleItems = GetNumSelections();

  00048	e5943000	 ldr         r3, [r4]
  0004c	e1a00004	 mov         r0, r4
  00050	e593301c	 ldr         r3, [r3, #0x1C]
  00054	e1a0e00f	 mov         lr, pc
  00058	e12fff13	 bx          r3
  0005c	e1a03420	 mov         r3, r0, lsr #8
  00060	e1a02820	 mov         r2, r0, lsr #16
  00064	e1a01c20	 mov         r1, r0, lsr #24
  00068	e5c53011	 strb        r3, [r5, #0x11]
  0006c	e5c52012	 strb        r2, [r5, #0x12]
  00070	e5c51013	 strb        r1, [r5, #0x13]
  00074	e5c50010	 strb        r0, [r5, #0x10]

; 542  :     }

  00078	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0007c	e12fff1e	 bx          lr
  00080		 |$M36993|

			 ENDP  ; |?CopyMixerControl@MixerControlSingleMultiSelect@@UAAXPAUtMIXERCONTROL@@@Z|, MixerControlSingleMultiSelect::CopyMixerControl


  00000			 AREA	 |.pdata|, PDATA
|$T37017| DCD	|$LN23@GetControl@8|
	DCD	0x40005d01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetControlDetails@MixerControlSingleMultiSelect@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| PROC ; MixerControlSingleMultiSelect::GetControlDetails

; 559  :     {

  00000		 |$LN23@GetControl@8|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004		 |$M37014|
  00004	e1a07002	 mov         r7, r2
  00008	e1a06001	 mov         r6, r1
  0000c	e1a09000	 mov         r9, r0

; 560  :         DWORD NumSelections = GetNumSelections();

  00010	e5993000	 ldr         r3, [r9]
  00014	e593301c	 ldr         r3, [r3, #0x1C]
  00018	e1a0e00f	 mov         lr, pc
  0001c	e12fff13	 bx          r3

; 561  : 
; 562  :         if (pDetail->cMultipleItems != NumSelections)

  00020	e5d6500c	 ldrb        r5, [r6, #0xC]
  00024	e5d6300d	 ldrb        r3, [r6, #0xD]
  00028	e5d6e00e	 ldrb        lr, [r6, #0xE]
  0002c	e5d6400f	 ldrb        r4, [r6, #0xF]
  00030	e1853403	 orr         r3, r5, r3, lsl #8
  00034	e183380e	 orr         r3, r3, lr, lsl #16
  00038	e1833c04	 orr         r3, r3, r4, lsl #24
  0003c	e1a08000	 mov         r8, r0
  00040	e1530008	 cmp         r3, r8
  00044	0a000002	 beq         |$LN13@GetControl@8|
  00048		 |$LN20@GetControl@8|

; 563  :         {
; 564  :             return MMSYSERR_INVALPARAM;

  00048	e3a0000b	 mov         r0, #0xB

; 602  :     }

  0004c	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$LN13@GetControl@8|

; 565  :         }
; 566  : 
; 567  :         switch (dwFlags)

  00054	e3570000	 cmp         r7, #0
  00058	0a00001e	 beq         |$LN5@GetControl@8|
  0005c	e3570001	 cmp         r7, #1
  00060	1a000040	 bne         |$LN1@GetControl@8|

; 568  :         {
; 569  :             case MIXER_GETCONTROLDETAILSF_LISTTEXT:
; 570  :             {
; 571  :                 if ( pDetail->cbDetails != sizeof(MIXERCONTROLDETAILS_LISTTEXT) )

  00064	e5d60010	 ldrb        r0, [r6, #0x10]
  00068	e5d63011	 ldrb        r3, [r6, #0x11]
  0006c	e5d62012	 ldrb        r2, [r6, #0x12]
  00070	e5d61013	 ldrb        r1, [r6, #0x13]
  00074	e1803403	 orr         r3, r0, r3, lsl #8
  00078	e1833802	 orr         r3, r3, r2, lsl #16
  0007c	e1833c01	 orr         r3, r3, r1, lsl #24
  00080	e3530088	 cmp         r3, #0x88

; 572  :                 {
; 573  :                     return MMSYSERR_INVALPARAM;

  00084	1affffef	 bne         |$LN20@GetControl@8|

; 574  :                 }
; 575  : 
; 576  :                 MIXERCONTROLDETAILS_LISTTEXT * pValue = (MIXERCONTROLDETAILS_LISTTEXT * ) pDetail->paDetails;

  00088	e5d61014	 ldrb        r1, [r6, #0x14]
  0008c	e5d63015	 ldrb        r3, [r6, #0x15]
  00090	e5d62016	 ldrb        r2, [r6, #0x16]
  00094	e5d65017	 ldrb        r5, [r6, #0x17]
  00098	e1813403	 orr         r3, r1, r3, lsl #8
  0009c	e1836802	 orr         r6, r3, r2, lsl #16

; 577  : 
; 578  :                 for (DWORD i=0;i<NumSelections;i++)

  000a0	e3a04000	 mov         r4, #0
  000a4	e3580000	 cmp         r8, #0
  000a8	0a00002e	 beq         |$LN1@GetControl@8|
  000ac		 |$LL8@GetControl@8|

; 579  :                 {
; 580  :                     GetListText(pValue,i);

  000ac	e5993000	 ldr         r3, [r9]
  000b0	e1a02004	 mov         r2, r4
  000b4	e1861c05	 orr         r1, r6, r5, lsl #24
  000b8	e5933020	 ldr         r3, [r3, #0x20]
  000bc	e1a00009	 mov         r0, r9
  000c0	e1a0e00f	 mov         lr, pc
  000c4	e12fff13	 bx          r3
  000c8	e2844001	 add         r4, r4, #1
  000cc	e1540008	 cmp         r4, r8
  000d0	3afffff5	 bcc         |$LL8@GetControl@8|

; 581  :                 }
; 582  : 
; 583  :                 break;

  000d4	ea000023	 b           |$LN1@GetControl@8|
  000d8		 |$LN5@GetControl@8|

; 584  :             }
; 585  :             case MIXER_GETCONTROLDETAILSF_VALUE:
; 586  :             {
; 587  :                 if ( pDetail->cbDetails != sizeof(MIXERCONTROLDETAILS_BOOLEAN) )

  000d8	e5d60010	 ldrb        r0, [r6, #0x10]
  000dc	e5d63011	 ldrb        r3, [r6, #0x11]
  000e0	e5d62012	 ldrb        r2, [r6, #0x12]
  000e4	e5d61013	 ldrb        r1, [r6, #0x13]
  000e8	e1803403	 orr         r3, r0, r3, lsl #8
  000ec	e1833802	 orr         r3, r3, r2, lsl #16
  000f0	e1833c01	 orr         r3, r3, r1, lsl #24
  000f4	e3530004	 cmp         r3, #4

; 588  :                 {
; 589  :                     return MMSYSERR_INVALPARAM;

  000f8	1affffd2	 bne         |$LN20@GetControl@8|

; 590  :                 }
; 591  : 
; 592  :                 MIXERCONTROLDETAILS_BOOLEAN * pValue = (MIXERCONTROLDETAILS_BOOLEAN *) pDetail->paDetails;

  000fc	e5d60014	 ldrb        r0, [r6, #0x14]
  00100	e5d63015	 ldrb        r3, [r6, #0x15]
  00104	e5d62016	 ldrb        r2, [r6, #0x16]
  00108	e5d61017	 ldrb        r1, [r6, #0x17]
  0010c	e1803403	 orr         r3, r0, r3, lsl #8
  00110	e1833802	 orr         r3, r3, r2, lsl #16
  00114	e1834c01	 orr         r4, r3, r1, lsl #24

; 593  :                 for (DWORD i=0;i<NumSelections;i++)

  00118	e3a05000	 mov         r5, #0
  0011c	e3580000	 cmp         r8, #0
  00120	0a000010	 beq         |$LN1@GetControl@8|
  00124		 |$LL3@GetControl@8|

; 594  :                 {
; 595  :                     pValue[i].fValue = GetCurrSelection(i);

  00124	e5993000	 ldr         r3, [r9]
  00128	e1a01005	 mov         r1, r5
  0012c	e1a00009	 mov         r0, r9
  00130	e5933024	 ldr         r3, [r3, #0x24]
  00134	e1a0e00f	 mov         lr, pc
  00138	e12fff13	 bx          r3
  0013c	e1a03420	 mov         r3, r0, lsr #8
  00140	e1a02820	 mov         r2, r0, lsr #16
  00144	e1a01c20	 mov         r1, r0, lsr #24
  00148	e2855001	 add         r5, r5, #1
  0014c	e5c43001	 strb        r3, [r4, #1]
  00150	e5c42002	 strb        r2, [r4, #2]
  00154	e5c41003	 strb        r1, [r4, #3]
  00158	e5c40000	 strb        r0, [r4]
  0015c	e2844004	 add         r4, r4, #4
  00160	e1550008	 cmp         r5, r8
  00164	3affffee	 bcc         |$LL3@GetControl@8|
  00168		 |$LN1@GetControl@8|

; 596  :                 }
; 597  :                 break;
; 598  :             }
; 599  :         }
; 600  : 
; 601  :         return MMSYSERR_NOERROR;

  00168	e3a00000	 mov         r0, #0

; 602  :     }

  0016c	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  00170	e12fff1e	 bx          lr
  00174		 |$M37015|

			 ENDP  ; |?GetControlDetails@MixerControlSingleMultiSelect@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|, MixerControlSingleMultiSelect::GetControlDetails


  00000			 AREA	 |.pdata|, PDATA
|$T37035| DCD	|$LN16@SetControl@5|
	DCD	0x40003e01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetControlDetails@MixerControlSingleMultiSelect@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z| PROC ; MixerControlSingleMultiSelect::SetControlDetails

; 605  :     {

  00000		 |$LN16@SetControl@5|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004		 |$M37032|
  00004	e1a07002	 mov         r7, r2
  00008	e1a06001	 mov         r6, r1
  0000c	e1a09000	 mov         r9, r0

; 606  :         DWORD NumSelections = GetNumSelections();

  00010	e5993000	 ldr         r3, [r9]
  00014	e593301c	 ldr         r3, [r3, #0x1C]
  00018	e1a0e00f	 mov         lr, pc
  0001c	e12fff13	 bx          r3

; 607  : 
; 608  :         if (pDetail->cMultipleItems != NumSelections)

  00020	e5d6500c	 ldrb        r5, [r6, #0xC]
  00024	e5d6300d	 ldrb        r3, [r6, #0xD]
  00028	e5d6e00e	 ldrb        lr, [r6, #0xE]
  0002c	e5d6400f	 ldrb        r4, [r6, #0xF]
  00030	e1853403	 orr         r3, r5, r3, lsl #8
  00034	e183380e	 orr         r3, r3, lr, lsl #16
  00038	e1833c04	 orr         r3, r3, r4, lsl #24
  0003c	e1a08000	 mov         r8, r0
  00040	e1530008	 cmp         r3, r8
  00044	0a000002	 beq         |$LN8@SetControl@5|
  00048		 |$LN13@SetControl@5|

; 609  :         {
; 610  :             return MMSYSERR_INVALPARAM;

  00048	e3a0000b	 mov         r0, #0xB

; 631  :     }

  0004c	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$LN8@SetControl@5|

; 611  :         }
; 612  : 
; 613  :         switch (dwFlags)

  00054	e3570000	 cmp         r7, #0
  00058	1a000023	 bne         |$LN1@SetControl@5|

; 614  :         {
; 615  :             case MIXER_SETCONTROLDETAILSF_VALUE:
; 616  :             {
; 617  :                 if ( pDetail->cbDetails != sizeof(MIXERCONTROLDETAILS_BOOLEAN) )

  0005c	e5d60010	 ldrb        r0, [r6, #0x10]
  00060	e5d63011	 ldrb        r3, [r6, #0x11]
  00064	e5d62012	 ldrb        r2, [r6, #0x12]
  00068	e5d61013	 ldrb        r1, [r6, #0x13]
  0006c	e1803403	 orr         r3, r0, r3, lsl #8
  00070	e1833802	 orr         r3, r3, r2, lsl #16
  00074	e1833c01	 orr         r3, r3, r1, lsl #24
  00078	e3530004	 cmp         r3, #4

; 618  :                 {
; 619  :                     return MMSYSERR_INVALPARAM;

  0007c	1afffff1	 bne         |$LN13@SetControl@5|

; 620  :                 }
; 621  : 
; 622  :                 MIXERCONTROLDETAILS_BOOLEAN * pValue = (MIXERCONTROLDETAILS_BOOLEAN *) pDetail->paDetails;

  00080	e5d60014	 ldrb        r0, [r6, #0x14]
  00084	e5d63015	 ldrb        r3, [r6, #0x15]
  00088	e5d62016	 ldrb        r2, [r6, #0x16]
  0008c	e5d61017	 ldrb        r1, [r6, #0x17]
  00090	e1803403	 orr         r3, r0, r3, lsl #8
  00094	e1833802	 orr         r3, r3, r2, lsl #16
  00098	e1835c01	 orr         r5, r3, r1, lsl #24

; 623  :                 for (DWORD i=0;i<NumSelections;i++)

  0009c	e3a06000	 mov         r6, #0
  000a0	e3580000	 cmp         r8, #0
  000a4	0a000010	 beq         |$LN1@SetControl@5|
  000a8		 |$LL3@SetControl@5|

; 624  :                 {
; 625  :                     SetCurrSelection(i, pValue[i].fValue);

  000a8	e5d52000	 ldrb        r2, [r5]
  000ac	e5d53001	 ldrb        r3, [r5, #1]
  000b0	e5d51002	 ldrb        r1, [r5, #2]
  000b4	e5990000	 ldr         r0, [r9]
  000b8	e1823403	 orr         r3, r2, r3, lsl #8
  000bc	e5d52003	 ldrb        r2, [r5, #3]
  000c0	e5904028	 ldr         r4, [r0, #0x28]
  000c4	e1833801	 orr         r3, r3, r1, lsl #16
  000c8	e1832c02	 orr         r2, r3, r2, lsl #24
  000cc	e1a01006	 mov         r1, r6
  000d0	e1a00009	 mov         r0, r9
  000d4	e1a0e00f	 mov         lr, pc
  000d8	e12fff14	 bx          r4
  000dc	e2866001	 add         r6, r6, #1
  000e0	e1560008	 cmp         r6, r8
  000e4	e2855004	 add         r5, r5, #4
  000e8	3affffee	 bcc         |$LL3@SetControl@5|
  000ec		 |$LN1@SetControl@5|

; 626  :                 }
; 627  :                 break;
; 628  :             }
; 629  :         }
; 630  :         return MMSYSERR_NOERROR;

  000ec	e3a00000	 mov         r0, #0

; 631  :     }

  000f0	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  000f4	e12fff1e	 bx          lr
  000f8		 |$M37033|

			 ENDP  ; |?SetControlDetails@MixerControlSingleMultiSelect@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|, MixerControlSingleMultiSelect::SetControlDetails

	EXPORT	|??1MixerControlSingleMultiSelect@@UAA@XZ| ; MixerControlSingleMultiSelect::~MixerControlSingleMultiSelect

  00000			 AREA	 |.pdata|, PDATA
|$T37046| DCD	|$LN7@MixerContr@16|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1MixerControlSingleMultiSelect@@UAA@XZ| PROC ; MixerControlSingleMultiSelect::~MixerControlSingleMultiSelect
  00000		 |$LN7@MixerContr@16|
  00000		 |$M37043|
  00000	e59f3004	 ldr         r3, [pc, #4]
  00004	e5803000	 str         r3, [r0]
  00008	e12fff1e	 bx          lr
  0000c		 |$LN8@MixerContr@16|
  0000c		 |$LN9@MixerContr@16|
  0000c	00000000	 DCD         |??_7MixerControl@@6B@|
  00010		 |$M37044|

			 ENDP  ; |??1MixerControlSingleMultiSelect@@UAA@XZ|, MixerControlSingleMultiSelect::~MixerControlSingleMultiSelect

	EXPORT	|??0MixerControlMicBoost@@QAA@XZ|	; MixerControlMicBoost::MixerControlMicBoost
	EXPORT	|??_7MixerControlMicBoost@@6B@| [ DATA ] ; MixerControlMicBoost::`vftable'
	EXPORT	|?CopyMixerControl@MixerControlMicBoost@@UAAXPAUtMIXERCONTROL@@@Z| ; MixerControlMicBoost::CopyMixerControl
	EXPORT	|?GetLineID@MixerControlMicBoost@@UAAGXZ| ; MixerControlMicBoost::GetLineID
	EXPORT	|?GetValue@MixerControlMicBoost@@UAAHXZ| ; MixerControlMicBoost::GetValue
	EXPORT	|?SetValue@MixerControlMicBoost@@UAAXH@Z| ; MixerControlMicBoost::SetValue
	IMPORT	|?SetMicBoost@HardwareContext@@QAAIH@Z|	; HardwareContext::SetMicBoost
	IMPORT	|??_EMixerControlMicBoost@@UAAPAXI@Z|, WEAK |??_GMixerControlMicBoost@@UAAPAXI@Z| ; MixerControlMicBoost::`vector deleting destructor', MixerControlMicBoost::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T37066| DCD	|$LN9@MixerContr@17|
	DCD	0x40000f01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7MixerControlMicBoost@@6B@| DCD |??_EMixerControlMicBoost@@UAAPAXI@Z| ; MixerControlMicBoost::`vftable'
	DCD	|?SetControlID@MixerControl@@UAAXK@Z|
	DCD	|?CopyMixerControl@MixerControlMicBoost@@UAAXPAUtMIXERCONTROL@@@Z|
	DCD	|?GetControlDetails@MixerControlBoolean@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?SetControlDetails@MixerControlBoolean@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?GetControlType@MixerControlBoolean@@UAAKXZ|
	DCD	|?GetLineID@MixerControlMicBoost@@UAAGXZ|
	DCD	|?GetValue@MixerControlMicBoost@@UAAHXZ|
	DCD	|?SetValue@MixerControlMicBoost@@UAAXH@Z|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0MixerControlMicBoost@@QAA@XZ| PROC	; MixerControlMicBoost::MixerControlMicBoost

; 640  : 	{

  00000		 |$LN9@MixerContr@17|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37063|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3028	 ldr         r3, [pc, #0x28]

; 641  : 		// Enable Microphone Boost by default
; 642  : 		g_pHWContext->SetMicBoost(TRUE);

  0000c	e59f2020	 ldr         r2, [pc, #0x20]
  00010	e3e01000	 mvn         r1, #0
  00014	e5843000	 str         r3, [r4]
  00018	e5841004	 str         r1, [r4, #4]
  0001c	e5920000	 ldr         r0, [r2]
  00020	e3a01001	 mov         r1, #1
  00024	eb000000	 bl          |?SetMicBoost@HardwareContext@@QAAIH@Z|

; 643  : 	}

  00028	e1a00004	 mov         r0, r4
  0002c	e8bd4010	 ldmia       sp!, {r4, lr}
  00030	e12fff1e	 bx          lr
  00034		 |$LN10@MixerContr@17|
  00034		 |$LN11@MixerContr@17|
  00034	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  00038		 |$LN12@MixerContr@17|
  00038	00000000	 DCD         |??_7MixerControlMicBoost@@6B@|
  0003c		 |$M37064|

			 ENDP  ; |??0MixerControlMicBoost@@QAA@XZ|, MixerControlMicBoost::MixerControlMicBoost

	EXPORT	|??_C@_1DC@LOFKLFED@?$AAM?$AAi?$AAc?$AAr?$AAo?$AAp?$AAh?$AAo?$AAn?$AAe?$AA?5?$AAB?$AAo?$AAo?$AAs?$AAt?$AA?5?$AA?$CI?$AA?$CL?$AA2?$AA0?$AAd?$AAB?$AA?$CJ?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@CNDCNPPI@?$AAM?$AAi?$AAc?$AA?5?$AAB?$AAo?$AAo?$AAs?$AAt?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T37078| DCD	|$LN5@CopyMixerC@9|
	DCD	0x40000d01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@LOFKLFED@?$AAM?$AAi?$AAc?$AAr?$AAo?$AAp?$AAh?$AAo?$AAn?$AAe?$AA?5?$AAB?$AAo?$AAo?$AAs?$AAt?$AA?5?$AA?$CI?$AA?$CL?$AA2?$AA0?$AAd?$AAB?$AA?$CJ?$AA?$AA@| DCB "M"
	DCB	0x0, "i", 0x0, "c", 0x0, "r", 0x0, "o", 0x0, "p", 0x0, "h"
	DCB	0x0, "o", 0x0, "n", 0x0, "e", 0x0, " ", 0x0, "B", 0x0, "o"
	DCB	0x0, "o", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "(", 0x0, "+"
	DCB	0x0, "2", 0x0, "0", 0x0, "d", 0x0, "B", 0x0, ")", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@CNDCNPPI@?$AAM?$AAi?$AAc?$AA?5?$AAB?$AAo?$AAo?$AAs?$AAt?$AA?$AA@| DCB "M"
	DCB	0x0, "i", 0x0, "c", 0x0, " ", 0x0, "B", 0x0, "o", 0x0, "o"
	DCB	0x0, "s", 0x0, "t", 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CopyMixerControl@MixerControlMicBoost@@UAAXPAUtMIXERCONTROL@@@Z| PROC ; MixerControlMicBoost::CopyMixerControl

; 646  :     {

  00000		 |$LN5@CopyMixerC@9|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37075|
  00004	e1a04001	 mov         r4, r1

; 647  :         MixerControlBoolean::CopyMixerControl(pamxctrl);

  00008	eb000000	 bl          |?CopyMixerControl@MixerControlBoolean@@UAAXPAUtMIXERCONTROL@@@Z|

; 648  :         wcscpy(pamxctrl->szName, TEXT("Microphone Boost (+20dB)"));

  0000c	e59f101c	 ldr         r1, [pc, #0x1C]
  00010	e2840034	 add         r0, r4, #0x34
  00014	eb000000	 bl          wcscpy

; 649  :         wcscpy(pamxctrl->szShortName, TEXT("Mic Boost"));

  00018	e59f100c	 ldr         r1, [pc, #0xC]
  0001c	e2840014	 add         r0, r4, #0x14
  00020	eb000000	 bl          wcscpy

; 650  :     }

  00024	e8bd4010	 ldmia       sp!, {r4, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$LN6@CopyMixerC@9|
  0002c		 |$LN7@CopyMixerC@9|
  0002c	00000000	 DCD         |??_C@_1BE@CNDCNPPI@?$AAM?$AAi?$AAc?$AA?5?$AAB?$AAo?$AAo?$AAs?$AAt?$AA?$AA@|
  00030		 |$LN8@CopyMixerC@9|
  00030	00000000	 DCD         |??_C@_1DC@LOFKLFED@?$AAM?$AAi?$AAc?$AAr?$AAo?$AAp?$AAh?$AAo?$AAn?$AAe?$AA?5?$AAB?$AAo?$AAo?$AAs?$AAt?$AA?5?$AA?$CI?$AA?$CL?$AA2?$AA0?$AAd?$AAB?$AA?$CJ?$AA?$AA@|
  00034		 |$M37076|

			 ENDP  ; |?CopyMixerControl@MixerControlMicBoost@@UAAXPAUtMIXERCONTROL@@@Z|, MixerControlMicBoost::CopyMixerControl


  00000			 AREA	 |.pdata|, PDATA
|$T37090| DCD	|$LN5@GetLineID@5|
	DCD	0x40000300
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetLineID@MixerControlMicBoost@@UAAGXZ| PROC ; MixerControlMicBoost::GetLineID

; 652  :     USHORT GetLineID() { return MXLINEID(PCM_IN,NOLINE); }

  00000		 |$LN5@GetLineID@5|
  00000		 |$M37087|
  00000	e3a03cff	 mov         r3, #0xFF, 24
  00004	e3830081	 orr         r0, r3, #0x81
  00008	e12fff1e	 bx          lr
  0000c		 |$M37088|

			 ENDP  ; |?GetLineID@MixerControlMicBoost@@UAAGXZ|, MixerControlMicBoost::GetLineID

	IMPORT	|?GetMicBoost@HardwareContext@@QAAHXZ|	; HardwareContext::GetMicBoost

  00000			 AREA	 |.pdata|, PDATA
|$T37099| DCD	|$LN5@GetValue@3|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetValue@MixerControlMicBoost@@UAAHXZ| PROC ; MixerControlMicBoost::GetValue

; 653  : 	BOOL GetValue() { return g_pHWContext->GetMicBoost(); }

  00000		 |$LN5@GetValue@3|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37096|
  00004	e59f300c	 ldr         r3, [pc, #0xC]
  00008	e5930000	 ldr         r0, [r3]
  0000c	eb000000	 bl          |?GetMicBoost@HardwareContext@@QAAHXZ|
  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$LN6@GetValue@3|
  00018		 |$LN7@GetValue@3|
  00018	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  0001c		 |$M37097|

			 ENDP  ; |?GetValue@MixerControlMicBoost@@UAAHXZ|, MixerControlMicBoost::GetValue


  00000			 AREA	 |.pdata|, PDATA
|$T37109| DCD	|$LN5@SetValue@3|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetValue@MixerControlMicBoost@@UAAXH@Z| PROC ; MixerControlMicBoost::SetValue

; 654  : 	void SetValue(BOOL bMicBoost) { g_pHWContext->SetMicBoost(bMicBoost); }

  00000		 |$LN5@SetValue@3|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37106|
  00004	e59f300c	 ldr         r3, [pc, #0xC]
  00008	e5930000	 ldr         r0, [r3]
  0000c	eb000000	 bl          |?SetMicBoost@HardwareContext@@QAAIH@Z|
  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$LN6@SetValue@3|
  00018		 |$LN7@SetValue@3|
  00018	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  0001c		 |$M37107|

			 ENDP  ; |?SetValue@MixerControlMicBoost@@UAAXH@Z|, MixerControlMicBoost::SetValue

	EXPORT	|??1MixerControlMicBoost@@UAA@XZ|	; MixerControlMicBoost::~MixerControlMicBoost

  00000			 AREA	 |.pdata|, PDATA
|$T37127| DCD	|$LN9@MixerContr@18|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1MixerControlMicBoost@@UAA@XZ| PROC	; MixerControlMicBoost::~MixerControlMicBoost
  00000		 |$LN9@MixerContr@18|
  00000		 |$M37124|
  00000	e59f3004	 ldr         r3, [pc, #4]
  00004	e5803000	 str         r3, [r0]
  00008	e12fff1e	 bx          lr
  0000c		 |$LN10@MixerContr@18|
  0000c		 |$LN11@MixerContr@18|
  0000c	00000000	 DCD         |??_7MixerControl@@6B@|
  00010		 |$M37125|

			 ENDP  ; |??1MixerControlMicBoost@@UAA@XZ|, MixerControlMicBoost::~MixerControlMicBoost

	EXPORT	|??0MixerControlInputMux@@QAA@XZ|	; MixerControlInputMux::MixerControlInputMux
	EXPORT	|??_7MixerControlInputMux@@6B@| [ DATA ] ; MixerControlInputMux::`vftable'
	EXPORT	|?CopyMixerControl@MixerControlInputMux@@UAAXPAUtMIXERCONTROL@@@Z| ; MixerControlInputMux::CopyMixerControl
	EXPORT	|?GetControlType@MixerControlInputMux@@UAAKXZ| ; MixerControlInputMux::GetControlType
	EXPORT	|?GetLineID@MixerControlInputMux@@UAAGXZ| ; MixerControlInputMux::GetLineID
	EXPORT	|?GetNumSelections@MixerControlInputMux@@UAAKXZ| ; MixerControlInputMux::GetNumSelections
	EXPORT	|?GetListText@MixerControlInputMux@@UAAXPAUtMIXERCONTROLDETAILS_LISTTEXT@@K@Z| ; MixerControlInputMux::GetListText
	EXPORT	|?GetCurrSelection@MixerControlInputMux@@UAAKK@Z| ; MixerControlInputMux::GetCurrSelection
	EXPORT	|?SetCurrSelection@MixerControlInputMux@@UAAXKH@Z| ; MixerControlInputMux::SetCurrSelection
	IMPORT	|??_EMixerControlInputMux@@UAAPAXI@Z|, WEAK |??_GMixerControlInputMux@@UAAPAXI@Z| ; MixerControlInputMux::`vector deleting destructor', MixerControlInputMux::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T37147| DCD	|$LN9@MixerContr@19|
	DCD	0x40000800

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7MixerControlInputMux@@6B@| DCD |??_EMixerControlInputMux@@UAAPAXI@Z| ; MixerControlInputMux::`vftable'
	DCD	|?SetControlID@MixerControl@@UAAXK@Z|
	DCD	|?CopyMixerControl@MixerControlInputMux@@UAAXPAUtMIXERCONTROL@@@Z|
	DCD	|?GetControlDetails@MixerControlSingleMultiSelect@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?SetControlDetails@MixerControlSingleMultiSelect@@UAAKPAUtMIXERCONTROLDETAILS@@K@Z|
	DCD	|?GetControlType@MixerControlInputMux@@UAAKXZ|
	DCD	|?GetLineID@MixerControlInputMux@@UAAGXZ|
	DCD	|?GetNumSelections@MixerControlInputMux@@UAAKXZ|
	DCD	|?GetListText@MixerControlInputMux@@UAAXPAUtMIXERCONTROLDETAILS_LISTTEXT@@K@Z|
	DCD	|?GetCurrSelection@MixerControlInputMux@@UAAKK@Z|
	DCD	|?SetCurrSelection@MixerControlInputMux@@UAAXKH@Z|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0MixerControlInputMux@@QAA@XZ| PROC	; MixerControlInputMux::MixerControlInputMux

; 661  :     MixerControlInputMux() : m_CurrSelection(0), MixerControlSingleMultiSelect() {}

  00000		 |$LN9@MixerContr@19|
  00000		 |$M37144|
  00000	e59f3014	 ldr         r3, [pc, #0x14]
  00004	e3e02000	 mvn         r2, #0
  00008	e3a01000	 mov         r1, #0
  0000c	e5803000	 str         r3, [r0]
  00010	e5802004	 str         r2, [r0, #4]
  00014	e5801008	 str         r1, [r0, #8]
  00018	e12fff1e	 bx          lr
  0001c		 |$LN10@MixerContr@19|
  0001c		 |$LN11@MixerContr@19|
  0001c	00000000	 DCD         |??_7MixerControlInputMux@@6B@|
  00020		 |$M37145|

			 ENDP  ; |??0MixerControlInputMux@@QAA@XZ|, MixerControlInputMux::MixerControlInputMux

	EXPORT	|?GetComponentType@MixerControl@@QAAKXZ| ; MixerControl::GetComponentType

  00000			 AREA	 |.pdata|, PDATA
|$T37160| DCD	|$LN5@GetCompone|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetComponentType@MixerControl@@QAAKXZ| PROC ; MixerControl::GetComponentType

; 279  :     {

  00000		 |$LN5@GetCompone|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37157|

; 280  :         PMXLINEDESC pLine = LookupMxLine(GetLineID());

  00004	e5903000	 ldr         r3, [r0]
  00008	e5933018	 ldr         r3, [r3, #0x18]
  0000c	e1a0e00f	 mov         lr, pc
  00010	e12fff13	 bx          r3
  00014	e1a00800	 mov         r0, r0, lsl #16
  00018	e1a00820	 mov         r0, r0, lsr #16
  0001c	eb000000	 bl          |?LookupMxLine@@YAPBUtagMXLINEDESC@@G@Z|

; 281  :         return pLine->dwComponentType;

  00020	e5900000	 ldr         r0, [r0]

; 282  :     }

  00024	e49de004	 ldr         lr, [sp], #4
  00028	e12fff1e	 bx          lr
  0002c		 |$M37158|

			 ENDP  ; |?GetComponentType@MixerControl@@QAAKXZ|, MixerControl::GetComponentType

	EXPORT	|??_C@_1BE@FNMPOHBO@?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?5?$AAM?$AAu?$AAx?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T37169| DCD	|$LN5@CopyMixerC@10|
	DCD	0x40001201

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@FNMPOHBO@?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?5?$AAM?$AAu?$AAx?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "p", 0x0, "u", 0x0, "t", 0x0, " ", 0x0, "M"
	DCB	0x0, "u", 0x0, "x", 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CopyMixerControl@MixerControlInputMux@@UAAXPAUtMIXERCONTROL@@@Z| PROC ; MixerControlInputMux::CopyMixerControl

; 664  :     {

  00000		 |$LN5@CopyMixerC@10|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37166|
  00004	e1a04001	 mov         r4, r1

; 665  :         MixerControlSingleMultiSelect::CopyMixerControl(pamxctrl);

  00008	eb000000	 bl          |?CopyMixerControl@MixerControlSingleMultiSelect@@UAAXPAUtMIXERCONTROL@@@Z|

; 666  :         wcscpy(pamxctrl->szName, TEXT("Input Mux"));

  0000c	e59f1030	 ldr         r1, [pc, #0x30]
  00010	e2840034	 add         r0, r4, #0x34
  00014	eb000000	 bl          wcscpy

; 667  :         wcscpy(pamxctrl->szShortName, TEXT("Input Mux"));

  00018	e59f1024	 ldr         r1, [pc, #0x24]
  0001c	e2840014	 add         r0, r4, #0x14
  00020	eb000000	 bl          wcscpy

; 668  :         pamxctrl->fdwControl = MIXERCONTROL_CONTROLF_UNIFORM|MIXERCONTROL_CONTROLF_MULTIPLE;

  00024	e3a03003	 mov         r3, #3
  00028	e5c4300c	 strb        r3, [r4, #0xC]
  0002c	e3a03000	 mov         r3, #0
  00030	e5c4300d	 strb        r3, [r4, #0xD]
  00034	e5c4300e	 strb        r3, [r4, #0xE]
  00038	e5c4300f	 strb        r3, [r4, #0xF]

; 669  :     }

  0003c	e8bd4010	 ldmia       sp!, {r4, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$LN6@CopyMixerC@10|
  00044		 |$LN7@CopyMixerC@10|
  00044	00000000	 DCD         |??_C@_1BE@FNMPOHBO@?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?5?$AAM?$AAu?$AAx?$AA?$AA@|
  00048		 |$M37167|

			 ENDP  ; |?CopyMixerControl@MixerControlInputMux@@UAAXPAUtMIXERCONTROL@@@Z|, MixerControlInputMux::CopyMixerControl


  00000			 AREA	 |.pdata|, PDATA
|$T37180| DCD	|$LN5@GetLineID@6|
	DCD	0x40000300
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetLineID@MixerControlInputMux@@UAAGXZ| PROC ; MixerControlInputMux::GetLineID

; 671  :     USHORT GetLineID() { return MXLINEID(PCM_IN,NOLINE); }

  00000		 |$LN5@GetLineID@6|
  00000		 |$M37177|
  00000	e3a03cff	 mov         r3, #0xFF, 24
  00004	e3830081	 orr         r0, r3, #0x81
  00008	e12fff1e	 bx          lr
  0000c		 |$M37178|

			 ENDP  ; |?GetLineID@MixerControlInputMux@@UAAGXZ|, MixerControlInputMux::GetLineID


  00000			 AREA	 |.pdata|, PDATA
|$T37189| DCD	|$LN5@GetControl@9|
	DCD	0x40000300
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetControlType@MixerControlInputMux@@UAAKXZ| PROC ; MixerControlInputMux::GetControlType

; 672  :     DWORD GetControlType() {return MIXERCONTROL_CONTROLTYPE_MUX;}

  00000		 |$LN5@GetControl@9|
  00000		 |$M37186|
  00000	e3a03217	 mov         r3, #0x17, 4
  00004	e3830801	 orr         r0, r3, #1, 16
  00008	e12fff1e	 bx          lr
  0000c		 |$M37187|

			 ENDP  ; |?GetControlType@MixerControlInputMux@@UAAKXZ|, MixerControlInputMux::GetControlType


  00000			 AREA	 |.pdata|, PDATA
|$T37198| DCD	|$LN5@GetNumSele|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetNumSelections@MixerControlInputMux@@UAAKXZ| PROC ; MixerControlInputMux::GetNumSelections

; 674  :     DWORD GetNumSelections() { return 2; }

  00000		 |$LN5@GetNumSele|
  00000		 |$M37195|
  00000	e3a00002	 mov         r0, #2
  00004	e12fff1e	 bx          lr
  00008		 |$M37196|

			 ENDP  ; |?GetNumSelections@MixerControlInputMux@@UAAKXZ|, MixerControlInputMux::GetNumSelections

	EXPORT	|?szNames@?1??GetListText@MixerControlInputMux@@UAAXPAUtMIXERCONTROLDETAILS_LISTTEXT@@K@Z@4PAPBGA| [ DATA ] ; `MixerControlInputMux::GetListText'::`2'::szNames
	EXPORT	|??_C@_1BG@KOFOLECK@?$AAL?$AAi?$AAn?$AAe?$AA?5?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T37214| DCD	|$LN7@GetListTex|
	DCD	0x40002901

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@KOFOLECK@?$AAL?$AAi?$AAn?$AAe?$AA?5?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?$AA@| DCB "L"
	DCB	0x0, "i", 0x0, "n", 0x0, "e", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "p", 0x0, "u", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.data|, DATA
|?szNames@?1??GetListText@MixerControlInputMux@@UAAXPAUtMIXERCONTROLDETAILS_LISTTEXT@@K@Z@4PAPBGA| DCD |??_C@_1BG@KOFOLECK@?$AAL?$AAi?$AAn?$AAe?$AA?5?$AAI?$AAn?$AAp?$AAu?$AAt?$AA?$AA@| ; `MixerControlInputMux::GetListText'::`2'::szNames
	DCD	|??_C@_1BG@OGJPAHBK@?$AAM?$AAi?$AAc?$AAr?$AAo?$AAp?$AAh?$AAo?$AAn?$AAe?$AA?$AA@|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetListText@MixerControlInputMux@@UAAXPAUtMIXERCONTROLDETAILS_LISTTEXT@@K@Z| PROC ; MixerControlInputMux::GetListText

; 677  :     {

  00000		 |$LN7@GetListTex|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M37211|
  00004	e1a07002	 mov         r7, r2
  00008	e1a06001	 mov         r6, r1
  0000c	e1a05000	 mov         r5, r0

; 678  :         static const TCHAR *szNames[] =
; 679  :         {
; 680  :                 TEXT("Line Input"),
; 681  :                 TEXT("Microphone"),
; 682  :         };
; 683  : 
; 684  :         pValue[Index].dwParam1 = GetLineID();

  00010	e5953000	 ldr         r3, [r5]
  00014	e5933018	 ldr         r3, [r3, #0x18]
  00018	e1a0e00f	 mov         lr, pc
  0001c	e12fff13	 bx          r3
  00020	e1a04800	 mov         r4, r0, lsl #16
  00024	e1a04824	 mov         r4, r4, lsr #16
  00028	e0873207	 add         r3, r7, r7, lsl #4
  0002c	e7e64183	 strb        r4, [r6, +r3, lsl #3]!
  00030	e1a03424	 mov         r3, r4, lsr #8
  00034	e1a0e824	 mov         lr, r4, lsr #16
  00038	e1a04c24	 mov         r4, r4, lsr #24
  0003c	e5c63001	 strb        r3, [r6, #1]
  00040	e5c6e002	 strb        lr, [r6, #2]
  00044	e5c64003	 strb        r4, [r6, #3]

; 685  :         pValue[Index].dwParam2 = GetComponentType();

  00048	e5953000	 ldr         r3, [r5]
  0004c	e1a00005	 mov         r0, r5
  00050	e5933018	 ldr         r3, [r3, #0x18]
  00054	e1a0e00f	 mov         lr, pc
  00058	e12fff13	 bx          r3
  0005c	e1a00800	 mov         r0, r0, lsl #16
  00060	e1a00820	 mov         r0, r0, lsr #16
  00064	eb000000	 bl          |?LookupMxLine@@YAPBUtagMXLINEDESC@@G@Z|
  00068	e590e000	 ldr         lr, [r0]

; 686  :         wcscpy(pValue[Index].szName,szNames[Index]);

  0006c	e59f402c	 ldr         r4, [pc, #0x2C]
  00070	e2860008	 add         r0, r6, #8
  00074	e1a0342e	 mov         r3, lr, lsr #8
  00078	e1a0282e	 mov         r2, lr, lsr #16
  0007c	e1a01c2e	 mov         r1, lr, lsr #24
  00080	e5c63005	 strb        r3, [r6, #5]
  00084	e5c62006	 strb        r2, [r6, #6]
  00088	e5c61007	 strb        r1, [r6, #7]
  0008c	e5c6e004	 strb        lr, [r6, #4]
  00090	e7941107	 ldr         r1, [r4, +r7, lsl #2]
  00094	eb000000	 bl          wcscpy

; 687  :     }

  00098	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  0009c	e12fff1e	 bx          lr
  000a0		 |$LN8@GetListTex|
  000a0		 |$LN9@GetListTex|
  000a0	00000000	 DCD         |?szNames@?1??GetListText@MixerControlInputMux@@UAAXPAUtMIXERCONTROLDETAILS_LISTTEXT@@K@Z@4PAPBGA|
  000a4		 |$M37212|

			 ENDP  ; |?GetListText@MixerControlInputMux@@UAAXPAUtMIXERCONTROLDETAILS_LISTTEXT@@K@Z|, MixerControlInputMux::GetListText


  00000			 AREA	 |.pdata|, PDATA
|$T37229| DCD	|$LN7@GetCurrSel|
	DCD	0x40000500
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetCurrSelection@MixerControlInputMux@@UAAKK@Z| PROC ; MixerControlInputMux::GetCurrSelection

; 691  :     {

  00000		 |$LN7@GetCurrSel|
  00000		 |$M37226|

; 692  :         return (Index == m_CurrSelection);

  00000	e5903008	 ldr         r3, [r0, #8]
  00004	e1510003	 cmp         r1, r3
  00008	03a00001	 moveq       r0, #1
  0000c	13a00000	 movne       r0, #0

; 693  :     }

  00010	e12fff1e	 bx          lr
  00014		 |$M37227|

			 ENDP  ; |?GetCurrSelection@MixerControlInputMux@@UAAKK@Z|, MixerControlInputMux::GetCurrSelection

	IMPORT	|?SetInputMux@HardwareContext@@QAAIH@Z|	; HardwareContext::SetInputMux

  00000			 AREA	 |.pdata|, PDATA
|$T37239| DCD	|$LN6@SetCurrSel|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetCurrSelection@MixerControlInputMux@@UAAXKH@Z| PROC ; MixerControlInputMux::SetCurrSelection

; 697  :     {

  00000		 |$LN6@SetCurrSel|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37236|
  00004	e3520000	 cmp         r2, #0

; 698  :         if (bSet)
; 699  :         {
; 700  :             m_CurrSelection = Index;
; 701  : 			g_pHWContext->SetInputMux(m_CurrSelection);

  00008	159f3010	 ldrne       r3, [pc, #0x10]
  0000c	15801008	 strne       r1, [r0, #8]
  00010	15930000	 ldrne       r0, [r3]
  00014	1b000000	 blne        |?SetInputMux@HardwareContext@@QAAIH@Z|

; 702  :         }
; 703  :     }

  00018	e49de004	 ldr         lr, [sp], #4
  0001c	e12fff1e	 bx          lr
  00020		 |$LN7@SetCurrSel|
  00020		 |$LN8@SetCurrSel|
  00020	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  00024		 |$M37237|

			 ENDP  ; |?SetCurrSelection@MixerControlInputMux@@UAAXKH@Z|, MixerControlInputMux::SetCurrSelection

	EXPORT	|??1MixerControlInputMux@@UAA@XZ|	; MixerControlInputMux::~MixerControlInputMux

  00000			 AREA	 |.pdata|, PDATA
|$T37257| DCD	|$LN9@MixerContr@20|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1MixerControlInputMux@@UAA@XZ| PROC	; MixerControlInputMux::~MixerControlInputMux
  00000		 |$LN9@MixerContr@20|
  00000		 |$M37254|
  00000	e59f3004	 ldr         r3, [pc, #4]
  00004	e5803000	 str         r3, [r0]
  00008	e12fff1e	 bx          lr
  0000c		 |$LN10@MixerContr@20|
  0000c		 |$LN11@MixerContr@20|
  0000c	00000000	 DCD         |??_7MixerControl@@6B@|
  00010		 |$M37255|

			 ENDP  ; |??1MixerControlInputMux@@UAA@XZ|, MixerControlInputMux::~MixerControlInputMux

	EXPORT	|??0MixerControlList@@QAA@XZ|		; MixerControlList::MixerControlList
	EXPORT	|??_7MixerControlList@@6B@| [ DATA ]	; MixerControlList::`vftable'
	IMPORT	|??_EMixerControlList@@UAAPAXI@Z|, WEAK |??_GMixerControlList@@UAAPAXI@Z| ; MixerControlList::`vector deleting destructor', MixerControlList::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T37357| DCD	|$LN40@MixerContr@21|
	DCD	0x40003901

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7MixerControlList@@6B@| DCD |??_EMixerControlList@@UAAPAXI@Z| ; MixerControlList::`vftable'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0MixerControlList@@QAA@XZ| PROC	; MixerControlList::MixerControlList

; 712  :     MixerControlList()

  00000		 |$LN40@MixerContr@21|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004		 |$M37354|
  00004	e1a0a000	 mov         r10, r0
  00008	e59f30d0	 ldr         r3, [pc, #0xD0]
  0000c	e1a0900a	 mov         r9, r10
  00010	e59f20c4	 ldr         r2, [pc, #0xC4]
  00014	e4893004	 str         r3, [r9], #4
  00018	e59f30b8	 ldr         r3, [pc, #0xB8]
  0001c	e59f10b0	 ldr         r1, [pc, #0xB0]
  00020	e59fe0a8	 ldr         lr, [pc, #0xA8]
  00024	e3e0b000	 mvn         r11, #0
  00028	e28a800c	 add         r8, r10, #0xC
  0002c	e8890804	 stmia       r9, {r2, r11}
  00030	e28a7014	 add         r7, r10, #0x14
  00034	e8880808	 stmia       r8, {r3, r11}
  00038	e8870802	 stmia       r7, {r1, r11}
  0003c	e1a0100b	 mov         r1, r11
  00040	e59e0000	 ldr         r0, [lr]
  00044	eb000000	 bl          |?SetInputGain@HardwareContext@@QAAIK@Z|
  00048	e59f307c	 ldr         r3, [pc, #0x7C]
  0004c	e59f2074	 ldr         r2, [pc, #0x74]
  00050	e28a501c	 add         r5, r10, #0x1C
  00054	e8850808	 stmia       r5, {r3, r11}
  00058	e28a6030	 add         r6, r10, #0x30
  0005c	e3a03000	 mov         r3, #0
  00060	e28a4024	 add         r4, r10, #0x24
  00064	e1a00006	 mov         r0, r6
  00068	e5843008	 str         r3, [r4, #8]
  0006c	e8840804	 stmia       r4, {r2, r11}
  00070	eb000000	 bl          |??0MixerControlMicBoost@@QAA@XZ|

; 713  :     {
; 714  :         m_MixerControlList[0] = &m_MixerControlVolumeMaster;
; 715  :         m_MixerControlList[1] = &m_MixerControlMuteMaster;
; 716  :         m_MixerControlList[2] = &m_MixerControlVolumeInput;
; 717  :         m_MixerControlList[3] = &m_MixerControlInputMute;

  00074	e58a5044	 str         r5, [r10, #0x44]

; 718  :         m_MixerControlList[4] = &m_MixerControlInputMux;

  00078	e58a4048	 str         r4, [r10, #0x48]
  0007c	e58a9038	 str         r9, [r10, #0x38]
  00080	e58a803c	 str         r8, [r10, #0x3C]

; 719  : 		m_MixerControlList[5] = &m_MixerControlMicBoost;
; 720  : 
; 721  :         for (DWORD i=0;i<m_cControls;i++)

  00084	e1a0500a	 mov         r5, r10
  00088	e3a04000	 mov         r4, #0
  0008c	e58a7040	 str         r7, [r10, #0x40]
  00090	e58a604c	 str         r6, [r10, #0x4C]
  00094		 |$LL3@MixerContr@21|

; 722  :         {
; 723  :             m_MixerControlList[i]->SetControlID(i);

  00094	e5950038	 ldr         r0, [r5, #0x38]
  00098	e1a01004	 mov         r1, r4
  0009c	e5903000	 ldr         r3, [r0]
  000a0	e5933004	 ldr         r3, [r3, #4]
  000a4	e1a0e00f	 mov         lr, pc
  000a8	e12fff13	 bx          r3
  000ac	e2844001	 add         r4, r4, #1
  000b0	e3540006	 cmp         r4, #6
  000b4	e2855004	 add         r5, r5, #4
  000b8	3afffff5	 bcc         |$LL3@MixerContr@21|

; 724  :         }
; 725  :     };

  000bc	e1a0000a	 mov         r0, r10
  000c0	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  000c4	e12fff1e	 bx          lr
  000c8		 |$LN41@MixerContr@21|
  000c8		 |$LN42@MixerContr@21|
  000c8	00000000	 DCD         |??_7MixerControlInputMux@@6B@|
  000cc		 |$LN43@MixerContr@21|
  000cc	00000000	 DCD         |??_7MixerControlInputMute@@6B@|
  000d0		 |$LN44@MixerContr@21|
  000d0	00000000	 DCD         |?g_pHWContext@@3PAVHardwareContext@@A|
  000d4		 |$LN45@MixerContr@21|
  000d4	00000000	 DCD         |??_7MixerControlVolumeInput@@6B@|
  000d8		 |$LN46@MixerContr@21|
  000d8	00000000	 DCD         |??_7MixerControlMuteMaster@@6B@|
  000dc		 |$LN47@MixerContr@21|
  000dc	00000000	 DCD         |??_7MixerControlVolumeMaster@@6B@|
  000e0		 |$LN48@MixerContr@21|
  000e0	00000000	 DCD         |??_7MixerControlList@@6B@|
  000e4		 |$M37355|

			 ENDP  ; |??0MixerControlList@@QAA@XZ|, MixerControlList::MixerControlList

	EXPORT	|??1MixerControlList@@UAA@XZ|		; MixerControlList::~MixerControlList

  00000			 AREA	 |.pdata|, PDATA
|$T37463| DCD	|$LN41@MixerContr@22|
	DCD	0x40000c00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1MixerControlList@@UAA@XZ| PROC	; MixerControlList::~MixerControlList

; 728  :     {

  00000		 |$LN41@MixerContr@22|
  00000		 |$M37460|
  00000	e59f3024	 ldr         r3, [pc, #0x24]

; 729  :     }

  00004	e59f201c	 ldr         r2, [pc, #0x1C]
  00008	e5803000	 str         r3, [r0]
  0000c	e5802030	 str         r2, [r0, #0x30]
  00010	e5802024	 str         r2, [r0, #0x24]
  00014	e580201c	 str         r2, [r0, #0x1C]
  00018	e5802014	 str         r2, [r0, #0x14]
  0001c	e580200c	 str         r2, [r0, #0xC]
  00020	e5802004	 str         r2, [r0, #4]
  00024	e12fff1e	 bx          lr
  00028		 |$LN42@MixerContr@22|
  00028		 |$LN43@MixerContr@22|
  00028	00000000	 DCD         |??_7MixerControl@@6B@|
  0002c		 |$LN44@MixerContr@22|
  0002c	00000000	 DCD         |??_7MixerControlList@@6B@|
  00030		 |$M37461|

			 ENDP  ; |??1MixerControlList@@UAA@XZ|, MixerControlList::~MixerControlList

	EXPORT	|?LookupControlByIndex@MixerControlList@@QAAPAVMixerControl@@K@Z| ; MixerControlList::LookupControlByIndex

  00000			 AREA	 |.pdata|, PDATA
|$T37477| DCD	|$LN6@LookupCont|
	DCD	0x40000500
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?LookupControlByIndex@MixerControlList@@QAAPAVMixerControl@@K@Z| PROC ; MixerControlList::LookupControlByIndex

; 732  :     {

  00000		 |$LN6@LookupCont|
  00000		 |$M37474|

; 733  :         if (Index >= m_cControls)

  00000	e3510006	 cmp         r1, #6

; 734  :         {
; 735  :             return NULL;

  00004	23a00000	 movcs       r0, #0

; 736  :         }
; 737  :         return m_MixerControlList[Index];

  00008	3281300e	 addcc       r3, r1, #0xE
  0000c	37900103	 ldrcc       r0, [r0, +r3, lsl #2]

; 738  :     }

  00010	e12fff1e	 bx          lr
  00014		 |$M37475|

			 ENDP  ; |?LookupControlByIndex@MixerControlList@@QAAPAVMixerControl@@K@Z|, MixerControlList::LookupControlByIndex


  00000			 AREA	 |.pdata|, PDATA
|$T37617| DCD	|$LN44@scalar@2|
	DCD	0x40001201
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GMixerControlList@@UAAPAXI@Z| PROC	; MixerControlList::`scalar deleting destructor'
  00000		 |$LN44@scalar@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37614|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3034	 ldr         r3, [pc, #0x34]
  0000c	e59f202c	 ldr         r2, [pc, #0x2C]
  00010	e3110001	 tst         r1, #1
  00014	e5843000	 str         r3, [r4]
  00018	e5842030	 str         r2, [r4, #0x30]
  0001c	e5842024	 str         r2, [r4, #0x24]
  00020	e584201c	 str         r2, [r4, #0x1C]
  00024	e5842014	 str         r2, [r4, #0x14]
  00028	e584200c	 str         r2, [r4, #0xC]
  0002c	e5842004	 str         r2, [r4, #4]
  00030	1b000000	 blne        |??3@YAXPAX@Z|
  00034	e1a00004	 mov         r0, r4
  00038	e8bd4010	 ldmia       sp!, {r4, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN45@scalar@2|
  00040		 |$LN46@scalar@2|
  00040	00000000	 DCD         |??_7MixerControl@@6B@|
  00044		 |$LN47@scalar@2|
  00044	00000000	 DCD         |??_7MixerControlList@@6B@|
  00048		 |$M37615|

			 ENDP  ; |??_GMixerControlList@@UAAPAXI@Z|, MixerControlList::`scalar deleting destructor'

	EXPORT	|?PerformMixerCallbacks@@YAXKK@Z|	; PerformMixerCallbacks

  00004			 AREA	 |.bss|, NOINIT
|g_pHead| %	0x4
|g_pHead| %	0x4

  00000			 AREA	 |.pdata|, PDATA
|$T37632| DCD	|$LN11@PerformMix|
	DCD	0x40001902
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PerformMixerCallbacks@@YAXKK@Z| PROC	; PerformMixerCallbacks

; 764  : {

  00000		 |$LN11@PerformMix|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M37629|
  00008	e1a06001	 mov         r6, r1
  0000c	e1a07000	 mov         r7, r0

; 765  :     PMIXER_CALLBACK pCurr;
; 766  :     for (pCurr = g_pHead; pCurr != NULL; pCurr = pCurr->pNext)

  00010	e59f3048	 ldr         r3, [pc, #0x48]
  00014	e5934000	 ldr         r4, [r3]
  00018	e3540000	 cmp         r4, #0
  0001c	0a00000c	 beq         |$LN2@PerformMix|
  00020	e3a08000	 mov         r8, #0
  00024		 |$LL4@PerformMix|

; 767  :     {
; 768  :         if (pCurr->pfnCallback != NULL)

  00024	e5943004	 ldr         r3, [r4, #4]
  00028	e1b05003	 movs        r5, r3

; 769  :         {
; 770  :             DEBUGMSG(ZONE_HWMIXER, (TEXT("MixerCallback(%d)\r\n"), dwId));
; 771  :             pCurr->pfnCallback(pCurr->hmx, dwMessage, 0, dwId, 0);

  0002c	15940000	 ldrne       r0, [r4]
  00030	11a03006	 movne       r3, r6
  00034	13a02000	 movne       r2, #0
  00038	11a01007	 movne       r1, r7
  0003c	158d8000	 strne       r8, [sp]
  00040	11a0e00f	 movne       lr, pc
  00044	112fff15	 bxne        r5
  00048	e5943008	 ldr         r3, [r4, #8]
  0004c	e1b04003	 movs        r4, r3
  00050	1afffff3	 bne         |$LL4@PerformMix|
  00054		 |$LN2@PerformMix|

; 772  :         }
; 773  :     }
; 774  : }

  00054	e28dd004	 add         sp, sp, #4
  00058	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  0005c	e12fff1e	 bx          lr
  00060		 |$LN12@PerformMix|
  00060		 |$LN13@PerformMix|
  00060	00000000	 DCD         |g_pHead|
  00064		 |$M37630|

			 ENDP  ; |?PerformMixerCallbacks@@YAXKK@Z|, PerformMixerCallbacks

	EXPORT	|?wdev_MXDM_GETDEVCAPS@@YAKPAUtagMIXERCAPS@@K@Z| ; wdev_MXDM_GETDEVCAPS
	EXPORT	|??_C@_1BI@DKACBKCL@?$AAA?$AAu?$AAd?$AAi?$AAo?$AA?5?$AAM?$AAi?$AAx?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T37644| DCD	|$LN5@wdev_MXDM_|
	DCD	0x40001d01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@DKACBKCL@?$AAA?$AAu?$AAd?$AAi?$AAo?$AA?5?$AAM?$AAi?$AAx?$AAe?$AAr?$AA?$AA@| DCB "A"
	DCB	0x0, "u", 0x0, "d", 0x0, "i", 0x0, "o", 0x0, " ", 0x0, "M"
	DCB	0x0, "i", 0x0, "x", 0x0, "e", 0x0, "r", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?wdev_MXDM_GETDEVCAPS@@YAKPAUtagMIXERCAPS@@K@Z| PROC ; wdev_MXDM_GETDEVCAPS

; 778  : {

  00000		 |$LN5@wdev_MXDM_|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M37641|
  00004	e1a04000	 mov         r4, r0

; 779  : 	UNREFERENCED_PARAMETER(dwSize);
; 780  : 
; 781  :     pCaps->wMid = MM_MICROSOFT;
; 782  :     pCaps->wPid = MM_MSFT_WSS_MIXER;
; 783  :     wcscpy(pCaps->szPname, DEVICE_NAME);

  00008	e59f1060	 ldr         r1, [pc, #0x60]
  0000c	e3a03011	 mov         r3, #0x11
  00010	e3a05001	 mov         r5, #1
  00014	e3a06000	 mov         r6, #0
  00018	e2840008	 add         r0, r4, #8
  0001c	e5c45000	 strb        r5, [r4]
  00020	e5c46001	 strb        r6, [r4, #1]
  00024	e5c43002	 strb        r3, [r4, #2]
  00028	e5c46003	 strb        r6, [r4, #3]
  0002c	eb000000	 bl          wcscpy

; 784  :     pCaps->vDriverVersion = DRIVER_VERSION;
; 785  :     pCaps->cDestinations = NELEMS(g_dst_lines);

  00030	e3a03002	 mov         r3, #2
  00034	e5c4304c	 strb        r3, [r4, #0x4C]
  00038	e5c46004	 strb        r6, [r4, #4]
  0003c	e5c45005	 strb        r5, [r4, #5]
  00040	e5c46006	 strb        r6, [r4, #6]
  00044	e5c46007	 strb        r6, [r4, #7]
  00048	e5c4604d	 strb        r6, [r4, #0x4D]
  0004c	e5c4604e	 strb        r6, [r4, #0x4E]
  00050	e5c4604f	 strb        r6, [r4, #0x4F]

; 786  :     pCaps->fdwSupport = 0;

  00054	e5c46048	 strb        r6, [r4, #0x48]
  00058	e5c46049	 strb        r6, [r4, #0x49]
  0005c	e5c4604a	 strb        r6, [r4, #0x4A]
  00060	e5c4604b	 strb        r6, [r4, #0x4B]

; 787  : 
; 788  :     return MMSYSERR_NOERROR;

  00064	e3a00000	 mov         r0, #0

; 789  : }

  00068	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0006c	e12fff1e	 bx          lr
  00070		 |$LN6@wdev_MXDM_|
  00070		 |$LN7@wdev_MXDM_|
  00070	00000000	 DCD         |??_C@_1BI@DKACBKCL@?$AAA?$AAu?$AAd?$AAi?$AAo?$AA?5?$AAM?$AAi?$AAx?$AAe?$AAr?$AA?$AA@|
  00074		 |$M37642|

			 ENDP  ; |?wdev_MXDM_GETDEVCAPS@@YAKPAUtagMIXERCAPS@@K@Z|, wdev_MXDM_GETDEVCAPS

	EXPORT	|?wdev_MXDM_OPEN@@YAKPAKPAUtMIXEROPENDESC@@K@Z| ; wdev_MXDM_OPEN
	EXPORT	|??_C@_1FE@BDJOHFBK@?$AA?$FL?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$FN?$AA?5?$AA?$CC?$AAw?$AAd?$AAe?$AAv?$AA_?$AAM?$AAX?$AAD?$AAM?$AA_?$AAO?$AAP?$AAE?$AAN?$AA?3?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@| [ DATA ] ; `string'
	IMPORT	|NKDbgPrintfW|
	IMPORT	|LocalAlloc|

  00000			 AREA	 |.pdata|, PDATA
|$T37662| DCD	|$LN11@wdev_MXDM_@2|
	DCD	0x40002a01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@BDJOHFBK@?$AA?$FL?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$FN?$AA?5?$AA?$CC?$AAw?$AAd?$AAe?$AAv?$AA_?$AAM?$AAX?$AAD?$AAM?$AA_?$AAO?$AAP?$AAE?$AAN?$AA?3?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@| DCB "["
	DCB	0x0, "E", 0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, "]"
	DCB	0x0, " ", 0x0, """", 0x0, "w", 0x0, "d", 0x0, "e", 0x0, "v"
	DCB	0x0, "_", 0x0, "M", 0x0, "X", 0x0, "D", 0x0, "M", 0x0, "_"
	DCB	0x0, "O", 0x0, "P", 0x0, "E", 0x0, "N", 0x0, ":", 0x0, " "
	DCB	0x0, "o", 0x0, "u", 0x0, "t", 0x0, " ", 0x0, "o", 0x0, "f"
	DCB	0x0, " ", 0x0, "m", 0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r"
	DCB	0x0, "y", 0x0, """", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?wdev_MXDM_OPEN@@YAKPAKPAUtMIXEROPENDESC@@K@Z| PROC ; wdev_MXDM_OPEN

; 793  : {

  00000		 |$LN11@wdev_MXDM_@2|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M37659|
  00004	e1a06002	 mov         r6, r2
  00008	e1a04001	 mov         r4, r1
  0000c	e1a05000	 mov         r5, r0

; 794  :     PMIXER_CALLBACK pNew;
; 795  :     pNew = (PMIXER_CALLBACK) LocalAlloc(LMEM_FIXED, sizeof(MIXER_CALLBACK));

  00010	e3a0100c	 mov         r1, #0xC
  00014	e3a00000	 mov         r0, #0
  00018	eb000000	 bl          LocalAlloc
  0001c	e1b0e000	 movs        lr, r0

; 796  :     if (pNew == NULL)

  00020	1a000004	 bne         |$LN3@wdev_MXDM_@2|

; 797  :     {
; 798  :         ERRMSG("wdev_MXDM_OPEN: out of memory");

  00024	e59f0078	 ldr         r0, [pc, #0x78]
  00028	eb000000	 bl          NKDbgPrintfW

; 799  :         return MMSYSERR_NOMEM;

  0002c	e3a00007	 mov         r0, #7

; 816  : }

  00030	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$LN3@wdev_MXDM_@2|

; 800  :     }
; 801  : 
; 802  :     pNew->hmx = (DWORD) pMOD->hmx;

  00038	e5d40000	 ldrb        r0, [r4]
  0003c	e5d43001	 ldrb        r3, [r4, #1]
  00040	e5d42002	 ldrb        r2, [r4, #2]
  00044	e5d41003	 ldrb        r1, [r4, #3]
  00048	e1803403	 orr         r3, r0, r3, lsl #8
  0004c	e1833802	 orr         r3, r3, r2, lsl #16
  00050	e1833c01	 orr         r3, r3, r1, lsl #24

; 803  :     if (dwFlags & CALLBACK_FUNCTION)

  00054	e3160803	 tst         r6, #3, 16
  00058	e58e3000	 str         r3, [lr]

; 804  :     {
; 805  :         pNew->pfnCallback = (PFNDRIVERCALL) pMOD->dwCallback;

  0005c	15d40008	 ldrneb      r0, [r4, #8]
  00060	15d43009	 ldrneb      r3, [r4, #9]
  00064	15d4200a	 ldrneb      r2, [r4, #0xA]
  00068	15d4100b	 ldrneb      r1, [r4, #0xB]
  0006c	11803403	 orrne       r3, r0, r3, lsl #8
  00070	11833802	 orrne       r3, r3, r2, lsl #16

; 806  :     }
; 807  :     else
; 808  :     {
; 809  :         pNew->pfnCallback = NULL;
; 810  :     }
; 811  :     pNew->pNext = g_pHead;

  00074	e59f2024	 ldr         r2, [pc, #0x24]
  00078	11833c01	 orrne       r3, r3, r1, lsl #24
  0007c	03a03000	 moveq       r3, #0
  00080	e58e3004	 str         r3, [lr, #4]

; 812  :     g_pHead = pNew;
; 813  :     *phMixer = (DWORD) pNew;
; 814  : 
; 815  :     return MMSYSERR_NOERROR;

  00084	e5923000	 ldr         r3, [r2]
  00088	e3a00000	 mov         r0, #0
  0008c	e582e000	 str         lr, [r2]
  00090	e58e3008	 str         r3, [lr, #8]
  00094	e585e000	 str         lr, [r5]

; 816  : }

  00098	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0009c	e12fff1e	 bx          lr
  000a0		 |$LN12@wdev_MXDM_@2|
  000a0		 |$LN13@wdev_MXDM_@2|
  000a0	00000000	 DCD         |g_pHead|
  000a4		 |$LN14@wdev_MXDM_@2|
  000a4	00000000	 DCD         |??_C@_1FE@BDJOHFBK@?$AA?$FL?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$FN?$AA?5?$AA?$CC?$AAw?$AAd?$AAe?$AAv?$AA_?$AAM?$AAX?$AAD?$AAM?$AA_?$AAO?$AAP?$AAE?$AAN?$AA?3?$AA?5?$AAo?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5@|
  000a8		 |$M37660|

			 ENDP  ; |?wdev_MXDM_OPEN@@YAKPAKPAUtMIXEROPENDESC@@K@Z|, wdev_MXDM_OPEN

	EXPORT	|?wdev_MXDM_CLOSE@@YAKK@Z|		; wdev_MXDM_CLOSE
	IMPORT	|LocalFree|

  00000			 AREA	 |.pdata|, PDATA
|$T37680| DCD	|$LN14@wdev_MXDM_@3|
	DCD	0x40001601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?wdev_MXDM_CLOSE@@YAKK@Z| PROC	; wdev_MXDM_CLOSE

; 820  : {

  00000		 |$LN14@wdev_MXDM_@3|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37677|
  00004	e1a0e000	 mov         lr, r0

; 821  :     PMIXER_CALLBACK pCurr, pPrev;
; 822  :     pPrev = NULL;
; 823  :     for (pCurr = g_pHead; pCurr != NULL; pCurr = pCurr->pNext)

  00008	e59f1044	 ldr         r1, [pc, #0x44]
  0000c	e3a02000	 mov         r2, #0
  00010	e5910000	 ldr         r0, [r1]
  00014	e3500000	 cmp         r0, #0
  00018	0a00000a	 beq         |$LN4@wdev_MXDM_@3|
  0001c		 |$LL6@wdev_MXDM_@3|

; 824  :     {
; 825  :         if (pCurr == (PMIXER_CALLBACK) dwHandle)

  0001c	e5903008	 ldr         r3, [r0, #8]
  00020	e150000e	 cmp         r0, lr
  00024	0a000003	 beq         |$LN10@wdev_MXDM_@3|

; 837  :             break;
; 838  :         }
; 839  :         pPrev = pCurr;

  00028	e1a02000	 mov         r2, r0
  0002c	e1b00003	 movs        r0, r3
  00030	1afffff9	 bne         |$LL6@wdev_MXDM_@3|

; 824  :     {
; 825  :         if (pCurr == (PMIXER_CALLBACK) dwHandle)

  00034	ea000003	 b           |$LN4@wdev_MXDM_@3|
  00038		 |$LN10@wdev_MXDM_@3|

; 826  :         {
; 827  :             if (pPrev == NULL)

  00038	e3520000	 cmp         r2, #0

; 828  :             {
; 829  :                 // we're deleting the first item
; 830  :                 g_pHead = pCurr->pNext;

  0003c	05813000	 streq       r3, [r1]

; 831  :             }
; 832  :             else
; 833  :             {
; 834  :                 pPrev->pNext = pCurr->pNext;

  00040	15823008	 strne       r3, [r2, #8]

; 835  :             }
; 836  :             LocalFree(pCurr);

  00044	eb000000	 bl          LocalFree
  00048		 |$LN4@wdev_MXDM_@3|

; 840  :     }
; 841  : 
; 842  :     return MMSYSERR_NOERROR;

  00048	e3a00000	 mov         r0, #0

; 843  : }

  0004c	e49de004	 ldr         lr, [sp], #4
  00050	e12fff1e	 bx          lr
  00054		 |$LN15@wdev_MXDM_@3|
  00054		 |$LN16@wdev_MXDM_@3|
  00054	00000000	 DCD         |g_pHead|
  00058		 |$M37678|

			 ENDP  ; |?wdev_MXDM_CLOSE@@YAKK@Z|, wdev_MXDM_CLOSE

	EXPORT	|?wdev_MXDM_GETLINEINFO@@YAKPAUtMIXERLINE@@K@Z| ; wdev_MXDM_GETLINEINFO

  00000			 AREA	 |.pdata|, PDATA
|$T37710| DCD	|$LN44@wdev_MXDM_@4|
	DCD	0x4000dd01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?wdev_MXDM_GETLINEINFO@@YAKPAUtMIXERLINE@@K@Z| PROC ; wdev_MXDM_GETLINEINFO

; 847  : { int Index;

  00000		 |$LN44@wdev_MXDM_@4|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M37707|
  00004	e1a04000	 mov         r4, r0

; 848  : 
; 849  :     // pDetail is validated by API - points to accessible, properly sized MIXERLINE structure
; 850  : 
; 851  :     // result - assume failure
; 852  :     PMXLINEDESC pFound = NULL;
; 853  :     MMRESULT mmRet = MIXERR_INVALLINE;
; 854  :     USHORT usLineID = NOLINE;
; 855  : 
; 856  :     switch (dwFlags & MIXER_GETLINEINFOF_QUERYMASK)

  00008	e201700f	 and         r7, r1, #0xF
  0000c	e59f635c	 ldr         r6, [pc, #0x35C]
  00010	e1b03007	 movs        r3, r7
  00014	e3a05b01	 mov         r5, #1, 22
  00018	e3a000ff	 mov         r0, #0xFF
  0001c	0a000030	 beq         |$LN26@wdev_MXDM_@4|
  00020	e3530001	 cmp         r3, #1
  00024	0a000011	 beq         |$LN23@wdev_MXDM_@4|
  00028	e3530002	 cmp         r3, #2
  0002c	0a000005	 beq         |$LN24@wdev_MXDM_@4|
  00030	e3530003	 cmp         r3, #3
  00034	0a000037	 beq         |$LN27@wdev_MXDM_@4|
  00038	e3530004	 cmp         r3, #4
  0003c	0a000035	 beq         |$LN27@wdev_MXDM_@4|

; 898  :     case MIXER_GETLINEINFOF_COMPONENTTYPE:
; 899  :         DEBUGMSG(ZONE_HWMIXER, (TEXT("GetMixerLineInfo COMPONENT\r\n")));
; 900  :         break;
; 901  : 
; 902  :     case MIXER_GETLINEINFOF_TARGETTYPE:
; 903  :         DEBUGMSG(ZONE_HWMIXER, (TEXT("GetMixerLineInfo TARGET\r\n")));
; 904  :         // valid query, but we're not going to form usLineID
; 905  :         break;
; 906  :     default:
; 907  :         DEBUGMSG(ZONE_ERROR, (TEXT("GetMixerLineInfo: invalid query %08x\r\n"), dwFlags & MIXER_GETLINEINFOF_QUERYMASK));
; 908  :         return MMSYSERR_INVALPARAM;

  00040	e3a0500b	 mov         r5, #0xB
  00044	ea0000c5	 b           |$LN1@wdev_MXDM_@4|
  00048		 |$LN24@wdev_MXDM_@4|

; 867  :         }
; 868  :         break;
; 869  :     case MIXER_GETLINEINFOF_LINEID:
; 870  :         DEBUGMSG(ZONE_HWMIXER, (TEXT("GetMixerLineInfo LINEID %x\r\n"), pDetail->dwLineID));
; 871  :         usLineID = (USHORT) pDetail->dwLineID;

  00048	e5d4000c	 ldrb        r0, [r4, #0xC]
  0004c	e5d4300d	 ldrb        r3, [r4, #0xD]
  00050	e5d4200e	 ldrb        r2, [r4, #0xE]
  00054	e5d4100f	 ldrb        r1, [r4, #0xF]
  00058	e1803403	 orr         r3, r0, r3, lsl #8
  0005c	e1833802	 orr         r3, r3, r2, lsl #16
  00060	e1833c01	 orr         r3, r3, r1, lsl #24
  00064	e1a00803	 mov         r0, r3, lsl #16
  00068	e1a00820	 mov         r0, r0, lsr #16

; 872  :         break;

  0006c	ea000029	 b           |$LN27@wdev_MXDM_@4|
  00070		 |$LN23@wdev_MXDM_@4|

; 873  :     case MIXER_GETLINEINFOF_SOURCE:
; 874  :         DEBUGMSG(ZONE_HWMIXER, (TEXT("GetMixerLineInfo SOURCE %x %x\r\n"), pDetail->dwDestination, pDetail->dwSource));
; 875  :         {
; 876  :             PMXLINEDESC pLine;
; 877  :             // look up the destination line, then index into it's source table
; 878  :             // to find the indexed source.
; 879  :             if (pDetail->dwDestination >= NELEMS(g_dst_lines))

  00070	e5d40004	 ldrb        r0, [r4, #4]
  00074	e5d43005	 ldrb        r3, [r4, #5]
  00078	e5d42006	 ldrb        r2, [r4, #6]
  0007c	e5d41007	 ldrb        r1, [r4, #7]
  00080	e1803403	 orr         r3, r0, r3, lsl #8
  00084	e1833802	 orr         r3, r3, r2, lsl #16
  00088	e1833c01	 orr         r3, r3, r1, lsl #24
  0008c	e3530002	 cmp         r3, #2

; 880  :             {
; 881  :                 DEBUGMSG(ZONE_ERROR, (TEXT("GetMixerLineInfo: invalid destination line %d\r\n"), pDetail->dwDestination));
; 882  :                 return MIXERR_INVALLINE;

  00090	2a00001c	 bcs         |$LN40@wdev_MXDM_@4|

; 883  :             }
; 884  :             pLine = LookupMxLine(g_dst_lines[pDetail->dwDestination]);

  00094	e0863083	 add         r3, r6, r3, lsl #1
  00098	e1d300b0	 ldrh        r0, [r3]
  0009c	eb000000	 bl          |?LookupMxLine@@YAPBUtagMXLINEDESC@@G@Z|
  000a0	e1b0e000	 movs        lr, r0

; 885  :             if (pLine == NULL)

  000a4	1a000001	 bne         |$LN21@wdev_MXDM_@4|
  000a8		 |$LN41@wdev_MXDM_@4|

; 886  :             {
; 887  :                 DEBUGMSG(ZONE_ERROR, (TEXT("GetMixerLineInfo: inconsistent internal mixer line table\r\n")));
; 888  :                 return MMSYSERR_ERROR;

  000a8	e3a05001	 mov         r5, #1
  000ac	ea0000ab	 b           |$LN1@wdev_MXDM_@4|
  000b0		 |$LN21@wdev_MXDM_@4|

; 889  :             }
; 890  :             if (pDetail->dwSource >= pLine->ucConnections)

  000b0	e5d41008	 ldrb        r1, [r4, #8]
  000b4	e5d43009	 ldrb        r3, [r4, #9]
  000b8	e5d4200a	 ldrb        r2, [r4, #0xA]
  000bc	e5d4000b	 ldrb        r0, [r4, #0xB]
  000c0	e1813403	 orr         r3, r1, r3, lsl #8
  000c4	e1833802	 orr         r3, r3, r2, lsl #16
  000c8	e5de2017	 ldrb        r2, [lr, #0x17]
  000cc	e1831c00	 orr         r1, r3, r0, lsl #24
  000d0	e1510002	 cmp         r1, r2

; 891  :             {
; 892  :                 DEBUGMSG(ZONE_ERROR, (TEXT("GetMixerLineInfo: invalid source line %d\r\n"), pDetail->dwSource));
; 893  :                 return MIXERR_INVALLINE;

  000d4	2a00000b	 bcs         |$LN40@wdev_MXDM_@4|

; 894  :             }
; 895  :             usLineID = pLine->pSources[pDetail->dwSource];

  000d8	e59e3010	 ldr         r3, [lr, #0x10]
  000dc	e0833081	 add         r3, r3, r1, lsl #1

; 896  :         }
; 897  :         break;

  000e0	ea00000b	 b           |$LN38@wdev_MXDM_@4|
  000e4		 |$LN26@wdev_MXDM_@4|

; 857  :     {
; 858  :     case MIXER_GETLINEINFOF_DESTINATION:
; 859  :         DEBUGMSG(ZONE_HWMIXER, (TEXT("GetMixerLineInfo DESTINATION %x\r\n"), pDetail->dwDestination));
; 860  :         {
; 861  :             if (pDetail->dwDestination >= NELEMS(g_dst_lines))

  000e4	e5d40004	 ldrb        r0, [r4, #4]
  000e8	e5d43005	 ldrb        r3, [r4, #5]
  000ec	e5d42006	 ldrb        r2, [r4, #6]
  000f0	e5d41007	 ldrb        r1, [r4, #7]
  000f4	e1803403	 orr         r3, r0, r3, lsl #8
  000f8	e1833802	 orr         r3, r3, r2, lsl #16
  000fc	e1833c01	 orr         r3, r3, r1, lsl #24
  00100	e3530002	 cmp         r3, #2
  00104	3a000001	 bcc         |$LN25@wdev_MXDM_@4|
  00108		 |$LN40@wdev_MXDM_@4|

; 862  :             {
; 863  :                 DEBUGMSG(ZONE_ERROR, (TEXT("GetMixerLineInfo: invalid destination line %d\r\n"), pDetail->dwDestination));
; 864  :                 return MIXERR_INVALLINE;

  00108	e3a05b01	 mov         r5, #1, 22
  0010c	ea000093	 b           |$LN1@wdev_MXDM_@4|
  00110		 |$LN25@wdev_MXDM_@4|

; 865  :             }
; 866  :             usLineID = g_dst_lines[pDetail->dwDestination];

  00110	e0863083	 add         r3, r6, r3, lsl #1
  00114		 |$LN38@wdev_MXDM_@4|
  00114	e1d300b0	 ldrh        r0, [r3]
  00118		 |$LN27@wdev_MXDM_@4|

; 909  :     }
; 910  : 
; 911  :     switch (dwFlags & MIXER_GETLINEINFOF_QUERYMASK)

  00118	e3570002	 cmp         r7, #2
  0011c	9a00002b	 bls         |$LN4@wdev_MXDM_@4|
  00120	e3570003	 cmp         r7, #3
  00124	0a000012	 beq         |$LN14@wdev_MXDM_@4|
  00128	e3570004	 cmp         r7, #4
  0012c	1a00008b	 bne         |$LN1@wdev_MXDM_@4|

; 920  :                 break;
; 921  :             }
; 922  :         }
; 923  : #ifdef DEBUG
; 924  :         if (pFound == NULL)
; 925  :         {
; 926  :             DEBUGMSG(ZONE_ERROR, (TEXT("GetMixerLineInfo: no line of component type %08x\r\n"), pDetail->dwComponentType));
; 927  :         }
; 928  : #endif
; 929  :         break;
; 930  :     case MIXER_GETLINEINFOF_TARGETTYPE:
; 931  :         // scan for target type
; 932  :         for (Index = 0; Index < nlines; Index++)

  00130	e5d400c8	 ldrb        r0, [r4, #0xC8]
  00134	e5d430c9	 ldrb        r3, [r4, #0xC9]
  00138	e5d420ca	 ldrb        r2, [r4, #0xCA]
  0013c	e5d410cb	 ldrb        r1, [r4, #0xCB]
  00140	e1803403	 orr         r3, r0, r3, lsl #8
  00144	e1833802	 orr         r3, r3, r2, lsl #16
  00148	e1830c01	 orr         r0, r3, r1, lsl #24
  0014c	e2861008	 add         r1, r6, #8
  00150	e3a02000	 mov         r2, #0
  00154		 |$LL8@wdev_MXDM_@4|

; 933  :         {
; 934  :             if (g_mixerline[Index].dwTargetType == pDetail->Target.dwType)

  00154	e591301c	 ldr         r3, [r1, #0x1C]
  00158	e1530000	 cmp         r3, r0
  0015c	0a000015	 beq         |$LN34@wdev_MXDM_@4|
  00160	e2822001	 add         r2, r2, #1
  00164	e3520003	 cmp         r2, #3
  00168	e2811024	 add         r1, r1, #0x24
  0016c	bafffff8	 blt         |$LL8@wdev_MXDM_@4|

; 935  :             {
; 936  :                 pFound = &g_mixerline[Index];
; 937  :                 break;
; 938  :             }
; 939  :         }
; 940  : #ifdef DEBUG
; 941  :         if (pFound == NULL)
; 942  :         {
; 943  :             DEBUGMSG(ZONE_ERROR, (TEXT("GetMixerLineInfo: no line of target type %08x\r\n"), pDetail->Target.dwType));
; 944  :         }
; 945  : #endif
; 946  :         break;

  00170	ea00007a	 b           |$LN1@wdev_MXDM_@4|
  00174		 |$LN14@wdev_MXDM_@4|

; 912  :     {
; 913  :     case MIXER_GETLINEINFOF_COMPONENTTYPE:
; 914  :         // scan for line of proper type
; 915  :         for (Index = 0; Index < nlines; Index++)

  00174	e5d40018	 ldrb        r0, [r4, #0x18]
  00178	e5d43019	 ldrb        r3, [r4, #0x19]
  0017c	e5d4201a	 ldrb        r2, [r4, #0x1A]
  00180	e5d4101b	 ldrb        r1, [r4, #0x1B]
  00184	e1803403	 orr         r3, r0, r3, lsl #8
  00188	e1833802	 orr         r3, r3, r2, lsl #16
  0018c	e1830c01	 orr         r0, r3, r1, lsl #24
  00190	e2861008	 add         r1, r6, #8
  00194	e3a02000	 mov         r2, #0
  00198		 |$LL13@wdev_MXDM_@4|

; 916  :         {
; 917  :             if (g_mixerline[Index].dwComponentType == pDetail->dwComponentType)

  00198	e5913000	 ldr         r3, [r1]
  0019c	e1530000	 cmp         r3, r0
  001a0	0a000004	 beq         |$LN34@wdev_MXDM_@4|
  001a4	e2822001	 add         r2, r2, #1
  001a8	e3520003	 cmp         r2, #3
  001ac	e2811024	 add         r1, r1, #0x24
  001b0	bafffff8	 blt         |$LL13@wdev_MXDM_@4|
  001b4	ea000069	 b           |$LN1@wdev_MXDM_@4|
  001b8		 |$LN34@wdev_MXDM_@4|

; 918  :             {
; 919  :                 pFound = &g_mixerline[Index];

  001b8	e0822182	 add         r2, r2, r2, lsl #3
  001bc	e2863008	 add         r3, r6, #8
  001c0	e0836102	 add         r6, r3, r2, lsl #2

; 956  :         }
; 957  :         break;
; 958  :     default:
; 959  :         // should never happen - we filter for this in the first switch()
; 960  :         break;
; 961  : 
; 962  :     }
; 963  : 
; 964  :     if (pFound != NULL)

  001c4	e3560000	 cmp         r6, #0
  001c8	0a000064	 beq         |$LN1@wdev_MXDM_@4|
  001cc	ea000002	 b           |$LN37@wdev_MXDM_@4|
  001d0		 |$LN4@wdev_MXDM_@4|

; 947  : 
; 948  :     case MIXER_GETLINEINFOF_DESTINATION:
; 949  :     case MIXER_GETLINEINFOF_LINEID:
; 950  :     case MIXER_GETLINEINFOF_SOURCE:
; 951  :         pFound = LookupMxLine(usLineID);

  001d0	eb000000	 bl          |?LookupMxLine@@YAPBUtagMXLINEDESC@@G@Z|
  001d4	e1b06000	 movs        r6, r0

; 952  :         if (pFound == NULL)
; 953  :         {
; 954  :             DEBUGMSG(ZONE_ERROR, (TEXT("GetMixerLineInfo: invalid line ID %08x\r\n"), usLineID));
; 955  :             return MMSYSERR_ERROR;

  001d8	0affffb2	 beq         |$LN41@wdev_MXDM_@4|
  001dc		 |$LN37@wdev_MXDM_@4|

; 965  :     {
; 966  :         pDetail->cChannels = pFound->ucChannels;

  001dc	e5d60016	 ldrb        r0, [r6, #0x16]

; 967  :         pDetail->cConnections = pFound->ucConnections;
; 968  :         pDetail->cControls = pFound->ucControls;
; 969  :         pDetail->dwComponentType = pFound->dwComponentType;
; 970  :         pDetail->dwLineID = pFound->usLineID;
; 971  :         pDetail->dwDestination = pFound->ucDstIndex;
; 972  :         pDetail->dwSource = pFound->ucSrcIndex;
; 973  :         pDetail->fdwLine = pFound->ucFlags;
; 974  :         pDetail->Target.dwDeviceID = 0;

  001e0	e3a05000	 mov         r5, #0

; 975  :         pDetail->Target.dwType = pFound->dwTargetType;
; 976  :         pDetail->Target.vDriverVersion = DRIVER_VERSION;

  001e4	e3a0e001	 mov         lr, #1
  001e8	e1a03420	 mov         r3, r0, lsr #8
  001ec	e1a02820	 mov         r2, r0, lsr #16
  001f0	e1a01c20	 mov         r1, r0, lsr #24
  001f4	e5c4301d	 strb        r3, [r4, #0x1D]
  001f8	e5c4201e	 strb        r2, [r4, #0x1E]
  001fc	e5c4101f	 strb        r1, [r4, #0x1F]
  00200	e5c4001c	 strb        r0, [r4, #0x1C]
  00204	e5d60017	 ldrb        r0, [r6, #0x17]
  00208	e1a03420	 mov         r3, r0, lsr #8
  0020c	e1a02820	 mov         r2, r0, lsr #16
  00210	e1a01c20	 mov         r1, r0, lsr #24
  00214	e5c43021	 strb        r3, [r4, #0x21]
  00218	e5c42022	 strb        r2, [r4, #0x22]
  0021c	e5c41023	 strb        r1, [r4, #0x23]
  00220	e5c40020	 strb        r0, [r4, #0x20]
  00224	e5d60018	 ldrb        r0, [r6, #0x18]
  00228	e1a03420	 mov         r3, r0, lsr #8
  0022c	e1a02820	 mov         r2, r0, lsr #16
  00230	e1a01c20	 mov         r1, r0, lsr #24
  00234	e5c43025	 strb        r3, [r4, #0x25]
  00238	e5c42026	 strb        r2, [r4, #0x26]
  0023c	e5c41027	 strb        r1, [r4, #0x27]
  00240	e5c40024	 strb        r0, [r4, #0x24]
  00244	e5960000	 ldr         r0, [r6]
  00248	e1a03420	 mov         r3, r0, lsr #8
  0024c	e1a02820	 mov         r2, r0, lsr #16
  00250	e1a01c20	 mov         r1, r0, lsr #24
  00254	e5c43019	 strb        r3, [r4, #0x19]
  00258	e5c4201a	 strb        r2, [r4, #0x1A]
  0025c	e5c4101b	 strb        r1, [r4, #0x1B]
  00260	e5c40018	 strb        r0, [r4, #0x18]
  00264	e1d601b4	 ldrh        r0, [r6, #0x14]
  00268	e1a03420	 mov         r3, r0, lsr #8
  0026c	e1a02820	 mov         r2, r0, lsr #16
  00270	e1a01c20	 mov         r1, r0, lsr #24
  00274	e5c4300d	 strb        r3, [r4, #0xD]
  00278	e5c4200e	 strb        r2, [r4, #0xE]
  0027c	e5c4100f	 strb        r1, [r4, #0xF]
  00280	e5c4000c	 strb        r0, [r4, #0xC]
  00284	e5d60020	 ldrb        r0, [r6, #0x20]
  00288	e1a03420	 mov         r3, r0, lsr #8
  0028c	e1a02820	 mov         r2, r0, lsr #16
  00290	e1a01c20	 mov         r1, r0, lsr #24
  00294	e5c43005	 strb        r3, [r4, #5]
  00298	e5c42006	 strb        r2, [r4, #6]
  0029c	e5c41007	 strb        r1, [r4, #7]
  002a0	e5c40004	 strb        r0, [r4, #4]
  002a4	e5d60021	 ldrb        r0, [r6, #0x21]
  002a8	e1a03420	 mov         r3, r0, lsr #8
  002ac	e1a02820	 mov         r2, r0, lsr #16
  002b0	e1a01c20	 mov         r1, r0, lsr #24
  002b4	e5c43009	 strb        r3, [r4, #9]
  002b8	e5c4200a	 strb        r2, [r4, #0xA]
  002bc	e5c4100b	 strb        r1, [r4, #0xB]
  002c0	e5c40008	 strb        r0, [r4, #8]
  002c4	e596000c	 ldr         r0, [r6, #0xC]
  002c8	e5c450cc	 strb        r5, [r4, #0xCC]
  002cc	e5c450cd	 strb        r5, [r4, #0xCD]
  002d0	e1a03420	 mov         r3, r0, lsr #8
  002d4	e1a02820	 mov         r2, r0, lsr #16
  002d8	e1a01c20	 mov         r1, r0, lsr #24
  002dc	e5c43011	 strb        r3, [r4, #0x11]
  002e0	e5c42012	 strb        r2, [r4, #0x12]
  002e4	e5c41013	 strb        r1, [r4, #0x13]
  002e8	e5c40010	 strb        r0, [r4, #0x10]
  002ec	e5c450ce	 strb        r5, [r4, #0xCE]
  002f0	e5c450cf	 strb        r5, [r4, #0xCF]
  002f4	e596001c	 ldr         r0, [r6, #0x1C]
  002f8	e5c450d4	 strb        r5, [r4, #0xD4]
  002fc	e5c4e0d5	 strb        lr, [r4, #0xD5]
  00300	e1a03420	 mov         r3, r0, lsr #8
  00304	e1a02820	 mov         r2, r0, lsr #16
  00308	e1a01c20	 mov         r1, r0, lsr #24
  0030c	e5c430c9	 strb        r3, [r4, #0xC9]
  00310	e5c420ca	 strb        r2, [r4, #0xCA]
  00314	e5c410cb	 strb        r1, [r4, #0xCB]
  00318	e5c400c8	 strb        r0, [r4, #0xC8]
  0031c	e5c450d6	 strb        r5, [r4, #0xD6]

; 977  :         pDetail->Target.wMid = MM_MICROSOFT;
; 978  :         pDetail->Target.wPid = MM_MSFT_WSS_MIXER;

  00320	e3a03011	 mov         r3, #0x11
  00324	e5c430d2	 strb        r3, [r4, #0xD2]
  00328	e5c450d7	 strb        r5, [r4, #0xD7]
  0032c	e5c4e0d0	 strb        lr, [r4, #0xD0]
  00330	e5c450d1	 strb        r5, [r4, #0xD1]
  00334	e5c450d3	 strb        r5, [r4, #0xD3]

; 979  :         wcscpy(pDetail->szName, pFound->szName);

  00338	e5961008	 ldr         r1, [r6, #8]
  0033c	e2840048	 add         r0, r4, #0x48
  00340	eb000000	 bl          wcscpy

; 980  :         wcscpy(pDetail->szShortName, pFound->szShortName);

  00344	e5961004	 ldr         r1, [r6, #4]
  00348	e2840028	 add         r0, r4, #0x28
  0034c	eb000000	 bl          wcscpy

; 981  :         wcscpy(pDetail->Target.szPname, DEVICE_NAME);

  00350	e59f1014	 ldr         r1, [pc, #0x14]
  00354	e28400d8	 add         r0, r4, #0xD8
  00358	eb000000	 bl          wcscpy

; 982  :         mmRet = MMSYSERR_NOERROR;

  0035c	e3a05000	 mov         r5, #0
  00360		 |$LN1@wdev_MXDM_@4|

; 983  : 
; 984  :         DEBUGMSG(ZONE_HWMIXER, (TEXT("GetMixerLineInfo: \"%s\" %08x\r\n"), pFound->szName, pFound->ucFlags));
; 985  : 
; 986  :     }
; 987  : 
; 988  :     return mmRet;
; 989  : }

  00360	e1a00005	 mov         r0, r5
  00364	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00368	e12fff1e	 bx          lr
  0036c		 |$LN45@wdev_MXDM_@4|
  0036c		 |$LN46@wdev_MXDM_@4|
  0036c	00000000	 DCD         |??_C@_1BI@DKACBKCL@?$AAA?$AAu?$AAd?$AAi?$AAo?$AA?5?$AAM?$AAi?$AAx?$AAe?$AAr?$AA?$AA@|
  00370		 |$LN47@wdev_MXDM_@4|
  00370	00000000	 DCD         |g_dst_lines|
  00374		 |$M37708|

			 ENDP  ; |?wdev_MXDM_GETLINEINFO@@YAKPAUtMIXERLINE@@K@Z|, wdev_MXDM_GETLINEINFO

	EXPORT	|?wdev_MXDM_GETLINECONTROLS@@YAKPAUtMIXERLINECONTROLS@@K@Z| ; wdev_MXDM_GETLINECONTROLS

  00000			 AREA	 |.pdata|, PDATA
|$T37761| DCD	|$LN48@wdev_MXDM_@5|
	DCD	0x4000a402
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?wdev_MXDM_GETLINECONTROLS@@YAKPAUtMIXERLINECONTROLS@@K@Z| PROC ; wdev_MXDM_GETLINECONTROLS

; 993  : {

  00000		 |$LN48@wdev_MXDM_@5|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M37758|
  00008	e58d1004	 str         r1, [sp, #4]
  0000c	e58d0000	 str         r0, [sp]

; 994  : 
; 995  :     PMIXERCONTROL pamxctrl = pDetail->pamxctrl;
; 996  :     USHORT usLineID = (USHORT) pDetail->dwLineID;

  00010	e5d02004	 ldrb        r2, [r0, #4]
  00014	e5d03005	 ldrb        r3, [r0, #5]
  00018	e5d0e006	 ldrb        lr, [r0, #6]
  0001c	e5d01014	 ldrb        r1, [r0, #0x14]
  00020	e5d0b015	 ldrb        r11, [r0, #0x15]

; 997  :     DWORD dwCount = pDetail->cControls;

  00024	e5d09016	 ldrb        r9, [r0, #0x16]
  00028	e1823403	 orr         r3, r2, r3, lsl #8
  0002c	e5d0a00c	 ldrb        r10, [r0, #0xC]
  00030	e5d0800d	 ldrb        r8, [r0, #0xD]
  00034	e5d06017	 ldrb        r6, [r0, #0x17]
  00038	e183e80e	 orr         lr, r3, lr, lsl #16
  0003c	e5d04007	 ldrb        r4, [r0, #7]
  00040	e181340b	 orr         r3, r1, r11, lsl #8
  00044	e5d0500e	 ldrb        r5, [r0, #0xE]
  00048	e1833809	 orr         r3, r3, r9, lsl #16
  0004c	e5d0700f	 ldrb        r7, [r0, #0xF]
  00050	e18a2408	 orr         r2, r10, r8, lsl #8
  00054	e1838c06	 orr         r8, r3, r6, lsl #24

; 998  : 
; 999  :     switch (dwFlags & MIXER_GETLINECONTROLSF_QUERYMASK)

  00058	e59d3004	 ldr         r3, [sp, #4]
  0005c	e18eec04	 orr         lr, lr, r4, lsl #24
  00060	e1822805	 orr         r2, r2, r5, lsl #16
  00064	e1a0980e	 mov         r9, lr, lsl #16
  00068	e213300f	 ands        r3, r3, #0xF
  0006c	e1a09829	 mov         r9, r9, lsr #16
  00070	e1824c07	 orr         r4, r2, r7, lsl #24
  00074	0a000058	 beq         |$LN21@wdev_MXDM_@5|
  00078	e3530001	 cmp         r3, #1
  0007c	0a00002c	 beq         |$LN13@wdev_MXDM_@5|
  00080	e3530002	 cmp         r3, #2
  00084	1a00007c	 bne         |$LN16@wdev_MXDM_@5|

; 1056 :         }
; 1057 : 
; 1058 :     case MIXER_GETLINECONTROLSF_ONEBYTYPE:
; 1059 :         // retrieve the control specified by pDetail->dwLineID and pDetail->dwControlType
; 1060 :         {
; 1061 :             DEBUGMSG(ZONE_HWMIXER, (TEXT("GetMixerLineControls: ONEBYTYPE %x \r\n"), usLineID));
; 1062 : 
; 1063 :             if (dwCount < 1)

  00088	e3540001	 cmp         r4, #1

; 1064 :             {
; 1065 :                 DEBUGMSG(ZONE_ERROR, (TEXT("GetMixerLineControls: control count must be non zero\r\n")));
; 1066 :                 return MMSYSERR_INVALPARAM;

  0008c	3a00005a	 bcc         |$LN39@wdev_MXDM_@5|

; 1067 :             }
; 1068 : 
; 1069 :             MixerControl *pMixerControl = NULL;
; 1070 : 
; 1071 :             int Index;
; 1072 :             for (Index = 0;;Index++)

  00090	e59f71f4	 ldr         r7, [pc, #0x1F4]
  00094	e3a06000	 mov         r6, #0
  00098	e1a04000	 mov         r4, r0
  0009c		 |$LL8@wdev_MXDM_@5|

; 1073 :             {
; 1074 :                 pMixerControl = g_pMixerControlList->LookupControlByIndex(Index);

  0009c	e3560006	 cmp         r6, #6
  000a0	2a000055	 bcs         |$LN39@wdev_MXDM_@5|
  000a4	e5973000	 ldr         r3, [r7]
  000a8	e0833106	 add         r3, r3, r6, lsl #2
  000ac	e5933038	 ldr         r3, [r3, #0x38]
  000b0	e1b05003	 movs        r5, r3

; 1075 :                 if (!pMixerControl)

  000b4	0a000050	 beq         |$LN39@wdev_MXDM_@5|

; 1076 :                 {
; 1077 :                     break;
; 1078 :                 }
; 1079 : 
; 1080 :                 if ( (pMixerControl->GetLineID() == usLineID) && (pMixerControl->GetControlType() == pDetail->dwControlType) )

  000b8	e5953000	 ldr         r3, [r5]
  000bc	e1a00005	 mov         r0, r5
  000c0	e5933018	 ldr         r3, [r3, #0x18]
  000c4	e1a0e00f	 mov         lr, pc
  000c8	e12fff13	 bx          r3
  000cc	e1a03800	 mov         r3, r0, lsl #16
  000d0	e1590823	 cmp         r9, r3, lsr #16
  000d4	1a00000d	 bne         |$LN7@wdev_MXDM_@5|
  000d8	e5953000	 ldr         r3, [r5]
  000dc	e1a00005	 mov         r0, r5
  000e0	e5933014	 ldr         r3, [r3, #0x14]
  000e4	e1a0e00f	 mov         lr, pc
  000e8	e12fff13	 bx          r3
  000ec	e5d4e008	 ldrb        lr, [r4, #8]
  000f0	e5d43009	 ldrb        r3, [r4, #9]
  000f4	e5d4200a	 ldrb        r2, [r4, #0xA]
  000f8	e5d4100b	 ldrb        r1, [r4, #0xB]
  000fc	e18e3403	 orr         r3, lr, r3, lsl #8
  00100	e1833802	 orr         r3, r3, r2, lsl #16
  00104	e1833c01	 orr         r3, r3, r1, lsl #24
  00108	e1500003	 cmp         r0, r3
  0010c	0a000001	 beq         |$LN3@wdev_MXDM_@5|
  00110		 |$LN7@wdev_MXDM_@5|

; 1067 :             }
; 1068 : 
; 1069 :             MixerControl *pMixerControl = NULL;
; 1070 : 
; 1071 :             int Index;
; 1072 :             for (Index = 0;;Index++)

  00110	e2866001	 add         r6, r6, #1
  00114	eaffffe0	 b           |$LL8@wdev_MXDM_@5|
  00118		 |$LN3@wdev_MXDM_@5|

; 1081 :                 {
; 1082 :                     break;
; 1083 :                 }
; 1084 :             }
; 1085 : 
; 1086 :             if (!pMixerControl)
; 1087 :             {
; 1088 :                 // not to be alarmed: SndVol32 queries for LOTS of control types we don't have
; 1089 :                 DEBUGMSG(ZONE_HWMIXER, (TEXT("GetMixerLineControls: line %04x has no control of type %s (%08x)\r\n"), usLineID, COMPTYPE(pDetail->dwControlType), pDetail->dwControlType));
; 1090 :                 return MMSYSERR_INVALPARAM;
; 1091 :             }
; 1092 :             else
; 1093 :             {
; 1094 :                 pMixerControl->CopyMixerControl(pamxctrl);

  00118	e5953000	 ldr         r3, [r5]
  0011c	e1a01008	 mov         r1, r8
  00120	e1a00005	 mov         r0, r5
  00124	e5933008	 ldr         r3, [r3, #8]
  00128	e1a0e00f	 mov         lr, pc
  0012c	e12fff13	 bx          r3

; 1095 :                 return MMSYSERR_NOERROR;

  00130	ea000051	 b           |$LN16@wdev_MXDM_@5|
  00134		 |$LN13@wdev_MXDM_@5|

; 1032 :                 }
; 1033 :             }
; 1034 :         }
; 1035 :         break;
; 1036 : 
; 1037 :     case MIXER_GETLINECONTROLSF_ONEBYID:
; 1038 :         {
; 1039 :             DEBUGMSG(ZONE_HWMIXER, (TEXT("GetMixerLineControls: ONEBYID %x\r\n"), pDetail->dwControlID));
; 1040 : 
; 1041 :             if (dwCount < 1)

  00134	e3540001	 cmp         r4, #1

; 1042 :             {
; 1043 :                 DEBUGMSG(ZONE_ERROR, (TEXT("GetMixerLineControls: control count must be nonzero\r\n")));
; 1044 :                 return MMSYSERR_INVALPARAM;

  00138	3a00002f	 bcc         |$LN39@wdev_MXDM_@5|

; 1045 :             }
; 1046 : 
; 1047 :             MixerControl *pMixerControl = g_pMixerControlList->LookupControlByIndex(pDetail->dwControlID);

  0013c	e59d4000	 ldr         r4, [sp]
  00140	e5d00008	 ldrb        r0, [r0, #8]
  00144	e5d43009	 ldrb        r3, [r4, #9]
  00148	e5d4200a	 ldrb        r2, [r4, #0xA]
  0014c	e5d4100b	 ldrb        r1, [r4, #0xB]
  00150	e1803403	 orr         r3, r0, r3, lsl #8
  00154	e1833802	 orr         r3, r3, r2, lsl #16
  00158	e1832c01	 orr         r2, r3, r1, lsl #24
  0015c	e3520006	 cmp         r2, #6
  00160	2a00001a	 bcs         |$LN42@wdev_MXDM_@5|
  00164	e59f3120	 ldr         r3, [pc, #0x120]
  00168	e5933000	 ldr         r3, [r3]
  0016c	e0833102	 add         r3, r3, r2, lsl #2
  00170	e5933038	 ldr         r3, [r3, #0x38]
  00174	e1b05003	 movs        r5, r3

; 1048 :             if (!pMixerControl)

  00178	0a000014	 beq         |$LN42@wdev_MXDM_@5|

; 1049 :             {
; 1050 :                 return MIXERR_INVALCONTROL;
; 1051 :             }
; 1052 : 
; 1053 :             pMixerControl->CopyMixerControl(pamxctrl);

  0017c	e5953000	 ldr         r3, [r5]
  00180	e1a01008	 mov         r1, r8
  00184	e1a00005	 mov         r0, r5
  00188	e5933008	 ldr         r3, [r3, #8]
  0018c	e1a0e00f	 mov         lr, pc
  00190	e12fff13	 bx          r3

; 1054 :             pDetail->dwLineID = pMixerControl->GetLineID();

  00194	e5953000	 ldr         r3, [r5]
  00198	e1a00005	 mov         r0, r5
  0019c	e5933018	 ldr         r3, [r3, #0x18]
  001a0	e1a0e00f	 mov         lr, pc
  001a4	e12fff13	 bx          r3
  001a8	e1a00800	 mov         r0, r0, lsl #16
  001ac	e1a00820	 mov         r0, r0, lsr #16
  001b0	e1a03420	 mov         r3, r0, lsr #8
  001b4	e1a02820	 mov         r2, r0, lsr #16
  001b8	e1a01c20	 mov         r1, r0, lsr #24
  001bc	e5c43005	 strb        r3, [r4, #5]
  001c0	e5c42006	 strb        r2, [r4, #6]
  001c4	e5c41007	 strb        r1, [r4, #7]
  001c8	e5c40004	 strb        r0, [r4, #4]

; 1055 :             break;

  001cc	ea00002a	 b           |$LN16@wdev_MXDM_@5|
  001d0		 |$LN42@wdev_MXDM_@5|
  001d0	e3a03b01	 mov         r3, #1, 22
  001d4	e3830001	 orr         r0, r3, #1
  001d8	ea000028	 b           |$LN24@wdev_MXDM_@5|
  001dc		 |$LN21@wdev_MXDM_@5|

; 1000 :     {
; 1001 :     case MIXER_GETLINECONTROLSF_ALL:
; 1002 :         DEBUGMSG(ZONE_HWMIXER, (TEXT("GetMixerLineControls: ALL %x\r\n"), usLineID));
; 1003 :         // retrieve all controls for the line pDetail->dwLineID
; 1004 :         {
; 1005 :             PMXLINEDESC pFound = LookupMxLine(usLineID);

  001dc	e1a00009	 mov         r0, r9
  001e0	eb000000	 bl          |?LookupMxLine@@YAPBUtagMXLINEDESC@@G@Z|
  001e4	e3500000	 cmp         r0, #0

; 1006 :             if (pFound == NULL)
; 1007 :             {
; 1008 :                 DEBUGMSG(ZONE_ERROR, (TEXT("GetMixerLineControls: invalid line ID %04x\r\n"), usLineID));
; 1009 :                 return MIXERR_INVALLINE;

  001e8	03a00b01	 moveq       r0, #1, 22
  001ec	0a000023	 beq         |$LN24@wdev_MXDM_@5|

; 1010 :             }
; 1011 :             if (pFound->ucControls != dwCount)

  001f0	e5d03018	 ldrb        r3, [r0, #0x18]
  001f4	e1530004	 cmp         r3, r4
  001f8	0a000001	 beq         |$LN19@wdev_MXDM_@5|
  001fc		 |$LN39@wdev_MXDM_@5|

; 1012 :             {
; 1013 :                 DEBUGMSG(ZONE_ERROR, (TEXT("GetMixerLineControls: incorrect number of controls. Expect %d, found %d.\r\n"),dwCount,pFound->ucControls));
; 1014 :                 return MMSYSERR_INVALPARAM;

  001fc	e3a0000b	 mov         r0, #0xB
  00200	ea00001e	 b           |$LN24@wdev_MXDM_@5|
  00204		 |$LN19@wdev_MXDM_@5|

; 1015 :             }
; 1016 : 
; 1017 :             int Index;
; 1018 :             for (Index = 0; dwCount > 0; Index++)

  00204	e3a05000	 mov         r5, #0
  00208	e3540000	 cmp         r4, #0
  0020c	0a00001a	 beq         |$LN16@wdev_MXDM_@5|
  00210	e59f7074	 ldr         r7, [pc, #0x74]
  00214		 |$LL18@wdev_MXDM_@5|

; 1019 :             {
; 1020 :                 MixerControl *pMixerControl = g_pMixerControlList->LookupControlByIndex(Index);

  00214	e3550006	 cmp         r5, #6
  00218	2afffff7	 bcs         |$LN39@wdev_MXDM_@5|
  0021c	e5973000	 ldr         r3, [r7]
  00220	e0833105	 add         r3, r3, r5, lsl #2
  00224	e5933038	 ldr         r3, [r3, #0x38]
  00228	e1b06003	 movs        r6, r3

; 1021 :                 if (!pMixerControl)

  0022c	0afffff2	 beq         |$LN39@wdev_MXDM_@5|

; 1022 :                 {
; 1023 : 					// We never found as many controls as we claimed to have...
; 1024 : 					return MMSYSERR_INVALPARAM;
; 1025 :                 }
; 1026 : 
; 1027 :                 if (pMixerControl->GetLineID() == usLineID)

  00230	e5963000	 ldr         r3, [r6]
  00234	e1a00006	 mov         r0, r6
  00238	e5933018	 ldr         r3, [r3, #0x18]
  0023c	e1a0e00f	 mov         lr, pc
  00240	e12fff13	 bx          r3
  00244	e1a03800	 mov         r3, r0, lsl #16
  00248	e1590823	 cmp         r9, r3, lsr #16
  0024c	1a000007	 bne         |$LN17@wdev_MXDM_@5|

; 1028 :                 {
; 1029 :                     pMixerControl->CopyMixerControl(pamxctrl);

  00250	e5963000	 ldr         r3, [r6]
  00254	e1a01008	 mov         r1, r8
  00258	e1a00006	 mov         r0, r6
  0025c	e5933008	 ldr         r3, [r3, #8]
  00260	e1a0e00f	 mov         lr, pc
  00264	e12fff13	 bx          r3

; 1030 :                     pamxctrl++;

  00268	e28880e4	 add         r8, r8, #0xE4

; 1031 :                     dwCount--;

  0026c	e2444001	 sub         r4, r4, #1
  00270		 |$LN17@wdev_MXDM_@5|
  00270	e2855001	 add         r5, r5, #1
  00274	e3540000	 cmp         r4, #0
  00278	1affffe5	 bne         |$LL18@wdev_MXDM_@5|
  0027c		 |$LN16@wdev_MXDM_@5|

; 1096 :             }
; 1097 :         }
; 1098 :         break;
; 1099 :     default:
; 1100 :         DEBUGMSG(ZONE_ERROR, (TEXT("GetMixerLineControls: invalid query %08x\r\n"), dwFlags & MIXER_GETLINECONTROLSF_QUERYMASK));
; 1101 :         break;
; 1102 : 
; 1103 :     }
; 1104 :     return MMSYSERR_NOERROR;

  0027c	e3a00000	 mov         r0, #0
  00280		 |$LN24@wdev_MXDM_@5|

; 1105 : }

  00280	e28dd008	 add         sp, sp, #8
  00284	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00288	e12fff1e	 bx          lr
  0028c		 |$LN49@wdev_MXDM_@5|
  0028c		 |$LN50@wdev_MXDM_@5|
  0028c	00000000	 DCD         |g_pMixerControlList|
  00290		 |$M37759|

			 ENDP  ; |?wdev_MXDM_GETLINECONTROLS@@YAKPAUtMIXERLINECONTROLS@@K@Z|, wdev_MXDM_GETLINECONTROLS

	EXPORT	|?wdev_MXDM_GETCONTROLDETAILS@@YAKPAUtMIXERCONTROLDETAILS@@K@Z| ; wdev_MXDM_GETCONTROLDETAILS

  00000			 AREA	 |.pdata|, PDATA
|$T37783| DCD	|$LN10@wdev_MXDM_@6|
	DCD	0x40001e01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?wdev_MXDM_GETCONTROLDETAILS@@YAKPAUtMIXERCONTROLDETAILS@@K@Z| PROC ; wdev_MXDM_GETCONTROLDETAILS

; 1109 : {

  00000		 |$LN10@wdev_MXDM_@6|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37780|
  00004	e1a05001	 mov         r5, r1
  00008	e1a01000	 mov         r1, r0

; 1110 :     // API guarantees that pDetail points to accessible, aligned, properly sized MIXERCONTROLDETAILS structure
; 1111 :     DEBUGMSG(ZONE_HWMIXER, (TEXT("GetMixerControlDetails(%d)\r\n"), pDetail->dwControlID));
; 1112 : 
; 1113 :     MixerControl *pMixerControl = g_pMixerControlList->LookupControlByIndex(pDetail->dwControlID);

  0000c	e5d14004	 ldrb        r4, [r1, #4]
  00010	e5d13005	 ldrb        r3, [r1, #5]
  00014	e5d12006	 ldrb        r2, [r1, #6]
  00018	e5d1e007	 ldrb        lr, [r1, #7]
  0001c	e1843403	 orr         r3, r4, r3, lsl #8
  00020	e1833802	 orr         r3, r3, r2, lsl #16
  00024	e1832c0e	 orr         r2, r3, lr, lsl #24
  00028	e3520006	 cmp         r2, #6
  0002c	2a00000c	 bcs         |$LN7@wdev_MXDM_@6|
  00030	e59f303c	 ldr         r3, [pc, #0x3C]
  00034	e5933000	 ldr         r3, [r3]
  00038	e0833102	 add         r3, r3, r2, lsl #2
  0003c	e5933038	 ldr         r3, [r3, #0x38]
  00040	e1b00003	 movs        r0, r3

; 1114 :     if (!pMixerControl)

  00044	0a000006	 beq         |$LN7@wdev_MXDM_@6|

; 1117 :     }
; 1118 : 
; 1119 :     return pMixerControl->GetControlDetails(pDetail, dwFlags);

  00048	e5903000	 ldr         r3, [r0]
  0004c	e1a02005	 mov         r2, r5
  00050	e593300c	 ldr         r3, [r3, #0xC]
  00054	e1a0e00f	 mov         lr, pc
  00058	e12fff13	 bx          r3

; 1120 : }

  0005c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$LN7@wdev_MXDM_@6|

; 1117 :     }
; 1118 : 
; 1119 :     return pMixerControl->GetControlDetails(pDetail, dwFlags);

  00064	e3a03b01	 mov         r3, #1, 22

; 1115 :     {
; 1116 :         return MIXERR_INVALCONTROL;

  00068	e3830001	 orr         r0, r3, #1

; 1120 : }

  0006c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00070	e12fff1e	 bx          lr
  00074		 |$LN11@wdev_MXDM_@6|
  00074		 |$LN12@wdev_MXDM_@6|
  00074	00000000	 DCD         |g_pMixerControlList|
  00078		 |$M37781|

			 ENDP  ; |?wdev_MXDM_GETCONTROLDETAILS@@YAKPAUtMIXERCONTROLDETAILS@@K@Z|, wdev_MXDM_GETCONTROLDETAILS

	EXPORT	|?wdev_MXDM_SETCONTROLDETAILS@@YAKPAUtMIXERCONTROLDETAILS@@K@Z| ; wdev_MXDM_SETCONTROLDETAILS

  00000			 AREA	 |.pdata|, PDATA
|$T37805| DCD	|$LN10@wdev_MXDM_@7|
	DCD	0x40002901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?wdev_MXDM_SETCONTROLDETAILS@@YAKPAUtMIXERCONTROLDETAILS@@K@Z| PROC ; wdev_MXDM_SETCONTROLDETAILS

; 1124 : {

  00000		 |$LN10@wdev_MXDM_@7|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37802|
  00004	e1a05000	 mov         r5, r0

; 1125 :     // API guarantees that pDetail points to accessible, aligned, properly siezd MIXERCONTROLDETAILS structure
; 1126 :     DEBUGMSG(ZONE_HWMIXER, (TEXT("SetMixerControlDetails(%d)\r\n"), pDetail->dwControlID));
; 1127 : 
; 1128 :     MixerControl *pMixerControl = g_pMixerControlList->LookupControlByIndex(pDetail->dwControlID);

  00008	e5d54004	 ldrb        r4, [r5, #4]
  0000c	e5d53005	 ldrb        r3, [r5, #5]
  00010	e5d52006	 ldrb        r2, [r5, #6]
  00014	e5d5e007	 ldrb        lr, [r5, #7]
  00018	e1843403	 orr         r3, r4, r3, lsl #8
  0001c	e1833802	 orr         r3, r3, r2, lsl #16
  00020	e1832c0e	 orr         r2, r3, lr, lsl #24
  00024	e3520006	 cmp         r2, #6
  00028	2a000018	 bcs         |$LN7@wdev_MXDM_@7|
  0002c	e59f306c	 ldr         r3, [pc, #0x6C]
  00030	e5933000	 ldr         r3, [r3]
  00034	e0833102	 add         r3, r3, r2, lsl #2
  00038	e5933038	 ldr         r3, [r3, #0x38]
  0003c	e1b00003	 movs        r0, r3

; 1129 :     if (!pMixerControl)

  00040	0a000012	 beq         |$LN7@wdev_MXDM_@7|

; 1132 :     }
; 1133 : 
; 1134 :     pMixerControl->SetControlDetails(pDetail, dwFlags);

  00044	e5903000	 ldr         r3, [r0]
  00048	e1a02001	 mov         r2, r1
  0004c	e1a01005	 mov         r1, r5
  00050	e5933010	 ldr         r3, [r3, #0x10]
  00054	e1a0e00f	 mov         lr, pc
  00058	e12fff13	 bx          r3

; 1135 : 
; 1136 :     PerformMixerCallbacks (MM_MIXM_CONTROL_CHANGE, pDetail->dwControlID);

  0005c	e5d51004	 ldrb        r1, [r5, #4]
  00060	e5d53005	 ldrb        r3, [r5, #5]
  00064	e5d52006	 ldrb        r2, [r5, #6]
  00068	e5d50007	 ldrb        r0, [r5, #7]
  0006c	e1813403	 orr         r3, r1, r3, lsl #8
  00070	e1833802	 orr         r3, r3, r2, lsl #16
  00074	e3a02c03	 mov         r2, #3, 24
  00078	e1831c00	 orr         r1, r3, r0, lsl #24
  0007c	e38200d1	 orr         r0, r2, #0xD1
  00080	eb000000	 bl          |?PerformMixerCallbacks@@YAXKK@Z|

; 1137 : 
; 1138 :     return MMSYSERR_NOERROR;

  00084	e3a00000	 mov         r0, #0

; 1139 : }

  00088	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0008c	e12fff1e	 bx          lr
  00090		 |$LN7@wdev_MXDM_@7|

; 1137 : 
; 1138 :     return MMSYSERR_NOERROR;

  00090	e3a03b01	 mov         r3, #1, 22

; 1130 :     {
; 1131 :         return MIXERR_INVALCONTROL;

  00094	e3830001	 orr         r0, r3, #1

; 1139 : }

  00098	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0009c	e12fff1e	 bx          lr
  000a0		 |$LN11@wdev_MXDM_@7|
  000a0		 |$LN12@wdev_MXDM_@7|
  000a0	00000000	 DCD         |g_pMixerControlList|
  000a4		 |$M37803|

			 ENDP  ; |?wdev_MXDM_SETCONTROLDETAILS@@YAKPAUtMIXERCONTROLDETAILS@@K@Z|, wdev_MXDM_SETCONTROLDETAILS

	EXPORT	|?InitMixerControls@@YAHXZ|		; InitMixerControls
	IMPORT	|??2@YAPAXI@Z|				; operator new

  00000			 AREA	 |.pdata|, PDATA
|$T37820| DCD	|$LN7@InitMixerC|
	DCD	0x40001001
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InitMixerControls@@YAHXZ| PROC	; InitMixerControls

; 1142 : {

  00000		 |$LN7@InitMixerC|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37817|

; 1143 :     g_pMixerControlList = new MixerControlList;

  00004	e3a00050	 mov         r0, #0x50
  00008	eb000000	 bl          |??2@YAPAXI@Z|
  0000c	e3500000	 cmp         r0, #0
  00010	0a000003	 beq         |$LN3@InitMixerC|
  00014	eb000000	 bl          |??0MixerControlList@@QAA@XZ|
  00018	e59f301c	 ldr         r3, [pc, #0x1C]
  0001c	e5830000	 str         r0, [r3]
  00020	ea000002	 b           |$LN4@InitMixerC|
  00024		 |$LN3@InitMixerC|
  00024	e59f3010	 ldr         r3, [pc, #0x10]
  00028	e3a02000	 mov         r2, #0
  0002c	e5832000	 str         r2, [r3]
  00030		 |$LN4@InitMixerC|

; 1144 :     return TRUE;

  00030	e3a00001	 mov         r0, #1

; 1145 : }

  00034	e49de004	 ldr         lr, [sp], #4
  00038	e12fff1e	 bx          lr
  0003c		 |$LN8@InitMixerC|
  0003c		 |$LN9@InitMixerC|
  0003c	00000000	 DCD         |g_pMixerControlList|
  00040		 |$M37818|

			 ENDP  ; |?InitMixerControls@@YAHXZ|, InitMixerControls

	EXPORT	|?HandleMixerMessage@@YAHPAUMMDRV_MESSAGE_PARAMS@@PAK@Z| ; HandleMixerMessage
	EXPORT	|??_C@_1EM@DBPFHEAH@?$AA?$FL?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$FN?$AA?5?$AA?$CC?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AAm?$AAi?$AAx?$AAe?$AAr?$AA?5?$AAm?$AAe?$AAs?$AAs?$AAa@| [ DATA ] ; `string'
	IMPORT	|__C_specific_handler|

  00000			 AREA	 |.pdata|, PDATA
|$T37866| DCD	|$LN47@HandleMixe|
	DCD	0xc0003d05

  00000			 AREA	 |.pdata|, PDATA
|$T37868| DCD	|$LN34@HandleMixe|
	DCD	0x40000401

  00000			 AREA	 |.xdata|, DATA
|$T37864| DCD	0x1
	DCD	|$LN38@HandleMixe|
	DCD	|$LN39@HandleMixe|
	DCD	|$LN34@HandleMixe|
	DCD	|$LN35@HandleMixe|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@DBPFHEAH@?$AA?$FL?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$FN?$AA?5?$AA?$CC?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AAm?$AAi?$AAx?$AAe?$AAr?$AA?5?$AAm?$AAe?$AAs?$AAs?$AAa@| DCB "["
	DCB	0x0, "E", 0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, "]"
	DCB	0x0, " ", 0x0, """", 0x0, "U", 0x0, "n", 0x0, "s", 0x0, "u"
	DCB	0x0, "p", 0x0, "p", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "m", 0x0, "i", 0x0, "x", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "m", 0x0, "e", 0x0, "s", 0x0, "s"
	DCB	0x0, "a", 0x0, "g", 0x0, "e", 0x0, """", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T37864|

  00008		 |?HandleMixerMessage@@YAHPAUMMDRV_MESSAGE_PARAMS@@PAK@Z| PROC ; HandleMixerMessage

; 1148 : {

  00008		 |$LN47@HandleMixe|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d0003	 stmdb       sp!, {r0, r1}
  00010	e92d5810	 stmdb       sp!, {r4, r11, r12, lr}
  00014	e28db010	 add         r11, sp, #0x10
  00018	e24dd008	 sub         sp, sp, #8
  0001c		 |$LN45@HandleMixe|
  0001c	e1a04001	 mov         r4, r1
  00020	e58b4004	 str         r4, [r11, #4]
  00024		 |$LN38@HandleMixe|

; 1149 :     MMRESULT dwRet;
; 1150 : 
; 1151 :     _try
; 1152 :     {
; 1153 :         switch (pParams->uMsg)

  00024	e5903004	 ldr         r3, [r0, #4]
  00028	e2432001	 sub         r2, r3, #1
  0002c	e3520007	 cmp         r2, #7
  00030	8a000022	 bhi         |$LN1@HandleMixe|
  00034	e28f3004	 add         r3, pc, #4
  00038	e7d33002	 ldrb        r3, [r3, +r2]
  0003c	e08ff003	 add         pc, pc, r3
  00040		 |$LN50@HandleMixe|
  00040		 |$LN49@HandleMixe|
  00040		 |$LN51@HandleMixe|
  00040	04ed		 DCB         0x4
  00041		 |$LN52@HandleMixe|
  00041	0ced		 DCB         0xc
  00042		 |$LN53@HandleMixe|
  00042	1ced		 DCB         0x1c
  00043		 |$LN54@HandleMixe|
  00043	30ed		 DCB         0x30
  00044		 |$LN55@HandleMixe|
  00044	3ced		 DCB         0x3c
  00045		 |$LN56@HandleMixe|
  00045	4ced		 DCB         0x4c
  00046		 |$LN57@HandleMixe|
  00046	5ced		 DCB         0x5c
  00047		 |$LN58@HandleMixe|
  00047	6ced		 DCB         0x6c
  00048		 |$LN9@HandleMixe|

; 1154 :         {
; 1155 :         case MXDM_GETNUMDEVS:
; 1156 :             PRINTMSG(ZONE_WODM, (TEXT("MXDM_GETNUMDEVS\r\n")));
; 1157 :             dwRet = 1;

  00048	e3a00001	 mov         r0, #1

; 1158 :             break;

  0004c	ea00001e	 b           |$LN44@HandleMixe|
  00050		 |$LN8@HandleMixe|

; 1159 : 
; 1160 :         case MXDM_GETDEVCAPS:
; 1161 :             PRINTMSG(ZONE_WODM, (TEXT("MXDM_GETDEVCAPS\r\n")));
; 1162 :             dwRet = wdev_MXDM_GETDEVCAPS((PMIXERCAPS) pParams->dwParam1, pParams->dwParam2);

  00050	e5901010	 ldr         r1, [r0, #0x10]
  00054	e590000c	 ldr         r0, [r0, #0xC]
  00058	eb000000	 bl          |?wdev_MXDM_GETDEVCAPS@@YAKPAUtagMIXERCAPS@@K@Z|

; 1163 :             break;

  0005c	ea00001a	 b           |$LN44@HandleMixe|
  00060		 |$LN7@HandleMixe|

; 1164 : 
; 1165 :         case MXDM_OPEN:
; 1166 :             PRINTMSG(ZONE_WODM, (TEXT("MXDM_OPEN\r\n")));
; 1167 :             dwRet = wdev_MXDM_OPEN((PDWORD) pParams->dwUser, (PMIXEROPENDESC) pParams->dwParam1, pParams->dwParam2);

  00060	e5902010	 ldr         r2, [r0, #0x10]
  00064	e590100c	 ldr         r1, [r0, #0xC]
  00068	e5900008	 ldr         r0, [r0, #8]
  0006c	eb000000	 bl          |?wdev_MXDM_OPEN@@YAKPAKPAUtMIXEROPENDESC@@K@Z|

; 1168 :             break;

  00070	ea000015	 b           |$LN44@HandleMixe|
  00074		 |$LN6@HandleMixe|

; 1169 : 
; 1170 :         case MXDM_CLOSE:
; 1171 :             PRINTMSG(ZONE_WODM, (TEXT("MXDM_CLOSE\r\n")));
; 1172 :             dwRet = wdev_MXDM_CLOSE(pParams->dwUser);

  00074	e5900008	 ldr         r0, [r0, #8]
  00078	eb000000	 bl          |?wdev_MXDM_CLOSE@@YAKK@Z|

; 1173 :             break;

  0007c	ea000012	 b           |$LN44@HandleMixe|
  00080		 |$LN5@HandleMixe|

; 1174 : 
; 1175 :         case MXDM_GETLINEINFO:
; 1176 :             PRINTMSG(ZONE_WODM, (TEXT("MXDM_GETLINEINFO\r\n")));
; 1177 :             dwRet = wdev_MXDM_GETLINEINFO((PMIXERLINE) pParams->dwParam1, pParams->dwParam2);

  00080	e5901010	 ldr         r1, [r0, #0x10]
  00084	e590000c	 ldr         r0, [r0, #0xC]
  00088	eb000000	 bl          |?wdev_MXDM_GETLINEINFO@@YAKPAUtMIXERLINE@@K@Z|

; 1178 :             break;

  0008c	ea00000e	 b           |$LN44@HandleMixe|
  00090		 |$LN4@HandleMixe|

; 1179 : 
; 1180 :         case MXDM_GETLINECONTROLS:
; 1181 :             PRINTMSG(ZONE_WODM, (TEXT("MXDM_GETLINECONTROLS\r\n")));
; 1182 :             dwRet = wdev_MXDM_GETLINECONTROLS((PMIXERLINECONTROLS) pParams->dwParam1, pParams->dwParam2);

  00090	e5901010	 ldr         r1, [r0, #0x10]
  00094	e590000c	 ldr         r0, [r0, #0xC]
  00098	eb000000	 bl          |?wdev_MXDM_GETLINECONTROLS@@YAKPAUtMIXERLINECONTROLS@@K@Z|

; 1183 :             break;

  0009c	ea00000a	 b           |$LN44@HandleMixe|
  000a0		 |$LN3@HandleMixe|

; 1184 : 
; 1185 :         case MXDM_GETCONTROLDETAILS:
; 1186 :             PRINTMSG(ZONE_WODM, (TEXT("MXDM_GETCONTROLDETAILS\r\n")));
; 1187 :             dwRet = wdev_MXDM_GETCONTROLDETAILS((PMIXERCONTROLDETAILS) pParams->dwParam1, pParams->dwParam2);

  000a0	e5901010	 ldr         r1, [r0, #0x10]
  000a4	e590000c	 ldr         r0, [r0, #0xC]
  000a8	eb000000	 bl          |?wdev_MXDM_GETCONTROLDETAILS@@YAKPAUtMIXERCONTROLDETAILS@@K@Z|

; 1188 :             break;

  000ac	ea000006	 b           |$LN44@HandleMixe|
  000b0		 |$LN2@HandleMixe|

; 1189 : 
; 1190 :         case MXDM_SETCONTROLDETAILS:
; 1191 :             PRINTMSG(ZONE_WODM, (TEXT("MXDM_SETCONTROLDETAILS\r\n")));
; 1192 :             dwRet = wdev_MXDM_SETCONTROLDETAILS((PMIXERCONTROLDETAILS) pParams->dwParam1, pParams->dwParam2);

  000b0	e5901010	 ldr         r1, [r0, #0x10]
  000b4	e590000c	 ldr         r0, [r0, #0xC]
  000b8	eb000000	 bl          |?wdev_MXDM_SETCONTROLDETAILS@@YAKPAUtMIXERCONTROLDETAILS@@K@Z|

; 1193 :             break;

  000bc	ea000002	 b           |$LN44@HandleMixe|
  000c0		 |$LN1@HandleMixe|

; 1194 : 
; 1195 :         default:
; 1196 :             ERRMSG("Unsupported mixer message");

  000c0	e59f0040	 ldr         r0, [pc, #0x40]
  000c4	eb000000	 bl          NKDbgPrintfW

; 1197 :             dwRet = MMSYSERR_NOTSUPPORTED;

  000c8	e3a00008	 mov         r0, #8
  000cc		 |$LN44@HandleMixe|
  000cc	e50b0018	 str         r0, [r11, #-0x18]
  000d0		 |$LN39@HandleMixe|

; 1198 :             break;
; 1199 :         }      // switch (pParams->uMsg)
; 1200 :     }

  000d0	ea000002	 b           |$LN40@HandleMixe|
  000d4		 |$LN35@HandleMixe|

; 1202 :     {
; 1203 :         dwRet  = MMSYSERR_INVALPARAM;

  000d4	e3a0000b	 mov         r0, #0xB
  000d8	e50b0018	 str         r0, [r11, #-0x18]
  000dc	e59b4004	 ldr         r4, [r11, #4]
  000e0		 |$LN40@HandleMixe|

; 1204 :     }
; 1205 : 
; 1206 :     *pdwResult = dwRet;

  000e0	e5840000	 str         r0, [r4]

; 1207 :     return TRUE;

  000e4	e3a00001	 mov         r0, #1
  000e8	ea000000	 b           |$LN13@HandleMixe|
  000ec		 |$LN43@HandleMixe|
  000ec	e51b0014	 ldr         r0, [r11, #-0x14]
  000f0		 |$LN13@HandleMixe|

; 1208 : }

  000f0	e24bd010	 sub         sp, r11, #0x10
  000f4	e89d6810	 ldmia       sp, {r4, r11, sp, lr}
  000f8	e12fff1e	 bx          lr

			 ENDP  ; |?HandleMixerMessage@@YAHPAUMMDRV_MESSAGE_PARAMS@@PAK@Z|, HandleMixerMessage

  000fc		 |$LN34@HandleMixe|
  000fc		 |$LN46@HandleMixe|

; 1201 :     _except (EXCEPTION_EXECUTE_HANDLER)

  000fc	e52de004	 str         lr, [sp, #-4]!
  00100		 |$LN37@HandleMixe|
  00100		 |$LN59@HandleMixe|
  00100	e3a00001	 mov         r0, #1
  00104		 |$LN36@HandleMixe|
  00104	e49df004	 ldr         pc, [sp], #4
  00108		 |$LN61@HandleMixe|
  00108		 |$LN62@HandleMixe|
  00108	00000000	 DCD         |??_C@_1EM@DBPFHEAH@?$AA?$FL?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$FN?$AA?5?$AA?$CC?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?5?$AAm?$AAi?$AAx?$AAe?$AAr?$AA?5?$AAm?$AAe?$AAs?$AAs?$AAa@|
  0010c		 |$LN60@HandleMixe|
  0010c		 |$LN48@HandleMixe|
	EXPORT	|?SetMasterVolume@@YAIK@Z|		; SetMasterVolume

  00000			 AREA	 |.pdata|, PDATA
|$T37898| DCD	|$LN7@SetMasterV|
	DCD	0x40001201
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetMasterVolume@@YAIK@Z| PROC	; SetMasterVolume

; 1212 : {

  00000		 |$LN7@SetMasterV|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37895|
  00004	e1a01000	 mov         r1, r0

; 1213 :     g_pMixerControlList->m_MixerControlVolumeMaster.SetGain(dwVolume);

  00008	e59f4034	 ldr         r4, [pc, #0x34]
  0000c	e5942000	 ldr         r2, [r4]
  00010	e5923004	 ldr         r3, [r2, #4]
  00014	e2820004	 add         r0, r2, #4
  00018	e593301c	 ldr         r3, [r3, #0x1C]
  0001c	e1a0e00f	 mov         lr, pc
  00020	e12fff13	 bx          r3

; 1214 :     PerformMixerCallbacks (MM_MIXM_CONTROL_CHANGE, g_pMixerControlList->m_MixerControlVolumeMaster.GetControlID());

  00024	e5943000	 ldr         r3, [r4]
  00028	e3a02c03	 mov         r2, #3, 24
  0002c	e38200d1	 orr         r0, r2, #0xD1
  00030	e5931008	 ldr         r1, [r3, #8]
  00034	eb000000	 bl          |?PerformMixerCallbacks@@YAXKK@Z|

; 1215 :     return MMSYSERR_NOERROR;

  00038	e3a00000	 mov         r0, #0

; 1216 : }

  0003c	e8bd4010	 ldmia       sp!, {r4, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$LN8@SetMasterV|
  00044		 |$LN9@SetMasterV|
  00044	00000000	 DCD         |g_pMixerControlList|
  00048		 |$M37896|

			 ENDP  ; |?SetMasterVolume@@YAIK@Z|, SetMasterVolume

	EXPORT	|?GetMasterVolume@@YAKXZ|		; GetMasterVolume

  00000			 AREA	 |.pdata|, PDATA
|$T37909| DCD	|$LN5@GetMasterV|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetMasterVolume@@YAKXZ| PROC		; GetMasterVolume

; 1219 : {

  00000		 |$LN5@GetMasterV|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37906|

; 1220 :     return g_pMixerControlList->m_MixerControlVolumeMaster.GetGain();

  00004	e59f301c	 ldr         r3, [pc, #0x1C]
  00008	e5932000	 ldr         r2, [r3]
  0000c	e5923004	 ldr         r3, [r2, #4]
  00010	e2820004	 add         r0, r2, #4
  00014	e5933020	 ldr         r3, [r3, #0x20]
  00018	e1a0e00f	 mov         lr, pc
  0001c	e12fff13	 bx          r3

; 1221 : }

  00020	e49de004	 ldr         lr, [sp], #4
  00024	e12fff1e	 bx          lr
  00028		 |$LN6@GetMasterV|
  00028		 |$LN7@GetMasterV|
  00028	00000000	 DCD         |g_pMixerControlList|
  0002c		 |$M37907|

			 ENDP  ; |?GetMasterVolume@@YAKXZ|, GetMasterVolume


  00000			 AREA	 |.pdata|, PDATA
|$T37930| DCD	|$LN10@scalar@3|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GMixerControlVolume@@UAAPAXI@Z| PROC ; MixerControlVolume::`scalar deleting destructor'
  00000		 |$LN10@scalar@3|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37927|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3014	 ldr         r3, [pc, #0x14]
  0000c	e3110001	 tst         r1, #1
  00010	e5843000	 str         r3, [r4]
  00014	1b000000	 blne        |??3@YAXPAX@Z|
  00018	e1a00004	 mov         r0, r4
  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$LN11@scalar@3|
  00024		 |$LN12@scalar@3|
  00024	00000000	 DCD         |??_7MixerControl@@6B@|
  00028		 |$M37928|

			 ENDP  ; |??_GMixerControlVolume@@UAAPAXI@Z|, MixerControlVolume::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$T37958| DCD	|$LN12@scalar@4|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GMixerControlVolumeMaster@@UAAPAXI@Z| PROC ; MixerControlVolumeMaster::`scalar deleting destructor'
  00000		 |$LN12@scalar@4|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37955|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3014	 ldr         r3, [pc, #0x14]
  0000c	e3110001	 tst         r1, #1
  00010	e5843000	 str         r3, [r4]
  00014	1b000000	 blne        |??3@YAXPAX@Z|
  00018	e1a00004	 mov         r0, r4
  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$LN13@scalar@4|
  00024		 |$LN14@scalar@4|
  00024	00000000	 DCD         |??_7MixerControl@@6B@|
  00028		 |$M37956|

			 ENDP  ; |??_GMixerControlVolumeMaster@@UAAPAXI@Z|, MixerControlVolumeMaster::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$T37986| DCD	|$LN12@scalar@5|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GMixerControlVolumeInput@@UAAPAXI@Z| PROC ; MixerControlVolumeInput::`scalar deleting destructor'
  00000		 |$LN12@scalar@5|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37983|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3014	 ldr         r3, [pc, #0x14]
  0000c	e3110001	 tst         r1, #1
  00010	e5843000	 str         r3, [r4]
  00014	1b000000	 blne        |??3@YAXPAX@Z|
  00018	e1a00004	 mov         r0, r4
  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$LN13@scalar@5|
  00024		 |$LN14@scalar@5|
  00024	00000000	 DCD         |??_7MixerControl@@6B@|
  00028		 |$M37984|

			 ENDP  ; |??_GMixerControlVolumeInput@@UAAPAXI@Z|, MixerControlVolumeInput::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$T38007| DCD	|$LN10@scalar@6|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GMixerControlBoolean@@UAAPAXI@Z| PROC ; MixerControlBoolean::`scalar deleting destructor'
  00000		 |$LN10@scalar@6|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M38004|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3014	 ldr         r3, [pc, #0x14]
  0000c	e3110001	 tst         r1, #1
  00010	e5843000	 str         r3, [r4]
  00014	1b000000	 blne        |??3@YAXPAX@Z|
  00018	e1a00004	 mov         r0, r4
  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$LN11@scalar@6|
  00024		 |$LN12@scalar@6|
  00024	00000000	 DCD         |??_7MixerControl@@6B@|
  00028		 |$M38005|

			 ENDP  ; |??_GMixerControlBoolean@@UAAPAXI@Z|, MixerControlBoolean::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$T38035| DCD	|$LN12@scalar@7|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GMixerControlMuteMaster@@UAAPAXI@Z| PROC ; MixerControlMuteMaster::`scalar deleting destructor'
  00000		 |$LN12@scalar@7|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M38032|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3014	 ldr         r3, [pc, #0x14]
  0000c	e3110001	 tst         r1, #1
  00010	e5843000	 str         r3, [r4]
  00014	1b000000	 blne        |??3@YAXPAX@Z|
  00018	e1a00004	 mov         r0, r4
  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$LN13@scalar@7|
  00024		 |$LN14@scalar@7|
  00024	00000000	 DCD         |??_7MixerControl@@6B@|
  00028		 |$M38033|

			 ENDP  ; |??_GMixerControlMuteMaster@@UAAPAXI@Z|, MixerControlMuteMaster::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$T38063| DCD	|$LN12@scalar@8|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GMixerControlInputMute@@UAAPAXI@Z| PROC ; MixerControlInputMute::`scalar deleting destructor'
  00000		 |$LN12@scalar@8|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M38060|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3014	 ldr         r3, [pc, #0x14]
  0000c	e3110001	 tst         r1, #1
  00010	e5843000	 str         r3, [r4]
  00014	1b000000	 blne        |??3@YAXPAX@Z|
  00018	e1a00004	 mov         r0, r4
  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$LN13@scalar@8|
  00024		 |$LN14@scalar@8|
  00024	00000000	 DCD         |??_7MixerControl@@6B@|
  00028		 |$M38061|

			 ENDP  ; |??_GMixerControlInputMute@@UAAPAXI@Z|, MixerControlInputMute::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$T38084| DCD	|$LN10@scalar@9|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GMixerControlSingleMultiSelect@@UAAPAXI@Z| PROC ; MixerControlSingleMultiSelect::`scalar deleting destructor'
  00000		 |$LN10@scalar@9|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M38081|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3014	 ldr         r3, [pc, #0x14]
  0000c	e3110001	 tst         r1, #1
  00010	e5843000	 str         r3, [r4]
  00014	1b000000	 blne        |??3@YAXPAX@Z|
  00018	e1a00004	 mov         r0, r4
  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$LN11@scalar@9|
  00024		 |$LN12@scalar@9|
  00024	00000000	 DCD         |??_7MixerControl@@6B@|
  00028		 |$M38082|

			 ENDP  ; |??_GMixerControlSingleMultiSelect@@UAAPAXI@Z|, MixerControlSingleMultiSelect::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$T38112| DCD	|$LN12@scalar@10|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GMixerControlMicBoost@@UAAPAXI@Z| PROC ; MixerControlMicBoost::`scalar deleting destructor'
  00000		 |$LN12@scalar@10|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M38109|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3014	 ldr         r3, [pc, #0x14]
  0000c	e3110001	 tst         r1, #1
  00010	e5843000	 str         r3, [r4]
  00014	1b000000	 blne        |??3@YAXPAX@Z|
  00018	e1a00004	 mov         r0, r4
  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$LN13@scalar@10|
  00024		 |$LN14@scalar@10|
  00024	00000000	 DCD         |??_7MixerControl@@6B@|
  00028		 |$M38110|

			 ENDP  ; |??_GMixerControlMicBoost@@UAAPAXI@Z|, MixerControlMicBoost::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$T38140| DCD	|$LN12@scalar@11|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GMixerControlInputMux@@UAAPAXI@Z| PROC ; MixerControlInputMux::`scalar deleting destructor'
  00000		 |$LN12@scalar@11|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M38137|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3014	 ldr         r3, [pc, #0x14]
  0000c	e3110001	 tst         r1, #1
  00010	e5843000	 str         r3, [r4]
  00014	1b000000	 blne        |??3@YAXPAX@Z|
  00018	e1a00004	 mov         r0, r4
  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$LN13@scalar@11|
  00024		 |$LN14@scalar@11|
  00024	00000000	 DCD         |??_7MixerControl@@6B@|
  00028		 |$M38138|

			 ENDP  ; |??_GMixerControlInputMux@@UAAPAXI@Z|, MixerControlInputMux::`scalar deleting destructor'

	END
