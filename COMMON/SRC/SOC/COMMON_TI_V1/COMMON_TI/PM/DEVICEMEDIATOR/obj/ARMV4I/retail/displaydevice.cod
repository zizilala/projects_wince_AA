; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\PM\DEVICEMEDIATOR\displaydevice.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.bss|, NOINIT
|s_fnCreateDCW| % 0x4
|s_fnDeleteDC| % 0x4
|s_fnExtEscape| % 0x4
|s_hCore| %	0x4
|s_hGWESApiReady| % 0x4
|s_bGWESReady| % 0x4
	EXPORT	|?Initialize@DeviceBase@@UAAHPBG@Z|	; DeviceBase::Initialize
	IMPORT	|wcscpy|
	IMPORT	|wcslen|
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\devicemediator\devicebase.h

  00000			 AREA	 |.pdata|, PDATA
|$T32637| DCD	|$LN6@Initialize|
	DCD	0x40000f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Initialize@DeviceBase@@UAAHPBG@Z| PROC ; DeviceBase::Initialize

; 95   :         {

  00000		 |$LN6@Initialize|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M32634|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0

; 96   :         if (_tcslen(szDeviceName) >= sizeof(m_szDeviceName) / sizeof(m_szDeviceName[0])) return FALSE;

  0000c	e1a00004	 mov         r0, r4
  00010	eb000000	 bl          wcslen
  00014	e3500080	 cmp         r0, #0x80
  00018	23a00000	 movcs       r0, #0

; 99   :         }

  0001c	28bd4030	 ldmcsia     sp!, {r4, r5, lr}
  00020	212fff1e	 bxcs        lr

; 97   :         _tcscpy(m_szDeviceName, szDeviceName);

  00024	e1a01004	 mov         r1, r4
  00028	e2850010	 add         r0, r5, #0x10
  0002c	eb000000	 bl          wcscpy

; 98   :         return TRUE;

  00030	e3a00001	 mov         r0, #1

; 99   :         }

  00034	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$M32635|

			 ENDP  ; |?Initialize@DeviceBase@@UAAHPBG@Z|, DeviceBase::Initialize

	EXPORT	|??_C@_1CM@DKJPPKPA@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?1?$AAG?$AAw?$AAe?$AAA?$AAp?$AAi?$AAS?$AAe?$AAt?$AAR?$AAe?$AAa?$AAd?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@JGEOLONK@?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAD?$AAC?$AAW?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BC@GMBPGMN@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAe?$AAD?$AAC?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@IMLDAOJP@?$AAE?$AAx?$AAt?$AAE?$AAs?$AAc?$AAa?$AAp?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@CJKPFBEK@?$AAc?$AAo?$AAr?$AAe?$AAd?$AAl?$AAl?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|OpenEventW|
	IMPORT	|GetProcAddressW|
	IMPORT	|LoadLibraryW|
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\devicemediator\displaydevice.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T32647| DCD	|$LN14@InitDispla|
	DCD	0x40003c01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@DKJPPKPA@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?1?$AAG?$AAw?$AAe?$AAA?$AAp?$AAi?$AAS?$AAe?$AAt?$AAR?$AAe?$AAa?$AAd?$AAy?$AA?$AA@| DCB "S"
	DCB	0x0, "Y", 0x0, "S", 0x0, "T", 0x0, "E", 0x0, "M", 0x0, "/"
	DCB	0x0, "G", 0x0, "w", 0x0, "e", 0x0, "A", 0x0, "p", 0x0, "i"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "R", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "y", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@JGEOLONK@?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAD?$AAC?$AAW?$AA?$AA@| DCB "C"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "D"
	DCB	0x0, "C", 0x0, "W", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BC@GMBPGMN@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAe?$AAD?$AAC?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "D"
	DCB	0x0, "C", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@IMLDAOJP@?$AAE?$AAx?$AAt?$AAE?$AAs?$AAc?$AAa?$AAp?$AAe?$AA?$AA@| DCB "E"
	DCB	0x0, "x", 0x0, "t", 0x0, "E", 0x0, "s", 0x0, "c", 0x0, "a"
	DCB	0x0, "p", 0x0, "e", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@CJKPFBEK@?$AAc?$AAo?$AAr?$AAe?$AAd?$AAl?$AAl?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@| DCB "c"
	DCB	0x0, "o", 0x0, "r", 0x0, "e", 0x0, "d", 0x0, "l", 0x0, "l"
	DCB	0x0, ".", 0x0, "d", 0x0, "l", 0x0, "l", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InitDisplayDeviceInterface@@YAHXZ| PROC ; InitDisplayDeviceInterface

; 54   : {

  00000		 |$LN14@InitDispla|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M32644|

; 55   :     BOOL rc = FALSE;
; 56   :     
; 57   :     // open coredll.dll
; 58   :     //
; 59   :     if (s_hCore == NULL)

  00004	e59f40e0	 ldr         r4, [pc, #0xE0]
  00008	e3a05000	 mov         r5, #0
  0000c	e594000c	 ldr         r0, [r4, #0xC]
  00010	e3500000	 cmp         r0, #0
  00014	1a000004	 bne         |$LN8@InitDispla|

; 60   :         {
; 61   :         s_hCore = (HMODULE)::LoadLibrary(L"coredll.dll");

  00018	e59f00c8	 ldr         r0, [pc, #0xC8]
  0001c	eb000000	 bl          LoadLibraryW
  00020	e3500000	 cmp         r0, #0
  00024	e584000c	 str         r0, [r4, #0xC]

; 62   :         if (s_hCore == NULL) goto cleanUp;

  00028	0a000027	 beq         |$cleanUp$32513|
  0002c		 |$LN8@InitDispla|

; 63   :         }
; 64   :     
; 65   :     // get procedure addresses
; 66   :     //
; 67   :     s_fnCreateDCW = (PFN_CreateDCW) GetProcAddress(s_hCore, _T("CreateDCW"));

  0002c	e59f10b0	 ldr         r1, [pc, #0xB0]
  00030	eb000000	 bl          GetProcAddressW

; 68   :     s_fnDeleteDC = (PFN_DeleteDC) GetProcAddress(s_hCore, _T("DeleteDC"));

  00034	e59f10a4	 ldr         r1, [pc, #0xA4]
  00038	e1a03000	 mov         r3, r0
  0003c	e594000c	 ldr         r0, [r4, #0xC]
  00040	e5843000	 str         r3, [r4]
  00044	eb000000	 bl          GetProcAddressW

; 69   :     s_fnExtEscape = (PFN_ExtEscape) GetProcAddress(s_hCore, _T("ExtEscape"));    

  00048	e59f108c	 ldr         r1, [pc, #0x8C]
  0004c	e1a03000	 mov         r3, r0
  00050	e594000c	 ldr         r0, [r4, #0xC]
  00054	e5843004	 str         r3, [r4, #4]
  00058	eb000000	 bl          GetProcAddressW

; 70   :     if (!s_fnCreateDCW || !s_fnExtEscape || !s_fnDeleteDC) 

  0005c	e5943000	 ldr         r3, [r4]
  00060	e5840008	 str         r0, [r4, #8]
  00064	e3530000	 cmp         r3, #0
  00068	0a000011	 beq         |$LN5@InitDispla|
  0006c	e3500000	 cmp         r0, #0
  00070	0a00000f	 beq         |$LN5@InitDispla|
  00074	e5943004	 ldr         r3, [r4, #4]
  00078	e3530000	 cmp         r3, #0
  0007c	0a00000c	 beq         |$LN5@InitDispla|

; 75   :         goto cleanUp;
; 76   :         }
; 77   : 
; 78   :     // get a handle to the GWES API set signal
; 79   :     //
; 80   :     if (s_hGWESApiReady == NULL)

  00080	e5943010	 ldr         r3, [r4, #0x10]
  00084	e3530000	 cmp         r3, #0
  00088	1a000007	 bne         |$LN2@InitDispla|

; 81   :         {
; 82   :         s_hGWESApiReady = OpenEvent(EVENT_ALL_ACCESS, FALSE, 
; 83   :                             L"SYSTEM/GweApiSetReady"
; 84   :                             );

  0008c	e59f2044	 ldr         r2, [pc, #0x44]
  00090	e3a0381f	 mov         r3, #0x1F, 16
  00094	e3830003	 orr         r0, r3, #3
  00098	e3a01000	 mov         r1, #0
  0009c	eb000000	 bl          OpenEventW
  000a0	e3500000	 cmp         r0, #0
  000a4	e5840010	 str         r0, [r4, #0x10]

; 85   :         
; 86   :         if (s_hGWESApiReady == NULL) goto cleanUp;

  000a8	0a000007	 beq         |$cleanUp$32513|
  000ac		 |$LN2@InitDispla|

; 87   :         }
; 88   : 
; 89   :     rc = TRUE;

  000ac	e3a05001	 mov         r5, #1
  000b0	ea000005	 b           |$cleanUp$32513|
  000b4		 |$LN5@InitDispla|

; 71   :         {
; 72   :         s_fnCreateDCW = NULL;

  000b4	e3a03000	 mov         r3, #0

; 73   :         s_fnDeleteDC = NULL;

  000b8	e3a02000	 mov         r2, #0

; 74   :         s_fnExtEscape = NULL;

  000bc	e3a01000	 mov         r1, #0
  000c0	e5843000	 str         r3, [r4]
  000c4	e5842004	 str         r2, [r4, #4]
  000c8	e5841008	 str         r1, [r4, #8]
  000cc		 |$cleanUp$32513|

; 90   : 
; 91   : cleanUp:
; 92   :     return rc;
; 93   : }

  000cc	e1a00005	 mov         r0, r5
  000d0	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000d4	e12fff1e	 bx          lr
  000d8		 |$LN15@InitDispla|
  000d8		 |$LN16@InitDispla|
  000d8	00000000	 DCD         |??_C@_1CM@DKJPPKPA@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?1?$AAG?$AAw?$AAe?$AAA?$AAp?$AAi?$AAS?$AAe?$AAt?$AAR?$AAe?$AAa?$AAd?$AAy?$AA?$AA@|
  000dc		 |$LN17@InitDispla|
  000dc	00000000	 DCD         |??_C@_1BE@IMLDAOJP@?$AAE?$AAx?$AAt?$AAE?$AAs?$AAc?$AAa?$AAp?$AAe?$AA?$AA@|
  000e0		 |$LN18@InitDispla|
  000e0	00000000	 DCD         |??_C@_1BC@GMBPGMN@?$AAD?$AAe?$AAl?$AAe?$AAt?$AAe?$AAD?$AAC?$AA?$AA@|
  000e4		 |$LN19@InitDispla|
  000e4	00000000	 DCD         |??_C@_1BE@JGEOLONK@?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAD?$AAC?$AAW?$AA?$AA@|
  000e8		 |$LN20@InitDispla|
  000e8	00000000	 DCD         |??_C@_1BI@CJKPFBEK@?$AAc?$AAo?$AAr?$AAe?$AAd?$AAl?$AAl?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@|
  000ec		 |$LN21@InitDispla|
  000ec	00000000	 DCD         |s_fnCreateDCW|
  000f0		 |$M32645|

			 ENDP  ; |?InitDisplayDeviceInterface@@YAHXZ|, InitDisplayDeviceInterface

	IMPORT	|CloseHandle|
	IMPORT	|WaitForSingleObject|

  00000			 AREA	 |.pdata|, PDATA
|$T32665| DCD	|$LN10@OpenDispla|
	DCD	0x40002101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?OpenDisplayDevice@@YAPAXPBG@Z| PROC	; OpenDisplayDevice

; 105  : {    

  00000		 |$LN10@OpenDispla|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M32662|
  00004	e1a06000	 mov         r6, r0

; 106  :     HANDLE hRet = NULL;
; 107  : 
; 108  :     // Make sure GWES is ready for us to access this device
; 109  :     //
; 110  :     if  (s_bGWESReady == FALSE) 

  00008	e59f4070	 ldr         r4, [pc, #0x70]
  0000c	e3a05000	 mov         r5, #0
  00010	e5943014	 ldr         r3, [r4, #0x14]
  00014	e3530000	 cmp         r3, #0
  00018	1a00000d	 bne         |$LN5@OpenDispla|

; 111  :         {
; 112  :         if (InitDisplayDeviceInterface() == FALSE) goto cleanUp;

  0001c	eb000000	 bl          |?InitDisplayDeviceInterface@@YAHXZ|
  00020	e3500000	 cmp         r0, #0
  00024	0a000012	 beq         |$cleanUp$32534|

; 113  :         
; 114  :         // We need to wait for GWES to finish -- since this is happening
; 115  :         // at boot time, we shouldn't have to wait long.
; 116  :         //
; 117  :         DEBUGCHK(s_hGWESApiReady != NULL);        
; 118  :         DWORD dwStatus = WaitForSingleObject(s_hGWESApiReady, INFINITE);

  00028	e5940010	 ldr         r0, [r4, #0x10]
  0002c	e3e01000	 mvn         r1, #0
  00030	eb000000	 bl          WaitForSingleObject
  00034	e3500000	 cmp         r0, #0

; 119  :         if(dwStatus != WAIT_OBJECT_0) goto cleanUp;

  00038	1a00000d	 bne         |$cleanUp$32534|

; 120  : 
; 121  :         // free allocated resources
; 122  :         //
; 123  :         ::CloseHandle(s_hGWESApiReady);

  0003c	e5940010	 ldr         r0, [r4, #0x10]
  00040	eb000000	 bl          CloseHandle

; 124  : 
; 125  :         s_hGWESApiReady = NULL;        

  00044	e3a03000	 mov         r3, #0

; 126  :         s_bGWESReady = TRUE;

  00048	e3a02001	 mov         r2, #1
  0004c	e5843010	 str         r3, [r4, #0x10]
  00050	e5842014	 str         r2, [r4, #0x14]
  00054		 |$LN5@OpenDispla|

; 127  :         }
; 128  : 
; 129  :     // Get a handle to the client device.  The client's name will generally 
; 130  :     // be "DISPLAY" for the default display, but it could be anything that 
; 131  :     // CreateDC supports.
; 132  :     //
; 133  :     PREFAST_DEBUGCHK(s_fnCreateDCW != NULL);
; 134  :     PREFAST_DEBUGCHK(s_fnDeleteDC != NULL);
; 135  :     PREFAST_DEBUGCHK(s_fnExtEscape != NULL);
; 136  : 
; 137  :     // Get handle to dc
; 138  :     hRet = s_fnCreateDCW(szDeviceName, NULL, NULL, NULL);

  00054	e5944000	 ldr         r4, [r4]
  00058	e3a03000	 mov         r3, #0
  0005c	e3a02000	 mov         r2, #0
  00060	e3a01000	 mov         r1, #0
  00064	e1a00006	 mov         r0, r6
  00068	e1a0e00f	 mov         lr, pc
  0006c	e12fff14	 bx          r4
  00070	e1a05000	 mov         r5, r0
  00074		 |$cleanUp$32534|

; 139  : 
; 140  : cleanUp:    
; 141  :     return hRet;
; 142  : }

  00074	e1a00005	 mov         r0, r5
  00078	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0007c	e12fff1e	 bx          lr
  00080		 |$LN11@OpenDispla|
  00080		 |$LN12@OpenDispla|
  00080	00000000	 DCD         |s_fnCreateDCW|
  00084		 |$M32663|

			 ENDP  ; |?OpenDisplayDevice@@YAPAXPBG@Z|, OpenDisplayDevice

	EXPORT	|?Initialize@DisplayDevice@@UAAHPBG@Z|	; DisplayDevice::Initialize

  00000			 AREA	 |.pdata|, PDATA
|$T32695| DCD	|$LN16@Initialize@2|
	DCD	0x40002c01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Initialize@DisplayDevice@@UAAHPBG@Z| PROC ; DisplayDevice::Initialize

; 149  : {

  00000		 |$LN16@Initialize@2|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M32692|
  00004	e1a08001	 mov         r8, r1
  00008	e1a07000	 mov         r7, r0

; 150  :     BOOL rc = FALSE;
; 151  : 
; 152  :     DeviceBase::Initialize(szDeviceName);

  0000c	e1a00008	 mov         r0, r8
  00010	e3a06000	 mov         r6, #0
  00014	eb000000	 bl          wcslen
  00018	e3500080	 cmp         r0, #0x80
  0001c	31a01008	 movcc       r1, r8
  00020	32870010	 addcc       r0, r7, #0x10
  00024	3b000000	 blcc        wcscpy

; 153  :     m_hDevice = OpenDisplayDevice(szDeviceName);

  00028	e59f407c	 ldr         r4, [pc, #0x7C]
  0002c	e3a05000	 mov         r5, #0
  00030	e5943014	 ldr         r3, [r4, #0x14]
  00034	e3530000	 cmp         r3, #0
  00038	1a00000d	 bne         |$LN11@Initialize@2|
  0003c	eb000000	 bl          |?InitDisplayDeviceInterface@@YAHXZ|
  00040	e3500000	 cmp         r0, #0
  00044	0a000012	 beq         |$cleanUp$32680|
  00048	e5940010	 ldr         r0, [r4, #0x10]
  0004c	e3e01000	 mvn         r1, #0
  00050	eb000000	 bl          WaitForSingleObject
  00054	e3500000	 cmp         r0, #0
  00058	1a00000d	 bne         |$cleanUp$32680|
  0005c	e5940010	 ldr         r0, [r4, #0x10]
  00060	eb000000	 bl          CloseHandle
  00064	e3a03000	 mov         r3, #0
  00068	e3a02001	 mov         r2, #1
  0006c	e5843010	 str         r3, [r4, #0x10]
  00070	e5842014	 str         r2, [r4, #0x14]
  00074		 |$LN11@Initialize@2|
  00074	e5944000	 ldr         r4, [r4]
  00078	e3a03000	 mov         r3, #0
  0007c	e3a02000	 mov         r2, #0
  00080	e3a01000	 mov         r1, #0
  00084	e1a00008	 mov         r0, r8
  00088	e1a0e00f	 mov         lr, pc
  0008c	e12fff14	 bx          r4
  00090	e1a05000	 mov         r5, r0
  00094		 |$cleanUp$32680|

; 154  :     if (m_hDevice != NULL) rc = TRUE;

  00094	e3550000	 cmp         r5, #0
  00098	13a06001	 movne       r6, #1

; 155  :     return rc;
; 156  : }

  0009c	e1a00006	 mov         r0, r6
  000a0	e587500c	 str         r5, [r7, #0xC]
  000a4	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  000a8	e12fff1e	 bx          lr
  000ac		 |$LN17@Initialize@2|
  000ac		 |$LN18@Initialize@2|
  000ac	00000000	 DCD         |s_fnCreateDCW|
  000b0		 |$M32693|

			 ENDP  ; |?Initialize@DisplayDevice@@UAAHPBG@Z|, DisplayDevice::Initialize

	EXPORT	|?Uninitialize@DisplayDevice@@UAAHXZ|	; DisplayDevice::Uninitialize

  00000			 AREA	 |.pdata|, PDATA
|$T32707| DCD	|$LN6@Uninitiali|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Uninitialize@DisplayDevice@@UAAHXZ| PROC ; DisplayDevice::Uninitialize

; 162  : {

  00000		 |$LN6@Uninitiali|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M32704|

; 163  :     if (m_hDevice != NULL) s_fnDeleteDC((HDC)m_hDevice);

  00004	e590300c	 ldr         r3, [r0, #0xC]
  00008	e1b00003	 movs        r0, r3
  0000c	159f3014	 ldrne       r3, [pc, #0x14]
  00010	15933000	 ldrne       r3, [r3]
  00014	11a0e00f	 movne       lr, pc
  00018	112fff13	 bxne        r3

; 164  :     return TRUE;

  0001c	e3a00001	 mov         r0, #1

; 165  : }

  00020	e49de004	 ldr         lr, [sp], #4
  00024	e12fff1e	 bx          lr
  00028		 |$LN7@Uninitiali|
  00028		 |$LN8@Uninitiali|
  00028	00000000	 DCD         |s_fnDeleteDC|
  0002c		 |$M32705|

			 ENDP  ; |?Uninitialize@DisplayDevice@@UAAHXZ|, DisplayDevice::Uninitialize

	EXPORT	|?SendIoControl@DisplayDevice@@UAAHKPAXK0KPAK@Z| ; DisplayDevice::SendIoControl
	IMPORT	|__C_specific_handler|

  00000			 AREA	 |.pdata|, PDATA
|$T32736| DCD	|$LN17@SendIoCont|
	DCD	0xc0001a04

  00000			 AREA	 |.pdata|, PDATA
|$T32738| DCD	|$LN5@SendIoCont|
	DCD	0x40000602

  00000			 AREA	 |.xdata|, DATA
|$T32734| DCD	0x1
	DCD	|$LN9@SendIoCont|
	DCD	|$LN10@SendIoCont|
	DCD	|$LN5@SendIoCont|
	DCD	|$LN6@SendIoCont|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T32734|

  00008		 |?SendIoControl@DisplayDevice@@UAAHKPAXK0KPAK@Z| PROC ; DisplayDevice::SendIoControl

; 177  : {

  00008		 |$LN17@SendIoCont|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d58f0	 stmdb       sp!, {r4 - r7, r11, r12, lr}
  00010	e28db01c	 add         r11, sp, #0x1C
  00014	e24dd010	 sub         sp, sp, #0x10
  00018		 |$LN15@SendIoCont|
  00018	e1a07003	 mov         r7, r3

; 178  :     BOOL rc = FALSE;

  0001c	e3a03000	 mov         r3, #0
  00020	e50b3024	 str         r3, [r11, #-0x24]
  00024		 |$LN9@SendIoCont|

; 179  :     UNREFERENCED_PARAMETER(lpBytesReturned);   
; 180  :     __try 
; 181  :         {
; 182  :         rc = s_fnExtEscape((HDC)m_hDevice, (int)dwIoControlCode, (int)nInBufSize, 
; 183  :                 (LPCSTR)lpInBuf, (int)nOutBufSize, (LPSTR)lpOutBuf
; 184  :                 );

  00024	e59fe058	 ldr         lr, [pc, #0x58]
  00028	e59b4000	 ldr         r4, [r11]
  0002c	e59b5004	 ldr         r5, [r11, #4]
  00030	e59e6000	 ldr         r6, [lr]
  00034	e590000c	 ldr         r0, [r0, #0xC]
  00038	e1a03002	 mov         r3, r2
  0003c	e1a02007	 mov         r2, r7
  00040	e58d4004	 str         r4, [sp, #4]
  00044	e58d5000	 str         r5, [sp]
  00048	e1a0e00f	 mov         lr, pc
  0004c	e12fff16	 bx          r6
  00050	e50b0024	 str         r0, [r11, #-0x24]
  00054		 |$LN10@SendIoCont|

; 185  :         }

  00054	ea000002	 b           |$LN2@SendIoCont|
  00058		 |$LN6@SendIoCont|

; 186  :     __except(EXCEPTION_EXECUTE_HANDLER) 

  00058	e51b0024	 ldr         r0, [r11, #-0x24]
  0005c	ea000000	 b           |$LN2@SendIoCont|
  00060		 |$LN14@SendIoCont|

; 187  :         {
; 188  :         }
; 189  : 
; 190  :     return rc;

  00060	e51b0020	 ldr         r0, [r11, #-0x20]
  00064		 |$LN2@SendIoCont|

; 191  : }

  00064	e24bd01c	 sub         sp, r11, #0x1C
  00068	e89d68f0	 ldmia       sp, {r4 - r7, r11, sp, lr}
  0006c	e12fff1e	 bx          lr

			 ENDP  ; |?SendIoControl@DisplayDevice@@UAAHKPAXK0KPAK@Z|, DisplayDevice::SendIoControl

  00070		 |$LN5@SendIoCont|
  00070		 |$LN16@SendIoCont|

; 186  :     __except(EXCEPTION_EXECUTE_HANDLER) 

  00070	e52de004	 str         lr, [sp, #-4]!
  00074	e24dd008	 sub         sp, sp, #8
  00078		 |$LN8@SendIoCont|
  00078		 |$LN19@SendIoCont|
  00078	e3a00001	 mov         r0, #1
  0007c		 |$LN7@SendIoCont|
  0007c	e28dd008	 add         sp, sp, #8
  00080	e49df004	 ldr         pc, [sp], #4
  00084		 |$LN21@SendIoCont|
  00084		 |$LN22@SendIoCont|
  00084	00000000	 DCD         |s_fnExtEscape|
  00088		 |$LN20@SendIoCont|
  00088		 |$LN18@SendIoCont|
	END
