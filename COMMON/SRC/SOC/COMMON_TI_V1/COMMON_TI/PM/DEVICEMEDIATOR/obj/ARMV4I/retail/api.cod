; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\PM\DEVICEMEDIATOR\api.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|PMCLASS_PMEXT_GUID| [ DATA ]
	EXPORT	|PMCLASS_BUSNAMESPACE_GUID| [ DATA ]
	EXPORT	|PMCLASS_DISPLAY_GUID| [ DATA ]
	EXPORT	|NULL_GUID| [ DATA ]

  00000			 AREA	 |.rdata|, DATA, READONLY
|PMCLASS_PMEXT_GUID| DCD 0xae2066f
	DCW	0x89a2
	DCW	0x4d70
	DCB	0x8f
	DCB	0xc2
	DCB	0x29
	DCB	0xae
	DCB	0xfa
	DCB	0x68
	DCB	0x41
	DCB	0x3c
|PMCLASS_BUSNAMESPACE_GUID| DCD 0xab2066f
	DCW	0x89a2
	DCW	0x4d70
	DCB	0x8f
	DCB	0xc2
	DCB	0x29
	DCB	0xae
	DCB	0x1a
	DCB	0xab
	DCB	0x34
	DCB	0x0
|PMCLASS_DISPLAY_GUID| DCD 0xeb91c7c9
	DCW	0x8bf6
	DCW	0x4a2d
	DCB	0x9a
	DCB	0xb8
	DCB	0x69
	DCB	0x72
	DCB	0x4e
	DCB	0xed
	DCB	0x97
	DCB	0xd1
|NULL_GUID| DCD	0x0
	DCW	0x0
	DCW	0x0
	DCB	0x0
	DCB	0x0
	DCB	0x0
	DCB	0x0
	DCB	0x0
	DCB	0x0
	DCB	0x0
	DCB	0x0
|s_rgAdvertisedInfo| DCD 0x65
	DCD	|PMCLASS_PMEXT_GUID|
	DCD	0x66
	DCD	|PMCLASS_DISPLAY_GUID|
	DCD	0x64
	DCD	|PMCLASS_BUSNAMESPACE_GUID|
	DCD	0xffffffff
	DCD	|NULL_GUID|
	%	8
	EXPORT	|SetEvent|
	IMPORT	|EventModify|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T34692| DCD	|$LN5@SetEvent|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetEvent| PROC

; 235  : _inline BOOL SetEvent(HANDLE h) {

  00000		 |$LN5@SetEvent|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M34689|

; 236  : 	return EventModify(h,EVENT_SET);

  00004	e3a01003	 mov         r1, #3
  00008	eb000000	 bl          EventModify

; 237  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M34690|

			 ENDP  ; |SetEvent|

	EXPORT	|GetCurrentThread|

  00000			 AREA	 |.pdata|, PDATA
|$T34701| DCD	|$LN5@GetCurrent|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetCurrentThread| PROC

; 351  : _inline HANDLE GetCurrentThread(void) {

  00000		 |$LN5@GetCurrent|
  00000		 |$M34698|

; 352  : 	return ((HANDLE)(SH_CURTHREAD+SYS_HANDLE_BASE));

  00000	e3a00041	 mov         r0, #0x41

; 353  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M34699|

			 ENDP  ; |GetCurrentThread|

	EXPORT	|??0CRegistryEdit@@QAA@PAUHKEY__@@PBG@Z| ; CRegistryEdit::CRegistryEdit
	IMPORT	|RegOpenKeyExW|
; File c:\wince600\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.pdata|, PDATA
|$T34713| DCD	|$LN7@CRegistryE|
	DCD	0x40001402
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CRegistryEdit@@QAA@PAUHKEY__@@PBG@Z| PROC ; CRegistryEdit::CRegistryEdit

; 45   :     CRegistryEdit( HKEY hKey, LPCTSTR pszRegPath )

  00000		 |$LN7@CRegistryE|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M34710|
  00008	e1b0e002	 movs        lr, r2
  0000c	e1a05001	 mov         r5, r1
  00010	e1a04000	 mov         r4, r0

; 46   :     {
; 47   :         m_hDevKey = NULL;

  00014	e3a06000	 mov         r6, #0
  00018	e5846000	 str         r6, [r4]

; 48   :         if( pszRegPath )

  0001c	0a000007	 beq         |$LN1@CRegistryE|

; 49   :         {
; 50   :             if( RegOpenKeyEx( hKey, pszRegPath, 0, 0, &m_hDevKey ) != ERROR_SUCCESS )

  00020	e3a03000	 mov         r3, #0
  00024	e3a02000	 mov         r2, #0
  00028	e1a0100e	 mov         r1, lr
  0002c	e1a00005	 mov         r0, r5
  00030	e58d4000	 str         r4, [sp]
  00034	eb000000	 bl          RegOpenKeyExW
  00038	e3500000	 cmp         r0, #0

; 51   :             {
; 52   :                 m_hDevKey = NULL;

  0003c	15846000	 strne       r6, [r4]
  00040		 |$LN1@CRegistryE|

; 53   :             }
; 54   :         }
; 55   :     }

  00040	e1a00004	 mov         r0, r4
  00044	e28dd004	 add         sp, sp, #4
  00048	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$M34711|

			 ENDP  ; |??0CRegistryEdit@@QAA@PAUHKEY__@@PBG@Z|, CRegistryEdit::CRegistryEdit

	EXPORT	|??1CRegistryEdit@@QAA@XZ|		; CRegistryEdit::~CRegistryEdit
	IMPORT	|RegCloseKey|

  00000			 AREA	 |.pdata|, PDATA
|$T34721| DCD	|$LN6@CRegistryE@2|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CRegistryEdit@@QAA@XZ| PROC	; CRegistryEdit::~CRegistryEdit

; 80   :     {

  00000		 |$LN6@CRegistryE@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M34718|

; 81   :         if( m_hDevKey )

  00004	e5903000	 ldr         r3, [r0]
  00008	e3530000	 cmp         r3, #0

; 82   :         {
; 83   :             RegCloseKey( m_hDevKey );

  0000c	11a00003	 movne       r0, r3
  00010	1b000000	 blne        RegCloseKey

; 84   :         }
; 85   :     }

  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M34719|

			 ENDP  ; |??1CRegistryEdit@@QAA@XZ|, CRegistryEdit::~CRegistryEdit

	EXPORT	|?RegQueryValueExW@CRegistryEdit@@QAAHPBGPAKPAE1@Z| ; CRegistryEdit::RegQueryValueExW
	IMPORT	|RegQueryValueExW|

  00000			 AREA	 |.pdata|, PDATA
|$T34736| DCD	|$LN7@RegQueryVa|
	DCD	0x40001002
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RegQueryValueExW@CRegistryEdit@@QAAHPBGPAKPAE1@Z| PROC ; CRegistryEdit::RegQueryValueExW

; 145  :     {

  00000		 |$LN7@RegQueryVa|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M34733|
  00008	e1a04003	 mov         r4, r3
  0000c	e1a03002	 mov         r3, r2

; 146  :         LONG status = ::RegQueryValueEx( m_hDevKey,
; 147  :                                            lpcName,
; 148  :                                            NULL,
; 149  :                                            pdwType,
; 150  :                                            lpData,
; 151  :                                            pdwDataLen );

  00010	e59de010	 ldr         lr, [sp, #0x10]
  00014	e5900000	 ldr         r0, [r0]
  00018	e3a02000	 mov         r2, #0
  0001c	e58de004	 str         lr, [sp, #4]
  00020	e58d4000	 str         r4, [sp]
  00024	eb000000	 bl          RegQueryValueExW
  00028	e3500000	 cmp         r0, #0

; 152  :         return ( status == ERROR_SUCCESS );

  0002c	03a00001	 moveq       r0, #1
  00030	13a00000	 movne       r0, #0

; 153  :     };

  00034	e28dd008	 add         sp, sp, #8
  00038	e8bd4010	 ldmia       sp!, {r4, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$M34734|

			 ENDP  ; |?RegQueryValueExW@CRegistryEdit@@QAAHPBGPAKPAE1@Z|, CRegistryEdit::RegQueryValueExW

	EXPORT	|??0DeviceBase@@QAA@XZ|			; DeviceBase::DeviceBase
	EXPORT	|??_7DeviceBase@@6B@| [ DATA ]		; DeviceBase::`vftable'
	EXPORT	|?Uninitialize@DeviceBase@@UAAHXZ|	; DeviceBase::Uninitialize
	EXPORT	|?Initialize@DeviceBase@@UAAHPBG@Z|	; DeviceBase::Initialize
	IMPORT	|??_EDeviceBase@@UAAPAXI@Z|, WEAK |??_GDeviceBase@@UAAPAXI@Z| ; DeviceBase::`vector deleting destructor', DeviceBase::`scalar deleting destructor'
	IMPORT	|_purecall|
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\devicemediator\devicebase.h

  00000			 AREA	 |.pdata|, PDATA
|$T34746| DCD	|$LN5@DeviceBase|
	DCD	0x40000700

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7DeviceBase@@6B@| DCD |??_EDeviceBase@@UAAPAXI@Z|	; DeviceBase::`vftable'
	DCD	|?Uninitialize@DeviceBase@@UAAHXZ|
	DCD	|?Initialize@DeviceBase@@UAAHPBG@Z|
	DCD	|_purecall|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0DeviceBase@@QAA@XZ| PROC		; DeviceBase::DeviceBase

; 52   :         {

  00000		 |$LN5@DeviceBase|
  00000		 |$M34743|
  00000	e59f3010	 ldr         r3, [pc, #0x10]
  00004	e3a02000	 mov         r2, #0
  00008	e580200c	 str         r2, [r0, #0xC]
  0000c	e5803000	 str         r3, [r0]

; 53   :         m_szDeviceName[0] = NULL;

  00010	e1c021b0	 strh        r2, [r0, #0x10]

; 54   :         }

  00014	e12fff1e	 bx          lr
  00018		 |$LN6@DeviceBase|
  00018		 |$LN7@DeviceBase|
  00018	00000000	 DCD         |??_7DeviceBase@@6B@|
  0001c		 |$M34744|

			 ENDP  ; |??0DeviceBase@@QAA@XZ|, DeviceBase::DeviceBase

	EXPORT	|??1DeviceBase@@UAA@XZ|			; DeviceBase::~DeviceBase

  00000			 AREA	 |.pdata|, PDATA
|$T34756| DCD	|$LN5@DeviceBase@2|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1DeviceBase@@UAA@XZ| PROC		; DeviceBase::~DeviceBase

; 57   :         {

  00000		 |$LN5@DeviceBase@2|
  00000		 |$M34753|
  00000	e59f3004	 ldr         r3, [pc, #4]
  00004	e5803000	 str         r3, [r0]

; 58   :         };

  00008	e12fff1e	 bx          lr
  0000c		 |$LN6@DeviceBase@2|
  0000c		 |$LN7@DeviceBase@2|
  0000c	00000000	 DCD         |??_7DeviceBase@@6B@|
  00010		 |$M34754|

			 ENDP  ; |??1DeviceBase@@UAA@XZ|, DeviceBase::~DeviceBase


  00000			 AREA	 |.pdata|, PDATA
|$T34767| DCD	|$LN5@Uninitiali|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Uninitialize@DeviceBase@@UAAHXZ| PROC ; DeviceBase::Uninitialize

; 90   :         {

  00000		 |$LN5@Uninitiali|
  00000		 |$M34764|

; 91   :         return TRUE;

  00000	e3a00001	 mov         r0, #1

; 92   :         }

  00004	e12fff1e	 bx          lr
  00008		 |$M34765|

			 ENDP  ; |?Uninitialize@DeviceBase@@UAAHXZ|, DeviceBase::Uninitialize

	IMPORT	|wcscpy|
	IMPORT	|wcslen|

  00000			 AREA	 |.pdata|, PDATA
|$T34780| DCD	|$LN6@Initialize|
	DCD	0x40000f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Initialize@DeviceBase@@UAAHPBG@Z| PROC ; DeviceBase::Initialize

; 95   :         {

  00000		 |$LN6@Initialize|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M34777|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0

; 96   :         if (_tcslen(szDeviceName) >= sizeof(m_szDeviceName) / sizeof(m_szDeviceName[0])) return FALSE;

  0000c	e1a00004	 mov         r0, r4
  00010	eb000000	 bl          wcslen
  00014	e3500080	 cmp         r0, #0x80
  00018	23a00000	 movcs       r0, #0

; 99   :         }

  0001c	28bd4030	 ldmcsia     sp!, {r4, r5, lr}
  00020	212fff1e	 bxcs        lr

; 97   :         _tcscpy(m_szDeviceName, szDeviceName);

  00024	e1a01004	 mov         r1, r4
  00028	e2850010	 add         r0, r5, #0x10
  0002c	eb000000	 bl          wcscpy

; 98   :         return TRUE;

  00030	e3a00001	 mov         r0, #1

; 99   :         }

  00034	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$M34778|

			 ENDP  ; |?Initialize@DeviceBase@@UAAHPBG@Z|, DeviceBase::Initialize

	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$T34794| DCD	|$LN8@scalar|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GDeviceBase@@UAAPAXI@Z| PROC	; DeviceBase::`scalar deleting destructor'
  00000		 |$LN8@scalar|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M34791|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3014	 ldr         r3, [pc, #0x14]
  0000c	e3110001	 tst         r1, #1
  00010	e5843000	 str         r3, [r4]
  00014	1b000000	 blne        |??3@YAXPAX@Z|
  00018	e1a00004	 mov         r0, r4
  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$LN9@scalar|
  00024		 |$LN10@scalar|
  00024	00000000	 DCD         |??_7DeviceBase@@6B@|
  00028		 |$M34792|

			 ENDP  ; |??_GDeviceBase@@UAAPAXI@Z|, DeviceBase::`scalar deleting destructor'

	EXPORT	|??0StreamDevice@@QAA@XZ|		; StreamDevice::StreamDevice
	EXPORT	|??_7StreamDevice@@6B@| [ DATA ]	; StreamDevice::`vftable'
	EXPORT	|?Uninitialize@StreamDevice@@UAAHXZ|	; StreamDevice::Uninitialize
	EXPORT	|?Initialize@StreamDevice@@UAAHPBG@Z|	; StreamDevice::Initialize
	EXPORT	|?SendIoControl@StreamDevice@@UAAHKPAXK0KPAK@Z| ; StreamDevice::SendIoControl
	IMPORT	|??_EStreamDevice@@UAAPAXI@Z|, WEAK |??_GStreamDevice@@UAAPAXI@Z| ; StreamDevice::`vector deleting destructor', StreamDevice::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T34809| DCD	|$LN7@StreamDevi|
	DCD	0x40000700

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7StreamDevice@@6B@| DCD |??_EStreamDevice@@UAAPAXI@Z| ; StreamDevice::`vftable'
	DCD	|?Uninitialize@StreamDevice@@UAAHXZ|
	DCD	|?Initialize@StreamDevice@@UAAHPBG@Z|
	DCD	|?SendIoControl@StreamDevice@@UAAHKPAXK0KPAK@Z|
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\devicemediator\streamdevice.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0StreamDevice@@QAA@XZ| PROC		; StreamDevice::StreamDevice

; 46   :         {

  00000		 |$LN7@StreamDevi|
  00000		 |$M34806|
  00000	e59f3010	 ldr         r3, [pc, #0x10]
  00004	e3a02000	 mov         r2, #0
  00008	e580200c	 str         r2, [r0, #0xC]
  0000c	e5803000	 str         r3, [r0]
  00010	e1c021b0	 strh        r2, [r0, #0x10]

; 47   :         }

  00014	e12fff1e	 bx          lr
  00018		 |$LN8@StreamDevi|
  00018		 |$LN9@StreamDevi|
  00018	00000000	 DCD         |??_7StreamDevice@@6B@|
  0001c		 |$M34807|

			 ENDP  ; |??0StreamDevice@@QAA@XZ|, StreamDevice::StreamDevice

	IMPORT	|CloseHandle|
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\devicemediator\devicebase.h

  00000			 AREA	 |.pdata|, PDATA
|$T34824| DCD	|$LN8@Uninitiali@2|
	DCD	0x40000c01
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\devicemediator\streamdevice.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Uninitialize@StreamDevice@@UAAHXZ| PROC ; StreamDevice::Uninitialize

; 56   :         {

  00000		 |$LN8@Uninitiali@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M34821|
  00004	e1a04000	 mov         r4, r0

; 57   :         DeviceBase::Uninitialize();
; 58   :         if (m_hDevice != NULL) 

  00008	e594300c	 ldr         r3, [r4, #0xC]
  0000c	e3530000	 cmp         r3, #0
  00010	0a000003	 beq         |$LN1@Uninitiali@2|

; 59   :             {
; 60   :             CloseHandle(m_hDevice);

  00014	e1a00003	 mov         r0, r3
  00018	eb000000	 bl          CloseHandle

; 61   :             m_hDevice = NULL;

  0001c	e3a03000	 mov         r3, #0
  00020	e584300c	 str         r3, [r4, #0xC]
  00024		 |$LN1@Uninitiali@2|

; 62   :             }
; 63   :         return TRUE;

  00024	e3a00001	 mov         r0, #1

; 64   :         }

  00028	e8bd4010	 ldmia       sp!, {r4, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M34822|

			 ENDP  ; |?Uninitialize@StreamDevice@@UAAHXZ|, StreamDevice::Uninitialize

	IMPORT	|CreateFileW|
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\devicemediator\devicebase.h

  00000			 AREA	 |.pdata|, PDATA
|$T34844| DCD	|$LN13@Initialize@2|
	DCD	0x40001e02
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\devicemediator\streamdevice.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Initialize@StreamDevice@@UAAHPBG@Z| PROC ; StreamDevice::Initialize

; 68   :         {

  00000		 |$LN13@Initialize@2|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M34841|
  00008	e1a05001	 mov         r5, r1
  0000c	e1a04000	 mov         r4, r0

; 69   :         DeviceBase::Initialize(szDeviceName);

  00010	e1a00005	 mov         r0, r5
  00014	eb000000	 bl          wcslen
  00018	e3500080	 cmp         r0, #0x80
  0001c	31a01005	 movcc       r1, r5
  00020	32840010	 addcc       r0, r4, #0x10
  00024	3b000000	 blcc        wcscpy

; 70   :         m_hDevice = ::CreateFile(szDeviceName, GENERIC_EXECUTE, 
; 71   :                         DEVACCESS_PMEXT_MODE, NULL, 
; 72   :                         OPEN_EXISTING, 0, NULL
; 73   :                         );

  00028	e3a03003	 mov         r3, #3
  0002c	e58d3000	 str         r3, [sp]
  00030	e3a06000	 mov         r6, #0
  00034	e3a03000	 mov         r3, #0
  00038	e3a02102	 mov         r2, #2, 2
  0003c	e3a01202	 mov         r1, #2, 4
  00040	e1a00005	 mov         r0, r5
  00044	e58d6008	 str         r6, [sp, #8]
  00048	e58d6004	 str         r6, [sp, #4]
  0004c	eb000000	 bl          CreateFileW

; 74   : 
; 75   :         if (m_hDevice == INVALID_HANDLE_VALUE)

  00050	e3700001	 cmn         r0, #1
  00054	e584000c	 str         r0, [r4, #0xC]

; 76   :             {
; 77   :             DeviceBase::Uninitialize();
; 78   :             m_hDevice = NULL;

  00058	0584600c	 streq       r6, [r4, #0xC]

; 79   :             }
; 80   :         
; 81   :         return m_hDevice != NULL;

  0005c	e594300c	 ldr         r3, [r4, #0xC]
  00060	e3530000	 cmp         r3, #0
  00064	13a00001	 movne       r0, #1
  00068	03a00000	 moveq       r0, #0

; 82   :         }

  0006c	e28dd00c	 add         sp, sp, #0xC
  00070	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00074	e12fff1e	 bx          lr
  00078		 |$M34842|

			 ENDP  ; |?Initialize@StreamDevice@@UAAHPBG@Z|, StreamDevice::Initialize

	IMPORT	|DeviceIoControl|
	IMPORT	|__C_specific_handler|

  00000			 AREA	 |.pdata|, PDATA
|$T34871| DCD	|$LN17@SendIoCont|
	DCD	0xc0001704

  00000			 AREA	 |.pdata|, PDATA
|$T34873| DCD	|$LN5@SendIoCont|
	DCD	0x40000502

  00000			 AREA	 |.xdata|, DATA
|$T34869| DCD	0x1
	DCD	|$LN9@SendIoCont|
	DCD	|$LN10@SendIoCont|
	DCD	|$LN5@SendIoCont|
	DCD	|$LN6@SendIoCont|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T34869|

  00008		 |?SendIoControl@StreamDevice@@UAAHKPAXK0KPAK@Z| PROC ; StreamDevice::SendIoControl

; 89   :         {

  00008		 |$LN17@SendIoCont|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d5870	 stmdb       sp!, {r4 - r6, r11, r12, lr}
  00010	e28db018	 add         r11, sp, #0x18
  00014	e24dd018	 sub         sp, sp, #0x18
  00018		 |$LN15@SendIoCont|
  00018		 |$LN9@SendIoCont|

; 90   :         BOOL rc = FALSE;
; 91   :         __try 
; 92   :             {            
; 93   :             rc = DeviceIoControl(m_hDevice, dwIoControlCode, lpInBuf, 
; 94   :                     nInBufSize, lpOutBuf, nOutBufSize, lpBytesReturned, NULL
; 95   :                     );

  00018	e59be008	 ldr         lr, [r11, #8]
  0001c	e59b4004	 ldr         r4, [r11, #4]
  00020	e59b5000	 ldr         r5, [r11]
  00024	e590000c	 ldr         r0, [r0, #0xC]
  00028	e3a06000	 mov         r6, #0
  0002c	e58de008	 str         lr, [sp, #8]
  00030	e58d4004	 str         r4, [sp, #4]
  00034	e58d5000	 str         r5, [sp]
  00038	e58d600c	 str         r6, [sp, #0xC]
  0003c	eb000000	 bl          DeviceIoControl
  00040	e50b0020	 str         r0, [r11, #-0x20]
  00044		 |$LN10@SendIoCont|

; 96   :             }

  00044	ea000003	 b           |$LN2@SendIoCont|
  00048		 |$LN6@SendIoCont|

; 98   :             {            
; 99   :             rc = FALSE;

  00048	e3a00000	 mov         r0, #0
  0004c	e50b0020	 str         r0, [r11, #-0x20]
  00050	ea000000	 b           |$LN2@SendIoCont|
  00054		 |$LN14@SendIoCont|

; 100  :             }
; 101  :         return rc;

  00054	e51b001c	 ldr         r0, [r11, #-0x1C]
  00058		 |$LN2@SendIoCont|

; 102  :         }

  00058	e24bd018	 sub         sp, r11, #0x18
  0005c	e89d6870	 ldmia       sp, {r4 - r6, r11, sp, lr}
  00060	e12fff1e	 bx          lr

			 ENDP  ; |?SendIoControl@StreamDevice@@UAAHKPAXK0KPAK@Z|, StreamDevice::SendIoControl

  00064		 |$LN5@SendIoCont|
  00064		 |$LN16@SendIoCont|

; 97   :         __except(EXCEPTION_EXECUTE_HANDLER) 

  00064	e52de004	 str         lr, [sp, #-4]!
  00068	e24dd010	 sub         sp, sp, #0x10
  0006c		 |$LN8@SendIoCont|
  0006c		 |$LN19@SendIoCont|
  0006c	e3a00001	 mov         r0, #1
  00070		 |$LN7@SendIoCont|
  00070	e28dd010	 add         sp, sp, #0x10
  00074	e49df004	 ldr         pc, [sp], #4
  00078		 |$LN20@SendIoCont|
  00078		 |$LN18@SendIoCont|
	EXPORT	|??1StreamDevice@@UAA@XZ|		; StreamDevice::~StreamDevice

  00000			 AREA	 |.pdata|, PDATA
|$T34888| DCD	|$LN7@StreamDevi@2|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1StreamDevice@@UAA@XZ| PROC		; StreamDevice::~StreamDevice
  00000		 |$LN7@StreamDevi@2|
  00000		 |$M34885|
  00000	e59f3004	 ldr         r3, [pc, #4]
  00004	e5803000	 str         r3, [r0]
  00008	e12fff1e	 bx          lr
  0000c		 |$LN8@StreamDevi@2|
  0000c		 |$LN9@StreamDevi@2|
  0000c	00000000	 DCD         |??_7DeviceBase@@6B@|
  00010		 |$M34886|

			 ENDP  ; |??1StreamDevice@@UAA@XZ|, StreamDevice::~StreamDevice

	EXPORT	|??0DisplayDevice@@QAA@XZ|		; DisplayDevice::DisplayDevice
	EXPORT	|??_7DisplayDevice@@6B@| [ DATA ]	; DisplayDevice::`vftable'
	IMPORT	|??_EDisplayDevice@@UAAPAXI@Z|, WEAK |??_GDisplayDevice@@UAAPAXI@Z| ; DisplayDevice::`vector deleting destructor', DisplayDevice::`scalar deleting destructor'
	IMPORT	|?Uninitialize@DisplayDevice@@UAAHXZ|	; DisplayDevice::Uninitialize
	IMPORT	|?Initialize@DisplayDevice@@UAAHPBG@Z|	; DisplayDevice::Initialize
	IMPORT	|?SendIoControl@DisplayDevice@@UAAHKPAXK0KPAK@Z| ; DisplayDevice::SendIoControl
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\devicemediator\devicebase.h

  00000			 AREA	 |.pdata|, PDATA
|$T34903| DCD	|$LN7@DisplayDev|
	DCD	0x40000700

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7DisplayDevice@@6B@| DCD |??_EDisplayDevice@@UAAPAXI@Z| ; DisplayDevice::`vftable'
	DCD	|?Uninitialize@DisplayDevice@@UAAHXZ|
	DCD	|?Initialize@DisplayDevice@@UAAHPBG@Z|
	DCD	|?SendIoControl@DisplayDevice@@UAAHKPAXK0KPAK@Z|
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\devicemediator\displaydevice.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0DisplayDevice@@QAA@XZ| PROC	; DisplayDevice::DisplayDevice

; 43   :         {

  00000		 |$LN7@DisplayDev|
  00000		 |$M34900|
  00000	e59f3010	 ldr         r3, [pc, #0x10]
  00004	e3a02000	 mov         r2, #0
  00008	e580200c	 str         r2, [r0, #0xC]
  0000c	e5803000	 str         r3, [r0]
  00010	e1c021b0	 strh        r2, [r0, #0x10]

; 44   :         }

  00014	e12fff1e	 bx          lr
  00018		 |$LN8@DisplayDev|
  00018		 |$LN9@DisplayDev|
  00018	00000000	 DCD         |??_7DisplayDevice@@6B@|
  0001c		 |$M34901|

			 ENDP  ; |??0DisplayDevice@@QAA@XZ|, DisplayDevice::DisplayDevice

	EXPORT	|??1DisplayDevice@@UAA@XZ|		; DisplayDevice::~DisplayDevice

  00000			 AREA	 |.pdata|, PDATA
|$T34916| DCD	|$LN7@DisplayDev@2|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1DisplayDevice@@UAA@XZ| PROC	; DisplayDevice::~DisplayDevice
  00000		 |$LN7@DisplayDev@2|
  00000		 |$M34913|
  00000	e59f3004	 ldr         r3, [pc, #4]
  00004	e5803000	 str         r3, [r0]
  00008	e12fff1e	 bx          lr
  0000c		 |$LN8@DisplayDev@2|
  0000c		 |$LN9@DisplayDev@2|
  0000c	00000000	 DCD         |??_7DeviceBase@@6B@|
  00010		 |$M34914|

			 ENDP  ; |??1DisplayDevice@@UAA@XZ|, DisplayDevice::~DisplayDevice

	EXPORT	|?RegisterBusPowerCallbacks@@YAHPBG@Z|	; RegisterBusPowerCallbacks
	IMPORT	|?PostDeviceStateChange@@YAHIII@Z|	; PostDeviceStateChange
	IMPORT	|?PreDeviceStateChange@@YAHIII@Z|	; PreDeviceStateChange
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\devicemediator\api.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T34930| DCD	|$LN6@RegisterBu|
	DCD	0x40002702
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RegisterBusPowerCallbacks@@YAHPBG@Z| PROC ; RegisterBusPowerCallbacks

; 105  : {

  00000		 |$LN6@RegisterBu|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd01c	 sub         sp, sp, #0x1C
  00008		 |$M34927|

; 106  :     HANDLE hBus;
; 107  :     BOOL rc = FALSE;
; 108  :     CE_BUS_DEVICESTATE_CALLBACKS deviceStateCallbacks;
; 109  :  
; 110  :     // Open bus for later calls
; 111  :     hBus = CreateFile(szBusNamespace, GENERIC_READ|GENERIC_WRITE,
; 112  :             FILE_SHARE_READ|FILE_SHARE_WRITE, NULL, OPEN_EXISTING, 0, NULL
; 113  :             );

  00008	e3a03003	 mov         r3, #3
  0000c	e58d3000	 str         r3, [sp]
  00010	e3a06000	 mov         r6, #0
  00014	e3a03000	 mov         r3, #0
  00018	e3a02003	 mov         r2, #3
  0001c	e3a01103	 mov         r1, #3, 2
  00020	e3a04000	 mov         r4, #0
  00024	e58d6008	 str         r6, [sp, #8]
  00028	e58d6004	 str         r6, [sp, #4]
  0002c	eb000000	 bl          CreateFileW
  00030	e1a05000	 mov         r5, r0

; 114  : 
; 115  :     if (hBus != INVALID_HANDLE_VALUE)

  00034	e3750001	 cmn         r5, #1
  00038	0a000010	 beq         |$LN1@RegisterBu|

; 116  :         {
; 117  :         // initialize callback structure
; 118  :         deviceStateCallbacks.size = sizeof(CE_BUS_DEVICESTATE_CALLBACKS);
; 119  :         deviceStateCallbacks.PreDeviceStateChange = PreDeviceStateChange;

  0003c	e59f3054	 ldr         r3, [pc, #0x54]

; 120  :         deviceStateCallbacks.PostDeviceStateChange = PostDeviceStateChange;

  00040	e59f204c	 ldr         r2, [pc, #0x4C]

; 121  : 
; 122  :             // Call bus driver
; 123  :         rc = DeviceIoControl(hBus, 
; 124  :                              IOCTL_BUS_DEVICESTATE_CALLBACKS, 
; 125  :                              &deviceStateCallbacks,
; 126  :                              sizeof(CE_BUS_DEVICESTATE_CALLBACKS), 
; 127  :                              NULL, 
; 128  :                              0, 
; 129  :                              NULL, 
; 130  :                              NULL
; 131  :                              ); 

  00044	e59f1044	 ldr         r1, [pc, #0x44]
  00048	e58d3014	 str         r3, [sp, #0x14]
  0004c	e58d2018	 str         r2, [sp, #0x18]
  00050	e3a0e00c	 mov         lr, #0xC
  00054	e3a0300c	 mov         r3, #0xC
  00058	e28d2010	 add         r2, sp, #0x10
  0005c	e58de010	 str         lr, [sp, #0x10]
  00060	e58d600c	 str         r6, [sp, #0xC]
  00064	e58d6008	 str         r6, [sp, #8]
  00068	e58d6004	 str         r6, [sp, #4]
  0006c	e58d6000	 str         r6, [sp]
  00070	eb000000	 bl          DeviceIoControl
  00074	e1a04000	 mov         r4, r0

; 132  : 
; 133  :         CloseHandle(hBus);

  00078	e1a00005	 mov         r0, r5
  0007c	eb000000	 bl          CloseHandle
  00080		 |$LN1@RegisterBu|

; 134  :         }
; 135  :     
; 136  :     return rc;
; 137  : }

  00080	e1a00004	 mov         r0, r4
  00084	e28dd01c	 add         sp, sp, #0x1C
  00088	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0008c	e12fff1e	 bx          lr
  00090		 |$LN7@RegisterBu|
  00090		 |$LN8@RegisterBu|
  00090	00220c1c	 DCD         0x220c1c
  00094		 |$LN9@RegisterBu|
  00094	00000000	 DCD         |?PostDeviceStateChange@@YAHIII@Z|
  00098		 |$LN10@RegisterBu|
  00098	00000000	 DCD         |?PreDeviceStateChange@@YAHIII@Z|
  0009c		 |$M34928|

			 ENDP  ; |?RegisterBusPowerCallbacks@@YAHPBG@Z|, RegisterBusPowerCallbacks

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|?ProcessMsgQueueSignal@@YAHHPAXK@Z|	; ProcessMsgQueueSignal
	IMPORT	|?RemoveDevice@DeviceMediator@@QAAPAVDeviceBase@@PBG@Z| ; DeviceMediator::RemoveDevice
	IMPORT	|?InsertDevice@DeviceMediator@@QAAHPBGPAVDeviceBase@@@Z| ; DeviceMediator::InsertDevice
	IMPORT	|??2@YAPAXI@Z|				; operator new
	IMPORT	|?FindDevice@DeviceMediator@@QAAPAVDeviceBase@@PBG@Z| ; DeviceMediator::FindDevice
	IMPORT	|ReadMsgQueue|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_cookie|
	IMPORT	|memset|
	IMPORT	|__security_check_cookie|

  00000			 AREA	 |.bss|, NOINIT
|s_Device| %	0x14
|s_Device| %	0x14
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\devicemediator\devicebase.h

  00000			 AREA	 |.pdata|, PDATA
|$T34989| DCD	|$LN38@ProcessMsg|
	DCD	0xc0007602

  00000			 AREA	 |.xdata|, DATA
|$T34985| DCD	0xffffffe4
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\devicemediator\api.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T34985|

  00008		 |?ProcessMsgQueueSignal@@YAHHPAXK@Z| PROC ; ProcessMsgQueueSignal

; 152  : {

  00008		 |$LN38@ProcessMsg|
  00008	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  0000c	e24ddfdd	 sub         sp, sp, #0xDD, 30
  00010		 |$M34986|
  00010	e1a05002	 mov         r5, r2
  00014	e1a04001	 mov         r4, r1
  00018	e59f31bc	 ldr         r3, [pc, #0x1BC]
  0001c	e5933000	 ldr         r3, [r3]
  00020	e58d3370	 str         r3, [sp, #0x370]

; 153  :     BOOL rc = FALSE;    
; 154  :     DWORD dwFlags = 0;
; 155  :     DeviceBase *pDevice;
; 156  :     DWORD iBytesInQueue = 0;

  00024	e3a02000	 mov         r2, #0
  00028	e58d2008	 str         r2, [sp, #8]
  0002c	e3a03000	 mov         r3, #0

; 157  :     UCHAR deviceBuf[PNP_QUEUE_SIZE];
; 158  :     PDEVDETAIL pDevDetail = (PDEVDETAIL)deviceBuf;
; 159  : 
; 160  : 
; 161  :     UNREFERENCED_PARAMETER(idx);
; 162  : 
; 163  :     // read a message from the message queue -- it should be a device advertisement
; 164  :     memset(deviceBuf, 0, PNP_QUEUE_SIZE);

  00030	e3a02e36	 mov         r2, #0x36, 28
  00034	e3a01000	 mov         r1, #0
  00038	e28d0010	 add         r0, sp, #0x10
  0003c	e58d300c	 str         r3, [sp, #0xC]
  00040	e3a06000	 mov         r6, #0
  00044	eb000000	 bl          memset

; 165  :     BOOL bRes = ::ReadMsgQueue(hMsgQ, deviceBuf, PNP_QUEUE_SIZE, 
; 166  :                     &iBytesInQueue, 0, &dwFlags);

  00048	e28d300c	 add         r3, sp, #0xC
  0004c	e58d3004	 str         r3, [sp, #4]
  00050	e3a08000	 mov         r8, #0
  00054	e28d3008	 add         r3, sp, #8
  00058	e3a02e36	 mov         r2, #0x36, 28
  0005c	e28d1010	 add         r1, sp, #0x10
  00060	e1a00004	 mov         r0, r4
  00064	e58d8000	 str         r8, [sp]
  00068	eb000000	 bl          ReadMsgQueue

; 167  :     
; 168  :     if (bRes == TRUE && iBytesInQueue >= sizeof(DEVDETAIL)) 

  0006c	e3500001	 cmp         r0, #1
  00070	1a00004f	 bne         |$LN25@ProcessMsg|
  00074	e59d3008	 ldr         r3, [sp, #8]
  00078	e3530020	 cmp         r3, #0x20
  0007c	3a00004c	 bcc         |$LN25@ProcessMsg|

; 169  :         {
; 170  :         // process the message
; 171  :         //
; 172  :         
; 173  :         // check for overlarge names
; 174  :         if(pDevDetail->cbName > ((PNP_MAX_NAMELEN - 1) * sizeof(pDevDetail->szName[0]))) 

  00080	e59d3028	 ldr         r3, [sp, #0x28]
  00084	e35300fe	 cmp         r3, #0xFE
  00088	8a00004a	 bhi         |$cleanUp$34477|

; 175  :             {
; 176  :             goto cleanUp;
; 177  :             }
; 178  :             
; 179  :         // add or remove the device -- note that a particular interface 
; 180  :         // may be advertised more than once, so these routines must 
; 181  :         // handle that possibility.
; 182  :         //
; 183  :         if(pDevDetail->fAttached) 

  0008c	e59d3024	 ldr         r3, [sp, #0x24]

; 184  :             {
; 185  :             pDevice = s_Device.pDeviceMediator->FindDevice(pDevDetail->szName);

  00090	e28d102c	 add         r1, sp, #0x2C
  00094	e3530000	 cmp         r3, #0
  00098	0a000035	 beq         |$LN13@ProcessMsg|
  0009c	e59f712c	 ldr         r7, [pc, #0x12C]
  000a0	e5970010	 ldr         r0, [r7, #0x10]
  000a4	eb000000	 bl          |?FindDevice@DeviceMediator@@QAAPAVDeviceBase@@PBG@Z|
  000a8	e3500000	 cmp         r0, #0

; 186  :             if (pDevice == NULL)

  000ac	1a000040	 bne         |$LN25@ProcessMsg|

; 187  :                 {
; 188  :                 // Create DVFSDevice wrapper for device driver
; 189  :                 //
; 190  :                 switch (iid)

  000b0	e3550064	 cmp         r5, #0x64
  000b4	0a00002b	 beq         |$LN7@ProcessMsg|
  000b8	e3550065	 cmp         r5, #0x65
  000bc	0a000007	 beq         |$LN9@ProcessMsg|
  000c0	e3550066	 cmp         r5, #0x66
  000c4	1a00003b	 bne         |$cleanUp$34477|

; 194  :                         break;
; 195  : 
; 196  :                     case DisplayDevice::iid:
; 197  :                         pDevice = new DisplayDevice();

  000c8	e3a00e11	 mov         r0, #0x11, 28
  000cc	eb000000	 bl          |??2@YAPAXI@Z|
  000d0	e1b04000	 movs        r4, r0
  000d4	0a00000a	 beq         |$LN19@ProcessMsg|
  000d8	e59f30f8	 ldr         r3, [pc, #0xF8]

; 198  :                         break;

  000dc	ea000004	 b           |$LN35@ProcessMsg|
  000e0		 |$LN9@ProcessMsg|

; 191  :                     {
; 192  :                     case StreamDevice::iid:
; 193  :                         pDevice = new StreamDevice();

  000e0	e3a00e11	 mov         r0, #0x11, 28
  000e4	eb000000	 bl          |??2@YAPAXI@Z|
  000e8	e1b04000	 movs        r4, r0
  000ec	0a000004	 beq         |$LN19@ProcessMsg|
  000f0	e59f30dc	 ldr         r3, [pc, #0xDC]
  000f4		 |$LN35@ProcessMsg|
  000f4	e5843000	 str         r3, [r4]
  000f8	e1c481b0	 strh        r8, [r4, #0x10]
  000fc	e584800c	 str         r8, [r4, #0xC]
  00100	ea000000	 b           |$LN20@ProcessMsg|
  00104		 |$LN19@ProcessMsg|
  00104	e3a04000	 mov         r4, #0
  00108		 |$LN20@ProcessMsg|

; 204  : 
; 205  :                     default:
; 206  :                         goto cleanUp;
; 207  :                     }
; 208  : 
; 209  :                 pDevice->Initialize(pDevDetail->szName);

  00108	e5943000	 ldr         r3, [r4]
  0010c	e28d102c	 add         r1, sp, #0x2C
  00110	e1a00004	 mov         r0, r4
  00114	e5933008	 ldr         r3, [r3, #8]
  00118	e1a0e00f	 mov         lr, pc
  0011c	e12fff13	 bx          r3

; 210  :                 if (s_Device.pDeviceMediator->InsertDevice((LPCTSTR)pDevDetail->szName, pDevice) == FALSE)

  00120	e5970010	 ldr         r0, [r7, #0x10]
  00124	e1a02004	 mov         r2, r4
  00128	e28d102c	 add         r1, sp, #0x2C
  0012c	eb000000	 bl          |?InsertDevice@DeviceMediator@@QAAHPBGPAVDeviceBase@@@Z|
  00130	e3500000	 cmp         r0, #0
  00134	1a00001e	 bne         |$LN25@ProcessMsg|

; 211  :                     {
; 212  :                     pDevice->Uninitialize();

  00138	e5943000	 ldr         r3, [r4]
  0013c	e1a00004	 mov         r0, r4
  00140	e5933004	 ldr         r3, [r3, #4]
  00144	e1a0e00f	 mov         lr, pc
  00148	e12fff13	 bx          r3

; 213  :                     delete pDevice;

  0014c	e5943000	 ldr         r3, [r4]
  00150	e3a01001	 mov         r1, #1
  00154	e1a00004	 mov         r0, r4
  00158	e5933000	 ldr         r3, [r3]
  0015c	e1a0e00f	 mov         lr, pc
  00160	e12fff13	 bx          r3
  00164	ea000012	 b           |$LN25@ProcessMsg|
  00168		 |$LN7@ProcessMsg|

; 199  : 
; 200  :                     case BUSNAMESPACE_CLASS:
; 201  :                         // special case to open a handle to bus namespace
; 202  :                         RegisterBusPowerCallbacks(pDevDetail->szName);

  00168	e28d002c	 add         r0, sp, #0x2C
  0016c	eb000000	 bl          |?RegisterBusPowerCallbacks@@YAHPBG@Z|

; 203  :                         goto cleanUp;

  00170	ea000010	 b           |$cleanUp$34477|
  00174		 |$LN13@ProcessMsg|

; 214  :                     }
; 215  :                 }
; 216  :             }
; 217  :         else 
; 218  :             {
; 219  :             // detach
; 220  :             //
; 221  :             pDevice = s_Device.pDeviceMediator->RemoveDevice((LPCTSTR)pDevDetail->szName);

  00174	e59f3054	 ldr         r3, [pc, #0x54]
  00178	e5930010	 ldr         r0, [r3, #0x10]
  0017c	eb000000	 bl          |?RemoveDevice@DeviceMediator@@QAAPAVDeviceBase@@PBG@Z|
  00180	e1b04000	 movs        r4, r0

; 222  :             if (pDevice != NULL)

  00184	0a00000a	 beq         |$LN25@ProcessMsg|

; 223  :                 {
; 224  :                 pDevice->Uninitialize();

  00188	e5943000	 ldr         r3, [r4]
  0018c	e1a00004	 mov         r0, r4
  00190	e5933004	 ldr         r3, [r3, #4]
  00194	e1a0e00f	 mov         lr, pc
  00198	e12fff13	 bx          r3

; 225  :                 delete pDevice;

  0019c	e5943000	 ldr         r3, [r4]
  001a0	e3a01001	 mov         r1, #1
  001a4	e1a00004	 mov         r0, r4
  001a8	e5933000	 ldr         r3, [r3]
  001ac	e1a0e00f	 mov         lr, pc
  001b0	e12fff13	 bx          r3
  001b4		 |$LN25@ProcessMsg|

; 226  :                 }
; 227  :             }
; 228  :         }
; 229  : 
; 230  :     rc = TRUE;

  001b4	e3a06001	 mov         r6, #1
  001b8		 |$cleanUp$34477|

; 231  :     
; 232  : cleanUp:    
; 233  :     return rc;

  001b8	e59d0370	 ldr         r0, [sp, #0x370]
  001bc	eb000000	 bl          __security_check_cookie

; 234  : }

  001c0	e1a00006	 mov         r0, r6
  001c4	e28ddfdd	 add         sp, sp, #0xDD, 30
  001c8	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  001cc	e12fff1e	 bx          lr
  001d0		 |$LN39@ProcessMsg|
  001d0		 |$LN40@ProcessMsg|
  001d0	00000000	 DCD         |s_Device|
  001d4		 |$LN41@ProcessMsg|
  001d4	00000000	 DCD         |??_7StreamDevice@@6B@|
  001d8		 |$LN42@ProcessMsg|
  001d8	00000000	 DCD         |??_7DisplayDevice@@6B@|
  001dc		 |$LN43@ProcessMsg|
  001dc	00000000	 DCD         |__security_cookie|
  001e0		 |$M34987|

			 ENDP  ; |?ProcessMsgQueueSignal@@YAHHPAXK@Z|, ProcessMsgQueueSignal

	EXPORT	|?Device_ListenerThread@@YAKPAX@Z|	; Device_ListenerThread
	IMPORT	|CloseMsgQueue|
	IMPORT	|StopDeviceNotifications|
	IMPORT	|WaitForMultipleObjects|
	IMPORT	|RequestDeviceNotifications|
	IMPORT	|CreateMsgQueue|
	IMPORT	|CeSetThreadPriority|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T35022| DCD	|$LN38@Device_Lis|
	DCD	0x40005502
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\devicemediator\api.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Device_ListenerThread@@YAKPAX@Z| PROC ; Device_ListenerThread

; 246  : {

  00000		 |$LN38@Device_Lis|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004	e24dd040	 sub         sp, sp, #0x40
  00008		 |$M35019|

; 247  :     int             idx;
; 248  :     DWORD           code;
; 249  :     MSGQUEUEOPTIONS msgOptions;
; 250  :     int             queueCount = 0;
; 251  :     HANDLE          rgAdvertiseClass[MAX_NOTIFY_INTERFACES];
; 252  :     HANDLE          rgMsgQueues[MAX_NOTIFY_INTERFACES + 1];
; 253  : 
; 254  :     UNREFERENCED_PARAMETER(pData);
; 255  : 
; 256  :     // Set thread priority
; 257  :     //
; 258  :     CeSetThreadPriority(GetCurrentThread(), s_Device.priority256);

  00008	e59f6140	 ldr         r6, [pc, #0x140]
  0000c	e3a00041	 mov         r0, #0x41
  00010	e5961000	 ldr         r1, [r6]
  00014	eb000000	 bl          CeSetThreadPriority

; 259  : 
; 260  :     // loop through and create the msgQueue's and register for 
; 261  :     // advertised interfaces
; 262  :     //
; 263  :     memset(&msgOptions, 0, sizeof(msgOptions));

  00018	e3a02014	 mov         r2, #0x14
  0001c	e3a01000	 mov         r1, #0
  00020	e28d0000	 add         r0, sp, #0
  00024	eb000000	 bl          memset

; 264  :     msgOptions.dwSize = sizeof(MSGQUEUEOPTIONS);
; 265  :     msgOptions.dwFlags = 0;

  00028	e3a02000	 mov         r2, #0

; 266  :     msgOptions.cbMaxMessage = PNP_QUEUE_SIZE;

  0002c	e3a01e36	 mov         r1, #0x36, 28

; 267  :     msgOptions.bReadAccess = TRUE;

  00030	e3a00001	 mov         r0, #1
  00034	e58d2004	 str         r2, [sp, #4]
  00038	e58d100c	 str         r1, [sp, #0xC]
  0003c	e58d0010	 str         r0, [sp, #0x10]
  00040	e3a03014	 mov         r3, #0x14

; 268  :     memset(rgMsgQueues, 0, sizeof(HANDLE) * (MAX_NOTIFY_INTERFACES + 1));

  00044	e3a02018	 mov         r2, #0x18
  00048	e3a01000	 mov         r1, #0
  0004c	e28d0028	 add         r0, sp, #0x28
  00050	e58d3000	 str         r3, [sp]
  00054	eb000000	 bl          memset

; 269  :     memset(rgAdvertiseClass, 0, sizeof(HANDLE) * (MAX_NOTIFY_INTERFACES));    

  00058	e3a02014	 mov         r2, #0x14
  0005c	e3a01000	 mov         r1, #0
  00060	e28d0014	 add         r0, sp, #0x14
  00064	eb000000	 bl          memset
  00068	e59f90dc	 ldr         r9, [pc, #0xDC]

; 270  :     
; 271  :     for (queueCount = 0; queueCount < MAX_NOTIFY_INTERFACES; ++queueCount)

  0006c	e3a04000	 mov         r4, #0
  00070	e28d7028	 add         r7, sp, #0x28
  00074	e1a05009	 mov         r5, r9
  00078	e28d8014	 add         r8, sp, #0x14
  0007c		 |$LL18@Device_Lis|

; 272  :         {
; 273  :         if (s_rgAdvertisedInfo[queueCount].iid == -1) break;

  0007c	e5953000	 ldr         r3, [r5]
  00080	e3730001	 cmn         r3, #1
  00084	0a00000f	 beq         |$LN16@Device_Lis|

; 274  : 
; 275  :         // Get handle to msg queues
; 276  :         //
; 277  :         rgMsgQueues[queueCount] = ::CreateMsgQueue(NULL, &msgOptions);

  00088	e28d1000	 add         r1, sp, #0
  0008c	e3a00000	 mov         r0, #0
  00090	eb000000	 bl          CreateMsgQueue
  00094	e1b01000	 movs        r1, r0
  00098	e7871104	 str         r1, [r7, +r4, lsl #2]

; 278  :         if (rgMsgQueues[queueCount] == NULL)

  0009c	0a000019	 beq         |$cleanUp$34525|

; 279  :             {
; 280  :             goto cleanUp;
; 281  :             }
; 282  : 
; 283  :         // Get handle to advertised interfaces
; 284  :         rgAdvertiseClass[queueCount] = ::RequestDeviceNotifications(
; 285  :             s_rgAdvertisedInfo[queueCount].pguid, rgMsgQueues[queueCount],
; 286  :             TRUE
; 287  :             );

  000a0	e5950004	 ldr         r0, [r5, #4]
  000a4	e3a02001	 mov         r2, #1
  000a8	eb000000	 bl          RequestDeviceNotifications
  000ac	e3500000	 cmp         r0, #0
  000b0	e7880104	 str         r0, [r8, +r4, lsl #2]

; 288  : 
; 289  :         if (rgAdvertiseClass[queueCount] == NULL)

  000b4	0a000013	 beq         |$cleanUp$34525|
  000b8	e2844001	 add         r4, r4, #1
  000bc	e3540005	 cmp         r4, #5
  000c0	e2855008	 add         r5, r5, #8
  000c4	baffffec	 blt         |$LL18@Device_Lis|
  000c8		 |$LN16@Device_Lis|

; 290  :             {
; 291  :             goto cleanUp;
; 292  :             }
; 293  :         }
; 294  : 
; 295  :     // insert private event at end of array
; 296  :     //
; 297  :     rgMsgQueues[queueCount] = s_Device.hMsgSync;

  000c8	e5962008	 ldr         r2, [r6, #8]
  000cc	e28d3028	 add         r3, sp, #0x28
  000d0	e28d5028	 add         r5, sp, #0x28
  000d4	e7832104	 str         r2, [r3, +r4, lsl #2]
  000d8		 |$LL10@Device_Lis|

; 298  : 
; 299  :     // done with initialiation
; 300  :     //
; 301  :     for(;;)
; 302  :         {
; 303  :         code = ::WaitForMultipleObjects(queueCount + 1, rgMsgQueues, FALSE, INFINITE);

  000d8	e3e03000	 mvn         r3, #0
  000dc	e3a02000	 mov         r2, #0
  000e0	e28d1028	 add         r1, sp, #0x28
  000e4	e2840001	 add         r0, r4, #1
  000e8	eb000000	 bl          WaitForMultipleObjects

; 304  :         idx = code - WAIT_OBJECT_0;
; 305  :         if (idx < queueCount)

  000ec	e1500004	 cmp         r0, r4
  000f0	aa000003	 bge         |$LN35@Device_Lis|

; 306  :             {
; 307  :             ProcessMsgQueueSignal(idx, rgMsgQueues[idx], s_rgAdvertisedInfo[idx].iid);

  000f4	e7992180	 ldr         r2, [r9, +r0, lsl #3]
  000f8	e7951100	 ldr         r1, [r5, +r0, lsl #2]
  000fc	eb000000	 bl          |?ProcessMsgQueueSignal@@YAHHPAXK@Z|
  00100	eafffff4	 b           |$LL10@Device_Lis|
  00104		 |$LN35@Device_Lis|

; 308  :             continue;
; 309  :             }
; 310  :         else if (idx == queueCount)

  00104	1afffff3	 bne         |$LL10@Device_Lis|
  00108		 |$cleanUp$34525|

; 311  :             {
; 312  :             break;
; 313  :             }
; 314  :         else 
; 315  :             {
; 316  :             continue;
; 317  :             }
; 318  :         }
; 319  : 
; 320  : cleanUp:
; 321  : 
; 322  :     // free all allocated handles
; 323  :     //
; 324  :     for (idx = 0; idx < MAX_NOTIFY_INTERFACES; ++idx)

  00108	e3a04000	 mov         r4, #0
  0010c	e28d5014	 add         r5, sp, #0x14
  00110	e28d6028	 add         r6, sp, #0x28
  00114		 |$LL4@Device_Lis|

; 325  :         {
; 326  :         if (rgAdvertiseClass[idx] == NULL)   break;

  00114	e7943005	 ldr         r3, [r4, +r5]
  00118	e3530000	 cmp         r3, #0
  0011c	0a000006	 beq         |$LN32@Device_Lis|

; 327  :         ::StopDeviceNotifications(rgAdvertiseClass[idx]);

  00120	e1a00003	 mov         r0, r3
  00124	eb000000	 bl          StopDeviceNotifications

; 328  :         ::CloseMsgQueue(rgMsgQueues[idx]);

  00128	e7940006	 ldr         r0, [r4, +r6]
  0012c	eb000000	 bl          CloseMsgQueue
  00130	e2844004	 add         r4, r4, #4
  00134	e3540014	 cmp         r4, #0x14
  00138	bafffff5	 blt         |$LL4@Device_Lis|
  0013c		 |$LN32@Device_Lis|

; 329  :         }  
; 330  :     return 0;

  0013c	e3a00000	 mov         r0, #0

; 331  : }

  00140	e28dd040	 add         sp, sp, #0x40
  00144	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  00148	e12fff1e	 bx          lr
  0014c		 |$LN39@Device_Lis|
  0014c		 |$LN40@Device_Lis|
  0014c	00000000	 DCD         |s_rgAdvertisedInfo|
  00150		 |$LN41@Device_Lis|
  00150	00000000	 DCD         |s_Device|
  00154		 |$M35020|

			 ENDP  ; |?Device_ListenerThread@@YAKPAX@Z|, Device_ListenerThread

	EXPORT	|?UninitializeDeviceMediator@@YAXK@Z|	; UninitializeDeviceMediator
	IMPORT	|?DeleteDeviceMediator@DeviceMediator@@SAXPAV1@@Z| ; DeviceMediator::DeleteDeviceMediator
	IMPORT	|WaitForSingleObject|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T35036| DCD	|$LN10@Uninitiali@3|
	DCD	0x40002001
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\devicemediator\api.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UninitializeDeviceMediator@@YAXK@Z| PROC ; UninitializeDeviceMediator

; 343  : {

  00000		 |$LN10@Uninitiali@3|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M35033|

; 344  :     UNREFERENCED_PARAMETER(dwExtContext);
; 345  : 
; 346  :     // wait for listener thread to shut-down
; 347  :     //
; 348  :     if (s_Device.hListenerThread != NULL)

  00004	e59f4070	 ldr         r4, [pc, #0x70]
  00008	e5943004	 ldr         r3, [r4, #4]
  0000c	e3530000	 cmp         r3, #0
  00010	0a00000b	 beq         |$LN3@Uninitiali@3|

; 349  :         {
; 350  :         // signal listner thread to shutdown
; 351  :         s_Device.bShutdown = TRUE;

  00014	e3a03001	 mov         r3, #1
  00018	e584300c	 str         r3, [r4, #0xC]

; 352  :         ::SetEvent(s_Device.hMsgSync);

  0001c	e5940008	 ldr         r0, [r4, #8]
  00020	e3a01003	 mov         r1, #3
  00024	eb000000	 bl          EventModify

; 353  : 
; 354  :         // wait for thread to shutdown
; 355  :         ::WaitForSingleObject(s_Device.hListenerThread, INFINITE);        

  00028	e5940004	 ldr         r0, [r4, #4]
  0002c	e3e01000	 mvn         r1, #0
  00030	eb000000	 bl          WaitForSingleObject

; 356  :         ::CloseHandle(s_Device.hListenerThread);

  00034	e5940004	 ldr         r0, [r4, #4]
  00038	eb000000	 bl          CloseHandle

; 357  :         s_Device.hListenerThread = NULL;

  0003c	e3a03000	 mov         r3, #0
  00040	e5843004	 str         r3, [r4, #4]
  00044		 |$LN3@Uninitiali@3|

; 358  :         }
; 359  : 
; 360  :     if (s_Device.pDeviceMediator != NULL)

  00044	e5940010	 ldr         r0, [r4, #0x10]
  00048	e3500000	 cmp         r0, #0
  0004c	0a000002	 beq         |$LN2@Uninitiali@3|

; 361  :         {
; 362  :         DeviceMediator::DeleteDeviceMediator(s_Device.pDeviceMediator);

  00050	eb000000	 bl          |?DeleteDeviceMediator@DeviceMediator@@SAXPAV1@@Z|

; 363  :         s_Device.pDeviceMediator = NULL;

  00054	e3a03000	 mov         r3, #0
  00058	e5843010	 str         r3, [r4, #0x10]
  0005c		 |$LN2@Uninitiali@3|

; 364  :         }
; 365  : 
; 366  :     if (s_Device.hMsgSync != NULL)

  0005c	e5940008	 ldr         r0, [r4, #8]
  00060	e3500000	 cmp         r0, #0
  00064	0a000002	 beq         |$LN1@Uninitiali@3|

; 367  :         {
; 368  :         ::CloseHandle(s_Device.hMsgSync);

  00068	eb000000	 bl          CloseHandle

; 369  :         s_Device.hMsgSync = NULL;

  0006c	e3a03000	 mov         r3, #0
  00070	e5843008	 str         r3, [r4, #8]
  00074		 |$LN1@Uninitiali@3|

; 370  :         }
; 371  : }

  00074	e8bd4010	 ldmia       sp!, {r4, lr}
  00078	e12fff1e	 bx          lr
  0007c		 |$LN11@Uninitiali@3|
  0007c		 |$LN12@Uninitiali@3|
  0007c	00000000	 DCD         |s_Device|
  00080		 |$M35034|

			 ENDP  ; |?UninitializeDeviceMediator@@YAXK@Z|, UninitializeDeviceMediator

	EXPORT	|?InitializeDeviceMediator@@YAKPAUHKEY__@@PBG@Z| ; InitializeDeviceMediator
	EXPORT	|??_C@_1BI@OJGHJKJA@?$AAp?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|CreateThread|
	IMPORT	|?CreateDeviceMediator@DeviceMediator@@SAPAV1@XZ| ; DeviceMediator::CreateDeviceMediator
	IMPORT	|CreateEventW|
; File c:\wince600\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.pdata|, PDATA
|$T35065| DCD	|$LN21@Initialize@3|
	DCD	0x40003f02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@OJGHJKJA@?$AAp?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@| DCB "p"
	DCB	0x0, "r", 0x0, "i", 0x0, "o", 0x0, "r", 0x0, "i", 0x0, "t"
	DCB	0x0, "y", 0x0, "2", 0x0, "5", 0x0, "6", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\devicemediator\api.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InitializeDeviceMediator@@YAKPAUHKEY__@@PBG@Z| PROC ; InitializeDeviceMediator

; 384  : {    

  00000		 |$LN21@Initialize@3|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd014	 sub         sp, sp, #0x14
  00008		 |$M35062|
  00008	e1a02001	 mov         r2, r1
  0000c	e1a01000	 mov         r1, r0

; 385  :     DWORD rc = FALSE;
; 386  :     CRegistryEdit Registry(hKey, lpRegistryPath);

  00010	e28d0008	 add         r0, sp, #8
  00014	e3a05000	 mov         r5, #0
  00018	eb000000	 bl          |??0CRegistryEdit@@QAA@PAUHKEY__@@PBG@Z|

; 387  :     memset(&s_Device, 0, sizeof(Device_t));

  0001c	e59f40d4	 ldr         r4, [pc, #0xD4]
  00020	e3a02014	 mov         r2, #0x14
  00024	e3a01000	 mov         r1, #0
  00028	e1a00004	 mov         r0, r4
  0002c	eb000000	 bl          memset

; 388  : 
; 389  :     // Read device parameters
; 390  :     DWORD dwType = REG_DWORD;
; 391  :     DWORD dwSize = sizeof(s_Device.priority256);
; 392  :     if (FALSE == Registry.RegQueryValueEx(PNP_THREAD_PRIORITY,
; 393  :             &dwType, (BYTE*)&s_Device.priority256, &dwSize))

  00030	e59f10bc	 ldr         r1, [pc, #0xBC]
  00034	e59d0008	 ldr         r0, [sp, #8]
  00038	e28de010	 add         lr, sp, #0x10
  0003c	e3a06004	 mov         r6, #4
  00040	e3a07004	 mov         r7, #4
  00044	e28d300c	 add         r3, sp, #0xC
  00048	e3a02000	 mov         r2, #0
  0004c	e58de004	 str         lr, [sp, #4]
  00050	e58d600c	 str         r6, [sp, #0xC]
  00054	e58d7010	 str         r7, [sp, #0x10]
  00058	e58d4000	 str         r4, [sp]
  0005c	eb000000	 bl          RegQueryValueExW
  00060	e3500000	 cmp         r0, #0

; 394  :         {
; 395  :         s_Device.priority256 = PNP_DEFAULT_THREAD_PRIORITY;

  00064	13a03060	 movne       r3, #0x60
  00068	15843000	 strne       r3, [r4]

; 396  :         }            
; 397  : 
; 398  :     // Setup event handle to signal listener thread
; 399  :     s_Device.hMsgSync = ::CreateEvent(NULL, FALSE, FALSE, NULL);

  0006c	e3a03000	 mov         r3, #0
  00070	e3a02000	 mov         r2, #0
  00074	e3a01000	 mov         r1, #0
  00078	e3a00000	 mov         r0, #0
  0007c	eb000000	 bl          CreateEventW
  00080	e3500000	 cmp         r0, #0
  00084	e5840008	 str         r0, [r4, #8]

; 400  :     if (s_Device.hMsgSync == NULL)

  00088	0a00000f	 beq         |$LN18@Initialize@3|

; 401  :         {
; 402  :         goto cleanUp;
; 403  :         }
; 404  : 
; 405  :     // Instantiate Device mediator object
; 406  :     s_Device.pDeviceMediator = DeviceMediator::CreateDeviceMediator();

  0008c	eb000000	 bl          |?CreateDeviceMediator@DeviceMediator@@SAPAV1@XZ|
  00090	e3500000	 cmp         r0, #0
  00094	e5840010	 str         r0, [r4, #0x10]

; 407  :     if (s_Device.pDeviceMediator == NULL)

  00098	0a00000b	 beq         |$LN18@Initialize@3|

; 408  :         {
; 409  :         goto cleanUp;
; 410  :         }
; 411  : 
; 412  :     // Listener thread
; 413  :     s_Device.hListenerThread = ::CreateThread(NULL, 0, 
; 414  :         Device_ListenerThread, NULL, 0, NULL
; 415  :         );

  0009c	e59f204c	 ldr         r2, [pc, #0x4C]
  000a0	e3a0e000	 mov         lr, #0
  000a4	e3a03000	 mov         r3, #0
  000a8	e3a01000	 mov         r1, #0
  000ac	e3a00000	 mov         r0, #0
  000b0	e58de004	 str         lr, [sp, #4]
  000b4	e58de000	 str         lr, [sp]
  000b8	eb000000	 bl          CreateThread
  000bc	e3500000	 cmp         r0, #0

; 416  :     
; 417  :     if (s_Device.hListenerThread == NULL) 
; 418  :         {
; 419  :         goto cleanUp;
; 420  :         }
; 421  : 
; 422  :     // indicate success by returning a reference to global
; 423  :     //
; 424  :     rc = TRUE;

  000c0	13a05001	 movne       r5, #1
  000c4	e5840004	 str         r0, [r4, #4]
  000c8		 |$cleanUp$34559|
  000c8	1a000001	 bne         |$LN1@Initialize@3|
  000cc		 |$LN18@Initialize@3|

; 425  : 
; 426  : cleanUp:
; 427  :     if (rc == FALSE) UninitializeDeviceMediator((DWORD)&s_Device);

  000cc	e1a00004	 mov         r0, r4
  000d0	eb000000	 bl          |?UninitializeDeviceMediator@@YAXK@Z|
  000d4		 |$LN1@Initialize@3|

; 428  :     
; 429  :     return rc;

  000d4	e59d0008	 ldr         r0, [sp, #8]
  000d8	e3500000	 cmp         r0, #0
  000dc	1b000000	 blne        RegCloseKey

; 430  : }

  000e0	e1a00005	 mov         r0, r5
  000e4	e28dd014	 add         sp, sp, #0x14
  000e8	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  000ec	e12fff1e	 bx          lr
  000f0		 |$LN22@Initialize@3|
  000f0		 |$LN23@Initialize@3|
  000f0	00000000	 DCD         |?Device_ListenerThread@@YAKPAX@Z|
  000f4		 |$LN24@Initialize@3|
  000f4	00000000	 DCD         |??_C@_1BI@OJGHJKJA@?$AAp?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA2?$AA5?$AA6?$AA?$AA@|
  000f8		 |$LN25@Initialize@3|
  000f8	00000000	 DCD         |s_Device|
  000fc		 |$M35063|

			 ENDP  ; |?InitializeDeviceMediator@@YAKPAUHKEY__@@PBG@Z|, InitializeDeviceMediator

	EXPORT	|PmxSendDeviceNotification|
	IMPORT	|?SendMessageW@DeviceMediator@@QAAHIIKPAXK0KPAK@Z| ; DeviceMediator::SendMessageW

  00000			 AREA	 |.pdata|, PDATA
|$T35083| DCD	|$LN6@PmxSendDev|
	DCD	0x40001b02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PmxSendDeviceNotification| PROC

; 451  : {

  00000		 |$LN6@PmxSendDev|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004	e24dd014	 sub         sp, sp, #0x14
  00008		 |$M35080|
  00008	e1a08003	 mov         r8, r3
  0000c	e1a09000	 mov         r9, r0

; 452  :     DWORD rc = FALSE;
; 453  : 
; 454  :     if (s_Device.pDeviceMediator != NULL)

  00010	e59fe050	 ldr         lr, [pc, #0x50]
  00014	e3a00000	 mov         r0, #0
  00018	e59e7010	 ldr         r7, [lr, #0x10]
  0001c	e3570000	 cmp         r7, #0
  00020	0a00000d	 beq         |$LN1@PmxSendDev|

; 455  :         {
; 456  :         rc = s_Device.pDeviceMediator->SendMessage(listId, dwParam, 
; 457  :                 dwIoControlCode, lpInBuf, nInBufSize, lpOutBuf, nOutBufSize, 
; 458  :                 pdwBytesRet
; 459  :                 );

  00024	e59de03c	 ldr         lr, [sp, #0x3C]
  00028	e59d4038	 ldr         r4, [sp, #0x38]
  0002c	e59d5034	 ldr         r5, [sp, #0x34]
  00030	e59d6030	 ldr         r6, [sp, #0x30]
  00034	e1a03002	 mov         r3, r2
  00038	e1a02001	 mov         r2, r1
  0003c	e1a01009	 mov         r1, r9
  00040	e1a00007	 mov         r0, r7
  00044	e58de010	 str         lr, [sp, #0x10]
  00048	e58d400c	 str         r4, [sp, #0xC]
  0004c	e58d5008	 str         r5, [sp, #8]
  00050	e58d6004	 str         r6, [sp, #4]
  00054	e58d8000	 str         r8, [sp]
  00058	eb000000	 bl          |?SendMessageW@DeviceMediator@@QAAHIIKPAXK0KPAK@Z|
  0005c		 |$LN1@PmxSendDev|

; 460  :         }
; 461  :     return rc;
; 462  : }       

  0005c	e28dd014	 add         sp, sp, #0x14
  00060	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  00064	e12fff1e	 bx          lr
  00068		 |$LN7@PmxSendDev|
  00068		 |$LN8@PmxSendDev|
  00068	00000000	 DCD         |s_Device|
  0006c		 |$M35081|

			 ENDP  ; |PmxSendDeviceNotification|


  00000			 AREA	 |.pdata|, PDATA
|$T35104| DCD	|$LN10@scalar@2|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GStreamDevice@@UAAPAXI@Z| PROC	; StreamDevice::`scalar deleting destructor'
  00000		 |$LN10@scalar@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M35101|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3014	 ldr         r3, [pc, #0x14]
  0000c	e3110001	 tst         r1, #1
  00010	e5843000	 str         r3, [r4]
  00014	1b000000	 blne        |??3@YAXPAX@Z|
  00018	e1a00004	 mov         r0, r4
  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$LN11@scalar@2|
  00024		 |$LN12@scalar@2|
  00024	00000000	 DCD         |??_7DeviceBase@@6B@|
  00028		 |$M35102|

			 ENDP  ; |??_GStreamDevice@@UAAPAXI@Z|, StreamDevice::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$T35125| DCD	|$LN10@scalar@3|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GDisplayDevice@@UAAPAXI@Z| PROC	; DisplayDevice::`scalar deleting destructor'
  00000		 |$LN10@scalar@3|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M35122|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3014	 ldr         r3, [pc, #0x14]
  0000c	e3110001	 tst         r1, #1
  00010	e5843000	 str         r3, [r4]
  00014	1b000000	 blne        |??3@YAXPAX@Z|
  00018	e1a00004	 mov         r0, r4
  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$LN11@scalar@3|
  00024		 |$LN12@scalar@3|
  00024	00000000	 DCD         |??_7DeviceBase@@6B@|
  00028		 |$M35123|

			 ENDP  ; |??_GDisplayDevice@@UAAPAXI@Z|, DisplayDevice::`scalar deleting destructor'

	END
