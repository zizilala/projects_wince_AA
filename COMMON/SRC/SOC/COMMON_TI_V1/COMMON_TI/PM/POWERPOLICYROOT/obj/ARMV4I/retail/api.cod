; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\PM\POWERPOLICYROOT\api.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"/include:?_factory@?$$singleton@V?$$free_list@$$0GE@Vall"
	DCB	"ocator@ce@@@ce@@$$03V?$$static_allocator@V?$$free_list@$$"
	DCB	"0GE@Vallocator@ce@@@ce@@$$03@2@@ce@@1Ulock_factory@12@A "
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|?g_pPolicyRoot@@3PAVPolicyRoot@@A| [ DATA ] ; g_pPolicyRoot

  00000			 AREA	 |.bss|, NOINIT
|?g_pPolicyRoot@@3PAVPolicyRoot@@A| % 0x4		; g_pPolicyRoot
	EXPORT	|??0CRegistryEdit@@QAA@PAUHKEY__@@PBG@Z| ; CRegistryEdit::CRegistryEdit
	IMPORT	|RegOpenKeyExW|
; File c:\wince600\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.pdata|, PDATA
|$T37223| DCD	|$LN7@CRegistryE|
	DCD	0x40001402
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CRegistryEdit@@QAA@PAUHKEY__@@PBG@Z| PROC ; CRegistryEdit::CRegistryEdit

; 45   :     CRegistryEdit( HKEY hKey, LPCTSTR pszRegPath )

  00000		 |$LN7@CRegistryE|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M37220|
  00008	e1b0e002	 movs        lr, r2
  0000c	e1a05001	 mov         r5, r1
  00010	e1a04000	 mov         r4, r0

; 46   :     {
; 47   :         m_hDevKey = NULL;

  00014	e3a06000	 mov         r6, #0
  00018	e5846000	 str         r6, [r4]

; 48   :         if( pszRegPath )

  0001c	0a000007	 beq         |$LN1@CRegistryE|

; 49   :         {
; 50   :             if( RegOpenKeyEx( hKey, pszRegPath, 0, 0, &m_hDevKey ) != ERROR_SUCCESS )

  00020	e3a03000	 mov         r3, #0
  00024	e3a02000	 mov         r2, #0
  00028	e1a0100e	 mov         r1, lr
  0002c	e1a00005	 mov         r0, r5
  00030	e58d4000	 str         r4, [sp]
  00034	eb000000	 bl          RegOpenKeyExW
  00038	e3500000	 cmp         r0, #0

; 51   :             {
; 52   :                 m_hDevKey = NULL;

  0003c	15846000	 strne       r6, [r4]
  00040		 |$LN1@CRegistryE|

; 53   :             }
; 54   :         }
; 55   :     }

  00040	e1a00004	 mov         r0, r4
  00044	e28dd004	 add         sp, sp, #4
  00048	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$M37221|

			 ENDP  ; |??0CRegistryEdit@@QAA@PAUHKEY__@@PBG@Z|, CRegistryEdit::CRegistryEdit

	EXPORT	|??1CRegistryEdit@@QAA@XZ|		; CRegistryEdit::~CRegistryEdit
	IMPORT	|RegCloseKey|

  00000			 AREA	 |.pdata|, PDATA
|$T37231| DCD	|$LN6@CRegistryE@2|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CRegistryEdit@@QAA@XZ| PROC	; CRegistryEdit::~CRegistryEdit

; 80   :     {

  00000		 |$LN6@CRegistryE@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37228|

; 81   :         if( m_hDevKey )

  00004	e5903000	 ldr         r3, [r0]
  00008	e3530000	 cmp         r3, #0

; 82   :         {
; 83   :             RegCloseKey( m_hDevKey );

  0000c	11a00003	 movne       r0, r3
  00010	1b000000	 blne        RegCloseKey

; 84   :         }
; 85   :     }

  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M37229|

			 ENDP  ; |??1CRegistryEdit@@QAA@XZ|, CRegistryEdit::~CRegistryEdit

	EXPORT	|?RegQueryValueExW@CRegistryEdit@@QAAHPBGPAKPAE1@Z| ; CRegistryEdit::RegQueryValueExW
	IMPORT	|RegQueryValueExW|

  00000			 AREA	 |.pdata|, PDATA
|$T37246| DCD	|$LN7@RegQueryVa|
	DCD	0x40001002
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RegQueryValueExW@CRegistryEdit@@QAAHPBGPAKPAE1@Z| PROC ; CRegistryEdit::RegQueryValueExW

; 145  :     {

  00000		 |$LN7@RegQueryVa|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M37243|
  00008	e1a04003	 mov         r4, r3
  0000c	e1a03002	 mov         r3, r2

; 146  :         LONG status = ::RegQueryValueEx( m_hDevKey,
; 147  :                                            lpcName,
; 148  :                                            NULL,
; 149  :                                            pdwType,
; 150  :                                            lpData,
; 151  :                                            pdwDataLen );

  00010	e59de010	 ldr         lr, [sp, #0x10]
  00014	e5900000	 ldr         r0, [r0]
  00018	e3a02000	 mov         r2, #0
  0001c	e58de004	 str         lr, [sp, #4]
  00020	e58d4000	 str         r4, [sp]
  00024	eb000000	 bl          RegQueryValueExW
  00028	e3500000	 cmp         r0, #0

; 152  :         return ( status == ERROR_SUCCESS );

  0002c	03a00001	 moveq       r0, #1
  00030	13a00000	 movne       r0, #0

; 153  :     };

  00034	e28dd008	 add         sp, sp, #8
  00038	e8bd4010	 ldmia       sp!, {r4, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$M37244|

			 ENDP  ; |?RegQueryValueExW@CRegistryEdit@@QAAHPBGPAKPAE1@Z|, CRegistryEdit::RegQueryValueExW

	EXPORT	|?OpenPolicy@PolicyAdapter@@QAAPAXXZ|	; PolicyAdapter::OpenPolicy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\powerpolicyroot\policyadapter.h

  00000			 AREA	 |.pdata|, PDATA
|$T37256| DCD	|$LN6@OpenPolicy|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?OpenPolicy@PolicyAdapter@@QAAPAXXZ| PROC ; PolicyAdapter::OpenPolicy

; 123  :     {

  00000		 |$LN6@OpenPolicy|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37253|

; 124  :         if (m_fns.OpenPolicy == NULL) return NULL;

  00004	e590362c	 ldr         r3, [r0, #0x62C]
  00008	e3530000	 cmp         r3, #0
  0000c	03a00000	 moveq       r0, #0

; 126  :     }

  00010	049de004	 ldreq       lr, [sp], #4
  00014	012fff1e	 bxeq        lr

; 125  :         return m_fns.OpenPolicy(m_hPolicyAdapter);

  00018	e5900210	 ldr         r0, [r0, #0x210]
  0001c	e1a0e00f	 mov         lr, pc
  00020	e12fff13	 bx          r3

; 126  :     }

  00024	e49de004	 ldr         lr, [sp], #4
  00028	e12fff1e	 bx          lr
  0002c		 |$M37254|

			 ENDP  ; |?OpenPolicy@PolicyAdapter@@QAAPAXXZ|, PolicyAdapter::OpenPolicy

	EXPORT	|?NotifyPolicy@PolicyAdapter@@QAAHPAXK0I@Z| ; PolicyAdapter::NotifyPolicy

  00000			 AREA	 |.pdata|, PDATA
|$T37269| DCD	|$LN6@NotifyPoli|
	DCD	0x40001101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?NotifyPolicy@PolicyAdapter@@QAAHPAXK0I@Z| PROC ; PolicyAdapter::NotifyPolicy

; 134  :     {

  00000		 |$LN6@NotifyPoli|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M37266|
  00004	e1a0e003	 mov         lr, r3
  00008	e1a04002	 mov         r4, r2
  0000c	e1a05001	 mov         r5, r1

; 135  :         if (m_fns.NotifyPolicy == NULL) return NULL;

  00010	e5900630	 ldr         r0, [r0, #0x630]
  00014	e1b06000	 movs        r6, r0
  00018	03a00000	 moveq       r0, #0

; 137  :     }

  0001c	08bd4070	 ldmeqia     sp!, {r4 - r6, lr}
  00020	012fff1e	 bxeq        lr

; 136  :         return m_fns.NotifyPolicy(hPolicyContext, msg, pParam, size);

  00024	e59d3010	 ldr         r3, [sp, #0x10]
  00028	e1a0200e	 mov         r2, lr
  0002c	e1a01004	 mov         r1, r4
  00030	e1a00005	 mov         r0, r5
  00034	e1a0e00f	 mov         lr, pc
  00038	e12fff16	 bx          r6

; 137  :     }

  0003c	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M37267|

			 ENDP  ; |?NotifyPolicy@PolicyAdapter@@QAAHPAXK0I@Z|, PolicyAdapter::NotifyPolicy

	EXPORT	|?ClosePolicy@PolicyAdapter@@QAAHPAX@Z|	; PolicyAdapter::ClosePolicy

  00000			 AREA	 |.pdata|, PDATA
|$T37280| DCD	|$LN6@ClosePolic|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ClosePolicy@PolicyAdapter@@QAAHPAX@Z| PROC ; PolicyAdapter::ClosePolicy

; 143  :     {

  00000		 |$LN6@ClosePolic|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37277|

; 144  :         if (m_fns.ClosePolicy == NULL) return FALSE;

  00004	e5903634	 ldr         r3, [r0, #0x634]
  00008	e3530000	 cmp         r3, #0
  0000c	03a00000	 moveq       r0, #0

; 146  :     }

  00010	049de004	 ldreq       lr, [sp], #4
  00014	012fff1e	 bxeq        lr

; 145  :         return m_fns.ClosePolicy(hPolicyContext);

  00018	e1a00001	 mov         r0, r1
  0001c	e1a0e00f	 mov         lr, pc
  00020	e12fff13	 bx          r3

; 146  :     }

  00024	e49de004	 ldr         lr, [sp], #4
  00028	e12fff1e	 bx          lr
  0002c		 |$M37278|

			 ENDP  ; |?ClosePolicy@PolicyAdapter@@QAAHPAX@Z|, PolicyAdapter::ClosePolicy

	EXPORT	|??0PolicyContext@@QAA@PAVPolicyAdapter@@@Z| ; PolicyContext::PolicyContext
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\powerpolicyroot\policycontext.h

  00000			 AREA	 |.pdata|, PDATA
|$T37291| DCD	|$LN5@PolicyCont|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0PolicyContext@@QAA@PAVPolicyAdapter@@@Z| PROC ; PolicyContext::PolicyContext

; 44   :     {

  00000		 |$LN5@PolicyCont|
  00000		 |$M37288|
  00000	e3a03000	 mov         r3, #0

; 45   :         m_cookie = (DWORD)this;

  00004	e8800009	 stmia       r0, {r0, r3}
  00008	e5801008	 str         r1, [r0, #8]

; 46   :     }   

  0000c	e12fff1e	 bx          lr
  00010		 |$M37289|

			 ENDP  ; |??0PolicyContext@@QAA@PAVPolicyAdapter@@@Z|, PolicyContext::PolicyContext

	EXPORT	|??0critical_section@ce@@QAA@XZ|	; ce::critical_section::critical_section
	IMPORT	|InitializeCriticalSection|
; File c:\wince600\public\common\oak\inc\sync.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T37301| DCD	|$LN5@critical_s|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0critical_section@ce@@QAA@XZ| PROC	; ce::critical_section::critical_section

; 125  :     critical_section()

  00000		 |$LN5@critical_s|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37298|
  00004	e1a04000	 mov         r4, r0
  00008	eb000000	 bl          InitializeCriticalSection
  0000c	e1a00004	 mov         r0, r4
  00010	e8bd4010	 ldmia       sp!, {r4, lr}
  00014	e12fff1e	 bx          lr
  00018		 |$M37299|

			 ENDP  ; |??0critical_section@ce@@QAA@XZ|, ce::critical_section::critical_section

	EXPORT	|??1critical_section@ce@@QAA@XZ|	; ce::critical_section::~critical_section
	IMPORT	|DeleteCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T37309| DCD	|$LN5@critical_s@2|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1critical_section@ce@@QAA@XZ| PROC	; ce::critical_section::~critical_section

; 129  :         {DeleteCriticalSection(this); }

  00000		 |$LN5@critical_s@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37306|
  00004	eb000000	 bl          DeleteCriticalSection
  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M37307|

			 ENDP  ; |??1critical_section@ce@@QAA@XZ|, ce::critical_section::~critical_section

	EXPORT	|?deallocate@allocator@ce@@QBAXPAXI@Z|	; ce::allocator::deallocate
	IMPORT	|??3@YAXPAX@Z|				; operator delete
; File c:\wince600\public\common\oak\inc\allocator.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T37317| DCD	|$LN5@deallocate|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?deallocate@allocator@ce@@QBAXPAXI@Z| PROC ; ce::allocator::deallocate

; 109  :         {operator delete(Ptr); }

  00000		 |$LN5@deallocate|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37314|
  00004	e1a00001	 mov         r0, r1
  00008	eb000000	 bl          |??3@YAXPAX@Z|
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M37315|

			 ENDP  ; |?deallocate@allocator@ce@@QBAXPAXI@Z|, ce::allocator::deallocate

	EXPORT	|?FindPolicy@PolicyRoot@@QAAPAVPolicyAdapter@@PBG@Z| ; PolicyRoot::FindPolicy
	IMPORT	|?FindAdapterById@PolicyContainer@@QAAPAVPolicyAdapter@@PBG@Z| ; PolicyContainer::FindAdapterById
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\powerpolicyroot\policyroot.h

  00000			 AREA	 |.pdata|, PDATA
|$T37328| DCD	|$LN5@FindPolicy|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?FindPolicy@PolicyRoot@@QAAPAVPolicyAdapter@@PBG@Z| PROC ; PolicyRoot::FindPolicy

; 68   :     {

  00000		 |$LN5@FindPolicy|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37325|

; 69   :         return m_PolicyContainer.FindAdapterById(szId);

  00004	e2800f82	 add         r0, r0, #0x82, 30
  00008	eb000000	 bl          |?FindAdapterById@PolicyContainer@@QAAPAVPolicyAdapter@@PBG@Z|

; 70   :     }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M37326|

			 ENDP  ; |?FindPolicy@PolicyRoot@@QAAPAVPolicyAdapter@@PBG@Z|, PolicyRoot::FindPolicy

	EXPORT	|?PostInitialize@PolicyRoot@@QAAHXZ|	; PolicyRoot::PostInitialize
	IMPORT	|?PostInitialize@PolicyContainer@@QAAHPAVPolicyRoot@@@Z| ; PolicyContainer::PostInitialize

  00000			 AREA	 |.pdata|, PDATA
|$T37338| DCD	|$LN5@PostInitia|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PostInitialize@PolicyRoot@@QAAHXZ| PROC ; PolicyRoot::PostInitialize

; 74   :     {

  00000		 |$LN5@PostInitia|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37335|

; 75   :         return m_PolicyContainer.PostInitialize(this);

  00004	e1a01000	 mov         r1, r0
  00008	e2800f82	 add         r0, r0, #0x82, 30
  0000c	eb000000	 bl          |?PostInitialize@PolicyContainer@@QAAHPAVPolicyRoot@@@Z|

; 76   :     }

  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$M37336|

			 ENDP  ; |?PostInitialize@PolicyRoot@@QAAHXZ|, PolicyRoot::PostInitialize

	EXPORT	|?Uninitialize@PolicyRoot@@QAAXXZ|	; PolicyRoot::Uninitialize
	IMPORT	|?Uninitialize@PolicyContainer@@QAAXXZ|	; PolicyContainer::Uninitialize

  00000			 AREA	 |.pdata|, PDATA
|$T37346| DCD	|$LN5@Uninitiali|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Uninitialize@PolicyRoot@@QAAXXZ| PROC ; PolicyRoot::Uninitialize

; 80   :     {

  00000		 |$LN5@Uninitiali|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37343|

; 81   :         m_PolicyContainer.Uninitialize();

  00004	e2800f82	 add         r0, r0, #0x82, 30
  00008	eb000000	 bl          |?Uninitialize@PolicyContainer@@QAAXXZ|

; 82   :     }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M37344|

			 ENDP  ; |?Uninitialize@PolicyRoot@@QAAXXZ|, PolicyRoot::Uninitialize

	EXPORT	|?GetPolicyPath@PolicyRoot@@QBAPBGXZ|	; PolicyRoot::GetPolicyPath

  00000			 AREA	 |.pdata|, PDATA
|$T37356| DCD	|$LN5@GetPolicyP|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPolicyPath@PolicyRoot@@QBAPBGXZ| PROC ; PolicyRoot::GetPolicyPath

; 86   :     {

  00000		 |$LN5@GetPolicyP|
  00000		 |$M37353|

; 87   :         return m_szPolicyKey;
; 88   :     } 

  00000	e12fff1e	 bx          lr
  00004		 |$M37354|

			 ENDP  ; |?GetPolicyPath@PolicyRoot@@QBAPBGXZ|, PolicyRoot::GetPolicyPath

	EXPORT	|?PreDeviceStateChange@@YAHIII@Z|	; PreDeviceStateChange
	IMPORT	|?PreDeviceStateChange@PolicyRoot@@QAAHIII@Z| ; PolicyRoot::PreDeviceStateChange
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\powerpolicyroot\api.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T37368| DCD	|$LN6@PreDeviceS|
	DCD	0x40000d01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PreDeviceStateChange@@YAHIII@Z| PROC	; PreDeviceStateChange

; 108  : {

  00000		 |$LN6@PreDeviceS|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37365|
  00004	e1a0e000	 mov         lr, r0

; 109  :     // UNDONE:
; 110  :     //  Need to encapsulate w/ mutex
; 111  :     if (g_pPolicyRoot != NULL)

  00008	e59f3020	 ldr         r3, [pc, #0x20]
  0000c	e5930000	 ldr         r0, [r3]
  00010	e3500000	 cmp         r0, #0

; 112  :         {
; 113  :         g_pPolicyRoot->PreDeviceStateChange(dev, oldState, newState);

  00014	11a03002	 movne       r3, r2
  00018	11a02001	 movne       r2, r1
  0001c	11a0100e	 movne       r1, lr
  00020	1b000000	 blne        |?PreDeviceStateChange@PolicyRoot@@QAAHIII@Z|

; 114  :         }
; 115  : 
; 116  :     return TRUE;

  00024	e3a00001	 mov         r0, #1

; 117  : }

  00028	e49de004	 ldr         lr, [sp], #4
  0002c	e12fff1e	 bx          lr
  00030		 |$LN7@PreDeviceS|
  00030		 |$LN8@PreDeviceS|
  00030	00000000	 DCD         |?g_pPolicyRoot@@3PAVPolicyRoot@@A|
  00034		 |$M37366|

			 ENDP  ; |?PreDeviceStateChange@@YAHIII@Z|, PreDeviceStateChange

	EXPORT	|?PostDeviceStateChange@@YAHIII@Z|	; PostDeviceStateChange
	IMPORT	|?PostDeviceStateChange@PolicyRoot@@QAAHIII@Z| ; PolicyRoot::PostDeviceStateChange

  00000			 AREA	 |.pdata|, PDATA
|$T37382| DCD	|$LN6@PostDevice|
	DCD	0x40000d01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PostDeviceStateChange@@YAHIII@Z| PROC ; PostDeviceStateChange

; 132  : {

  00000		 |$LN6@PostDevice|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37379|
  00004	e1a0e000	 mov         lr, r0

; 133  :     // UNDONE:
; 134  :     //  Need to encapsulate w/ mutex
; 135  :     if (g_pPolicyRoot != NULL)

  00008	e59f3020	 ldr         r3, [pc, #0x20]
  0000c	e5930000	 ldr         r0, [r3]
  00010	e3500000	 cmp         r0, #0

; 136  :         {
; 137  :         g_pPolicyRoot->PostDeviceStateChange(dev, oldState, newState);

  00014	11a03002	 movne       r3, r2
  00018	11a02001	 movne       r2, r1
  0001c	11a0100e	 movne       r1, lr
  00020	1b000000	 blne        |?PostDeviceStateChange@PolicyRoot@@QAAHIII@Z|

; 138  :         }
; 139  : 
; 140  :     return TRUE;

  00024	e3a00001	 mov         r0, #1

; 141  : }

  00028	e49de004	 ldr         lr, [sp], #4
  0002c	e12fff1e	 bx          lr
  00030		 |$LN7@PostDevice|
  00030		 |$LN8@PostDevice|
  00030	00000000	 DCD         |?g_pPolicyRoot@@3PAVPolicyRoot@@A|
  00034		 |$M37380|

			 ENDP  ; |?PostDeviceStateChange@@YAHIII@Z|, PostDeviceStateChange

	EXPORT	|?PreSystemStateChange@@YAKKPBGK@Z|	; PreSystemStateChange
	IMPORT	|?PreSystemStateChange@PolicyRoot@@QAAKKPBGK@Z| ; PolicyRoot::PreSystemStateChange

  00000			 AREA	 |.pdata|, PDATA
|$T37396| DCD	|$LN6@PreSystemS|
	DCD	0x40000d01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PreSystemStateChange@@YAKKPBGK@Z| PROC ; PreSystemStateChange

; 155  : {

  00000		 |$LN6@PreSystemS|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37393|
  00004	e1a0e000	 mov         lr, r0

; 156  :     if (g_pPolicyRoot != NULL)

  00008	e59f3020	 ldr         r3, [pc, #0x20]
  0000c	e5930000	 ldr         r0, [r3]
  00010	e3500000	 cmp         r0, #0

; 157  :         {
; 158  :         g_pPolicyRoot->PreSystemStateChange(dwExtContext, 
; 159  :                 lpNewStateName, dwFlags
; 160  :                 );

  00014	11a03002	 movne       r3, r2
  00018	11a02001	 movne       r2, r1
  0001c	11a0100e	 movne       r1, lr
  00020	1b000000	 blne        |?PreSystemStateChange@PolicyRoot@@QAAKKPBGK@Z|

; 161  :         }
; 162  :     return 1;

  00024	e3a00001	 mov         r0, #1

; 163  : }

  00028	e49de004	 ldr         lr, [sp], #4
  0002c	e12fff1e	 bx          lr
  00030		 |$LN7@PreSystemS|
  00030		 |$LN8@PreSystemS|
  00030	00000000	 DCD         |?g_pPolicyRoot@@3PAVPolicyRoot@@A|
  00034		 |$M37394|

			 ENDP  ; |?PreSystemStateChange@@YAKKPBGK@Z|, PreSystemStateChange

	EXPORT	|?PostSystemStateChange@@YAKKPBGK@Z|	; PostSystemStateChange
	IMPORT	|?PostSystemStateChange@PolicyRoot@@QAAKKPBGK@Z| ; PolicyRoot::PostSystemStateChange

  00000			 AREA	 |.pdata|, PDATA
|$T37410| DCD	|$LN6@PostSystem|
	DCD	0x40000d01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PostSystemStateChange@@YAKKPBGK@Z| PROC ; PostSystemStateChange

; 177  : {

  00000		 |$LN6@PostSystem|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37407|
  00004	e1a0e000	 mov         lr, r0

; 178  :     if (g_pPolicyRoot != NULL)

  00008	e59f3020	 ldr         r3, [pc, #0x20]
  0000c	e5930000	 ldr         r0, [r3]
  00010	e3500000	 cmp         r0, #0

; 179  :         {
; 180  :         g_pPolicyRoot->PostSystemStateChange(dwExtContext, 
; 181  :                 lpNewStateName, dwFlags
; 182  :                 );

  00014	11a03002	 movne       r3, r2
  00018	11a02001	 movne       r2, r1
  0001c	11a0100e	 movne       r1, lr
  00020	1b000000	 blne        |?PostSystemStateChange@PolicyRoot@@QAAKKPBGK@Z|

; 183  :         }
; 184  :     
; 185  :     return 1;

  00024	e3a00001	 mov         r0, #1

; 186  : }

  00028	e49de004	 ldr         lr, [sp], #4
  0002c	e12fff1e	 bx          lr
  00030		 |$LN7@PostSystem|
  00030		 |$LN8@PostSystem|
  00030	00000000	 DCD         |?g_pPolicyRoot@@3PAVPolicyRoot@@A|
  00034		 |$M37408|

			 ENDP  ; |?PostSystemStateChange@@YAKKPBGK@Z|, PostSystemStateChange

	EXPORT	|PmxOpenPolicy|
	IMPORT	|??2@YAPAXI@Z|				; operator new
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\powerpolicyroot\policyadapter.h

  00000			 AREA	 |.pdata|, PDATA
|$T37443| DCD	|$LN23@PmxOpenPol|
	DCD	0x40002301
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\powerpolicyroot\api.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PmxOpenPolicy| PROC

; 198  : {

  00000		 |$LN23@PmxOpenPol|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37440|

; 199  :     BOOL rc = FALSE;
; 200  :     PolicyContext *pContext = NULL;
; 201  :     PolicyAdapter *pAdapter;
; 202  :     
; 203  :     // validate
; 204  :     if (g_pPolicyRoot == NULL) goto cleanUp;

  00004	e59f307c	 ldr         r3, [pc, #0x7C]
  00008	e3a04000	 mov         r4, #0
  0000c	e5933000	 ldr         r3, [r3]
  00010	e3530000	 cmp         r3, #0
  00014	0a000018	 beq         |$LN1@PmxOpenPol|

; 205  : 
; 206  :     // find a policy adapter with the matching class
; 207  :     pAdapter = g_pPolicyRoot->FindPolicy(szId);

  00018	e1a01000	 mov         r1, r0
  0001c	e2830f82	 add         r0, r3, #0x82, 30
  00020	eb000000	 bl          |?FindAdapterById@PolicyContainer@@QAAPAVPolicyAdapter@@PBG@Z|
  00024	e1b05000	 movs        r5, r0

; 208  :     if (pAdapter == NULL) goto cleanUp;

  00028	0a000013	 beq         |$LN1@PmxOpenPol|

; 209  :     
; 210  :     // create a policy context
; 211  :     pContext = new PolicyContext(pAdapter);

  0002c	e3a0000c	 mov         r0, #0xC
  00030	eb000000	 bl          |??2@YAPAXI@Z|
  00034	e1b04000	 movs        r4, r0
  00038	13a03000	 movne       r3, #0
  0003c	15843004	 strne       r3, [r4, #4]
  00040	15845008	 strne       r5, [r4, #8]
  00044	15844000	 strne       r4, [r4]

; 212  : 
; 213  :     // apply policy
; 214  :     pContext->m_hContext = pAdapter->OpenPolicy();

  00048	e595362c	 ldr         r3, [r5, #0x62C]
  0004c	03a04000	 moveq       r4, #0
  00050	e3530000	 cmp         r3, #0
  00054	03a00000	 moveq       r0, #0
  00058	15950210	 ldrne       r0, [r5, #0x210]
  0005c	11a0e00f	 movne       lr, pc
  00060	112fff13	 bxne        r3
  00064	e5840004	 str         r0, [r4, #4]

; 215  :     if (pContext->m_hContext == NULL) goto cleanUp;

  00068	e3500000	 cmp         r0, #0

; 216  : 
; 217  :     rc = TRUE;
; 218  : 
; 219  : cleanUp:
; 220  :     if (rc == FALSE)

  0006c	1a000002	 bne         |$LN1@PmxOpenPol|

; 221  :         {
; 222  :         if (pContext != NULL)
; 223  :             {
; 224  :             delete pContext;

  00070	e1a00004	 mov         r0, r4
  00074		 |$cleanUp$36340|
  00074	eb000000	 bl          |??3@YAXPAX@Z|

; 225  :             pContext = NULL;

  00078	e3a04000	 mov         r4, #0
  0007c		 |$LN1@PmxOpenPol|

; 226  :             }
; 227  :         }
; 228  :     
; 229  :     return (HANDLE)pContext;
; 230  : }

  0007c	e1a00004	 mov         r0, r4
  00080	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00084	e12fff1e	 bx          lr
  00088		 |$LN24@PmxOpenPol|
  00088		 |$LN25@PmxOpenPol|
  00088	00000000	 DCD         |?g_pPolicyRoot@@3PAVPolicyRoot@@A|
  0008c		 |$M37441|

			 ENDP  ; |PmxOpenPolicy|

	EXPORT	|PmxNotifyPolicy|
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\powerpolicyroot\policyadapter.h

  00000			 AREA	 |.pdata|, PDATA
|$T37467| DCD	|$LN15@PmxNotifyP|
	DCD	0x40001801
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\powerpolicyroot\api.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PmxNotifyPolicy| PROC

; 245  : {

  00000		 |$LN15@PmxNotifyP|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37464|

; 246  :     BOOL rc = FALSE;
; 247  :     PolicyContext *pContext = (PolicyContext*)hPolicyContext;
; 248  :     PolicyAdapter *pAdapter;
; 249  :     
; 250  :     // validate
; 251  :     if (g_pPolicyRoot == NULL || pContext == NULL) goto cleanUp;

  00004	e59fe050	 ldr         lr, [pc, #0x50]
  00008	e3a04000	 mov         r4, #0
  0000c	e59ee000	 ldr         lr, [lr]
  00010	e35e0000	 cmp         lr, #0
  00014	0a00000d	 beq         |$cleanUp$36365|
  00018	e3500000	 cmp         r0, #0
  0001c	0a00000b	 beq         |$cleanUp$36365|

; 252  :     if (pContext->m_cookie != (DWORD)hPolicyContext) goto cleanUp;

  00020	e590e000	 ldr         lr, [r0]
  00024	e15e0000	 cmp         lr, r0
  00028	1a000008	 bne         |$cleanUp$36365|

; 253  : 
; 254  :     // check if request succeeded
; 255  :     pAdapter = pContext->m_pPolicyAdapter;

  0002c	e590e008	 ldr         lr, [r0, #8]

; 256  :     if (pAdapter->NotifyPolicy(pContext->m_hContext, msg, pParam, size) == FALSE)

  00030	e5900004	 ldr         r0, [r0, #4]
  00034	e59ee630	 ldr         lr, [lr, #0x630]
  00038	e1b0500e	 movs        r5, lr
  0003c	0a000003	 beq         |$cleanUp$36365|
  00040	e1a0e00f	 mov         lr, pc
  00044	e12fff15	 bx          r5
  00048	e3500000	 cmp         r0, #0

; 257  :         {
; 258  :         goto cleanUp;
; 259  :         }
; 260  :     
; 261  :     rc = TRUE;    

  0004c	13a04001	 movne       r4, #1
  00050		 |$cleanUp$36365|

; 262  : cleanUp:    
; 263  :     return rc;
; 264  : }

  00050	e1a00004	 mov         r0, r4
  00054	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00058	e12fff1e	 bx          lr
  0005c		 |$LN16@PmxNotifyP|
  0005c		 |$LN17@PmxNotifyP|
  0005c	00000000	 DCD         |?g_pPolicyRoot@@3PAVPolicyRoot@@A|
  00060		 |$M37465|

			 ENDP  ; |PmxNotifyPolicy|

	EXPORT	|PmxClosePolicy|
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\powerpolicyroot\policyadapter.h

  00000			 AREA	 |.pdata|, PDATA
|$T37485| DCD	|$LN11@PmxClosePo|
	DCD	0x40001601
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\powerpolicyroot\api.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PmxClosePolicy| PROC

; 276  : {

  00000		 |$LN11@PmxClosePo|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37482|
  00004	e1a04000	 mov         r4, r0

; 277  :     BOOL rc = FALSE;
; 278  :     PolicyContext *pContext = (PolicyContext*)hPolicyContext;
; 279  :     PolicyAdapter *pAdapter;
; 280  : 
; 281  :     // validate
; 282  :     if (g_pPolicyRoot == NULL || pContext == NULL) return;

  00008	e59f3044	 ldr         r3, [pc, #0x44]
  0000c	e5933000	 ldr         r3, [r3]
  00010	e3530000	 cmp         r3, #0
  00014	0a00000c	 beq         |$LN2@PmxClosePo|
  00018	e3540000	 cmp         r4, #0
  0001c	0a00000a	 beq         |$LN2@PmxClosePo|

; 283  :     if (pContext->m_cookie != (DWORD)hPolicyContext) return;

  00020	e5943000	 ldr         r3, [r4]
  00024	e1530004	 cmp         r3, r4
  00028	1a000007	 bne         |$LN2@PmxClosePo|

; 284  : 
; 285  :     // apply policy
; 286  :     pAdapter = pContext->m_pPolicyAdapter;

  0002c	e5943008	 ldr         r3, [r4, #8]

; 287  :     rc = pAdapter->ClosePolicy(pContext->m_hContext);

  00030	e5933634	 ldr         r3, [r3, #0x634]
  00034	e3530000	 cmp         r3, #0
  00038	15940004	 ldrne       r0, [r4, #4]
  0003c	11a0e00f	 movne       lr, pc
  00040	112fff13	 bxne        r3

; 288  : 
; 289  :     delete pContext;

  00044	e1a00004	 mov         r0, r4
  00048	eb000000	 bl          |??3@YAXPAX@Z|
  0004c		 |$LN2@PmxClosePo|

; 290  : }

  0004c	e8bd4010	 ldmia       sp!, {r4, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$LN12@PmxClosePo|
  00054		 |$LN13@PmxClosePo|
  00054	00000000	 DCD         |?g_pPolicyRoot@@3PAVPolicyRoot@@A|
  00058		 |$M37483|

			 ENDP  ; |PmxClosePolicy|

	EXPORT	|PmxGetPolicyInfo|

  00000			 AREA	 |.pdata|, PDATA
|$T37496| DCD	|$LN7@PmxGetPoli|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PmxGetPolicyInfo| PROC

; 304  : {

  00000		 |$LN7@PmxGetPoli|
  00000		 |$M37493|
  00000		 |$cleanUp$36390|

; 305  :     // UNDONE:
; 306  :     // need to better define this once more of the infrastructure is built
; 307  :     UNREFERENCED_PARAMETER(size);
; 308  :     UNREFERENCED_PARAMETER(pParam);
; 309  :     UNREFERENCED_PARAMETER(hPolicyContext);
; 310  :     // validate
; 311  :     if (g_pPolicyRoot == NULL) goto cleanUp;
; 312  : 
; 313  : cleanUp:
; 314  :     return NULL;

  00000	e3a00000	 mov         r0, #0

; 315  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M37494|

			 ENDP  ; |PmxGetPolicyInfo|

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|PmxLoadPolicy|
	EXPORT	|??_C@_1M@DFKENGJN@?$AA?$CF?$AAs?$AA?2?$AA?$CF?$AAs?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|?LoadPolicy@PolicyRoot@@QAAPAVPolicyAdapter@@PBG@Z| ; PolicyRoot::LoadPolicy
	IMPORT	|swprintf|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_cookie|
	IMPORT	|wcscpy|
	IMPORT	|__security_check_cookie|
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\powerpolicyroot\policyadapter.h

  00000			 AREA	 |.pdata|, PDATA
|$T37536| DCD	|$LN28@PmxLoadPol|
	DCD	0xc0005302

  00000			 AREA	 |.xdata|, DATA
|$T37532| DCD	0xffffffe8

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@DFKENGJN@?$AA?$CF?$AAs?$AA?2?$AA?$CF?$AAs?$AA?$AA@| DCB "%", 0x0
	DCB	"s", 0x0, "\\", 0x0, "%", 0x0, "s", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\powerpolicyroot\api.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T37532|

  00008		 |PmxLoadPolicy| PROC

; 327  : {

  00008		 |$LN28@PmxLoadPol|
  00008	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  0000c	e24ddf85	 sub         sp, sp, #0x85, 30
  00010		 |$M37533|
  00010	e1a05000	 mov         r5, r0
  00014	e59f3134	 ldr         r3, [pc, #0x134]
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3210	 str         r3, [sp, #0x210]

; 328  :     HKEY hKey = NULL;
; 329  :     DWORD rc = FALSE;
; 330  :     _TCHAR szBuffer[MAX_PATH];
; 331  :     PolicyContext *pContext = NULL;
; 332  :     PolicyAdapter *pAdapter;
; 333  :     
; 334  : 
; 335  :     // check for global root object
; 336  :     if (g_pPolicyRoot == NULL || context == NULL) goto cleanUp;

  00020	e59f7124	 ldr         r7, [pc, #0x124]
  00024	e3a02000	 mov         r2, #0
  00028	e58d2004	 str         r2, [sp, #4]
  0002c	e5973000	 ldr         r3, [r7]
  00030	e3a06000	 mov         r6, #0
  00034	e3a04000	 mov         r4, #0
  00038	e3530000	 cmp         r3, #0
  0003c	0a00003b	 beq         |$LN1@PmxLoadPol|
  00040	e3550000	 cmp         r5, #0
  00044	0a000039	 beq         |$LN1@PmxLoadPol|

; 337  : 
; 338  :     // try opening context via registry key
; 339  :     _tcscpy(szBuffer, (_TCHAR*)context);

  00048	e1a01005	 mov         r1, r5
  0004c	e28d0008	 add         r0, sp, #8
  00050	eb000000	 bl          wcscpy

; 340  :     if (RegOpenKeyEx(HKEY_LOCAL_MACHINE, szBuffer, 0, 0, &hKey ) != ERROR_SUCCESS)

  00054	e28d3004	 add         r3, sp, #4
  00058	e58d3000	 str         r3, [sp]
  0005c	e3a03000	 mov         r3, #0
  00060	e3a02000	 mov         r2, #0
  00064	e28d1008	 add         r1, sp, #8
  00068	e3a0010a	 mov         r0, #0xA, 2
  0006c	eb000000	 bl          RegOpenKeyExW
  00070	e3500000	 cmp         r0, #0
  00074	0a00000d	 beq         |$LN9@PmxLoadPol|

; 341  :         {
; 342  :         // check if context is a subkey
; 343  :         _stprintf(szBuffer, L"%s\\%s", 
; 344  :             g_pPolicyRoot->GetPolicyPath(),
; 345  :             (_TCHAR*)context
; 346  :             );

  00078	e5972000	 ldr         r2, [r7]
  0007c	e59f10c4	 ldr         r1, [pc, #0xC4]
  00080	e1a03005	 mov         r3, r5
  00084	e28d0008	 add         r0, sp, #8
  00088	eb000000	 bl          swprintf

; 347  : 
; 348  :         // there isn't a member function to update internal 
; 349  :         // variables, do it manually
; 350  :         if (RegOpenKeyEx(HKEY_LOCAL_MACHINE, szBuffer, 0, 0, &hKey) != ERROR_SUCCESS)

  0008c	e28d3004	 add         r3, sp, #4
  00090	e58d3000	 str         r3, [sp]
  00094	e3a03000	 mov         r3, #0
  00098	e3a02000	 mov         r2, #0
  0009c	e28d1008	 add         r1, sp, #8
  000a0	e3a0010a	 mov         r0, #0xA, 2
  000a4	eb000000	 bl          RegOpenKeyExW
  000a8	e3500000	 cmp         r0, #0

; 368  : 
; 369  : cleanUp:

  000ac	1a00001f	 bne         |$LN1@PmxLoadPol|
  000b0		 |$LN9@PmxLoadPol|

; 351  :             {
; 352  :             hKey = NULL;
; 353  :             goto cleanUp;
; 354  :             }
; 355  :         }
; 356  : 
; 357  :     // At this point we know the registry path of the constraint adapter
; 358  :     // pass it down to the adapter
; 359  :     pAdapter = g_pPolicyRoot->LoadPolicy(szBuffer);

  000b0	e5970000	 ldr         r0, [r7]
  000b4	e28d1008	 add         r1, sp, #8
  000b8	eb000000	 bl          |?LoadPolicy@PolicyRoot@@QAAPAVPolicyAdapter@@PBG@Z|
  000bc	e1b05000	 movs        r5, r0

; 360  :     if (pAdapter == NULL) goto cleanUp;

  000c0	0a000010	 beq         |$cleanUp$36402|

; 361  : 
; 362  :     // create a constraint context
; 363  :     pContext = new PolicyContext(pAdapter);

  000c4	e3a0000c	 mov         r0, #0xC
  000c8	eb000000	 bl          |??2@YAPAXI@Z|
  000cc	e1b04000	 movs        r4, r0
  000d0	13a03000	 movne       r3, #0
  000d4	15843004	 strne       r3, [r4, #4]
  000d8	15845008	 strne       r5, [r4, #8]
  000dc	15844000	 strne       r4, [r4]

; 364  :     pContext->m_hContext = pAdapter->OpenPolicy();

  000e0	e595362c	 ldr         r3, [r5, #0x62C]
  000e4	03a04000	 moveq       r4, #0
  000e8	e3530000	 cmp         r3, #0
  000ec	03a00000	 moveq       r0, #0
  000f0	15950210	 ldrne       r0, [r5, #0x210]
  000f4	11a0e00f	 movne       lr, pc
  000f8	112fff13	 bxne        r3

; 365  :     if (pContext->m_hContext == NULL) goto cleanUp;

  000fc	e3500000	 cmp         r0, #0

; 366  : 
; 367  :     rc = TRUE;

  00100	13a06001	 movne       r6, #1
  00104	e5840004	 str         r0, [r4, #4]
  00108		 |$cleanUp$36402|

; 370  :     if (hKey != NULL)

  00108	e59d0004	 ldr         r0, [sp, #4]
  0010c	e3500000	 cmp         r0, #0

; 371  :         {
; 372  :         RegCloseKey(hKey);

  00110	1b000000	 blne        RegCloseKey

; 373  :         }
; 374  :     
; 375  :     if (rc == FALSE)

  00114	e3560000	 cmp         r6, #0
  00118	1a000004	 bne         |$LN1@PmxLoadPol|

; 376  :         {
; 377  :         if (pContext != NULL)

  0011c	e3540000	 cmp         r4, #0
  00120	0a000002	 beq         |$LN1@PmxLoadPol|

; 378  :             {
; 379  :             delete pContext;

  00124	e1a00004	 mov         r0, r4
  00128	eb000000	 bl          |??3@YAXPAX@Z|

; 380  :             pContext = NULL;

  0012c	e3a04000	 mov         r4, #0
  00130		 |$LN1@PmxLoadPol|

; 381  :             }
; 382  :         }
; 383  :     
; 384  :     return pContext;

  00130	e59d0210	 ldr         r0, [sp, #0x210]
  00134	eb000000	 bl          __security_check_cookie

; 385  : }

  00138	e1a00004	 mov         r0, r4
  0013c	e28ddf85	 add         sp, sp, #0x85, 30
  00140	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00144	e12fff1e	 bx          lr
  00148		 |$LN29@PmxLoadPol|
  00148		 |$LN30@PmxLoadPol|
  00148	00000000	 DCD         |??_C@_1M@DFKENGJN@?$AA?$CF?$AAs?$AA?2?$AA?$CF?$AAs?$AA?$AA@|
  0014c		 |$LN31@PmxLoadPol|
  0014c	00000000	 DCD         |?g_pPolicyRoot@@3PAVPolicyRoot@@A|
  00150		 |$LN32@PmxLoadPol|
  00150	00000000	 DCD         |__security_cookie|
  00154		 |$M37534|

			 ENDP  ; |PmxLoadPolicy|

	EXPORT	|??0?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA@XZ| ; ce::list<PolicyAdapter *,ce::allocator>::list<PolicyAdapter *,ce::allocator>
; File c:\wince600\public\common\oak\inc\list.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T37551| DCD	|$LN5@list|
	DCD	0x40000800
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA@XZ| PROC ; ce::list<PolicyAdapter *,ce::allocator>::list<PolicyAdapter *,ce::allocator>

; 177  :     {

  00000		 |$LN5@list|
  00000		 |$M37548|
  00000	e3a03000	 mov         r3, #0
  00004	e580300c	 str         r3, [r0, #0xC]
  00008	e5800000	 str         r0, [r0]

; 178  :         // _HeadPrev and _HeadNext must have the same sizes and relative layout as _Node::_Prev and _Node::_Next
; 179  :         assert(&_Head->_Prev == &_HeadPrev);
; 180  :         assert(&_Head->_Next == &_HeadNext);
; 181  :         
; 182  :         _Head->_Prev = _Head->_Next = _Head;

  0000c	e5800004	 str         r0, [r0, #4]
  00010	e5902000	 ldr         r2, [r0]

; 183  :     }

  00014	e5923004	 ldr         r3, [r2, #4]
  00018	e5823008	 str         r3, [r2, #8]
  0001c	e12fff1e	 bx          lr
  00020		 |$M37549|

			 ENDP  ; |??0?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA@XZ|, ce::list<PolicyAdapter *,ce::allocator>::list<PolicyAdapter *,ce::allocator>

	EXPORT	|?_Freenode@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@IAAXPAU_Node@12@@Z| ; ce::list<PolicyAdapter *,ce::allocator>::_Freenode
; File c:\wince600\public\common\oak\inc\allocator.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T37562| DCD	|$LN7@Freenode|
	DCD	0x40000501
; Function compile flags: /Ogspy
; File c:\wince600\public\common\oak\inc\list.hxx

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?_Freenode@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@IAAXPAU_Node@12@@Z| PROC ; ce::list<PolicyAdapter *,ce::allocator>::_Freenode

; 574  :         {deallocate(Node, sizeof(_Node)); }

  00000		 |$LN7@Freenode|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37559|
  00004	e1a00001	 mov         r0, r1
  00008	eb000000	 bl          |??3@YAXPAX@Z|
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M37560|

			 ENDP  ; |?_Freenode@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@IAAXPAU_Node@12@@Z|, ce::list<PolicyAdapter *,ce::allocator>::_Freenode

	EXPORT	|??Eiterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAAAAV012@XZ| ; ce::list<PolicyAdapter *,ce::allocator>::iterator::operator++

  00000			 AREA	 |.pdata|, PDATA
|$T37572| DCD	|$LN5@operator|
	DCD	0x40000500
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??Eiterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAAAAV012@XZ| PROC ; ce::list<PolicyAdapter *,ce::allocator>::iterator::operator++

; 530  :             {_Ptr = _Ptr->_Next;

  00000		 |$LN5@operator|
  00000		 |$M37569|
  00000	e1a02000	 mov         r2, r0
  00004	e5923000	 ldr         r3, [r2]

; 531  :             return (*this); }

  00008	e5933004	 ldr         r3, [r3, #4]
  0000c	e5823000	 str         r3, [r2]
  00010	e12fff1e	 bx          lr
  00014		 |$M37570|

			 ENDP  ; |??Eiterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAAAAV012@XZ|, ce::list<PolicyAdapter *,ce::allocator>::iterator::operator++

	EXPORT	|??8iterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QBA_NABV012@@Z| ; ce::list<PolicyAdapter *,ce::allocator>::iterator::operator==

  00000			 AREA	 |.pdata|, PDATA
|$T37585| DCD	|$LN7@operator@2|
	DCD	0x40000800
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??8iterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QBA_NABV012@@Z| PROC ; ce::list<PolicyAdapter *,ce::allocator>::iterator::operator==

; 544  :             {return (_Ptr == it._Ptr); }

  00000		 |$LN7@operator@2|
  00000		 |$M37582|
  00000	e5902000	 ldr         r2, [r0]
  00004	e5913000	 ldr         r3, [r1]
  00008	e1520003	 cmp         r2, r3
  0000c	03a03001	 moveq       r3, #1
  00010	020300ff	 andeq       r0, r3, #0xFF
  00014	13a03000	 movne       r3, #0
  00018	120300ff	 andne       r0, r3, #0xFF
  0001c	e12fff1e	 bx          lr
  00020		 |$M37583|

			 ENDP  ; |??8iterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QBA_NABV012@@Z|, ce::list<PolicyAdapter *,ce::allocator>::iterator::operator==

	EXPORT	|??0const_iterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA@PAU_Node@12@@Z| ; ce::list<PolicyAdapter *,ce::allocator>::const_iterator::const_iterator

  00000			 AREA	 |.pdata|, PDATA
|$T37596| DCD	|$LN5@const_iter|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0const_iterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA@PAU_Node@12@@Z| PROC ; ce::list<PolicyAdapter *,ce::allocator>::const_iterator::const_iterator

; 484  :         const_iterator(_NodePtr _P)

  00000		 |$LN5@const_iter|
  00000		 |$M37593|
  00000	e5801000	 str         r1, [r0]
  00004	e12fff1e	 bx          lr
  00008		 |$M37594|

			 ENDP  ; |??0const_iterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA@PAU_Node@12@@Z|, ce::list<PolicyAdapter *,ce::allocator>::const_iterator::const_iterator

	EXPORT	|?_MyNode@const_iterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QBAPAU_Node@23@XZ| ; ce::list<PolicyAdapter *,ce::allocator>::const_iterator::_MyNode

  00000			 AREA	 |.pdata|, PDATA
|$T37606| DCD	|$LN5@MyNode|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?_MyNode@const_iterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QBAPAU_Node@23@XZ| PROC ; ce::list<PolicyAdapter *,ce::allocator>::const_iterator::_MyNode

; 511  :             {return (_Ptr); }

  00000		 |$LN5@MyNode|
  00000		 |$M37603|
  00000	e5900000	 ldr         r0, [r0]
  00004	e12fff1e	 bx          lr
  00008		 |$M37604|

			 ENDP  ; |?_MyNode@const_iterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QBAPAU_Node@23@XZ|, ce::list<PolicyAdapter *,ce::allocator>::const_iterator::_MyNode

	EXPORT	|??0iterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA@PAU_Node@12@@Z| ; ce::list<PolicyAdapter *,ce::allocator>::iterator::iterator

  00000			 AREA	 |.pdata|, PDATA
|$T37620| DCD	|$LN7@iterator|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0iterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA@PAU_Node@12@@Z| PROC ; ce::list<PolicyAdapter *,ce::allocator>::iterator::iterator

; 523  :         iterator(_NodePtr _P)

  00000		 |$LN7@iterator|
  00000		 |$M37617|
  00000	e5801000	 str         r1, [r0]
  00004	e12fff1e	 bx          lr
  00008		 |$M37618|

			 ENDP  ; |??0iterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA@PAU_Node@12@@Z|, ce::list<PolicyAdapter *,ce::allocator>::iterator::iterator

	EXPORT	|??Eiterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA?AV012@H@Z| ; ce::list<PolicyAdapter *,ce::allocator>::iterator::operator++

  00000			 AREA	 |.pdata|, PDATA
|$T37634| DCD	|$LN7@operator@3|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??Eiterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA?AV012@H@Z| PROC ; ce::list<PolicyAdapter *,ce::allocator>::iterator::operator++

; 533  :             {iterator Tmp = *this;

  00000		 |$LN7@operator@3|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37631|
  00004	e1a0e000	 mov         lr, r0
  00008	e59e2000	 ldr         r2, [lr]

; 534  :             ++*this;
; 535  :             return (Tmp); }

  0000c	e1a00001	 mov         r0, r1
  00010	e5923004	 ldr         r3, [r2, #4]
  00014	e5812000	 str         r2, [r1]
  00018	e58e3000	 str         r3, [lr]
  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M37632|

			 ENDP  ; |??Eiterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA?AV012@H@Z|, ce::list<PolicyAdapter *,ce::allocator>::iterator::operator++

	EXPORT	|??9iterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QBA_NABV012@@Z| ; ce::list<PolicyAdapter *,ce::allocator>::iterator::operator!=

  00000			 AREA	 |.pdata|, PDATA
|$T37654| DCD	|$LN11@operator@4|
	DCD	0x40000b00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??9iterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QBA_NABV012@@Z| PROC ; ce::list<PolicyAdapter *,ce::allocator>::iterator::operator!=

; 546  :             {return (!(*this == it)); }

  00000		 |$LN11@operator@4|
  00000		 |$M37651|
  00000	e5902000	 ldr         r2, [r0]
  00004	e5913000	 ldr         r3, [r1]
  00008	e1520003	 cmp         r2, r3
  0000c	03a03001	 moveq       r3, #1
  00010	13a03000	 movne       r3, #0
  00014	e21330ff	 ands        r3, r3, #0xFF
  00018	03a03001	 moveq       r3, #1
  0001c	020300ff	 andeq       r0, r3, #0xFF
  00020	13a03000	 movne       r3, #0
  00024	120300ff	 andne       r0, r3, #0xFF
  00028	e12fff1e	 bx          lr
  0002c		 |$M37652|

			 ENDP  ; |??9iterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QBA_NABV012@@Z|, ce::list<PolicyAdapter *,ce::allocator>::iterator::operator!=

	EXPORT	|??__Fcs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@YAXXZ| ; `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::`dynamic atexit destructor for 'cs''
	EXPORT	|??_B?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@51| [ DATA ] ; `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::`local static guard'
	EXPORT	|?get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ| ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock
	EXPORT	|?cs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@3@XZ@4V43@A| [ DATA ] ; `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::cs
	IMPORT	|atexit|
; File c:\wince600\public\common\oak\inc\sync.hxx

  00000			 AREA	 |.bss|, NOINIT
|??_B?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@51| % 0x4 ; `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::`local static guard'

  00000			 AREA	 |.bss|, NOINIT
|?cs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@3@XZ@4V43@A| % 0x14 ; `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::cs

  00000			 AREA	 |.pdata|, PDATA
|$T37666| DCD	|$LN8@get_lock|
	DCD	0x40001602
; Function compile flags: /Ogspy
; File c:\wince600\public\common\oak\inc\singleton.hxx

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ| PROC ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock

; 320  :     {

  00000		 |$LN8@get_lock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M37663|

; 321  :         static critical_section cs;

  00008	e59f2044	 ldr         r2, [pc, #0x44]
  0000c	e5923000	 ldr         r3, [r2]
  00010	e3130001	 tst         r3, #1
  00014	1a000005	 bne         |$LN1@get_lock|
  00018	e59f0028	 ldr         r0, [pc, #0x28]
  0001c	e3833001	 orr         r3, r3, #1
  00020	e5823000	 str         r3, [r2]
  00024	eb000000	 bl          InitializeCriticalSection
  00028	e59f0020	 ldr         r0, [pc, #0x20]
  0002c	eb000000	 bl          atexit
  00030		 |$LN1@get_lock|

; 322  :         
; 323  :         //
; 324  :         // This statement forces compiler to instantiate _factory member
; 325  :         // thus assuring that lock_factory ctor is called. 
; 326  :         //
; 327  :         lock_factory* volatile p = &_factory;

  00030	e59f3014	 ldr         r3, [pc, #0x14]

; 328  : 
; 329  :         return cs;
; 330  :     }

  00034	e59f000c	 ldr         r0, [pc, #0xC]
  00038	e58d3000	 str         r3, [sp]
  0003c	e28dd004	 add         sp, sp, #4
  00040	e49de004	 ldr         lr, [sp], #4
  00044	e12fff1e	 bx          lr
  00048		 |$LN9@get_lock|
  00048		 |$LN10@get_lock|
  00048	00000000	 DCD         |?cs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@3@XZ@4V43@A|
  0004c		 |$LN11@get_lock|
  0004c	00000000	 DCD         |?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A|
  00050		 |$LN12@get_lock|
  00050	00000000	 DCD         |??__Fcs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@YAXXZ|
  00054		 |$LN13@get_lock|
  00054	00000000	 DCD         |??_B?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@51|
  00058		 |$M37664|

			 ENDP  ; |?get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ|, ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock

	EXPORT	|??0lock_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@QAA@XZ| ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::lock_factory::lock_factory

  00000			 AREA	 |.pdata|, PDATA
|$T37681| DCD	|$LN5@lock_facto|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0lock_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@QAA@XZ| PROC ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::lock_factory::lock_factory

; 339  :         lock_factory()

  00000		 |$LN5@lock_facto|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37678|
  00004	e1a04000	 mov         r4, r0
  00008	eb000000	 bl          |?get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ|

; 340  :             {get_lock(); }

  0000c	e1a00004	 mov         r0, r4
  00010	e8bd4010	 ldmia       sp!, {r4, lr}
  00014	e12fff1e	 bx          lr
  00018		 |$M37679|

			 ENDP  ; |??0lock_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@QAA@XZ|, ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::lock_factory::lock_factory

	EXPORT	|?begin@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@XZ| ; ce::list<PolicyAdapter *,ce::allocator>::begin
; File c:\wince600\public\common\oak\inc\list.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T37701| DCD	|$LN9@begin|
	DCD	0x40000500
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?begin@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@XZ| PROC ; ce::list<PolicyAdapter *,ce::allocator>::begin

; 229  :         {return (iterator(_Head->_Next)); }

  00000		 |$LN9@begin|
  00000		 |$M37698|
  00000	e5903000	 ldr         r3, [r0]
  00004	e1a00001	 mov         r0, r1
  00008	e5933004	 ldr         r3, [r3, #4]
  0000c	e5813000	 str         r3, [r1]
  00010	e12fff1e	 bx          lr
  00014		 |$M37699|

			 ENDP  ; |?begin@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@XZ|, ce::list<PolicyAdapter *,ce::allocator>::begin

	EXPORT	|?end@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@XZ| ; ce::list<PolicyAdapter *,ce::allocator>::end

  00000			 AREA	 |.pdata|, PDATA
|$T37721| DCD	|$LN9@end|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?end@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@XZ| PROC ; ce::list<PolicyAdapter *,ce::allocator>::end

; 236  :         {return (iterator(_Head)); }

  00000		 |$LN9@end|
  00000		 |$M37718|
  00000	e5903000	 ldr         r3, [r0]
  00004	e1a00001	 mov         r0, r1
  00008	e5813000	 str         r3, [r1]
  0000c	e12fff1e	 bx          lr
  00010		 |$M37719|

			 ENDP  ; |?end@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@XZ|, ce::list<PolicyAdapter *,ce::allocator>::end

	EXPORT	|?erase@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@V312@@Z| ; ce::list<PolicyAdapter *,ce::allocator>::erase
; File c:\wince600\public\common\oak\inc\allocator.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T37758| DCD	|$LN15@erase|
	DCD	0x40001503
; Function compile flags: /Ogspy
; File c:\wince600\public\common\oak\inc\list.hxx

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?erase@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@V312@@Z| PROC ; ce::list<PolicyAdapter *,ce::allocator>::erase

; 359  :     {

  00000		 |$LN15@erase|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5070	 stmdb       sp!, {r4 - r6, r12, lr}
  0000c		 |$M37755|
  0000c	e1a05001	 mov         r5, r1
  00010	e1a06000	 mov         r6, r0

; 360  :         assert(Where != end());
; 361  :         
; 362  :         _NodePtr WhereNode = (Where++)._MyNode();
; 363  : 
; 364  :         assert(WhereNode);
; 365  :         __assume(WhereNode);
; 366  :         assert(WhereNode->_Prev);
; 367  :         __assume(WhereNode->_Prev);
; 368  :         assert(WhereNode->_Next);
; 369  :         __assume(WhereNode->_Next);
; 370  :         
; 371  :         WhereNode->_Prev->_Next = WhereNode->_Next;

  00014	e592e008	 ldr         lr, [r2, #8]
  00018	e5923004	 ldr         r3, [r2, #4]

; 372  :         WhereNode->_Next->_Prev = WhereNode->_Prev;
; 373  :         
; 374  :         WhereNode->_Value.~T();
; 375  :         _Freenode(WhereNode);

  0001c	e1a00002	 mov         r0, r2
  00020	e1a04003	 mov         r4, r3
  00024	e58e3004	 str         r3, [lr, #4]
  00028	e592e004	 ldr         lr, [r2, #4]
  0002c	e5923008	 ldr         r3, [r2, #8]
  00030	e58e3008	 str         r3, [lr, #8]
  00034	eb000000	 bl          |??3@YAXPAX@Z|

; 376  :         
; 377  :         --_Size;

  00038	e596300c	 ldr         r3, [r6, #0xC]

; 378  :         
; 379  :         return Where;

  0003c	e5854000	 str         r4, [r5]

; 380  :     }

  00040	e1a00005	 mov         r0, r5
  00044	e2433001	 sub         r3, r3, #1
  00048	e586300c	 str         r3, [r6, #0xC]
  0004c	e89d6070	 ldmia       sp, {r4 - r6, sp, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$M37756|

			 ENDP  ; |?erase@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@V312@@Z|, ce::list<PolicyAdapter *,ce::allocator>::erase

	EXPORT	|?erase@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@V312@0@Z| ; ce::list<PolicyAdapter *,ce::allocator>::erase

  00000			 AREA	 |.pdata|, PDATA
|$T37802| DCD	|$LN20@erase@2|
	DCD	0x40001b04
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?erase@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@V312@0@Z| PROC ; ce::list<PolicyAdapter *,ce::allocator>::erase

; 383  :     {    

  00000		 |$LN20@erase@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d50f0	 stmdb       sp!, {r4 - r7, r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M37799|
  00010	e1a06003	 mov         r6, r3
  00014	e1a04002	 mov         r4, r2
  00018	e1a05001	 mov         r5, r1
  0001c	e1a07000	 mov         r7, r0
  00020		 |$LL2@erase@2|

; 384  :         while (First != Last)

  00020	e1540006	 cmp         r4, r6
  00024	03a02001	 moveq       r2, #1
  00028	13a02000	 movne       r2, #0
  0002c	e21230ff	 ands        r3, r2, #0xFF
  00030	03a03001	 moveq       r3, #1
  00034	13a03000	 movne       r3, #0
  00038	e21330ff	 ands        r3, r3, #0xFF

; 388  :     }

  0003c	0a000005	 beq         |$LN1@erase@2|
  00040	e1a02004	 mov         r2, r4
  00044	e5944004	 ldr         r4, [r4, #4]
  00048	e28d1000	 add         r1, sp, #0
  0004c	e1a00007	 mov         r0, r7
  00050	eb000000	 bl          |?erase@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@V312@@Z|
  00054	eafffff1	 b           |$LL2@erase@2|
  00058		 |$LN1@erase@2|

; 385  :             erase(First++);
; 386  :         
; 387  :         return First; 

  00058	e5854000	 str         r4, [r5]

; 388  :     }

  0005c	e1a00005	 mov         r0, r5
  00060	e28dd004	 add         sp, sp, #4
  00064	e89d60f0	 ldmia       sp, {r4 - r7, sp, lr}
  00068	e12fff1e	 bx          lr
  0006c		 |$M37800|

			 ENDP  ; |?erase@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@V312@0@Z|, ce::list<PolicyAdapter *,ce::allocator>::erase

	EXPORT	|?clear@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAAXXZ| ; ce::list<PolicyAdapter *,ce::allocator>::clear

  00000			 AREA	 |.pdata|, PDATA
|$T37847| DCD	|$LN17@clear|
	DCD	0x40000902
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?clear@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAAXXZ| PROC ; ce::list<PolicyAdapter *,ce::allocator>::clear

; 265  :         {erase(begin(), end());}

  00000		 |$LN17@clear|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M37844|
  00008	e5903000	 ldr         r3, [r0]
  0000c	e28d1000	 add         r1, sp, #0
  00010	e5932004	 ldr         r2, [r3, #4]
  00014	eb000000	 bl          |?erase@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@V312@0@Z|
  00018	e28dd004	 add         sp, sp, #4
  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M37845|

			 ENDP  ; |?clear@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAAXXZ|, ce::list<PolicyAdapter *,ce::allocator>::clear

	EXPORT	|??1?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA@XZ| ; ce::list<PolicyAdapter *,ce::allocator>::~list<PolicyAdapter *,ce::allocator>

  00000			 AREA	 |.pdata|, PDATA
|$T37910| DCD	|$LN19@list@2|
	DCD	0x40000902
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA@XZ| PROC ; ce::list<PolicyAdapter *,ce::allocator>::~list<PolicyAdapter *,ce::allocator>

; 214  :     {

  00000		 |$LN19@list@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M37907|

; 215  :         clear();

  00008	e5903000	 ldr         r3, [r0]
  0000c	e28d1000	 add         r1, sp, #0
  00010	e5932004	 ldr         r2, [r3, #4]
  00014	eb000000	 bl          |?erase@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@V312@0@Z|

; 216  :     }

  00018	e28dd004	 add         sp, sp, #4
  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M37908|

			 ENDP  ; |??1?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA@XZ|, ce::list<PolicyAdapter *,ce::allocator>::~list<PolicyAdapter *,ce::allocator>

	EXPORT	|??0PolicyContainer@@QAA@XZ|		; PolicyContainer::PolicyContainer

  00000			 AREA	 |.pdata|, PDATA
|$T37923| DCD	|$LN7@PolicyCont@2|
	DCD	0x40000800
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\powerpolicyroot\policycontainer.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0PolicyContainer@@QAA@XZ| PROC	; PolicyContainer::PolicyContainer

; 42   :     PolicyContainer() : PolicyList() {};

  00000		 |$LN7@PolicyCont@2|
  00000		 |$M37920|
  00000	e3a03000	 mov         r3, #0
  00004	e580300c	 str         r3, [r0, #0xC]
  00008	e5800000	 str         r0, [r0]
  0000c	e5800004	 str         r0, [r0, #4]
  00010	e5902000	 ldr         r2, [r0]
  00014	e5923004	 ldr         r3, [r2, #4]
  00018	e5823008	 str         r3, [r2, #8]
  0001c	e12fff1e	 bx          lr
  00020		 |$M37921|

			 ENDP  ; |??0PolicyContainer@@QAA@XZ|, PolicyContainer::PolicyContainer

	EXPORT	|??1PolicyContainer@@QAA@XZ|		; PolicyContainer::~PolicyContainer

  00000			 AREA	 |.pdata|, PDATA
|$T38006| DCD	|$LN21@PolicyCont@3|
	DCD	0x40000902
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1PolicyContainer@@QAA@XZ| PROC	; PolicyContainer::~PolicyContainer
  00000		 |$LN21@PolicyCont@3|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M38003|
  00008	e5903000	 ldr         r3, [r0]
  0000c	e28d1000	 add         r1, sp, #0
  00010	e5932004	 ldr         r2, [r3, #4]
  00014	eb000000	 bl          |?erase@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@V312@0@Z|
  00018	e28dd004	 add         sp, sp, #4
  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M38004|

			 ENDP  ; |??1PolicyContainer@@QAA@XZ|, PolicyContainer::~PolicyContainer

	EXPORT	|??1PolicyRoot@@QAA@XZ|			; PolicyRoot::~PolicyRoot

  00000			 AREA	 |.pdata|, PDATA
|$T38113| DCD	|$LN23@PolicyRoot|
	DCD	0x40000902
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1PolicyRoot@@QAA@XZ| PROC		; PolicyRoot::~PolicyRoot
  00000		 |$LN23@PolicyRoot|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M38110|
  00008	e5b03208	 ldr         r3, [r0, #0x208]!
  0000c	e28d1000	 add         r1, sp, #0
  00010	e5932004	 ldr         r2, [r3, #4]
  00014	eb000000	 bl          |?erase@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@V312@0@Z|
  00018	e28dd004	 add         sp, sp, #4
  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M38111|

			 ENDP  ; |??1PolicyRoot@@QAA@XZ|, PolicyRoot::~PolicyRoot

	EXPORT	|??0PolicyRoot@@QAA@XZ|			; PolicyRoot::PolicyRoot
; File c:\wince600\public\common\oak\inc\list.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T38133| DCD	|$LN9@PolicyRoot@2|
	DCD	0x40000f01
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\powerpolicyroot\policyroot.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0PolicyRoot@@QAA@XZ| PROC		; PolicyRoot::PolicyRoot

; 54   :     {

  00000		 |$LN9@PolicyRoot@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M38130|
  00004	e1a01000	 mov         r1, r0
  00008	e2813f82	 add         r3, r1, #0x82, 30
  0000c	e3a0e000	 mov         lr, #0
  00010	e5833000	 str         r3, [r3]
  00014	e583e00c	 str         lr, [r3, #0xC]
  00018	e5833004	 str         r3, [r3, #4]
  0001c	e5932000	 ldr         r2, [r3]

; 55   :         *m_szPolicyKey = NULL;
; 56   :         
; 57   :     }

  00020	e5923004	 ldr         r3, [r2, #4]
  00024	e5823008	 str         r3, [r2, #8]
  00028	e581e218	 str         lr, [r1, #0x218]
  0002c	e581e21c	 str         lr, [r1, #0x21C]
  00030	e1c1e0b0	 strh        lr, [r1]
  00034	e49de004	 ldr         lr, [sp], #4
  00038	e12fff1e	 bx          lr
  0003c		 |$M38131|

			 ENDP  ; |??0PolicyRoot@@QAA@XZ|, PolicyRoot::PolicyRoot

	EXPORT	|??_GPolicyRoot@@QAAPAXI@Z|		; PolicyRoot::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T38267| DCD	|$LN26@scalar|
	DCD	0x40000f02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GPolicyRoot@@QAAPAXI@Z| PROC	; PolicyRoot::`scalar deleting destructor'
  00000		 |$LN26@scalar|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M38264|
  00008	e1a04001	 mov         r4, r1
  0000c	e1a05000	 mov         r5, r0
  00010	e5b03208	 ldr         r3, [r0, #0x208]!
  00014	e28d1000	 add         r1, sp, #0
  00018	e5932004	 ldr         r2, [r3, #4]
  0001c	eb000000	 bl          |?erase@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@V312@0@Z|
  00020	e3140001	 tst         r4, #1
  00024	11a00005	 movne       r0, r5
  00028	1b000000	 blne        |??3@YAXPAX@Z|
  0002c	e1a00005	 mov         r0, r5
  00030	e28dd004	 add         sp, sp, #4
  00034	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$M38265|

			 ENDP  ; |??_GPolicyRoot@@QAAPAXI@Z|, PolicyRoot::`scalar deleting destructor'

	EXPORT	|?UninitializePolicyRoot@@YAXK@Z|	; UninitializePolicyRoot
; File c:\wince600\public\common\oak\inc\list.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T38433| DCD	|$LN33@Uninitiali@2|
	DCD	0x40001802
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\powerpolicyroot\api.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UninitializePolicyRoot@@YAXK@Z| PROC	; UninitializePolicyRoot

; 40   : {

  00000		 |$LN33@Uninitiali@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M38430|

; 41   :     UNREFERENCED_PARAMETER(dwExtContext);
; 42   : 
; 43   :     // delete policy root if initialization failed
; 44   :     if (g_pPolicyRoot != NULL)

  00008	e59f404c	 ldr         r4, [pc, #0x4C]
  0000c	e5943000	 ldr         r3, [r4]
  00010	e3530000	 cmp         r3, #0
  00014	0a00000b	 beq         |$LN4@Uninitiali@2|

; 45   :         {
; 46   :         g_pPolicyRoot->Uninitialize();

  00018	e2830f82	 add         r0, r3, #0x82, 30
  0001c	eb000000	 bl          |?Uninitialize@PolicyContainer@@QAAXXZ|

; 47   :         delete g_pPolicyRoot;

  00020	e5945000	 ldr         r5, [r4]
  00024	e3550000	 cmp         r5, #0
  00028	0a000006	 beq         |$LN4@Uninitiali@2|
  0002c	e1a00005	 mov         r0, r5
  00030	e5b03208	 ldr         r3, [r0, #0x208]!
  00034	e28d1000	 add         r1, sp, #0
  00038	e5932004	 ldr         r2, [r3, #4]
  0003c	eb000000	 bl          |?erase@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@V312@0@Z|
  00040	e1a00005	 mov         r0, r5
  00044	eb000000	 bl          |??3@YAXPAX@Z|
  00048		 |$LN4@Uninitiali@2|

; 48   :         }
; 49   :     
; 50   :     g_pPolicyRoot = NULL;    

  00048	e3a03000	 mov         r3, #0
  0004c	e5843000	 str         r3, [r4]

; 51   : }

  00050	e28dd004	 add         sp, sp, #4
  00054	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00058	e12fff1e	 bx          lr
  0005c		 |$LN34@Uninitiali@2|
  0005c		 |$LN35@Uninitiali@2|
  0005c	00000000	 DCD         |?g_pPolicyRoot@@3PAVPolicyRoot@@A|
  00060		 |$M38431|

			 ENDP  ; |?UninitializePolicyRoot@@YAXK@Z|, UninitializePolicyRoot

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|?InitializePolicyRoot@@YAKPAUHKEY__@@PBG@Z| ; InitializePolicyRoot
	EXPORT	|??_C@_1CA@IJGOHECG@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAR?$AAo?$AAo?$AAt?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|?Initialize@PolicyRoot@@QAAHPBG@Z|	; PolicyRoot::Initialize
; File c:\wince600\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.pdata|, PDATA
|$T38496| DCD	|$LN32@Initialize|
	DCD	0xc0004702

  00000			 AREA	 |.xdata|, DATA
|$T38492| DCD	0xffffffe4

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@IJGOHECG@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAR?$AAo?$AAo?$AAt?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "P", 0x0, "o"
	DCB	0x0, "l", 0x0, "i", 0x0, "c", 0x0, "y", 0x0, "R", 0x0, "o"
	DCB	0x0, "o", 0x0, "t", 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\powerpolicyroot\api.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T38492|

  00008		 |?InitializePolicyRoot@@YAKPAUHKEY__@@PBG@Z| PROC ; InitializePolicyRoot

; 64   : {   

  00008		 |$LN32@Initialize|
  00008	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  0000c	e24dde22	 sub         sp, sp, #0x22, 28
  00010		 |$M38493|
  00010	e1a02001	 mov         r2, r1
  00014	e59f3104	 ldr         r3, [pc, #0x104]
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d321c	 str         r3, [sp, #0x21C]
  00020	e1a01000	 mov         r1, r0

; 65   :     DWORD rc = FALSE;
; 66   :     _TCHAR szBuffer[MAX_PATH];
; 67   :     CRegistryEdit Registry(hKey, lpRegistryPath);

  00024	e28d0008	 add         r0, sp, #8
  00028	e3a06000	 mov         r6, #0
  0002c	eb000000	 bl          |??0CRegistryEdit@@QAA@PAUHKEY__@@PBG@Z|

; 68   : 
; 69   :     // initialize the policy root object
; 70   :     g_pPolicyRoot = new PolicyRoot();

  00030	e3a00e22	 mov         r0, #0x22, 28
  00034	eb000000	 bl          |??2@YAPAXI@Z|
  00038	e59f50dc	 ldr         r5, [pc, #0xDC]
  0003c	e3500000	 cmp         r0, #0
  00040	0a00000b	 beq         |$LN9@Initialize|
  00044	e2803f82	 add         r3, r0, #0x82, 30
  00048	e3a01000	 mov         r1, #0
  0004c	e5833000	 str         r3, [r3]
  00050	e583100c	 str         r1, [r3, #0xC]
  00054	e5833004	 str         r3, [r3, #4]
  00058	e5932000	 ldr         r2, [r3]
  0005c	e5923004	 ldr         r3, [r2, #4]
  00060	e5823008	 str         r3, [r2, #8]
  00064	e5801218	 str         r1, [r0, #0x218]
  00068	e580121c	 str         r1, [r0, #0x21C]
  0006c	e1c010b0	 strh        r1, [r0]
  00070	ea000000	 b           |$LN29@Initialize|
  00074		 |$LN9@Initialize|
  00074	e3a00000	 mov         r0, #0
  00078		 |$LN29@Initialize|
  00078	e5850000	 str         r0, [r5]

; 71   :     if (g_pPolicyRoot == NULL) goto cleanUp;

  0007c	e3500000	 cmp         r0, #0
  00080	0a00001a	 beq         |$LN26@Initialize|

; 72   : 
; 73   :     // Read device parameters
; 74   :     DWORD dwType = REG_SZ;
; 75   :     DWORD dwSize = sizeof(szBuffer);
; 76   :     if (TRUE == Registry.RegQueryValueEx(REGEDIT_POLICY_ROOT,
; 77   :             &dwType, (BYTE*)szBuffer, &dwSize))

  00084	e59f108c	 ldr         r1, [pc, #0x8C]
  00088	e59d0008	 ldr         r0, [sp, #8]
  0008c	e3a07001	 mov         r7, #1
  00090	e3a08f82	 mov         r8, #0x82, 30
  00094	e28de010	 add         lr, sp, #0x10
  00098	e28d4014	 add         r4, sp, #0x14
  0009c	e28d300c	 add         r3, sp, #0xC
  000a0	e3a02000	 mov         r2, #0
  000a4	e58d700c	 str         r7, [sp, #0xC]
  000a8	e58d8010	 str         r8, [sp, #0x10]
  000ac	e58de004	 str         lr, [sp, #4]
  000b0	e58d4000	 str         r4, [sp]
  000b4	eb000000	 bl          RegQueryValueExW
  000b8	e3500000	 cmp         r0, #0
  000bc	1a000004	 bne         |$LN3@Initialize|

; 78   :         {        
; 79   :         if (g_pPolicyRoot->Initialize(szBuffer) == FALSE)

  000c0	e5950000	 ldr         r0, [r5]
  000c4	e28d1014	 add         r1, sp, #0x14
  000c8	eb000000	 bl          |?Initialize@PolicyRoot@@QAAHPBG@Z|
  000cc	e3500000	 cmp         r0, #0
  000d0	0a000005	 beq         |$LN28@Initialize|
  000d4		 |$LN3@Initialize|

; 80   :             {
; 81   :             goto cleanUp;
; 82   :             }
; 83   :         }
; 84   : 
; 85   :     // indicate success by returning a reference to global
; 86   :     //
; 87   :     rc = g_pPolicyRoot->PostInitialize();

  000d4	e5953000	 ldr         r3, [r5]
  000d8	e1a01003	 mov         r1, r3
  000dc	e2830f82	 add         r0, r3, #0x82, 30
  000e0	eb000000	 bl          |?PostInitialize@PolicyContainer@@QAAHPAVPolicyRoot@@@Z|
  000e4	e1b06000	 movs        r6, r0
  000e8		 |$cleanUp$36297|

; 88   : 
; 89   : cleanUp:
; 90   :     if (rc == FALSE) UninitializePolicyRoot((DWORD)g_pPolicyRoot);

  000e8	1a000001	 bne         |$LN1@Initialize|
  000ec		 |$LN28@Initialize|
  000ec	e5950000	 ldr         r0, [r5]
  000f0		 |$LN26@Initialize|
  000f0	eb000000	 bl          |?UninitializePolicyRoot@@YAXK@Z|
  000f4		 |$LN1@Initialize|

; 91   :     
; 92   :     return rc;

  000f4	e59d0008	 ldr         r0, [sp, #8]
  000f8	e3500000	 cmp         r0, #0
  000fc	1b000000	 blne        RegCloseKey
  00100	e59d021c	 ldr         r0, [sp, #0x21C]
  00104	eb000000	 bl          __security_check_cookie

; 93   : }

  00108	e1a00006	 mov         r0, r6
  0010c	e28dde22	 add         sp, sp, #0x22, 28
  00110	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00114	e12fff1e	 bx          lr
  00118		 |$LN33@Initialize|
  00118		 |$LN34@Initialize|
  00118	00000000	 DCD         |??_C@_1CA@IJGOHECG@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAR?$AAo?$AAo?$AAt?$AA?$AA@|
  0011c		 |$LN35@Initialize|
  0011c	00000000	 DCD         |?g_pPolicyRoot@@3PAVPolicyRoot@@A|
  00120		 |$LN36@Initialize|
  00120	00000000	 DCD         |__security_cookie|
  00124		 |$M38494|

			 ENDP  ; |?InitializePolicyRoot@@YAKPAUHKEY__@@PBG@Z|, InitializePolicyRoot

; File c:\wince600\public\common\oak\inc\singleton.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T38511| DCD	|$LN7@factory|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text$yc|, CODE, ARM

  00000		 |??__E?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A@@YAXXZ| PROC ; `dynamic initializer for 'ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::_factory''

; 390  :     {

  00000		 |$LN7@factory|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M38508|
  00004	eb000000	 bl          |?get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ|
  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M38509|

			 ENDP  ; |??__E?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A@@YAXXZ|, `dynamic initializer for 'ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::_factory''


  00000			 AREA	 |.pdata|, PDATA
|$T38521| DCD	|$LN7@dynamic|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text$yd|, CODE, ARM

  00000		 |??__Fcs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@YAXXZ| PROC ; `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::`dynamic atexit destructor for 'cs''
  00000		 |$LN7@dynamic|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M38518|
  00004	e59f0008	 ldr         r0, [pc, #8]
  00008	eb000000	 bl          DeleteCriticalSection
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$LN8@dynamic|
  00014		 |$LN9@dynamic|
  00014	00000000	 DCD         |?cs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@3@XZ@4V43@A|
  00018		 |$M38519|

			 ENDP  ; |??__Fcs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@YAXXZ|, `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::`dynamic atexit destructor for 'cs''

	EXPORT	|?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A| [ DATA ] ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::_factory

  00000			 AREA	 |.bss|, NOINIT
|?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A| % 0x1 ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::_factory

  00000			 AREA	 |.CRT$XCU|, DATA
|?_factory$initializer$@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1P6AXXZA| DCD |??__E?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A@@YAXXZ| ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::_factory$initializer$
	END
