; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\PM\POWERPOLICYROOT\policyroot.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"/include:?_factory@?$$singleton@V?$$free_list@$$0GE@Vall"
	DCB	"ocator@ce@@@ce@@$$03V?$$static_allocator@V?$$free_list@$$"
	DCB	"0GE@Vallocator@ce@@@ce@@$$03@2@@ce@@1Ulock_factory@12@A "
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??0PolicyAdapter@@QAA@XZ|		; PolicyAdapter::PolicyAdapter
	IMPORT	|memset|
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\powerpolicyroot\policyadapter.h

  00000			 AREA	 |.pdata|, PDATA
|$T36359| DCD	|$LN5@PolicyAdap|
	DCD	0x40001501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0PolicyAdapter@@QAA@XZ| PROC	; PolicyAdapter::PolicyAdapter

; 87   :     {

  00000		 |$LN5@PolicyAdap|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M36356|
  00004	e1a05000	 mov         r5, r0

; 88   :         *m_szDll = NULL;
; 89   :         *m_szRegKey = NULL;
; 90   :         *m_szPolicyName = NULL;
; 91   :         memset(&m_fns, 0, sizeof(PolicyAdapterFns));

  00008	e2853c06	 add         r3, r5, #6, 24
  0000c	e2830024	 add         r0, r3, #0x24
  00010	e3a03000	 mov         r3, #0
  00014	e285ec02	 add         lr, r5, #2, 24
  00018	e2854b01	 add         r4, r5, #1, 22
  0001c	e3a02024	 mov         r2, #0x24
  00020	e3a01000	 mov         r1, #0
  00024	e5853000	 str         r3, [r5]
  00028	e5853004	 str         r3, [r5, #4]
  0002c	e5853210	 str         r3, [r5, #0x210]
  00030	e5853648	 str         r3, [r5, #0x648]
  00034	e585364c	 str         r3, [r5, #0x64C]
  00038	e1c530b8	 strh        r3, [r5, #8]
  0003c	e1ce31b4	 strh        r3, [lr, #0x14]
  00040	e1c431bc	 strh        r3, [r4, #0x1C]
  00044	eb000000	 bl          memset

; 92   :     }

  00048	e1a00005	 mov         r0, r5
  0004c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$M36357|

			 ENDP  ; |??0PolicyAdapter@@QAA@XZ|, PolicyAdapter::PolicyAdapter

	EXPORT	|?GetAdapterId@PolicyAdapter@@QBAPBGXZ|	; PolicyAdapter::GetAdapterId

  00000			 AREA	 |.pdata|, PDATA
|$T36369| DCD	|$LN5@GetAdapter|
	DCD	0x40000300
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetAdapterId@PolicyAdapter@@QBAPBGXZ| PROC ; PolicyAdapter::GetAdapterId

; 117  :     {

  00000		 |$LN5@GetAdapter|
  00000		 |$M36366|

; 118  :         return m_szPolicyName;

  00000	e2803b01	 add         r3, r0, #1, 22
  00004	e283001c	 add         r0, r3, #0x1C

; 119  :     }

  00008	e12fff1e	 bx          lr
  0000c		 |$M36367|

			 ENDP  ; |?GetAdapterId@PolicyAdapter@@QBAPBGXZ|, PolicyAdapter::GetAdapterId

	EXPORT	|?PreSystemStateChange@PolicyAdapter@@QAAKKPBGK@Z| ; PolicyAdapter::PreSystemStateChange

  00000			 AREA	 |.pdata|, PDATA
|$T36382| DCD	|$LN6@PreSystemS|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PreSystemStateChange@PolicyAdapter@@QAAKKPBGK@Z| PROC ; PolicyAdapter::PreSystemStateChange

; 154  :     {

  00000		 |$LN6@PreSystemS|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M36379|

; 155  :         if (m_fns.PreSystemStateChange == NULL) return FALSE;

  00004	e590e640	 ldr         lr, [r0, #0x640]
  00008	e1b0400e	 movs        r4, lr
  0000c	03a00000	 moveq       r0, #0

; 157  :     }

  00010	08bd4010	 ldmeqia     sp!, {r4, lr}
  00014	012fff1e	 bxeq        lr

; 156  :         return m_fns.PreSystemStateChange(m_hPolicyAdapter, dwExtContext, lpNewStateName, dwFlags);

  00018	e5900210	 ldr         r0, [r0, #0x210]
  0001c	e1a0e00f	 mov         lr, pc
  00020	e12fff14	 bx          r4

; 157  :     }

  00024	e8bd4010	 ldmia       sp!, {r4, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M36380|

			 ENDP  ; |?PreSystemStateChange@PolicyAdapter@@QAAKKPBGK@Z|, PolicyAdapter::PreSystemStateChange

	EXPORT	|?PostSystemStateChange@PolicyAdapter@@QAAKKPBGK@Z| ; PolicyAdapter::PostSystemStateChange

  00000			 AREA	 |.pdata|, PDATA
|$T36395| DCD	|$LN6@PostSystem|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PostSystemStateChange@PolicyAdapter@@QAAKKPBGK@Z| PROC ; PolicyAdapter::PostSystemStateChange

; 165  :     {

  00000		 |$LN6@PostSystem|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M36392|

; 166  :         if (m_fns.PostSystemStateChange == NULL) return FALSE;

  00004	e590e644	 ldr         lr, [r0, #0x644]
  00008	e1b0400e	 movs        r4, lr
  0000c	03a00000	 moveq       r0, #0

; 168  :     }

  00010	08bd4010	 ldmeqia     sp!, {r4, lr}
  00014	012fff1e	 bxeq        lr

; 167  :         return m_fns.PostSystemStateChange(m_hPolicyAdapter, dwExtContext, lpNewStateName, dwFlags);

  00018	e5900210	 ldr         r0, [r0, #0x210]
  0001c	e1a0e00f	 mov         lr, pc
  00020	e12fff14	 bx          r4

; 168  :     }

  00024	e8bd4010	 ldmia       sp!, {r4, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M36393|

			 ENDP  ; |?PostSystemStateChange@PolicyAdapter@@QAAKKPBGK@Z|, PolicyAdapter::PostSystemStateChange

	EXPORT	|?PreDeviceStateChange@PolicyAdapter@@QAAHIII@Z| ; PolicyAdapter::PreDeviceStateChange

  00000			 AREA	 |.pdata|, PDATA
|$T36408| DCD	|$LN6@PreDeviceS|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PreDeviceStateChange@PolicyAdapter@@QAAHIII@Z| PROC ; PolicyAdapter::PreDeviceStateChange

; 176  :     {

  00000		 |$LN6@PreDeviceS|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M36405|

; 177  :         if (m_fns.PreDeviceStateChange == NULL) return FALSE;

  00004	e590e638	 ldr         lr, [r0, #0x638]
  00008	e1b0400e	 movs        r4, lr
  0000c	03a00000	 moveq       r0, #0

; 179  :     }

  00010	08bd4010	 ldmeqia     sp!, {r4, lr}
  00014	012fff1e	 bxeq        lr

; 178  :         return m_fns.PreDeviceStateChange(m_hPolicyAdapter, dev, oldState, newState);

  00018	e5900210	 ldr         r0, [r0, #0x210]
  0001c	e1a0e00f	 mov         lr, pc
  00020	e12fff14	 bx          r4

; 179  :     }

  00024	e8bd4010	 ldmia       sp!, {r4, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M36406|

			 ENDP  ; |?PreDeviceStateChange@PolicyAdapter@@QAAHIII@Z|, PolicyAdapter::PreDeviceStateChange

	EXPORT	|?PostDeviceStateChange@PolicyAdapter@@QAAHIII@Z| ; PolicyAdapter::PostDeviceStateChange

  00000			 AREA	 |.pdata|, PDATA
|$T36421| DCD	|$LN6@PostDevice|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PostDeviceStateChange@PolicyAdapter@@QAAHIII@Z| PROC ; PolicyAdapter::PostDeviceStateChange

; 187  :     {

  00000		 |$LN6@PostDevice|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M36418|

; 188  :         if (m_fns.PostDeviceStateChange == NULL) return FALSE;

  00004	e590e63c	 ldr         lr, [r0, #0x63C]
  00008	e1b0400e	 movs        r4, lr
  0000c	03a00000	 moveq       r0, #0

; 190  :     }

  00010	08bd4010	 ldmeqia     sp!, {r4, lr}
  00014	012fff1e	 bxeq        lr

; 189  :         return m_fns.PostDeviceStateChange(m_hPolicyAdapter, dev, oldState, newState);

  00018	e5900210	 ldr         r0, [r0, #0x210]
  0001c	e1a0e00f	 mov         lr, pc
  00020	e12fff14	 bx          r4

; 190  :     }

  00024	e8bd4010	 ldmia       sp!, {r4, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M36419|

			 ENDP  ; |?PostDeviceStateChange@PolicyAdapter@@QAAHIII@Z|, PolicyAdapter::PostDeviceStateChange

	EXPORT	|??2@YAPAXIPAX@Z|			; operator new
; File c:\wince600\public\common\sdk\inc\new

  00000			 AREA	 |.pdata|, PDATA
|$T36431| DCD	|$LN5@operator|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??2@YAPAXIPAX@Z| PROC			; operator new

; 73   :     {return (_P); }

  00000		 |$LN5@operator|
  00000		 |$M36428|
  00000	e1a00001	 mov         r0, r1
  00004	e12fff1e	 bx          lr
  00008		 |$M36429|

			 ENDP  ; |??2@YAPAXIPAX@Z|, operator new

	EXPORT	|??0critical_section@ce@@QAA@XZ|	; ce::critical_section::critical_section
	IMPORT	|InitializeCriticalSection|
; File c:\wince600\public\common\oak\inc\sync.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T36441| DCD	|$LN5@critical_s|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0critical_section@ce@@QAA@XZ| PROC	; ce::critical_section::critical_section

; 125  :     critical_section()

  00000		 |$LN5@critical_s|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M36438|
  00004	e1a04000	 mov         r4, r0
  00008	eb000000	 bl          InitializeCriticalSection
  0000c	e1a00004	 mov         r0, r4
  00010	e8bd4010	 ldmia       sp!, {r4, lr}
  00014	e12fff1e	 bx          lr
  00018		 |$M36439|

			 ENDP  ; |??0critical_section@ce@@QAA@XZ|, ce::critical_section::critical_section

	EXPORT	|??1critical_section@ce@@QAA@XZ|	; ce::critical_section::~critical_section
	IMPORT	|DeleteCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T36449| DCD	|$LN5@critical_s@2|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1critical_section@ce@@QAA@XZ| PROC	; ce::critical_section::~critical_section

; 129  :         {DeleteCriticalSection(this); }

  00000		 |$LN5@critical_s@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36446|
  00004	eb000000	 bl          DeleteCriticalSection
  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M36447|

			 ENDP  ; |??1critical_section@ce@@QAA@XZ|, ce::critical_section::~critical_section

	EXPORT	|?allocate@allocator@ce@@QBAPAXI@Z|	; ce::allocator::allocate
	IMPORT	|??2@YAPAXI@Z|				; operator new
; File c:\wince600\public\common\oak\inc\allocator.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T36459| DCD	|$LN5@allocate|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?allocate@allocator@ce@@QBAPAXI@Z| PROC ; ce::allocator::allocate

; 106  :         {return operator new(Size); }

  00000		 |$LN5@allocate|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36456|
  00004	e1a00001	 mov         r0, r1
  00008	eb000000	 bl          |??2@YAPAXI@Z|
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M36457|

			 ENDP  ; |?allocate@allocator@ce@@QBAPAXI@Z|, ce::allocator::allocate

	EXPORT	|?Initialize@PolicyRoot@@QAAHPBG@Z|	; PolicyRoot::Initialize
	IMPORT	|?Initialize@PolicyContainer@@QAAHPBG@Z| ; PolicyContainer::Initialize
	IMPORT	|wcscpy|
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\powerpolicyroot\policyroot.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T36471| DCD	|$LN5@Initialize|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Initialize@PolicyRoot@@QAAHPBG@Z| PROC ; PolicyRoot::Initialize

; 38   : {

  00000		 |$LN5@Initialize|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M36468|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0

; 39   :     DEBUGMSG(ZONE_FUNCTION, (L"PolicyRoot::"
; 40   :         L"+Init('%s', 0x%08x)\r\n", context, this
; 41   :         ));
; 42   :     
; 43   :     m_PolicyContainer.Initialize(context);

  0000c	e2850f82	 add         r0, r5, #0x82, 30
  00010	eb000000	 bl          |?Initialize@PolicyContainer@@QAAHPBG@Z|

; 44   : 
; 45   :     _tcscpy(m_szPolicyKey, context);

  00014	e1a01004	 mov         r1, r4
  00018	e1a00005	 mov         r0, r5
  0001c	eb000000	 bl          wcscpy

; 46   :     
; 47   :     DEBUGMSG(ZONE_FUNCTION, (L"PolicyRoot::"
; 48   :         L"-Init(%d)\r\n", TRUE
; 49   :         ));
; 50   :     return TRUE;

  00020	e3a00001	 mov         r0, #1

; 51   : }

  00024	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M36469|

			 ENDP  ; |?Initialize@PolicyRoot@@QAAHPBG@Z|, PolicyRoot::Initialize

	EXPORT	|?AddDeviceChangeObserver@PolicyRoot@@QAAXPAVPolicyAdapter@@@Z| ; PolicyRoot::AddDeviceChangeObserver

  00000			 AREA	 |.pdata|, PDATA
|$T36484| DCD	|$LN12@AddDeviceC|
	DCD	0x40000d00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AddDeviceChangeObserver@PolicyRoot@@QAAXPAVPolicyAdapter@@@Z| PROC ; PolicyRoot::AddDeviceChangeObserver

; 62   : {

  00000		 |$LN12@AddDeviceC|
  00000		 |$M36481|

; 63   :     PolicyAdapter *pPolicyCurrent;
; 64   :     
; 65   :     // initialize policy
; 66   :     pPolicy->m_pNextDeviceChangeObserver = NULL;

  00000	e3a03000	 mov         r3, #0
  00004	e5813648	 str         r3, [r1, #0x648]

; 67   : 
; 68   :     // insert into list
; 69   :     if (m_pDeviceChangeList == NULL)

  00008	e590321c	 ldr         r3, [r0, #0x21C]
  0000c	e1b02003	 movs        r2, r3
  00010	1a000002	 bne         |$LN4@AddDeviceC|

; 70   :         {
; 71   :         m_pDeviceChangeList = pPolicy;

  00014	e580121c	 str         r1, [r0, #0x21C]

; 84   :         }
; 85   : }

  00018	e12fff1e	 bx          lr
  0001c		 |$LL2@AddDeviceC|

; 72   :         }
; 73   :     else
; 74   :         {
; 75   :         // go to end of list
; 76   :         pPolicyCurrent = m_pDeviceChangeList;
; 77   :         while (pPolicyCurrent->m_pNextDeviceChangeObserver != NULL)
; 78   :             {
; 79   :             pPolicyCurrent = pPolicyCurrent->m_pNextDeviceChangeObserver;

  0001c	e5922648	 ldr         r2, [r2, #0x648]
  00020		 |$LN4@AddDeviceC|
  00020	e5923648	 ldr         r3, [r2, #0x648]
  00024	e3530000	 cmp         r3, #0
  00028	1afffffb	 bne         |$LL2@AddDeviceC|

; 80   :             }
; 81   : 
; 82   :         // append to list
; 83   :         pPolicyCurrent->m_pNextDeviceChangeObserver = pPolicy;

  0002c	e5821648	 str         r1, [r2, #0x648]

; 84   :         }
; 85   : }

  00030	e12fff1e	 bx          lr
  00034		 |$M36482|

			 ENDP  ; |?AddDeviceChangeObserver@PolicyRoot@@QAAXPAVPolicyAdapter@@@Z|, PolicyRoot::AddDeviceChangeObserver

	EXPORT	|?AddSystemChangeObserver@PolicyRoot@@QAAXPAVPolicyAdapter@@@Z| ; PolicyRoot::AddSystemChangeObserver

  00000			 AREA	 |.pdata|, PDATA
|$T36497| DCD	|$LN12@AddSystemC|
	DCD	0x40000d00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AddSystemChangeObserver@PolicyRoot@@QAAXPAVPolicyAdapter@@@Z| PROC ; PolicyRoot::AddSystemChangeObserver

; 96   : {

  00000		 |$LN12@AddSystemC|
  00000		 |$M36494|

; 97   :     PolicyAdapter *pPolicyCurrent;
; 98   :     
; 99   :     // initialize policy
; 100  :     pPolicy->m_pNextSystemChangeObserver = NULL;

  00000	e3a03000	 mov         r3, #0
  00004	e581364c	 str         r3, [r1, #0x64C]

; 101  : 
; 102  :     // insert into list
; 103  :     if (m_pSystemChangeList == NULL)

  00008	e5903218	 ldr         r3, [r0, #0x218]
  0000c	e1b02003	 movs        r2, r3
  00010	1a000002	 bne         |$LN4@AddSystemC|

; 104  :         {
; 105  :         m_pSystemChangeList = pPolicy;

  00014	e5801218	 str         r1, [r0, #0x218]

; 118  :         }
; 119  : }

  00018	e12fff1e	 bx          lr
  0001c		 |$LL2@AddSystemC|

; 106  :         }
; 107  :     else
; 108  :         {
; 109  :         // go to end of list
; 110  :         pPolicyCurrent = m_pSystemChangeList;
; 111  :         while (pPolicyCurrent->m_pNextSystemChangeObserver != NULL)
; 112  :             {
; 113  :             pPolicyCurrent = pPolicyCurrent->m_pNextSystemChangeObserver;

  0001c	e592264c	 ldr         r2, [r2, #0x64C]
  00020		 |$LN4@AddSystemC|
  00020	e592364c	 ldr         r3, [r2, #0x64C]
  00024	e3530000	 cmp         r3, #0
  00028	1afffffb	 bne         |$LL2@AddSystemC|

; 114  :             }
; 115  : 
; 116  :         // append to list
; 117  :         pPolicyCurrent->m_pNextSystemChangeObserver = pPolicy;

  0002c	e582164c	 str         r1, [r2, #0x64C]

; 118  :         }
; 119  : }

  00030	e12fff1e	 bx          lr
  00034		 |$M36495|

			 ENDP  ; |?AddSystemChangeObserver@PolicyRoot@@QAAXPAVPolicyAdapter@@@Z|, PolicyRoot::AddSystemChangeObserver

	EXPORT	|?PreSystemStateChange@PolicyRoot@@QAAKKPBGK@Z| ; PolicyRoot::PreSystemStateChange
	IMPORT	|__C_specific_handler|
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\powerpolicyroot\policyadapter.h

  00000			 AREA	 |.pdata|, PDATA
|$T36530| DCD	|$LN24@PreSystemS@2|
	DCD	0xc0002405

  00000			 AREA	 |.pdata|, PDATA
|$T36532| DCD	|$LN7@PreSystemS@2|
	DCD	0x40000301

  00000			 AREA	 |.xdata|, DATA
|$T36528| DCD	0x1
	DCD	|$LN11@PreSystemS@2|
	DCD	|$LN12@PreSystemS@2|
	DCD	|$LN7@PreSystemS@2|
	DCD	|$LN8@PreSystemS@2|
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\powerpolicyroot\policyroot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T36528|

  00008		 |?PreSystemStateChange@PolicyRoot@@QAAKKPBGK@Z| PROC ; PolicyRoot::PreSystemStateChange

; 132  : {

  00008		 |$LN24@PreSystemS@2|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d000f	 stmdb       sp!, {r0 - r3}
  00010	e92d59f0	 stmdb       sp!, {r4 - r8, r11, r12, lr}
  00014	e28db020	 add         r11, sp, #0x20
  00018	e24dd004	 sub         sp, sp, #4
  0001c		 |$LN22@PreSystemS@2|
  0001c	e1a06003	 mov         r6, r3
  00020	e58b600c	 str         r6, [r11, #0xC]
  00024	e1a07002	 mov         r7, r2
  00028	e58b7008	 str         r7, [r11, #8]
  0002c	e1a08001	 mov         r8, r1
  00030	e58b8004	 str         r8, [r11, #4]

; 133  :     PolicyAdapter *pPolicyCurrent = m_pSystemChangeList;

  00034	e5904218	 ldr         r4, [r0, #0x218]
  00038		 |$LN21@PreSystemS@2|
  00038	e50b4024	 str         r4, [r11, #-0x24]

; 134  : 
; 135  :     // go through and notify all observers
; 136  :     while (pPolicyCurrent != NULL)

  0003c	e3540000	 cmp         r4, #0
  00040	0a000010	 beq         |$LN2@PreSystemS@2|
  00044		 |$LN11@PreSystemS@2|

; 137  :         {
; 138  :         __try
; 139  :             {
; 140  :             pPolicyCurrent->PreSystemStateChange(
; 141  :                 dwExtContext, lpNewStateName, dwFlags
; 142  :                 );

  00044	e5943640	 ldr         r3, [r4, #0x640]
  00048	e1b05003	 movs        r5, r3
  0004c	15940210	 ldrne       r0, [r4, #0x210]
  00050	11a03006	 movne       r3, r6
  00054	11a02007	 movne       r2, r7
  00058	11a01008	 movne       r1, r8
  0005c	11a0e00f	 movne       lr, pc
  00060	112fff15	 bxne        r5
  00064		 |$LN12@PreSystemS@2|

; 143  :             }

  00064	ea000003	 b           |$LN13@PreSystemS@2|
  00068		 |$LN8@PreSystemS@2|

; 144  :         __except(EXCEPTION_EXECUTE_HANDLER)

  00068	e59b600c	 ldr         r6, [r11, #0xC]
  0006c	e59b7008	 ldr         r7, [r11, #8]
  00070	e59b8004	 ldr         r8, [r11, #4]
  00074	e51b4024	 ldr         r4, [r11, #-0x24]
  00078		 |$LN13@PreSystemS@2|

; 145  :             {
; 146  :             }
; 147  : 
; 148  :         pPolicyCurrent = pPolicyCurrent->m_pNextSystemChangeObserver;

  00078	e594464c	 ldr         r4, [r4, #0x64C]

; 149  :         }

  0007c	eaffffed	 b           |$LN21@PreSystemS@2|
  00080		 |$LN20@PreSystemS@2|

; 150  :     return TRUE;

  00080	e51b0024	 ldr         r0, [r11, #-0x24]
  00084	ea000000	 b           |$LN4@PreSystemS@2|
  00088		 |$LN2@PreSystemS@2|
  00088	e3a00001	 mov         r0, #1
  0008c		 |$LN4@PreSystemS@2|

; 151  : }

  0008c	e24bd020	 sub         sp, r11, #0x20
  00090	e89d69f0	 ldmia       sp, {r4 - r8, r11, sp, lr}
  00094	e12fff1e	 bx          lr

			 ENDP  ; |?PreSystemStateChange@PolicyRoot@@QAAKKPBGK@Z|, PolicyRoot::PreSystemStateChange

  00098		 |$LN7@PreSystemS@2|
  00098		 |$LN23@PreSystemS@2|

; 144  :         __except(EXCEPTION_EXECUTE_HANDLER)

  00098	e52de004	 str         lr, [sp, #-4]!
  0009c		 |$LN10@PreSystemS@2|
  0009c		 |$LN26@PreSystemS@2|
  0009c	e3a00001	 mov         r0, #1
  000a0		 |$LN9@PreSystemS@2|
  000a0	e49df004	 ldr         pc, [sp], #4
  000a4		 |$LN27@PreSystemS@2|
  000a4		 |$LN25@PreSystemS@2|
	EXPORT	|?PostSystemStateChange@PolicyRoot@@QAAKKPBGK@Z| ; PolicyRoot::PostSystemStateChange
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\powerpolicyroot\policyadapter.h

  00000			 AREA	 |.pdata|, PDATA
|$T36568| DCD	|$LN24@PostSystem@2|
	DCD	0xc0002405

  00000			 AREA	 |.pdata|, PDATA
|$T36570| DCD	|$LN7@PostSystem@2|
	DCD	0x40000301

  00000			 AREA	 |.xdata|, DATA
|$T36566| DCD	0x1
	DCD	|$LN11@PostSystem@2|
	DCD	|$LN12@PostSystem@2|
	DCD	|$LN7@PostSystem@2|
	DCD	|$LN8@PostSystem@2|
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\powerpolicyroot\policyroot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T36566|

  00008		 |?PostSystemStateChange@PolicyRoot@@QAAKKPBGK@Z| PROC ; PolicyRoot::PostSystemStateChange

; 164  : {

  00008		 |$LN24@PostSystem@2|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d000f	 stmdb       sp!, {r0 - r3}
  00010	e92d59f0	 stmdb       sp!, {r4 - r8, r11, r12, lr}
  00014	e28db020	 add         r11, sp, #0x20
  00018	e24dd004	 sub         sp, sp, #4
  0001c		 |$LN22@PostSystem@2|
  0001c	e1a06003	 mov         r6, r3
  00020	e58b600c	 str         r6, [r11, #0xC]
  00024	e1a07002	 mov         r7, r2
  00028	e58b7008	 str         r7, [r11, #8]
  0002c	e1a08001	 mov         r8, r1
  00030	e58b8004	 str         r8, [r11, #4]

; 165  :     PolicyAdapter *pPolicyCurrent = m_pSystemChangeList;

  00034	e5904218	 ldr         r4, [r0, #0x218]
  00038		 |$LN21@PostSystem@2|
  00038	e50b4024	 str         r4, [r11, #-0x24]

; 166  : 
; 167  :     // go through and notify all observers
; 168  :     while (pPolicyCurrent != NULL)

  0003c	e3540000	 cmp         r4, #0
  00040	0a000010	 beq         |$LN2@PostSystem@2|
  00044		 |$LN11@PostSystem@2|

; 169  :         {
; 170  :         __try
; 171  :             {
; 172  :             pPolicyCurrent->PostSystemStateChange(
; 173  :                 dwExtContext, lpNewStateName, dwFlags
; 174  :                 );

  00044	e5943644	 ldr         r3, [r4, #0x644]
  00048	e1b05003	 movs        r5, r3
  0004c	15940210	 ldrne       r0, [r4, #0x210]
  00050	11a03006	 movne       r3, r6
  00054	11a02007	 movne       r2, r7
  00058	11a01008	 movne       r1, r8
  0005c	11a0e00f	 movne       lr, pc
  00060	112fff15	 bxne        r5
  00064		 |$LN12@PostSystem@2|

; 175  :             }

  00064	ea000003	 b           |$LN13@PostSystem@2|
  00068		 |$LN8@PostSystem@2|

; 176  :         __except(EXCEPTION_EXECUTE_HANDLER)

  00068	e59b600c	 ldr         r6, [r11, #0xC]
  0006c	e59b7008	 ldr         r7, [r11, #8]
  00070	e59b8004	 ldr         r8, [r11, #4]
  00074	e51b4024	 ldr         r4, [r11, #-0x24]
  00078		 |$LN13@PostSystem@2|

; 177  :             {
; 178  :             }
; 179  : 
; 180  :         pPolicyCurrent = pPolicyCurrent->m_pNextSystemChangeObserver;

  00078	e594464c	 ldr         r4, [r4, #0x64C]

; 181  :         }

  0007c	eaffffed	 b           |$LN21@PostSystem@2|
  00080		 |$LN20@PostSystem@2|

; 182  :     return TRUE;

  00080	e51b0024	 ldr         r0, [r11, #-0x24]
  00084	ea000000	 b           |$LN4@PostSystem@2|
  00088		 |$LN2@PostSystem@2|
  00088	e3a00001	 mov         r0, #1
  0008c		 |$LN4@PostSystem@2|

; 183  : }

  0008c	e24bd020	 sub         sp, r11, #0x20
  00090	e89d69f0	 ldmia       sp, {r4 - r8, r11, sp, lr}
  00094	e12fff1e	 bx          lr

			 ENDP  ; |?PostSystemStateChange@PolicyRoot@@QAAKKPBGK@Z|, PolicyRoot::PostSystemStateChange

  00098		 |$LN7@PostSystem@2|
  00098		 |$LN23@PostSystem@2|

; 176  :         __except(EXCEPTION_EXECUTE_HANDLER)

  00098	e52de004	 str         lr, [sp, #-4]!
  0009c		 |$LN10@PostSystem@2|
  0009c		 |$LN26@PostSystem@2|
  0009c	e3a00001	 mov         r0, #1
  000a0		 |$LN9@PostSystem@2|
  000a0	e49df004	 ldr         pc, [sp], #4
  000a4		 |$LN27@PostSystem@2|
  000a4		 |$LN25@PostSystem@2|
	EXPORT	|?PreDeviceStateChange@PolicyRoot@@QAAHIII@Z| ; PolicyRoot::PreDeviceStateChange
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\powerpolicyroot\policyadapter.h

  00000			 AREA	 |.pdata|, PDATA
|$T36606| DCD	|$LN24@PreDeviceS@2|
	DCD	0xc0002405

  00000			 AREA	 |.pdata|, PDATA
|$T36608| DCD	|$LN7@PreDeviceS@2|
	DCD	0x40000301

  00000			 AREA	 |.xdata|, DATA
|$T36604| DCD	0x1
	DCD	|$LN11@PreDeviceS@2|
	DCD	|$LN12@PreDeviceS@2|
	DCD	|$LN7@PreDeviceS@2|
	DCD	|$LN8@PreDeviceS@2|
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\powerpolicyroot\policyroot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T36604|

  00008		 |?PreDeviceStateChange@PolicyRoot@@QAAHIII@Z| PROC ; PolicyRoot::PreDeviceStateChange

; 196  : {

  00008		 |$LN24@PreDeviceS@2|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d000f	 stmdb       sp!, {r0 - r3}
  00010	e92d59f0	 stmdb       sp!, {r4 - r8, r11, r12, lr}
  00014	e28db020	 add         r11, sp, #0x20
  00018	e24dd004	 sub         sp, sp, #4
  0001c		 |$LN22@PreDeviceS@2|
  0001c	e1a06003	 mov         r6, r3
  00020	e58b600c	 str         r6, [r11, #0xC]
  00024	e1a07002	 mov         r7, r2
  00028	e58b7008	 str         r7, [r11, #8]
  0002c	e1a08001	 mov         r8, r1
  00030	e58b8004	 str         r8, [r11, #4]

; 197  :     PolicyAdapter *pPolicyCurrent = m_pDeviceChangeList;

  00034	e590421c	 ldr         r4, [r0, #0x21C]
  00038		 |$LN21@PreDeviceS@2|
  00038	e50b4024	 str         r4, [r11, #-0x24]

; 198  : 
; 199  :     // go through and notify all observers
; 200  :     while (pPolicyCurrent != NULL)

  0003c	e3540000	 cmp         r4, #0
  00040	0a000010	 beq         |$LN2@PreDeviceS@2|
  00044		 |$LN11@PreDeviceS@2|

; 201  :         {
; 202  :         __try
; 203  :             {
; 204  :             pPolicyCurrent->PreDeviceStateChange(
; 205  :                 dev, oldState, newState
; 206  :                 );

  00044	e5943638	 ldr         r3, [r4, #0x638]
  00048	e1b05003	 movs        r5, r3
  0004c	15940210	 ldrne       r0, [r4, #0x210]
  00050	11a03006	 movne       r3, r6
  00054	11a02007	 movne       r2, r7
  00058	11a01008	 movne       r1, r8
  0005c	11a0e00f	 movne       lr, pc
  00060	112fff15	 bxne        r5
  00064		 |$LN12@PreDeviceS@2|

; 207  :             }

  00064	ea000003	 b           |$LN13@PreDeviceS@2|
  00068		 |$LN8@PreDeviceS@2|

; 208  :         __except(EXCEPTION_EXECUTE_HANDLER)

  00068	e59b600c	 ldr         r6, [r11, #0xC]
  0006c	e59b7008	 ldr         r7, [r11, #8]
  00070	e59b8004	 ldr         r8, [r11, #4]
  00074	e51b4024	 ldr         r4, [r11, #-0x24]
  00078		 |$LN13@PreDeviceS@2|

; 209  :             {
; 210  :             }
; 211  : 
; 212  :         pPolicyCurrent = pPolicyCurrent->m_pNextDeviceChangeObserver;

  00078	e5944648	 ldr         r4, [r4, #0x648]

; 213  :         }

  0007c	eaffffed	 b           |$LN21@PreDeviceS@2|
  00080		 |$LN20@PreDeviceS@2|

; 214  :     return TRUE;

  00080	e51b0024	 ldr         r0, [r11, #-0x24]
  00084	ea000000	 b           |$LN4@PreDeviceS@2|
  00088		 |$LN2@PreDeviceS@2|
  00088	e3a00001	 mov         r0, #1
  0008c		 |$LN4@PreDeviceS@2|

; 215  : }

  0008c	e24bd020	 sub         sp, r11, #0x20
  00090	e89d69f0	 ldmia       sp, {r4 - r8, r11, sp, lr}
  00094	e12fff1e	 bx          lr

			 ENDP  ; |?PreDeviceStateChange@PolicyRoot@@QAAHIII@Z|, PolicyRoot::PreDeviceStateChange

  00098		 |$LN7@PreDeviceS@2|
  00098		 |$LN23@PreDeviceS@2|

; 208  :         __except(EXCEPTION_EXECUTE_HANDLER)

  00098	e52de004	 str         lr, [sp, #-4]!
  0009c		 |$LN10@PreDeviceS@2|
  0009c		 |$LN26@PreDeviceS@2|
  0009c	e3a00001	 mov         r0, #1
  000a0		 |$LN9@PreDeviceS@2|
  000a0	e49df004	 ldr         pc, [sp], #4
  000a4		 |$LN27@PreDeviceS@2|
  000a4		 |$LN25@PreDeviceS@2|
	EXPORT	|?PostDeviceStateChange@PolicyRoot@@QAAHIII@Z| ; PolicyRoot::PostDeviceStateChange
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\powerpolicyroot\policyadapter.h

  00000			 AREA	 |.pdata|, PDATA
|$T36644| DCD	|$LN24@PostDevice@2|
	DCD	0xc0002405

  00000			 AREA	 |.pdata|, PDATA
|$T36646| DCD	|$LN7@PostDevice@2|
	DCD	0x40000301

  00000			 AREA	 |.xdata|, DATA
|$T36642| DCD	0x1
	DCD	|$LN11@PostDevice@2|
	DCD	|$LN12@PostDevice@2|
	DCD	|$LN7@PostDevice@2|
	DCD	|$LN8@PostDevice@2|
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\powerpolicyroot\policyroot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T36642|

  00008		 |?PostDeviceStateChange@PolicyRoot@@QAAHIII@Z| PROC ; PolicyRoot::PostDeviceStateChange

; 228  : {

  00008		 |$LN24@PostDevice@2|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d000f	 stmdb       sp!, {r0 - r3}
  00010	e92d59f0	 stmdb       sp!, {r4 - r8, r11, r12, lr}
  00014	e28db020	 add         r11, sp, #0x20
  00018	e24dd004	 sub         sp, sp, #4
  0001c		 |$LN22@PostDevice@2|
  0001c	e1a06003	 mov         r6, r3
  00020	e58b600c	 str         r6, [r11, #0xC]
  00024	e1a07002	 mov         r7, r2
  00028	e58b7008	 str         r7, [r11, #8]
  0002c	e1a08001	 mov         r8, r1
  00030	e58b8004	 str         r8, [r11, #4]

; 229  :     PolicyAdapter *pPolicyCurrent = m_pDeviceChangeList;

  00034	e590421c	 ldr         r4, [r0, #0x21C]
  00038		 |$LN21@PostDevice@2|
  00038	e50b4024	 str         r4, [r11, #-0x24]

; 230  : 
; 231  :     // go through and notify all observers
; 232  :     while (pPolicyCurrent != NULL)

  0003c	e3540000	 cmp         r4, #0
  00040	0a000010	 beq         |$LN2@PostDevice@2|
  00044		 |$LN11@PostDevice@2|

; 233  :         {
; 234  :         __try
; 235  :             {
; 236  :             pPolicyCurrent->PostDeviceStateChange(
; 237  :                 dev, oldState, newState
; 238  :                 );

  00044	e594363c	 ldr         r3, [r4, #0x63C]
  00048	e1b05003	 movs        r5, r3
  0004c	15940210	 ldrne       r0, [r4, #0x210]
  00050	11a03006	 movne       r3, r6
  00054	11a02007	 movne       r2, r7
  00058	11a01008	 movne       r1, r8
  0005c	11a0e00f	 movne       lr, pc
  00060	112fff15	 bxne        r5
  00064		 |$LN12@PostDevice@2|

; 239  :             }

  00064	ea000003	 b           |$LN13@PostDevice@2|
  00068		 |$LN8@PostDevice@2|

; 240  :         __except(EXCEPTION_EXECUTE_HANDLER)

  00068	e59b600c	 ldr         r6, [r11, #0xC]
  0006c	e59b7008	 ldr         r7, [r11, #8]
  00070	e59b8004	 ldr         r8, [r11, #4]
  00074	e51b4024	 ldr         r4, [r11, #-0x24]
  00078		 |$LN13@PostDevice@2|

; 241  :             {
; 242  :             }
; 243  : 
; 244  :         pPolicyCurrent = pPolicyCurrent->m_pNextDeviceChangeObserver;

  00078	e5944648	 ldr         r4, [r4, #0x648]

; 245  :         }

  0007c	eaffffed	 b           |$LN21@PostDevice@2|
  00080		 |$LN20@PostDevice@2|

; 246  :     return TRUE;

  00080	e51b0024	 ldr         r0, [r11, #-0x24]
  00084	ea000000	 b           |$LN4@PostDevice@2|
  00088		 |$LN2@PostDevice@2|
  00088	e3a00001	 mov         r0, #1
  0008c		 |$LN4@PostDevice@2|

; 247  : }

  0008c	e24bd020	 sub         sp, r11, #0x20
  00090	e89d69f0	 ldmia       sp, {r4 - r8, r11, sp, lr}
  00094	e12fff1e	 bx          lr

			 ENDP  ; |?PostDeviceStateChange@PolicyRoot@@QAAHIII@Z|, PolicyRoot::PostDeviceStateChange

  00098		 |$LN7@PostDevice@2|
  00098		 |$LN23@PostDevice@2|

; 240  :         __except(EXCEPTION_EXECUTE_HANDLER)

  00098	e52de004	 str         lr, [sp, #-4]!
  0009c		 |$LN10@PostDevice@2|
  0009c		 |$LN26@PostDevice@2|
  0009c	e3a00001	 mov         r0, #1
  000a0		 |$LN9@PostDevice@2|
  000a0	e49df004	 ldr         pc, [sp], #4
  000a4		 |$LN27@PostDevice@2|
  000a4		 |$LN25@PostDevice@2|
	EXPORT	|??8iterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QBA_NABV012@@Z| ; ce::list<PolicyAdapter *,ce::allocator>::iterator::operator==
; File c:\wince600\public\common\oak\inc\list.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T36663| DCD	|$LN7@operator@2|
	DCD	0x40000800
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??8iterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QBA_NABV012@@Z| PROC ; ce::list<PolicyAdapter *,ce::allocator>::iterator::operator==

; 544  :             {return (_Ptr == it._Ptr); }

  00000		 |$LN7@operator@2|
  00000		 |$M36660|
  00000	e5902000	 ldr         r2, [r0]
  00004	e5913000	 ldr         r3, [r1]
  00008	e1520003	 cmp         r2, r3
  0000c	03a03001	 moveq       r3, #1
  00010	020300ff	 andeq       r0, r3, #0xFF
  00014	13a03000	 movne       r3, #0
  00018	120300ff	 andne       r0, r3, #0xFF
  0001c	e12fff1e	 bx          lr
  00020		 |$M36661|

			 ENDP  ; |??8iterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QBA_NABV012@@Z|, ce::list<PolicyAdapter *,ce::allocator>::iterator::operator==

	EXPORT	|??0const_iterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA@PAU_Node@12@@Z| ; ce::list<PolicyAdapter *,ce::allocator>::const_iterator::const_iterator

  00000			 AREA	 |.pdata|, PDATA
|$T36674| DCD	|$LN5@const_iter|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0const_iterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA@PAU_Node@12@@Z| PROC ; ce::list<PolicyAdapter *,ce::allocator>::const_iterator::const_iterator

; 484  :         const_iterator(_NodePtr _P)

  00000		 |$LN5@const_iter|
  00000		 |$M36671|
  00000	e5801000	 str         r1, [r0]
  00004	e12fff1e	 bx          lr
  00008		 |$M36672|

			 ENDP  ; |??0const_iterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA@PAU_Node@12@@Z|, ce::list<PolicyAdapter *,ce::allocator>::const_iterator::const_iterator

	EXPORT	|?_MyNode@const_iterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QBAPAU_Node@23@XZ| ; ce::list<PolicyAdapter *,ce::allocator>::const_iterator::_MyNode

  00000			 AREA	 |.pdata|, PDATA
|$T36684| DCD	|$LN5@MyNode|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?_MyNode@const_iterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QBAPAU_Node@23@XZ| PROC ; ce::list<PolicyAdapter *,ce::allocator>::const_iterator::_MyNode

; 511  :             {return (_Ptr); }

  00000		 |$LN5@MyNode|
  00000		 |$M36681|
  00000	e5900000	 ldr         r0, [r0]
  00004	e12fff1e	 bx          lr
  00008		 |$M36682|

			 ENDP  ; |?_MyNode@const_iterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QBAPAU_Node@23@XZ|, ce::list<PolicyAdapter *,ce::allocator>::const_iterator::_MyNode

	EXPORT	|?_Buynode@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@IAAPAU_Node@12@PAU312@@Z| ; ce::list<PolicyAdapter *,ce::allocator>::_Buynode
; File c:\wince600\public\common\oak\inc\allocator.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T36699| DCD	|$LN9@Buynode|
	DCD	0x40001501
; Function compile flags: /Ogspy
; File c:\wince600\public\common\oak\inc\list.hxx

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?_Buynode@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@IAAPAU_Node@12@PAU312@@Z| PROC ; ce::list<PolicyAdapter *,ce::allocator>::_Buynode

; 551  :     {

  00000		 |$LN9@Buynode|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M36696|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0

; 552  :         assert(WhereNode);
; 553  :         __assume(WhereNode);
; 554  :         assert(WhereNode->_Prev);
; 555  :         __assume(WhereNode->_Prev);
; 556  :         
; 557  :         if(_NodePtr NewNode = (_NodePtr)allocate(sizeof(_Node)))

  0000c	e3a0000c	 mov         r0, #0xC
  00010	eb000000	 bl          |??2@YAPAXI@Z|
  00014	e3500000	 cmp         r0, #0
  00018	0a00000a	 beq         |$LN2@Buynode|

; 558  :         {
; 559  :             NewNode->_Next = WhereNode;

  0001c	e5804004	 str         r4, [r0, #4]

; 560  :             NewNode->_Prev = WhereNode->_Prev;

  00020	e5943008	 ldr         r3, [r4, #8]

; 561  :             
; 562  :             WhereNode->_Prev->_Next = NewNode;
; 563  :             WhereNode->_Prev = NewNode;
; 564  :             
; 565  :             ++_Size;
; 566  :             
; 567  :             return NewNode;

  00024	e5803008	 str         r3, [r0, #8]
  00028	e5943008	 ldr         r3, [r4, #8]
  0002c	e5830004	 str         r0, [r3, #4]
  00030	e5840008	 str         r0, [r4, #8]
  00034	e595300c	 ldr         r3, [r5, #0xC]
  00038	e2833001	 add         r3, r3, #1
  0003c	e585300c	 str         r3, [r5, #0xC]

; 571  :     }

  00040	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00044	e12fff1e	 bx          lr
  00048		 |$LN2@Buynode|

; 568  :         }
; 569  :         else
; 570  :             return NULL;

  00048	e3a00000	 mov         r0, #0

; 571  :     }

  0004c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$M36697|

			 ENDP  ; |?_Buynode@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@IAAPAU_Node@12@PAU312@@Z|, ce::list<PolicyAdapter *,ce::allocator>::_Buynode

	EXPORT	|??0iterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA@PAU_Node@12@@Z| ; ce::list<PolicyAdapter *,ce::allocator>::iterator::iterator

  00000			 AREA	 |.pdata|, PDATA
|$T36713| DCD	|$LN7@iterator|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0iterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA@PAU_Node@12@@Z| PROC ; ce::list<PolicyAdapter *,ce::allocator>::iterator::iterator

; 523  :         iterator(_NodePtr _P)

  00000		 |$LN7@iterator|
  00000		 |$M36710|
  00000	e5801000	 str         r1, [r0]
  00004	e12fff1e	 bx          lr
  00008		 |$M36711|

			 ENDP  ; |??0iterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA@PAU_Node@12@@Z|, ce::list<PolicyAdapter *,ce::allocator>::iterator::iterator

	EXPORT	|??9iterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QBA_NABV012@@Z| ; ce::list<PolicyAdapter *,ce::allocator>::iterator::operator!=

  00000			 AREA	 |.pdata|, PDATA
|$T36733| DCD	|$LN11@operator@3|
	DCD	0x40000b00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??9iterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QBA_NABV012@@Z| PROC ; ce::list<PolicyAdapter *,ce::allocator>::iterator::operator!=

; 546  :             {return (!(*this == it)); }

  00000		 |$LN11@operator@3|
  00000		 |$M36730|
  00000	e5902000	 ldr         r2, [r0]
  00004	e5913000	 ldr         r3, [r1]
  00008	e1520003	 cmp         r2, r3
  0000c	03a03001	 moveq       r3, #1
  00010	13a03000	 movne       r3, #0
  00014	e21330ff	 ands        r3, r3, #0xFF
  00018	03a03001	 moveq       r3, #1
  0001c	020300ff	 andeq       r0, r3, #0xFF
  00020	13a03000	 movne       r3, #0
  00024	120300ff	 andne       r0, r3, #0xFF
  00028	e12fff1e	 bx          lr
  0002c		 |$M36731|

			 ENDP  ; |??9iterator@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QBA_NABV012@@Z|, ce::list<PolicyAdapter *,ce::allocator>::iterator::operator!=

	EXPORT	|??__Fcs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@YAXXZ| ; `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::`dynamic atexit destructor for 'cs''
	EXPORT	|??_B?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@51| [ DATA ] ; `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::`local static guard'
	EXPORT	|?get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ| ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock
	EXPORT	|?cs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@3@XZ@4V43@A| [ DATA ] ; `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::cs
	IMPORT	|atexit|
; File c:\wince600\public\common\oak\inc\sync.hxx

  00000			 AREA	 |.bss|, NOINIT
|??_B?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@51| % 0x4 ; `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::`local static guard'

  00000			 AREA	 |.bss|, NOINIT
|?cs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@3@XZ@4V43@A| % 0x14 ; `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::cs

  00000			 AREA	 |.pdata|, PDATA
|$T36745| DCD	|$LN8@get_lock|
	DCD	0x40001602
; Function compile flags: /Ogspy
; File c:\wince600\public\common\oak\inc\singleton.hxx

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ| PROC ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock

; 320  :     {

  00000		 |$LN8@get_lock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M36742|

; 321  :         static critical_section cs;

  00008	e59f2044	 ldr         r2, [pc, #0x44]
  0000c	e5923000	 ldr         r3, [r2]
  00010	e3130001	 tst         r3, #1
  00014	1a000005	 bne         |$LN1@get_lock|
  00018	e59f0028	 ldr         r0, [pc, #0x28]
  0001c	e3833001	 orr         r3, r3, #1
  00020	e5823000	 str         r3, [r2]
  00024	eb000000	 bl          InitializeCriticalSection
  00028	e59f0020	 ldr         r0, [pc, #0x20]
  0002c	eb000000	 bl          atexit
  00030		 |$LN1@get_lock|

; 322  :         
; 323  :         //
; 324  :         // This statement forces compiler to instantiate _factory member
; 325  :         // thus assuring that lock_factory ctor is called. 
; 326  :         //
; 327  :         lock_factory* volatile p = &_factory;

  00030	e59f3014	 ldr         r3, [pc, #0x14]

; 328  : 
; 329  :         return cs;
; 330  :     }

  00034	e59f000c	 ldr         r0, [pc, #0xC]
  00038	e58d3000	 str         r3, [sp]
  0003c	e28dd004	 add         sp, sp, #4
  00040	e49de004	 ldr         lr, [sp], #4
  00044	e12fff1e	 bx          lr
  00048		 |$LN9@get_lock|
  00048		 |$LN10@get_lock|
  00048	00000000	 DCD         |?cs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@3@XZ@4V43@A|
  0004c		 |$LN11@get_lock|
  0004c	00000000	 DCD         |?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A|
  00050		 |$LN12@get_lock|
  00050	00000000	 DCD         |??__Fcs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@YAXXZ|
  00054		 |$LN13@get_lock|
  00054	00000000	 DCD         |??_B?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@51|
  00058		 |$M36743|

			 ENDP  ; |?get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ|, ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock

	EXPORT	|??0lock_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@QAA@XZ| ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::lock_factory::lock_factory

  00000			 AREA	 |.pdata|, PDATA
|$T36760| DCD	|$LN5@lock_facto|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0lock_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@QAA@XZ| PROC ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::lock_factory::lock_factory

; 339  :         lock_factory()

  00000		 |$LN5@lock_facto|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M36757|
  00004	e1a04000	 mov         r4, r0
  00008	eb000000	 bl          |?get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ|

; 340  :             {get_lock(); }

  0000c	e1a00004	 mov         r0, r4
  00010	e8bd4010	 ldmia       sp!, {r4, lr}
  00014	e12fff1e	 bx          lr
  00018		 |$M36758|

			 ENDP  ; |??0lock_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@QAA@XZ|, ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::lock_factory::lock_factory

	EXPORT	|?end@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@XZ| ; ce::list<PolicyAdapter *,ce::allocator>::end
; File c:\wince600\public\common\oak\inc\list.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T36780| DCD	|$LN9@end|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?end@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@XZ| PROC ; ce::list<PolicyAdapter *,ce::allocator>::end

; 236  :         {return (iterator(_Head)); }

  00000		 |$LN9@end|
  00000		 |$M36777|
  00000	e5903000	 ldr         r3, [r0]
  00004	e1a00001	 mov         r0, r1
  00008	e5813000	 str         r3, [r1]
  0000c	e12fff1e	 bx          lr
  00010		 |$M36778|

			 ENDP  ; |?end@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@XZ|, ce::list<PolicyAdapter *,ce::allocator>::end

	EXPORT	|??$insert@PAVPolicyAdapter@@@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@01@V201@ABQAVPolicyAdapter@@@Z| ; ce::list<PolicyAdapter *,ce::allocator>::insert<PolicyAdapter *>

  00000			 AREA	 |.pdata|, PDATA
|$T36827| DCD	|$LN22@insert|
	DCD	0x40000f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??$insert@PAVPolicyAdapter@@@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@01@V201@ABQAVPolicyAdapter@@@Z| PROC ; ce::list<PolicyAdapter *,ce::allocator>::insert<PolicyAdapter *>

; 269  :     iterator insert(iterator Where, const _Val& Value)

  00000		 |$LN22@insert|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M36824|
  00004	e1a06003	 mov         r6, r3
  00008	e1a04001	 mov         r4, r1
  0000c	e1a05000	 mov         r5, r0

; 270  :     {
; 271  :         _NodePtr NewNode = _Buynode(Where._MyNode());

  00010	e1a01002	 mov         r1, r2
  00014	eb000000	 bl          |?_Buynode@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@IAAPAU_Node@12@PAU312@@Z|
  00018	e3500000	 cmp         r0, #0

; 272  :         
; 273  :         if(NewNode == NULL)
; 274  :             return end();

  0001c	05953000	 ldreq       r3, [r5]
  00020	05843000	 streq       r3, [r4]

; 275  : 
; 276  :         // To avoid using operator& for type T (which may be overloaded)
; 277  :         // we are constructing item in the memory pointed to by NewNode.
; 278  :         // This assumes that _Value is the first member.
; 279  :         new (NewNode) T(Value);

  00024	15963000	 ldrne       r3, [r6]

; 280  :         
; 281  :         return NewNode;

  00028	15840000	 strne       r0, [r4]
  0002c	15803000	 strne       r3, [r0]

; 282  :     }

  00030	e1a00004	 mov         r0, r4
  00034	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$M36825|

			 ENDP  ; |??$insert@PAVPolicyAdapter@@@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@01@V201@ABQAVPolicyAdapter@@@Z|, ce::list<PolicyAdapter *,ce::allocator>::insert<PolicyAdapter *>

	EXPORT	|??$push_back@PAVPolicyAdapter@@@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA_NABQAVPolicyAdapter@@@Z| ; ce::list<PolicyAdapter *,ce::allocator>::push_back<PolicyAdapter *>

  00000			 AREA	 |.pdata|, PDATA
|$T36954| DCD	|$LN44@push_back|
	DCD	0x40001301
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??$push_back@PAVPolicyAdapter@@@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA_NABQAVPolicyAdapter@@@Z| PROC ; ce::list<PolicyAdapter *,ce::allocator>::push_back<PolicyAdapter *>

; 444  :     bool push_back(const _Val& Value)

  00000		 |$LN44@push_back|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M36951|
  00004	e1a05001	 mov         r5, r1
  00008	e1a04000	 mov         r4, r0
  0000c	e5941000	 ldr         r1, [r4]
  00010	eb000000	 bl          |?_Buynode@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@IAAPAU_Node@12@PAU312@@Z|
  00014	e3500000	 cmp         r0, #0
  00018	05940000	 ldreq       r0, [r4]
  0001c	15953000	 ldrne       r3, [r5]
  00020	15803000	 strne       r3, [r0]
  00024	e5943000	 ldr         r3, [r4]
  00028	e1530000	 cmp         r3, r0
  0002c	03a03001	 moveq       r3, #1
  00030	13a03000	 movne       r3, #0
  00034	e21330ff	 ands        r3, r3, #0xFF
  00038	03a03001	 moveq       r3, #1
  0003c	13a03000	 movne       r3, #0
  00040	e20300ff	 and         r0, r3, #0xFF

; 445  :         {return end() != insert(end(), Value); }

  00044	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00048	e12fff1e	 bx          lr
  0004c		 |$M36952|

			 ENDP  ; |??$push_back@PAVPolicyAdapter@@@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA_NABQAVPolicyAdapter@@@Z|, ce::list<PolicyAdapter *,ce::allocator>::push_back<PolicyAdapter *>

	EXPORT	|?LoadPolicy@PolicyRoot@@QAAPAVPolicyAdapter@@PBG@Z| ; PolicyRoot::LoadPolicy
	IMPORT	|??3@YAXPAX@Z|				; operator delete
	IMPORT	|?Uninitialize@PolicyAdapter@@QAAXXZ|	; PolicyAdapter::Uninitialize
	IMPORT	|?PostInitialize@PolicyAdapter@@QAAHPAVPolicyRoot@@@Z| ; PolicyAdapter::PostInitialize
	IMPORT	|?FindAdapterById@PolicyContainer@@QAAPAVPolicyAdapter@@PBG@Z| ; PolicyContainer::FindAdapterById
	IMPORT	|?Initialize@PolicyAdapter@@QAAHPBG@Z|	; PolicyAdapter::Initialize
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\powerpolicyroot\policyadapter.h

  00000			 AREA	 |.pdata|, PDATA
|$T36981| DCD	|$LN23@LoadPolicy|
	DCD	0x40003f02
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\powerpolicyroot\policyroot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?LoadPolicy@PolicyRoot@@QAAPAVPolicyAdapter@@PBG@Z| PROC ; PolicyRoot::LoadPolicy

; 258  : {

  00000		 |$LN23@LoadPolicy|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M36978|
  00008	e1a07001	 mov         r7, r1
  0000c	e1a06000	 mov         r6, r0

; 259  :     BOOL bSuccess = FALSE;
; 260  :     PolicyAdapter *pAdapterOld;
; 261  :     
; 262  :     // create an instance of a ConstraintAdapter
; 263  :     PolicyAdapter *pAdapter = new PolicyAdapter();

  00010	e3a00e65	 mov         r0, #0x65, 28
  00014	eb000000	 bl          |??2@YAPAXI@Z|
  00018	e1b05000	 movs        r5, r0
  0001c	0a000010	 beq         |$LN13@LoadPolicy|
  00020	e2853c06	 add         r3, r5, #6, 24
  00024	e2830024	 add         r0, r3, #0x24
  00028	e3a03000	 mov         r3, #0
  0002c	e285ec02	 add         lr, r5, #2, 24
  00030	e2854b01	 add         r4, r5, #1, 22
  00034	e3a02024	 mov         r2, #0x24
  00038	e3a01000	 mov         r1, #0
  0003c	e5853000	 str         r3, [r5]
  00040	e5853004	 str         r3, [r5, #4]
  00044	e5853210	 str         r3, [r5, #0x210]
  00048	e5853648	 str         r3, [r5, #0x648]
  0004c	e585364c	 str         r3, [r5, #0x64C]
  00050	e1c530b8	 strh        r3, [r5, #8]
  00054	e1ce31b4	 strh        r3, [lr, #0x14]
  00058	e1c431bc	 strh        r3, [r4, #0x1C]
  0005c	eb000000	 bl          memset
  00060	ea000000	 b           |$LN20@LoadPolicy|
  00064		 |$LN13@LoadPolicy|
  00064	e3a05000	 mov         r5, #0
  00068		 |$LN20@LoadPolicy|
  00068	e58d5000	 str         r5, [sp]

; 264  :     if (pAdapter == NULL) goto cleanUp;

  0006c	e3550000	 cmp         r5, #0
  00070	0a000013	 beq         |$LN1@LoadPolicy|

; 265  : 
; 266  :     // perform initialization steps
; 267  :     if (pAdapter->Initialize(szContext) == FALSE) goto cleanUp;

  00074	e1a01007	 mov         r1, r7
  00078	e1a00005	 mov         r0, r5
  0007c	eb000000	 bl          |?Initialize@PolicyAdapter@@QAAHPBG@Z|
  00080	e3500000	 cmp         r0, #0
  00084	0a00000c	 beq         |$LN19@LoadPolicy|

; 268  : 
; 269  :     // we need to preserve the uniqueness of constraint adapter id's
; 270  :     // check if the constraint adapter is already in the collection
; 271  :     pAdapterOld = m_PolicyContainer.FindAdapterById(pAdapter->GetAdapterId());

  00088	e2853b01	 add         r3, r5, #1, 22
  0008c	e283101c	 add         r1, r3, #0x1C
  00090	e2860f82	 add         r0, r6, #0x82, 30
  00094	eb000000	 bl          |?FindAdapterById@PolicyContainer@@QAAPAVPolicyAdapter@@PBG@Z|
  00098	e1b04000	 movs        r4, r0

; 272  :     if (pAdapterOld == NULL)
; 273  :         {
; 274  :         if (pAdapter->PostInitialize(this) == FALSE)

  0009c	e1a00005	 mov         r0, r5
  000a0	1a000010	 bne         |$LN6@LoadPolicy|
  000a4	e1a01006	 mov         r1, r6
  000a8	eb000000	 bl          |?PostInitialize@PolicyAdapter@@QAAHPAVPolicyRoot@@@Z|
  000ac	e3500000	 cmp         r0, #0
  000b0	1a000008	 bne         |$LN5@LoadPolicy|

; 275  :             {
; 276  :             pAdapter->Uninitialize();

  000b4	e1a00005	 mov         r0, r5
  000b8	eb000000	 bl          |?Uninitialize@PolicyAdapter@@QAAXXZ|
  000bc		 |$LN19@LoadPolicy|

; 296  :         {
; 297  :         if (pAdapter != NULL) delete pAdapter;

  000bc	e1a00005	 mov         r0, r5
  000c0	eb000000	 bl          |??3@YAXPAX@Z|
  000c4		 |$LN1@LoadPolicy|

; 298  :         pAdapter = NULL;

  000c4	e3a05000	 mov         r5, #0
  000c8		 |$LN2@LoadPolicy|

; 299  :         }
; 300  :     return pAdapter;
; 301  : }

  000c8	e1a00005	 mov         r0, r5
  000cc	e28dd004	 add         sp, sp, #4
  000d0	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  000d4	e12fff1e	 bx          lr
  000d8		 |$LN5@LoadPolicy|

; 277  :             goto cleanUp;        
; 278  :             }
; 279  : 
; 280  :         // insert into list
; 281  :         m_PolicyContainer.push_back(pAdapter);

  000d8	e28d1000	 add         r1, sp, #0
  000dc	e2860f82	 add         r0, r6, #0x82, 30
  000e0	eb000000	 bl          |??$push_back@PAVPolicyAdapter@@@?$list@PAVPolicyAdapter@@Vallocator@ce@@@ce@@QAA_NABQAVPolicyAdapter@@@Z|

; 282  :         }
; 283  :     else

  000e4	eafffff7	 b           |$LN2@LoadPolicy|
  000e8		 |$LN6@LoadPolicy|

; 284  :         {
; 285  :         // if adapter is already in the collection then delete new one
; 286  :         // and use the old one.
; 287  :         pAdapter->Uninitialize();

  000e8	eb000000	 bl          |?Uninitialize@PolicyAdapter@@QAAXXZ|

; 288  :         delete pAdapter;

  000ec	e1a00005	 mov         r0, r5
  000f0	eb000000	 bl          |??3@YAXPAX@Z|

; 289  :         pAdapter = pAdapterOld;        

  000f4	e1a05004	 mov         r5, r4
  000f8		 |$cleanUp$35545|

; 290  :         }
; 291  : 
; 292  :     bSuccess = TRUE;
; 293  : 
; 294  : cleanUp:
; 295  :     if (bSuccess == FALSE)

  000f8	eafffff2	 b           |$LN2@LoadPolicy|
  000fc		 |$M36979|

			 ENDP  ; |?LoadPolicy@PolicyRoot@@QAAPAVPolicyAdapter@@PBG@Z|, PolicyRoot::LoadPolicy

; File c:\wince600\public\common\oak\inc\singleton.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T36991| DCD	|$LN7@factory|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text$yc|, CODE, ARM

  00000		 |??__E?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A@@YAXXZ| PROC ; `dynamic initializer for 'ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::_factory''

; 390  :     {

  00000		 |$LN7@factory|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36988|
  00004	eb000000	 bl          |?get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ|
  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M36989|

			 ENDP  ; |??__E?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A@@YAXXZ|, `dynamic initializer for 'ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::_factory''


  00000			 AREA	 |.pdata|, PDATA
|$T37001| DCD	|$LN7@dynamic|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text$yd|, CODE, ARM

  00000		 |??__Fcs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@YAXXZ| PROC ; `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::`dynamic atexit destructor for 'cs''
  00000		 |$LN7@dynamic|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36998|
  00004	e59f0008	 ldr         r0, [pc, #8]
  00008	eb000000	 bl          DeleteCriticalSection
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$LN8@dynamic|
  00014		 |$LN9@dynamic|
  00014	00000000	 DCD         |?cs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@3@XZ@4V43@A|
  00018		 |$M36999|

			 ENDP  ; |??__Fcs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@YAXXZ|, `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::`dynamic atexit destructor for 'cs''

	EXPORT	|?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A| [ DATA ] ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::_factory

  00000			 AREA	 |.bss|, NOINIT
|?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A| % 0x1 ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::_factory

  00000			 AREA	 |.CRT$XCU|, DATA
|?_factory$initializer$@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1P6AXXZA| DCD |??__E?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A@@YAXXZ| ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::_factory$initializer$
	END
