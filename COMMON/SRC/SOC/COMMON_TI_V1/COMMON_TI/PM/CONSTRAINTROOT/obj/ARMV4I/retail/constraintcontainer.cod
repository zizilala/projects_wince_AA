; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\PM\CONSTRAINTROOT\constraintcontainer.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"/include:?_factory@?$$singleton@V?$$free_list@$$0GE@Vall"
	DCB	"ocator@ce@@@ce@@$$03V?$$static_allocator@V?$$free_list@$$"
	DCB	"0GE@Vallocator@ce@@@ce@@$$03@2@@ce@@1Ulock_factory@12@A "
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??0ConstraintAdapter@@QAA@XZ|		; ConstraintAdapter::ConstraintAdapter
	IMPORT	|memset|
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\constraintroot\constraintadapter.h

  00000			 AREA	 |.pdata|, PDATA
|$T37643| DCD	|$LN5@Constraint|
	DCD	0x40001901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0ConstraintAdapter@@QAA@XZ| PROC	; ConstraintAdapter::ConstraintAdapter

; 74   :     {

  00000		 |$LN5@Constraint|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37640|
  00004	e1a05000	 mov         r5, r0

; 75   :         *m_szDll = NULL;
; 76   :         *m_szRegKey = NULL;
; 77   :         *m_szConstraintName = NULL;
; 78   :         memset(&m_fns, 0, sizeof(ConstraintAdapterFns));

  00008	e2853c0a	 add         r3, r5, #0xA, 24
  0000c	e2830028	 add         r0, r3, #0x28
  00010	e3a03000	 mov         r3, #0
  00014	e285ec02	 add         lr, r5, #2, 24
  00018	e2854b01	 add         r4, r5, #1, 22
  0001c	e3a0201c	 mov         r2, #0x1C
  00020	e3a01000	 mov         r1, #0
  00024	e5853000	 str         r3, [r5]
  00028	e5853004	 str         r3, [r5, #4]
  0002c	e5853008	 str         r3, [r5, #8]
  00030	e5853214	 str         r3, [r5, #0x214]
  00034	e1c530bc	 strh        r3, [r5, #0xC]
  00038	e1ce31b8	 strh        r3, [lr, #0x18]
  0003c	e1c432b0	 strh        r3, [r4, #0x20]
  00040	eb000000	 bl          memset

; 79   :         memset(m_rgClasses, 0, sizeof(DWORD)*MAX_CONSTRAINT_CLASSES);

  00044	e2853c06	 add         r3, r5, #6, 24
  00048	e2830028	 add         r0, r3, #0x28
  0004c	e3a02b01	 mov         r2, #1, 22
  00050	e3a01000	 mov         r1, #0
  00054	eb000000	 bl          memset

; 80   :     }

  00058	e1a00005	 mov         r0, r5
  0005c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$M37641|

			 ENDP  ; |??0ConstraintAdapter@@QAA@XZ|, ConstraintAdapter::ConstraintAdapter

	EXPORT	|?GetLoadOrder@ConstraintAdapter@@QAAKXZ| ; ConstraintAdapter::GetLoadOrder

  00000			 AREA	 |.pdata|, PDATA
|$T37653| DCD	|$LN5@GetLoadOrd|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetLoadOrder@ConstraintAdapter@@QAAKXZ| PROC ; ConstraintAdapter::GetLoadOrder

; 97   :     {

  00000		 |$LN5@GetLoadOrd|
  00000		 |$M37650|

; 98   :         return m_dwOrder;

  00000	e5900004	 ldr         r0, [r0, #4]

; 99   :     }

  00004	e12fff1e	 bx          lr
  00008		 |$M37651|

			 ENDP  ; |?GetLoadOrder@ConstraintAdapter@@QAAKXZ|, ConstraintAdapter::GetLoadOrder

	EXPORT	|?IsAdapterId@ConstraintAdapter@@QAAHPBG@Z| ; ConstraintAdapter::IsAdapterId
	IMPORT	|wcscmp|
	IMPORT	|wcslen|

  00000			 AREA	 |.pdata|, PDATA
|$T37668| DCD	|$LN9@IsAdapterI|
	DCD	0x40001201
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsAdapterId@ConstraintAdapter@@QAAHPBG@Z| PROC ; ConstraintAdapter::IsAdapterId

; 105  :     {

  00000		 |$LN9@IsAdapterI|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37665|
  00004	e1b04001	 movs        r4, r1
  00008	e1a05000	 mov         r5, r0

; 106  :         if (szId == NULL || _tcslen(szId) >= MAX_PATH) return FALSE;

  0000c	0a00000a	 beq         |$LN1@IsAdapterI|
  00010	e1a00004	 mov         r0, r4
  00014	eb000000	 bl          wcslen
  00018	e3500f41	 cmp         r0, #0x41, 30
  0001c	2a000006	 bcs         |$LN1@IsAdapterI|

; 107  :         return _tcscmp(m_szConstraintName, szId) == 0;

  00020	e1a01004	 mov         r1, r4
  00024	e2850e42	 add         r0, r5, #0x42, 28
  00028	eb000000	 bl          wcscmp
  0002c	e3500000	 cmp         r0, #0
  00030	03a00001	 moveq       r0, #1

; 108  :     }

  00034	08bd4030	 ldmeqia     sp!, {r4, r5, lr}
  00038	012fff1e	 bxeq        lr
  0003c		 |$LN1@IsAdapterI|

; 106  :         if (szId == NULL || _tcslen(szId) >= MAX_PATH) return FALSE;

  0003c	e3a00000	 mov         r0, #0

; 108  :     }

  00040	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00044	e12fff1e	 bx          lr
  00048		 |$M37666|

			 ENDP  ; |?IsAdapterId@ConstraintAdapter@@QAAHPBG@Z|, ConstraintAdapter::IsAdapterId

	EXPORT	|?IsAdapterClass@ConstraintAdapter@@QAAHK@Z| ; ConstraintAdapter::IsAdapterClass

  00000			 AREA	 |.pdata|, PDATA
|$T37683| DCD	|$LN12@IsAdapterC|
	DCD	0x40001201
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsAdapterClass@ConstraintAdapter@@QAAHK@Z| PROC ; ConstraintAdapter::IsAdapterClass

; 120  :     {

  00000		 |$LN12@IsAdapterC|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37680|

; 121  :         for (int i = 0; i < m_nClassIds; ++i)

  00004	e590e008	 ldr         lr, [r0, #8]
  00008	e3a02000	 mov         r2, #0
  0000c	e35e0000	 cmp         lr, #0
  00010	da000006	 ble         |$LN2@IsAdapterC|
  00014		 |$LL4@IsAdapterC|

; 122  :             {
; 123  :             if (m_rgClasses[i] == adapterClass) return TRUE;

  00014	e5903628	 ldr         r3, [r0, #0x628]
  00018	e1530001	 cmp         r3, r1
  0001c	0a000006	 beq         |$LN8@IsAdapterC|
  00020	e2822001	 add         r2, r2, #1
  00024	e152000e	 cmp         r2, lr
  00028	e2800004	 add         r0, r0, #4
  0002c	bafffff8	 blt         |$LL4@IsAdapterC|
  00030		 |$LN2@IsAdapterC|

; 124  :             }
; 125  :         return FALSE;

  00030	e3a00000	 mov         r0, #0

; 126  :     }

  00034	e49de004	 ldr         lr, [sp], #4
  00038	e12fff1e	 bx          lr
  0003c		 |$LN8@IsAdapterC|

; 122  :             {
; 123  :             if (m_rgClasses[i] == adapterClass) return TRUE;

  0003c	e3a00001	 mov         r0, #1

; 126  :     }

  00040	e49de004	 ldr         lr, [sp], #4
  00044	e12fff1e	 bx          lr
  00048		 |$M37681|

			 ENDP  ; |?IsAdapterClass@ConstraintAdapter@@QAAHK@Z|, ConstraintAdapter::IsAdapterClass

	EXPORT	|??2@YAPAXIPAX@Z|			; operator new
; File c:\wince600\public\common\sdk\inc\new

  00000			 AREA	 |.pdata|, PDATA
|$T37693| DCD	|$LN5@operator|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??2@YAPAXIPAX@Z| PROC			; operator new

; 73   :     {return (_P); }

  00000		 |$LN5@operator|
  00000		 |$M37690|
  00000	e1a00001	 mov         r0, r1
  00004	e12fff1e	 bx          lr
  00008		 |$M37691|

			 ENDP  ; |??2@YAPAXIPAX@Z|, operator new

	EXPORT	|??0critical_section@ce@@QAA@XZ|	; ce::critical_section::critical_section
	IMPORT	|InitializeCriticalSection|
; File c:\wince600\public\common\oak\inc\sync.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T37703| DCD	|$LN5@critical_s|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0critical_section@ce@@QAA@XZ| PROC	; ce::critical_section::critical_section

; 125  :     critical_section()

  00000		 |$LN5@critical_s|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37700|
  00004	e1a04000	 mov         r4, r0
  00008	eb000000	 bl          InitializeCriticalSection
  0000c	e1a00004	 mov         r0, r4
  00010	e8bd4010	 ldmia       sp!, {r4, lr}
  00014	e12fff1e	 bx          lr
  00018		 |$M37701|

			 ENDP  ; |??0critical_section@ce@@QAA@XZ|, ce::critical_section::critical_section

	EXPORT	|??1critical_section@ce@@QAA@XZ|	; ce::critical_section::~critical_section
	IMPORT	|DeleteCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T37711| DCD	|$LN5@critical_s@2|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1critical_section@ce@@QAA@XZ| PROC	; ce::critical_section::~critical_section

; 129  :         {DeleteCriticalSection(this); }

  00000		 |$LN5@critical_s@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37708|
  00004	eb000000	 bl          DeleteCriticalSection
  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M37709|

			 ENDP  ; |??1critical_section@ce@@QAA@XZ|, ce::critical_section::~critical_section

	EXPORT	|?allocate@allocator@ce@@QBAPAXI@Z|	; ce::allocator::allocate
	IMPORT	|??2@YAPAXI@Z|				; operator new
; File c:\wince600\public\common\oak\inc\allocator.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T37721| DCD	|$LN5@allocate|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?allocate@allocator@ce@@QBAPAXI@Z| PROC ; ce::allocator::allocate

; 106  :         {return operator new(Size); }

  00000		 |$LN5@allocate|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37718|
  00004	e1a00001	 mov         r0, r1
  00008	eb000000	 bl          |??2@YAPAXI@Z|
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M37719|

			 ENDP  ; |?allocate@allocator@ce@@QBAPAXI@Z|, ce::allocator::allocate

	EXPORT	|?deallocate@allocator@ce@@QBAXPAXI@Z|	; ce::allocator::deallocate
	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$T37729| DCD	|$LN5@deallocate|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?deallocate@allocator@ce@@QBAXPAXI@Z| PROC ; ce::allocator::deallocate

; 109  :         {operator delete(Ptr); }

  00000		 |$LN5@deallocate|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37726|
  00004	e1a00001	 mov         r0, r1
  00008	eb000000	 bl          |??3@YAXPAX@Z|
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M37727|

			 ENDP  ; |?deallocate@allocator@ce@@QBAXPAXI@Z|, ce::allocator::deallocate

	EXPORT	|?size@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QBAIXZ| ; ce::list<ConstraintAdapter *,ce::allocator>::size
; File c:\wince600\public\common\oak\inc\list.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T37739| DCD	|$LN5@size|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?size@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QBAIXZ| PROC ; ce::list<ConstraintAdapter *,ce::allocator>::size

; 257  :         {return _Size; }

  00000		 |$LN5@size|
  00000		 |$M37736|
  00000	e590000c	 ldr         r0, [r0, #0xC]
  00004	e12fff1e	 bx          lr
  00008		 |$M37737|

			 ENDP  ; |?size@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QBAIXZ|, ce::list<ConstraintAdapter *,ce::allocator>::size

	EXPORT	|?empty@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QBA_NXZ| ; ce::list<ConstraintAdapter *,ce::allocator>::empty

  00000			 AREA	 |.pdata|, PDATA
|$T37751| DCD	|$LN7@empty|
	DCD	0x40000700
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?empty@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QBA_NXZ| PROC ; ce::list<ConstraintAdapter *,ce::allocator>::empty

; 261  :         {return _Size == 0; }

  00000		 |$LN7@empty|
  00000		 |$M37748|
  00000	e590300c	 ldr         r3, [r0, #0xC]
  00004	e3530000	 cmp         r3, #0
  00008	03a03001	 moveq       r3, #1
  0000c	020300ff	 andeq       r0, r3, #0xFF
  00010	13a03000	 movne       r3, #0
  00014	120300ff	 andne       r0, r3, #0xFF
  00018	e12fff1e	 bx          lr
  0001c		 |$M37749|

			 ENDP  ; |?empty@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QBA_NXZ|, ce::list<ConstraintAdapter *,ce::allocator>::empty

	EXPORT	|??Diterator@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QBAAAPAVConstraintAdapter@@XZ| ; ce::list<ConstraintAdapter *,ce::allocator>::iterator::operator*

  00000			 AREA	 |.pdata|, PDATA
|$T37761| DCD	|$LN5@operator@2|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??Diterator@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QBAAAPAVConstraintAdapter@@XZ| PROC ; ce::list<ConstraintAdapter *,ce::allocator>::iterator::operator*

; 526  :             {return _Ptr->_Value; }

  00000		 |$LN5@operator@2|
  00000		 |$M37758|
  00000	e5900000	 ldr         r0, [r0]
  00004	e12fff1e	 bx          lr
  00008		 |$M37759|

			 ENDP  ; |??Diterator@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QBAAAPAVConstraintAdapter@@XZ|, ce::list<ConstraintAdapter *,ce::allocator>::iterator::operator*

	EXPORT	|??Eiterator@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAAAAV012@XZ| ; ce::list<ConstraintAdapter *,ce::allocator>::iterator::operator++

  00000			 AREA	 |.pdata|, PDATA
|$T37771| DCD	|$LN5@operator@3|
	DCD	0x40000500
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??Eiterator@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAAAAV012@XZ| PROC ; ce::list<ConstraintAdapter *,ce::allocator>::iterator::operator++

; 530  :             {_Ptr = _Ptr->_Next;

  00000		 |$LN5@operator@3|
  00000		 |$M37768|
  00000	e1a02000	 mov         r2, r0
  00004	e5923000	 ldr         r3, [r2]

; 531  :             return (*this); }

  00008	e5933004	 ldr         r3, [r3, #4]
  0000c	e5823000	 str         r3, [r2]
  00010	e12fff1e	 bx          lr
  00014		 |$M37769|

			 ENDP  ; |??Eiterator@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAAAAV012@XZ|, ce::list<ConstraintAdapter *,ce::allocator>::iterator::operator++

	EXPORT	|??Eiterator@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAA?AV012@H@Z| ; ce::list<ConstraintAdapter *,ce::allocator>::iterator::operator++

  00000			 AREA	 |.pdata|, PDATA
|$T37785| DCD	|$LN7@operator@4|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??Eiterator@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAA?AV012@H@Z| PROC ; ce::list<ConstraintAdapter *,ce::allocator>::iterator::operator++

; 533  :             {iterator Tmp = *this;

  00000		 |$LN7@operator@4|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37782|
  00004	e1a0e000	 mov         lr, r0
  00008	e59e2000	 ldr         r2, [lr]

; 534  :             ++*this;
; 535  :             return (Tmp); }

  0000c	e1a00001	 mov         r0, r1
  00010	e5923004	 ldr         r3, [r2, #4]
  00014	e5812000	 str         r2, [r1]
  00018	e58e3000	 str         r3, [lr]
  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M37783|

			 ENDP  ; |??Eiterator@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAA?AV012@H@Z|, ce::list<ConstraintAdapter *,ce::allocator>::iterator::operator++

	EXPORT	|?_Freenode@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@IAAXPAU_Node@12@@Z| ; ce::list<ConstraintAdapter *,ce::allocator>::_Freenode
; File c:\wince600\public\common\oak\inc\allocator.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T37796| DCD	|$LN7@Freenode|
	DCD	0x40000501
; Function compile flags: /Ogspy
; File c:\wince600\public\common\oak\inc\list.hxx

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?_Freenode@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@IAAXPAU_Node@12@@Z| PROC ; ce::list<ConstraintAdapter *,ce::allocator>::_Freenode

; 574  :         {deallocate(Node, sizeof(_Node)); }

  00000		 |$LN7@Freenode|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37793|
  00004	e1a00001	 mov         r0, r1
  00008	eb000000	 bl          |??3@YAXPAX@Z|
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M37794|

			 ENDP  ; |?_Freenode@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@IAAXPAU_Node@12@@Z|, ce::list<ConstraintAdapter *,ce::allocator>::_Freenode

	EXPORT	|??8iterator@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QBA_NABV012@@Z| ; ce::list<ConstraintAdapter *,ce::allocator>::iterator::operator==

  00000			 AREA	 |.pdata|, PDATA
|$T37809| DCD	|$LN7@operator@5|
	DCD	0x40000800
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??8iterator@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QBA_NABV012@@Z| PROC ; ce::list<ConstraintAdapter *,ce::allocator>::iterator::operator==

; 544  :             {return (_Ptr == it._Ptr); }

  00000		 |$LN7@operator@5|
  00000		 |$M37806|
  00000	e5902000	 ldr         r2, [r0]
  00004	e5913000	 ldr         r3, [r1]
  00008	e1520003	 cmp         r2, r3
  0000c	03a03001	 moveq       r3, #1
  00010	020300ff	 andeq       r0, r3, #0xFF
  00014	13a03000	 movne       r3, #0
  00018	120300ff	 andne       r0, r3, #0xFF
  0001c	e12fff1e	 bx          lr
  00020		 |$M37807|

			 ENDP  ; |??8iterator@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QBA_NABV012@@Z|, ce::list<ConstraintAdapter *,ce::allocator>::iterator::operator==

	EXPORT	|??0const_iterator@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAA@XZ| ; ce::list<ConstraintAdapter *,ce::allocator>::const_iterator::const_iterator

  00000			 AREA	 |.pdata|, PDATA
|$T37819| DCD	|$LN5@const_iter|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0const_iterator@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAA@XZ| PROC ; ce::list<ConstraintAdapter *,ce::allocator>::const_iterator::const_iterator

; 482  :         const_iterator()

  00000		 |$LN5@const_iter|
  00000		 |$M37816|
  00000	e12fff1e	 bx          lr
  00004		 |$M37817|

			 ENDP  ; |??0const_iterator@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAA@XZ|, ce::list<ConstraintAdapter *,ce::allocator>::const_iterator::const_iterator

	EXPORT	|?_MyNode@const_iterator@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QBAPAU_Node@23@XZ| ; ce::list<ConstraintAdapter *,ce::allocator>::const_iterator::_MyNode

  00000			 AREA	 |.pdata|, PDATA
|$T37829| DCD	|$LN5@MyNode|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?_MyNode@const_iterator@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QBAPAU_Node@23@XZ| PROC ; ce::list<ConstraintAdapter *,ce::allocator>::const_iterator::_MyNode

; 511  :             {return (_Ptr); }

  00000		 |$LN5@MyNode|
  00000		 |$M37826|
  00000	e5900000	 ldr         r0, [r0]
  00004	e12fff1e	 bx          lr
  00008		 |$M37827|

			 ENDP  ; |?_MyNode@const_iterator@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QBAPAU_Node@23@XZ|, ce::list<ConstraintAdapter *,ce::allocator>::const_iterator::_MyNode

	EXPORT	|??0const_iterator@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAA@PAU_Node@12@@Z| ; ce::list<ConstraintAdapter *,ce::allocator>::const_iterator::const_iterator

  00000			 AREA	 |.pdata|, PDATA
|$T37840| DCD	|$LN5@const_iter@2|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0const_iterator@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAA@PAU_Node@12@@Z| PROC ; ce::list<ConstraintAdapter *,ce::allocator>::const_iterator::const_iterator

; 484  :         const_iterator(_NodePtr _P)

  00000		 |$LN5@const_iter@2|
  00000		 |$M37837|
  00000	e5801000	 str         r1, [r0]
  00004	e12fff1e	 bx          lr
  00008		 |$M37838|

			 ENDP  ; |??0const_iterator@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAA@PAU_Node@12@@Z|, ce::list<ConstraintAdapter *,ce::allocator>::const_iterator::const_iterator

	EXPORT	|?_Buynode@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@IAAPAU_Node@12@PAU312@@Z| ; ce::list<ConstraintAdapter *,ce::allocator>::_Buynode
; File c:\wince600\public\common\oak\inc\allocator.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T37855| DCD	|$LN9@Buynode|
	DCD	0x40001501
; Function compile flags: /Ogspy
; File c:\wince600\public\common\oak\inc\list.hxx

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?_Buynode@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@IAAPAU_Node@12@PAU312@@Z| PROC ; ce::list<ConstraintAdapter *,ce::allocator>::_Buynode

; 551  :     {

  00000		 |$LN9@Buynode|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37852|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0

; 552  :         assert(WhereNode);
; 553  :         __assume(WhereNode);
; 554  :         assert(WhereNode->_Prev);
; 555  :         __assume(WhereNode->_Prev);
; 556  :         
; 557  :         if(_NodePtr NewNode = (_NodePtr)allocate(sizeof(_Node)))

  0000c	e3a0000c	 mov         r0, #0xC
  00010	eb000000	 bl          |??2@YAPAXI@Z|
  00014	e3500000	 cmp         r0, #0
  00018	0a00000a	 beq         |$LN2@Buynode|

; 558  :         {
; 559  :             NewNode->_Next = WhereNode;

  0001c	e5804004	 str         r4, [r0, #4]

; 560  :             NewNode->_Prev = WhereNode->_Prev;

  00020	e5943008	 ldr         r3, [r4, #8]

; 561  :             
; 562  :             WhereNode->_Prev->_Next = NewNode;
; 563  :             WhereNode->_Prev = NewNode;
; 564  :             
; 565  :             ++_Size;
; 566  :             
; 567  :             return NewNode;

  00024	e5803008	 str         r3, [r0, #8]
  00028	e5943008	 ldr         r3, [r4, #8]
  0002c	e5830004	 str         r0, [r3, #4]
  00030	e5840008	 str         r0, [r4, #8]
  00034	e595300c	 ldr         r3, [r5, #0xC]
  00038	e2833001	 add         r3, r3, #1
  0003c	e585300c	 str         r3, [r5, #0xC]

; 571  :     }

  00040	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00044	e12fff1e	 bx          lr
  00048		 |$LN2@Buynode|

; 568  :         }
; 569  :         else
; 570  :             return NULL;

  00048	e3a00000	 mov         r0, #0

; 571  :     }

  0004c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$M37853|

			 ENDP  ; |?_Buynode@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@IAAPAU_Node@12@PAU312@@Z|, ce::list<ConstraintAdapter *,ce::allocator>::_Buynode

	EXPORT	|?erase@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@V312@@Z| ; ce::list<ConstraintAdapter *,ce::allocator>::erase
; File c:\wince600\public\common\oak\inc\allocator.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T37892| DCD	|$LN15@erase|
	DCD	0x40001503
; Function compile flags: /Ogspy
; File c:\wince600\public\common\oak\inc\list.hxx

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?erase@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@V312@@Z| PROC ; ce::list<ConstraintAdapter *,ce::allocator>::erase

; 359  :     {

  00000		 |$LN15@erase|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5070	 stmdb       sp!, {r4 - r6, r12, lr}
  0000c		 |$M37889|
  0000c	e1a05001	 mov         r5, r1
  00010	e1a06000	 mov         r6, r0

; 360  :         assert(Where != end());
; 361  :         
; 362  :         _NodePtr WhereNode = (Where++)._MyNode();
; 363  : 
; 364  :         assert(WhereNode);
; 365  :         __assume(WhereNode);
; 366  :         assert(WhereNode->_Prev);
; 367  :         __assume(WhereNode->_Prev);
; 368  :         assert(WhereNode->_Next);
; 369  :         __assume(WhereNode->_Next);
; 370  :         
; 371  :         WhereNode->_Prev->_Next = WhereNode->_Next;

  00014	e592e008	 ldr         lr, [r2, #8]
  00018	e5923004	 ldr         r3, [r2, #4]

; 372  :         WhereNode->_Next->_Prev = WhereNode->_Prev;
; 373  :         
; 374  :         WhereNode->_Value.~T();
; 375  :         _Freenode(WhereNode);

  0001c	e1a00002	 mov         r0, r2
  00020	e1a04003	 mov         r4, r3
  00024	e58e3004	 str         r3, [lr, #4]
  00028	e592e004	 ldr         lr, [r2, #4]
  0002c	e5923008	 ldr         r3, [r2, #8]
  00030	e58e3008	 str         r3, [lr, #8]
  00034	eb000000	 bl          |??3@YAXPAX@Z|

; 376  :         
; 377  :         --_Size;

  00038	e596300c	 ldr         r3, [r6, #0xC]

; 378  :         
; 379  :         return Where;

  0003c	e5854000	 str         r4, [r5]

; 380  :     }

  00040	e1a00005	 mov         r0, r5
  00044	e2433001	 sub         r3, r3, #1
  00048	e586300c	 str         r3, [r6, #0xC]
  0004c	e89d6070	 ldmia       sp, {r4 - r6, sp, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$M37890|

			 ENDP  ; |?erase@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@V312@@Z|, ce::list<ConstraintAdapter *,ce::allocator>::erase

	EXPORT	|??0iterator@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAA@XZ| ; ce::list<ConstraintAdapter *,ce::allocator>::iterator::iterator

  00000			 AREA	 |.pdata|, PDATA
|$T37905| DCD	|$LN7@iterator|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0iterator@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAA@XZ| PROC ; ce::list<ConstraintAdapter *,ce::allocator>::iterator::iterator

; 521  :         iterator()

  00000		 |$LN7@iterator|
  00000		 |$M37902|
  00000	e12fff1e	 bx          lr
  00004		 |$M37903|

			 ENDP  ; |??0iterator@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAA@XZ|, ce::list<ConstraintAdapter *,ce::allocator>::iterator::iterator

	EXPORT	|??9iterator@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QBA_NABV012@@Z| ; ce::list<ConstraintAdapter *,ce::allocator>::iterator::operator!=

  00000			 AREA	 |.pdata|, PDATA
|$T37925| DCD	|$LN11@operator@6|
	DCD	0x40000b00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??9iterator@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QBA_NABV012@@Z| PROC ; ce::list<ConstraintAdapter *,ce::allocator>::iterator::operator!=

; 546  :             {return (!(*this == it)); }

  00000		 |$LN11@operator@6|
  00000		 |$M37922|
  00000	e5902000	 ldr         r2, [r0]
  00004	e5913000	 ldr         r3, [r1]
  00008	e1520003	 cmp         r2, r3
  0000c	03a03001	 moveq       r3, #1
  00010	13a03000	 movne       r3, #0
  00014	e21330ff	 ands        r3, r3, #0xFF
  00018	03a03001	 moveq       r3, #1
  0001c	020300ff	 andeq       r0, r3, #0xFF
  00020	13a03000	 movne       r3, #0
  00024	120300ff	 andne       r0, r3, #0xFF
  00028	e12fff1e	 bx          lr
  0002c		 |$M37923|

			 ENDP  ; |??9iterator@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QBA_NABV012@@Z|, ce::list<ConstraintAdapter *,ce::allocator>::iterator::operator!=

	EXPORT	|??0iterator@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAA@PAU_Node@12@@Z| ; ce::list<ConstraintAdapter *,ce::allocator>::iterator::iterator

  00000			 AREA	 |.pdata|, PDATA
|$T37939| DCD	|$LN7@iterator@2|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0iterator@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAA@PAU_Node@12@@Z| PROC ; ce::list<ConstraintAdapter *,ce::allocator>::iterator::iterator

; 523  :         iterator(_NodePtr _P)

  00000		 |$LN7@iterator@2|
  00000		 |$M37936|
  00000	e5801000	 str         r1, [r0]
  00004	e12fff1e	 bx          lr
  00008		 |$M37937|

			 ENDP  ; |??0iterator@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAA@PAU_Node@12@@Z|, ce::list<ConstraintAdapter *,ce::allocator>::iterator::iterator

	EXPORT	|??__Fcs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@YAXXZ| ; `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::`dynamic atexit destructor for 'cs''
	EXPORT	|??_B?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@51| [ DATA ] ; `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::`local static guard'
	EXPORT	|?get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ| ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock
	EXPORT	|?cs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@3@XZ@4V43@A| [ DATA ] ; `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::cs
	IMPORT	|atexit|
; File c:\wince600\public\common\oak\inc\sync.hxx

  00000			 AREA	 |.bss|, NOINIT
|??_B?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@51| % 0x4 ; `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::`local static guard'

  00000			 AREA	 |.bss|, NOINIT
|?cs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@3@XZ@4V43@A| % 0x14 ; `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::cs

  00000			 AREA	 |.pdata|, PDATA
|$T37951| DCD	|$LN8@get_lock|
	DCD	0x40001602
; Function compile flags: /Ogspy
; File c:\wince600\public\common\oak\inc\singleton.hxx

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ| PROC ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock

; 320  :     {

  00000		 |$LN8@get_lock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M37948|

; 321  :         static critical_section cs;

  00008	e59f2044	 ldr         r2, [pc, #0x44]
  0000c	e5923000	 ldr         r3, [r2]
  00010	e3130001	 tst         r3, #1
  00014	1a000005	 bne         |$LN1@get_lock|
  00018	e59f0028	 ldr         r0, [pc, #0x28]
  0001c	e3833001	 orr         r3, r3, #1
  00020	e5823000	 str         r3, [r2]
  00024	eb000000	 bl          InitializeCriticalSection
  00028	e59f0020	 ldr         r0, [pc, #0x20]
  0002c	eb000000	 bl          atexit
  00030		 |$LN1@get_lock|

; 322  :         
; 323  :         //
; 324  :         // This statement forces compiler to instantiate _factory member
; 325  :         // thus assuring that lock_factory ctor is called. 
; 326  :         //
; 327  :         lock_factory* volatile p = &_factory;

  00030	e59f3014	 ldr         r3, [pc, #0x14]

; 328  : 
; 329  :         return cs;
; 330  :     }

  00034	e59f000c	 ldr         r0, [pc, #0xC]
  00038	e58d3000	 str         r3, [sp]
  0003c	e28dd004	 add         sp, sp, #4
  00040	e49de004	 ldr         lr, [sp], #4
  00044	e12fff1e	 bx          lr
  00048		 |$LN9@get_lock|
  00048		 |$LN10@get_lock|
  00048	00000000	 DCD         |?cs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@3@XZ@4V43@A|
  0004c		 |$LN11@get_lock|
  0004c	00000000	 DCD         |?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A|
  00050		 |$LN12@get_lock|
  00050	00000000	 DCD         |??__Fcs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@YAXXZ|
  00054		 |$LN13@get_lock|
  00054	00000000	 DCD         |??_B?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@51|
  00058		 |$M37949|

			 ENDP  ; |?get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ|, ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock

	EXPORT	|??0lock_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@QAA@XZ| ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::lock_factory::lock_factory

  00000			 AREA	 |.pdata|, PDATA
|$T37966| DCD	|$LN5@lock_facto|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0lock_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@QAA@XZ| PROC ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::lock_factory::lock_factory

; 339  :         lock_factory()

  00000		 |$LN5@lock_facto|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37963|
  00004	e1a04000	 mov         r4, r0
  00008	eb000000	 bl          |?get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ|

; 340  :             {get_lock(); }

  0000c	e1a00004	 mov         r0, r4
  00010	e8bd4010	 ldmia       sp!, {r4, lr}
  00014	e12fff1e	 bx          lr
  00018		 |$M37964|

			 ENDP  ; |??0lock_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@QAA@XZ|, ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::lock_factory::lock_factory

	EXPORT	|?begin@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@XZ| ; ce::list<ConstraintAdapter *,ce::allocator>::begin
; File c:\wince600\public\common\oak\inc\list.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T37986| DCD	|$LN9@begin|
	DCD	0x40000500
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?begin@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@XZ| PROC ; ce::list<ConstraintAdapter *,ce::allocator>::begin

; 229  :         {return (iterator(_Head->_Next)); }

  00000		 |$LN9@begin|
  00000		 |$M37983|
  00000	e5903000	 ldr         r3, [r0]
  00004	e1a00001	 mov         r0, r1
  00008	e5933004	 ldr         r3, [r3, #4]
  0000c	e5813000	 str         r3, [r1]
  00010	e12fff1e	 bx          lr
  00014		 |$M37984|

			 ENDP  ; |?begin@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@XZ|, ce::list<ConstraintAdapter *,ce::allocator>::begin

	EXPORT	|?end@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@XZ| ; ce::list<ConstraintAdapter *,ce::allocator>::end

  00000			 AREA	 |.pdata|, PDATA
|$T38006| DCD	|$LN9@end|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?end@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@XZ| PROC ; ce::list<ConstraintAdapter *,ce::allocator>::end

; 236  :         {return (iterator(_Head)); }

  00000		 |$LN9@end|
  00000		 |$M38003|
  00000	e5903000	 ldr         r3, [r0]
  00004	e1a00001	 mov         r0, r1
  00008	e5813000	 str         r3, [r1]
  0000c	e12fff1e	 bx          lr
  00010		 |$M38004|

			 ENDP  ; |?end@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@XZ|, ce::list<ConstraintAdapter *,ce::allocator>::end

	EXPORT	|??$insert@PAVConstraintAdapter@@@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@01@V201@ABQAVConstraintAdapter@@@Z| ; ce::list<ConstraintAdapter *,ce::allocator>::insert<ConstraintAdapter *>

  00000			 AREA	 |.pdata|, PDATA
|$T38053| DCD	|$LN22@insert|
	DCD	0x40000f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??$insert@PAVConstraintAdapter@@@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@01@V201@ABQAVConstraintAdapter@@@Z| PROC ; ce::list<ConstraintAdapter *,ce::allocator>::insert<ConstraintAdapter *>

; 269  :     iterator insert(iterator Where, const _Val& Value)

  00000		 |$LN22@insert|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M38050|
  00004	e1a06003	 mov         r6, r3
  00008	e1a04001	 mov         r4, r1
  0000c	e1a05000	 mov         r5, r0

; 270  :     {
; 271  :         _NodePtr NewNode = _Buynode(Where._MyNode());

  00010	e1a01002	 mov         r1, r2
  00014	eb000000	 bl          |?_Buynode@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@IAAPAU_Node@12@PAU312@@Z|
  00018	e3500000	 cmp         r0, #0

; 272  :         
; 273  :         if(NewNode == NULL)
; 274  :             return end();

  0001c	05953000	 ldreq       r3, [r5]
  00020	05843000	 streq       r3, [r4]

; 275  : 
; 276  :         // To avoid using operator& for type T (which may be overloaded)
; 277  :         // we are constructing item in the memory pointed to by NewNode.
; 278  :         // This assumes that _Value is the first member.
; 279  :         new (NewNode) T(Value);

  00024	15963000	 ldrne       r3, [r6]

; 280  :         
; 281  :         return NewNode;

  00028	15840000	 strne       r0, [r4]
  0002c	15803000	 strne       r3, [r0]

; 282  :     }

  00030	e1a00004	 mov         r0, r4
  00034	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$M38051|

			 ENDP  ; |??$insert@PAVConstraintAdapter@@@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@01@V201@ABQAVConstraintAdapter@@@Z|, ce::list<ConstraintAdapter *,ce::allocator>::insert<ConstraintAdapter *>

	EXPORT	|?Uninitialize@ConstraintContainer@@QAAXXZ| ; ConstraintContainer::Uninitialize
	IMPORT	|?Uninitialize@ConstraintAdapter@@QAAXXZ| ; ConstraintAdapter::Uninitialize

  00000			 AREA	 |.pdata|, PDATA
|$T38133| DCD	|$LN34@Uninitiali|
	DCD	0x40001a02
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\constraintroot\constraintcontainer.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Uninitialize@ConstraintContainer@@QAAXXZ| PROC ; ConstraintContainer::Uninitialize

; 31   : {

  00000		 |$LN34@Uninitiali|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M38130|
  00008	e1a04000	 mov         r4, r0
  0000c		 |$LL2@Uninitiali|

; 32   :     // Look for device by walking through list
; 33   :     while (empty() == FALSE)

  0000c	e594300c	 ldr         r3, [r4, #0xC]
  00010	e3530000	 cmp         r3, #0
  00014	03a03001	 moveq       r3, #1
  00018	13a03000	 movne       r3, #0
  0001c	e21330ff	 ands        r3, r3, #0xFF

; 34   :     {
; 35   :         (*begin())->Uninitialize();
; 36   :         delete (*begin());
; 37   :         erase(begin());
; 38   : 
; 39   :     }

  00020	1a00000d	 bne         |$LN1@Uninitiali|
  00024	e5943000	 ldr         r3, [r4]
  00028	e5933004	 ldr         r3, [r3, #4]
  0002c	e5930000	 ldr         r0, [r3]
  00030	eb000000	 bl          |?Uninitialize@ConstraintAdapter@@QAAXXZ|
  00034	e5943000	 ldr         r3, [r4]
  00038	e5933004	 ldr         r3, [r3, #4]
  0003c	e5930000	 ldr         r0, [r3]
  00040	eb000000	 bl          |??3@YAXPAX@Z|
  00044	e5943000	 ldr         r3, [r4]
  00048	e28d1000	 add         r1, sp, #0
  0004c	e1a00004	 mov         r0, r4
  00050	e5932004	 ldr         r2, [r3, #4]
  00054	eb000000	 bl          |?erase@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@V312@@Z|
  00058	eaffffeb	 b           |$LL2@Uninitiali|
  0005c		 |$LN1@Uninitiali|

; 40   : }

  0005c	e28dd004	 add         sp, sp, #4
  00060	e8bd4010	 ldmia       sp!, {r4, lr}
  00064	e12fff1e	 bx          lr
  00068		 |$M38131|

			 ENDP  ; |?Uninitialize@ConstraintContainer@@QAAXXZ|, ConstraintContainer::Uninitialize

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|?Initialize@ConstraintContainer@@QAAHPBG@Z| ; ConstraintContainer::Initialize
	EXPORT	|??_C@_13FPGAJAPJ@?$AA?2?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|RegCloseKey|
	IMPORT	|?Initialize@ConstraintAdapter@@QAAHPBG@Z| ; ConstraintAdapter::Initialize
	IMPORT	|RegEnumKeyExW|
	IMPORT	|RegQueryInfoKeyW|
	IMPORT	|RegOpenKeyExW|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_cookie|
	IMPORT	|wcscpy|
	IMPORT	|memcpy|
	IMPORT	|__security_check_cookie|
; File c:\wince600\public\common\oak\inc\list.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T38304| DCD	|$LN75@Initialize|
	DCD	0xc0007f03

  00000			 AREA	 |.xdata|, DATA
|$T38300| DCD	0xffffffd8

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_13FPGAJAPJ@?$AA?2?$AA?$AA@| DCB "\\", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\constraintroot\constraintcontainer.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T38300|

  00008		 |?Initialize@ConstraintContainer@@QAAHPBG@Z| PROC ; ConstraintContainer::Initialize

; 51   : {

  00008		 |$LN75@Initialize|
  00008	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  0000c	e59fc1ec	 ldr         r12, [pc, #0x1EC]
  00010	e08dd00c	 add         sp, sp, r12
  00014		 |$M38301|
  00014	e1a06001	 mov         r6, r1
  00018	e1a07000	 mov         r7, r0
  0001c	e59f31d8	 ldr         r3, [pc, #0x1D8]
  00020	e5933000	 ldr         r3, [r3]
  00024	e58d3644	 str         r3, [sp, #0x644]

; 52   :     BOOL rc = FALSE;
; 53   :     HKEY hKey = NULL;

  00028	e3a04000	 mov         r4, #0

; 54   :     LONG code;
; 55   :     DWORD size;
; 56   :     DWORD subKeys;    
; 57   :     int nRootKeyLen;
; 58   :     iterator iAdapter;
; 59   :     ConstraintAdapter *pAdapter;
; 60   :     _TCHAR szBuffer[MAX_PATH];
; 61   :     _TCHAR szSubKeyBuffer[MAX_PATH * 2];
; 62   : 
; 63   : 
; 64   :     // Open template registry key
; 65   :     code = RegOpenKeyEx(HKEY_LOCAL_MACHINE, szContext, 0, 0, &hKey);

  0002c	e28de020	 add         lr, sp, #0x20
  00030	e3a03000	 mov         r3, #0
  00034	e3a02000	 mov         r2, #0
  00038	e3a0010a	 mov         r0, #0xA, 2
  0003c	e58d4020	 str         r4, [sp, #0x20]
  00040	e58de000	 str         lr, [sp]
  00044	e3a05000	 mov         r5, #0
  00048	eb000000	 bl          RegOpenKeyExW
  0004c	e3500000	 cmp         r0, #0

; 66   :     if (code != ERROR_SUCCESS)

  00050	1a00005d	 bne         |$cleanUp$36842|

; 67   :         {
; 68   :         goto cleanUp;
; 69   :         }
; 70   : 
; 71   :     // copy text into buffer
; 72   :     nRootKeyLen = _tcslen(szContext);

  00054	e1a00006	 mov         r0, r6
  00058	eb000000	 bl          wcslen
  0005c	e1a04000	 mov         r4, r0

; 73   :     memcpy(szSubKeyBuffer, szContext, nRootKeyLen * sizeof(_TCHAR));

  00060	e1a02084	 mov         r2, r4, lsl #1
  00064	e1a01006	 mov         r1, r6
  00068	e28d0f8d	 add         r0, sp, #0x8D, 30
  0006c	eb000000	 bl          memcpy

; 74   : 
; 75   :     // append '\' to end of string
; 76   :     _tcscpy(szSubKeyBuffer + nRootKeyLen, L"\\");

  00070	e59f1180	 ldr         r1, [pc, #0x180]
  00074	e28d3f8d	 add         r3, sp, #0x8D, 30
  00078	e0830084	 add         r0, r3, r4, lsl #1
  0007c	eb000000	 bl          wcscpy

; 77   :     ++nRootKeyLen;
; 78   : 
; 79   :     // Find number of subkeys
; 80   :     code = RegQueryInfoKey(hKey, 0, 0, 0, &subKeys, 0, 0, 0, 0, 0, 0, 0);

  00080	e59d0020	 ldr         r0, [sp, #0x20]
  00084	e28de024	 add         lr, sp, #0x24
  00088	e3a09000	 mov         r9, #0
  0008c	e3a03000	 mov         r3, #0
  00090	e3a02000	 mov         r2, #0
  00094	e3a01000	 mov         r1, #0
  00098	e58de000	 str         lr, [sp]
  0009c	e2848001	 add         r8, r4, #1
  000a0	e58d901c	 str         r9, [sp, #0x1C]
  000a4	e58d9018	 str         r9, [sp, #0x18]
  000a8	e58d9014	 str         r9, [sp, #0x14]
  000ac	e58d9010	 str         r9, [sp, #0x10]
  000b0	e58d900c	 str         r9, [sp, #0xC]
  000b4	e58d9008	 str         r9, [sp, #8]
  000b8	e58d9004	 str         r9, [sp, #4]
  000bc	eb000000	 bl          RegQueryInfoKeyW
  000c0	e3500000	 cmp         r0, #0

; 81   :     if (code != ERROR_SUCCESS)

  000c4	1a000040	 bne         |$cleanUp$36842|

; 82   :         {
; 83   :         goto cleanUp;
; 84   :         }
; 85   : 
; 86   :     for (DWORD index = 0; index < subKeys; index++)

  000c8	e59d3024	 ldr         r3, [sp, #0x24]
  000cc	e3a05000	 mov         r5, #0
  000d0	e3530000	 cmp         r3, #0
  000d4	0a00003b	 beq         |$LN8@Initialize|
  000d8	e3a0ac0a	 mov         r10, #0xA, 24
  000dc	e28d6f8d	 add         r6, sp, #0x8D, 30
  000e0	e3a0bf41	 mov         r11, #0x41, 30
  000e4		 |$LL10@Initialize|

; 87   :         {
; 88   :         // Get subkey name
; 89   :         size = MAX_PATH;
; 90   :         code = RegEnumKeyEx(hKey, index, szBuffer, &size, 0, 0, 0, 0);

  000e4	e59d0020	 ldr         r0, [sp, #0x20]
  000e8	e28d3028	 add         r3, sp, #0x28
  000ec	e28d202c	 add         r2, sp, #0x2C
  000f0	e1a01005	 mov         r1, r5
  000f4	e58db028	 str         r11, [sp, #0x28]
  000f8	e58d900c	 str         r9, [sp, #0xC]
  000fc	e58d9008	 str         r9, [sp, #8]
  00100	e58d9004	 str         r9, [sp, #4]
  00104	e58d9000	 str         r9, [sp]
  00108	eb000000	 bl          RegEnumKeyExW
  0010c	e3500000	 cmp         r0, #0

; 91   :         if (code != ERROR_SUCCESS)

  00110	1a000028	 bne         |$LN9@Initialize|

; 92   :             {
; 93   :             continue;
; 94   :             }
; 95   : 
; 96   :         // Create child device object
; 97   :         pAdapter = new ConstraintAdapter();

  00114	e38a0044	 orr         r0, r10, #0x44
  00118	eb000000	 bl          |??2@YAPAXI@Z|
  0011c	e3500000	 cmp         r0, #0
  00120	0a000002	 beq         |$LN17@Initialize|
  00124	eb000000	 bl          |??0ConstraintAdapter@@QAA@XZ|
  00128	e1a04000	 mov         r4, r0
  0012c	ea000000	 b           |$LN18@Initialize|
  00130		 |$LN17@Initialize|
  00130	e3a04000	 mov         r4, #0
  00134		 |$LN18@Initialize|

; 98   :         if (pAdapter == NULL)

  00134	e3540000	 cmp         r4, #0
  00138	0a00001e	 beq         |$LN9@Initialize|

; 99   :             {
; 100  :             continue;
; 101  :             }
; 102  : 
; 103  :         // create a copy of key
; 104  :         _tcscpy(szSubKeyBuffer + nRootKeyLen, szBuffer);

  0013c	e28d102c	 add         r1, sp, #0x2C
  00140	e0860088	 add         r0, r6, r8, lsl #1
  00144	eb000000	 bl          wcscpy

; 105  : 
; 106  :         // Initialize child device object
; 107  :         if (!pAdapter->Initialize(szSubKeyBuffer))

  00148	e28d1f8d	 add         r1, sp, #0x8D, 30
  0014c	e1a00004	 mov         r0, r4
  00150	eb000000	 bl          |?Initialize@ConstraintAdapter@@QAAHPBG@Z|
  00154	e3500000	 cmp         r0, #0
  00158	1a000002	 bne         |$LN5@Initialize|

; 108  :             {
; 109  :             // This will result in delete
; 110  :             delete pAdapter;

  0015c	e1a00004	 mov         r0, r4
  00160	eb000000	 bl          |??3@YAXPAX@Z|

; 111  :             continue;

  00164	ea000013	 b           |$LN9@Initialize|
  00168		 |$LN5@Initialize|

; 112  :             }
; 113  :         
; 114  :         // Add child object to array based on order 
; 115  :         for (iAdapter = begin(); 

  00168	e5970000	 ldr         r0, [r7]
  0016c	e5901004	 ldr         r1, [r0, #4]

; 116  :              iAdapter != end() && (*iAdapter)->GetLoadOrder() < pAdapter->GetLoadOrder();
; 117  :              ++iAdapter
; 118  :              );

  00170		 |$LL29@Initialize|
  00170	e1510000	 cmp         r1, r0
  00174	03a03001	 moveq       r3, #1
  00178	13a03000	 movne       r3, #0
  0017c	e21330ff	 ands        r3, r3, #0xFF
  00180	03a03001	 moveq       r3, #1
  00184	13a03000	 movne       r3, #0
  00188	e21330ff	 ands        r3, r3, #0xFF

; 129  : }

  0018c	0a000005	 beq         |$LN2@Initialize|
  00190	e5913000	 ldr         r3, [r1]
  00194	e5942004	 ldr         r2, [r4, #4]
  00198	e5933004	 ldr         r3, [r3, #4]
  0019c	e1530002	 cmp         r3, r2
  001a0	35911004	 ldrcc       r1, [r1, #4]
  001a4	3afffff1	 bcc         |$LL29@Initialize|
  001a8		 |$LN2@Initialize|

; 119  : 
; 120  :         // Insert 
; 121  :         insert(iAdapter, pAdapter);        

  001a8	e1a00007	 mov         r0, r7
  001ac	eb000000	 bl          |?_Buynode@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@IAAPAU_Node@12@PAU312@@Z|
  001b0	e3500000	 cmp         r0, #0
  001b4	15804000	 strne       r4, [r0]
  001b8		 |$LN9@Initialize|
  001b8	e59d3024	 ldr         r3, [sp, #0x24]
  001bc	e2855001	 add         r5, r5, #1
  001c0	e1550003	 cmp         r5, r3
  001c4	3affffc6	 bcc         |$LL10@Initialize|
  001c8		 |$LN8@Initialize|

; 122  :     }
; 123  :     
; 124  :     rc = TRUE;

  001c8	e3a05001	 mov         r5, #1
  001cc		 |$cleanUp$36842|

; 125  :     
; 126  : cleanUp:
; 127  :     if (hKey != NULL) RegCloseKey(hKey);

  001cc	e59d0020	 ldr         r0, [sp, #0x20]
  001d0	e3500000	 cmp         r0, #0
  001d4	1b000000	 blne        RegCloseKey

; 128  :     return rc;

  001d8	e59d0644	 ldr         r0, [sp, #0x644]
  001dc	eb000000	 bl          __security_check_cookie

; 129  : }

  001e0	e1a00005	 mov         r0, r5
  001e4	e3a0cc06	 mov         r12, #6, 24
  001e8	e38cc048	 orr         r12, r12, #0x48
  001ec	e08dd00c	 add         sp, sp, r12
  001f0	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  001f4	e12fff1e	 bx          lr
  001f8		 |$LN76@Initialize|
  001f8		 |$LN77@Initialize|
  001f8	00000000	 DCD         |??_C@_13FPGAJAPJ@?$AA?2?$AA?$AA@|
  001fc		 |$LN78@Initialize|
  001fc	00000000	 DCD         |__security_cookie|
  00200		 |$LN79@Initialize|
  00200	fffff9b8	 DCD         0xfffff9b8
  00204		 |$M38302|

			 ENDP  ; |?Initialize@ConstraintContainer@@QAAHPBG@Z|, ConstraintContainer::Initialize

	EXPORT	|?PostInitialize@ConstraintContainer@@QAAHXZ| ; ConstraintContainer::PostInitialize
	IMPORT	|?PostInitialize@ConstraintAdapter@@QAAHXZ| ; ConstraintAdapter::PostInitialize
; File c:\wince600\public\common\oak\inc\list.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T38384| DCD	|$LN38@PostInitia|
	DCD	0x40001e02
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\constraintroot\constraintcontainer.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PostInitialize@ConstraintContainer@@QAAHXZ| PROC ; ConstraintContainer::PostInitialize

; 138  : {

  00000		 |$LN38@PostInitia|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M38381|
  00008	e1a07000	 mov         r7, r0

; 139  :     // Look for device by walking through list
; 140  :     int nCount = size();
; 141  :     iterator iAdapterErase;
; 142  :     iterator iAdapter = begin();    

  0000c	e5973000	 ldr         r3, [r7]
  00010	e597500c	 ldr         r5, [r7, #0xC]

; 143  :     while (nCount > 0)

  00014	e5936004	 ldr         r6, [r3, #4]
  00018	ea000010	 b           |$LN35@PostInitia|
  0001c		 |$LL4@PostInitia|

; 144  :         {
; 145  :         if ((*iAdapter)->PostInitialize() == FALSE)

  0001c	e5960000	 ldr         r0, [r6]
  00020	eb000000	 bl          |?PostInitialize@ConstraintAdapter@@QAAHXZ|
  00024	e3500000	 cmp         r0, #0
  00028	1a00000a	 bne         |$LN2@PostInitia|

; 146  :             {
; 147  :             iAdapterErase = iAdapter;

  0002c	e1a04006	 mov         r4, r6

; 148  :             iAdapter++;
; 149  : 
; 150  :             (*iAdapterErase)->Uninitialize();

  00030	e5940000	 ldr         r0, [r4]
  00034	e5966004	 ldr         r6, [r6, #4]
  00038	eb000000	 bl          |?Uninitialize@ConstraintAdapter@@QAAXXZ|

; 151  :             delete *iAdapterErase;

  0003c	e5940000	 ldr         r0, [r4]
  00040	eb000000	 bl          |??3@YAXPAX@Z|

; 152  :             erase(iAdapterErase);

  00044	e1a02004	 mov         r2, r4
  00048	e28d1000	 add         r1, sp, #0
  0004c	e1a00007	 mov         r0, r7
  00050	eb000000	 bl          |?erase@?$list@PAVConstraintAdapter@@Vallocator@ce@@@ce@@QAA?AViterator@12@V312@@Z|

; 153  :             }
; 154  :         else

  00054	ea000000	 b           |$LN31@PostInitia|
  00058		 |$LN2@PostInitia|

; 155  :             {
; 156  :             iAdapter++;

  00058	e5966004	 ldr         r6, [r6, #4]
  0005c		 |$LN31@PostInitia|

; 157  :             }
; 158  :         --nCount;

  0005c	e2455001	 sub         r5, r5, #1
  00060		 |$LN35@PostInitia|
  00060	e3550000	 cmp         r5, #0
  00064	caffffec	 bgt         |$LL4@PostInitia|

; 159  :         }
; 160  :         
; 161  :     return TRUE;

  00068	e3a00001	 mov         r0, #1

; 162  : }

  0006c	e28dd004	 add         sp, sp, #4
  00070	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00074	e12fff1e	 bx          lr
  00078		 |$M38382|

			 ENDP  ; |?PostInitialize@ConstraintContainer@@QAAHXZ|, ConstraintContainer::PostInitialize

	EXPORT	|?FindAdapterById@ConstraintContainer@@QAAPAVConstraintAdapter@@PBG@Z| ; ConstraintContainer::FindAdapterById
; File c:\wince600\public\common\oak\inc\list.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T38468| DCD	|$LN40@FindAdapte|
	DCD	0x40001901
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\constraintroot\constraintcontainer.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?FindAdapterById@ConstraintContainer@@QAAPAVConstraintAdapter@@PBG@Z| PROC ; ConstraintContainer::FindAdapterById

; 173  : {

  00000		 |$LN40@FindAdapte|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M38465|
  00004	e1b07001	 movs        r7, r1

; 174  :     ConstraintAdapter *pAdapter = NULL;

  00008	e3a05000	 mov         r5, #0

; 175  :     if (szId == NULL) return NULL;

  0000c	03a05000	 moveq       r5, #0
  00010	0a000010	 beq         |$LN2@FindAdapte|

; 176  : 
; 177  :     // Look for device by walking through list
; 178  :     for (iterator iAdapter = begin(); iAdapter != end(); iAdapter++)

  00014	e5906000	 ldr         r6, [r0]
  00018	e5964004	 ldr         r4, [r6, #4]
  0001c		 |$LL16@FindAdapte|
  0001c	e1540006	 cmp         r4, r6
  00020	03a03001	 moveq       r3, #1
  00024	13a03000	 movne       r3, #0
  00028	e21330ff	 ands        r3, r3, #0xFF
  0002c	03a03001	 moveq       r3, #1
  00030	13a03000	 movne       r3, #0
  00034	e21330ff	 ands        r3, r3, #0xFF

; 183  :             break;
; 184  :             }
; 185  :         }
; 186  :         
; 187  :     return pAdapter;
; 188  : }

  00038	0a000006	 beq         |$LN2@FindAdapte|
  0003c	e5940000	 ldr         r0, [r4]
  00040	e1a01007	 mov         r1, r7
  00044	eb000000	 bl          |?IsAdapterId@ConstraintAdapter@@QAAHPBG@Z|
  00048	e3500000	 cmp         r0, #0
  0004c	05944004	 ldreq       r4, [r4, #4]
  00050	0afffff1	 beq         |$LL16@FindAdapte|

; 179  :         {
; 180  :         if ((*iAdapter)->IsAdapterId(szId) != FALSE)
; 181  :             {
; 182  :             pAdapter = *iAdapter;

  00054	e5945000	 ldr         r5, [r4]
  00058		 |$LN2@FindAdapte|

; 183  :             break;
; 184  :             }
; 185  :         }
; 186  :         
; 187  :     return pAdapter;
; 188  : }

  00058	e1a00005	 mov         r0, r5
  0005c	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$M38466|

			 ENDP  ; |?FindAdapterById@ConstraintContainer@@QAAPAVConstraintAdapter@@PBG@Z|, ConstraintContainer::FindAdapterById

	EXPORT	|?FindAdapterByClass@ConstraintContainer@@QAAPAVConstraintAdapter@@I@Z| ; ConstraintContainer::FindAdapterByClass
; File c:\wince600\public\common\oak\inc\list.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T38552| DCD	|$LN39@FindAdapte@2|
	DCD	0x40001701
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\constraintroot\constraintcontainer.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?FindAdapterByClass@ConstraintContainer@@QAAPAVConstraintAdapter@@I@Z| PROC ; ConstraintContainer::FindAdapterByClass

; 199  : {

  00000		 |$LN39@FindAdapte@2|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M38549|
  00004	e1a07001	 mov         r7, r1

; 200  :     ConstraintAdapter *pAdapter = NULL;
; 201  : 
; 202  :     // Look for device by walking through list
; 203  :     for (iterator iAdapter = begin(); iAdapter != end(); iAdapter++)

  00008	e5906000	 ldr         r6, [r0]
  0000c	e3a05000	 mov         r5, #0
  00010	e5964004	 ldr         r4, [r6, #4]
  00014		 |$LL15@FindAdapte@2|
  00014	e1540006	 cmp         r4, r6
  00018	03a03001	 moveq       r3, #1
  0001c	13a03000	 movne       r3, #0
  00020	e21330ff	 ands        r3, r3, #0xFF
  00024	03a03001	 moveq       r3, #1
  00028	13a03000	 movne       r3, #0
  0002c	e21330ff	 ands        r3, r3, #0xFF

; 208  :             break;
; 209  :             }
; 210  :         }
; 211  :         
; 212  :     return pAdapter;
; 213  : }

  00030	0a000006	 beq         |$LN2@FindAdapte@2|
  00034	e5940000	 ldr         r0, [r4]
  00038	e1a01007	 mov         r1, r7
  0003c	eb000000	 bl          |?IsAdapterClass@ConstraintAdapter@@QAAHK@Z|
  00040	e3500000	 cmp         r0, #0
  00044	05944004	 ldreq       r4, [r4, #4]
  00048	0afffff1	 beq         |$LL15@FindAdapte@2|

; 204  :         {
; 205  :         if ((*iAdapter)->IsAdapterClass(adapterClass) != FALSE)
; 206  :             {
; 207  :             pAdapter = *iAdapter;

  0004c	e5945000	 ldr         r5, [r4]
  00050		 |$LN2@FindAdapte@2|

; 208  :             break;
; 209  :             }
; 210  :         }
; 211  :         
; 212  :     return pAdapter;
; 213  : }

  00050	e1a00005	 mov         r0, r5
  00054	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00058	e12fff1e	 bx          lr
  0005c		 |$M38550|

			 ENDP  ; |?FindAdapterByClass@ConstraintContainer@@QAAPAVConstraintAdapter@@I@Z|, ConstraintContainer::FindAdapterByClass

; File c:\wince600\public\common\oak\inc\singleton.hxx

  00000			 AREA	 |.pdata|, PDATA
|$T38562| DCD	|$LN7@factory|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text$yc|, CODE, ARM

  00000		 |??__E?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A@@YAXXZ| PROC ; `dynamic initializer for 'ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::_factory''

; 390  :     {

  00000		 |$LN7@factory|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M38559|
  00004	eb000000	 bl          |?get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ|
  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M38560|

			 ENDP  ; |??__E?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A@@YAXXZ|, `dynamic initializer for 'ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::_factory''


  00000			 AREA	 |.pdata|, PDATA
|$T38572| DCD	|$LN7@dynamic|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text$yd|, CODE, ARM

  00000		 |??__Fcs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@YAXXZ| PROC ; `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::`dynamic atexit destructor for 'cs''
  00000		 |$LN7@dynamic|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M38569|
  00004	e59f0008	 ldr         r0, [pc, #8]
  00008	eb000000	 bl          DeleteCriticalSection
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$LN8@dynamic|
  00014		 |$LN9@dynamic|
  00014	00000000	 DCD         |?cs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@3@XZ@4V43@A|
  00018		 |$M38570|

			 ENDP  ; |??__Fcs@?1??get_lock@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@KAAAVcritical_section@2@XZ@YAXXZ|, `ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::get_lock'::`2'::`dynamic atexit destructor for 'cs''

	EXPORT	|?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A| [ DATA ] ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::_factory

  00000			 AREA	 |.bss|, NOINIT
|?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A| % 0x1 ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::_factory

  00000			 AREA	 |.CRT$XCU|, DATA
|?_factory$initializer$@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1P6AXXZA| DCD |??__E?_factory@?$singleton@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03V?$static_allocator@V?$free_list@$0GE@Vallocator@ce@@@ce@@$03@2@@ce@@1Ulock_factory@12@A@@YAXXZ| ; ce::singleton<ce::free_list<100,ce::allocator>,4,ce::static_allocator<ce::free_list<100,ce::allocator>,4> >::_factory$initializer$
	END
