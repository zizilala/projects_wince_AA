; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\BOOT\USBFN\pdd.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.data|, DATA
	 COMMON	|g_usbfnpdd|, 0x180


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|DumpUSBRegisters|
	EXPORT	|??_C@_1DA@DEOJCLGI@?$AAO?$AAT?$AAG?$AA_?$AAR?$AAe?$AAv?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@CHHHKPND@?$AAO?$AAT?$AAG?$AA_?$AAF?$AAO?$AAR?$AAC?$AAE?$AAS?$AAT?$AAD?$AAB?$AAY?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@OENGJMCI@?$AAO?$AAT?$AAG?$AA_?$AAI?$AAN?$AAT?$AAE?$AAR?$AAF?$AAS?$AAE?$AAL?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@GEBFFKAL@?$AAO?$AAT?$AAG?$AA_?$AAS?$AAY?$AAS?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@CABDIMAB@?$AAO?$AAT?$AAG?$AA_?$AAS?$AAY?$AAS?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@DMGANBPN@?$AAO?$AAT?$AAG?$AA_?$AAS?$AAI?$AAM?$AAE?$AAN?$AAA?$AAB?$AAL?$AAE?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@IOAOHBNJ@?$AAF?$AAA?$AAd?$AAd?$AAr?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@EGGCJLAM@?$AAD?$AAe?$AAv?$AAC?$AAt?$AAl?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@LNNNDCLE@?$AAI?$AAn?$AAt?$AAr?$AAR?$AAx?$AAE?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@OIKEFDKE@?$AAI?$AAn?$AAt?$AAr?$AAT?$AAx?$AAE?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@DKPCLIME@?$AAI?$AAn?$AAt?$AAr?$AAU?$AAS?$AAB?$AAE?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@BEKHFDOA@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@DDJNBFOK@?$AAR?$AAx?$AAF?$AAI?$AAF?$AAO?$AAs?$AAz?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@CGHLAJLF@?$AAR?$AAx?$AAF?$AAI?$AAF?$AAO?$AAa?$AAd?$AAd?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@LODJHPCC@?$AAT?$AAx?$AAF?$AAI?$AAF?$AAO?$AAs?$AAz?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@KLNPGDHN@?$AAT?$AAx?$AAF?$AAI?$AAF?$AAO?$AAa?$AAd?$AAd?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|NKDbgPrintfW|
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\boot\usbfn\pdd.c

  00000			 AREA	 |.pdata|, PDATA
|$T46557| DCD	|$LN5@DumpUSBReg|
	DCD	0x40004501

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@DEOJCLGI@?$AAO?$AAT?$AAG?$AA_?$AAR?$AAe?$AAv?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "T", 0x0, "G", 0x0, "_", 0x0, "R", 0x0, "e", 0x0, "v"
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@CHHHKPND@?$AAO?$AAT?$AAG?$AA_?$AAF?$AAO?$AAR?$AAC?$AAE?$AAS?$AAT?$AAD?$AAB?$AAY?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "T", 0x0, "G", 0x0, "_", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "C", 0x0, "E", 0x0, "S", 0x0, "T", 0x0, "D", 0x0, "B"
	DCB	0x0, "Y", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@OENGJMCI@?$AAO?$AAT?$AAG?$AA_?$AAI?$AAN?$AAT?$AAE?$AAR?$AAF?$AAS?$AAE?$AAL?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "T", 0x0, "G", 0x0, "_", 0x0, "I", 0x0, "N", 0x0, "T"
	DCB	0x0, "E", 0x0, "R", 0x0, "F", 0x0, "S", 0x0, "E", 0x0, "L"
	DCB	0x0, " ", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@GEBFFKAL@?$AAO?$AAT?$AAG?$AA_?$AAS?$AAY?$AAS?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "T", 0x0, "G", 0x0, "_", 0x0, "S", 0x0, "Y", 0x0, "S"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, " ", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@CABDIMAB@?$AAO?$AAT?$AAG?$AA_?$AAS?$AAY?$AAS?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "T", 0x0, "G", 0x0, "_", 0x0, "S", 0x0, "Y", 0x0, "S"
	DCB	0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U", 0x0, "S"
	DCB	0x0, " ", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@DMGANBPN@?$AAO?$AAT?$AAG?$AA_?$AAS?$AAI?$AAM?$AAE?$AAN?$AAA?$AAB?$AAL?$AAE?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "T", 0x0, "G", 0x0, "_", 0x0, "S", 0x0, "I", 0x0, "M"
	DCB	0x0, "E", 0x0, "N", 0x0, "A", 0x0, "B", 0x0, "L", 0x0, "E"
	DCB	0x0, " ", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@IOAOHBNJ@?$AAF?$AAA?$AAd?$AAd?$AAr?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "F"
	DCB	0x0, "A", 0x0, "d", 0x0, "d", 0x0, "r", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@EGGCJLAM@?$AAD?$AAe?$AAv?$AAC?$AAt?$AAl?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "C", 0x0, "t", 0x0, "l", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@LNNNDCLE@?$AAI?$AAn?$AAt?$AAr?$AAR?$AAx?$AAE?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "R", 0x0, "x", 0x0, "E"
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@OIKEFDKE@?$AAI?$AAn?$AAt?$AAr?$AAT?$AAx?$AAE?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "T", 0x0, "x", 0x0, "E"
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@DKPCLIME@?$AAI?$AAn?$AAt?$AAr?$AAU?$AAS?$AAB?$AAE?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "U", 0x0, "S", 0x0, "B"
	DCB	0x0, "E", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@BEKHFDOA@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@DDJNBFOK@?$AAR?$AAx?$AAF?$AAI?$AAF?$AAO?$AAs?$AAz?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "R"
	DCB	0x0, "x", 0x0, "F", 0x0, "I", 0x0, "F", 0x0, "O", 0x0, "s"
	DCB	0x0, "z", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@CGHLAJLF@?$AAR?$AAx?$AAF?$AAI?$AAF?$AAO?$AAa?$AAd?$AAd?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "R"
	DCB	0x0, "x", 0x0, "F", 0x0, "I", 0x0, "F", 0x0, "O", 0x0, "a"
	DCB	0x0, "d", 0x0, "d", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@LODJHPCC@?$AAT?$AAx?$AAF?$AAI?$AAF?$AAO?$AAs?$AAz?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "T"
	DCB	0x0, "x", 0x0, "F", 0x0, "I", 0x0, "F", 0x0, "O", 0x0, "s"
	DCB	0x0, "z", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@KLNPGDHN@?$AAT?$AAx?$AAF?$AAI?$AAF?$AAO?$AAa?$AAd?$AAd?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "T"
	DCB	0x0, "x", 0x0, "F", 0x0, "I", 0x0, "F", 0x0, "O", 0x0, "a"
	DCB	0x0, "d", 0x0, "d", 0x0, " ", 0x0, " ", 0x0, " ", 0x0, " "
	DCB	0x0, " ", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DumpUSBRegisters| PROC

; 145  : {

  00000		 |$LN5@DumpUSBReg|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M46554|
  00004	e1a05001	 mov         r5, r1
  00008	e1a04000	 mov         r4, r0

; 146  : 	UNREFERENCED_PARAMETER(pOtg);
; 147  : 	UNREFERENCED_PARAMETER(pGen);
; 148  : 
; 149  : 	OALMSG(TRUE, (TEXT("OTG_Rev        = 0x%x\r\n"), INREG32(&pOtg->OTG_Rev)));

  0000c	e5941000	 ldr         r1, [r4]
  00010	e59f00f8	 ldr         r0, [pc, #0xF8]
  00014	eb000000	 bl          NKDbgPrintfW

; 150  : 	OALMSG(TRUE, (TEXT("OTG_FORCESTDBY = 0x%x\r\n"), INREG32(&pOtg->OTG_FORCESTDBY)));

  00018	e5941014	 ldr         r1, [r4, #0x14]
  0001c	e59f00e8	 ldr         r0, [pc, #0xE8]
  00020	eb000000	 bl          NKDbgPrintfW

; 151  : 	OALMSG(TRUE, (TEXT("OTG_INTERFSEL  = 0x%x\r\n"), INREG32(&pOtg->OTG_INTERFSEL)));

  00024	e594100c	 ldr         r1, [r4, #0xC]
  00028	e59f00d8	 ldr         r0, [pc, #0xD8]
  0002c	eb000000	 bl          NKDbgPrintfW

; 152  : 	OALMSG(TRUE, (TEXT("OTG_SYSCONFIG  = 0x%x\r\n"), INREG32(&pOtg->OTG_SYSCONFIG)));

  00030	e5941004	 ldr         r1, [r4, #4]
  00034	e59f00c8	 ldr         r0, [pc, #0xC8]
  00038	eb000000	 bl          NKDbgPrintfW

; 153  : 	OALMSG(TRUE, (TEXT("OTG_SYSSTATUS  = 0x%x\r\n"), INREG32(&pOtg->OTG_SYSSTATUS)));

  0003c	e5941008	 ldr         r1, [r4, #8]
  00040	e59f00b8	 ldr         r0, [pc, #0xB8]
  00044	eb000000	 bl          NKDbgPrintfW

; 154  : 	OALMSG(TRUE, (TEXT("OTG_SIMENABLE  = 0x%x\r\n"), INREG32(&pOtg->OTG_SIMENABLE)));

  00048	e5941010	 ldr         r1, [r4, #0x10]
  0004c	e59f00a8	 ldr         r0, [pc, #0xA8]
  00050	eb000000	 bl          NKDbgPrintfW

; 155  : 	OALMSG(TRUE, (TEXT("FAddr          = 0x%x\r\n"), INREG8(&pGen->FAddr)));

  00054	e5d51000	 ldrb        r1, [r5]
  00058	e59f0098	 ldr         r0, [pc, #0x98]
  0005c	eb000000	 bl          NKDbgPrintfW

; 156  : 	OALMSG(TRUE, (TEXT("DevCtl         = 0x%x\r\n"), INREG8(&pGen->DevCtl)));

  00060	e5d51060	 ldrb        r1, [r5, #0x60]
  00064	e59f0088	 ldr         r0, [pc, #0x88]
  00068	eb000000	 bl          NKDbgPrintfW

; 157  : 	OALMSG(TRUE, (TEXT("IntrRxE        = 0x%x\r\n"), INREG16(&pGen->IntrRxE)));

  0006c	e1d510b8	 ldrh        r1, [r5, #8]
  00070	e59f0078	 ldr         r0, [pc, #0x78]
  00074	eb000000	 bl          NKDbgPrintfW

; 158  : 	OALMSG(TRUE, (TEXT("IntrTxE        = 0x%x\r\n"), INREG16(&pGen->IntrTxE)));

  00078	e1d510b6	 ldrh        r1, [r5, #6]
  0007c	e59f0068	 ldr         r0, [pc, #0x68]
  00080	eb000000	 bl          NKDbgPrintfW

; 159  : 	OALMSG(TRUE, (TEXT("IntrUSBE       = 0x%x\r\n"), INREG8(&pGen->IntrUSBE)));

  00084	e5d5100b	 ldrb        r1, [r5, #0xB]
  00088	e59f0058	 ldr         r0, [pc, #0x58]
  0008c	eb000000	 bl          NKDbgPrintfW

; 160  : 	OALMSG(TRUE, (TEXT("Power          = 0x%x\r\n"), INREG8(&pGen->Power)));

  00090	e5d51001	 ldrb        r1, [r5, #1]
  00094	e59f0048	 ldr         r0, [pc, #0x48]
  00098	eb000000	 bl          NKDbgPrintfW

; 161  : 	OALMSG(TRUE, (TEXT("RxFIFOsz       = 0x%x\r\n"), INREG8(&pGen->RxFIFOsz)));

  0009c	e5d51063	 ldrb        r1, [r5, #0x63]
  000a0	e59f0038	 ldr         r0, [pc, #0x38]
  000a4	eb000000	 bl          NKDbgPrintfW

; 162  : 	OALMSG(TRUE, (TEXT("RxFIFOadd      = 0x%x\r\n"), INREG16(&pGen->RxFIFOadd)));

  000a8	e1d516b6	 ldrh        r1, [r5, #0x66]
  000ac	e59f0028	 ldr         r0, [pc, #0x28]
  000b0	eb000000	 bl          NKDbgPrintfW

; 163  : 	OALMSG(TRUE, (TEXT("TxFIFOsz       = 0x%x\r\n"), INREG8(&pGen->TxFIFOsz)));

  000b4	e5d51062	 ldrb        r1, [r5, #0x62]
  000b8	e59f0018	 ldr         r0, [pc, #0x18]
  000bc	eb000000	 bl          NKDbgPrintfW

; 164  : 	OALMSG(TRUE, (TEXT("TxFIFOadd      = 0x%x\r\n"), INREG16(&pGen->TxFIFOadd)));

  000c0	e1d516b4	 ldrh        r1, [r5, #0x64]
  000c4	e59f0008	 ldr         r0, [pc, #8]
  000c8	eb000000	 bl          NKDbgPrintfW

; 165  : }

  000cc	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000d0	e12fff1e	 bx          lr
  000d4		 |$LN6@DumpUSBReg|
  000d4		 |$LN7@DumpUSBReg|
  000d4	00000000	 DCD         |??_C@_1DA@KLNPGDHN@?$AAT?$AAx?$AAF?$AAI?$AAF?$AAO?$AAa?$AAd?$AAd?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000d8		 |$LN8@DumpUSBReg|
  000d8	00000000	 DCD         |??_C@_1DA@LODJHPCC@?$AAT?$AAx?$AAF?$AAI?$AAF?$AAO?$AAs?$AAz?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000dc		 |$LN9@DumpUSBReg|
  000dc	00000000	 DCD         |??_C@_1DA@CGHLAJLF@?$AAR?$AAx?$AAF?$AAI?$AAF?$AAO?$AAa?$AAd?$AAd?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000e0		 |$LN10@DumpUSBReg|
  000e0	00000000	 DCD         |??_C@_1DA@DDJNBFOK@?$AAR?$AAx?$AAF?$AAI?$AAF?$AAO?$AAs?$AAz?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000e4		 |$LN11@DumpUSBReg|
  000e4	00000000	 DCD         |??_C@_1DA@BEKHFDOA@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000e8		 |$LN12@DumpUSBReg|
  000e8	00000000	 DCD         |??_C@_1DA@DKPCLIME@?$AAI?$AAn?$AAt?$AAr?$AAU?$AAS?$AAB?$AAE?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000ec		 |$LN13@DumpUSBReg|
  000ec	00000000	 DCD         |??_C@_1DA@OIKEFDKE@?$AAI?$AAn?$AAt?$AAr?$AAT?$AAx?$AAE?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000f0		 |$LN14@DumpUSBReg|
  000f0	00000000	 DCD         |??_C@_1DA@LNNNDCLE@?$AAI?$AAn?$AAt?$AAr?$AAR?$AAx?$AAE?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000f4		 |$LN15@DumpUSBReg|
  000f4	00000000	 DCD         |??_C@_1DA@EGGCJLAM@?$AAD?$AAe?$AAv?$AAC?$AAt?$AAl?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000f8		 |$LN16@DumpUSBReg|
  000f8	00000000	 DCD         |??_C@_1DA@IOAOHBNJ@?$AAF?$AAA?$AAd?$AAd?$AAr?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000fc		 |$LN17@DumpUSBReg|
  000fc	00000000	 DCD         |??_C@_1DA@DMGANBPN@?$AAO?$AAT?$AAG?$AA_?$AAS?$AAI?$AAM?$AAE?$AAN?$AAA?$AAB?$AAL?$AAE?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00100		 |$LN18@DumpUSBReg|
  00100	00000000	 DCD         |??_C@_1DA@CABDIMAB@?$AAO?$AAT?$AAG?$AA_?$AAS?$AAY?$AAS?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00104		 |$LN19@DumpUSBReg|
  00104	00000000	 DCD         |??_C@_1DA@GEBFFKAL@?$AAO?$AAT?$AAG?$AA_?$AAS?$AAY?$AAS?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00108		 |$LN20@DumpUSBReg|
  00108	00000000	 DCD         |??_C@_1DA@OENGJMCI@?$AAO?$AAT?$AAG?$AA_?$AAI?$AAN?$AAT?$AAE?$AAR?$AAF?$AAS?$AAE?$AAL?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  0010c		 |$LN21@DumpUSBReg|
  0010c	00000000	 DCD         |??_C@_1DA@CHHHKPND@?$AAO?$AAT?$AAG?$AA_?$AAF?$AAO?$AAR?$AAC?$AAE?$AAS?$AAT?$AAD?$AAB?$AAY?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00110		 |$LN22@DumpUSBReg|
  00110	00000000	 DCD         |??_C@_1DA@DEOJCLGI@?$AAO?$AAT?$AAG?$AA_?$AAR?$AAe?$AAv?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00114		 |$M46555|

			 ENDP  ; |DumpUSBRegisters|

	EXPORT	|ReadFIFO|
	EXPORT	|??_C@_1CK@CPIFLPMI@?$AAu?$AAn?$AAa?$AAl?$AAi?$AAg?$AAn?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAa?$AAd?$AAf?$AAi?$AAf?$AAo?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T46601| DCD	|$LN23@ReadFIFO|
	DCD	0x40002a01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@CPIFLPMI@?$AAu?$AAn?$AAa?$AAl?$AAi?$AAg?$AAn?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAa?$AAd?$AAf?$AAi?$AAf?$AAo?$AA?$AN?$AA?6?$AA?$AA@| DCB "u"
	DCB	0x0, "n", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "g", 0x0, "n"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "f", 0x0, "i", 0x0, "f", 0x0, "o", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |ReadFIFO| PROC

; 169  : {

  00000		 |$LN23@ReadFIFO|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M46598|
  00004	e1a04002	 mov         r4, r2

; 170  :     DWORD total  = size / 4;
; 171  :     DWORD remain = size % 4;
; 172  :     DWORD i		 = 0;
; 173  :     PCSP_MUSB_GEN_REGS pGenRegs = pPdd->pUsbGenRegs;
; 174  :     
; 175  :     DWORD* pDword = (DWORD*)pData;
; 176  :     DWORD* pFifoBase = (DWORD*) &pGenRegs->fifo[endpoint];

  00008	e5900010	 ldr         r0, [r0, #0x10]

; 177  : 
; 178  :     volatile ULONG *pReg = (volatile ULONG*)pFifoBase;

  0000c	e2811008	 add         r1, r1, #8
  00010	e1a05123	 mov         r5, r3, lsr #2
  00014	e0807101	 add         r7, r0, r1, lsl #2
  00018	e2036003	 and         r6, r3, #3

; 179  : 
; 180  :     if (((DWORD)pDword) & 0x1)

  0001c	e3140001	 tst         r4, #1
  00020	0a00000f	 beq         |$LN11@ReadFIFO|

; 181  :     {
; 182  :         __unaligned DWORD* pUnalignedDword = (DWORD*)pDword;
; 183  :         RETAILMSG(1,(TEXT("unaligned readfifo\r\n")));

  00024	e59f0078	 ldr         r0, [pc, #0x78]
  00028	eb000000	 bl          NKDbgPrintfW

; 184  :         // this is NOT 16-bit aligned
; 185  :         for (i = 0; i < total; i++)

  0002c	e3550000	 cmp         r5, #0
  00030	0a000011	 beq         |$LN4@ReadFIFO|
  00034		 |$LL10@ReadFIFO|

; 186  :         {
; 187  :             *pUnalignedDword++ = INREG32(pReg);

  00034	e5970000	 ldr         r0, [r7]
  00038	e2555001	 subs        r5, r5, #1
  0003c	e1a03420	 mov         r3, r0, lsr #8
  00040	e1a02820	 mov         r2, r0, lsr #16
  00044	e1a01c20	 mov         r1, r0, lsr #24
  00048	e5c43001	 strb        r3, [r4, #1]
  0004c	e5c42002	 strb        r2, [r4, #2]
  00050	e5c41003	 strb        r1, [r4, #3]
  00054	e5c40000	 strb        r0, [r4]
  00058	e2844004	 add         r4, r4, #4
  0005c	1afffff4	 bne         |$LL10@ReadFIFO|

; 188  :         }
; 189  : #pragma warning(push)
; 190  : #pragma warning(disable:4090)
; 191  :         pDword = pUnalignedDword;
; 192  : #pragma warning(pop)
; 193  :     }
; 194  :     else

  00060	ea000005	 b           |$LN4@ReadFIFO|
  00064		 |$LN11@ReadFIFO|

; 195  :     {
; 196  :         // this is 16-bit aligned. 32 bits access are allowed
; 197  :         for (i = 0; i < total; i++)

  00064	e3550000	 cmp         r5, #0
  00068	0a000003	 beq         |$LN4@ReadFIFO|
  0006c		 |$LL6@ReadFIFO|

; 198  :         {
; 199  :             *pDword++ = INREG32(pReg);

  0006c	e5973000	 ldr         r3, [r7]
  00070	e2555001	 subs        r5, r5, #1
  00074	e4843004	 str         r3, [r4], #4
  00078	1afffffb	 bne         |$LL6@ReadFIFO|
  0007c		 |$LN4@ReadFIFO|

; 200  :         }        
; 201  :     }
; 202  : 
; 203  :     // Set the pByte equal to the last bytes of data being transferred
; 204  :     if (remain != 0)

  0007c	e3560000	 cmp         r6, #0
  00080	0a000004	 beq         |$LN19@ReadFIFO|

; 205  :     {
; 206  :         UCHAR* pUCHAR = (UCHAR*) pDword;
; 207  :         DWORD dwTemp = INREG32(pReg);

  00084	e5973000	 ldr         r3, [r7]
  00088		 |$LL2@ReadFIFO|

; 208  :         
; 209  :         while (remain--)
; 210  :         {
; 211  :             *pUCHAR++ = (UCHAR) (dwTemp & 0xFF);

  00088	e4c43001	 strb        r3, [r4], #1

; 212  :             dwTemp>>=8;

  0008c	e1a03423	 mov         r3, r3, lsr #8
  00090	e2566001	 subs        r6, r6, #1
  00094	1afffffb	 bne         |$LL2@ReadFIFO|
  00098		 |$LN19@ReadFIFO|

; 213  :         }
; 214  :     }
; 215  : /*
; 216  :     RETAILMSG(1,(TEXT("Read fifo\r\n")));
; 217  :     memdump((UCHAR*)pData,(USHORT)size,0);
; 218  :     RETAILMSG(1,(TEXT("\r\n")));
; 219  : */
; 220  :     return TRUE;

  00098	e3a00001	 mov         r0, #1

; 221  : }

  0009c	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  000a0	e12fff1e	 bx          lr
  000a4		 |$LN24@ReadFIFO|
  000a4		 |$LN25@ReadFIFO|
  000a4	00000000	 DCD         |??_C@_1CK@CPIFLPMI@?$AAu?$AAn?$AAa?$AAl?$AAi?$AAg?$AAn?$AAe?$AAd?$AA?5?$AAr?$AAe?$AAa?$AAd?$AAf?$AAi?$AAf?$AAo?$AA?$AN?$AA?6?$AA?$AA@|
  000a8		 |$M46599|

			 ENDP  ; |ReadFIFO|

	EXPORT	|WriteFIFO|
	EXPORT	|??_C@_1BK@BIFEAHLP@?$AA?9?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAI?$AAF?$AAO?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@GIDDBHNC@?$AA?$CL?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAI?$AAF?$AAO?$AA?3?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|dpCurSettings|

  00000			 AREA	 |.pdata|, PDATA
|$T46629| DCD	|$LN27@WriteFIFO|
	DCD	0x40003701

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@BIFEAHLP@?$AA?9?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAI?$AAF?$AAO?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "W", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "e", 0x0, "F"
	DCB	0x0, "I", 0x0, "F", 0x0, "O", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@GIDDBHNC@?$AA?$CL?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAI?$AAF?$AAO?$AA?3?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "W", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "e", 0x0, "F"
	DCB	0x0, "I", 0x0, "F", 0x0, "O", 0x0, ":", 0x0, " ", 0x0, "s"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, "(", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |WriteFIFO| PROC

; 225  : {

  00000		 |$LN27@WriteFIFO|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M46626|
  00004	e1a04003	 mov         r4, r3
  00008	e1a05002	 mov         r5, r2
  0000c	e1a07001	 mov         r7, r1

; 226  :     PCSP_MUSB_GEN_REGS pGenRegs = pPdd->pUsbGenRegs;
; 227  :     DWORD totalTx;
; 228  :     DWORD i;
; 229  :     BOOL rc = TRUE;
; 230  :     
; 231  :     OALMSG(OAL_ETHER&&OAL_FUNC, (TEXT("+WriteFIFO: size(0x%x)\r\n"), size));

  00010	e59f60c0	 ldr         r6, [pc, #0xC0]
  00014	e5908010	 ldr         r8, [r0, #0x10]
  00018	e5960440	 ldr         r0, [r6, #0x440]
  0001c	e3100a02	 tst         r0, #2, 20
  00020	13100004	 tstne       r0, #4
  00024	159f00a8	 ldrne       r0, [pc, #0xA8]
  00028	11a01004	 movne       r1, r4
  0002c	1b000000	 blne        NKDbgPrintfW

; 232  : 
; 233  :     // Zero-length data transferred
; 234  :     if (size == 0)

  00030	e3540000	 cmp         r4, #0
  00034	0a00001d	 beq         |$ErrorReturn$45332|

; 235  :         goto ErrorReturn;
; 236  : 
; 237  :     // Note - transfers to/from FIFO must have consistent width to maintain
; 238  :     // alignment.  The last few writes can be smaller to account for remaining bytes.
; 239  :     // NOTE - pointers passed to this function are not guaranteed to be aligned!
; 240  :     
; 241  :     // Write DWORDs if possible
; 242  :     if (((UINT32)pData & 0x3) == 0)

  00038	e3150003	 tst         r5, #3
  0003c	1a000008	 bne         |$LN8@WriteFIFO|

; 243  :     {
; 244  :         totalTx = size / 4;

  00040	e1b02124	 movs        r2, r4, lsr #2

; 245  :         for (i=0; i<totalTx; i++)

  00044	0a000006	 beq         |$LN8@WriteFIFO|
  00048	e2873008	 add         r3, r7, #8
  0004c	e0881103	 add         r1, r8, r3, lsl #2
  00050		 |$LL10@WriteFIFO|

; 246  :         {
; 247  :             OUTREG32(&pGenRegs->fifo[endpoint], (*(UINT32*)pData));        

  00050	e4953004	 ldr         r3, [r5], #4

; 248  :             ((UINT32*)pData)++;
; 249  :             size -= 4;

  00054	e2444004	 sub         r4, r4, #4
  00058	e2522001	 subs        r2, r2, #1
  0005c	e5813000	 str         r3, [r1]
  00060	1afffffa	 bne         |$LL10@WriteFIFO|
  00064		 |$LN8@WriteFIFO|

; 250  :         }
; 251  :     }
; 252  :     
; 253  :     // Write WORDS if possible
; 254  :     if (((UINT32)pData & 0x1) == 0)

  00064	e3150001	 tst         r5, #1
  00068	1a000008	 bne         |$LN4@WriteFIFO|

; 255  :     {
; 256  :         totalTx = size / 2;

  0006c	e1b020a4	 movs        r2, r4, lsr #1

; 257  :         for (i=0; i<totalTx; i++)

  00070	0a000006	 beq         |$LN4@WriteFIFO|
  00074	e2873008	 add         r3, r7, #8
  00078	e0881103	 add         r1, r8, r3, lsl #2
  0007c		 |$LL6@WriteFIFO|

; 258  :         {
; 259  :             OUTREG16(&pGenRegs->fifo[endpoint], (*(UINT16*)pData));        

  0007c	e0d530b2	 ldrh        r3, [r5], #2

; 260  :             ((UINT16*)pData)++;
; 261  :             size -= 2;

  00080	e2444002	 sub         r4, r4, #2
  00084	e2522001	 subs        r2, r2, #1
  00088	e1c130b0	 strh        r3, [r1]
  0008c	1afffffa	 bne         |$LL6@WriteFIFO|
  00090		 |$LN4@WriteFIFO|

; 262  :         }
; 263  :     }
; 264  :     
; 265  :     // Write remaining bytes
; 266  :     totalTx = size;
; 267  :     for (i=0; i<totalTx; i++)

  00090	e3540000	 cmp         r4, #0
  00094	0a000005	 beq         |$ErrorReturn$45332|
  00098	e2873008	 add         r3, r7, #8
  0009c	e0882103	 add         r2, r8, r3, lsl #2
  000a0		 |$LL3@WriteFIFO|

; 268  :     {
; 269  :         OUTREG8(&pGenRegs->fifo[endpoint], (*(UINT8*)pData));        

  000a0	e4d53001	 ldrb        r3, [r5], #1
  000a4	e2544001	 subs        r4, r4, #1
  000a8	e5c23000	 strb        r3, [r2]
  000ac	1afffffb	 bne         |$LL3@WriteFIFO|
  000b0		 |$ErrorReturn$45332|

; 226  :     PCSP_MUSB_GEN_REGS pGenRegs = pPdd->pUsbGenRegs;
; 227  :     DWORD totalTx;
; 228  :     DWORD i;
; 229  :     BOOL rc = TRUE;
; 230  :     
; 231  :     OALMSG(OAL_ETHER&&OAL_FUNC, (TEXT("+WriteFIFO: size(0x%x)\r\n"), size));

  000b0	e5963440	 ldr         r3, [r6, #0x440]

; 270  :         ((UINT8*)pData)++;
; 271  :         size -= 1;
; 272  :     }
; 273  : 
; 274  : ErrorReturn:
; 275  :     OALMSG(OAL_ETHER&&OAL_FUNC, (TEXT("-WriteFIFO\r\n")));

  000b4	e3130a02	 tst         r3, #2, 20
  000b8	13130004	 tstne       r3, #4
  000bc	159f000c	 ldrne       r0, [pc, #0xC]
  000c0	1b000000	 blne        NKDbgPrintfW

; 276  :     return rc;       

  000c4	e3a00001	 mov         r0, #1

; 277  : }

  000c8	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  000cc	e12fff1e	 bx          lr
  000d0		 |$LN28@WriteFIFO|
  000d0		 |$LN29@WriteFIFO|
  000d0	00000000	 DCD         |??_C@_1BK@BIFEAHLP@?$AA?9?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAI?$AAF?$AAO?$AA?$AN?$AA?6?$AA?$AA@|
  000d4		 |$LN30@WriteFIFO|
  000d4	00000000	 DCD         |??_C@_1DC@GIDDBHNC@?$AA?$CL?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAI?$AAF?$AAO?$AA?3?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  000d8		 |$LN31@WriteFIFO|
  000d8	00000000	 DCD         |dpCurSettings|
  000dc		 |$M46627|

			 ENDP  ; |WriteFIFO|

	EXPORT	|??_C@_1DO@OPAMNHLJ@?$AA?9?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@OBLLBJJA@?$AAS?$AAe?$AAt?$AA?5?$AAO?$AAU?$AAT?$AA?5?$AAM?$AAs?$AAg?$AA?5?$AA?$DN?$AA?$DO?$AA?5?$AAe?$AAp?$AA0?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?$DN?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@LMLHKPJF@?$AAD?$AAA?$AAT?$AAA?$AAE?$AAN?$AAD?$AA?5?$AAa?$AAd?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@EOKGALAH@?$AAT?$AAx?$AA?5?$AAp?$AAa?$AAc?$AAk?$AAe?$AAt?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@JLPAIEOM@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAD?$AAA?$AAT?$AAA?$AA_?$AAT?$AAX?$AA?5?$AAs?$AAp?$AAa?$AAc?$AAe?$AA_?$AAl?$AAe?$AAf?$AAt?$AA_?$AAt?$AAo?$AA_?$AAs?$AAe?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@HGADPGKD@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DG@GAFCGMNC@?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAI?$AAF?$AAO?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@IJMAINHK@?$AAT?$AAX?$AAP?$AAK?$AAT?$AAR?$AAd?$AAy?$AA?5?$AAb?$AAi?$AAt?$AA?5?$AAi?$AAs?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@NNMILMFN@?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAc?$AAb?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAc?$AAb?$AAT?$AAr?$AAa?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DG@KJCFCKAI@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?$CB?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAi?$AAs?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1II@PBHEPHNB@?$AA?$CL?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T46691| DCD	|$LN56@ContinueTx|
	DCD	0x4000cc02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@OPAMNHLJ@?$AA?9?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "U", 0x0, "s", 0x0, "b", 0x0, "F", 0x0, "n", 0x0, "P"
	DCB	0x0, "d", 0x0, "d", 0x0, "!", 0x0, "C", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u", 0x0, "e", 0x0, "T"
	DCB	0x0, "x", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@OBLLBJJA@?$AAS?$AAe?$AAt?$AA?5?$AAO?$AAU?$AAT?$AA?5?$AAM?$AAs?$AAg?$AA?5?$AA?$DN?$AA?$DO?$AA?5?$AAe?$AAp?$AA0?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?$DN?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT@| DCB "S"
	DCB	0x0, "e", 0x0, "t", 0x0, " ", 0x0, "O", 0x0, "U", 0x0, "T"
	DCB	0x0, " ", 0x0, "M", 0x0, "s", 0x0, "g", 0x0, " ", 0x0, "="
	DCB	0x0, ">", 0x0, " ", 0x0, "e", 0x0, "p", 0x0, "0", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "E", 0x0, "P", 0x0, "0", 0x0, "_", 0x0, "S"
	DCB	0x0, "T", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T"
	DCB	0x0, "U", 0x0, "S", 0x0, "_", 0x0, "O", 0x0, "U", 0x0, "T"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@LMLHKPJF@?$AAD?$AAA?$AAT?$AAA?$AAE?$AAN?$AAD?$AA?5?$AAa?$AAd?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "A", 0x0, "T", 0x0, "A", 0x0, "E", 0x0, "N", 0x0, "D"
	DCB	0x0, " ", 0x0, "a", 0x0, "d", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@EOKGALAH@?$AAT?$AAx?$AA?5?$AAp?$AAa?$AAc?$AAk?$AAe?$AAt?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "T"
	DCB	0x0, "x", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, "c", 0x0, "k"
	DCB	0x0, "e", 0x0, "t", 0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z"
	DCB	0x0, "e", 0x0, ":", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@JLPAIEOM@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAD?$AAA?$AAT?$AAA?$AA_?$AAT?$AAX?$AA?5?$AAs?$AAp?$AAa?$AAc?$AAe?$AA_?$AAl?$AAe?$AAf?$AAt?$AA_?$AAt?$AAo?$AA_?$AAs?$AAe?$AAn@| DCB "E"
	DCB	0x0, "P", 0x0, "0", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "_"
	DCB	0x0, "D", 0x0, "A", 0x0, "T", 0x0, "A", 0x0, "_", 0x0, "T"
	DCB	0x0, "X", 0x0, " ", 0x0, "s", 0x0, "p", 0x0, "a", 0x0, "c"
	DCB	0x0, "e", 0x0, "_", 0x0, "l", 0x0, "e", 0x0, "f", 0x0, "t"
	DCB	0x0, "_", 0x0, "t", 0x0, "o", 0x0, "_", 0x0, "s", 0x0, "e"
	DCB	0x0, "n", 0x0, "d", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "x", 0x0, "c", 0x0, "o", 0x0, "u", 0x0, "n"
	DCB	0x0, "t", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@HGADPGKD@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@GAFCGMNC@?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAI?$AAF?$AAO?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "W"
	DCB	0x0, "r", 0x0, "i", 0x0, "t", 0x0, "e", 0x0, "F", 0x0, "I"
	DCB	0x0, "F", 0x0, "O", 0x0, " ", 0x0, "E", 0x0, "P", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "S", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@IJMAINHK@?$AAT?$AAX?$AAP?$AAK?$AAT?$AAR?$AAd?$AAy?$AA?5?$AAb?$AAi?$AAt?$AA?5?$AAi?$AAs?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| DCB "T"
	DCB	0x0, "X", 0x0, "P", 0x0, "K", 0x0, "T", 0x0, "R", 0x0, "d"
	DCB	0x0, "y", 0x0, " ", 0x0, "b", 0x0, "i", 0x0, "t", 0x0, " "
	DCB	0x0, "i", 0x0, "s", 0x0, " ", 0x0, "s", 0x0, "e", 0x0, "t"
	DCB	0x0, " ", 0x0, ".", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@NNMILMFN@?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAc?$AAb?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAc?$AAb?$AAT?$AAr?$AAa?$AAn@| DCB "e"
	DCB	0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, " "
	DCB	0x0, "c", 0x0, "b", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, " ", 0x0, "c", 0x0, "b", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "e", 0x0, "d", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@KJCFCKAI@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?$CB?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAi?$AAs?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AN?$AA?6?$AA?$AA@| DCB "E"
	DCB	0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, "!", 0x0, " "
	DCB	0x0, "p", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "i", 0x0, "s"
	DCB	0x0, " ", 0x0, "N", 0x0, "U", 0x0, "L", 0x0, "L", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1II@PBHEPHNB@?$AA?$CL?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP@| DCB "+"
	DCB	0x0, "U", 0x0, "s", 0x0, "b", 0x0, "F", 0x0, "n", 0x0, "P"
	DCB	0x0, "d", 0x0, "d", 0x0, "!", 0x0, "C", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "i", 0x0, "n", 0x0, "u", 0x0, "e", 0x0, "T"
	DCB	0x0, "x", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "E"
	DCB	0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "p"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, " ", 0x0, "(", 0x0, "%"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |ContinueTxTransfer| PROC

; 290  : {

  00000		 |$LN56@ContinueTx|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd010	 sub         sp, sp, #0x10
  00008		 |$M46688|
  00008	e1a07001	 mov         r7, r1
  0000c	e1a08000	 mov         r8, r0

; 291  :     DWORD rc = ERROR_INVALID_PARAMETER;
; 292  :     USBFN_EP *pEP = &pPdd->ep[endpoint];
; 293  :     PCSP_MUSB_CSR_REGS pCsrRegs = pPdd->pUsbCsrRegs;
; 294  :     STransfer *pTransfer = pEP->pTransfer;
; 295  :     DWORD space, txcount;
; 296  :     UCHAR *pBuffer;
; 297  :     DWORD dwFlag;
; 298  :     
; 299  :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"+UsbFnPdd!ContinueTxTransfer: "
; 300  :         L"EP %d pTransfer 0x%08x (%d, %d, %d)\r\n",
; 301  :         endpoint, pTransfer, pTransfer != NULL ? pTransfer->cbBuffer : 0,
; 302  :         pTransfer != NULL ? pTransfer->cbTransferred : 0,
; 303  :         pTransfer != NULL ? pTransfer->dwUsbError : -1
; 304  :         ));

  00010	e59f5314	 ldr         r5, [pc, #0x314]
  00014	e0873107	 add         r3, r7, r7, lsl #2
  00018	e088a103	 add         r10, r8, r3, lsl #2
  0001c	e5953440	 ldr         r3, [r5, #0x440]
  00020	e598900c	 ldr         r9, [r8, #0xC]
  00024	e59a4038	 ldr         r4, [r10, #0x38]
  00028	e3130a02	 tst         r3, #2, 20
  0002c	e3a0b057	 mov         r11, #0x57
  00030	0a000011	 beq         |$LN16@ContinueTx|
  00034	e3130004	 tst         r3, #4
  00038	0a00000f	 beq         |$LN16@ContinueTx|
  0003c	e3540000	 cmp         r4, #0
  00040	15946014	 ldrne       r6, [r4, #0x14]
  00044	03e06000	 mvneq       r6, #0
  00048	e3540000	 cmp         r4, #0
  0004c	1594e010	 ldrne       lr, [r4, #0x10]
  00050	03a0e000	 moveq       lr, #0
  00054	e59f02cc	 ldr         r0, [pc, #0x2CC]
  00058	e3540000	 cmp         r4, #0
  0005c	1594300c	 ldrne       r3, [r4, #0xC]
  00060	03a03000	 moveq       r3, #0
  00064	e1a02004	 mov         r2, r4
  00068	e1a01007	 mov         r1, r7
  0006c	e58d6004	 str         r6, [sp, #4]
  00070	e58de000	 str         lr, [sp]
  00074	eb000000	 bl          NKDbgPrintfW
  00078	e5953440	 ldr         r3, [r5, #0x440]
  0007c		 |$LN16@ContinueTx|

; 305  : 
; 306  :     if (pTransfer == NULL) 

  0007c	e3540000	 cmp         r4, #0
  00080	1a000004	 bne         |$LN13@ContinueTx|

; 307  :     {
; 308  :         OALMSG(OAL_ERROR, (L"Error! pTransfer is NULL\r\n"));

  00084	e3130001	 tst         r3, #1
  00088	0a000094	 beq         |$CleanUp$45383|
  0008c	e59f0290	 ldr         r0, [pc, #0x290]
  00090	eb000000	 bl          NKDbgPrintfW

; 309  :         goto CleanUp;

  00094	ea000090	 b           |$LN50@ContinueTx|
  00098		 |$LN13@ContinueTx|

; 310  :     }    
; 311  :       
; 312  :     {
; 313  :        
; 314  :         pBuffer =(UCHAR*)pTransfer->pvBuffer + pTransfer->cbTransferred;

  00098	e5946010	 ldr         r6, [r4, #0x10]
  0009c	e5942004	 ldr         r2, [r4, #4]

; 315  :         space = pTransfer->cbBuffer - pTransfer->cbTransferred;

  000a0	e594e00c	 ldr         lr, [r4, #0xC]
  000a4	e58d6008	 str         r6, [sp, #8]
  000a8	e58d200c	 str         r2, [sp, #0xC]

; 316  :                 
; 317  :         if (endpoint != 0)

  000ac	e04e1006	 sub         r1, lr, r6
  000b0	e3570000	 cmp         r7, #0
  000b4	0a00002a	 beq         |$LN12@ContinueTx|

; 318  :         {
; 319  :             if (INREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR) & TXCSR_P_TXPKTRDY)

  000b8	e0899207	 add         r9, r9, r7, lsl #4
  000bc	e1d920b2	 ldrh        r2, [r9, #2]
  000c0	e3120001	 tst         r2, #1
  000c4	0a000010	 beq         |$LN11@ContinueTx|

; 320  :             {
; 321  :                 OALMSG(OAL_ETHER&&OAL_FUNC, (TEXT("endpoint(%d) cbBuffer(%d) cbTransferred(%d)\r\n"), endpoint, pTransfer->cbBuffer, pTransfer->cbTransferred));

  000c8	e3130a02	 tst         r3, #2, 20
  000cc	0a000007	 beq         |$LN26@ContinueTx|
  000d0	e3130004	 tst         r3, #4
  000d4	0a000005	 beq         |$LN26@ContinueTx|
  000d8	e59f0234	 ldr         r0, [pc, #0x234]
  000dc	e1a03006	 mov         r3, r6
  000e0	e1a0200e	 mov         r2, lr
  000e4	e1a01007	 mov         r1, r7
  000e8	eb000000	 bl          NKDbgPrintfW
  000ec	e5953440	 ldr         r3, [r5, #0x440]
  000f0		 |$LN26@ContinueTx|

; 322  :                 OALMSG(OAL_ETHER&&OAL_FUNC, (TEXT("TXPKTRdy bit is set ..\r\n")));

  000f0	e3130a02	 tst         r3, #2, 20
  000f4	0a000079	 beq         |$CleanUp$45383|
  000f8	e3130004	 tst         r3, #4
  000fc		 |$LN53@ContinueTx|
  000fc	0a000077	 beq         |$CleanUp$45383|
  00100	e59f0218	 ldr         r0, [pc, #0x218]
  00104	eb000000	 bl          NKDbgPrintfW
  00108	ea000073	 b           |$LN50@ContinueTx|
  0010c		 |$LN11@ContinueTx|

; 323  :                 
; 324  :                 goto CleanUp;
; 325  :             }
; 326  :             else
; 327  :             {
; 328  :                 // How many bytes we can send just now?
; 329  :                 txcount = pEP->maxPacketSize;

  0010c	e1da62bc	 ldrh        r6, [r10, #0x2C]

; 330  :                 if (txcount > space)

  00110	e1560001	 cmp         r6, r1

; 331  :                     txcount = space;

  00114	81a06001	 movhi       r6, r1

; 332  :                 
; 333  :                 OALMSG(OAL_ETHER&&OAL_FUNC, (TEXT("WriteFIFO EP %d, Size %d\r\n"), endpoint, txcount));

  00118	e3130a02	 tst         r3, #2, 20
  0011c	13130004	 tstne       r3, #4
  00120	159f01f4	 ldrne       r0, [pc, #0x1F4]
  00124	11a02006	 movne       r2, r6
  00128	11a01007	 movne       r1, r7
  0012c	1b000000	 blne        NKDbgPrintfW

; 334  :                 //memdump((uchar *)pBuffer, (unsigned short)txcount, 0);
; 335  :                 // Write data to FIFO
; 336  :                 WriteFIFO(pPdd, (UCHAR) endpoint, pBuffer, txcount);

  00130	e59d2008	 ldr         r2, [sp, #8]
  00134	e59d100c	 ldr         r1, [sp, #0xC]
  00138	e1a03006	 mov         r3, r6
  0013c	e1a00008	 mov         r0, r8
  00140	e0812002	 add         r2, r1, r2
  00144	e20710ff	 and         r1, r7, #0xFF
  00148	eb000000	 bl          WriteFIFO

; 337  :                 
; 338  :                 // We transfered some data
; 339  :                 pTransfer->cbTransferred += txcount;                

  0014c	e5943010	 ldr         r3, [r4, #0x10]
  00150	e0833006	 add         r3, r3, r6
  00154	e5843010	 str         r3, [r4, #0x10]

; 340  :                 SETREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR, TXCSR_P_TXPKTRDY);

  00158	e1d930b2	 ldrh        r3, [r9, #2]
  0015c	e3833001	 orr         r3, r3, #1

; 341  :             } 
; 342  :         }
; 343  :         else // endpoint == 0

  00160	ea00005b	 b           |$LN51@ContinueTx|
  00164		 |$LN12@ContinueTx|

; 344  :         {
; 345  :             // Zero endpoint: Zero length padding needed
; 346  :             // if last packet is maxPacketSize.
; 347  :             pEP->zeroLength =
; 348  :                 (space == pEP->maxPacketSize) &&
; 349  :                 (pPdd->setupCount > pTransfer->cbBuffer);

  00164	e1da32bc	 ldrh        r3, [r10, #0x2C]
  00168	e1510003	 cmp         r1, r3
  0016c	1a000003	 bne         |$LN32@ContinueTx|
  00170	e1d832b4	 ldrh        r3, [r8, #0x24]
  00174	e153000e	 cmp         r3, lr
  00178	83a03001	 movhi       r3, #1
  0017c	8a000000	 bhi         |$LN33@ContinueTx|
  00180		 |$LN32@ContinueTx|
  00180	e3a03000	 mov         r3, #0
  00184		 |$LN33@ContinueTx|
  00184	e58a3034	 str         r3, [r10, #0x34]

; 350  :             
; 351  :             if (pPdd->ep0State != EP0_ST_SETUP_PROCESSED)

  00188	e5982178	 ldr         r2, [r8, #0x178]
  0018c	e3520001	 cmp         r2, #1
  00190	0a000006	 beq         |$LN7@ContinueTx|

; 352  :             {
; 353  :                 OALMSG(OAL_ERROR, (TEXT("Invalid State = %d\r\n"), pPdd->ep0State));

  00194	e5953440	 ldr         r3, [r5, #0x440]
  00198	e3130001	 tst         r3, #1
  0019c	0a00004f	 beq         |$CleanUp$45383|
  001a0	e59f0170	 ldr         r0, [pc, #0x170]
  001a4	e1a01002	 mov         r1, r2
  001a8	eb000000	 bl          NKDbgPrintfW

; 354  :                 goto CleanUp;

  001ac	ea00004a	 b           |$LN50@ContinueTx|
  001b0		 |$LN7@ContinueTx|

; 355  :             }
; 356  :             else
; 357  :             {
; 358  :                 pPdd->ep0State = EP0_ST_DATA_TX;

  001b0	e3a03005	 mov         r3, #5
  001b4	e5883178	 str         r3, [r8, #0x178]

; 359  :                 if (INREG16(&pCsrRegs->ep[endpoint].CSR.CSR0) & CSR0_P_TXPKTRDY)

  001b8	e1d930b2	 ldrh        r3, [r9, #2]
  001bc	e3130002	 tst         r3, #2
  001c0	0a00000a	 beq         |$LN5@ContinueTx|

; 360  :                 {
; 361  :                     OALMSG(OAL_ERROR, (TEXT("endpoint(%d) cbBuffer(%d) cbTransferred(%d)\r\n"), endpoint, pTransfer->cbBuffer, pTransfer->cbTransferred));

  001c4	e5953440	 ldr         r3, [r5, #0x440]
  001c8	e3130001	 tst         r3, #1
  001cc	0a000005	 beq         |$LN36@ContinueTx|
  001d0	e5943010	 ldr         r3, [r4, #0x10]
  001d4	e594200c	 ldr         r2, [r4, #0xC]
  001d8	e59f0134	 ldr         r0, [pc, #0x134]
  001dc	e3a01000	 mov         r1, #0
  001e0	eb000000	 bl          NKDbgPrintfW
  001e4	e5953440	 ldr         r3, [r5, #0x440]
  001e8		 |$LN36@ContinueTx|

; 362  :                     OALMSG(OAL_ERROR, (TEXT("TXPKTRdy bit is set ..\r\n")));

  001e8	e3130001	 tst         r3, #1

; 363  :                     goto CleanUp;

  001ec	eaffffc2	 b           |$LN53@ContinueTx|
  001f0		 |$LN5@ContinueTx|

; 364  :                 }
; 365  :                 else
; 366  :                 {
; 367  :                     // How many bytes we can send just now?
; 368  :                     txcount = pEP->maxPacketSize;

  001f0	e1da62bc	 ldrh        r6, [r10, #0x2C]

; 369  :                     if (txcount > space)
; 370  :                         txcount = space;
; 371  :                     
; 372  :                     OALMSG(OAL_ETHER&&OAL_FUNC, (L"EP0_ST_DATA_TX space_left_to_send=%d txcount=%d\r\n", space, txcount));

  001f4	e5953440	 ldr         r3, [r5, #0x440]
  001f8	e1560001	 cmp         r6, r1
  001fc	81a06001	 movhi       r6, r1
  00200	e3130a02	 tst         r3, #2, 20
  00204	13130004	 tstne       r3, #4
  00208	159f0100	 ldrne       r0, [pc, #0x100]
  0020c	11a02006	 movne       r2, r6
  00210	1b000000	 blne        NKDbgPrintfW

; 373  :                     
; 374  :                     // Write data to FIFO
; 375  :                     WriteFIFO(pPdd, EP0, pBuffer, txcount);

  00214	e59d2008	 ldr         r2, [sp, #8]
  00218	e59d100c	 ldr         r1, [sp, #0xC]
  0021c	e1a03006	 mov         r3, r6
  00220	e1a00008	 mov         r0, r8
  00224	e0812002	 add         r2, r1, r2
  00228	e3a01000	 mov         r1, #0
  0022c	eb000000	 bl          WriteFIFO

; 376  :                     
; 377  :                     // We transfered some data
; 378  :                     pTransfer->cbTransferred += txcount;

  00230	e5943010	 ldr         r3, [r4, #0x10]
  00234	e0833006	 add         r3, r3, r6
  00238	e5843010	 str         r3, [r4, #0x10]

; 379  :                     
; 380  :                     OALMSG(OAL_ETHER&&OAL_FUNC, (L"Tx packet size: %d\r\n",
; 381  :                         pTransfer->cbBuffer
; 382  :                         ));

  0023c	e5951440	 ldr         r1, [r5, #0x440]
  00240	e3110a02	 tst         r1, #2, 20
  00244	0a000005	 beq         |$LN42@ContinueTx|
  00248	e3110004	 tst         r1, #4
  0024c	0a000003	 beq         |$LN42@ContinueTx|
  00250	e594100c	 ldr         r1, [r4, #0xC]
  00254	e59f00b0	 ldr         r0, [pc, #0xB0]
  00258	eb000000	 bl          NKDbgPrintfW
  0025c	e5951440	 ldr         r1, [r5, #0x440]
  00260		 |$LN42@ContinueTx|

; 383  :                                         
; 384  :                     if (pTransfer->cbTransferred == pTransfer->cbBuffer)

  00260	e5942010	 ldr         r2, [r4, #0x10]
  00264	e594300c	 ldr         r3, [r4, #0xC]
  00268	e1520003	 cmp         r2, r3
  0026c	1a000015	 bne         |$LN2@ContinueTx|

; 385  :                     {
; 386  :                         OALMSG(OAL_ETHER&&OAL_FUNC, (TEXT("DATAEND add\r\n")));

  00270	e3110a02	 tst         r1, #2, 20
  00274	13110004	 tstne       r1, #4
  00278	159f0088	 ldrne       r0, [pc, #0x88]
  0027c	1b000000	 blne        NKDbgPrintfW

; 387  :                         pPdd->ep0State = EP0_ST_STATUS_OUT;

  00280	e3a03003	 mov         r3, #3
  00284	e5883178	 str         r3, [r8, #0x178]

; 388  :                         OALMSG(OAL_ETHER&&OAL_FUNC, (TEXT("Set OUT Msg => ep0State = EP0_ST_STATUS_OUT\r\n")));

  00288	e5953440	 ldr         r3, [r5, #0x440]
  0028c	e3130a02	 tst         r3, #2, 20
  00290	13130004	 tstne       r3, #4
  00294	159f0068	 ldrne       r0, [pc, #0x68]
  00298	1b000000	 blne        NKDbgPrintfW

; 389  :                         dwFlag = CSR0_P_TXPKTRDY | CSR0_P_DATAEND;
; 390  :                         pEP->pTransfer = NULL;

  0029c	e3a03000	 mov         r3, #0
  002a0	e58a3038	 str         r3, [r10, #0x38]

; 391  :                         pTransfer->dwUsbError = UFN_NO_ERROR;

  002a4	e5843014	 str         r3, [r4, #0x14]

; 392  :                         pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE, (DWORD)pTransfer);   

  002a8	e5980000	 ldr         r0, [r8]
  002ac	e5983004	 ldr         r3, [r8, #4]
  002b0	e1a02004	 mov         r2, r4
  002b4	e3a0400a	 mov         r4, #0xA
  002b8	e3a01064	 mov         r1, #0x64
  002bc	e1a0e00f	 mov         lr, pc
  002c0	e12fff13	 bx          r3

; 393  :                     }
; 394  :                     else

  002c4	ea000000	 b           |$LN1@ContinueTx|
  002c8		 |$LN2@ContinueTx|

; 395  :                         dwFlag = CSR0_P_TXPKTRDY;

  002c8	e3a04002	 mov         r4, #2
  002cc		 |$LN1@ContinueTx|

; 396  :                     SETREG16(&pCsrRegs->ep[endpoint].CSR.CSR0, dwFlag);                    

  002cc	e1d930b2	 ldrh        r3, [r9, #2]
  002d0	e1833004	 orr         r3, r3, r4
  002d4		 |$LN51@ContinueTx|
  002d4	e1c930b2	 strh        r3, [r9, #2]

; 397  :                 }                
; 398  :             }
; 399  :         } // if (endpoint != 0)
; 400  :     }
; 401  :     
; 402  :     rc = ERROR_SUCCESS;

  002d8	e3a0b000	 mov         r11, #0
  002dc		 |$LN50@ContinueTx|
  002dc	e5953440	 ldr         r3, [r5, #0x440]
  002e0		 |$CleanUp$45383|

; 403  :     
; 404  : CleanUp:
; 405  :     
; 406  :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"-UsbFnPdd!ContinueTxTransfer\r\n"));

  002e0	e3130a02	 tst         r3, #2, 20
  002e4	13130004	 tstne       r3, #4
  002e8	159f0010	 ldrne       r0, [pc, #0x10]
  002ec	1b000000	 blne        NKDbgPrintfW

; 407  :     return rc;
; 408  : }

  002f0	e1a0000b	 mov         r0, r11
  002f4	e28dd010	 add         sp, sp, #0x10
  002f8	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  002fc	e12fff1e	 bx          lr
  00300		 |$LN57@ContinueTx|
  00300		 |$LN58@ContinueTx|
  00300	00000000	 DCD         |??_C@_1DO@OPAMNHLJ@?$AA?9?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  00304		 |$LN59@ContinueTx|
  00304	00000000	 DCD         |??_C@_1FM@OBLLBJJA@?$AAS?$AAe?$AAt?$AA?5?$AAO?$AAU?$AAT?$AA?5?$AAM?$AAs?$AAg?$AA?5?$AA?$DN?$AA?$DO?$AA?5?$AAe?$AAp?$AA0?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?$DN?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT@|
  00308		 |$LN60@ContinueTx|
  00308	00000000	 DCD         |??_C@_1BM@LMLHKPJF@?$AAD?$AAA?$AAT?$AAA?$AAE?$AAN?$AAD?$AA?5?$AAa?$AAd?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0030c		 |$LN61@ContinueTx|
  0030c	00000000	 DCD         |??_C@_1CK@EOKGALAH@?$AAT?$AAx?$AA?5?$AAp?$AAa?$AAc?$AAk?$AAe?$AAt?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00310		 |$LN62@ContinueTx|
  00310	00000000	 DCD         |??_C@_1GE@JLPAIEOM@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAD?$AAA?$AAT?$AAA?$AA_?$AAT?$AAX?$AA?5?$AAs?$AAp?$AAa?$AAc?$AAe?$AA_?$AAl?$AAe?$AAf?$AAt?$AA_?$AAt?$AAo?$AA_?$AAs?$AAe?$AAn@|
  00314		 |$LN63@ContinueTx|
  00314	00000000	 DCD         |??_C@_1FM@NNMILMFN@?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAc?$AAb?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAc?$AAb?$AAT?$AAr?$AAa?$AAn@|
  00318		 |$LN64@ContinueTx|
  00318	00000000	 DCD         |??_C@_1CK@HGADPGKD@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0031c		 |$LN65@ContinueTx|
  0031c	00000000	 DCD         |??_C@_1DG@GAFCGMNC@?$AAW?$AAr?$AAi?$AAt?$AAe?$AAF?$AAI?$AAF?$AAO?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAS?$AAi?$AAz?$AAe?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00320		 |$LN66@ContinueTx|
  00320	00000000	 DCD         |??_C@_1DC@IJMAINHK@?$AAT?$AAX?$AAP?$AAK?$AAT?$AAR?$AAd?$AAy?$AA?5?$AAb?$AAi?$AAt?$AA?5?$AAi?$AAs?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@|
  00324		 |$LN67@ContinueTx|
  00324	00000000	 DCD         |??_C@_1DG@KJCFCKAI@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?$CB?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAi?$AAs?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?$AN?$AA?6?$AA?$AA@|
  00328		 |$LN68@ContinueTx|
  00328	00000000	 DCD         |??_C@_1II@PBHEPHNB@?$AA?$CL?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AAT?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP@|
  0032c		 |$LN69@ContinueTx|
  0032c	00000000	 DCD         |dpCurSettings|
  00330		 |$M46689|

			 ENDP  ; |ContinueTxTransfer|

	EXPORT	|??_C@_1CG@BNGOCLAM@?$AA?9?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@HPHMIFBK@?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$CI?$AAO?$AAU?$AAT?$AA?$CJ?$AA?5?$AAR?$AAx?$AAC?$AAS?$AAR?$AA?$DN?$AA0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@GEEDPLJM@?$AAA?$AAC?$AAK?$AA?3?$AA?5?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@PDCFGEL@?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@DIOGIKJI@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IA@FHPKIPM@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T46747| DCD	|$LN38@StartRxTra|
	DCD	0x4000bb02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@BNGOCLAM@?$AA?9?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "R"
	DCB	0x0, "x", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@HPHMIFBK@?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$CI?$AAO?$AAU?$AAT?$AA?$CJ?$AA?5?$AAR?$AAx?$AAC?$AAS?$AAR?$AA?$DN?$AA0@| DCB "E"
	DCB	0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "I"
	DCB	0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e", 0x0, "T", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, "(", 0x0, "O", 0x0, "U", 0x0, "T", 0x0, ")", 0x0, " "
	DCB	0x0, "R", 0x0, "x", 0x0, "C", 0x0, "S", 0x0, "R", 0x0, "="
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@GEEDPLJM@?$AAA?$AAC?$AAK?$AA?3?$AA?5?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@| DCB "A"
	DCB	0x0, "C", 0x0, "K", 0x0, ":", 0x0, " ", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "r", 0x0, "t", 0x0, "R", 0x0, "x", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@PDCFGEL@?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, "d", 0x0, ":", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@DIOGIKJI@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@| DCB "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "R", 0x0, "x"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, " ", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "p"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " "
	DCB	0x0, "N", 0x0, "U", 0x0, "L", 0x0, "L", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IA@FHPKIPM@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5@| DCB "U"
	DCB	0x0, "s", 0x0, "b", 0x0, "F", 0x0, "n", 0x0, "P", 0x0, "d"
	DCB	0x0, "d", 0x0, "!", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "r"
	DCB	0x0, "t", 0x0, "R", 0x0, "x", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, " ", 0x0, "p", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n"
	DCB	0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, " "
	DCB	0x0, "(", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |StartRxTransfer| PROC

; 417  : {

  00000		 |$LN38@StartRxTra|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd014	 sub         sp, sp, #0x14
  00008		 |$M46744|
  00008	e1a07001	 mov         r7, r1
  0000c	e1a06000	 mov         r6, r0

; 418  :     DWORD rc = ERROR_INVALID_PARAMETER;
; 419  :     USBFN_EP *pEP = &pPdd->ep[endpoint];
; 420  :     STransfer *pTransfer = pEP->pTransfer;
; 421  :     PCSP_MUSB_CSR_REGS pCsrRegs = pPdd->pUsbCsrRegs;
; 422  :     BOOL bNotifyDataReady = FALSE;
; 423  :     
; 424  :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"UsbFnPdd!StartRxTransfer: "
; 425  :         L"EP %d pTransfer 0x%08x (%d, %d, %d)\r\n",
; 426  :         endpoint, pTransfer, pTransfer != NULL ? pTransfer->cbBuffer : 0,
; 427  :         pTransfer != NULL ? pTransfer->cbTransferred : 0,
; 428  :         pTransfer != NULL ? pTransfer->dwUsbError : -1
; 429  :         ));

  00010	e59f82c8	 ldr         r8, [pc, #0x2C8]
  00014	e0873107	 add         r3, r7, r7, lsl #2
  00018	e0863103	 add         r3, r6, r3, lsl #2
  0001c	e5982440	 ldr         r2, [r8, #0x440]
  00020	e5935038	 ldr         r5, [r3, #0x38]
  00024	e596b00c	 ldr         r11, [r6, #0xC]
  00028	e3120a02	 tst         r2, #2, 20
  0002c	e58d3008	 str         r3, [sp, #8]
  00030	e3a09000	 mov         r9, #0
  00034	0a000011	 beq         |$LN15@StartRxTra|
  00038	e3120004	 tst         r2, #4
  0003c	0a00000f	 beq         |$LN15@StartRxTra|
  00040	e3550000	 cmp         r5, #0
  00044	15954014	 ldrne       r4, [r5, #0x14]
  00048	03e04000	 mvneq       r4, #0
  0004c	e3550000	 cmp         r5, #0
  00050	1595e010	 ldrne       lr, [r5, #0x10]
  00054	03a0e000	 moveq       lr, #0
  00058	e59f0288	 ldr         r0, [pc, #0x288]
  0005c	e3550000	 cmp         r5, #0
  00060	1595300c	 ldrne       r3, [r5, #0xC]
  00064	03a03000	 moveq       r3, #0
  00068	e1a02005	 mov         r2, r5
  0006c	e1a01007	 mov         r1, r7
  00070	e58d4004	 str         r4, [sp, #4]
  00074	e58de000	 str         lr, [sp]
  00078	eb000000	 bl          NKDbgPrintfW
  0007c	e5982440	 ldr         r2, [r8, #0x440]
  00080		 |$LN15@StartRxTra|

; 430  : 
; 431  :     if (pTransfer == NULL) 

  00080	e3550000	 cmp         r5, #0
  00084	1a000004	 bne         |$LN12@StartRxTra|

; 432  :     {
; 433  :         OALMSG(OAL_ERROR, (L"StartRxTransfer:  error pTransfer is NULL\r\n"));

  00088	e3120001	 tst         r2, #1
  0008c	159f0250	 ldrne       r0, [pc, #0x250]
  00090	1b000000	 blne        NKDbgPrintfW

; 434  :         return ERROR_INVALID_PARAMETER;

  00094	e3a00057	 mov         r0, #0x57
  00098	ea000089	 b           |$LN13@StartRxTra|
  0009c		 |$LN12@StartRxTra|

; 435  :     }    
; 436  :     
; 437  :     if (endpoint != 0)

  0009c	e3570000	 cmp         r7, #0
  000a0	0a00004b	 beq         |$LN11@StartRxTra|

; 438  :     {
; 439  :         if (pPdd->intr_rx_data_avail &(1 << endpoint))

  000a4	e596317c	 ldr         r3, [r6, #0x17C]
  000a8	e3a02001	 mov         r2, #1
  000ac	e1a0a712	 mov         r10, r2, lsl r7
  000b0	e11a0003	 tst         r10, r3
  000b4	0a000036	 beq         |$LN10@StartRxTra|

; 440  :         {
; 441  :             // rx FIFO has data.
; 442  :             UCHAR *pBuffer;            
; 443  :             DWORD space, maxSize;
; 444  :             WORD rxcount;
; 445  :             
; 446  :             rxcount = INREG16(&pCsrRegs->ep[endpoint].Count.RxCount);
; 447  :             
; 448  :             pBuffer =(UCHAR*)pTransfer->pvBuffer + pTransfer->cbTransferred;               
; 449  :             space = pTransfer->cbBuffer - pTransfer->cbTransferred;
; 450  :             // Get maxPacketSize
; 451  :             maxSize = pPdd->ep[endpoint].maxPacketSize;
; 452  :             
; 453  :             {
; 454  :                 USHORT dwFlag = RXCSR_P_RXPKTRDY;
; 455  :                 
; 456  :                 ReadFIFO(pPdd, (UCHAR)endpoint, pBuffer, (DWORD)rxcount);

  000b8	e59d8008	 ldr         r8, [sp, #8]
  000bc	e5954010	 ldr         r4, [r5, #0x10]
  000c0	e5952004	 ldr         r2, [r5, #4]
  000c4	e1d882bc	 ldrh        r8, [r8, #0x2C]
  000c8	e08bb207	 add         r11, r11, r7, lsl #4
  000cc	e1db30b8	 ldrh        r3, [r11, #8]
  000d0	e595e00c	 ldr         lr, [r5, #0xC]
  000d4	e0822004	 add         r2, r2, r4
  000d8	e20710ff	 and         r1, r7, #0xFF
  000dc	e1a00006	 mov         r0, r6
  000e0	e58d8010	 str         r8, [sp, #0x10]
  000e4	e58d300c	 str         r3, [sp, #0xC]
  000e8	e04e4004	 sub         r4, lr, r4
  000ec	eb000000	 bl          ReadFIFO

; 457  :                 OALMSG(OAL_ETHER&&OAL_FUNC, (L"Received:\r\n"));

  000f0	e59f81e8	 ldr         r8, [pc, #0x1E8]
  000f4	e5983440	 ldr         r3, [r8, #0x440]
  000f8	e3130a02	 tst         r3, #2, 20
  000fc	13130004	 tstne       r3, #4
  00100	159f01cc	 ldrne       r0, [pc, #0x1CC]
  00104	1b000000	 blne        NKDbgPrintfW

; 458  :                 
; 459  :                 // We transfered some data
; 460  :                 pTransfer->cbTransferred = pTransfer->cbBuffer - space;

  00108	e595300c	 ldr         r3, [r5, #0xC]

; 461  :                 
; 462  :                 // Is this end of transfer?
; 463  :                 if (rxcount < maxSize)

  0010c	e59d200c	 ldr         r2, [sp, #0xC]
  00110	e59d0010	 ldr         r0, [sp, #0x10]
  00114	e0433004	 sub         r3, r3, r4
  00118	e3a01000	 mov         r1, #0
  0011c	e1520000	 cmp         r2, r0
  00120	e5853010	 str         r3, [r5, #0x10]

; 464  :                 {
; 465  :                     // received last block
; 466  :                     pTransfer->dwUsbError = UFN_NO_ERROR;

  00124	35851014	 strcc       r1, [r5, #0x14]

; 467  :                     bNotifyDataReady = TRUE;
; 468  :                     // Don't clear the RxPktRdy until it is ready to further received
; 469  :                 }
; 470  :                 else
; 471  :                     CLRREG16(&pCsrRegs->ep[endpoint].RxCSR, dwFlag);

  00128	21db20b6	 ldrcsh      r2, [r11, #6]
  0012c	23a03cff	 movcs       r3, #0xFF, 24
  00130	238330fe	 orrcs       r3, r3, #0xFE
  00134	20023003	 andcs       r3, r2, r3
  00138	21cb30b6	 strcsh      r3, [r11, #6]

; 472  :             }
; 473  :             
; 474  :             // clear intr_rx_data_avail EP0 bit
; 475  :             pPdd->intr_rx_data_avail &= ~(1 << endpoint);           

  0013c	e596317c	 ldr         r3, [r6, #0x17C]
  00140	33a09001	 movcc       r9, #1

; 476  :             
; 477  :             if (bNotifyDataReady)

  00144	e3590000	 cmp         r9, #0
  00148	e1c3300a	 bic         r3, r3, r10
  0014c	e586317c	 str         r3, [r6, #0x17C]
  00150	0a000055	 beq         |$LN35@StartRxTra|

; 478  :             {
; 479  :                 pEP->pTransfer = NULL;

  00154	e59d3008	 ldr         r3, [sp, #8]
  00158	e5831038	 str         r1, [r3, #0x38]

; 480  :                 pTransfer->dwUsbError = UFN_NO_ERROR;

  0015c	e5851014	 str         r1, [r5, #0x14]

; 481  :                 OALMSG(OAL_ETHER&&OAL_FUNC, (TEXT("ACK: StartRxTransfer for EP %d\r\n"), endpoint));

  00160	e5983440	 ldr         r3, [r8, #0x440]
  00164	e3130a02	 tst         r3, #2, 20
  00168	13130004	 tstne       r3, #4
  0016c	159f0168	 ldrne       r0, [pc, #0x168]
  00170	11a01007	 movne       r1, r7
  00174	1b000000	 blne        NKDbgPrintfW

; 482  :                 pPdd->pfnNotify(
; 483  :                     pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE, (DWORD)pTransfer);

  00178	e5960000	 ldr         r0, [r6]
  0017c	e5963004	 ldr         r3, [r6, #4]
  00180	e1a02005	 mov         r2, r5
  00184	e3a01064	 mov         r1, #0x64
  00188	e1a0e00f	 mov         lr, pc
  0018c	e12fff13	 bx          r3

; 484  :             }
; 485  :         }
; 486  :         else

  00190	ea000045	 b           |$LN35@StartRxTra|
  00194		 |$LN10@StartRxTra|

; 487  :         {
; 488  :             CLRREG16(&pCsrRegs->ep[endpoint].RxCSR, RXCSR_P_RXPKTRDY);

  00194	e08b1207	 add         r1, r11, r7, lsl #4
  00198	e1d120b6	 ldrh        r2, [r1, #6]
  0019c	e3a03cff	 mov         r3, #0xFF, 24
  001a0	e38330fe	 orr         r3, r3, #0xFE
  001a4	e0023003	 and         r3, r2, r3
  001a8	e1c130b6	 strh        r3, [r1, #6]

; 489  :             OALMSG(OAL_ETHER&&OAL_FUNC, (TEXT("EP %d IssueTransfer(OUT) RxCSR=0x%x\r\n"), endpoint, INREG16(&pCsrRegs->ep[endpoint].RxCSR)));

  001ac	e5982440	 ldr         r2, [r8, #0x440]
  001b0	e3120a02	 tst         r2, #2, 20
  001b4	0a00003d	 beq         |$LN1@StartRxTra|
  001b8	e3120004	 tst         r2, #4
  001bc	0a00003b	 beq         |$LN1@StartRxTra|
  001c0	e1d120b6	 ldrh        r2, [r1, #6]
  001c4	e59f010c	 ldr         r0, [pc, #0x10C]
  001c8	e1a01007	 mov         r1, r7
  001cc	eb000000	 bl          NKDbgPrintfW

; 490  :         }
; 491  :     }
; 492  :     else // if (endpoint != 0)

  001d0	ea000035	 b           |$LN35@StartRxTra|
  001d4		 |$LN11@StartRxTra|

; 493  :     {
; 494  :         if (pPdd->ep0State == EP0_ST_SETUP_PROCESSED)

  001d4	e5963178	 ldr         r3, [r6, #0x178]
  001d8	e3530001	 cmp         r3, #1
  001dc	1a000033	 bne         |$LN1@StartRxTra|

; 495  :         {
; 496  :             pPdd->ep0State = EP0_ST_DATA_RX;
; 497  :             
; 498  :             if (pPdd->intr_rx_data_avail &(1 << EP0))

  001e0	e596317c	 ldr         r3, [r6, #0x17C]
  001e4	e3a02004	 mov         r2, #4
  001e8	e5862178	 str         r2, [r6, #0x178]
  001ec	e3130001	 tst         r3, #1
  001f0	0a00002d	 beq         |$LN35@StartRxTra|

; 499  :             {
; 500  :                 // rx FIFO has data.
; 501  :                 UCHAR *pBuffer;            
; 502  :                 DWORD space, maxSize;
; 503  :                 USHORT rxcount;
; 504  :                 
; 505  :                 rxcount = INREG8(&pCsrRegs->ep[EP0].Count.Count0);
; 506  :                 
; 507  :                 pBuffer =(UCHAR*)pTransfer->pvBuffer + pTransfer->cbTransferred;               
; 508  :                 space = pTransfer->cbBuffer - pTransfer->cbTransferred;

  001f4	e5954010	 ldr         r4, [r5, #0x10]
  001f8	e595e00c	 ldr         lr, [r5, #0xC]
  001fc	e5db7008	 ldrb        r7, [r11, #8]
  00200	e5952004	 ldr         r2, [r5, #4]

; 509  :                 // Get maxPacketSize
; 510  :                 maxSize = pPdd->ep[EP0].maxPacketSize;
; 511  :                 
; 512  :                 {
; 513  :                     USHORT dwFlag = CSR0_P_SERVICEDRXPKTRDY;
; 514  :                     
; 515  :                     ReadFIFO(pPdd, (UCHAR)endpoint, pBuffer, (DWORD)rxcount);

  00204	e04ee004	 sub         lr, lr, r4
  00208	e1d6a2bc	 ldrh        r10, [r6, #0x2C]
  0020c	e1a03007	 mov         r3, r7
  00210	e0822004	 add         r2, r2, r4
  00214	e3a01000	 mov         r1, #0
  00218	e1a00006	 mov         r0, r6
  0021c	e58de010	 str         lr, [sp, #0x10]
  00220	e3a04040	 mov         r4, #0x40
  00224	eb000000	 bl          ReadFIFO

; 516  :                     OALMSG(OAL_ETHER&&OAL_FUNC, (L"Received:\r\n"));

  00228	e5983440	 ldr         r3, [r8, #0x440]
  0022c	e3130a02	 tst         r3, #2, 20
  00230	13130004	 tstne       r3, #4
  00234	159f0098	 ldrne       r0, [pc, #0x98]
  00238	1b000000	 blne        NKDbgPrintfW

; 517  :                     //memdump((UCHAR *)pBuffer, (USHORT)rxcount, 0);
; 518  :                     
; 519  :                     // We transfered some data
; 520  :                     pTransfer->cbTransferred = pTransfer->cbBuffer - space;

  0023c	e595300c	 ldr         r3, [r5, #0xC]

; 521  :                     
; 522  :                     // Is this end of transfer?
; 523  :                     if (rxcount < maxSize)

  00240	e59d2010	 ldr         r2, [sp, #0x10]
  00244	e157000a	 cmp         r7, r10
  00248	e3a01000	 mov         r1, #0
  0024c	e0433002	 sub         r3, r3, r2
  00250	e5853010	 str         r3, [r5, #0x10]

; 524  :                     {
; 525  :                         // received last block
; 526  :                         pTransfer->dwUsbError = UFN_NO_ERROR;
; 527  :                         pPdd->ep0State = EP0_ST_STATUS_IN;

  00254	33a03002	 movcc       r3, #2
  00258	35851014	 strcc       r1, [r5, #0x14]
  0025c	35863178	 strcc       r3, [r6, #0x178]

; 528  :                         bNotifyDataReady = TRUE;
; 529  :                         dwFlag |= CSR0_P_DATAEND;
; 530  :                     }
; 531  :                     SETREG16(&pCsrRegs->ep[EP0].CSR.CSR0, dwFlag);

  00260	e1db30b2	 ldrh        r3, [r11, #2]
  00264	33a04048	 movcc       r4, #0x48
  00268	33a09001	 movcc       r9, #1

; 532  :                 }
; 533  : 
; 534  :                 // clear intr_rx_data_avail EP0 bit
; 535  :                 pPdd->intr_rx_data_avail &= ~(1 << EP0);            
; 536  :                 
; 537  :                 if (bNotifyDataReady)

  0026c	e1833004	 orr         r3, r3, r4
  00270	e1cb30b2	 strh        r3, [r11, #2]
  00274	e596317c	 ldr         r3, [r6, #0x17C]
  00278	e3590000	 cmp         r9, #0
  0027c	e3c33001	 bic         r3, r3, #1
  00280	e586317c	 str         r3, [r6, #0x17C]
  00284	0a000008	 beq         |$LN35@StartRxTra|

; 538  :                 {
; 539  :                     pEP->pTransfer = NULL;

  00288	e59d3008	 ldr         r3, [sp, #8]

; 540  :                     pTransfer->dwUsbError = UFN_NO_ERROR;
; 541  :                     pPdd->pfnNotify(
; 542  :                         pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE, (DWORD)pTransfer);

  0028c	e1a02005	 mov         r2, r5
  00290	e5831038	 str         r1, [r3, #0x38]
  00294	e5851014	 str         r1, [r5, #0x14]
  00298	e5960000	 ldr         r0, [r6]
  0029c	e5963004	 ldr         r3, [r6, #4]
  002a0	e3a01064	 mov         r1, #0x64
  002a4	e1a0e00f	 mov         lr, pc
  002a8	e12fff13	 bx          r3
  002ac		 |$LN35@StartRxTra|
  002ac	e5982440	 ldr         r2, [r8, #0x440]
  002b0		 |$LN1@StartRxTra|

; 543  :                 }
; 544  :             }
; 545  :         }
; 546  :     }       
; 547  :     
; 548  :     rc = ERROR_SUCCESS;
; 549  :     
; 550  :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"-StartRxTransfer\r\n"));

  002b0	e3120a02	 tst         r2, #2, 20
  002b4	13120004	 tstne       r2, #4
  002b8	159f0010	 ldrne       r0, [pc, #0x10]
  002bc	1b000000	 blne        NKDbgPrintfW

; 551  :     
; 552  :     return rc;

  002c0	e3a00000	 mov         r0, #0
  002c4		 |$LN13@StartRxTra|

; 553  : }

  002c4	e28dd014	 add         sp, sp, #0x14
  002c8	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  002cc	e12fff1e	 bx          lr
  002d0		 |$LN39@StartRxTra|
  002d0		 |$LN40@StartRxTra|
  002d0	00000000	 DCD         |??_C@_1CG@BNGOCLAM@?$AA?9?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  002d4		 |$LN41@StartRxTra|
  002d4	00000000	 DCD         |??_C@_1BI@PDCFGEL@?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?3?$AA?$AN?$AA?6?$AA?$AA@|
  002d8		 |$LN42@StartRxTra|
  002d8	00000000	 DCD         |??_C@_1EM@HPHMIFBK@?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$CI?$AAO?$AAU?$AAT?$AA?$CJ?$AA?5?$AAR?$AAx?$AAC?$AAS?$AAR?$AA?$DN?$AA0@|
  002dc		 |$LN43@StartRxTra|
  002dc	00000000	 DCD         |??_C@_1EC@GEEDPLJM@?$AAA?$AAC?$AAK?$AA?3?$AA?5?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@|
  002e0		 |$LN44@StartRxTra|
  002e0	00000000	 DCD         |dpCurSettings|
  002e4		 |$LN45@StartRxTra|
  002e4	00000000	 DCD         |??_C@_1FI@DIOGIKJI@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe@|
  002e8		 |$LN46@StartRxTra|
  002e8	00000000	 DCD         |??_C@_1IA@FHPKIPM@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAS?$AAt?$AAa?$AAr?$AAt?$AAR?$AAx?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?5@|
  002ec		 |$M46745|

			 ENDP  ; |StartRxTransfer|


  00000			 AREA	 |.pdata|, PDATA
|$T46767| DCD	|$LN6@CalcFIFOAd|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |CalcFIFOAddr| PROC

; 556  : {

  00000		 |$LN6@CalcFIFOAd|
  00000		 |$M46764|
  00000	e3510000	 cmp         r1, #0

; 557  :     UINT fifoAddr;
; 558  : 
; 559  :     fifoAddr =  endpoint *(1024/8);

  00004	e1a00380	 mov         r0, r0, lsl #7

; 560  : 
; 561  :     if (bRxDir)
; 562  :        fifoAddr +=512/8;

  00008	12800040	 addne       r0, r0, #0x40

; 563  : 
; 564  :     return fifoAddr;
; 565  : }

  0000c	e12fff1e	 bx          lr
  00010		 |$M46765|

			 ENDP  ; |CalcFIFOAddr|

	EXPORT	|??_C@_1FE@IACJAPMH@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAe?$AAn?$AAa?$AAb?$AAl?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@CNHBOOBH@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|ResetHardware|
	IMPORT	|EnableUSBClocks|

  00000			 AREA	 |.pdata|, PDATA
|$T46780| DCD	|$LN10@StartUSBCl|
	DCD	0x40001801

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@IACJAPMH@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAe?$AAn?$AAa?$AAb?$AAl?$AAe@| DCB "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k"
	DCB	0x0, " ", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "e", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, " ", 0x0, "c", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, "k", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@CNHBOOBH@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |StartUSBClock| PROC

; 576  : {

  00000		 |$LN10@StartUSBCl|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M46777|

; 577  :     PCSP_MUSB_GEN_REGS pGen = pPdd->pUsbGenRegs;
; 578  : 
; 579  : 	UNREFERENCED_PARAMETER(pPdd);
; 580  : 
; 581  : 	OALMSG(OAL_ETHER&&OAL_FUNC, (TEXT("StartUSBClock\r\n")));

  00004	e59f5050	 ldr         r5, [pc, #0x50]
  00008	e5904010	 ldr         r4, [r0, #0x10]
  0000c	e5953440	 ldr         r3, [r5, #0x440]
  00010	e3130a02	 tst         r3, #2, 20
  00014	13130004	 tstne       r3, #4
  00018	159f0038	 ldrne       r0, [pc, #0x38]
  0001c	1b000000	 blne        NKDbgPrintfW

; 582  : 
; 583  : 	if (!EnableUSBClocks(TRUE))

  00020	e3a00001	 mov         r0, #1
  00024	eb000000	 bl          EnableUSBClocks
  00028	e3500000	 cmp         r0, #0
  0002c	1a000003	 bne         |$LN6@StartUSBCl|

; 584  : 	{
; 585  : 		OALMSG(OAL_ETHER, (TEXT("StartUSBClock : Failed to enable clocks\r\n")));

  00030	e5953440	 ldr         r3, [r5, #0x440]
  00034	e3130a02	 tst         r3, #2, 20
  00038	159f0014	 ldrne       r0, [pc, #0x14]
  0003c	1b000000	 blne        NKDbgPrintfW
  00040		 |$LN6@StartUSBCl|

; 586  : 	}
; 587  : 	
; 588  : 	// Reset the hardware
; 589  : 	ResetHardware();

  00040	eb000000	 bl          ResetHardware

; 590  : 
; 591  : 	OUTREG8(&pGen->Power, POWER_HSENABLE); 

  00044	e3a03020	 mov         r3, #0x20
  00048	e5c43001	 strb        r3, [r4, #1]

; 592  : 
; 593  :     return;
; 594  : }

  0004c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$LN11@StartUSBCl|
  00054		 |$LN12@StartUSBCl|
  00054	00000000	 DCD         |??_C@_1FE@IACJAPMH@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAe?$AAn?$AAa?$AAb?$AAl?$AAe@|
  00058		 |$LN13@StartUSBCl|
  00058	00000000	 DCD         |??_C@_1CA@CNHBOOBH@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?$AN?$AA?6?$AA?$AA@|
  0005c		 |$LN14@StartUSBCl|
  0005c	00000000	 DCD         |dpCurSettings|
  00060		 |$M46778|

			 ENDP  ; |StartUSBClock|

	EXPORT	|GetUniqueDeviceID|
	EXPORT	|??_C@_1DG@LHNIEBLN@?$AA?$CL?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAI?$AAD?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|OALPAtoVA|
	IMPORT	|SOCGetIDCodeAddress|

  00000			 AREA	 |.pdata|, PDATA
|$T46797| DCD	|$LN7@GetUniqueD|
	DCD	0x40001101

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@LHNIEBLN@?$AA?$CL?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAI?$AAD?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, "F", 0x0, "N", 0x0, ":"
	DCB	0x0, ":", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c"
	DCB	0x0, "e", 0x0, " ", 0x0, "I", 0x0, "D", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetUniqueDeviceID| PROC

; 602  : {

  00000		 |$LN7@GetUniqueD|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M46794|

; 603  :     DWORD code;
; 604  :     DWORD *pDieId = (DWORD *)OALPAtoUA(SOCGetIDCodeAddress());

  00004	eb000000	 bl          SOCGetIDCodeAddress
  00008	e3a01000	 mov         r1, #0
  0000c	eb000000	 bl          OALPAtoVA

; 605  : 
; 606  :     // Create unique part of name from SoC ID
; 607  :     code  = INREG32(pDieId);
; 608  : 
; 609  :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"+USBFN::Device ID = 0x%x\r\n", code));

  00010	e59f3028	 ldr         r3, [pc, #0x28]
  00014	e5901000	 ldr         r1, [r0]
  00018	e5933440	 ldr         r3, [r3, #0x440]
  0001c	e3130a02	 tst         r3, #2, 20
  00020	13130004	 tstne       r3, #4
  00024	159f0010	 ldrne       r0, [pc, #0x10]
  00028	1b000000	 blne        NKDbgPrintfW

; 610  : 
; 611  :     return 0x0B5D902F;  // hardcoded id

  0002c	e59f0004	 ldr         r0, [pc, #4]

; 612  : }

  00030	e49de004	 ldr         lr, [sp], #4
  00034	e12fff1e	 bx          lr
  00038		 |$LN8@GetUniqueD|
  00038		 |$LN9@GetUniqueD|
  00038	0b5d902f	 DCD         0xb5d902f
  0003c		 |$LN10@GetUniqueD|
  0003c	00000000	 DCD         |??_C@_1DG@LHNIEBLN@?$AA?$CL?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAI?$AAD?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00040		 |$LN11@GetUniqueD|
  00040	00000000	 DCD         |dpCurSettings|
  00044		 |$M46795|

			 ENDP  ; |GetUniqueDeviceID|

	EXPORT	|Device_Disconnect|
	EXPORT	|??_C@_1CI@LOFKLMPA@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAD?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T46813| DCD	|$LN7@Device_Dis|
	DCD	0x40001601

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@LOFKLMPA@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAD?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_"
	DCB	0x0, "D", 0x0, "i", 0x0, "s", 0x0, "c", 0x0, "o", 0x0, "n"
	DCB	0x0, "n", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |Device_Disconnect| PROC

; 631  : {

  00000		 |$LN7@Device_Dis|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M46810|
  00004	e1a04000	 mov         r4, r0

; 632  :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"Device_Disconnect\r\n"));

  00008	e59f3044	 ldr         r3, [pc, #0x44]
  0000c	e5933440	 ldr         r3, [r3, #0x440]
  00010	e3130a02	 tst         r3, #2, 20
  00014	13130004	 tstne       r3, #4
  00018	159f0030	 ldrne       r0, [pc, #0x30]
  0001c	1b000000	 blne        NKDbgPrintfW

; 633  : 
; 634  :     // We are not configured anymore
; 635  :     // Let MDD process change
; 636  :     pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_BUS_EVENTS, UFN_DETACH);

  00020	e5940000	 ldr         r0, [r4]
  00024	e5943004	 ldr         r3, [r4, #4]
  00028	e3a02000	 mov         r2, #0
  0002c	e3a01001	 mov         r1, #1
  00030	e1a0e00f	 mov         lr, pc
  00034	e12fff13	 bx          r3

; 637  :     pPdd->devState &= ~MUSB_DEVSTAT_ATT;

  00038	e5943018	 ldr         r3, [r4, #0x18]

; 638  :     
; 639  :     return ERROR_SUCCESS;

  0003c	e3a00000	 mov         r0, #0
  00040	e3c33001	 bic         r3, r3, #1
  00044	e5843018	 str         r3, [r4, #0x18]

; 640  : }

  00048	e8bd4010	 ldmia       sp!, {r4, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$LN8@Device_Dis|
  00050		 |$LN9@Device_Dis|
  00050	00000000	 DCD         |??_C@_1CI@LOFKLMPA@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAD?$AAi?$AAs?$AAc?$AAo?$AAn?$AAn?$AAe?$AAc?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  00054		 |$LN10@Device_Dis|
  00054	00000000	 DCD         |dpCurSettings|
  00058		 |$M46811|

			 ENDP  ; |Device_Disconnect|

	EXPORT	|Device_ResetIRQ|
	EXPORT	|??_C@_1CG@NFOBHLAH@?$AA?9?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAR?$AAe?$AAs?$AAe?$AAt?$AAI?$AAR?$AAQ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@HBMBLNHB@?$AAB?$AAS?$AA_?$AAF?$AAU?$AAL?$AAL?$AA_?$AAS?$AAP?$AAE?$AAE?$AAD?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@BBIAPALJ@?$AAB?$AAS?$AA_?$AAH?$AAI?$AAG?$AAH?$AA_?$AAS?$AAP?$AAE?$AAE?$AAD?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@EODBHLMJ@?$AA?$CL?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAR?$AAe?$AAs?$AAe?$AAt?$AAI?$AAR?$AAQ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T46835| DCD	|$LN17@Device_Res|
	DCD	0x40004c01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@NFOBHLAH@?$AA?9?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAR?$AAe?$AAs?$AAe?$AAt?$AAI?$AAR?$AAQ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "_", 0x0, "R", 0x0, "e", 0x0, "s", 0x0, "e", 0x0, "t"
	DCB	0x0, "I", 0x0, "R", 0x0, "Q", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@HBMBLNHB@?$AAB?$AAS?$AA_?$AAF?$AAU?$AAL?$AAL?$AA_?$AAS?$AAP?$AAE?$AAE?$AAD?$AA?$AN?$AA?6?$AA?$AA@| DCB "B"
	DCB	0x0, "S", 0x0, "_", 0x0, "F", 0x0, "U", 0x0, "L", 0x0, "L"
	DCB	0x0, "_", 0x0, "S", 0x0, "P", 0x0, "E", 0x0, "E", 0x0, "D"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@BBIAPALJ@?$AAB?$AAS?$AA_?$AAH?$AAI?$AAG?$AAH?$AA_?$AAS?$AAP?$AAE?$AAE?$AAD?$AA?$AN?$AA?6?$AA?$AA@| DCB "B"
	DCB	0x0, "S", 0x0, "_", 0x0, "H", 0x0, "I", 0x0, "G", 0x0, "H"
	DCB	0x0, "_", 0x0, "S", 0x0, "P", 0x0, "E", 0x0, "E", 0x0, "D"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@EODBHLMJ@?$AA?$CL?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAR?$AAe?$AAs?$AAe?$AAt?$AAI?$AAR?$AAQ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "_", 0x0, "R", 0x0, "e", 0x0, "s", 0x0, "e", 0x0, "t"
	DCB	0x0, "I", 0x0, "R", 0x0, "Q", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |Device_ResetIRQ| PROC

; 660  : {

  00000		 |$LN17@Device_Res|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M46832|
  00004	e1a05000	 mov         r5, r0

; 661  :     PCSP_MUSB_GEN_REGS pGenRegs = pPdd->pUsbGenRegs;
; 662  :     
; 663  :     OALMSG(OAL_ETHER&&OAL_FUNC, (TEXT("+Device_ResetIRQ\r\n")));

  00008	e59f611c	 ldr         r6, [pc, #0x11C]
  0000c	e5957010	 ldr         r7, [r5, #0x10]
  00010	e5963440	 ldr         r3, [r6, #0x440]
  00014	e3130a02	 tst         r3, #2, 20
  00018	13130004	 tstne       r3, #4
  0001c	159f0104	 ldrne       r0, [pc, #0x104]
  00020	1b000000	 blne        NKDbgPrintfW

; 664  :     
; 665  :     // initialize Endpoint0 setup state 
; 666  :     pPdd->ep0State = EP0_ST_SETUP;
; 667  :     
; 668  :     pPdd->intr_rx_data_avail = 0;
; 669  :     
; 670  :     if ((pPdd->devState & MUSB_DEVSTAT_ATT) == 0)

  00024	e5953018	 ldr         r3, [r5, #0x18]
  00028	e3a02000	 mov         r2, #0

; 671  :     {
; 672  :         // MUSB doesn't generate an attach interrrupt.  Interpret bus reset event as attach.
; 673  :         pPdd->devState |= MUSB_DEVSTAT_ATT | MUSB_DEVSTAT_USB_RESET;
; 674  :         pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_BUS_EVENTS, UFN_DETACH);

  0002c	e5950000	 ldr         r0, [r5]
  00030	e3130001	 tst         r3, #1
  00034	e5852178	 str         r2, [r5, #0x178]
  00038	e585217c	 str         r2, [r5, #0x17C]
  0003c	e3a01001	 mov         r1, #1
  00040	1a000029	 bne         |$LN4@Device_Res|
  00044	e3833021	 orr         r3, r3, #0x21
  00048	e5954004	 ldr         r4, [r5, #4]
  0004c	e5853018	 str         r3, [r5, #0x18]
  00050	e3a02000	 mov         r2, #0
  00054	e1a0e00f	 mov         lr, pc
  00058	e12fff14	 bx          r4

; 675  :         pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_BUS_EVENTS, UFN_ATTACH);

  0005c	e5950000	 ldr         r0, [r5]
  00060	e5953004	 ldr         r3, [r5, #4]
  00064	e3a02001	 mov         r2, #1
  00068	e3a01001	 mov         r1, #1
  0006c	e1a0e00f	 mov         lr, pc
  00070	e12fff13	 bx          r3

; 676  :         if (INREG8(&pGenRegs->Power) & POWER_HSMODE)

  00074	e5d73001	 ldrb        r3, [r7, #1]
  00078	e3130010	 tst         r3, #0x10

; 677  :         {
; 678  : 		    OALMSG(OAL_ETHER, (TEXT("BS_HIGH_SPEED\r\n")));

  0007c	e5963440	 ldr         r3, [r6, #0x440]
  00080	0a000009	 beq         |$LN3@Device_Res|
  00084	e3130a02	 tst         r3, #2, 20
  00088	159f0094	 ldrne       r0, [pc, #0x94]
  0008c	1b000000	 blne        NKDbgPrintfW

; 679  :             pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_BUS_SPEED, BS_HIGH_SPEED);

  00090	e5950000	 ldr         r0, [r5]
  00094	e5953004	 ldr         r3, [r5, #4]
  00098	e3a02002	 mov         r2, #2
  0009c	e3a01003	 mov         r1, #3
  000a0	e1a0e00f	 mov         lr, pc
  000a4	e12fff13	 bx          r3

; 680  :         }
; 681  :         else

  000a8	ea000008	 b           |$LN2@Device_Res|
  000ac		 |$LN3@Device_Res|

; 682  :         {
; 683  : 		    OALMSG(OAL_ETHER, (TEXT("BS_FULL_SPEED\r\n")));

  000ac	e3130a02	 tst         r3, #2, 20
  000b0	159f0068	 ldrne       r0, [pc, #0x68]
  000b4	1b000000	 blne        NKDbgPrintfW

; 684  :             pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_BUS_SPEED, BS_FULL_SPEED);

  000b8	e5950000	 ldr         r0, [r5]
  000bc	e5953004	 ldr         r3, [r5, #4]
  000c0	e3a02001	 mov         r2, #1
  000c4	e3a01003	 mov         r1, #3
  000c8	e1a0e00f	 mov         lr, pc
  000cc	e12fff13	 bx          r3
  000d0		 |$LN2@Device_Res|

; 685  :         }           
; 686  :         // Tell MDD about reset...
; 687  :         pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_BUS_EVENTS, UFN_RESET);

  000d0	e5950000	 ldr         r0, [r5]
  000d4	e5953004	 ldr         r3, [r5, #4]
  000d8	e3a02002	 mov         r2, #2
  000dc	e3a01001	 mov         r1, #1
  000e0	e1a0e00f	 mov         lr, pc
  000e4	e12fff13	 bx          r3

; 688  :     }
; 689  :     else

  000e8	ea000003	 b           |$LN1@Device_Res|
  000ec		 |$LN4@Device_Res|

; 690  :         pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_BUS_EVENTS, UFN_RESET);

  000ec	e5953004	 ldr         r3, [r5, #4]
  000f0	e3a02002	 mov         r2, #2
  000f4	e1a0e00f	 mov         lr, pc
  000f8	e12fff13	 bx          r3
  000fc		 |$LN1@Device_Res|

; 691  : 
; 692  :     OALMSG(OAL_ETHER&&OAL_FUNC, (TEXT("-Device_ResetIRQ\r\n")));

  000fc	e5963440	 ldr         r3, [r6, #0x440]
  00100	e3130a02	 tst         r3, #2, 20
  00104	13130004	 tstne       r3, #4
  00108	159f000c	 ldrne       r0, [pc, #0xC]
  0010c	1b000000	 blne        NKDbgPrintfW

; 693  :     return ERROR_SUCCESS;

  00110	e3a00000	 mov         r0, #0

; 694  : }

  00114	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00118	e12fff1e	 bx          lr
  0011c		 |$LN18@Device_Res|
  0011c		 |$LN19@Device_Res|
  0011c	00000000	 DCD         |??_C@_1CG@NFOBHLAH@?$AA?9?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAR?$AAe?$AAs?$AAe?$AAt?$AAI?$AAR?$AAQ?$AA?$AN?$AA?6?$AA?$AA@|
  00120		 |$LN20@Device_Res|
  00120	00000000	 DCD         |??_C@_1CA@HBMBLNHB@?$AAB?$AAS?$AA_?$AAF?$AAU?$AAL?$AAL?$AA_?$AAS?$AAP?$AAE?$AAE?$AAD?$AA?$AN?$AA?6?$AA?$AA@|
  00124		 |$LN21@Device_Res|
  00124	00000000	 DCD         |??_C@_1CA@BBIAPALJ@?$AAB?$AAS?$AA_?$AAH?$AAI?$AAG?$AAH?$AA_?$AAS?$AAP?$AAE?$AAE?$AAD?$AA?$AN?$AA?6?$AA?$AA@|
  00128		 |$LN22@Device_Res|
  00128	00000000	 DCD         |??_C@_1CG@EODBHLMJ@?$AA?$CL?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAR?$AAe?$AAs?$AAe?$AAt?$AAI?$AAR?$AAQ?$AA?$AN?$AA?6?$AA?$AA@|
  0012c		 |$LN23@Device_Res|
  0012c	00000000	 DCD         |dpCurSettings|
  00130		 |$M46833|

			 ENDP  ; |Device_ResetIRQ|

	EXPORT	|Device_ProcessEP0|
	EXPORT	|??_C@_1CK@PHELNBKD@?$AA?9?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@LDJOACEP@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAE?$AAT?$AAU?$AAP?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@FFLGMHM@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AA?5?$AA?$DN?$AA?$DO?$AA?5?$AAE?$AAP?$AA0?$AA?5?$AAS?$AAE?$AAT?$AAU?$AAP?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@CGEACPAE@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?3?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAD?$AAA?$AAT?$AAA?$AA_?$AAR@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HK@NCIOKFCA@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?3?$AA?5?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@LBDLDOFO@?$AA2?$AA?4?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?5?$AAS?$AAe?$AAt?$AA?5?$AAT?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@CCMNMCIH@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA0?$AA?3?$AA?5?$AAf?$AAi?$AAn?$AAa?$AAl?$AA?5?$AAc?$AAo?$AAp?$AAy?$AA?5?$AAN?$AAo?$AAt?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IK@IEONPHHN@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?3?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAD?$AAA?$AAT?$AAA?$AA_?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HK@JEKPKAL@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?3?$AA?5?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@BNAGFJMA@?$AAS?$AAT?$AA_?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@CMOKIKNH@?$AAC?$AAS?$AAR?$AA0?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@HLDCJJFC@?$AAS?$AAe?$AAt?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@GEGFJNAH@?$AAS?$AAe?$AAt?$AAu?$AAp?$AAE?$AAn?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@CNFNHGLF@?$AAS?$AAt?$AAa?$AAl?$AAl?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@GDOLHGDC@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAC?$AAS?$AAR?$AA0?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@IHDMMHEF@?$AA?$CL?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T46906| DCD	|$LN68@Device_Pro|
	DCD	0x40011e02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@PHELNBKD@?$AA?9?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "_", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "E", 0x0, "P", 0x0, "0", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@LDJOACEP@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAE?$AAT?$AAU?$AAP?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN@| DCB "E"
	DCB	0x0, "P", 0x0, "0", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "_"
	DCB	0x0, "S", 0x0, "E", 0x0, "T", 0x0, "U", 0x0, "P", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v"
	DCB	0x0, "e", 0x0, "s", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@FFLGMHM@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AA?5?$AA?$DN?$AA?$DO?$AA?5?$AAE?$AAP?$AA0?$AA?5?$AAS?$AAE?$AAT?$AAU?$AAP?$AA?$AN?$AA?6?$AA?$AA@| DCB "E"
	DCB	0x0, "P", 0x0, "0", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "_"
	DCB	0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U", 0x0, "S"
	DCB	0x0, "_", 0x0, "I", 0x0, "N", 0x0, " ", 0x0, "=", 0x0, ">"
	DCB	0x0, " ", 0x0, "E", 0x0, "P", 0x0, "0", 0x0, " ", 0x0, "S"
	DCB	0x0, "E", 0x0, "T", 0x0, "U", 0x0, "P", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@CGEACPAE@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?3?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAD?$AAA?$AAT?$AAA?$AA_?$AAR@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_"
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "E", 0x0, "P", 0x0, "0", 0x0, ":", 0x0, " "
	DCB	0x0, "E", 0x0, "P", 0x0, "0", 0x0, "_", 0x0, "S", 0x0, "T"
	DCB	0x0, "_", 0x0, "D", 0x0, "A", 0x0, "T", 0x0, "A", 0x0, "_"
	DCB	0x0, "R", 0x0, "X", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "c"
	DCB	0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "d", 0x0, "a", 0x0, "t", 0x0, "a", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@NCIOKFCA@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?3?$AA?5?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_"
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "E", 0x0, "P", 0x0, "0", 0x0, ":", 0x0, " "
	DCB	0x0, " ", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "E", 0x0, "P", 0x0, "0", 0x0, "_", 0x0, "S"
	DCB	0x0, "T", 0x0, "_", 0x0, "D", 0x0, "A", 0x0, "T", 0x0, "A"
	DCB	0x0, "_", 0x0, "R", 0x0, "X", 0x0, " ", 0x0, "p", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "N"
	DCB	0x0, "U", 0x0, "L", 0x0, "L", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@LBDLDOFO@?$AA2?$AA?4?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?5?$AAS?$AAe?$AAt?$AA?5?$AAT?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd@| DCB "2"
	DCB	0x0, ".", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "_", 0x0, "P", 0x0, "r", 0x0, "o"
	DCB	0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, "E", 0x0, "P"
	DCB	0x0, "0", 0x0, " ", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, " "
	DCB	0x0, "T", 0x0, "x", 0x0, "P", 0x0, "k", 0x0, "t", 0x0, "R"
	DCB	0x0, "d", 0x0, "y", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "0"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@CCMNMCIH@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA0?$AA?3?$AA?5?$AAf?$AAi?$AAn?$AAa?$AAl?$AA?5?$AAc?$AAo?$AAp?$AAy?$AA?5?$AAN?$AAo?$AAt?$AAi@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_"
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "0", 0x0, ":", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "n", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "c", 0x0, "o"
	DCB	0x0, "p", 0x0, "y", 0x0, " ", 0x0, "N", 0x0, "o", 0x0, "t"
	DCB	0x0, "i", 0x0, "f", 0x0, "y", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "t", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "m"
	DCB	0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IK@IEONPHHN@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?3?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAD?$AAA?$AAT?$AAA?$AA_?$AAT@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_"
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "E", 0x0, "P", 0x0, "0", 0x0, ":", 0x0, " "
	DCB	0x0, "E", 0x0, "P", 0x0, "0", 0x0, "_", 0x0, "S", 0x0, "T"
	DCB	0x0, "_", 0x0, "D", 0x0, "A", 0x0, "T", 0x0, "A", 0x0, "_"
	DCB	0x0, "T", 0x0, "X", 0x0, " ", 0x0, "b", 0x0, "y", 0x0, "t"
	DCB	0x0, "e", 0x0, "s", 0x0, "_", 0x0, "l", 0x0, "e", 0x0, "f"
	DCB	0x0, "t", 0x0, "_", 0x0, "t", 0x0, "o", 0x0, "_", 0x0, "s"
	DCB	0x0, "e", 0x0, "n", 0x0, "d", 0x0, "=", 0x0, "%", 0x0, "d"
	DCB	0x0, " ", 0x0, "s", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@JEKPKAL@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?3?$AA?5?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_"
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "E", 0x0, "P", 0x0, "0", 0x0, ":", 0x0, " "
	DCB	0x0, " ", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "E", 0x0, "P", 0x0, "0", 0x0, "_", 0x0, "S"
	DCB	0x0, "T", 0x0, "_", 0x0, "D", 0x0, "A", 0x0, "T", 0x0, "A"
	DCB	0x0, "_", 0x0, "T", 0x0, "X", 0x0, " ", 0x0, "p", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "N"
	DCB	0x0, "U", 0x0, "L", 0x0, "L", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@BNAGFJMA@?$AAS?$AAT?$AA_?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "T", 0x0, "_", 0x0, "E", 0x0, "R", 0x0, "R", 0x0, "O"
	DCB	0x0, "R", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@CMOKIKNH@?$AAC?$AAS?$AAR?$AA0?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "C"
	DCB	0x0, "S", 0x0, "R", 0x0, "0", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@HLDCJJFC@?$AAS?$AAe?$AAt?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "e", 0x0, "t", 0x0, "A", 0x0, "d", 0x0, "d", 0x0, "r"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, "=", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@GEGFJNAH@?$AAS?$AAe?$AAt?$AAu?$AAp?$AAE?$AAn?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "e", 0x0, "t", 0x0, "u", 0x0, "p", 0x0, "E", 0x0, "n"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@CNFNHGLF@?$AAS?$AAt?$AAa?$AAl?$AAl?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@GDOLHGDC@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAC?$AAS?$AAR?$AA0?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx@| DCB "I"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u"
	DCB	0x0, "p", 0x0, "t", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "c"
	DCB	0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, " ", 0x0, "w"
	DCB	0x0, "i", 0x0, "t", 0x0, "h", 0x0, " ", 0x0, "C", 0x0, "S"
	DCB	0x0, "R", 0x0, "0", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "r"
	DCB	0x0, "x", 0x0, "c", 0x0, "o", 0x0, "u", 0x0, "n", 0x0, "t"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@IHDMMHEF@?$AA?$CL?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "_", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "E", 0x0, "P", 0x0, "0", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |Device_ProcessEP0| PROC

; 714  : {

  00000		 |$LN68@Device_Pro|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M46903|
  00008	e1a04000	 mov         r4, r0

; 715  :     PCSP_MUSB_GEN_REGS pGenRegs = pPdd->pUsbGenRegs;
; 716  :     PCSP_MUSB_CSR_REGS pCsrRegs = pPdd->pUsbCsrRegs;
; 717  :     UINT16 csr0Val;
; 718  :     UINT16 rxcount;
; 719  :     DWORD data[2];
; 720  :     
; 721  :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"+Device_ProcessEP0\r\n"));

  0000c	e59f5460	 ldr         r5, [pc, #0x460]
  00010	e5948010	 ldr         r8, [r4, #0x10]
  00014	e594700c	 ldr         r7, [r4, #0xC]
  00018	e5952440	 ldr         r2, [r5, #0x440]
  0001c	e3120a02	 tst         r2, #2, 20
  00020	0a000004	 beq         |$LN27@Device_Pro|
  00024	e3120004	 tst         r2, #4
  00028	0a000002	 beq         |$LN27@Device_Pro|
  0002c	e59f043c	 ldr         r0, [pc, #0x43C]
  00030	eb000000	 bl          NKDbgPrintfW
  00034	e5952440	 ldr         r2, [r5, #0x440]
  00038		 |$LN27@Device_Pro|

; 722  : 
; 723  :     csr0Val = INREG16(&pCsrRegs->ep[EP0].CSR.CSR0);

  00038	e1d760b2	 ldrh        r6, [r7, #2]

; 724  :     rxcount = INREG16(&pCsrRegs->ep[EP0].Count.Count0);

  0003c	e1d7a0b8	 ldrh        r10, [r7, #8]

; 725  :     OALMSG(OAL_ETHER&&OAL_FUNC, (TEXT("Interrupt receive with CSR0 = 0x%x, rxcount = 0x%x\r\n"), csr0Val, rxcount));

  00040	e3120a02	 tst         r2, #2, 20
  00044	0a000006	 beq         |$LN29@Device_Pro|
  00048	e3120004	 tst         r2, #4
  0004c	0a000004	 beq         |$LN29@Device_Pro|
  00050	e59f0414	 ldr         r0, [pc, #0x414]
  00054	e1a0200a	 mov         r2, r10
  00058	e1a01006	 mov         r1, r6
  0005c	eb000000	 bl          NKDbgPrintfW
  00060	e5952440	 ldr         r2, [r5, #0x440]
  00064		 |$LN29@Device_Pro|

; 726  :     
; 727  :     if (csr0Val & CSR0_P_SENTSTALL)

  00064	e3a03cff	 mov         r3, #0xFF, 24
  00068	e38390fb	 orr         r9, r3, #0xFB
  0006c	e3a0b000	 mov         r11, #0
  00070	e3160004	 tst         r6, #4
  00074	0a000009	 beq         |$LN24@Device_Pro|

; 728  :     {
; 729  :         // MUSB finished sending STALL 
; 730  :         // clear SENTSTALL 
; 731  :         OALMSG(OAL_ETHER&&OAL_FUNC, (TEXT("Stall\r\n")));

  00078	e3120a02	 tst         r2, #2, 20
  0007c	13120004	 tstne       r2, #4
  00080	159f03e0	 ldrne       r0, [pc, #0x3E0]
  00084	1b000000	 blne        NKDbgPrintfW

; 732  :         CLRREG16(&pCsrRegs->ep[EP0].CSR.CSR0, CSR0_P_SENTSTALL);

  00088	e1d730b2	 ldrh        r3, [r7, #2]
  0008c	e0033009	 and         r3, r3, r9
  00090	e1c730b2	 strh        r3, [r7, #2]

; 733  :         pPdd->ep0State = EP0_ST_SETUP;

  00094	e584b178	 str         r11, [r4, #0x178]

; 734  :         csr0Val = INREG16(&pCsrRegs->ep[EP0].CSR.CSR0);

  00098	e1d760b2	 ldrh        r6, [r7, #2]
  0009c	e5952440	 ldr         r2, [r5, #0x440]
  000a0		 |$LN24@Device_Pro|

; 735  :     }
; 736  :     
; 737  :     if (csr0Val & CSR0_P_SETUPEND)

  000a0	e3160010	 tst         r6, #0x10
  000a4	0a00001f	 beq         |$LN37@Device_Pro|

; 738  :     {
; 739  :         /* setup request ended "early" */
; 740  :         // clear SETUPEND 
; 741  :         OALMSG(OAL_ETHER&&OAL_FUNC, (TEXT("SetupEnd\r\n")));

  000a8	e3120a02	 tst         r2, #2, 20
  000ac	0a000004	 beq         |$LN33@Device_Pro|
  000b0	e3120004	 tst         r2, #4
  000b4	0a000002	 beq         |$LN33@Device_Pro|
  000b8	e59f03a4	 ldr         r0, [pc, #0x3A4]
  000bc	eb000000	 bl          NKDbgPrintfW
  000c0	e5952440	 ldr         r2, [r5, #0x440]
  000c4		 |$LN33@Device_Pro|

; 742  :         if (pPdd->bSetAddress)

  000c4	e5943170	 ldr         r3, [r4, #0x170]
  000c8	e3530000	 cmp         r3, #0
  000cc	0a000007	 beq         |$LN22@Device_Pro|

; 743  :         {
; 744  :             OALMSG(OAL_ETHER&&OAL_FUNC, (L"SetAddress=%d\r\n", pPdd->ucAddress));

  000d0	e3120a02	 tst         r2, #2, 20
  000d4	13120004	 tstne       r2, #4
  000d8	15d4116c	 ldrneb      r1, [r4, #0x16C]
  000dc	159f035c	 ldrne       r0, [pc, #0x35C]
  000e0	1b000000	 blne        NKDbgPrintfW

; 745  :             OUTREG8(&pGenRegs->FAddr, pPdd->ucAddress); 

  000e4	e5d4316c	 ldrb        r3, [r4, #0x16C]
  000e8	e5c83000	 strb        r3, [r8]

; 746  :             pPdd->bSetAddress = FALSE;

  000ec	e584b170	 str         r11, [r4, #0x170]
  000f0		 |$LN22@Device_Pro|

; 747  :         }
; 748  :         
; 749  :         SETREG16(&pCsrRegs->ep[EP0].CSR.CSR0, CSR0_P_SERVICEDSETUPEND);

  000f0	e1d730b2	 ldrh        r3, [r7, #2]
  000f4	e3833080	 orr         r3, r3, #0x80
  000f8	e1c730b2	 strh        r3, [r7, #2]

; 750  :         pPdd->ep0State = EP0_ST_SETUP;

  000fc	e584b178	 str         r11, [r4, #0x178]

; 751  :         csr0Val = INREG16(&pCsrRegs->ep[EP0].CSR.CSR0);
; 752  :         OALMSG(OAL_ETHER&&OAL_FUNC, (TEXT("CSR0 = 0x%x\r\n"), csr0Val));

  00100	e5952440	 ldr         r2, [r5, #0x440]
  00104	e1d760b2	 ldrh        r6, [r7, #2]
  00108	e3120a02	 tst         r2, #2, 20
  0010c	0a000005	 beq         |$LN37@Device_Pro|
  00110	e3120004	 tst         r2, #4
  00114	0a000003	 beq         |$LN37@Device_Pro|
  00118	e59f0340	 ldr         r0, [pc, #0x340]
  0011c	e1a01006	 mov         r1, r6
  00120	eb000000	 bl          NKDbgPrintfW
  00124	e5952440	 ldr         r2, [r5, #0x440]
  00128		 |$LN37@Device_Pro|

; 753  :     }
; 754  :     
; 755  :     switch (pPdd->ep0State)

  00128	e5943178	 ldr         r3, [r4, #0x178]
  0012c	e3530000	 cmp         r3, #0
  00130	0a00009d	 beq         |$LN17@Device_Pro|
  00134	e3530001	 cmp         r3, #1
  00138	0a0000b9	 beq         |$LN14@Device_Pro|
  0013c	e3530002	 cmp         r3, #2
  00140	0a000087	 beq         |$LN19@Device_Pro|
  00144	e3530004	 cmp         r3, #4
  00148	0a00004f	 beq         |$LN13@Device_Pro|
  0014c	e3530005	 cmp         r3, #5
  00150	0a00000c	 beq         |$LN9@Device_Pro|
  00154	e3530006	 cmp         r3, #6
  00158	1a0000a9	 bne         |$LN20@Device_Pro|

; 888  :                 }
; 889  :             }
; 890  :             break;            
; 891  :             
; 892  :         case EP0_ST_STATUS_OUT:
; 893  :             // dummy state in processEP0
; 894  :             break;
; 895  :             
; 896  :         case EP0_ST_ERROR:
; 897  :             if (csr0Val & CSR0_P_SENTSTALL)

  0015c	e3160004	 tst         r6, #4
  00160	0a0000a7	 beq         |$LN20@Device_Pro|

; 898  :             {
; 899  :                 OALMSG(OAL_ETHER&&OAL_FUNC, (TEXT("ST_ERROR\r\n")));

  00164	e3120a02	 tst         r2, #2, 20
  00168	13120004	 tstne       r2, #4
  0016c	159f02e8	 ldrne       r0, [pc, #0x2E8]
  00170	1b000000	 blne        NKDbgPrintfW

; 900  :                 pPdd->ep0State = EP0_ST_SETUP;

  00174	e584b178	 str         r11, [r4, #0x178]

; 901  :                 CLRREG16(&pCsrRegs->ep[EP0].CSR.CSR0, CSR0_P_SENTSTALL);

  00178	e1d730b2	 ldrh        r3, [r7, #2]
  0017c	e0033009	 and         r3, r3, r9
  00180	e1c730b2	 strh        r3, [r7, #2]

; 902  :             }
; 903  :             break;

  00184	ea00009d	 b           |$LN62@Device_Pro|
  00188		 |$LN9@Device_Pro|

; 839  :             
; 840  :         case EP0_ST_DATA_TX:
; 841  :             if (csr0Val & CSR0_P_TXPKTRDY)

  00188	e3160002	 tst         r6, #2
  0018c	1a00009c	 bne         |$LN20@Device_Pro|

; 842  :                 break;
; 843  :             
; 844  :             {
; 845  :                 USBFN_EP *pEP = &pPdd->ep[EP0];
; 846  :                 STransfer *pTransfer = pEP->pTransfer;

  00190	e5943038	 ldr         r3, [r4, #0x38]
  00194	e1b06003	 movs        r6, r3

; 847  :                 UCHAR *pBuffer;
; 848  :                 DWORD space, txcount;
; 849  :                 
; 850  :                 if (pTransfer == NULL) 

  00198	1a000006	 bne         |$LN7@Device_Pro|

; 851  :                 {
; 852  :                     OALMSG(OAL_ETHER&&OAL_FUNC, (L"Device_ProcessEP0:  error EP0_ST_DATA_TX pTransfer is NULL\r\n"));

  0019c	e3120a02	 tst         r2, #2, 20
  001a0	0a000097	 beq         |$LN20@Device_Pro|
  001a4	e3120004	 tst         r2, #4
  001a8	0a000095	 beq         |$LN20@Device_Pro|
  001ac	e59f02a4	 ldr         r0, [pc, #0x2A4]
  001b0	eb000000	 bl          NKDbgPrintfW

; 853  :                     break;

  001b4	ea000091	 b           |$LN62@Device_Pro|
  001b8		 |$LN7@Device_Pro|

; 854  :                 }
; 855  :                 
; 856  :                 {
; 857  :                     DWORD dwFlag = 0;
; 858  :                     pBuffer =(UCHAR*)pTransfer->pvBuffer + pTransfer->cbTransferred;

  001b8	e5969010	 ldr         r9, [r6, #0x10]

; 859  :                     space = pTransfer->cbBuffer - pTransfer->cbTransferred;

  001bc	e596300c	 ldr         r3, [r6, #0xC]

; 860  :                     
; 861  :                     
; 862  :                     // How many bytes we can send just now?
; 863  :                     txcount = pEP->maxPacketSize;

  001c0	e1d482bc	 ldrh        r8, [r4, #0x2C]
  001c4	e596a004	 ldr         r10, [r6, #4]
  001c8	e0431009	 sub         r1, r3, r9

; 864  :                     if (txcount > space)

  001cc	e1580001	 cmp         r8, r1

; 865  :                         txcount = space;

  001d0	81a08001	 movhi       r8, r1

; 866  :                     
; 867  :                     OALMSG(OAL_ETHER&&OAL_FUNC, (L"Device_ProcessEP0: EP0_ST_DATA_TX bytes_left_to_send=%d sending=%d\r\n", space, txcount));

  001d4	e3120a02	 tst         r2, #2, 20
  001d8	13120004	 tstne       r2, #4
  001dc	159f0270	 ldrne       r0, [pc, #0x270]
  001e0	11a02008	 movne       r2, r8
  001e4	1b000000	 blne        NKDbgPrintfW

; 868  :                     
; 869  :                     // Write data to FIFO
; 870  :                     WriteFIFO(pPdd, EP0, pBuffer, txcount);

  001e8	e1a03008	 mov         r3, r8
  001ec	e089200a	 add         r2, r9, r10
  001f0	e3a01000	 mov         r1, #0
  001f4	e1a00004	 mov         r0, r4
  001f8	eb000000	 bl          WriteFIFO

; 871  :                     
; 872  :                     // We transfered some data
; 873  :                     pTransfer->cbTransferred += txcount;

  001fc	e5963010	 ldr         r3, [r6, #0x10]

; 874  :                     dwFlag = CSR0_P_TXPKTRDY;               
; 875  :                     
; 876  :                     if (pTransfer->cbTransferred == pTransfer->cbBuffer)

  00200	e596100c	 ldr         r1, [r6, #0xC]
  00204	e3a09002	 mov         r9, #2
  00208	e0833008	 add         r3, r3, r8
  0020c	e5863010	 str         r3, [r6, #0x10]
  00210	e1530001	 cmp         r3, r1
  00214	1a000013	 bne         |$LN61@Device_Pro|

; 877  :                     {
; 878  :                         pPdd->ep0State = EP0_ST_STATUS_OUT;

  00218	e3a03003	 mov         r3, #3
  0021c	e5843178	 str         r3, [r4, #0x178]

; 879  :                         pEP->pTransfer = NULL;

  00220	e584b038	 str         r11, [r4, #0x38]

; 880  :                         pTransfer->dwUsbError = UFN_NO_ERROR;

  00224	e586b014	 str         r11, [r6, #0x14]

; 881  :                         pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE, (DWORD)pTransfer);   

  00228	e5940000	 ldr         r0, [r4]
  0022c	e5943004	 ldr         r3, [r4, #4]
  00230	e1a02006	 mov         r2, r6
  00234	e3a01064	 mov         r1, #0x64
  00238	e1a0e00f	 mov         lr, pc
  0023c	e12fff13	 bx          r3

; 882  :                         OALMSG(OAL_ETHER&&OAL_FUNC, (TEXT("Device_Process0: final copy Notify - transfer completed\r\n")));

  00240	e5953440	 ldr         r3, [r5, #0x440]
  00244	e3130a02	 tst         r3, #2, 20
  00248	0a000004	 beq         |$LN53@Device_Pro|
  0024c	e3130004	 tst         r3, #4
  00250	0a000002	 beq         |$LN53@Device_Pro|
  00254	e59f01f4	 ldr         r0, [pc, #0x1F4]
  00258	eb000000	 bl          NKDbgPrintfW
  0025c	e5953440	 ldr         r3, [r5, #0x440]
  00260		 |$LN53@Device_Pro|

; 883  :                         dwFlag |= CSR0_P_DATAEND;

  00260	e3a0900a	 mov         r9, #0xA
  00264	ea000000	 b           |$LN5@Device_Pro|
  00268		 |$LN61@Device_Pro|
  00268	e5953440	 ldr         r3, [r5, #0x440]
  0026c		 |$LN5@Device_Pro|

; 884  :                     }       
; 885  :                     
; 886  :                     OALMSG(OAL_ETHER&&OAL_FUNC, (TEXT("2. Device_ProcessEP0 Set TxPktRdy - 0\r\n")));

  0026c	e3130a02	 tst         r3, #2, 20
  00270	13130004	 tstne       r3, #4
  00274	159f01d0	 ldrne       r0, [pc, #0x1D0]
  00278	1b000000	 blne        NKDbgPrintfW

; 887  :                     SETREG16(&pCsrRegs->ep[EP0].CSR.CSR0, dwFlag);

  0027c	e1d730b2	 ldrh        r3, [r7, #2]
  00280	e1833009	 orr         r3, r3, r9

; 901  :                 CLRREG16(&pCsrRegs->ep[EP0].CSR.CSR0, CSR0_P_SENTSTALL);

  00284	e1c730b2	 strh        r3, [r7, #2]

; 902  :             }
; 903  :             break;

  00288	ea00005c	 b           |$LN62@Device_Pro|
  0028c		 |$LN13@Device_Pro|

; 784  :             break;
; 785  :             
; 786  :         case EP0_ST_DATA_RX:
; 787  :             if (!(csr0Val & CSR0_P_RXPKTRDY))

  0028c	e3160001	 tst         r6, #1
  00290	0a00005b	 beq         |$LN20@Device_Pro|

; 788  :                 break;
; 789  :             
; 790  :             if (pPdd->ep[EP0].pTransfer == NULL) 

  00294	e5943038	 ldr         r3, [r4, #0x38]
  00298	e3530000	 cmp         r3, #0
  0029c	1a00000a	 bne         |$LN11@Device_Pro|

; 791  :             {
; 792  :                 // set intr_rxdata_avail and when IssueTransfer() is called retrieve data
; 793  :                 //          from FIFO and set CSR0 ServicedRxPkt bit and check for end of packet to set CSR0 DATAEND bit.
; 794  :                 pPdd->intr_rx_data_avail |=(1 << EP0);

  002a0	e594317c	 ldr         r3, [r4, #0x17C]
  002a4	e3833001	 orr         r3, r3, #1
  002a8	e584317c	 str         r3, [r4, #0x17C]

; 795  :                 OALMSG(OAL_ETHER&&OAL_FUNC, (L"Device_ProcessEP0:  error EP0_ST_DATA_RX pTransfer is NULL\r\n"));

  002ac	e5952440	 ldr         r2, [r5, #0x440]
  002b0	e3120a02	 tst         r2, #2, 20
  002b4	0a000052	 beq         |$LN20@Device_Pro|
  002b8	e3120004	 tst         r2, #4
  002bc	0a000050	 beq         |$LN20@Device_Pro|
  002c0	e59f0180	 ldr         r0, [pc, #0x180]

; 851  :                 {
; 852  :                     OALMSG(OAL_ETHER&&OAL_FUNC, (L"Device_ProcessEP0:  error EP0_ST_DATA_TX pTransfer is NULL\r\n"));

  002c4	eb000000	 bl          NKDbgPrintfW

; 853  :                     break;

  002c8	ea00004c	 b           |$LN62@Device_Pro|
  002cc		 |$LN11@Device_Pro|

; 796  :                 break;
; 797  :             }
; 798  :             
; 799  :             {
; 800  :                 USBFN_EP *pEP = &pPdd->ep[EP0];
; 801  :                 STransfer *pTransfer = pEP->pTransfer;

  002cc	e5946038	 ldr         r6, [r4, #0x38]

; 802  :                 UCHAR *pBuffer;            
; 803  :                 DWORD space, remain, maxSize;
; 804  :                 
; 805  :                 pBuffer =(UCHAR*)pTransfer->pvBuffer + pTransfer->cbTransferred;               
; 806  :                 space = pTransfer->cbBuffer - pTransfer->cbTransferred;
; 807  :                 // Get maxPacketSize
; 808  :                 maxSize = pPdd->ep[EP0].maxPacketSize;
; 809  :                 
; 810  :                 {
; 811  :                     USHORT dwFlag = CSR0_P_SERVICEDRXPKTRDY;
; 812  :                     remain = rxcount;
; 813  :                     
; 814  :                     ReadFIFO(pPdd, (UCHAR)EP0, pBuffer, (DWORD)rxcount);

  002d0	e1d492bc	 ldrh        r9, [r4, #0x2C]
  002d4	e1a0300a	 mov         r3, r10
  002d8	e596e010	 ldr         lr, [r6, #0x10]
  002dc	e5962004	 ldr         r2, [r6, #4]
  002e0	e3a01000	 mov         r1, #0
  002e4	e1a00004	 mov         r0, r4
  002e8	e08e2002	 add         r2, lr, r2
  002ec	e3a08040	 mov         r8, #0x40
  002f0	eb000000	 bl          ReadFIFO

; 815  :                     
; 816  :                     OALMSG(OAL_ETHER&&OAL_FUNC, (L"Device_ProcessEP0: EP0_ST_DATA_RX received data\r\n"));                    

  002f4	e5953440	 ldr         r3, [r5, #0x440]
  002f8	e3130a02	 tst         r3, #2, 20
  002fc	13130004	 tstne       r3, #4
  00300	159f013c	 ldrne       r0, [pc, #0x13C]
  00304	1b000000	 blne        NKDbgPrintfW

; 817  :                     
; 818  :                     // We transfered some data
; 819  :                     pTransfer->cbTransferred += rxcount;

  00308	e5963010	 ldr         r3, [r6, #0x10]

; 820  :                     
; 821  :                     // Is this end of transfer?
; 822  :                     if (rxcount < maxSize)

  0030c	e15a0009	 cmp         r10, r9
  00310	e08a3003	 add         r3, r10, r3
  00314	e5863010	 str         r3, [r6, #0x10]
  00318	2a00000a	 bcs         |$LN10@Device_Pro|

; 823  :                     {
; 824  :                         // received last block
; 825  :                         pTransfer->dwUsbError = UFN_NO_ERROR;
; 826  :                         pPdd->ep0State = EP0_ST_STATUS_IN;

  0031c	e3a03002	 mov         r3, #2
  00320	e586b014	 str         r11, [r6, #0x14]
  00324	e5843178	 str         r3, [r4, #0x178]

; 827  :                         pEP->pTransfer = NULL;

  00328	e584b038	 str         r11, [r4, #0x38]

; 828  :                         pPdd->pfnNotify(
; 829  :                             pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE, (DWORD)pTransfer);

  0032c	e5940000	 ldr         r0, [r4]
  00330	e5943004	 ldr         r3, [r4, #4]
  00334	e1a02006	 mov         r2, r6
  00338	e3a01064	 mov         r1, #0x64
  0033c	e1a0e00f	 mov         lr, pc
  00340	e12fff13	 bx          r3

; 830  :                         dwFlag |= CSR0_P_DATAEND;

  00344	e3a08048	 mov         r8, #0x48
  00348		 |$LN10@Device_Pro|

; 831  :                     }
; 832  :                     SETREG16(&pCsrRegs->ep[EP0].CSR.CSR0, dwFlag);

  00348	e1d730b2	 ldrh        r3, [r7, #2]

; 833  :                 }
; 834  :                 
; 835  :                 // clear intr_rx_data_avail EP0 bit
; 836  :                 pPdd->intr_rx_data_avail &= ~(1 << EP0);            

  0034c	e1833008	 orr         r3, r3, r8
  00350	e1c730b2	 strh        r3, [r7, #2]
  00354	e594317c	 ldr         r3, [r4, #0x17C]
  00358	e3c33001	 bic         r3, r3, #1
  0035c	e584317c	 str         r3, [r4, #0x17C]

; 837  :             }
; 838  :             break;

  00360	ea000026	 b           |$LN62@Device_Pro|
  00364		 |$LN19@Device_Pro|

; 756  :     {
; 757  :         case EP0_ST_STATUS_IN:
; 758  :             // dummy state in processEP0
; 759  :             if (pPdd->bSetAddress)

  00364	e5943170	 ldr         r3, [r4, #0x170]
  00368	e3530000	 cmp         r3, #0
  0036c	0a000008	 beq         |$LN18@Device_Pro|

; 760  :             {
; 761  :                 OALMSG(OAL_ETHER&&OAL_FUNC, (L"SetAddress=%d\r\n", pPdd->ucAddress));

  00370	e3120a02	 tst         r2, #2, 20
  00374	13120004	 tstne       r2, #4
  00378	15d4116c	 ldrneb      r1, [r4, #0x16C]
  0037c	159f00bc	 ldrne       r0, [pc, #0xBC]
  00380	1b000000	 blne        NKDbgPrintfW

; 762  :                 OUTREG8(&pGenRegs->FAddr, pPdd->ucAddress); 

  00384	e5d4316c	 ldrb        r3, [r4, #0x16C]
  00388	e5c83000	 strb        r3, [r8]

; 763  :                 pPdd->bSetAddress = FALSE;

  0038c	e584b170	 str         r11, [r4, #0x170]
  00390	e5952440	 ldr         r2, [r5, #0x440]
  00394		 |$LN18@Device_Pro|

; 764  :             }
; 765  :             OALMSG(OAL_ETHER&&OAL_FUNC, (TEXT("EP0_ST_STATUS_IN => EP0 SETUP\r\n")));

  00394	e3120a02	 tst         r2, #2, 20
  00398	13120004	 tstne       r2, #4
  0039c	159f0098	 ldrne       r0, [pc, #0x98]
  003a0	1b000000	 blne        NKDbgPrintfW

; 766  :             pPdd->ep0State = EP0_ST_SETUP;

  003a4	e584b178	 str         r11, [r4, #0x178]
  003a8	e5952440	 ldr         r2, [r5, #0x440]
  003ac		 |$LN17@Device_Pro|

; 767  :             
; 768  :             // if received packet while in EP0_ST_STATUS_IN, continue process SETUP packet.
; 769  :         case EP0_ST_SETUP:
; 770  :             if (rxcount < 8)

  003ac	e35a0008	 cmp         r10, #8
  003b0	3a000013	 bcc         |$LN20@Device_Pro|

; 771  :                 break;
; 772  :             if (!(csr0Val & CSR0_P_RXPKTRDY))

  003b4	e3160001	 tst         r6, #1
  003b8	0a000011	 beq         |$LN20@Device_Pro|

; 773  :                 break;        
; 774  :             data[0] = INREG32(&pGenRegs->fifo[EP0]);

  003bc	e5981020	 ldr         r1, [r8, #0x20]

; 775  :             data[1] = INREG32(&pGenRegs->fifo[EP0]);        
; 776  :             OALMSG(OAL_ETHER&&OAL_FUNC, (L"EP0_ST_SETUP receives 0x%x 0x%x\r\n", data[0], data[1]));

  003c0	e3120a02	 tst         r2, #2, 20
  003c4	13120004	 tstne       r2, #4
  003c8	e58d1000	 str         r1, [sp]
  003cc	e5983020	 ldr         r3, [r8, #0x20]
  003d0	159f0060	 ldrne       r0, [pc, #0x60]
  003d4	11a02003	 movne       r2, r3
  003d8	e58d3004	 str         r3, [sp, #4]
  003dc	1b000000	 blne        NKDbgPrintfW

; 777  : 
; 778  :             pPdd->ep0State = EP0_ST_SETUP_PROCESSED;
; 779  :             pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_SETUP_PACKET, (DWORD)data);        

  003e0	e3a06001	 mov         r6, #1
  003e4	e5940000	 ldr         r0, [r4]
  003e8	e5943004	 ldr         r3, [r4, #4]
  003ec	e5846178	 str         r6, [r4, #0x178]
  003f0	e28d2000	 add         r2, sp, #0
  003f4	e3a01004	 mov         r1, #4
  003f8	e1a0e00f	 mov         lr, pc
  003fc	e12fff13	 bx          r3
  00400		 |$LN62@Device_Pro|
  00400	e5952440	 ldr         r2, [r5, #0x440]
  00404		 |$LN20@Device_Pro|

; 904  :             
; 905  :         default:
; 906  :             break;
; 907  :         }
; 908  :         
; 909  :         OALMSG(OAL_ETHER&&OAL_FUNC, (L"-Device_ProcessEP0\r\n"));

  00404	e3120a02	 tst         r2, #2, 20
  00408	13120004	 tstne       r2, #4
  0040c	159f0020	 ldrne       r0, [pc, #0x20]
  00410	1b000000	 blne        NKDbgPrintfW

; 910  :         
; 911  :         return ERROR_SUCCESS;

  00414	e3a00000	 mov         r0, #0

; 912  : }

  00418	e28dd008	 add         sp, sp, #8
  0041c	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00420	e12fff1e	 bx          lr
  00424		 |$LN14@Device_Pro|

; 780  :             break;
; 781  :             
; 782  :         case EP0_ST_SETUP_PROCESSED:
; 783  :             pPdd->intr_rx_data_avail |=(1 << EP0);

  00424	e594317c	 ldr         r3, [r4, #0x17C]
  00428	e3833001	 orr         r3, r3, #1

; 833  :                 }
; 834  :                 
; 835  :                 // clear intr_rx_data_avail EP0 bit
; 836  :                 pPdd->intr_rx_data_avail &= ~(1 << EP0);            

  0042c	e584317c	 str         r3, [r4, #0x17C]

; 837  :             }
; 838  :             break;

  00430	eafffff2	 b           |$LN62@Device_Pro|
  00434		 |$LN69@Device_Pro|
  00434		 |$LN70@Device_Pro|
  00434	00000000	 DCD         |??_C@_1CK@PHELNBKD@?$AA?9?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?$AN?$AA?6?$AA?$AA@|
  00438		 |$LN71@Device_Pro|
  00438	00000000	 DCD         |??_C@_1EE@LDJOACEP@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAE?$AAT?$AAU?$AAP?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN@|
  0043c		 |$LN72@Device_Pro|
  0043c	00000000	 DCD         |??_C@_1EA@FFLGMHM@?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AA?5?$AA?$DN?$AA?$DO?$AA?5?$AAE?$AAP?$AA0?$AA?5?$AAS?$AAE?$AAT?$AAU?$AAP?$AA?$AN?$AA?6?$AA?$AA@|
  00440		 |$LN73@Device_Pro|
  00440	00000000	 DCD         |??_C@_1CA@HLDCJJFC@?$AAS?$AAe?$AAt?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$DN?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00444		 |$LN74@Device_Pro|
  00444	00000000	 DCD         |??_C@_1GE@CGEACPAE@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?3?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAD?$AAA?$AAT?$AAA?$AA_?$AAR@|
  00448		 |$LN75@Device_Pro|
  00448	00000000	 DCD         |??_C@_1HK@NCIOKFCA@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?3?$AA?5?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT@|
  0044c		 |$LN76@Device_Pro|
  0044c	00000000	 DCD         |??_C@_1FA@LBDLDOFO@?$AA2?$AA?4?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?5?$AAS?$AAe?$AAt?$AA?5?$AAT?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd@|
  00450		 |$LN77@Device_Pro|
  00450	00000000	 DCD         |??_C@_1HE@CCMNMCIH@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA0?$AA?3?$AA?5?$AAf?$AAi?$AAn?$AAa?$AAl?$AA?5?$AAc?$AAo?$AAp?$AAy?$AA?5?$AAN?$AAo?$AAt?$AAi@|
  00454		 |$LN78@Device_Pro|
  00454	00000000	 DCD         |??_C@_1IK@IEONPHHN@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?3?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAD?$AAA?$AAT?$AAA?$AA_?$AAT@|
  00458		 |$LN79@Device_Pro|
  00458	00000000	 DCD         |??_C@_1HK@JEKPKAL@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?3?$AA?5?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT@|
  0045c		 |$LN80@Device_Pro|
  0045c	00000000	 DCD         |??_C@_1BG@BNAGFJMA@?$AAS?$AAT?$AA_?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?$AN?$AA?6?$AA?$AA@|
  00460		 |$LN81@Device_Pro|
  00460	00000000	 DCD         |??_C@_1BM@CMOKIKNH@?$AAC?$AAS?$AAR?$AA0?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00464		 |$LN82@Device_Pro|
  00464	00000000	 DCD         |??_C@_1BG@GEGFJNAH@?$AAS?$AAe?$AAt?$AAu?$AAp?$AAE?$AAn?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00468		 |$LN83@Device_Pro|
  00468	00000000	 DCD         |??_C@_1BA@CNFNHGLF@?$AAS?$AAt?$AAa?$AAl?$AAl?$AA?$AN?$AA?6?$AA?$AA@|
  0046c		 |$LN84@Device_Pro|
  0046c	00000000	 DCD         |??_C@_1GK@GDOLHGDC@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAr?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AA?5?$AAw?$AAi?$AAt?$AAh?$AA?5?$AAC?$AAS?$AAR?$AA0?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx@|
  00470		 |$LN85@Device_Pro|
  00470	00000000	 DCD         |??_C@_1CK@IHDMMHEF@?$AA?$CL?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AA0?$AA?$AN?$AA?6?$AA?$AA@|
  00474		 |$LN86@Device_Pro|
  00474	00000000	 DCD         |dpCurSettings|
  00478		 |$M46904|

			 ENDP  ; |Device_ProcessEP0|

	EXPORT	|Device_ProcessEPx_RX|
	EXPORT	|??_C@_1DA@IKAAHPOB@?$AA?9?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAR?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@CCBEIKEM@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAR?$AAX?$AA?3?$AA?5?$AAc?$AAa?$AAl?$AAl?$AA?5?$AAp?$AAf?$AAn?$AAN?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@DJGBGNGE@?$AA?$CB?$AA?$CB?$AA?$CB?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAR?$AAX?$AA?3?$AA?5?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@PIBDKLHF@?$AAO?$AAv?$AAe?$AAr?$AAr?$AAu?$AAn?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@IMFCNEOO@?$AA?$CL?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAR?$AAX?$AA?3?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$DN@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T46953| DCD	|$LN26@Device_Pro@2|
	DCD	0x40008101

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@IKAAHPOB@?$AA?9?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAR?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "_", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "E", 0x0, "P", 0x0, "x", 0x0, "_"
	DCB	0x0, "R", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@CCBEIKEM@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAR?$AAX?$AA?3?$AA?5?$AAc?$AAa?$AAl?$AAl?$AA?5?$AAp?$AAf?$AAn?$AAN?$AAo@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_"
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "E", 0x0, "P", 0x0, "x", 0x0, "_", 0x0, "R"
	DCB	0x0, "X", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "l"
	DCB	0x0, "l", 0x0, " ", 0x0, "p", 0x0, "f", 0x0, "n", 0x0, "N"
	DCB	0x0, "o", 0x0, "t", 0x0, "i", 0x0, "f", 0x0, "y", 0x0, " "
	DCB	0x0, "C", 0x0, "O", 0x0, "M", 0x0, "P", 0x0, "L", 0x0, "E"
	DCB	0x0, "T", 0x0, "E", 0x0, " ", 0x0, "e", 0x0, "n", 0x0, "d"
	DCB	0x0, "p", 0x0, ":", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "+"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@DJGBGNGE@?$AA?$CB?$AA?$CB?$AA?$CB?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAR?$AAX?$AA?3?$AA?5?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn@| DCB "!"
	DCB	0x0, "!", 0x0, "!", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_", 0x0, "P", 0x0, "r"
	DCB	0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, "E"
	DCB	0x0, "P", 0x0, "x", 0x0, "_", 0x0, "R", 0x0, "X", 0x0, ":"
	DCB	0x0, " ", 0x0, " ", 0x0, "p", 0x0, "T", 0x0, "r", 0x0, "a"
	DCB	0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "i", 0x0, "s", 0x0, " ", 0x0, "N", 0x0, "U", 0x0, "L"
	DCB	0x0, "L", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@PIBDKLHF@?$AAO?$AAv?$AAe?$AAr?$AAr?$AAu?$AAn?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "v", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "n"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@IMFCNEOO@?$AA?$CL?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAR?$AAX?$AA?3?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$DN@| DCB "+"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "_", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "E", 0x0, "P", 0x0, "x", 0x0, "_"
	DCB	0x0, "R", 0x0, "X", 0x0, ":", 0x0, " ", 0x0, "e", 0x0, "n"
	DCB	0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t"
	DCB	0x0, "=", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |Device_ProcessEPx_RX| PROC

; 936  : {

  00000		 |$LN26@Device_Pro@2|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004		 |$M46950|
  00004	e1a07001	 mov         r7, r1
  00008	e1a04000	 mov         r4, r0

; 937  :     PCSP_MUSB_CSR_REGS pCsrRegs = pPdd->pUsbCsrRegs;
; 938  :     UINT16 csrVal;
; 939  :     USBFN_EP *pEP = &pPdd->ep[endpoint];
; 940  :     UINT16 rxcount;
; 941  :     STransfer *pTransfer = pEP->pTransfer;
; 942  :     
; 943  :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"+Device_ProcessEPx_RX: endpoint=%d\r\n", endpoint));

  0000c	e59f51ec	 ldr         r5, [pc, #0x1EC]
  00010	e0873107	 add         r3, r7, r7, lsl #2
  00014	e0849103	 add         r9, r4, r3, lsl #2
  00018	e5953440	 ldr         r3, [r5, #0x440]
  0001c	e594600c	 ldr         r6, [r4, #0xC]
  00020	e5998038	 ldr         r8, [r9, #0x38]
  00024	e3130a02	 tst         r3, #2, 20
  00028	0a000004	 beq         |$LN11@Device_Pro@2|
  0002c	e3130004	 tst         r3, #4
  00030	0a000002	 beq         |$LN11@Device_Pro@2|
  00034	e59f01c0	 ldr         r0, [pc, #0x1C0]
  00038	eb000000	 bl          NKDbgPrintfW
  0003c	e5953440	 ldr         r3, [r5, #0x440]
  00040		 |$LN11@Device_Pro@2|

; 944  :     csrVal = INREG16(&pCsrRegs->ep[endpoint].RxCSR);

  00040	e0866207	 add         r6, r6, r7, lsl #4
  00044	e1d620b6	 ldrh        r2, [r6, #6]

; 945  :     
; 946  :     if (csrVal & RXCSR_P_SENTSTALL)

  00048	e3120040	 tst         r2, #0x40
  0004c	0a00000a	 beq         |$LN8@Device_Pro@2|

; 947  :     {
; 948  :         // MUSB finished sending STALL 
; 949  :         // clear SENTSTALL 
; 950  :         OALMSG(OAL_ETHER&&OAL_FUNC, (TEXT("Stall\r\n")));

  00050	e3130a02	 tst         r3, #2, 20
  00054	13130004	 tstne       r3, #4
  00058	159f0198	 ldrne       r0, [pc, #0x198]
  0005c	1b000000	 blne        NKDbgPrintfW

; 951  :         CLRREG16(&pCsrRegs->ep[endpoint].RxCSR, RXCSR_P_SENTSTALL);

  00060	e1d620b6	 ldrh        r2, [r6, #6]
  00064	e3a03cff	 mov         r3, #0xFF, 24
  00068	e38330bf	 orr         r3, r3, #0xBF
  0006c	e0023003	 and         r3, r2, r3
  00070	e1c630b6	 strh        r3, [r6, #6]

; 952  :         csrVal = INREG16(&pCsrRegs->ep[endpoint].RxCSR);

  00074	e1d620b6	 ldrh        r2, [r6, #6]
  00078	e5953440	 ldr         r3, [r5, #0x440]
  0007c		 |$LN8@Device_Pro@2|

; 953  :     }
; 954  :     
; 955  :     if (csrVal & RXCSR_P_OVERRUN)

  0007c	e3120004	 tst         r2, #4
  00080	0a000018	 beq         |$LN7@Device_Pro@2|

; 956  :     {
; 957  :         // clear OVERRUN 
; 958  :         OALMSG(OAL_ERROR, (TEXT("Overrun\r\n")));

  00084	e3130001	 tst         r3, #1
  00088	159f0164	 ldrne       r0, [pc, #0x164]
  0008c	1b000000	 blne        NKDbgPrintfW

; 959  :         CLRREG16(&pCsrRegs->ep[endpoint].RxCSR, RXCSR_P_OVERRUN);

  00090	e1d610b6	 ldrh        r1, [r6, #6]
  00094	e3a03cff	 mov         r3, #0xFF, 24
  00098	e38330fb	 orr         r3, r3, #0xFB
  0009c	e0013003	 and         r3, r1, r3
  000a0	e1c630b6	 strh        r3, [r6, #6]

; 960  :         if (pTransfer != NULL)

  000a4	e3580000	 cmp         r8, #0
  000a8	0a000009	 beq         |$LN6@Device_Pro@2|

; 961  :         {
; 962  :            pTransfer->dwUsbError = UFN_CLIENT_BUFFER_ERROR;

  000ac	e3a03f41	 mov         r3, #0x41, 30
  000b0	e5883014	 str         r3, [r8, #0x14]

; 963  :            pEP->pTransfer = NULL;

  000b4	e3a03000	 mov         r3, #0
  000b8	e5893038	 str         r3, [r9, #0x38]

; 964  :            pPdd->pfnNotify(
; 965  :                pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE, (DWORD)pTransfer);

  000bc	e5940000	 ldr         r0, [r4]
  000c0	e5943004	 ldr         r3, [r4, #4]
  000c4	e1a02008	 mov         r2, r8
  000c8	e3a01064	 mov         r1, #0x64
  000cc	e1a0e00f	 mov         lr, pc
  000d0	e12fff13	 bx          r3
  000d4		 |$LN6@Device_Pro@2|

; 966  :         }
; 967  :         
; 968  :         pPdd->intr_rx_data_avail &=(1 << endpoint);

  000d4	e594317c	 ldr         r3, [r4, #0x17C]
  000d8	e3a02001	 mov         r2, #1
  000dc	e0033712	 and         r3, r3, r2, lsl r7
  000e0	e584317c	 str         r3, [r4, #0x17C]

; 969  :         goto cleanUp;

  000e4	ea000037	 b           |$LN23@Device_Pro@2|
  000e8		 |$LN7@Device_Pro@2|

; 970  :     }
; 971  :     
; 972  :     if (!(csrVal & RXCSR_P_RXPKTRDY))

  000e8	e3120001	 tst         r2, #1
  000ec	0a000036	 beq         |$cleanUp$45699|

; 973  :         goto cleanUp;      
; 974  :     
; 975  :     if (pTransfer == NULL) 

  000f0	e3580000	 cmp         r8, #0
  000f4	1a000009	 bne         |$LN4@Device_Pro@2|

; 976  :     {
; 977  :         pPdd->intr_rx_data_avail |=(1 << endpoint);

  000f8	e594317c	 ldr         r3, [r4, #0x17C]
  000fc	e3a02001	 mov         r2, #1
  00100	e1833712	 orr         r3, r3, r2, lsl r7
  00104	e584317c	 str         r3, [r4, #0x17C]

; 978  :         OALMSG(OAL_ERROR, (L"!!! Device_ProcessEPx_RX:  pTransfer is NULL\r\n"));

  00108	e5953440	 ldr         r3, [r5, #0x440]
  0010c	e3130001	 tst         r3, #1
  00110	0a00002d	 beq         |$cleanUp$45699|
  00114	e59f00d4	 ldr         r0, [pc, #0xD4]
  00118	eb000000	 bl          NKDbgPrintfW

; 979  :         goto cleanUp;

  0011c	ea000029	 b           |$LN23@Device_Pro@2|
  00120		 |$LN4@Device_Pro@2|

; 980  :     }
; 981  :     
; 982  :     rxcount = INREG16(&pCsrRegs->ep[endpoint].Count.RxCount);
; 983  :     
; 984  :     {
; 985  :         UCHAR *pBuffer; 
; 986  :         
; 987  :         pBuffer =(UCHAR*)pTransfer->pvBuffer + pTransfer->cbTransferred;            

  00120	e5980010	 ldr         r0, [r8, #0x10]
  00124	e5982004	 ldr         r2, [r8, #4]
  00128	e1d6a0b8	 ldrh        r10, [r6, #8]

; 988  :         ReadFIFO(pPdd, (UCHAR)endpoint, pBuffer, (DWORD)rxcount);

  0012c	e20710ff	 and         r1, r7, #0xFF
  00130	e0802002	 add         r2, r0, r2
  00134	e1a00004	 mov         r0, r4
  00138	e1a0300a	 mov         r3, r10
  0013c	eb000000	 bl          ReadFIFO

; 989  :         
; 990  :         // clear intr_rx_data_avail EP bit
; 991  :         pPdd->intr_rx_data_avail &= ~(1 << endpoint);           

  00140	e594317c	 ldr         r3, [r4, #0x17C]
  00144	e3a02001	 mov         r2, #1
  00148	e1c33712	 bic         r3, r3, r2, lsl r7
  0014c	e584317c	 str         r3, [r4, #0x17C]

; 992  :         
; 993  :         // We transfered some data
; 994  :         pTransfer->cbTransferred += rxcount;

  00150	e5983010	 ldr         r3, [r8, #0x10]
  00154	e083200a	 add         r2, r3, r10
  00158	e5882010	 str         r2, [r8, #0x10]

; 995  :         
; 996  :         // Is this end of transfer?
; 997  :         // I guess the system doesn't send out the zero-length packet from host.
; 998  :         if ((rxcount < pPdd->ep[endpoint].maxPacketSize) ||(rxcount == 0) || (pTransfer->cbTransferred == pTransfer->cbBuffer))

  0015c	e1d932bc	 ldrh        r3, [r9, #0x2C]
  00160	e15a0003	 cmp         r10, r3
  00164	3a000008	 bcc         |$LN2@Device_Pro@2|
  00168	e35a0000	 cmp         r10, #0
  0016c	1598300c	 ldrne       r3, [r8, #0xC]
  00170	11520003	 cmpne       r2, r3

; 1009 :             //OALMSG(OAL_ETHER&&OAL_FUNC, (L"Device_ProcessEPx_RX: call pfnNotify COMPLETE -\r\n"));              
; 1010 :         }
; 1011 :         else
; 1012 :             CLRREG16(&pCsrRegs->ep[endpoint].RxCSR, RXCSR_P_RXPKTRDY);

  00174	11d620b6	 ldrneh      r2, [r6, #6]
  00178	13a03cff	 movne       r3, #0xFF, 24
  0017c	138330fe	 orrne       r3, r3, #0xFE
  00180	10023003	 andne       r3, r2, r3
  00184	11c630b6	 strneh      r3, [r6, #6]
  00188	1a00000e	 bne         |$LN23@Device_Pro@2|
  0018c		 |$LN2@Device_Pro@2|

; 999  :         {
; 1000 :             // received last block
; 1001 :             OALMSG(OAL_ETHER&&OAL_FUNC, (L"Device_ProcessEPx_RX: call pfnNotify COMPLETE endp:%d +\r\n", endpoint));  

  0018c	e5953440	 ldr         r3, [r5, #0x440]
  00190	e3130a02	 tst         r3, #2, 20
  00194	13130004	 tstne       r3, #4
  00198	159f004c	 ldrne       r0, [pc, #0x4C]
  0019c	11a01007	 movne       r1, r7
  001a0	1b000000	 blne        NKDbgPrintfW

; 1002 :             pTransfer->dwUsbError = UFN_NO_ERROR;            

  001a4	e3a03000	 mov         r3, #0
  001a8	e5883014	 str         r3, [r8, #0x14]

; 1003 :             pEP->pTransfer = NULL;

  001ac	e5893038	 str         r3, [r9, #0x38]

; 1004 :             //memdump((uchar *)pTransfer->pvBuffer, (unsigned short) pTransfer->cbTransferred, 0);
; 1005 :             // Don't clear RXCSR_P_PXPKTRDY here, let the next time it start to do that.
; 1006 : 
; 1007 :             pPdd->pfnNotify(
; 1008 :                 pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE, (DWORD)pTransfer);

  001b0	e5940000	 ldr         r0, [r4]
  001b4	e5943004	 ldr         r3, [r4, #4]
  001b8	e1a02008	 mov         r2, r8
  001bc	e3a01064	 mov         r1, #0x64
  001c0	e1a0e00f	 mov         lr, pc
  001c4	e12fff13	 bx          r3
  001c8		 |$LN23@Device_Pro@2|
  001c8	e5953440	 ldr         r3, [r5, #0x440]
  001cc		 |$cleanUp$45699|

; 1013 :     }
; 1014 :     
; 1015 : cleanUp:
; 1016 : 
; 1017 :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"-Device_ProcessEPx_RX\r\n"));

  001cc	e3130a02	 tst         r3, #2, 20
  001d0	13130004	 tstne       r3, #4
  001d4	159f000c	 ldrne       r0, [pc, #0xC]
  001d8	1b000000	 blne        NKDbgPrintfW

; 1018 :     
; 1019 :     return ERROR_SUCCESS;

  001dc	e3a00000	 mov         r0, #0

; 1020 : }

  001e0	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  001e4	e12fff1e	 bx          lr
  001e8		 |$LN27@Device_Pro@2|
  001e8		 |$LN28@Device_Pro@2|
  001e8	00000000	 DCD         |??_C@_1DA@IKAAHPOB@?$AA?9?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAR?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  001ec		 |$LN29@Device_Pro@2|
  001ec	00000000	 DCD         |??_C@_1HE@CCBEIKEM@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAR?$AAX?$AA?3?$AA?5?$AAc?$AAa?$AAl?$AAl?$AA?5?$AAp?$AAf?$AAn?$AAN?$AAo@|
  001f0		 |$LN30@Device_Pro@2|
  001f0	00000000	 DCD         |??_C@_1FO@DJGBGNGE@?$AA?$CB?$AA?$CB?$AA?$CB?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAR?$AAX?$AA?3?$AA?5?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn@|
  001f4		 |$LN31@Device_Pro@2|
  001f4	00000000	 DCD         |??_C@_1BE@PIBDKLHF@?$AAO?$AAv?$AAe?$AAr?$AAr?$AAu?$AAn?$AA?$AN?$AA?6?$AA?$AA@|
  001f8		 |$LN32@Device_Pro@2|
  001f8	00000000	 DCD         |??_C@_1BA@CNFNHGLF@?$AAS?$AAt?$AAa?$AAl?$AAl?$AA?$AN?$AA?6?$AA?$AA@|
  001fc		 |$LN33@Device_Pro@2|
  001fc	00000000	 DCD         |??_C@_1EK@IMFCNEOO@?$AA?$CL?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAR?$AAX?$AA?3?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$DN@|
  00200		 |$LN34@Device_Pro@2|
  00200	00000000	 DCD         |dpCurSettings|
  00204		 |$M46951|

			 ENDP  ; |Device_ProcessEPx_RX|

	EXPORT	|Device_ProcessEPx_TX|
	EXPORT	|??_C@_1DA@IHBOAPKG@?$AA?9?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAT?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HC@IGCMDKEF@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAT?$AAX?$AA?3?$AA?5?$AAb?$AAy?$AAt?$AAe?$AAs?$AA_?$AAl?$AAe?$AAf?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@FBIKOCJK@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAT?$AAX?$AA?3?$AA?5?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@GONGKHD@?$AAT?$AAX?$AAC?$AAS?$AAR?$AA_?$AAP?$AA_?$AAT?$AAX?$AAP?$AAK?$AAT?$AAR?$AAD?$AAY?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@CDDDEDII@?$AAU?$AAn?$AAd?$AAe?$AAr?$AAr?$AAu?$AAn?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@EFJCCDBC@?$AA?$CL?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAT?$AAX?$AA?3?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$DN@| [ DATA ] ; `string'
	IMPORT	|__rt_udiv|

  00000			 AREA	 |.pdata|, PDATA
|$T46996| DCD	|$LN30@Device_Pro@3|
	DCD	0x40008002

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@IHBOAPKG@?$AA?9?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAT?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "_", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "E", 0x0, "P", 0x0, "x", 0x0, "_"
	DCB	0x0, "T", 0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@IGCMDKEF@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAT?$AAX?$AA?3?$AA?5?$AAb?$AAy?$AAt?$AAe?$AAs?$AA_?$AAl?$AAe?$AAf?$AAt@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_"
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "E", 0x0, "P", 0x0, "x", 0x0, "_", 0x0, "T"
	DCB	0x0, "X", 0x0, ":", 0x0, " ", 0x0, "b", 0x0, "y", 0x0, "t"
	DCB	0x0, "e", 0x0, "s", 0x0, "_", 0x0, "l", 0x0, "e", 0x0, "f"
	DCB	0x0, "t", 0x0, "_", 0x0, "t", 0x0, "o", 0x0, "_", 0x0, "s"
	DCB	0x0, "e", 0x0, "n", 0x0, "d", 0x0, "=", 0x0, "%", 0x0, "d"
	DCB	0x0, " ", 0x0, "s", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@FBIKOCJK@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAT?$AAX?$AA?3?$AA?5?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "_"
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "E", 0x0, "P", 0x0, "x", 0x0, "_", 0x0, "T"
	DCB	0x0, "X", 0x0, ":", 0x0, " ", 0x0, " ", 0x0, "p", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "N"
	DCB	0x0, "U", 0x0, "L", 0x0, "L", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@GONGKHD@?$AAT?$AAX?$AAC?$AAS?$AAR?$AA_?$AAP?$AA_?$AAT?$AAX?$AAP?$AAK?$AAT?$AAR?$AAD?$AAY?$AA?$AN?$AA?6?$AA?$AA@| DCB "T"
	DCB	0x0, "X", 0x0, "C", 0x0, "S", 0x0, "R", 0x0, "_", 0x0, "P"
	DCB	0x0, "_", 0x0, "T", 0x0, "X", 0x0, "P", 0x0, "K", 0x0, "T"
	DCB	0x0, "R", 0x0, "D", 0x0, "Y", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@CDDDEDII@?$AAU?$AAn?$AAd?$AAe?$AAr?$AAr?$AAu?$AAn?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "n", 0x0, "d", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u"
	DCB	0x0, "n", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@EFJCCDBC@?$AA?$CL?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAT?$AAX?$AA?3?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$DN@| DCB "+"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "_", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "E", 0x0, "P", 0x0, "x", 0x0, "_"
	DCB	0x0, "T", 0x0, "X", 0x0, ":", 0x0, " ", 0x0, "e", 0x0, "n"
	DCB	0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t"
	DCB	0x0, "=", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |Device_ProcessEPx_TX| PROC

; 1042 : {

  00000		 |$LN30@Device_Pro@3|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M46993|
  00008	e1a09001	 mov         r9, r1
  0000c	e1a0b000	 mov         r11, r0

; 1043 :     PCSP_MUSB_CSR_REGS pCsrRegs = pPdd->pUsbCsrRegs;
; 1044 :     USBFN_EP *pEP = &pPdd->ep[endpoint];
; 1045 :     STransfer *pTransfer = pEP->pTransfer;
; 1046 :     UINT16 csrVal;
; 1047 :     
; 1048 :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"+Device_ProcessEPx_TX: endpoint=%d\r\n", endpoint));

  00010	e59f41e4	 ldr         r4, [pc, #0x1E4]
  00014	e0893109	 add         r3, r9, r9, lsl #2
  00018	e08b8103	 add         r8, r11, r3, lsl #2
  0001c	e5942440	 ldr         r2, [r4, #0x440]
  00020	e59b500c	 ldr         r5, [r11, #0xC]
  00024	e5987038	 ldr         r7, [r8, #0x38]
  00028	e3120a02	 tst         r2, #2, 20
  0002c	0a000004	 beq         |$LN12@Device_Pro@3|
  00030	e3120004	 tst         r2, #4
  00034	0a000002	 beq         |$LN12@Device_Pro@3|
  00038	e59f01b8	 ldr         r0, [pc, #0x1B8]
  0003c	eb000000	 bl          NKDbgPrintfW
  00040	e5942440	 ldr         r2, [r4, #0x440]
  00044		 |$LN12@Device_Pro@3|

; 1049 :     csrVal = INREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR);

  00044	e0855209	 add         r5, r5, r9, lsl #4
  00048	e1d560b2	 ldrh        r6, [r5, #2]

; 1050 :     
; 1051 :     if (csrVal & TXCSR_P_SENTSTALL)

  0004c	e3160020	 tst         r6, #0x20
  00050	0a00000a	 beq         |$LN9@Device_Pro@3|

; 1052 :     {
; 1053 :         // MUSB finished sending STALL 
; 1054 :         // clear SENTSTALL 
; 1055 :         OALMSG(OAL_ETHER&&OAL_FUNC, (TEXT("Stall\r\n")));

  00054	e3120a02	 tst         r2, #2, 20
  00058	13120004	 tstne       r2, #4
  0005c	159f0190	 ldrne       r0, [pc, #0x190]
  00060	1b000000	 blne        NKDbgPrintfW

; 1056 :         CLRREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR, TXCSR_P_SENTSTALL);

  00064	e1d520b2	 ldrh        r2, [r5, #2]
  00068	e3a03cff	 mov         r3, #0xFF, 24
  0006c	e38330df	 orr         r3, r3, #0xDF
  00070	e0023003	 and         r3, r2, r3
  00074	e1c530b2	 strh        r3, [r5, #2]

; 1057 :         csrVal = INREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR);

  00078	e1d560b2	 ldrh        r6, [r5, #2]
  0007c	e5942440	 ldr         r2, [r4, #0x440]
  00080		 |$LN9@Device_Pro@3|

; 1058 :     }
; 1059 :     
; 1060 :     if (csrVal & TXCSR_P_UNDERRUN)

  00080	e3160004	 tst         r6, #4
  00084	0a000009	 beq         |$LN8@Device_Pro@3|

; 1061 :     {
; 1062 :         // clear UNDERRUN 
; 1063 :         OALMSG(OAL_ETHER&&OAL_FUNC, (TEXT("Underrun\r\n")));

  00088	e3120a02	 tst         r2, #2, 20
  0008c	13120004	 tstne       r2, #4
  00090	159f0158	 ldrne       r0, [pc, #0x158]
  00094	1b000000	 blne        NKDbgPrintfW

; 1064 :         CLRREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR, TXCSR_P_UNDERRUN);

  00098	e1d520b2	 ldrh        r2, [r5, #2]
  0009c	e3a03cff	 mov         r3, #0xFF, 24
  000a0	e38330fb	 orr         r3, r3, #0xFB
  000a4	e0023003	 and         r3, r2, r3
  000a8	e1c530b2	 strh        r3, [r5, #2]
  000ac	e5942440	 ldr         r2, [r4, #0x440]
  000b0		 |$LN8@Device_Pro@3|

; 1065 :     }
; 1066 :     
; 1067 :     // check if finished sending packet (TXPKTRDY bit clear when finished)
; 1068 :     if (csrVal & TXCSR_P_TXPKTRDY) 

  000b0	e3160001	 tst         r6, #1
  000b4	0a000006	 beq         |$LN7@Device_Pro@3|

; 1069 :     {
; 1070 :         OALMSG(OAL_ETHER&&OAL_FUNC, (TEXT("TXCSR_P_TXPKTRDY\r\n")));

  000b8	e3120a02	 tst         r2, #2, 20
  000bc	0a00003f	 beq         |$cleanUp$45750|
  000c0	e3120004	 tst         r2, #4
  000c4	0a00003d	 beq         |$cleanUp$45750|
  000c8	e59f011c	 ldr         r0, [pc, #0x11C]
  000cc	eb000000	 bl          NKDbgPrintfW

; 1071 :         goto cleanUp;      

  000d0	ea000039	 b           |$LN26@Device_Pro@3|
  000d4		 |$LN7@Device_Pro@3|

; 1072 :     }
; 1073 :     
; 1074 :     if (pTransfer == NULL) 

  000d4	e3570000	 cmp         r7, #0
  000d8	1a000004	 bne         |$LN6@Device_Pro@3|

; 1075 :     {
; 1076 :         OALMSG(OAL_ERROR, (L"Device_ProcessEPx_TX:  pTransfer is NULL\r\n"));

  000dc	e3120001	 tst         r2, #1
  000e0	0a000036	 beq         |$cleanUp$45750|
  000e4	e59f00fc	 ldr         r0, [pc, #0xFC]
  000e8	eb000000	 bl          NKDbgPrintfW
  000ec	ea000032	 b           |$LN26@Device_Pro@3|
  000f0		 |$LN6@Device_Pro@3|

; 1077 :         goto cleanUp;
; 1078 :     }
; 1079 :     
; 1080 :     {
; 1081 :         UCHAR *pBuffer;     
; 1082 :         DWORD space, txcount;
; 1083 :         
; 1084 :         pBuffer =(UCHAR*)pTransfer->pvBuffer + pTransfer->cbTransferred;

  000f0	e597a010	 ldr         r10, [r7, #0x10]

; 1085 :         space = pTransfer->cbBuffer - pTransfer->cbTransferred;

  000f4	e597300c	 ldr         r3, [r7, #0xC]

; 1086 :         
; 1087 :         
; 1088 :         // How many bytes we can send just now?
; 1089 :         txcount = pEP->maxPacketSize;

  000f8	e1d862bc	 ldrh        r6, [r8, #0x2C]
  000fc	e5970004	 ldr         r0, [r7, #4]
  00100	e043100a	 sub         r1, r3, r10

; 1090 :         if (txcount > space)

  00104	e1560001	 cmp         r6, r1

; 1091 :             txcount = space;

  00108	81a06001	 movhi       r6, r1

; 1092 :         
; 1093 :         OALMSG(OAL_ETHER&&OAL_FUNC, (L"Device_ProcessEPx_TX: bytes_left_to_send=%d sending=%d\r\n", space, txcount));

  0010c	e3120a02	 tst         r2, #2, 20
  00110	e58d0000	 str         r0, [sp]
  00114	0a000005	 beq         |$LN22@Device_Pro@3|
  00118	e3120004	 tst         r2, #4
  0011c	0a000003	 beq         |$LN22@Device_Pro@3|
  00120	e59f00bc	 ldr         r0, [pc, #0xBC]
  00124	e1a02006	 mov         r2, r6
  00128	eb000000	 bl          NKDbgPrintfW
  0012c	e59d0000	 ldr         r0, [sp]
  00130		 |$LN22@Device_Pro@3|

; 1094 :         
; 1095 :         if (txcount)

  00130	e3560000	 cmp         r6, #0
  00134	0a00000b	 beq         |$LN4@Device_Pro@3|

; 1096 :         {
; 1097 :             // Write data to FIFO
; 1098 :             WriteFIFO(pPdd, (UCHAR) endpoint, pBuffer, txcount);

  00138	e080200a	 add         r2, r0, r10
  0013c	e1a0000b	 mov         r0, r11
  00140	e1a03006	 mov         r3, r6
  00144	e20910ff	 and         r1, r9, #0xFF
  00148	eb000000	 bl          WriteFIFO

; 1099 :             
; 1100 :             // We transfered some data
; 1101 :             pTransfer->cbTransferred += txcount;

  0014c	e5973010	 ldr         r3, [r7, #0x10]
  00150	e0833006	 add         r3, r3, r6
  00154	e5873010	 str         r3, [r7, #0x10]

; 1102 :             SETREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR, TXCSR_P_TXPKTRDY);

  00158	e1d530b2	 ldrh        r3, [r5, #2]
  0015c	e3833001	 orr         r3, r3, #1
  00160	e1c530b2	 strh        r3, [r5, #2]
  00164	ea000014	 b           |$LN26@Device_Pro@3|
  00168		 |$LN4@Device_Pro@3|

; 1103 :             //OALMSG(OAL_ETHER&&OAL_FUNC, (L"EPX_TX sent %d bytes\r\n", txcount));  
; 1104 :         }
; 1105 :         
; 1106 :         else if (((pTransfer->cbTransferred % pEP->maxPacketSize) == 0) && !pEP->bZeroLengthSent)

  00168	e1d802bc	 ldrh        r0, [r8, #0x2C]
  0016c	e5971010	 ldr         r1, [r7, #0x10]
  00170	eb000000	 bl          __rt_udiv
  00174	e3510000	 cmp         r1, #0
  00178	0598303c	 ldreq       r3, [r8, #0x3C]
  0017c	03530000	 cmpeq       r3, #0

; 1107 :         {
; 1108 :             // send zero-length end of packet
; 1109 :             SETREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR, TXCSR_P_TXPKTRDY);

  00180	01d530b2	 ldreqh      r3, [r5, #2]

; 1110 :             pEP->bZeroLengthSent = TRUE;

  00184	03a02001	 moveq       r2, #1
  00188	03833001	 orreq       r3, r3, #1
  0018c	01c530b2	 streqh      r3, [r5, #2]
  00190	0588203c	 streq       r2, [r8, #0x3C]
  00194	0a000008	 beq         |$LN26@Device_Pro@3|

; 1111 :         }
; 1112 :         else
; 1113 :         {
; 1114 :             // ACK_COMPLETE
; 1115 :             //OALMSG(OAL_ETHER&&OAL_FUNC, (L"Device_ProcessEPx_TX: call pfnNotify COMPLETE endp:%d +\r\n", endpoint));  
; 1116 : 
; 1117 :             pEP->pTransfer = NULL;

  00198	e3a03000	 mov         r3, #0
  0019c	e5883038	 str         r3, [r8, #0x38]

; 1118 :             pTransfer->dwUsbError = UFN_NO_ERROR;

  001a0	e5873014	 str         r3, [r7, #0x14]

; 1119 : 
; 1120 :             pPdd->pfnNotify(pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE, (DWORD)pTransfer);   

  001a4	e59b0000	 ldr         r0, [r11]
  001a8	e59b3004	 ldr         r3, [r11, #4]
  001ac	e1a02007	 mov         r2, r7
  001b0	e3a01064	 mov         r1, #0x64
  001b4	e1a0e00f	 mov         lr, pc
  001b8	e12fff13	 bx          r3
  001bc		 |$LN26@Device_Pro@3|
  001bc	e5942440	 ldr         r2, [r4, #0x440]
  001c0		 |$cleanUp$45750|

; 1121 :             //OALMSG(OAL_ETHER&&OAL_FUNC, (L"Device_ProcessEPx_TX: call pfnNotify COMPLETE -\r\n"));  
; 1122 :             //OALMSG(OAL_ETHER&&OAL_FUNC, (TEXT("Device_ProcessEPx_TX: ACK_COMPLETE\r\n")));
; 1123 :         }       
; 1124 :     }
; 1125 :     
; 1126 : cleanUp:    
; 1127 : 
; 1128 :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"-Device_ProcessEPx_TX\r\n"));

  001c0	e3120a02	 tst         r2, #2, 20
  001c4	13120004	 tstne       r2, #4
  001c8	159f0010	 ldrne       r0, [pc, #0x10]
  001cc	1b000000	 blne        NKDbgPrintfW

; 1129 :     
; 1130 :     return ERROR_SUCCESS;

  001d0	e3a00000	 mov         r0, #0

; 1131 : }

  001d4	e28dd004	 add         sp, sp, #4
  001d8	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  001dc	e12fff1e	 bx          lr
  001e0		 |$LN31@Device_Pro@3|
  001e0		 |$LN32@Device_Pro@3|
  001e0	00000000	 DCD         |??_C@_1DA@IHBOAPKG@?$AA?9?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAT?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  001e4		 |$LN33@Device_Pro@3|
  001e4	00000000	 DCD         |??_C@_1HC@IGCMDKEF@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAT?$AAX?$AA?3?$AA?5?$AAb?$AAy?$AAt?$AAe?$AAs?$AA_?$AAl?$AAe?$AAf?$AAt@|
  001e8		 |$LN34@Device_Pro@3|
  001e8	00000000	 DCD         |??_C@_1FG@FBIKOCJK@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAT?$AAX?$AA?3?$AA?5?$AA?5?$AAp?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr@|
  001ec		 |$LN35@Device_Pro@3|
  001ec	00000000	 DCD         |??_C@_1CG@GONGKHD@?$AAT?$AAX?$AAC?$AAS?$AAR?$AA_?$AAP?$AA_?$AAT?$AAX?$AAP?$AAK?$AAT?$AAR?$AAD?$AAY?$AA?$AN?$AA?6?$AA?$AA@|
  001f0		 |$LN36@Device_Pro@3|
  001f0	00000000	 DCD         |??_C@_1BG@CDDDEDII@?$AAU?$AAn?$AAd?$AAe?$AAr?$AAr?$AAu?$AAn?$AA?$AN?$AA?6?$AA?$AA@|
  001f4		 |$LN37@Device_Pro@3|
  001f4	00000000	 DCD         |??_C@_1BA@CNFNHGLF@?$AAS?$AAt?$AAa?$AAl?$AAl?$AA?$AN?$AA?6?$AA?$AA@|
  001f8		 |$LN38@Device_Pro@3|
  001f8	00000000	 DCD         |??_C@_1EK@EFJCCDBC@?$AA?$CL?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA_?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAP?$AAx?$AA_?$AAT?$AAX?$AA?3?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$DN@|
  001fc		 |$LN39@Device_Pro@3|
  001fc	00000000	 DCD         |dpCurSettings|
  00200		 |$M46994|

			 ENDP  ; |Device_ProcessEPx_TX|

	EXPORT	|InterruptThread|
	EXPORT	|??_C@_1LE@ICJADCP@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T47031| DCD	|$LN28@InterruptT|
	DCD	0x40004801

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LE@ICJADCP@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr@| DCB "U"
	DCB	0x0, "s", 0x0, "b", 0x0, "F", 0x0, "n", 0x0, "P", 0x0, "d"
	DCB	0x0, "d", 0x0, "!", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, "T"
	DCB	0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, ":"
	DCB	0x0, " ", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, "s", 0x0, " "
	DCB	0x0, "-", 0x0, ">", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, " ", 0x0, "(", 0x0, "i", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "_", 0x0, "u", 0x0, "s", 0x0, "b", 0x0, ")"
	DCB	0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, " ", 0x0, "(", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "_", 0x0, "t", 0x0, "x", 0x0, ")", 0x0, ",", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, " ", 0x0, "("
	DCB	0x0, "i", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "_", 0x0, "r"
	DCB	0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |InterruptThread| PROC

; 1141 : {

  00000		 |$LN28@InterruptT|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004		 |$M47028|
  00004	e1a08000	 mov         r8, r0

; 1142 :     USBFN_PDD *pPdd = pPddContext;
; 1143 :     PCSP_MUSB_GEN_REGS pGenRegs = pPdd->pUsbGenRegs;

  00008	e598a010	 ldr         r10, [r8, #0x10]
  0000c	e59fb108	 ldr         r11, [pc, #0x108]
  00010		 |$LL14@InterruptT|
  00010	e59b3440	 ldr         r3, [r11, #0x440]

; 1144 :     DWORD intr_usb, intr_tx, intr_rx;
; 1145 :     int i;
; 1146 :     
; 1147 : 	for(;;) 
; 1148 : 	{
; 1149 :         BOOL fInterrupt = FALSE;
; 1150 :     
; 1151 :         // Get interrupt source
; 1152 :         // Note that these bits are cleared on read
; 1153 :         intr_usb = INREG8(&pGenRegs->IntrUSB);

  00014	e5da900a	 ldrb        r9, [r10, #0xA]

; 1154 :         intr_tx  = INREG16(&pGenRegs->IntrTx);

  00018	e1da60b2	 ldrh        r6, [r10, #2]

; 1155 :         intr_rx  = INREG16(&pGenRegs->IntrRx);
; 1156 :        
; 1157 :         OALMSG(OAL_ETHER&&OAL_FUNC, (
; 1158 :             L"UsbFnPdd!InterruptThread: Interrupts -> 0x%x (intr_usb), 0x%x (intr_tx), 0x%x (intr_rx)\r\n", intr_usb, intr_tx, intr_rx));

  0001c	e3130a02	 tst         r3, #2, 20
  00020	e1da70b4	 ldrh        r7, [r10, #4]
  00024	13130004	 tstne       r3, #4
  00028	159f00e8	 ldrne       r0, [pc, #0xE8]
  0002c	11a03007	 movne       r3, r7
  00030	11a02006	 movne       r2, r6
  00034	11a01009	 movne       r1, r9
  00038	e3a04000	 mov         r4, #0
  0003c	1b000000	 blne        NKDbgPrintfW

; 1159 : 
; 1160 :         // See MUSBMHDRC spec page 46
; 1161 :         // 1. Handle Reset interrupts (also does attach)
; 1162 :         if (intr_usb & INTRUSB_RESET)

  00040	e2195004	 ands        r5, r9, #4
  00044	0a000003	 beq         |$LN12@InterruptT|

; 1163 :         {
; 1164 :             Device_ResetIRQ(pPdd);

  00048	e1a00008	 mov         r0, r8
  0004c	eb000000	 bl          Device_ResetIRQ

; 1165 :             intr_usb &= INTRUSB_RESET;

  00050	e1a09005	 mov         r9, r5

; 1166 :             fInterrupt = TRUE;

  00054	e3a04001	 mov         r4, #1
  00058		 |$LN12@InterruptT|

; 1167 :         }
; 1168 :         
; 1169 :         // 2. Handle Endpoint 0 interrupt
; 1170 :         if (intr_tx & INTR_EP(0))

  00058	e3160001	 tst         r6, #1
  0005c	0a000003	 beq         |$LN11@InterruptT|

; 1171 :         {
; 1172 :             Device_ProcessEP0(pPdd);

  00060	e1a00008	 mov         r0, r8
  00064	eb000000	 bl          Device_ProcessEP0

; 1173 :             intr_tx &= ~INTR_EP(0);

  00068	e3c66001	 bic         r6, r6, #1

; 1174 :             fInterrupt = TRUE;

  0006c	e3a04001	 mov         r4, #1
  00070		 |$LN11@InterruptT|

; 1175 :         }
; 1176 :         
; 1177 :         // 3. Handle RX Endpoint interrupt
; 1178 :         if (intr_rx)

  00070	e3570000	 cmp         r7, #0
  00074	0a00000d	 beq         |$LN10@InterruptT|

; 1179 :         {
; 1180 :             i = 1;

  00078	e3a04001	 mov         r4, #1
  0007c	e3a03001	 mov         r3, #1
  00080		 |$LL9@InterruptT|

; 1181 :             while (i <= 15)
; 1182 :             {
; 1183 :                 if (intr_rx & INTR_EP(i))

  00080	e1a05413	 mov         r5, r3, lsl r4
  00084	e1150007	 tst         r5, r7
  00088	0a000004	 beq         |$LN7@InterruptT|

; 1184 :                 {
; 1185 :                     Device_ProcessEPx_RX(pPdd, i);

  0008c	e1a01004	 mov         r1, r4
  00090	e1a00008	 mov         r0, r8
  00094	eb000000	 bl          Device_ProcessEPx_RX

; 1186 :                     intr_rx &= ~INTR_EP(i);

  00098	e1c77005	 bic         r7, r7, r5
  0009c	e3a03001	 mov         r3, #1
  000a0		 |$LN7@InterruptT|

; 1187 :                 }
; 1188 :                 i++;

  000a0	e2844001	 add         r4, r4, #1
  000a4	e354000f	 cmp         r4, #0xF
  000a8	dafffff4	 ble         |$LL9@InterruptT|

; 1189 :             }
; 1190 :             fInterrupt = TRUE;

  000ac	e3a04001	 mov         r4, #1
  000b0		 |$LN10@InterruptT|

; 1191 :         }
; 1192 :         
; 1193 :         // 4. Handle TX Endpoint interrupt
; 1194 :         if (intr_tx)

  000b0	e3560000	 cmp         r6, #0
  000b4	0a00000d	 beq         |$LN6@InterruptT|

; 1195 :         {
; 1196 :             i = 1;

  000b8	e3a04001	 mov         r4, #1
  000bc	e3a03001	 mov         r3, #1
  000c0		 |$LL5@InterruptT|

; 1197 :             while (i <= 15)
; 1198 :             {
; 1199 :                 if (intr_tx & INTR_EP(i))

  000c0	e1a05413	 mov         r5, r3, lsl r4
  000c4	e1150006	 tst         r5, r6
  000c8	0a000004	 beq         |$LN3@InterruptT|

; 1200 :                 {
; 1201 :                     Device_ProcessEPx_TX(pPdd, i);

  000cc	e1a01004	 mov         r1, r4
  000d0	e1a00008	 mov         r0, r8
  000d4	eb000000	 bl          Device_ProcessEPx_TX

; 1202 :                     intr_tx &= ~INTR_EP(i);

  000d8	e1c66005	 bic         r6, r6, r5
  000dc	e3a03001	 mov         r3, #1
  000e0		 |$LN3@InterruptT|

; 1203 :                 }
; 1204 :                 i++;

  000e0	e2844001	 add         r4, r4, #1
  000e4	e354000f	 cmp         r4, #0xF
  000e8	dafffff4	 ble         |$LL5@InterruptT|

; 1205 :             }
; 1206 :             fInterrupt = TRUE;

  000ec	e3a04001	 mov         r4, #1
  000f0		 |$LN6@InterruptT|

; 1207 :         }
; 1208 :         
; 1209 :         // 5. Handle Disconnect
; 1210 :         if (intr_usb & INTRUSB_DISCONN)

  000f0	e3190020	 tst         r9, #0x20
  000f4	0a000002	 beq         |$LN2@InterruptT|

; 1211 :         {
; 1212 :             Device_Disconnect(pPdd);

  000f8	e1a00008	 mov         r0, r8
  000fc	eb000000	 bl          Device_Disconnect

; 1213 :             intr_usb &= INTRUSB_DISCONN;
; 1214 :             fInterrupt = TRUE;

  00100	e3a04001	 mov         r4, #1
  00104		 |$LN2@InterruptT|

; 1215 :         }
; 1216 :         
; 1217 :         if( !fInterrupt )

  00104	e3540000	 cmp         r4, #0
  00108	1affffc0	 bne         |$LL14@InterruptT|

; 1218 :         {
; 1219 :             break;
; 1220 :         }
; 1221 :     }
; 1222 :    return ERROR_SUCCESS;

  0010c	e3a00000	 mov         r0, #0

; 1223 : }

  00110	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00114	e12fff1e	 bx          lr
  00118		 |$LN29@InterruptT|
  00118		 |$LN30@InterruptT|
  00118	00000000	 DCD         |??_C@_1LE@ICJADCP@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA?$CB?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?3?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr@|
  0011c		 |$LN31@InterruptT|
  0011c	00000000	 DCD         |dpCurSettings|
  00120		 |$M47029|

			 ENDP  ; |InterruptThread|

	EXPORT	|UfnPdd_IssueTransfer|
	EXPORT	|??_C@_1DA@NCOAFPN@?$AA?9?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GC@NGNENNDF@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAp?$AAT?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@IAIKGPDF@?$AA?$CL?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T47058| DCD	|$LN20@UfnPdd_Iss|
	DCD	0x40004001

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@NCOAFPN@?$AA?9?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "U", 0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "I", 0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@NGNENNDF@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAp?$AAT?$AAr@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, ":", 0x0, " ", 0x0, " ", 0x0, "e", 0x0, "r"
	DCB	0x0, "r", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "p", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "N"
	DCB	0x0, "U", 0x0, "L", 0x0, "L", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@IAIKGPDF@?$AA?$CL?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "U", 0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "I", 0x0, "s", 0x0, "s", 0x0, "u", 0x0, "e"
	DCB	0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |UfnPdd_IssueTransfer| PROC

; 1249 : {

  00000		 |$LN20@UfnPdd_Iss|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004		 |$M47055|
  00004	e1a04002	 mov         r4, r2
  00008	e1a07001	 mov         r7, r1
  0000c	e1a08000	 mov         r8, r0

; 1250 :     DWORD rc = ERROR_INVALID_PARAMETER;
; 1251 :     USBFN_PDD *pPdd = pPddContext;
; 1252 :     PCSP_MUSB_CSR_REGS pCsrRegs = pPdd->pUsbCsrRegs;
; 1253 :     
; 1254 :     
; 1255 :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"+UfnPdd_IssueTransfer\r\n"));

  00010	e59f60e4	 ldr         r6, [pc, #0xE4]
  00014	e598900c	 ldr         r9, [r8, #0xC]
  00018	e3a05057	 mov         r5, #0x57
  0001c	e5963440	 ldr         r3, [r6, #0x440]
  00020	e3130a02	 tst         r3, #2, 20
  00024	0a000004	 beq         |$LN8@UfnPdd_Iss|
  00028	e3130004	 tst         r3, #4
  0002c	0a000002	 beq         |$LN8@UfnPdd_Iss|
  00030	e59f00c0	 ldr         r0, [pc, #0xC0]
  00034	eb000000	 bl          NKDbgPrintfW
  00038	e5963440	 ldr         r3, [r6, #0x440]
  0003c		 |$LN8@UfnPdd_Iss|

; 1256 :     
; 1257 :     if (pTransfer == NULL) 

  0003c	e3540000	 cmp         r4, #0
  00040	1a000004	 bne         |$LN5@UfnPdd_Iss|

; 1258 :     {
; 1259 :         OALMSG(OAL_ETHER, (L"UfnPdd_IssueTransfer:  error pTransfer is NULL\r\n"));

  00044	e3130a02	 tst         r3, #2, 20
  00048	0a000021	 beq         |$ErrorReturn$45827|
  0004c	e59f00a0	 ldr         r0, [pc, #0xA0]
  00050	eb000000	 bl          NKDbgPrintfW

; 1260 :         goto ErrorReturn;

  00054	ea00001d	 b           |$LN16@UfnPdd_Iss|
  00058		 |$LN5@UfnPdd_Iss|

; 1261 :     }    
; 1262 :     
; 1263 :     // Save transfer for interrupt thread
; 1264 : //    ASSERT(pPdd->ep[endpoint].pTransfer == NULL);
; 1265 :     pPdd->ep[endpoint].pTransfer = pTransfer;

  00058	e0873107	 add         r3, r7, r7, lsl #2
  0005c	e0882103	 add         r2, r8, r3, lsl #2
  00060	e5824038	 str         r4, [r2, #0x38]

; 1266 :     
; 1267 :     // If transfer buffer is NULL length must be zero
; 1268 :     if (pTransfer->pvBuffer == NULL)

  00064	e5943004	 ldr         r3, [r4, #4]
  00068	e3a0e000	 mov         lr, #0
  0006c	e3530000	 cmp         r3, #0

; 1269 :         pTransfer->cbBuffer = 0;

  00070	0584e00c	 streq       lr, [r4, #0xC]

; 1270 :     
; 1271 : //    OALMSG(OAL_ETHER&&OAL_FUNC, (TEXT("IssueTransfer: ep(%d), length(%d), (%s) max packet(%d)\r\n"), 
; 1272 : //OALMSG(1, (TEXT("IssueTransfer: ep(%d), length(%d), (%s) \r\n"), 
; 1273 : //        endpoint, pTransfer->cbBuffer, (TRANSFER_IS_IN(pTransfer)? TEXT("IN"): TEXT("OUT"))));
; 1274 : //    DEBUGCHK(pTransfer->dwUsbError == UFN_NOT_COMPLETE_ERROR);
; 1275 :     
; 1276 :     if ((endpoint == 0) &&(pPdd->ep0State == EP0_ST_SETUP_PROCESSED))

  00074	e3570000	 cmp         r7, #0
  00078	05983178	 ldreq       r3, [r8, #0x178]
  0007c	03530001	 cmpeq       r3, #1

; 1277 :     {
; 1278 :         SETREG16(&pCsrRegs->ep[endpoint].CSR.CSR0, CSR0_P_SERVICEDRXPKTRDY);

  00080	01d930b2	 ldreqh      r3, [r9, #2]
  00084	03833040	 orreq       r3, r3, #0x40
  00088	01c930b2	 streqh      r3, [r9, #2]

; 1279 :     }
; 1280 :     
; 1281 :     // Depending on direction
; 1282 :     if (TRANSFER_IS_IN(pTransfer))

  0008c	e5943000	 ldr         r3, [r4]
  00090	e3130080	 tst         r3, #0x80
  00094	0a000008	 beq         |$LN2@UfnPdd_Iss|

; 1283 :     {
; 1284 :         pPdd->ep[endpoint].zeroLength =(pTransfer->cbBuffer == 0);

  00098	e594300c	 ldr         r3, [r4, #0xC]

; 1285 :         rc = ContinueTxTransfer(pPdd, endpoint);

  0009c	e1a01007	 mov         r1, r7
  000a0	e1a00008	 mov         r0, r8
  000a4	e3530000	 cmp         r3, #0
  000a8	03a03001	 moveq       r3, #1
  000ac	13a03000	 movne       r3, #0
  000b0	e5823034	 str         r3, [r2, #0x34]
  000b4	eb000000	 bl          ContinueTxTransfer

; 1286 :     }
; 1287 :     else

  000b8	ea000003	 b           |$LN17@UfnPdd_Iss|
  000bc		 |$LN2@UfnPdd_Iss|

; 1288 :     {
; 1289 :         pPdd->ep[endpoint].zeroLength = FALSE;
; 1290 :         rc = StartRxTransfer(pPdd, endpoint);

  000bc	e1a01007	 mov         r1, r7
  000c0	e1a00008	 mov         r0, r8
  000c4	e582e034	 str         lr, [r2, #0x34]
  000c8	eb000000	 bl          StartRxTransfer
  000cc		 |$LN17@UfnPdd_Iss|
  000cc	e1a05000	 mov         r5, r0
  000d0		 |$LN16@UfnPdd_Iss|
  000d0	e5963440	 ldr         r3, [r6, #0x440]
  000d4		 |$ErrorReturn$45827|

; 1291 :     }
; 1292 :     
; 1293 : ErrorReturn:
; 1294 :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"-UfnPdd_IssueTransfer\r\n"));

  000d4	e3130a02	 tst         r3, #2, 20
  000d8	13130004	 tstne       r3, #4
  000dc	159f000c	 ldrne       r0, [pc, #0xC]
  000e0	1b000000	 blne        NKDbgPrintfW

; 1295 :     return rc;
; 1296 :     
; 1297 :     //    return ERROR_SUCCESS;
; 1298 : }

  000e4	e1a00005	 mov         r0, r5
  000e8	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  000ec	e12fff1e	 bx          lr
  000f0		 |$LN21@UfnPdd_Iss|
  000f0		 |$LN22@UfnPdd_Iss|
  000f0	00000000	 DCD         |??_C@_1DA@NCOAFPN@?$AA?9?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  000f4		 |$LN23@UfnPdd_Iss|
  000f4	00000000	 DCD         |??_C@_1GC@NGNENNDF@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAp?$AAT?$AAr@|
  000f8		 |$LN24@UfnPdd_Iss|
  000f8	00000000	 DCD         |??_C@_1DA@IAIKGPDF@?$AA?$CL?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAs?$AAu?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  000fc		 |$LN25@UfnPdd_Iss|
  000fc	00000000	 DCD         |dpCurSettings|
  00100		 |$M47056|

			 ENDP  ; |UfnPdd_IssueTransfer|

	EXPORT	|UfnPdd_AbortTransfer|
	EXPORT	|??_C@_1EC@JLHOICLC@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAA?$AAb?$AAo?$AAr?$AAt?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@IJNOMNLM@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAA?$AAb?$AAo?$AAr?$AAt?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAe?$AAp?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T47080| DCD	|$LN14@UfnPdd_Abo|
	DCD	0x40003601

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@JLHOICLC@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAA?$AAb?$AAo?$AAr?$AAt?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "A", 0x0, "b", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "E", 0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@IJNOMNLM@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAA?$AAb?$AAo?$AAr?$AAt?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAe?$AAp?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "A", 0x0, "b", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "e", 0x0, "p", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |UfnPdd_AbortTransfer| PROC

; 1325 : {

  00000		 |$LN14@UfnPdd_Abo|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M47077|
  00004	e1a07002	 mov         r7, r2
  00008	e1a04001	 mov         r4, r1
  0000c	e1a06000	 mov         r6, r0

; 1326 :     USBFN_PDD *pPdd = pPddContext;
; 1327 :     PCSP_MUSB_CSR_REGS pCsrRegs = pPdd->pUsbCsrRegs;
; 1328 :     
; 1329 :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"UfnPdd_AbortTransfer ep %d\r\n", endpoint));

  00010	e59f80bc	 ldr         r8, [pc, #0xBC]
  00014	e596500c	 ldr         r5, [r6, #0xC]
  00018	e5983440	 ldr         r3, [r8, #0x440]
  0001c	e3130a02	 tst         r3, #2, 20
  00020	13130004	 tstne       r3, #4
  00024	159f00a4	 ldrne       r0, [pc, #0xA4]
  00028	1b000000	 blne        NKDbgPrintfW

; 1330 :     
; 1331 :     if (endpoint == 0)

  0002c	e3540000	 cmp         r4, #0

; 1332 :     {
; 1333 :         SETREG16(&pCsrRegs->ep[endpoint].CSR.CSR0, CSR0_P_FLUSHFIFO);

  00030	01d530b2	 ldreqh      r3, [r5, #2]
  00034	03833c01	 orreq       r3, r3, #1, 24
  00038	01c530b2	 streqh      r3, [r5, #2]
  0003c	0a00000a	 beq         |$LN2@UfnPdd_Abo|

; 1334 :     }
; 1335 :     else
; 1336 :     {
; 1337 :         USBFN_EP *pEP = &pPdd->ep[endpoint];
; 1338 :         
; 1339 :         if (pEP->dirRx)

  00040	e0843104	 add         r3, r4, r4, lsl #2
  00044	e0863103	 add         r3, r6, r3, lsl #2
  00048	e5933030	 ldr         r3, [r3, #0x30]

; 1340 :             SETREG16(&pCsrRegs->ep[endpoint].RxCSR, RXCSR_P_FLUSHFIFO);        

  0004c	e0852204	 add         r2, r5, r4, lsl #4
  00050	e3530000	 cmp         r3, #0
  00054	11d230b6	 ldrneh      r3, [r2, #6]
  00058	13833010	 orrne       r3, r3, #0x10
  0005c	11c230b6	 strneh      r3, [r2, #6]

; 1341 :         else
; 1342 :             SETREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR, TXCSR_P_FLUSHFIFO);        

  00060	01d230b2	 ldreqh      r3, [r2, #2]
  00064	03833008	 orreq       r3, r3, #8
  00068	01c230b2	 streqh      r3, [r2, #2]
  0006c		 |$LN2@UfnPdd_Abo|

; 1343 :     }
; 1344 :      
; 1345 :     // Finish transfer
; 1346 :     pPdd->ep[endpoint].pTransfer = NULL;

  0006c	e0843104	 add         r3, r4, r4, lsl #2
  00070	e0863103	 add         r3, r6, r3, lsl #2
  00074	e3a02000	 mov         r2, #0
  00078	e5832038	 str         r2, [r3, #0x38]

; 1347 :     if (pTransfer != NULL)

  0007c	e3570000	 cmp         r7, #0
  00080	0a00000e	 beq         |$LN1@UfnPdd_Abo|
  00084	e3a03c01	 mov         r3, #1, 24

; 1348 :     {
; 1349 :         pTransfer->dwUsbError = UFN_CANCELED_ERROR;

  00088	e3833001	 orr         r3, r3, #1
  0008c	e5873014	 str         r3, [r7, #0x14]

; 1350 :         OALMSG(OAL_ETHER&&OAL_FUNC, (TEXT("UfnPdd_AbortTransfer for EP %d\r\n"), endpoint));

  00090	e5983440	 ldr         r3, [r8, #0x440]
  00094	e3130a02	 tst         r3, #2, 20
  00098	13130004	 tstne       r3, #4
  0009c	159f0028	 ldrne       r0, [pc, #0x28]
  000a0	11a01004	 movne       r1, r4
  000a4	1b000000	 blne        NKDbgPrintfW

; 1351 :         pPdd->pfnNotify(
; 1352 :            pPdd->pMddContext, UFN_MSG_TRANSFER_COMPLETE, (DWORD)pTransfer
; 1353 :            );

  000a8	e5960000	 ldr         r0, [r6]
  000ac	e5963004	 ldr         r3, [r6, #4]
  000b0	e1a02007	 mov         r2, r7
  000b4	e3a01064	 mov         r1, #0x64
  000b8	e1a0e00f	 mov         lr, pc
  000bc	e12fff13	 bx          r3
  000c0		 |$LN1@UfnPdd_Abo|

; 1354 :     }
; 1355 :     
; 1356 :     
; 1357 :     // Done
; 1358 :     return ERROR_SUCCESS;

  000c0	e3a00000	 mov         r0, #0

; 1359 : }

  000c4	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  000c8	e12fff1e	 bx          lr
  000cc		 |$LN15@UfnPdd_Abo|
  000cc		 |$LN16@UfnPdd_Abo|
  000cc	00000000	 DCD         |??_C@_1EC@JLHOICLC@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAA?$AAb?$AAo?$AAr?$AAt?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAE?$AAP?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@|
  000d0		 |$LN17@UfnPdd_Abo|
  000d0	00000000	 DCD         |??_C@_1DK@IJNOMNLM@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAA?$AAb?$AAo?$AAr?$AAt?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAe?$AAp?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  000d4		 |$LN18@UfnPdd_Abo|
  000d4	00000000	 DCD         |dpCurSettings|
  000d8		 |$M47078|

			 ENDP  ; |UfnPdd_AbortTransfer|

	EXPORT	|UfnPdd_StallEndpoint|
	EXPORT	|??_C@_1CO@FFFEIOGH@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAl?$AAl?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T47099| DCD	|$LN11@UfnPdd_Sta|
	DCD	0x40001e01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@FFFEIOGH@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAl?$AAl?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, "E"
	DCB	0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |UfnPdd_StallEndpoint| PROC

; 1382 : {

  00000		 |$LN11@UfnPdd_Sta|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M47096|
  00004	e1a05001	 mov         r5, r1

; 1383 :     USBFN_PDD *pPdd = pPddContext;
; 1384 :     USBFN_EP *pEP = &pPdd->ep[endpoint];
; 1385 :     PCSP_MUSB_CSR_REGS pCsrRegs = pPdd->pUsbCsrRegs;
; 1386 :     
; 1387 :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"UfnPdd_StallEndpoint\r\n"));

  00008	e59f2064	 ldr         r2, [pc, #0x64]
  0000c	e0853105	 add         r3, r5, r5, lsl #2
  00010	e0806103	 add         r6, r0, r3, lsl #2
  00014	e5923440	 ldr         r3, [r2, #0x440]
  00018	e590400c	 ldr         r4, [r0, #0xC]
  0001c	e3130a02	 tst         r3, #2, 20
  00020	13130004	 tstne       r3, #4
  00024	159f0044	 ldrne       r0, [pc, #0x44]
  00028	1b000000	 blne        NKDbgPrintfW

; 1388 :     
; 1389 :     if (endpoint == 0)

  0002c	e3550000	 cmp         r5, #0

; 1390 :     {
; 1391 :         // Stall next EP0 transaction
; 1392 :         SETREG16(&pCsrRegs->ep[endpoint].CSR.CSR0, CSR0_P_SENDSTALL);        

  00030	01d430b2	 ldreqh      r3, [r4, #2]
  00034	03833020	 orreq       r3, r3, #0x20
  00038	01c430b2	 streqh      r3, [r4, #2]
  0003c	0a000008	 beq         |$LN1@UfnPdd_Sta|

; 1393 :     }
; 1394 :     else
; 1395 :     {
; 1396 :         
; 1397 :         // stall end point
; 1398 :         if (pEP->dirRx)

  00040	e5963030	 ldr         r3, [r6, #0x30]

; 1399 :             SETREG16(&pCsrRegs->ep[endpoint].RxCSR, RXCSR_P_SENDSTALL);        

  00044	e0842205	 add         r2, r4, r5, lsl #4
  00048	e3530000	 cmp         r3, #0
  0004c	11d230b6	 ldrneh      r3, [r2, #6]
  00050	13833020	 orrne       r3, r3, #0x20
  00054	11c230b6	 strneh      r3, [r2, #6]

; 1400 :         else
; 1401 :             SETREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR, TXCSR_P_SENDSTALL);        

  00058	01d230b2	 ldreqh      r3, [r2, #2]
  0005c	03833010	 orreq       r3, r3, #0x10
  00060	01c230b2	 streqh      r3, [r2, #2]
  00064		 |$LN1@UfnPdd_Sta|

; 1402 :         
; 1403 :     }
; 1404 :     
; 1405 :     // Done
; 1406 :     return ERROR_SUCCESS;

  00064	e3a00000	 mov         r0, #0

; 1407 : }

  00068	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0006c	e12fff1e	 bx          lr
  00070		 |$LN12@UfnPdd_Sta|
  00070		 |$LN13@UfnPdd_Sta|
  00070	00000000	 DCD         |??_C@_1CO@FFFEIOGH@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAl?$AAl?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  00074		 |$LN14@UfnPdd_Sta|
  00074	00000000	 DCD         |dpCurSettings|
  00078		 |$M47097|

			 ENDP  ; |UfnPdd_StallEndpoint|

	EXPORT	|UfnPdd_ClearEndpointStall|
	EXPORT	|??_C@_1EM@DEDHGOEH@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAl?$AAe?$AAa?$AAr?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAS?$AAt?$AAa?$AAl?$AAl?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAE?$AAP@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T47117| DCD	|$LN11@UfnPdd_Cle|
	DCD	0x40002301

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@DEDHGOEH@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAl?$AAe?$AAa?$AAr?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAS?$AAt?$AAa?$AAl?$AAl?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAE?$AAP@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "C", 0x0, "l", 0x0, "e", 0x0, "a", 0x0, "r", 0x0, "E"
	DCB	0x0, "n", 0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n"
	DCB	0x0, "t", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "l", 0x0, "l"
	DCB	0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "E"
	DCB	0x0, "P", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |UfnPdd_ClearEndpointStall| PROC

; 1431 : {

  00000		 |$LN11@UfnPdd_Cle|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M47114|
  00004	e1a04001	 mov         r4, r1

; 1432 :     USBFN_PDD *pPdd = pPddContext;
; 1433 :     USBFN_EP *pEP = &pPdd->ep[endpoint];
; 1434 :     PCSP_MUSB_CSR_REGS pCsrRegs = pPdd->pUsbCsrRegs;
; 1435 :     
; 1436 :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"UfnPdd_ClearEndpointStall for EP %d\r\n", endpoint));

  00008	e59f2078	 ldr         r2, [pc, #0x78]
  0000c	e0843104	 add         r3, r4, r4, lsl #2
  00010	e0806103	 add         r6, r0, r3, lsl #2
  00014	e5923440	 ldr         r3, [r2, #0x440]
  00018	e590500c	 ldr         r5, [r0, #0xC]
  0001c	e3130a02	 tst         r3, #2, 20
  00020	13130004	 tstne       r3, #4
  00024	159f0058	 ldrne       r0, [pc, #0x58]
  00028	1b000000	 blne        NKDbgPrintfW

; 1437 :     
; 1438 :     if (endpoint == 0)

  0002c	e3540000	 cmp         r4, #0

; 1439 :     {
; 1440 :         CLRREG16(&pCsrRegs->ep[endpoint].CSR.CSR0, CSR0_P_SENTSTALL | CSR0_P_SENDSTALL);        

  00030	01d520b2	 ldreqh      r2, [r5, #2]
  00034	03a03cff	 moveq       r3, #0xFF, 24
  00038	038330db	 orreq       r3, r3, #0xDB
  0003c	00023003	 andeq       r3, r2, r3
  00040	01c530b2	 streqh      r3, [r5, #2]
  00044	0a00000b	 beq         |$LN1@UfnPdd_Cle|

; 1441 :     }
; 1442 :     else
; 1443 :     {
; 1444 :         
; 1445 :         // stall end point
; 1446 :         if (pEP->dirRx)

  00048	e5963030	 ldr         r3, [r6, #0x30]

; 1447 :         {
; 1448 :             CLRREG16(&pCsrRegs->ep[endpoint].RxCSR, RXCSR_P_SENTSTALL | RXCSR_P_SENDSTALL);        

  0004c	e0851204	 add         r1, r5, r4, lsl #4
  00050	e3530000	 cmp         r3, #0
  00054	11d120b6	 ldrneh      r2, [r1, #6]
  00058	e3a03cff	 mov         r3, #0xFF, 24
  0005c	1383309f	 orrne       r3, r3, #0x9F
  00060	10023003	 andne       r3, r2, r3
  00064	11c130b6	 strneh      r3, [r1, #6]

; 1449 :         }
; 1450 :         else
; 1451 :         {
; 1452 :             CLRREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR, TXCSR_P_SENTSTALL | TXCSR_P_SENDSTALL);        

  00068	01d120b2	 ldreqh      r2, [r1, #2]
  0006c	038330cf	 orreq       r3, r3, #0xCF
  00070	00023003	 andeq       r3, r2, r3
  00074	01c130b2	 streqh      r3, [r1, #2]
  00078		 |$LN1@UfnPdd_Cle|

; 1453 :         }
; 1454 :         
; 1455 :     }
; 1456 :     
; 1457 :     return ERROR_SUCCESS;

  00078	e3a00000	 mov         r0, #0

; 1458 : }

  0007c	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00080	e12fff1e	 bx          lr
  00084		 |$LN12@UfnPdd_Cle|
  00084		 |$LN13@UfnPdd_Cle|
  00084	00000000	 DCD         |??_C@_1EM@DEDHGOEH@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAC?$AAl?$AAe?$AAa?$AAr?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAS?$AAt?$AAa?$AAl?$AAl?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAE?$AAP@|
  00088		 |$LN14@UfnPdd_Cle|
  00088	00000000	 DCD         |dpCurSettings|
  0008c		 |$M47115|

			 ENDP  ; |UfnPdd_ClearEndpointStall|

	EXPORT	|UfnPdd_IsEndpointHalted|
	EXPORT	|??_C@_1DE@ECDCBICE@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAH?$AAa?$AAl?$AAt?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T47138| DCD	|$LN13@UfnPdd_IsE|
	DCD	0x40001d01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@ECDCBICE@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAH?$AAa?$AAl?$AAt?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "s", 0x0, "E", 0x0, "n", 0x0, "d", 0x0, "p"
	DCB	0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "H", 0x0, "a"
	DCB	0x0, "l", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |UfnPdd_IsEndpointHalted| PROC

; 1480 : {

  00000		 |$LN13@UfnPdd_IsE|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M47135|
  00004	e1a05002	 mov         r5, r2
  00008	e1a04001	 mov         r4, r1

; 1481 :    
; 1482 :     USBFN_PDD *pPdd = pPddContext;
; 1483 :     USBFN_EP *pEP = &pPdd->ep[endpoint];
; 1484 :     PCSP_MUSB_CSR_REGS pCsrRegs = pPdd->pUsbCsrRegs;
; 1485 :     
; 1486 :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"UfnPdd_IsEndpointHalted\r\n"));

  0000c	e59fe05c	 ldr         lr, [pc, #0x5C]
  00010	e0843104	 add         r3, r4, r4, lsl #2
  00014	e0807103	 add         r7, r0, r3, lsl #2
  00018	e59e3440	 ldr         r3, [lr, #0x440]
  0001c	e590600c	 ldr         r6, [r0, #0xC]
  00020	e3130a02	 tst         r3, #2, 20
  00024	13130004	 tstne       r3, #4
  00028	159f003c	 ldrne       r0, [pc, #0x3C]
  0002c	1b000000	 blne        NKDbgPrintfW

; 1487 :         
; 1488 :     if (endpoint == 0)

  00030	e3540000	 cmp         r4, #0

; 1489 :     {
; 1490 :         // CSR0_P_SENDSTALL is documented as selfclearing, this might not be sufficient
; 1491 :         *pHalted = INREG16(&pCsrRegs->ep[endpoint].CSR.CSR0) & CSR0_P_SENDSTALL;

  00034	01d630b2	 ldreqh      r3, [r6, #2]
  00038	02033020	 andeq       r3, r3, #0x20
  0003c	0a000006	 beq         |$LN9@UfnPdd_IsE|

; 1492 :     }
; 1493 :     else
; 1494 :     {
; 1495 :         // stall end point
; 1496 :         if (pEP->dirRx)

  00040	e5973030	 ldr         r3, [r7, #0x30]
  00044	e3530000	 cmp         r3, #0

; 1497 :         {
; 1498 :             *pHalted = INREG16(&pCsrRegs->ep[endpoint].RxCSR) & RXCSR_P_SENDSTALL;

  00048	e0863204	 add         r3, r6, r4, lsl #4
  0004c	11d330b6	 ldrneh      r3, [r3, #6]
  00050	12033020	 andne       r3, r3, #0x20

; 1499 :         }
; 1500 :         else
; 1501 :         {
; 1502 :             *pHalted = INREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR) & TXCSR_P_SENDSTALL;

  00054	01d330b2	 ldreqh      r3, [r3, #2]
  00058	02033010	 andeq       r3, r3, #0x10
  0005c		 |$LN9@UfnPdd_IsE|
  0005c	e5853000	 str         r3, [r5]

; 1503 :         }
; 1504 :     }
; 1505 :         
; 1506 :     // Done
; 1507 :     return ERROR_SUCCESS;

  00060	e3a00000	 mov         r0, #0

; 1508 : }

  00064	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00068	e12fff1e	 bx          lr
  0006c		 |$LN14@UfnPdd_IsE|
  0006c		 |$LN15@UfnPdd_IsE|
  0006c	00000000	 DCD         |??_C@_1DE@ECDCBICE@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAE?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AAH?$AAa?$AAl?$AAt?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00070		 |$LN16@UfnPdd_IsE|
  00070	00000000	 DCD         |dpCurSettings|
  00074		 |$M47136|

			 ENDP  ; |UfnPdd_IsEndpointHalted|

	EXPORT	|UfnPdd_SendControlStatusHandshake|
	EXPORT	|??_C@_1EK@FBCADDCM@?$AA?9?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IC@BLPLCJAE@?$AA?7?$AA?$CB?$AA?$CB?$AA?$CB?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@IJELKIMG@?$AA?7?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAO?$AAU?$AAT?$AA?5?$AA?$DN?$AA?$DO?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAE?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@CCEMDGJE@?$AA?7?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAE?$AAT?$AAU?$AAP?$AA_?$AAP?$AAR?$AAO?$AAC?$AAE?$AAS?$AAS?$AAE?$AAD?$AA?5?$AA?$DN?$AA?$DO?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@GPBDHODF@?$AA?$CL?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T47164| DCD	|$LN19@UfnPdd_Sen|
	DCD	0x40004101

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@FBCADDCM@?$AA?9?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa@| DCB "-"
	DCB	0x0, "U", 0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s"
	DCB	0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "s", 0x0, "h"
	DCB	0x0, "a", 0x0, "k", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IC@BLPLCJAE@?$AA?7?$AA?$CB?$AA?$CB?$AA?$CB?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn@| DCB 0x9
	DCB	0x0, "!", 0x0, "!", 0x0, "!", 0x0, " ", 0x0, "U", 0x0, "f"
	DCB	0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_", 0x0, "S"
	DCB	0x0, "e", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, "H", 0x0, "a"
	DCB	0x0, "n", 0x0, "d", 0x0, "s", 0x0, "h", 0x0, "a", 0x0, "k"
	DCB	0x0, "e", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "w", 0x0, "i", 0x0, "t"
	DCB	0x0, "h", 0x0, " ", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "p"
	DCB	0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@IJELKIMG@?$AA?7?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAO?$AAU?$AAT?$AA?5?$AA?$DN?$AA?$DO?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAE?$AAT@| DCB 0x9
	DCB	0x0, "E", 0x0, "P", 0x0, "0", 0x0, "_", 0x0, "S", 0x0, "T"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "O", 0x0, "U", 0x0, "T", 0x0, " "
	DCB	0x0, "=", 0x0, ">", 0x0, " ", 0x0, "E", 0x0, "P", 0x0, "0"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "_", 0x0, "S", 0x0, "E"
	DCB	0x0, "T", 0x0, "U", 0x0, "P", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@CCEMDGJE@?$AA?7?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAE?$AAT?$AAU?$AAP?$AA_?$AAP?$AAR?$AAO?$AAC?$AAE?$AAS?$AAS?$AAE?$AAD?$AA?5?$AA?$DN?$AA?$DO?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS@| DCB 0x9
	DCB	0x0, "E", 0x0, "P", 0x0, "0", 0x0, "_", 0x0, "S", 0x0, "T"
	DCB	0x0, "_", 0x0, "S", 0x0, "E", 0x0, "T", 0x0, "U", 0x0, "P"
	DCB	0x0, "_", 0x0, "P", 0x0, "R", 0x0, "O", 0x0, "C", 0x0, "E"
	DCB	0x0, "S", 0x0, "S", 0x0, "E", 0x0, "D", 0x0, " ", 0x0, "="
	DCB	0x0, ">", 0x0, " ", 0x0, "E", 0x0, "P", 0x0, "0", 0x0, "_"
	DCB	0x0, "S", 0x0, "T", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A"
	DCB	0x0, "T", 0x0, "U", 0x0, "S", 0x0, "_", 0x0, "I", 0x0, "N"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@GPBDHODF@?$AA?$CL?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa@| DCB "+"
	DCB	0x0, "U", 0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s"
	DCB	0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "s", 0x0, "h"
	DCB	0x0, "a", 0x0, "k", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |UfnPdd_SendControlStatusHandshake| PROC

; 1532 : {

  00000		 |$LN19@UfnPdd_Sen|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M47161|
  00004	e1a07001	 mov         r7, r1
  00008	e1a04000	 mov         r4, r0

; 1533 :     DWORD rc = ERROR_INVALID_PARAMETER;
; 1534 :     USBFN_PDD *pPdd = pPddContext;
; 1535 :     PCSP_MUSB_CSR_REGS pCsrRegs = pPdd->pUsbCsrRegs;
; 1536 :     
; 1537 :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"+UfnPdd_SendControlStatusHandshake\r\n"));

  0000c	e59f60ec	 ldr         r6, [pc, #0xEC]
  00010	e594800c	 ldr         r8, [r4, #0xC]
  00014	e3a05057	 mov         r5, #0x57
  00018	e5962440	 ldr         r2, [r6, #0x440]
  0001c	e3120a02	 tst         r2, #2, 20
  00020	0a000004	 beq         |$LN7@UfnPdd_Sen|
  00024	e3120004	 tst         r2, #4
  00028	0a000002	 beq         |$LN7@UfnPdd_Sen|
  0002c	e59f00c8	 ldr         r0, [pc, #0xC8]
  00030	eb000000	 bl          NKDbgPrintfW
  00034	e5962440	 ldr         r2, [r6, #0x440]
  00038		 |$LN7@UfnPdd_Sen|

; 1538 :     
; 1539 :     if (endpoint == 0)

  00038	e3570000	 cmp         r7, #0
  0003c	1a00001b	 bne         |$LN4@UfnPdd_Sen|

; 1540 :     {
; 1541 :         if (pPdd->ep0State == EP0_ST_SETUP_PROCESSED)

  00040	e5943178	 ldr         r3, [r4, #0x178]
  00044	e3530001	 cmp         r3, #1
  00048	1a00000c	 bne         |$LN3@UfnPdd_Sen|

; 1542 :         {
; 1543 :             OALMSG(OAL_ETHER&&OAL_FUNC, (TEXT("\tEP0_ST_SETUP_PROCESSED => EP0_ST_STATUS_IN\r\n")));

  0004c	e3120a02	 tst         r2, #2, 20
  00050	13120004	 tstne       r2, #4
  00054	159f009c	 ldrne       r0, [pc, #0x9C]
  00058	1b000000	 blne        NKDbgPrintfW

; 1544 :             SETREG16(&pCsrRegs->ep[endpoint].CSR.CSR0, CSR0_P_SERVICEDRXPKTRDY | CSR0_P_DATAEND);        

  0005c	e1d830b2	 ldrh        r3, [r8, #2]

; 1545 :             // Send zero byte to ack
; 1546 :             SETREG16(&pCsrRegs->ep[endpoint].CSR.CSR0, CSR0_P_TXPKTRDY);
; 1547 :             pPdd->ep0State = EP0_ST_STATUS_IN;

  00060	e3a02002	 mov         r2, #2
  00064	e3833048	 orr         r3, r3, #0x48
  00068	e1c830b2	 strh        r3, [r8, #2]
  0006c	e1d830b2	 ldrh        r3, [r8, #2]
  00070	e3833002	 orr         r3, r3, #2
  00074	e1c830b2	 strh        r3, [r8, #2]
  00078	e5842178	 str         r2, [r4, #0x178]
  0007c	e5962440	 ldr         r2, [r6, #0x440]
  00080		 |$LN3@UfnPdd_Sen|

; 1548 :         }
; 1549 :         
; 1550 :         if (pPdd->ep0State == EP0_ST_STATUS_OUT)

  00080	e5943178	 ldr         r3, [r4, #0x178]
  00084	e3530003	 cmp         r3, #3
  00088	1a000006	 bne         |$LN2@UfnPdd_Sen|

; 1551 :         {
; 1552 :             OALMSG(OAL_ETHER&&OAL_FUNC, (L"\tEP0_ST_STATUS_OUT => EP0_ST_SETUP\r\n"));

  0008c	e3120a02	 tst         r2, #2, 20
  00090	13120004	 tstne       r2, #4
  00094	159f0058	 ldrne       r0, [pc, #0x58]
  00098	1b000000	 blne        NKDbgPrintfW

; 1553 :             pPdd->ep0State = EP0_ST_SETUP;

  0009c	e3a03000	 mov         r3, #0
  000a0	e5843178	 str         r3, [r4, #0x178]
  000a4	e5962440	 ldr         r2, [r6, #0x440]
  000a8		 |$LN2@UfnPdd_Sen|

; 1554 :         }
; 1555 :         
; 1556 :         rc = ERROR_SUCCESS;

  000a8	e3a05000	 mov         r5, #0

; 1557 :     }
; 1558 :     else

  000ac	ea000007	 b           |$LN13@UfnPdd_Sen|
  000b0		 |$LN4@UfnPdd_Sen|

; 1559 :         OALMSG(OAL_ETHER&&OAL_FUNC, (L"\t!!! UfnPdd_SendControlStatusHandshake called with endpoint %d\r\n", endpoint));

  000b0	e3120a02	 tst         r2, #2, 20
  000b4	0a000005	 beq         |$LN13@UfnPdd_Sen|
  000b8	e3120004	 tst         r2, #4
  000bc	0a000003	 beq         |$LN13@UfnPdd_Sen|
  000c0	e59f0028	 ldr         r0, [pc, #0x28]
  000c4	e1a01007	 mov         r1, r7
  000c8	eb000000	 bl          NKDbgPrintfW
  000cc	e5962440	 ldr         r2, [r6, #0x440]
  000d0		 |$LN13@UfnPdd_Sen|

; 1560 :     
; 1561 :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"-UfnPdd_SendControlStatusHandshake\r\n"));

  000d0	e3120a02	 tst         r2, #2, 20
  000d4	13120004	 tstne       r2, #4
  000d8	159f000c	 ldrne       r0, [pc, #0xC]
  000dc	1b000000	 blne        NKDbgPrintfW

; 1562 :     
; 1563 :     return rc;
; 1564 : }

  000e0	e1a00005	 mov         r0, r5
  000e4	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  000e8	e12fff1e	 bx          lr
  000ec		 |$LN20@UfnPdd_Sen|
  000ec		 |$LN21@UfnPdd_Sen|
  000ec	00000000	 DCD         |??_C@_1EK@FBCADDCM@?$AA?9?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa@|
  000f0		 |$LN22@UfnPdd_Sen|
  000f0	00000000	 DCD         |??_C@_1IC@BLPLCJAE@?$AA?7?$AA?$CB?$AA?$CB?$AA?$CB?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn@|
  000f4		 |$LN23@UfnPdd_Sen|
  000f4	00000000	 DCD         |??_C@_1EK@IJELKIMG@?$AA?7?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAO?$AAU?$AAT?$AA?5?$AA?$DN?$AA?$DO?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAE?$AAT@|
  000f8		 |$LN24@UfnPdd_Sen|
  000f8	00000000	 DCD         |??_C@_1FM@CCEMDGJE@?$AA?7?$AAE?$AAP?$AA0?$AA_?$AAS?$AAT?$AA_?$AAS?$AAE?$AAT?$AAU?$AAP?$AA_?$AAP?$AAR?$AAO?$AAC?$AAE?$AAS?$AAS?$AAE?$AAD?$AA?5?$AA?$DN?$AA?$DO?$AA?5?$AAE?$AAP?$AA0?$AA_?$AAS@|
  000fc		 |$LN25@UfnPdd_Sen|
  000fc	00000000	 DCD         |??_C@_1EK@GPBDHODF@?$AA?$CL?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AAH?$AAa?$AAn?$AAd?$AAs?$AAh?$AAa@|
  00100		 |$LN26@UfnPdd_Sen|
  00100	00000000	 DCD         |dpCurSettings|
  00104		 |$M47162|

			 ENDP  ; |UfnPdd_SendControlStatusHandshake|

	EXPORT	|UfnPdd_InitiateRemoteWakeup|
	EXPORT	|??_C@_1EA@KNMJPPBI@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAt?$AAe?$AAR?$AAe?$AAm?$AAo?$AAt?$AAe?$AAW?$AAa?$AAk?$AAe?$AAu?$AAp?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T47182| DCD	|$LN7@UfnPdd_Ini|
	DCD	0x40000c01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@KNMJPPBI@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAt?$AAe?$AAR?$AAe?$AAm?$AAo?$AAt?$AAe?$AAW?$AAa?$AAk?$AAe?$AAu?$AAp?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "s", 0x0, "b", 0x0, "F", 0x0, "n", 0x0, "P", 0x0, "d"
	DCB	0x0, "d", 0x0, "_", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "R", 0x0, "e"
	DCB	0x0, "m", 0x0, "o", 0x0, "t", 0x0, "e", 0x0, "W", 0x0, "a"
	DCB	0x0, "k", 0x0, "e", 0x0, "u", 0x0, "p", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |UfnPdd_InitiateRemoteWakeup| PROC

; 1571 : {

  00000		 |$LN7@UfnPdd_Ini|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M47179|

; 1572 : 	UNREFERENCED_PARAMETER(pPddContext);
; 1573 : 
; 1574 :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"UsbFnPdd_InitiateRemoteWakeup\r\n"));

  00004	e59f3020	 ldr         r3, [pc, #0x20]
  00008	e5933440	 ldr         r3, [r3, #0x440]
  0000c	e3130a02	 tst         r3, #2, 20
  00010	13130004	 tstne       r3, #4
  00014	159f000c	 ldrne       r0, [pc, #0xC]
  00018	1b000000	 blne        NKDbgPrintfW

; 1575 : 
; 1576 :     return ERROR_SUCCESS;

  0001c	e3a00000	 mov         r0, #0

; 1577 : }

  00020	e49de004	 ldr         lr, [sp], #4
  00024	e12fff1e	 bx          lr
  00028		 |$LN8@UfnPdd_Ini|
  00028		 |$LN9@UfnPdd_Ini|
  00028	00000000	 DCD         |??_C@_1EA@KNMJPPBI@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAt?$AAe?$AAR?$AAe?$AAm?$AAo?$AAt?$AAe?$AAW?$AAa?$AAk?$AAe?$AAu?$AAp?$AA?$AN?$AA?6?$AA?$AA@|
  0002c		 |$LN10@UfnPdd_Ini|
  0002c	00000000	 DCD         |dpCurSettings|
  00030		 |$M47180|

			 ENDP  ; |UfnPdd_InitiateRemoteWakeup|

	EXPORT	|UfnPdd_PowerDown|
	EXPORT	|??_C@_1FG@KMPMJHMD@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAd?$AAi?$AAs?$AAa?$AAb?$AAl@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T47194| DCD	|$LN8@UfnPdd_Pow|
	DCD	0x40000e01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@KMPMJHMD@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAd?$AAi?$AAs?$AAa?$AAb?$AAl@| DCB "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k"
	DCB	0x0, " ", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "d", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "c", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "k", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |UfnPdd_PowerDown| PROC

; 1584 : {

  00000		 |$LN8@UfnPdd_Pow|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M47191|

; 1585 : 	UNREFERENCED_PARAMETER(pPddContext);
; 1586 : 
; 1587 : 	if (!EnableUSBClocks(FALSE))

  00004	e3a00000	 mov         r0, #0
  00008	eb000000	 bl          EnableUSBClocks
  0000c	e3500000	 cmp         r0, #0
  00010	1a000004	 bne         |$LN4@UfnPdd_Pow|

; 1588 : 	{
; 1589 : 		OALMSG(OAL_ETHER, (TEXT("StartUSBClock : Failed to disable clocks\r\n")));

  00014	e59f3018	 ldr         r3, [pc, #0x18]
  00018	e5933440	 ldr         r3, [r3, #0x440]
  0001c	e3130a02	 tst         r3, #2, 20
  00020	159f0008	 ldrne       r0, [pc, #8]
  00024	1b000000	 blne        NKDbgPrintfW
  00028		 |$LN4@UfnPdd_Pow|

; 1590 : 	}
; 1591 : }

  00028	e49de004	 ldr         lr, [sp], #4
  0002c	e12fff1e	 bx          lr
  00030		 |$LN9@UfnPdd_Pow|
  00030		 |$LN10@UfnPdd_Pow|
  00030	00000000	 DCD         |??_C@_1FG@KMPMJHMD@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAd?$AAi?$AAs?$AAa?$AAb?$AAl@|
  00034		 |$LN11@UfnPdd_Pow|
  00034	00000000	 DCD         |dpCurSettings|
  00038		 |$M47192|

			 ENDP  ; |UfnPdd_PowerDown|

	EXPORT	|UfnPdd_PowerUp|

  00000			 AREA	 |.pdata|, PDATA
|$T47206| DCD	|$LN8@UfnPdd_Pow@2|
	DCD	0x40000e01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |UfnPdd_PowerUp| PROC

; 1598 : {

  00000		 |$LN8@UfnPdd_Pow@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M47203|

; 1599 : 	UNREFERENCED_PARAMETER(pPddContext);
; 1600 : 
; 1601 : 	if (!EnableUSBClocks(TRUE))

  00004	e3a00001	 mov         r0, #1
  00008	eb000000	 bl          EnableUSBClocks
  0000c	e3500000	 cmp         r0, #0
  00010	1a000004	 bne         |$LN4@UfnPdd_Pow@2|

; 1602 : 	{
; 1603 : 		OALMSG(OAL_ETHER, (TEXT("StartUSBClock : Failed to enable clocks\r\n")));

  00014	e59f3018	 ldr         r3, [pc, #0x18]
  00018	e5933440	 ldr         r3, [r3, #0x440]
  0001c	e3130a02	 tst         r3, #2, 20
  00020	159f0008	 ldrne       r0, [pc, #8]
  00024	1b000000	 blne        NKDbgPrintfW
  00028		 |$LN4@UfnPdd_Pow@2|

; 1604 : 	}
; 1605 : }

  00028	e49de004	 ldr         lr, [sp], #4
  0002c	e12fff1e	 bx          lr
  00030		 |$LN9@UfnPdd_Pow@2|
  00030		 |$LN10@UfnPdd_Pow@2|
  00030	00000000	 DCD         |??_C@_1FE@IACJAPMH@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAe?$AAn?$AAa?$AAb?$AAl?$AAe@|
  00034		 |$LN11@UfnPdd_Pow@2|
  00034	00000000	 DCD         |dpCurSettings|
  00038		 |$M47204|

			 ENDP  ; |UfnPdd_PowerUp|

	EXPORT	|UfnPdd_IOControl|

  00000			 AREA	 |.pdata|, PDATA
|$T47222| DCD	|$LN13@UfnPdd_IOC|
	DCD	0x40001300
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |UfnPdd_IOControl| PROC

; 1614 : ) {

  00000		 |$LN13@UfnPdd_IOC|
  00000		 |$M47219|
  00000	e3a03822	 mov         r3, #0x22, 16

; 1615 :     DWORD rc = ERROR_INVALID_PARAMETER;
; 1616 :     UFN_PDD_INFO *pInfo;
; 1617 : 
; 1618 : 	UNREFERENCED_PARAMETER(pPddContext);
; 1619 : 	UNREFERENCED_PARAMETER(pOutSize);
; 1620 : 	UNREFERENCED_PARAMETER(inSize);
; 1621 : 	UNREFERENCED_PARAMETER(pInBuffer);
; 1622 : 
; 1623 :     switch (code) {

  00004	e3833f65	 orr         r3, r3, #0x65, 30
  00008	e1520003	 cmp         r2, r3
  0000c	e3a00057	 mov         r0, #0x57
  00010	1a00000c	 bne         |$LN3@UfnPdd_IOC|

; 1624 :     case IOCTL_UFN_GET_PDD_INFO:
; 1625 :         if (source != BUS_IOCTL) break;

  00014	e3510000	 cmp         r1, #0
  00018	1a00000a	 bne         |$LN3@UfnPdd_IOC|

; 1626 :         if (pOutBuffer == NULL || outSize < sizeof(UFN_PDD_INFO)) break;

  0001c	e59d2004	 ldr         r2, [sp, #4]
  00020	e3520000	 cmp         r2, #0
  00024	0a000007	 beq         |$LN3@UfnPdd_IOC|
  00028	e59d3008	 ldr         r3, [sp, #8]
  0002c	e353000c	 cmp         r3, #0xC

; 1627 :         pInfo = (UFN_PDD_INFO*)pOutBuffer;
; 1628 :         pInfo->InterfaceType = Internal;
; 1629 :         pInfo->BusNumber = 0;
; 1630 :         pInfo->dwAlignment = sizeof(DWORD);

  00030	23a03004	 movcs       r3, #4
  00034	23a01000	 movcs       r1, #0
  00038	25823008	 strcs       r3, [r2, #8]
  0003c	25821000	 strcs       r1, [r2]
  00040	25821004	 strcs       r1, [r2, #4]

; 1631 :         rc = ERROR_SUCCESS;

  00044	23a00000	 movcs       r0, #0
  00048		 |$LN3@UfnPdd_IOC|

; 1632 :         break;
; 1633 :     case IOCTL_BUS_GET_POWER_STATE:
; 1634 :         break;
; 1635 : 
; 1636 :     case IOCTL_BUS_SET_POWER_STATE:
; 1637 :         break;
; 1638 :     }
; 1639 :     
; 1640 :     return rc;
; 1641 : }

  00048	e12fff1e	 bx          lr
  0004c		 |$M47220|

			 ENDP  ; |UfnPdd_IOControl|

	EXPORT	|UfnPdd_Deinit|

  00000			 AREA	 |.pdata|, PDATA
|$T47232| DCD	|$LN8@UfnPdd_Dei|
	DCD	0x40000c00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |UfnPdd_Deinit| PROC

; 1648 : {

  00000		 |$LN8@UfnPdd_Dei|
  00000		 |$M47229|

; 1649 :     USBFN_PDD *pPdd = pPddContext;
; 1650 : 
; 1651 :     // Unmap USB controller registers
; 1652 :     if (pPdd->pUsbGenRegs != NULL) {

  00000	e5903010	 ldr         r3, [r0, #0x10]
  00004	e3a02000	 mov         r2, #0
  00008	e3530000	 cmp         r3, #0

; 1653 :         pPdd->pUsbGenRegs = NULL;
; 1654 :     }
; 1655 :     
; 1656 :     if (pPdd->pUsbCsrRegs != NULL) {

  0000c	e590300c	 ldr         r3, [r0, #0xC]
  00010	15802010	 strne       r2, [r0, #0x10]
  00014	e3530000	 cmp         r3, #0

; 1657 :         pPdd->pUsbCsrRegs = NULL;
; 1658 :     }
; 1659 : 
; 1660 :     if (pPdd->pUsbOtgRegs != NULL) {

  00018	e5903008	 ldr         r3, [r0, #8]
  0001c	1580200c	 strne       r2, [r0, #0xC]
  00020	e3530000	 cmp         r3, #0

; 1661 :         pPdd->pUsbOtgRegs = NULL;

  00024	15802008	 strne       r2, [r0, #8]

; 1662 :     }
; 1663 : 
; 1664 :     // Done
; 1665 :     return ERROR_SUCCESS;

  00028	e3a00000	 mov         r0, #0

; 1666 : }

  0002c	e12fff1e	 bx          lr
  00030		 |$M47230|

			 ENDP  ; |UfnPdd_Deinit|

	EXPORT	|UfnPdd_DeregisterDevice|

  00000			 AREA	 |.pdata|, PDATA
|$T47241| DCD	|$LN5@UfnPdd_Der|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |UfnPdd_DeregisterDevice| PROC

; 1675 : {

  00000		 |$LN5@UfnPdd_Der|
  00000		 |$M47238|

; 1676 :     // Should shut down the endpoint...
; 1677 :     // This function is not currently called
; 1678 : 
; 1679 : 	UNREFERENCED_PARAMETER(pPddContext);
; 1680 : 
; 1681 :     return ERROR_SUCCESS;

  00000	e3a00000	 mov         r0, #0

; 1682 : }

  00004	e12fff1e	 bx          lr
  00008		 |$M47239|

			 ENDP  ; |UfnPdd_DeregisterDevice|

	EXPORT	|UfnPdd_Stop|
	EXPORT	|??_C@_1BM@ELBPNMDN@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAo?$AAp?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|DisconnectHardware|

  00000			 AREA	 |.pdata|, PDATA
|$T47253| DCD	|$LN8@UfnPdd_Sto|
	DCD	0x40001901

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@ELBPNMDN@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAo?$AAp?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "S", 0x0, "t", 0x0, "o", 0x0, "p", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |UfnPdd_Stop| PROC

; 1693 : {

  00000		 |$LN8@UfnPdd_Sto|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M47250|
  00004	e1a04000	 mov         r4, r0

; 1694 :     USBFN_PDD *pPdd = pPddContext;
; 1695 : 
; 1696 :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"UfnPdd_Stop\r\n"));

  00008	e59f3050	 ldr         r3, [pc, #0x50]
  0000c	e5933440	 ldr         r3, [r3, #0x440]
  00010	e3130a02	 tst         r3, #2, 20
  00014	13130004	 tstne       r3, #4
  00018	159f003c	 ldrne       r0, [pc, #0x3C]
  0001c	1b000000	 blne        NKDbgPrintfW

; 1697 : 
; 1698 :     // Disconnect hardware
; 1699 :     if ((INREG8(&pPdd->pUsbGenRegs->DevCtl) & DEVCTL_SESSION) == DEVCTL_SESSION)

  00020	e5942010	 ldr         r2, [r4, #0x10]
  00024	e5d23060	 ldrb        r3, [r2, #0x60]
  00028	e2033001	 and         r3, r3, #1
  0002c	e3530001	 cmp         r3, #1

; 1700 :         CLRREG8(&pPdd->pUsbGenRegs->DevCtl, DEVCTL_SESSION);

  00030	05d23060	 ldreqb      r3, [r2, #0x60]
  00034	020330fe	 andeq       r3, r3, #0xFE
  00038	05c23060	 streqb      r3, [r2, #0x60]

; 1701 :     CLRREG8(&pPdd->pUsbGenRegs->Power, POWER_SOFTCONN);        

  0003c	e5942010	 ldr         r2, [r4, #0x10]
  00040	e5d23001	 ldrb        r3, [r2, #1]
  00044	e20330bf	 and         r3, r3, #0xBF
  00048	e5c23001	 strb        r3, [r2, #1]

; 1702 :     DisconnectHardware();

  0004c	eb000000	 bl          DisconnectHardware

; 1703 : 
; 1704 :     // Done
; 1705 :     return ERROR_SUCCESS;

  00050	e3a00000	 mov         r0, #0

; 1706 : }

  00054	e8bd4010	 ldmia       sp!, {r4, lr}
  00058	e12fff1e	 bx          lr
  0005c		 |$LN9@UfnPdd_Sto|
  0005c		 |$LN10@UfnPdd_Sto|
  0005c	00000000	 DCD         |??_C@_1BM@ELBPNMDN@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAo?$AAp?$AA?$AN?$AA?6?$AA?$AA@|
  00060		 |$LN11@UfnPdd_Sto|
  00060	00000000	 DCD         |dpCurSettings|
  00064		 |$M47251|

			 ENDP  ; |UfnPdd_Stop|

	EXPORT	|UfnPdd_DeinitEndpoint|

  00000			 AREA	 |.pdata|, PDATA
|$T47265| DCD	|$LN5@UfnPdd_Dei@2|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |UfnPdd_DeinitEndpoint| PROC

; 1715 : {

  00000		 |$LN5@UfnPdd_Dei@2|
  00000		 |$M47262|

; 1716 : 	UNREFERENCED_PARAMETER(pPddContext);
; 1717 : 	UNREFERENCED_PARAMETER(endPoint);
; 1718 : 
; 1719 :     // This function is not currently called
; 1720 :     return ERROR_SUCCESS;

  00000	e3a00000	 mov         r0, #0

; 1721 : }

  00004	e12fff1e	 bx          lr
  00008		 |$M47263|

			 ENDP  ; |UfnPdd_DeinitEndpoint|

	EXPORT	|UfnPdd_InitEndpoint|

  00000			 AREA	 |.pdata|, PDATA
|$T47274| DCD	|$LN5@UfnPdd_Ini@2|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |UfnPdd_InitEndpoint| PROC

; 1763 : {

  00000		 |$LN5@UfnPdd_Ini@2|
  00000		 |$M47271|

; 1764 : 	UNREFERENCED_PARAMETER(pPddContext);
; 1765 : 	UNREFERENCED_PARAMETER(endpoint);
; 1766 : 	UNREFERENCED_PARAMETER(speed);
; 1767 : 	UNREFERENCED_PARAMETER(pEPDesc);
; 1768 : 	UNREFERENCED_PARAMETER(pReserved);
; 1769 : 	UNREFERENCED_PARAMETER(configValue);
; 1770 : 	UNREFERENCED_PARAMETER(interfaceNumber);
; 1771 : 	UNREFERENCED_PARAMETER(alternateSetting);
; 1772 : 
; 1773 :     return ERROR_SUCCESS;

  00000	e3a00000	 mov         r0, #0

; 1774 : }

  00004	e12fff1e	 bx          lr
  00008		 |$M47272|

			 ENDP  ; |UfnPdd_InitEndpoint|

	EXPORT	|UfnPdd_SetAddress|
	EXPORT	|??_C@_1DE@EDFIEPML@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAt?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?3?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T47287| DCD	|$LN7@UfnPdd_Set|
	DCD	0x40001101

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@EDFIEPML@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAt?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?3?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "A", 0x0, "d", 0x0, "d"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, ":", 0x0, " "
	DCB	0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |UfnPdd_SetAddress| PROC

; 1799 : {

  00000		 |$LN7@UfnPdd_Set|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M47284|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0

; 1800 :     USBFN_PDD *pPdd = pPddContext;
; 1801 :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"UfnPdd_SetAddress: (%d)\r\n", address));

  0000c	e59f302c	 ldr         r3, [pc, #0x2C]
  00010	e5933440	 ldr         r3, [r3, #0x440]
  00014	e3130a02	 tst         r3, #2, 20
  00018	13130004	 tstne       r3, #4
  0001c	159f0018	 ldrne       r0, [pc, #0x18]
  00020	1b000000	 blne        NKDbgPrintfW

; 1802 :     
; 1803 :     pPdd->bSetAddress = TRUE;

  00024	e3a03001	 mov         r3, #1
  00028	e5853170	 str         r3, [r5, #0x170]

; 1804 :     pPdd->ucAddress = address;

  0002c	e5c5416c	 strb        r4, [r5, #0x16C]

; 1805 :     
; 1806 :     return ERROR_SUCCESS;

  00030	e3a00000	 mov         r0, #0

; 1807 : }

  00034	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$LN8@UfnPdd_Set|
  0003c		 |$LN9@UfnPdd_Set|
  0003c	00000000	 DCD         |??_C@_1DE@EDFIEPML@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAe?$AAt?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?3?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00040		 |$LN10@UfnPdd_Set|
  00040	00000000	 DCD         |dpCurSettings|
  00044		 |$M47285|

			 ENDP  ; |UfnPdd_SetAddress|

	EXPORT	|UfnPdd_Start|
	EXPORT	|??_C@_1DA@KAOBCNKD@?$AA?$CL?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|ConnectHardware|
	IMPORT	|OALStall|

  00000			 AREA	 |.pdata|, PDATA
|$T47302| DCD	|$LN8@UfnPdd_Sta@2|
	DCD	0x40003001

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@KAOBCNKD@?$AA?$CL?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, "F", 0x0, "N", 0x0, ":"
	DCB	0x0, ":", 0x0, " ", 0x0, "U", 0x0, "f", 0x0, "n", 0x0, "P"
	DCB	0x0, "d", 0x0, "d", 0x0, "_", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "r", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |UfnPdd_Start| PROC

; 1817 : {

  00000		 |$LN8@UfnPdd_Sta@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M47299|
  00004	e1a04000	 mov         r4, r0

; 1818 :     USBFN_PDD *pPdd = pPddContext;
; 1819 : 
; 1820 :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"+USBFN:: UfnPdd_Start\r\n"));

  00008	e59f30ac	 ldr         r3, [pc, #0xAC]
  0000c	e5933440	 ldr         r3, [r3, #0x440]
  00010	e3130a02	 tst         r3, #2, 20
  00014	13130004	 tstne       r3, #4
  00018	159f0098	 ldrne       r0, [pc, #0x98]
  0001c	1b000000	 blne        NKDbgPrintfW

; 1821 : 
; 1822 :     // Disconnect hardware
; 1823 :     if ((INREG8(&pPdd->pUsbGenRegs->DevCtl) & DEVCTL_SESSION) == DEVCTL_SESSION)

  00020	e5942010	 ldr         r2, [r4, #0x10]
  00024	e5d23060	 ldrb        r3, [r2, #0x60]
  00028	e2033001	 and         r3, r3, #1
  0002c	e3530001	 cmp         r3, #1

; 1824 :         CLRREG8(&pPdd->pUsbGenRegs->DevCtl, DEVCTL_SESSION);

  00030	05d23060	 ldreqb      r3, [r2, #0x60]
  00034	020330fe	 andeq       r3, r3, #0xFE
  00038	05c23060	 streqb      r3, [r2, #0x60]

; 1825 : 
; 1826 :     CLRREG8(&pPdd->pUsbGenRegs->Power, POWER_SOFTCONN);        

  0003c	e5942010	 ldr         r2, [r4, #0x10]
  00040	e5d23001	 ldrb        r3, [r2, #1]
  00044	e20330bf	 and         r3, r3, #0xBF
  00048	e5c23001	 strb        r3, [r2, #1]

; 1827 :     DisconnectHardware();

  0004c	eb000000	 bl          DisconnectHardware

; 1828 : 
; 1829 :     // Wait for while
; 1830 :     OALStall(10000);

  00050	e3a05c27	 mov         r5, #0x27, 24
  00054	e3850010	 orr         r0, r5, #0x10
  00058	eb000000	 bl          OALStall

; 1831 : 
; 1832 : 	ConnectHardware();

  0005c	eb000000	 bl          ConnectHardware

; 1833 : 
; 1834 :     OUTREG8(&pPdd->pUsbGenRegs->IntrUSBE, 0);

  00060	e5943010	 ldr         r3, [r4, #0x10]
  00064	e3a01000	 mov         r1, #0

; 1835 : 	OUTREG16(&pPdd->pUsbGenRegs->IntrRxE, 0xFFFC);

  00068	e3a02cff	 mov         r2, #0xFF, 24
  0006c	e5c3100b	 strb        r1, [r3, #0xB]
  00070	e5943010	 ldr         r3, [r4, #0x10]
  00074	e38220fc	 orr         r2, r2, #0xFC

; 1836 : 	OUTREG16(&pPdd->pUsbGenRegs->IntrTxE, 0xFFFC);
; 1837 : 	OUTREG8(&pPdd->pUsbGenRegs->Testmode, 0);
; 1838 :     OUTREG8(&pPdd->pUsbGenRegs->FAddr, 0); 
; 1839 : 
; 1840 :     // Wait for while
; 1841 :     OALStall(10000);

  00078	e3850010	 orr         r0, r5, #0x10
  0007c	e1c320b8	 strh        r2, [r3, #8]
  00080	e5943010	 ldr         r3, [r4, #0x10]
  00084	e1c320b6	 strh        r2, [r3, #6]
  00088	e5943010	 ldr         r3, [r4, #0x10]
  0008c	e5c3100f	 strb        r1, [r3, #0xF]
  00090	e5943010	 ldr         r3, [r4, #0x10]
  00094	e5c31000	 strb        r1, [r3]
  00098	eb000000	 bl          OALStall

; 1842 : 
; 1843 :     // Attach device to bus
; 1844 : 	SETREG8(&pPdd->pUsbGenRegs->DevCtl, DEVCTL_SESSION);

  0009c	e5942010	 ldr         r2, [r4, #0x10]

; 1845 : 
; 1846 :     // Done
; 1847 :     return ERROR_SUCCESS;

  000a0	e3a00000	 mov         r0, #0
  000a4	e5d23060	 ldrb        r3, [r2, #0x60]
  000a8	e3833001	 orr         r3, r3, #1
  000ac	e5c23060	 strb        r3, [r2, #0x60]

; 1848 : }

  000b0	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000b4	e12fff1e	 bx          lr
  000b8		 |$LN9@UfnPdd_Sta@2|
  000b8		 |$LN10@UfnPdd_Sta@2|
  000b8	00000000	 DCD         |??_C@_1DA@KAOBCNKD@?$AA?$CL?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAS?$AAt?$AAa?$AAr?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  000bc		 |$LN11@UfnPdd_Sta@2|
  000bc	00000000	 DCD         |dpCurSettings|
  000c0		 |$M47300|

			 ENDP  ; |UfnPdd_Start|

	EXPORT	|UfnPdd_RegisterDevice|
	EXPORT	|??_C@_1HI@CEIMIMOL@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?3?$AA?5?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@BDGEJFPP@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T47369| DCD	|$LN58@UfnPdd_Reg|
	DCD	0x4000d302

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@CEIMIMOL@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?3?$AA?5?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "R", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "U", 0x0, "n"
	DCB	0x0, "s", 0x0, "u", 0x0, "p", 0x0, "p", 0x0, "o", 0x0, "r"
	DCB	0x0, "t", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "e", 0x0, "n"
	DCB	0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t"
	DCB	0x0, " ", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "t", 0x0, "y"
	DCB	0x0, "p", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@BDGEJFPP@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "s", 0x0, "b", 0x0, "F", 0x0, "n", 0x0, "P", 0x0, "d"
	DCB	0x0, "d", 0x0, "_", 0x0, "R", 0x0, "e", 0x0, "g", 0x0, "i"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "D", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |UfnPdd_RegisterDevice| PROC

; 1885 : {

  00000		 |$LN58@UfnPdd_Reg|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd014	 sub         sp, sp, #0x14
  00008		 |$M47366|
  00008	e1a06000	 mov         r6, r0
  0000c	e58d600c	 str         r6, [sp, #0xC]

; 1886 :     // NOTE: InitEndpoints is not called in this implementation.  All configuration must
; 1887 :     // be done in this function.  Only the full speed configuration is used.
; 1888 :         
; 1889 :     USBFN_PDD *pPdd = pPddContext;
; 1890 :     PCSP_MUSB_GEN_REGS pGenRegs = pPdd->pUsbGenRegs;
; 1891 :     PCSP_MUSB_CSR_REGS pCsrRegs = pPdd->pUsbCsrRegs;
; 1892 :     UFN_INTERFACE *pIFC;
; 1893 :     UFN_ENDPOINT *pEP;
; 1894 :     DWORD endpoint;
; 1895 :     DWORD ifc, epx;
; 1896 :     
; 1897 : 	UNREFERENCED_PARAMETER(stringSets);
; 1898 : 	UNREFERENCED_PARAMETER(pStringSets);
; 1899 : 	UNREFERENCED_PARAMETER(pFullSpeedConfigDesc);
; 1900 : 	UNREFERENCED_PARAMETER(pHighSpeedConfigDesc);
; 1901 : 	UNREFERENCED_PARAMETER(pHighSpeedConfig);
; 1902 : 	UNREFERENCED_PARAMETER(pHighSpeedDeviceDesc);
; 1903 : 
; 1904 :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"UsbFnPdd_RegisterDevice\r\n"));

  00010	e59f332c	 ldr         r3, [pc, #0x32C]
  00014	e596200c	 ldr         r2, [r6, #0xC]
  00018	e5964010	 ldr         r4, [r6, #0x10]
  0001c	e5933440	 ldr         r3, [r3, #0x440]
  00020	e58d2004	 str         r2, [sp, #4]
  00024	e3130a02	 tst         r3, #2, 20
  00028	13130004	 tstne       r3, #4
  0002c	159f0314	 ldrne       r0, [pc, #0x314]
  00030	1b000000	 blne        NKDbgPrintfW

; 1905 :     
; 1906 :     // Remember self powered flag
; 1907 :     pPdd->selfPowered =(pFullSpeedConfig->Descriptor.bmAttributes & 0x20) != 0;

  00034	e59d503c	 ldr         r5, [sp, #0x3C]

; 1908 :     
; 1909 :     pPdd->ep[EP0].maxPacketSize = pFullSpeedDeviceDesc->bMaxPacketSize0;
; 1910 :     
; 1911 :     // Configure EP0
; 1912 :     OUTREG8(&pGenRegs->Index, 0);  /* select endpoint to access FIFO registers */
; 1913 :     
; 1914 :     OUTREG8(&pGenRegs->RxFIFOsz, MUSB_FIFOSZ_128_BYTE);
; 1915 :     OUTREG16(&pGenRegs->RxFIFOadd, 0);
; 1916 :     
; 1917 :     OUTREG8(&pGenRegs->TxFIFOsz, MUSB_FIFOSZ_128_BYTE);
; 1918 :     OUTREG16(&pGenRegs->TxFIFOadd, 256/8);
; 1919 :                 
; 1920 :     OALMSG(USBFN_DEBUG, (L"Setup endpoint\r\n"));   
; 1921 :     OALMSG(USBFN_DEBUG, (L"RxFIFOsz=%d\r\n", INREG8(&pGenRegs->RxFIFOsz)));
; 1922 :     OALMSG(USBFN_DEBUG, (L"RxFIFOadd=%d\r\n", INREG16(&pGenRegs->RxFIFOadd)));
; 1923 : 
; 1924 :     // Configure Rx EPs
; 1925 :     for (ifc = 0; ifc < pFullSpeedConfig->Descriptor.bNumInterfaces; ifc++)

  00038	e3a0b000	 mov         r11, #0
  0003c	e5d5300b	 ldrb        r3, [r5, #0xB]
  00040	e3130020	 tst         r3, #0x20
  00044	e59d3038	 ldr         r3, [sp, #0x38]
  00048	13a02001	 movne       r2, #1
  0004c	03a02000	 moveq       r2, #0
  00050	e586201c	 str         r2, [r6, #0x1C]
  00054	e5d33007	 ldrb        r3, [r3, #7]
  00058	e3a02000	 mov         r2, #0
  0005c	e58db000	 str         r11, [sp]
  00060	e1c632bc	 strh        r3, [r6, #0x2C]
  00064	e3a03004	 mov         r3, #4
  00068	e5c4200e	 strb        r2, [r4, #0xE]
  0006c	e5c43063	 strb        r3, [r4, #0x63]
  00070	e1c426b6	 strh        r2, [r4, #0x66]
  00074	e5c43062	 strb        r3, [r4, #0x62]
  00078	e3a03020	 mov         r3, #0x20
  0007c	e1c436b4	 strh        r3, [r4, #0x64]
  00080	e5d53008	 ldrb        r3, [r5, #8]
  00084	e3530000	 cmp         r3, #0
  00088	0a000050	 beq         |$LN22@UfnPdd_Reg|
  0008c	e3a08000	 mov         r8, #0
  00090	e58d8008	 str         r8, [sp, #8]
  00094		 |$LL24@UfnPdd_Reg|

; 1926 :     {
; 1927 :         // For each endpoint in interface
; 1928 :         pIFC = &pFullSpeedConfig->pInterfaces[ifc];

  00094	e5953018	 ldr         r3, [r5, #0x18]

; 1929 :         for (epx = 0; epx < pIFC->Descriptor.bNumEndpoints; epx++)

  00098	e3a0a000	 mov         r10, #0
  0009c	e0889003	 add         r9, r8, r3
  000a0	e5d93008	 ldrb        r3, [r9, #8]
  000a4	e3530000	 cmp         r3, #0
  000a8	0a000041	 beq         |$LN23@UfnPdd_Reg|
  000ac	e59d500c	 ldr         r5, [sp, #0xC]
  000b0	e59fb28c	 ldr         r11, [pc, #0x28C]

; 1976 :             }
; 1977 :         }
; 1978 :     }
; 1979 :     
; 1980 :     // Configure Tx EPs
; 1981 :     for (ifc = 0; ifc < pFullSpeedConfig->Descriptor.bNumInterfaces; ifc++)

  000b4	e59d8004	 ldr         r8, [sp, #4]
  000b8	e3a07000	 mov         r7, #0
  000bc		 |$LL21@UfnPdd_Reg|
  000bc	e5993018	 ldr         r3, [r9, #0x18]
  000c0	e0830007	 add         r0, r3, r7
  000c4	e5d03006	 ldrb        r3, [r0, #6]
  000c8	e3130080	 tst         r3, #0x80
  000cc	1a000030	 bne         |$LN20@UfnPdd_Reg|
  000d0	e5d01008	 ldrb        r1, [r0, #8]
  000d4	e5d02009	 ldrb        r2, [r0, #9]
  000d8	e203e00f	 and         lr, r3, #0xF
  000dc	e08e310e	 add         r3, lr, lr, lsl #2
  000e0	e0856103	 add         r6, r5, r3, lsl #2
  000e4	e1813402	 orr         r3, r1, r2, lsl #8
  000e8	e1c632bc	 strh        r3, [r6, #0x2C]
  000ec	e3a03001	 mov         r3, #1
  000f0	e5863030	 str         r3, [r6, #0x30]
  000f4	e1c4e0be	 strh        lr, [r4, #0xE]
  000f8	e5d03007	 ldrb        r3, [r0, #7]
  000fc	e2033003	 and         r3, r3, #3
  00100	e3530002	 cmp         r3, #2
  00104	0a000016	 beq         |$LN14@UfnPdd_Reg|

; 1930 :         {
; 1931 :             pEP = &pIFC->pEndpoints[epx];
; 1932 :             // If it is Tx EP skip it
; 1933 :             if ((pEP->Descriptor.bEndpointAddress & 0x80) != 0)
; 1934 :                 continue;
; 1935 :             // Get EP address
; 1936 :             endpoint = pEP->Descriptor.bEndpointAddress & 0x0F;
; 1937 :             // Save max packet size & direction
; 1938 :             pPdd->ep[endpoint].maxPacketSize = pEP->Descriptor.wMaxPacketSize;
; 1939 :             pPdd->ep[endpoint].dirRx = TRUE;
; 1940 :             
; 1941 :             OUTREG16(&pGenRegs->Index, endpoint);  /* select endpoint to access FIFO registers */
; 1942 :             
; 1943 :             // configure endpoint based on type
; 1944 :             switch(pEP->Descriptor.bmAttributes & 0x03)

  00108	e3530003	 cmp         r3, #3
  0010c	0a000005	 beq         |$LN15@UfnPdd_Reg|

; 1967 :                 
; 1968 :                 OALMSG(USBFN_DEBUG, (L"RxFIFOsz=%d\r\n", INREG8(&pGenRegs->RxFIFOsz)));
; 1969 :                 OALMSG(USBFN_DEBUG, (L"RxFIFOadd=%d\r\n", INREG16(&pGenRegs->RxFIFOadd)));
; 1970 :                 break;
; 1971 :             case EP_TYPE_CTRL:
; 1972 :             case EP_TYPE_ISOCH:
; 1973 :             default:
; 1974 :                 OALMSG(OAL_ERROR, (L"UfnPdd_RegisterDevice: Unsupported endpoint Transfer type\r\n"));

  00110	e59b3440	 ldr         r3, [r11, #0x440]
  00114	e3130001	 tst         r3, #1
  00118	0a00001d	 beq         |$LN20@UfnPdd_Reg|
  0011c	e59f021c	 ldr         r0, [pc, #0x21C]
  00120	eb000000	 bl          NKDbgPrintfW

; 1975 :                 break;

  00124	ea00001a	 b           |$LN20@UfnPdd_Reg|
  00128		 |$LN15@UfnPdd_Reg|

; 1945 :             {
; 1946 :             case EP_TYPE_INTERRUPT:
; 1947 :                 OALMSG(USBFN_DEBUG, (L"Interrupt endpoint\r\n"));
; 1948 :                 OUTREG8(&pGenRegs->RxFIFOsz, MUSB_FIFOSZ_512_BYTE);

  00128	e3a03006	 mov         r3, #6
  0012c	e5c43063	 strb        r3, [r4, #0x63]

; 1949 :                 OUTREG16(&pGenRegs->RxFIFOadd, CalcFIFOAddr(endpoint,pPdd->ep[endpoint].dirRx));

  00130	e5963030	 ldr         r3, [r6, #0x30]
  00134	e1a0238e	 mov         r2, lr, lsl #7
  00138	e3530000	 cmp         r3, #0
  0013c	12822040	 addne       r2, r2, #0x40
  00140	e1c426b6	 strh        r2, [r4, #0x66]

; 1950 :                 OUTREG16(&pCsrRegs->ep[endpoint].RxMaxP, pPdd->ep[endpoint].maxPacketSize);

  00144	e1d632bc	 ldrh        r3, [r6, #0x2C]
  00148	e088220e	 add         r2, r8, lr, lsl #4
  0014c	e1c230b4	 strh        r3, [r2, #4]

; 1951 :                 OUTREG16(&pCsrRegs->ep[endpoint].RxCSR, RXCSR_P_FLUSHFIFO | RXCSR_P_CLRDATATOG);

  00150	e3a03090	 mov         r3, #0x90
  00154	e1c230b6	 strh        r3, [r2, #6]

; 1952 :                 
; 1953 :                 OALMSG(USBFN_DEBUG, (L"RxFIFOsz=%d\r\n", INREG8(&pGenRegs->RxFIFOsz)));
; 1954 :                 OALMSG(USBFN_DEBUG, (L"RxFIFOadd=%d\r\n", INREG16(&pGenRegs->RxFIFOadd)));
; 1955 :                 
; 1956 :                 // Doesn't support PING in high speed mode
; 1957 :                 // doesn't hurt to set in any speed mode
; 1958 :                 SETREG16(&pCsrRegs->ep[endpoint].RxCSR, RXCSR_P_DISNYET);

  00158	e1d230b6	 ldrh        r3, [r2, #6]
  0015c	e3833a01	 orr         r3, r3, #1, 20

; 1959 :                 break;

  00160	ea00000a	 b           |$LN55@UfnPdd_Reg|
  00164		 |$LN14@UfnPdd_Reg|

; 1960 :                 
; 1961 :             case EP_TYPE_BULK:
; 1962 :                 OALMSG(USBFN_DEBUG, (L"Bulk endpoint\r\n"));
; 1963 :                 OUTREG8(&pGenRegs->RxFIFOsz, MUSB_FIFOSZ_512_BYTE);

  00164	e3a03006	 mov         r3, #6
  00168	e5c43063	 strb        r3, [r4, #0x63]

; 1964 :                 OUTREG16(&pGenRegs->RxFIFOadd, CalcFIFOAddr(endpoint,pPdd->ep[endpoint].dirRx));

  0016c	e5963030	 ldr         r3, [r6, #0x30]
  00170	e1a0238e	 mov         r2, lr, lsl #7
  00174	e3530000	 cmp         r3, #0
  00178	12822040	 addne       r2, r2, #0x40
  0017c	e1c426b6	 strh        r2, [r4, #0x66]

; 1965 :                 OUTREG16(&pCsrRegs->ep[endpoint].RxMaxP, pPdd->ep[endpoint].maxPacketSize);

  00180	e1d632bc	 ldrh        r3, [r6, #0x2C]
  00184	e088220e	 add         r2, r8, lr, lsl #4
  00188	e1c230b4	 strh        r3, [r2, #4]

; 1966 :                 OUTREG16(&pCsrRegs->ep[endpoint].RxCSR, RXCSR_P_FLUSHFIFO | RXCSR_P_CLRDATATOG);

  0018c	e3a03090	 mov         r3, #0x90
  00190		 |$LN55@UfnPdd_Reg|
  00190	e1c230b6	 strh        r3, [r2, #6]
  00194		 |$LN20@UfnPdd_Reg|
  00194	e5d93008	 ldrb        r3, [r9, #8]
  00198	e28aa001	 add         r10, r10, #1
  0019c	e2877014	 add         r7, r7, #0x14
  001a0	e15a0003	 cmp         r10, r3
  001a4	3affffc4	 bcc         |$LL21@UfnPdd_Reg|
  001a8	e59d503c	 ldr         r5, [sp, #0x3C]
  001ac	e59d8008	 ldr         r8, [sp, #8]
  001b0	e59db000	 ldr         r11, [sp]
  001b4		 |$LN23@UfnPdd_Reg|
  001b4	e5d53008	 ldrb        r3, [r5, #8]
  001b8	e28bb001	 add         r11, r11, #1
  001bc	e288801c	 add         r8, r8, #0x1C
  001c0	e15b0003	 cmp         r11, r3
  001c4	e58db000	 str         r11, [sp]
  001c8	e58d8008	 str         r8, [sp, #8]
  001cc	3affffb0	 bcc         |$LL24@UfnPdd_Reg|
  001d0		 |$LN22@UfnPdd_Reg|

; 1976 :             }
; 1977 :         }
; 1978 :     }
; 1979 :     
; 1980 :     // Configure Tx EPs
; 1981 :     for (ifc = 0; ifc < pFullSpeedConfig->Descriptor.bNumInterfaces; ifc++)

  001d0	e5d53008	 ldrb        r3, [r5, #8]
  001d4	e3a07000	 mov         r7, #0
  001d8	e58d7008	 str         r7, [sp, #8]
  001dc	e3530000	 cmp         r3, #0
  001e0	0a000052	 beq         |$LN10@UfnPdd_Reg|
  001e4	e3a03b02	 mov         r3, #2, 22
  001e8	e3833048	 orr         r3, r3, #0x48
  001ec	e3a09000	 mov         r9, #0
  001f0	e1cd30b0	 strh        r3, [sp]
  001f4	e58d9010	 str         r9, [sp, #0x10]
  001f8		 |$LL12@UfnPdd_Reg|

; 1982 :     {
; 1983 :         // For each endpoint in interface
; 1984 :         pIFC = &pFullSpeedConfig->pInterfaces[ifc];

  001f8	e5953018	 ldr         r3, [r5, #0x18]

; 1985 :         for (epx = 0; epx < pIFC->Descriptor.bNumEndpoints; epx++)

  001fc	e3a0b000	 mov         r11, #0
  00200	e089a003	 add         r10, r9, r3
  00204	e5da3008	 ldrb        r3, [r10, #8]
  00208	e3530000	 cmp         r3, #0
  0020c	0a000040	 beq         |$LN11@UfnPdd_Reg|
  00210	e59d500c	 ldr         r5, [sp, #0xC]
  00214	e1dd70b0	 ldrh        r7, [sp]
  00218	e59f9124	 ldr         r9, [pc, #0x124]
  0021c	e3a08000	 mov         r8, #0
  00220		 |$LL9@UfnPdd_Reg|

; 1986 :         {
; 1987 :             pEP = &pIFC->pEndpoints[epx];

  00220	e59a3018	 ldr         r3, [r10, #0x18]
  00224	e0886003	 add         r6, r8, r3

; 1988 :             // If it is Rx EP skip it
; 1989 :             if ((pEP->Descriptor.bEndpointAddress & 0x80) == 0)

  00228	e5d63006	 ldrb        r3, [r6, #6]
  0022c	e3130080	 tst         r3, #0x80
  00230	0a00002f	 beq         |$LN8@UfnPdd_Reg|

; 1990 :                 continue;
; 1991 :             // Get EP address
; 1992 :             endpoint = pEP->Descriptor.bEndpointAddress & 0x0F;
; 1993 :             // Save max packet size & direction
; 1994 :             pPdd->ep[endpoint].maxPacketSize = pEP->Descriptor.wMaxPacketSize;

  00234	e5d61008	 ldrb        r1, [r6, #8]
  00238	e5d62009	 ldrb        r2, [r6, #9]
  0023c	e203000f	 and         r0, r3, #0xF
  00240	e0803100	 add         r3, r0, r0, lsl #2
  00244	e085e103	 add         lr, r5, r3, lsl #2
  00248	e1813402	 orr         r3, r1, r2, lsl #8
  0024c	e1ce32bc	 strh        r3, [lr, #0x2C]

; 1995 :             pPdd->ep[endpoint].dirRx = FALSE;

  00250	e3a03000	 mov         r3, #0
  00254	e58e3030	 str         r3, [lr, #0x30]

; 1996 :             
; 1997 :             OUTREG16(&pGenRegs->Index, endpoint);  /* select endpoint to access rxFIFOxx registers */

  00258	e1c400be	 strh        r0, [r4, #0xE]

; 1998 :             
; 1999 :             // configure endpoint based on type
; 2000 :             switch(pEP->Descriptor.bmAttributes & 0x03)

  0025c	e5d63007	 ldrb        r3, [r6, #7]
  00260	e2033003	 and         r3, r3, #3
  00264	e3530002	 cmp         r3, #2
  00268	0a000014	 beq         |$LN2@UfnPdd_Reg|
  0026c	e3530003	 cmp         r3, #3
  00270	0a000005	 beq         |$LN3@UfnPdd_Reg|

; 2018 :                 
; 2019 :                 OALMSG(USBFN_DEBUG, (L"TxFIFOsz=%d\r\n", INREG8(&pGenRegs->TxFIFOsz)));
; 2020 :                 OALMSG(USBFN_DEBUG, (L"TxFIFOadd=%d\r\n", INREG16(&pGenRegs->TxFIFOadd)));
; 2021 :                 break;
; 2022 :             case EP_TYPE_CTRL:
; 2023 :             case EP_TYPE_ISOCH:
; 2024 :             default:
; 2025 :                 OALMSG(OAL_ERROR, (L"UfnPdd_RegisterDevice: Unsupported endpoint Transfer type\r\n"));

  00274	e5993440	 ldr         r3, [r9, #0x440]
  00278	e3130001	 tst         r3, #1
  0027c	0a00001c	 beq         |$LN8@UfnPdd_Reg|
  00280	e59f00b8	 ldr         r0, [pc, #0xB8]
  00284	eb000000	 bl          NKDbgPrintfW

; 2026 :                 break;

  00288	ea000019	 b           |$LN8@UfnPdd_Reg|
  0028c		 |$LN3@UfnPdd_Reg|

; 2001 :             {
; 2002 :             case EP_TYPE_INTERRUPT:
; 2003 :                 OALMSG(USBFN_DEBUG, (L"Interrupt endpoint\r\n"));
; 2004 :                 OUTREG8(&pGenRegs->TxFIFOsz, MUSB_FIFOSZ_512_BYTE);

  0028c	e3a03006	 mov         r3, #6
  00290	e5c43062	 strb        r3, [r4, #0x62]

; 2005 :                 OUTREG16(&pGenRegs->TxFIFOadd, CalcFIFOAddr(endpoint,pPdd->ep[endpoint].dirRx));

  00294	e59e3030	 ldr         r3, [lr, #0x30]
  00298	e1a02380	 mov         r2, r0, lsl #7
  0029c	e3530000	 cmp         r3, #0
  002a0	12822040	 addne       r2, r2, #0x40
  002a4	e1c426b4	 strh        r2, [r4, #0x64]

; 2006 :                 OUTREG16(&pCsrRegs->ep[endpoint].TxMaxP, pPdd->ep[endpoint].maxPacketSize);

  002a8	e59d2004	 ldr         r2, [sp, #4]
  002ac	e1de32bc	 ldrh        r3, [lr, #0x2C]
  002b0	e0822200	 add         r2, r2, r0, lsl #4
  002b4	e1c230b0	 strh        r3, [r2]

; 2007 :                 OUTREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR, TXCSR_P_FLUSHFIFO | TXCSR_P_CLRDATATOG | TXCSR_P_FRCDATATOG);

  002b8	e1c270b2	 strh        r7, [r2, #2]

; 2008 :                 
; 2009 :                 OALMSG(USBFN_DEBUG, (L"TxFIFOsz=%d\r\n", INREG8(&pGenRegs->TxFIFOsz)));
; 2010 :                 OALMSG(USBFN_DEBUG, (L"TxFIFOadd=%d\r\n", INREG16(&pGenRegs->TxFIFOadd)));
; 2011 :                 break;

  002bc	ea00000c	 b           |$LN8@UfnPdd_Reg|
  002c0		 |$LN2@UfnPdd_Reg|

; 2012 :             case EP_TYPE_BULK:
; 2013 :                 OALMSG(USBFN_DEBUG, (L"Bulk endpoint\r\n"));
; 2014 :                 OUTREG8(&pGenRegs->TxFIFOsz, MUSB_FIFOSZ_512_BYTE);

  002c0	e3a03006	 mov         r3, #6
  002c4	e5c43062	 strb        r3, [r4, #0x62]

; 2015 :                 OUTREG16(&pGenRegs->TxFIFOadd, CalcFIFOAddr(endpoint,pPdd->ep[endpoint].dirRx));

  002c8	e59e3030	 ldr         r3, [lr, #0x30]
  002cc	e1a02380	 mov         r2, r0, lsl #7
  002d0	e3530000	 cmp         r3, #0
  002d4	12822040	 addne       r2, r2, #0x40
  002d8	e1c426b4	 strh        r2, [r4, #0x64]

; 2016 :                 OUTREG16(&pCsrRegs->ep[endpoint].TxMaxP, pPdd->ep[endpoint].maxPacketSize);

  002dc	e59d2004	 ldr         r2, [sp, #4]
  002e0	e1de32bc	 ldrh        r3, [lr, #0x2C]
  002e4	e0822200	 add         r2, r2, r0, lsl #4
  002e8	e1c230b0	 strh        r3, [r2]

; 2017 :                 OUTREG16(&pCsrRegs->ep[endpoint].CSR.TxCSR, TXCSR_P_FLUSHFIFO | TXCSR_P_CLRDATATOG);

  002ec	e3a03048	 mov         r3, #0x48
  002f0	e1c230b2	 strh        r3, [r2, #2]
  002f4		 |$LN8@UfnPdd_Reg|
  002f4	e5da3008	 ldrb        r3, [r10, #8]
  002f8	e28bb001	 add         r11, r11, #1
  002fc	e2888014	 add         r8, r8, #0x14
  00300	e15b0003	 cmp         r11, r3
  00304	3affffc5	 bcc         |$LL9@UfnPdd_Reg|
  00308	e59d503c	 ldr         r5, [sp, #0x3C]
  0030c	e59d7008	 ldr         r7, [sp, #8]
  00310	e59d9010	 ldr         r9, [sp, #0x10]
  00314		 |$LN11@UfnPdd_Reg|
  00314	e5d53008	 ldrb        r3, [r5, #8]
  00318	e2877001	 add         r7, r7, #1
  0031c	e289901c	 add         r9, r9, #0x1C
  00320	e1570003	 cmp         r7, r3
  00324	e58d7008	 str         r7, [sp, #8]
  00328	e58d9010	 str         r9, [sp, #0x10]
  0032c	3affffb1	 bcc         |$LL12@UfnPdd_Reg|
  00330		 |$LN10@UfnPdd_Reg|

; 2027 :             }
; 2028 :         }
; 2029 :     }
; 2030 : 
; 2031 :     // Done
; 2032 :     return ERROR_SUCCESS;

  00330	e3a00000	 mov         r0, #0

; 2033 : }

  00334	e28dd014	 add         sp, sp, #0x14
  00338	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  0033c	e12fff1e	 bx          lr
  00340		 |$LN59@UfnPdd_Reg|
  00340		 |$LN60@UfnPdd_Reg|
  00340	00000000	 DCD         |??_C@_1HI@CEIMIMOL@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?3?$AA?5?$AAU?$AAn?$AAs?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt@|
  00344		 |$LN61@UfnPdd_Reg|
  00344	00000000	 DCD         |dpCurSettings|
  00348		 |$LN62@UfnPdd_Reg|
  00348	00000000	 DCD         |??_C@_1DE@BDGEJFPP@?$AAU?$AAs?$AAb?$AAF?$AAn?$AAP?$AAd?$AAd?$AA_?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  0034c		 |$M47367|

			 ENDP  ; |UfnPdd_RegisterDevice|

	EXPORT	|UfnPdd_IsEndpointSupportable|

  00000			 AREA	 |.pdata|, PDATA
|$T47384| DCD	|$LN6@UfnPdd_IsE@2|
	DCD	0x40000700
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |UfnPdd_IsEndpointSupportable| PROC

; 2065 : ) {

  00000		 |$LN6@UfnPdd_IsE@2|
  00000		 |$M47381|
  00000	e3510000	 cmp         r1, #0

; 2066 : 	UNREFERENCED_PARAMETER(pPddContext);
; 2067 : 	UNREFERENCED_PARAMETER(alternateSetting);
; 2068 : 	UNREFERENCED_PARAMETER(interfaceNumber);
; 2069 : 	UNREFERENCED_PARAMETER(configurationValue);
; 2070 : 	UNREFERENCED_PARAMETER(speed);
; 2071 : 
; 2072 :     // Update maximal packet size for EP0
; 2073 :     if (endPoint == 0) {
; 2074 : //        DEBUGCHK(pEPDesc->wMaxPacketSize <= 64);
; 2075 : //        DEBUGCHK(pEPDesc->bmAttributes == USB_ENDPOINT_TYPE_CONTROL);
; 2076 :         pEPDesc->wMaxPacketSize = 64;

  00004	03a02040	 moveq       r2, #0x40
  00008	03a01000	 moveq       r1, #0
  0000c	05c32004	 streqb      r2, [r3, #4]
  00010	05c31005	 streqb      r1, [r3, #5]

; 2077 : 
; 2078 :     }
; 2079 : 
; 2080 :     // Done
; 2081 :     return ERROR_SUCCESS;

  00014	e3a00000	 mov         r0, #0

; 2082 : }

  00018	e12fff1e	 bx          lr
  0001c		 |$M47382|

			 ENDP  ; |UfnPdd_IsEndpointSupportable|

	EXPORT	|UfnPdd_IsConfigurationSupportable|
	EXPORT	|??_C@_1EI@OOOAJGFK@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn?$AAS?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAa?$AAb?$AAl@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T47408| DCD	|$LN22@UfnPdd_IsC|
	DCD	0x40003b01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@OOOAJGFK@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn?$AAS?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAa?$AAb?$AAl@| DCB "U"
	DCB	0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d", 0x0, "_"
	DCB	0x0, "I", 0x0, "s", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "f"
	DCB	0x0, "i", 0x0, "g", 0x0, "u", 0x0, "r", 0x0, "a", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, "S", 0x0, "u", 0x0, "p"
	DCB	0x0, "p", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |UfnPdd_IsConfigurationSupportable| PROC

; 2114 : {

  00000		 |$LN22@UfnPdd_IsC|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M47405|
  00004	e1a05002	 mov         r5, r2

; 2115 :     DWORD rc = ERROR_INVALID_PARAMETER;
; 2116 :     UFN_INTERFACE *pIFC;
; 2117 :     UFN_ENDPOINT *pEP;
; 2118 :     WORD ifc, epx, count;
; 2119 :     WORD size;
; 2120 : 
; 2121 : 	UNREFERENCED_PARAMETER(pPddContext);
; 2122 : 	UNREFERENCED_PARAMETER(speed);
; 2123 : 
; 2124 :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"UfnPdd_IsConfigurationSupportable\r\n"));

  00008	e59f30d8	 ldr         r3, [pc, #0xD8]
  0000c	e3a04057	 mov         r4, #0x57
  00010	e5933440	 ldr         r3, [r3, #0x440]
  00014	e3130a02	 tst         r3, #2, 20
  00018	13130004	 tstne       r3, #4
  0001c	159f00c0	 ldrne       r0, [pc, #0xC0]
  00020	1b000000	 blne        NKDbgPrintfW

; 2125 :     
; 2126 :     // Clear number of end points
; 2127 :     count = 0;
; 2128 :     
; 2129 :     // For each interface in configuration
; 2130 :     for (ifc = 0; ifc < pConfig->Descriptor.bNumInterfaces; ifc++)

  00024	e5d53008	 ldrb        r3, [r5, #8]
  00028	e3a0e000	 mov         lr, #0
  0002c	e3a00000	 mov         r0, #0
  00030	e3530000	 cmp         r3, #0
  00034	0a000025	 beq         |$LN8@UfnPdd_IsC|
  00038		 |$LL10@UfnPdd_IsC|

; 2131 :     {
; 2132 :         // For each endpoint in interface
; 2133 :         pIFC = &pConfig->pInterfaces[ifc];

  00038	e5951018	 ldr         r1, [r5, #0x18]
  0003c	e0603180	 rsb         r3, r0, r0, lsl #3

; 2134 :         for (epx = 0; epx < pIFC->Descriptor.bNumEndpoints; epx++)

  00040	e3a07000	 mov         r7, #0
  00044	e0811103	 add         r1, r1, r3, lsl #2
  00048	e5d13008	 ldrb        r3, [r1, #8]
  0004c	e3530000	 cmp         r3, #0
  00050	0a000014	 beq         |$LN5@UfnPdd_IsC|
  00054		 |$LL7@UfnPdd_IsC|

; 2135 :         {
; 2136 :             pEP = &pIFC->pEndpoints[epx];

  00054	e5912018	 ldr         r2, [r1, #0x18]
  00058	e0873107	 add         r3, r7, r7, lsl #2
  0005c	e0826103	 add         r6, r2, r3, lsl #2

; 2137 :             
; 2138 :             if (pEP->Descriptor.wMaxPacketSize > MAX_EPX_PKTSIZE) 

  00060	e5d62008	 ldrb        r2, [r6, #8]
  00064	e5d63009	 ldrb        r3, [r6, #9]
  00068	e1822403	 orr         r2, r2, r3, lsl #8

; 2139 :             {
; 2140 :                 size = MAX_EPX_PKTSIZE;
; 2141 :             }
; 2142 :             else
; 2143 :             {
; 2144 :                 size = pEP->Descriptor.wMaxPacketSize;
; 2145 :             }
; 2146 :             
; 2147 :             
; 2148 :             // Is it ISO end point?
; 2149 :             if ((pEP->Descriptor.bmAttributes & 0x03) == 0x01)

  0006c	e5d63007	 ldrb        r3, [r6, #7]
  00070	e3520b01	 cmp         r2, #1, 22
  00074	83a02b01	 movhi       r2, #1, 22
  00078	e2033003	 and         r3, r3, #3
  0007c	e3530001	 cmp         r3, #1
  00080	0a000014	 beq         |$cleanUp$46292|

; 2150 :             {
; 2151 :                 // Actual driver doesn't support ISO endpoints
; 2152 :                 goto cleanUp;
; 2153 :             }
; 2154 :             // Update EP size
; 2155 :             pEP->Descriptor.wMaxPacketSize = size;

  00084	e1a03422	 mov         r3, r2, lsr #8
  00088	e5c63009	 strb        r3, [r6, #9]
  0008c	e2873001	 add         r3, r7, #1
  00090	e5c62008	 strb        r2, [r6, #8]
  00094	e5d12008	 ldrb        r2, [r1, #8]
  00098	e1a07803	 mov         r7, r3, lsl #16
  0009c	e1a07827	 mov         r7, r7, lsr #16
  000a0	e1570002	 cmp         r7, r2
  000a4	3affffea	 bcc         |$LL7@UfnPdd_IsC|
  000a8		 |$LN5@UfnPdd_IsC|

; 2156 :         }
; 2157 :         // Add number of end points to total count
; 2158 :         count = count + pIFC->Descriptor.bNumEndpoints;

  000a8	e5d12008	 ldrb        r2, [r1, #8]
  000ac	e5d51008	 ldrb        r1, [r5, #8]
  000b0	e2803001	 add         r3, r0, #1
  000b4	e082200e	 add         r2, r2, lr
  000b8	e1a00803	 mov         r0, r3, lsl #16
  000bc	e1a0e802	 mov         lr, r2, lsl #16
  000c0	e1a00820	 mov         r0, r0, lsr #16
  000c4	e1a0e82e	 mov         lr, lr, lsr #16
  000c8	e1500001	 cmp         r0, r1
  000cc	3affffd9	 bcc         |$LL10@UfnPdd_IsC|
  000d0		 |$LN8@UfnPdd_IsC|

; 2159 :     }
; 2160 :     
; 2161 :     // Can we support this configuration?
; 2162 :     if (count < USBD_EP_COUNT)

  000d0	e35e0010	 cmp         lr, #0x10

; 2163 :         rc = ERROR_SUCCESS;

  000d4	33a04000	 movcc       r4, #0
  000d8		 |$cleanUp$46292|

; 2164 :     
; 2165 : cleanUp:
; 2166 :     return rc;
; 2167 : }

  000d8	e1a00004	 mov         r0, r4
  000dc	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  000e0	e12fff1e	 bx          lr
  000e4		 |$LN23@UfnPdd_IsC|
  000e4		 |$LN24@UfnPdd_IsC|
  000e4	00000000	 DCD         |??_C@_1EI@OOOAJGFK@?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAs?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn?$AAS?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAa?$AAb?$AAl@|
  000e8		 |$LN25@UfnPdd_IsC|
  000e8	00000000	 DCD         |dpCurSettings|
  000ec		 |$M47406|

			 ENDP  ; |UfnPdd_IsConfigurationSupportable|

	EXPORT	|UfnPdd_Init|
	EXPORT	|??_C@_1CI@PLGKOIKJ@?$AA?9?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAP?$AAD?$AAD?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@JFIJHLAK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?5?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@KOBDIJLJ@?$AA?$CL?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAP?$AAD?$AAD?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|SOCGetUSBOTGAddress|
	IMPORT	|memset|

  00000			 AREA	 |.pdata|, PDATA
|$T47451| DCD	|$LN28@UfnPdd_Ini@3|
	DCD	0x40009a02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@PLGKOIKJ@?$AA?9?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAP?$AAD?$AAD?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, "F", 0x0, "N", 0x0, ":"
	DCB	0x0, ":", 0x0, " ", 0x0, "P", 0x0, "D", 0x0, "D", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@JFIJHLAK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?5?$AAr@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "U", 0x0, "f", 0x0, "n", 0x0, "P", 0x0, "d", 0x0, "d"
	DCB	0x0, "_", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "s", 0x0, " ", 0x0, "m", 0x0, "a"
	DCB	0x0, "p", 0x0, "p", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@KOBDIJLJ@?$AA?$CL?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAP?$AAD?$AAD?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, "F", 0x0, "N", 0x0, ":"
	DCB	0x0, ":", 0x0, " ", 0x0, "P", 0x0, "D", 0x0, "D", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |UfnPdd_Init| PROC

; 2180 : {

  00000		 |$LN28@UfnPdd_Ini@3|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd010	 sub         sp, sp, #0x10
  00008		 |$M47448|
  00008	e58d3000	 str         r3, [sp]
  0000c	e1a03001	 mov         r3, r1
  00010	e58d3008	 str         r3, [sp, #8]
  00014	e58d200c	 str         r2, [sp, #0xC]

; 2181 :     DWORD rc;
; 2182 :     USBFN_PDD *pPdd;
; 2183 : 
; 2184 : 	UNREFERENCED_PARAMETER(szActiveKey);
; 2185 : 
; 2186 :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"+USBFN:: PDD Init\r\n"));

  00018	e59f41e8	 ldr         r4, [pc, #0x1E8]
  0001c	e5940440	 ldr         r0, [r4, #0x440]
  00020	e3100a02	 tst         r0, #2, 20
  00024	13100004	 tstne       r0, #4
  00028	159f0234	 ldrne       r0, [pc, #0x234]
  0002c	1b000000	 blne        NKDbgPrintfW

; 2187 :     
; 2188 :     rc = ERROR_INVALID_PARAMETER;
; 2189 :     
; 2190 :     // Allocate and initialize the OHCD object.
; 2191 :     pPdd = &g_usbfnpdd;
; 2192 : 
; 2193 :     if (pPdd == NULL) goto clean;
; 2194 : 
; 2195 :     // Clear the allocated object.
; 2196 :     memset(pPdd, 0, sizeof(USBFN_PDD));

  00030	e59f51c8	 ldr         r5, [pc, #0x1C8]
  00034	e3a02d06	 mov         r2, #6, 26
  00038	e3a01000	 mov         r1, #0
  0003c	e1a00005	 mov         r0, r5
  00040	e3a06057	 mov         r6, #0x57
  00044	eb000000	 bl          memset

; 2197 : 
; 2198 :     // Map the USB registers
; 2199 :     pPdd->pUsbGenRegs = (PCSP_MUSB_GEN_REGS)OALPAtoUA( SOCGetUSBOTGAddress() + OMAP_MUSB_GEN_OFFSET );

  00048	eb000000	 bl          SOCGetUSBOTGAddress
  0004c	e3a01000	 mov         r1, #0
  00050	eb000000	 bl          OALPAtoVA
  00054	e3500000	 cmp         r0, #0
  00058	e5850010	 str         r0, [r5, #0x10]

; 2200 :     if (pPdd->pUsbGenRegs == NULL) {

  0005c	1a000005	 bne         |$LN3@UfnPdd_Ini@3|
  00060		 |$LN24@UfnPdd_Ini@3|

; 2201 :         OALMSG(OAL_ERROR, (
; 2202 :             L"ERROR: UfnPdd_Init: Controller registers mapping failed\r\n"
; 2203 :         ));

  00060	e5943440	 ldr         r3, [r4, #0x440]
  00064		 |$LN25@UfnPdd_Ini@3|
  00064	e3130001	 tst         r3, #1
  00068	0a00005a	 beq         |$clean$46309|
  0006c	e59f01ec	 ldr         r0, [pc, #0x1EC]
  00070	eb000000	 bl          NKDbgPrintfW

; 2204 :         goto clean;

  00074	ea000057	 b           |$clean$46309|
  00078		 |$LN3@UfnPdd_Ini@3|

; 2205 :     }
; 2206 :     
; 2207 :     pPdd->pUsbCsrRegs = (PCSP_MUSB_CSR_REGS)OALPAtoUA( SOCGetUSBOTGAddress() + OMAP_MUSB_CSR_OFFSET );

  00078	eb000000	 bl          SOCGetUSBOTGAddress
  0007c	e2800c01	 add         r0, r0, #1, 24
  00080	e3a01000	 mov         r1, #0
  00084	eb000000	 bl          OALPAtoVA
  00088	e3500000	 cmp         r0, #0
  0008c	e585000c	 str         r0, [r5, #0xC]

; 2208 :     if (pPdd->pUsbCsrRegs == NULL) {
; 2209 :         OALMSG(OAL_ERROR, (
; 2210 :             L"ERROR: UfnPdd_Init: Controller registers mapping failed\r\n"
; 2211 :         ));
; 2212 :         goto clean;

  00090	0afffff2	 beq         |$LN24@UfnPdd_Ini@3|

; 2213 :     }
; 2214 :     
; 2215 :     pPdd->pUsbOtgRegs = (PCSP_MUSB_OTG_REGS)OALPAtoUA( SOCGetUSBOTGAddress() + OMAP_MUSB_OTG_OFFSET );

  00094	eb000000	 bl          SOCGetUSBOTGAddress
  00098	e2800b01	 add         r0, r0, #1, 22
  0009c	e3a01000	 mov         r1, #0
  000a0	eb000000	 bl          OALPAtoVA

; 2216 :     if (pPdd->pUsbOtgRegs == NULL) {

  000a4	e5943440	 ldr         r3, [r4, #0x440]
  000a8	e3500000	 cmp         r0, #0
  000ac	e5850008	 str         r0, [r5, #8]

; 2217 :         OALMSG(OAL_ERROR, (
; 2218 :             L"ERROR: UfnPdd_Init: Controller registers mapping failed\r\n"
; 2219 :         ));
; 2220 :         goto clean;

  000b0	0affffeb	 beq         |$LN25@UfnPdd_Ini@3|

; 2221 :     }
; 2222 :     
; 2223 :     pPdd->devState = 0;
; 2224 :     
; 2225 :     // Enable USBHS clocks
; 2226 :     StartUSBClock(pPdd);

  000b4	e3a02000	 mov         r2, #0
  000b8	e3130a02	 tst         r3, #2, 20
  000bc	e5852018	 str         r2, [r5, #0x18]
  000c0	e5952010	 ldr         r2, [r5, #0x10]
  000c4	13130004	 tstne       r3, #4
  000c8	159f018c	 ldrne       r0, [pc, #0x18C]
  000cc	e58d2004	 str         r2, [sp, #4]
  000d0	1b000000	 blne        NKDbgPrintfW
  000d4	e3a00001	 mov         r0, #1
  000d8	eb000000	 bl          EnableUSBClocks
  000dc	e3500000	 cmp         r0, #0
  000e0	1a000003	 bne         |$LN22@UfnPdd_Ini@3|
  000e4	e5943440	 ldr         r3, [r4, #0x440]
  000e8	e3130a02	 tst         r3, #2, 20
  000ec	159f0164	 ldrne       r0, [pc, #0x164]
  000f0	1b000000	 blne        NKDbgPrintfW
  000f4		 |$LN22@UfnPdd_Ini@3|
  000f4	eb000000	 bl          ResetHardware

; 2227 :     
; 2228 :     // Set PDD interface
; 2229 :     pPddIfc->dwVersion = UFN_PDD_INTERFACE_VERSION;
; 2230 :     pPddIfc->dwCapabilities = UFN_PDD_CAPS_SUPPORTS_FULL_SPEED;
; 2231 :     pPddIfc->dwEndpointCount = USBD_EP_COUNT;
; 2232 :     pPddIfc->pvPddContext = pPdd;
; 2233 :     pPddIfc->pfnDeinit = UfnPdd_Deinit;
; 2234 :     pPddIfc->pfnIsConfigurationSupportable = UfnPdd_IsConfigurationSupportable;
; 2235 :     pPddIfc->pfnIsEndpointSupportable = UfnPdd_IsEndpointSupportable;
; 2236 :     pPddIfc->pfnInitEndpoint = UfnPdd_InitEndpoint;
; 2237 :     pPddIfc->pfnRegisterDevice = UfnPdd_RegisterDevice;
; 2238 :     pPddIfc->pfnDeregisterDevice = UfnPdd_DeregisterDevice;
; 2239 :     pPddIfc->pfnStart = UfnPdd_Start;
; 2240 :     pPddIfc->pfnStop = UfnPdd_Stop;
; 2241 :     pPddIfc->pfnIssueTransfer = UfnPdd_IssueTransfer;
; 2242 :     pPddIfc->pfnAbortTransfer = UfnPdd_AbortTransfer;
; 2243 :     pPddIfc->pfnDeinitEndpoint = UfnPdd_DeinitEndpoint;
; 2244 :     pPddIfc->pfnStallEndpoint = UfnPdd_StallEndpoint;
; 2245 :     pPddIfc->pfnClearEndpointStall = UfnPdd_ClearEndpointStall;
; 2246 :     pPddIfc->pfnSendControlStatusHandshake = UfnPdd_SendControlStatusHandshake;
; 2247 :     pPddIfc->pfnSetAddress = UfnPdd_SetAddress;
; 2248 :     pPddIfc->pfnIsEndpointHalted = UfnPdd_IsEndpointHalted;
; 2249 :     pPddIfc->pfnInitiateRemoteWakeup = UfnPdd_InitiateRemoteWakeup;
; 2250 :     pPddIfc->pfnPowerDown = UfnPdd_PowerDown;
; 2251 :     pPddIfc->pfnPowerUp = UfnPdd_PowerUp;
; 2252 :     pPddIfc->pfnIOControl = UfnPdd_IOControl;

  000f8	e59d3004	 ldr         r3, [sp, #4]
  000fc	e3a02020	 mov         r2, #0x20
  00100	e59f114c	 ldr         r1, [pc, #0x14C]
  00104	e5c32001	 strb        r2, [r3, #1]
  00108	e59f3140	 ldr         r3, [pc, #0x140]
  0010c	e59d2000	 ldr         r2, [sp]
  00110	e59f0134	 ldr         r0, [pc, #0x134]
  00114	e59fe12c	 ldr         lr, [pc, #0x12C]
  00118	e5823010	 str         r3, [r2, #0x10]
  0011c	e59f2120	 ldr         r2, [pc, #0x120]
  00120	e59d3000	 ldr         r3, [sp]
  00124	e59f4114	 ldr         r4, [pc, #0x114]
  00128	e59f510c	 ldr         r5, [pc, #0x10C]
  0012c	e5832014	 str         r2, [r3, #0x14]
  00130	e1a02003	 mov         r2, r3
  00134	e59f30fc	 ldr         r3, [pc, #0xFC]
  00138	e59f60f4	 ldr         r6, [pc, #0xF4]
  0013c	e59f70ec	 ldr         r7, [pc, #0xEC]
  00140	e5823044	 str         r3, [r2, #0x44]
  00144	e59f30e0	 ldr         r3, [pc, #0xE0]
  00148	e59f80d8	 ldr         r8, [pc, #0xD8]
  0014c	e59f90d0	 ldr         r9, [pc, #0xD0]
  00150	e5823048	 str         r3, [r2, #0x48]
  00154	e59f30c4	 ldr         r3, [pc, #0xC4]
  00158	e59fa0bc	 ldr         r10, [pc, #0xBC]
  0015c	e59fb0b4	 ldr         r11, [pc, #0xB4]
  00160	e582304c	 str         r3, [r2, #0x4C]
  00164	e59f30a8	 ldr         r3, [pc, #0xA8]
  00168	e5821018	 str         r1, [r2, #0x18]
  0016c	e282c01c	 add         r12, r2, #0x1C
  00170	e88c4001	 stmia       r12, {r0, lr}
  00174	e5823050	 str         r3, [r2, #0x50]
  00178	e59f3090	 ldr         r3, [pc, #0x90]
  0017c	e282c024	 add         r12, r2, #0x24
  00180	e88c0ff0	 stmia       r12, {r4 - r11}

; 2253 : 
; 2254 :     // Save MDD context & notify function
; 2255 :     pPdd->pMddContext = pMddContext;
; 2256 :     pPdd->pfnNotify = pMddIfc->pfnNotify;
; 2257 : 
; 2258 :     // Done
; 2259 :     rc = ERROR_SUCCESS;

  00184	e3a06000	 mov         r6, #0
  00188	e5823054	 str         r3, [r2, #0x54]
  0018c	e59f3078	 ldr         r3, [pc, #0x78]
  00190	e59f4070	 ldr         r4, [pc, #0x70]
  00194	e5823058	 str         r3, [r2, #0x58]
  00198	e59f3064	 ldr         r3, [pc, #0x64]
  0019c	e582305c	 str         r3, [r2, #0x5C]
  001a0	e3a03806	 mov         r3, #6, 16
  001a4	e5823000	 str         r3, [r2]
  001a8	e3a03001	 mov         r3, #1
  001ac	e5823004	 str         r3, [r2, #4]
  001b0	e3a03010	 mov         r3, #0x10
  001b4	e5823008	 str         r3, [r2, #8]
  001b8	e59f2040	 ldr         r2, [pc, #0x40]
  001bc	e59d3000	 ldr         r3, [sp]
  001c0	e583200c	 str         r2, [r3, #0xC]
  001c4	e59d3008	 ldr         r3, [sp, #8]
  001c8	e5823000	 str         r3, [r2]
  001cc	e59d300c	 ldr         r3, [sp, #0xC]
  001d0	e5933004	 ldr         r3, [r3, #4]
  001d4	e5823004	 str         r3, [r2, #4]
  001d8		 |$clean$46309|
  001d8	e5943440	 ldr         r3, [r4, #0x440]

; 2260 : clean:
; 2261 :     OALMSG(OAL_ETHER&&OAL_FUNC, (L"-USBFN:: PDD Init\r\n"));

  001dc	e3130a02	 tst         r3, #2, 20
  001e0	13130004	 tstne       r3, #4
  001e4	159f0010	 ldrne       r0, [pc, #0x10]
  001e8	1b000000	 blne        NKDbgPrintfW

; 2262 :     return rc;
; 2263 : }

  001ec	e1a00006	 mov         r0, r6
  001f0	e28dd010	 add         sp, sp, #0x10
  001f4	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  001f8	e12fff1e	 bx          lr
  001fc		 |$LN29@UfnPdd_Ini@3|
  001fc		 |$LN30@UfnPdd_Ini@3|
  001fc	00000000	 DCD         |??_C@_1CI@PLGKOIKJ@?$AA?9?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAP?$AAD?$AAD?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  00200		 |$LN31@UfnPdd_Ini@3|
  00200	00000000	 DCD         |g_usbfnpdd|
  00204		 |$LN32@UfnPdd_Ini@3|
  00204	00000000	 DCD         |UfnPdd_IOControl|
  00208		 |$LN33@UfnPdd_Ini@3|
  00208	00000000	 DCD         |dpCurSettings|
  0020c		 |$LN34@UfnPdd_Ini@3|
  0020c	00000000	 DCD         |UfnPdd_PowerUp|
  00210		 |$LN35@UfnPdd_Ini@3|
  00210	00000000	 DCD         |UfnPdd_PowerDown|
  00214		 |$LN36@UfnPdd_Ini@3|
  00214	00000000	 DCD         |UfnPdd_InitiateRemoteWakeup|
  00218		 |$LN37@UfnPdd_Ini@3|
  00218	00000000	 DCD         |UfnPdd_ClearEndpointStall|
  0021c		 |$LN38@UfnPdd_Ini@3|
  0021c	00000000	 DCD         |UfnPdd_StallEndpoint|
  00220		 |$LN39@UfnPdd_Ini@3|
  00220	00000000	 DCD         |UfnPdd_IsEndpointHalted|
  00224		 |$LN40@UfnPdd_Ini@3|
  00224	00000000	 DCD         |UfnPdd_DeinitEndpoint|
  00228		 |$LN41@UfnPdd_Ini@3|
  00228	00000000	 DCD         |UfnPdd_AbortTransfer|
  0022c		 |$LN42@UfnPdd_Ini@3|
  0022c	00000000	 DCD         |UfnPdd_SetAddress|
  00230		 |$LN43@UfnPdd_Ini@3|
  00230	00000000	 DCD         |UfnPdd_IssueTransfer|
  00234		 |$LN44@UfnPdd_Ini@3|
  00234	00000000	 DCD         |UfnPdd_Stop|
  00238		 |$LN45@UfnPdd_Ini@3|
  00238	00000000	 DCD         |UfnPdd_SendControlStatusHandshake|
  0023c		 |$LN46@UfnPdd_Ini@3|
  0023c	00000000	 DCD         |UfnPdd_Start|
  00240		 |$LN47@UfnPdd_Ini@3|
  00240	00000000	 DCD         |UfnPdd_DeregisterDevice|
  00244		 |$LN48@UfnPdd_Ini@3|
  00244	00000000	 DCD         |UfnPdd_IsConfigurationSupportable|
  00248		 |$LN49@UfnPdd_Ini@3|
  00248	00000000	 DCD         |UfnPdd_RegisterDevice|
  0024c		 |$LN50@UfnPdd_Ini@3|
  0024c	00000000	 DCD         |UfnPdd_InitEndpoint|
  00250		 |$LN51@UfnPdd_Ini@3|
  00250	00000000	 DCD         |UfnPdd_Deinit|
  00254		 |$LN52@UfnPdd_Ini@3|
  00254	00000000	 DCD         |UfnPdd_IsEndpointSupportable|
  00258		 |$LN53@UfnPdd_Ini@3|
  00258	00000000	 DCD         |??_C@_1FE@IACJAPMH@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?5?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAe?$AAn?$AAa?$AAb?$AAl?$AAe@|
  0025c		 |$LN54@UfnPdd_Ini@3|
  0025c	00000000	 DCD         |??_C@_1CA@CNHBOOBH@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAU?$AAS?$AAB?$AAC?$AAl?$AAo?$AAc?$AAk?$AA?$AN?$AA?6?$AA?$AA@|
  00260		 |$LN55@UfnPdd_Ini@3|
  00260	00000000	 DCD         |??_C@_1HE@JFIJHLAK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAU?$AAf?$AAn?$AAP?$AAd?$AAd?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAl?$AAe?$AAr?$AA?5?$AAr@|
  00264		 |$LN56@UfnPdd_Ini@3|
  00264	00000000	 DCD         |??_C@_1CI@KOBDIJLJ@?$AA?$CL?$AAU?$AAS?$AAB?$AAF?$AAN?$AA?3?$AA?3?$AA?5?$AAP?$AAD?$AAD?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  00268		 |$M47449|

			 ENDP  ; |UfnPdd_Init|

	EXPORT	|UfnPdd_DllEntry|

  00000			 AREA	 |.pdata|, PDATA
|$T47488| DCD	|$LN5@UfnPdd_Dll|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |UfnPdd_DllEntry| PROC

; 2269 : ) {

  00000		 |$LN5@UfnPdd_Dll|
  00000		 |$M47485|

; 2270 : 	UNREFERENCED_PARAMETER(hDllHandle);
; 2271 : 	UNREFERENCED_PARAMETER(reason);
; 2272 : 	UNREFERENCED_PARAMETER(pReserved);
; 2273 : 
; 2274 :     return TRUE;

  00000	e3a00001	 mov         r0, #1

; 2275 : }

  00004	e12fff1e	 bx          lr
  00008		 |$M47486|

			 ENDP  ; |UfnPdd_DllEntry|

	END
