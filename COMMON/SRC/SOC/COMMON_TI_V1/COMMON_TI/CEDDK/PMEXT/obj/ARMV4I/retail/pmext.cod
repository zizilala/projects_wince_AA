; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\CEDDK\PMEXT\pmext.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.bss|, NOINIT
|_hPmExt| %	0x4
|_PmIfc| %	0x34
	EXPORT	|HalContextUpdateDirtyRegister|
	IMPORT	|KernelIoControl|
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\ceddk\pmext\pmext.cpp

  00000			 AREA	 |.bss|, NOINIT
|?pKernelContextSaveMask@?1??HalContextUpdateDirtyRegister@@9@4PAIA| % 0x4 ; `HalContextUpdateDirtyRegister'::`2'::pKernelContextSaveMask

  00000			 AREA	 |.pdata|, PDATA
|$T36710| DCD	|$LN6@HalContext|
	DCD	0x40001902
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HalContextUpdateDirtyRegister| PROC

; 45   : {

  00000		 |$LN6@HalContext|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M36707|
  00008	e1a05000	 mov         r5, r0

; 46   : #if 1
; 47   : #if (_WINCEOSVER<600)
; 48   :     BOOL bOldMode = SetKMode(TRUE);
; 49   : #endif
; 50   : 
; 51   :     static UINT32 *pKernelContextSaveMask = NULL;
; 52   : 
; 53   :     if (pKernelContextSaveMask == NULL)

  0000c	e59f404c	 ldr         r4, [pc, #0x4C]
  00010	e5942000	 ldr         r2, [r4]
  00014	e3520000	 cmp         r2, #0
  00018	1a000009	 bne         |$LN1@HalContext|

; 54   :         {
; 55   :         KernelIoControl(IOCTL_HAL_CONTEXTSAVE_GETBUFFER, 
; 56   :             NULL, 
; 57   :             0, 
; 58   :             &pKernelContextSaveMask, 
; 59   :             sizeof(UINT**), 
; 60   :             0
; 61   :             );

  0001c	e59f0038	 ldr         r0, [pc, #0x38]
  00020	e3a0e000	 mov         lr, #0
  00024	e3a06004	 mov         r6, #4
  00028	e1a03004	 mov         r3, r4
  0002c	e3a02000	 mov         r2, #0
  00030	e3a01000	 mov         r1, #0
  00034	e58de004	 str         lr, [sp, #4]
  00038	e58d6000	 str         r6, [sp]
  0003c	eb000000	 bl          KernelIoControl
  00040	e5942000	 ldr         r2, [r4]
  00044		 |$LN1@HalContext|

; 62   :         }
; 63   : 
; 64   :     *pKernelContextSaveMask |= ffRegister;

  00044	e5923000	 ldr         r3, [r2]
  00048	e1853003	 orr         r3, r5, r3
  0004c	e5823000	 str         r3, [r2]

; 65   : 
; 66   : #if (_WINCEOSVER<600)
; 67   :     SetKMode(bOldMode);
; 68   : #endif
; 69   : #else
; 70   :     UNREFERENCED_PARAMETER(ffRegister);
; 71   : #endif
; 72   : }

  00050	e28dd008	 add         sp, sp, #8
  00054	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00058	e12fff1e	 bx          lr
  0005c		 |$LN7@HalContext|
  0005c		 |$LN8@HalContext|
  0005c	01f50fd8	 DCD         0x1f50fd8
  00060		 |$LN9@HalContext|
  00060	00000000	 DCD         |?pKernelContextSaveMask@?1??HalContextUpdateDirtyRegister@@9@4PAIA|
  00064		 |$M36708|

			 ENDP  ; |HalContextUpdateDirtyRegister|

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|??_C@_1CC@CELKBIKF@?$AAO?$AAm?$AAa?$AAp?$AAP?$AAm?$AAE?$AAx?$AAt?$AAe?$AAn?$AAs?$AAi?$AAo?$AAn?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_17DJMMGLBL@?$AAD?$AAl?$AAl?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@EKFPKFFC@?$AA?2?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo@| [ DATA ] ; `string'
	IMPORT	|FreeLibrary|
	IMPORT	|RegCloseKey|
	IMPORT	|GetProcAddressW|
	IMPORT	|LoadLibraryW|
	IMPORT	|RegQueryValueExW|
	IMPORT	|RegOpenKeyExW|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_cookie|
	IMPORT	|__security_check_cookie|

  00000			 AREA	 |.pdata|, PDATA
|$T36736| DCD	|$LN23@LoadPmExt|
	DCD	0xc0004a02

  00000			 AREA	 |.xdata|, DATA
|$T36732| DCD	0xffffffe4

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@CELKBIKF@?$AAO?$AAm?$AAa?$AAp?$AAP?$AAm?$AAE?$AAx?$AAt?$AAe?$AAn?$AAs?$AAi?$AAo?$AAn?$AAs?$AA?$AA@| DCB "O"
	DCB	0x0, "m", 0x0, "a", 0x0, "p", 0x0, "P", 0x0, "m", 0x0, "E"
	DCB	0x0, "x", 0x0, "t", 0x0, "e", 0x0, "n", 0x0, "s", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "s", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17DJMMGLBL@?$AAD?$AAl?$AAl?$AA?$AA@| DCB "D", 0x0, "l", 0x0, "l", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@EKFPKFFC@?$AA?2?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo@| DCB "\\"
	DCB	0x0, "S", 0x0, "Y", 0x0, "S", 0x0, "T", 0x0, "E", 0x0, "M"
	DCB	0x0, "\\", 0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, "\\", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "\\", 0x0, "P", 0x0, "o", 0x0, "w"
	DCB	0x0, "e", 0x0, "r", 0x0, "\\", 0x0, "E", 0x0, "x", 0x0, "t"
	DCB	0x0, "e", 0x0, "n", 0x0, "s", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, "\\", 0x0, "O", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T36732|

  00008		 |?LoadPmExt@@YAHXZ| PROC		; LoadPmExt

; 83   : {

  00008		 |$LN23@LoadPmExt|
  00008	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  0000c	e24dde22	 sub         sp, sp, #0x22, 28
  00010		 |$M36733|
  00010	e59f3114	 ldr         r3, [pc, #0x114]
  00014	e5933000	 ldr         r3, [r3]
  00018	e58d321c	 str         r3, [sp, #0x21C]

; 84   :     DWORD dwType;
; 85   :     DWORD dwSize;
; 86   :     BOOL rc = FALSE;
; 87   :     HKEY hKey = NULL;
; 88   :     _TCHAR szBuffer[MAX_PATH];
; 89   :     fnOmapPmExtensions OmapPmExtensions;
; 90   : 
; 91   :     // check if an attempt was already made, if so don't do it again
; 92   :     if (_PmIfc.bInitialized == TRUE) goto cleanUp;

  0001c	e59f5104	 ldr         r5, [pc, #0x104]
  00020	e3a02000	 mov         r2, #0
  00024	e3a06000	 mov         r6, #0
  00028	e5953004	 ldr         r3, [r5, #4]
  0002c	e58d2008	 str         r2, [sp, #8]
  00030	e3530001	 cmp         r3, #1
  00034	0a00002e	 beq         |$LN19@LoadPmExt|

; 93   : 
; 94   :     // open registery key to the power management extension
; 95   :     RegOpenKeyEx(HKEY_LOCAL_MACHINE, PMEXT_MODULE_PATH, 0, 0, &hKey);

  00038	e59f10e4	 ldr         r1, [pc, #0xE4]
  0003c	e28de008	 add         lr, sp, #8
  00040	e3a03000	 mov         r3, #0
  00044	e3a02000	 mov         r2, #0
  00048	e3a0010a	 mov         r0, #0xA, 2
  0004c	e58de000	 str         lr, [sp]
  00050	eb000000	 bl          RegOpenKeyExW

; 96   :     if (hKey == NULL) goto cleanUp;

  00054	e59d0008	 ldr         r0, [sp, #8]
  00058	e3500000	 cmp         r0, #0
  0005c	0a000024	 beq         |$LN19@LoadPmExt|

; 97   : 
; 98   :     // get power management extension module which containts the framework
; 99   :     dwType = REG_SZ;
; 100  :     dwSize = sizeof(szBuffer);
; 101  :     if (RegQueryValueEx(hKey, PMEXT_MODULE_KEY, NULL, &dwType, 
; 102  :             (BYTE*)szBuffer, &dwSize) != ERROR_SUCCESS)

  00060	e59f10b8	 ldr         r1, [pc, #0xB8]
  00064	e3a07001	 mov         r7, #1
  00068	e3a08f82	 mov         r8, #0x82, 30
  0006c	e28de010	 add         lr, sp, #0x10
  00070	e28d4014	 add         r4, sp, #0x14
  00074	e28d300c	 add         r3, sp, #0xC
  00078	e3a02000	 mov         r2, #0
  0007c	e58d700c	 str         r7, [sp, #0xC]
  00080	e58d8010	 str         r8, [sp, #0x10]
  00084	e58de004	 str         lr, [sp, #4]
  00088	e58d4000	 str         r4, [sp]
  0008c	eb000000	 bl          RegQueryValueExW
  00090	e3500000	 cmp         r0, #0
  00094	1a000011	 bne         |$cleanUp$36537|

; 103  :         {
; 104  :         goto cleanUp;
; 105  :         }
; 106  : 
; 107  :     // load module
; 108  :     _hPmExt = (HMODULE)LoadLibrary(szBuffer);

  00098	e28d0014	 add         r0, sp, #0x14
  0009c	eb000000	 bl          LoadLibraryW
  000a0	e3500000	 cmp         r0, #0
  000a4	e5850000	 str         r0, [r5]

; 109  :     if (_hPmExt == NULL) goto cleanUp;

  000a8	0a00000c	 beq         |$cleanUp$36537|

; 110  : 
; 111  :     // extract exported functions
; 112  :     OmapPmExtensions = (fnOmapPmExtensions)GetProcAddress(
; 113  :                                     _hPmExt, 
; 114  :                                     L"OmapPmExtensions"
; 115  :                                     );

  000ac	e59f1068	 ldr         r1, [pc, #0x68]

; 116  : 
; 117  :     // validate library and routine
; 118  :     if (OmapPmExtensions == NULL) goto cleanUp;
; 119  :     if (OmapPmExtensions(&_PmIfc, sizeof(OMAP_PMEXT_IFC)) == FALSE)
; 120  :         {
; 121  :         _PmIfc.bInitialized = FALSE;
; 122  :         goto cleanUp;
; 123  :         }
; 124  : 
; 125  :     _PmIfc.bInitialized = TRUE;
; 126  :     rc = TRUE;
; 127  :     
; 128  : cleanUp:    

  000b0	eb000000	 bl          GetProcAddressW
  000b4	e1b03000	 movs        r3, r0
  000b8	0a000008	 beq         |$cleanUp$36537|
  000bc	e3a01034	 mov         r1, #0x34
  000c0	e2850004	 add         r0, r5, #4
  000c4	e1a0e00f	 mov         lr, pc
  000c8	e12fff13	 bx          r3
  000cc	e3500000	 cmp         r0, #0
  000d0	03a03000	 moveq       r3, #0
  000d4	13a03001	 movne       r3, #1
  000d8	e5853004	 str         r3, [r5, #4]
  000dc	13a06001	 movne       r6, #1
  000e0		 |$cleanUp$36537|

; 129  :     if (hKey != NULL) RegCloseKey(hKey);

  000e0	e59d0008	 ldr         r0, [sp, #8]
  000e4	e3500000	 cmp         r0, #0
  000e8	1b000000	 blne        RegCloseKey

; 130  :     if (rc == FALSE)

  000ec	e3560000	 cmp         r6, #0
  000f0	1a000003	 bne         |$LN1@LoadPmExt|
  000f4		 |$LN19@LoadPmExt|

; 116  : 
; 117  :     // validate library and routine
; 118  :     if (OmapPmExtensions == NULL) goto cleanUp;
; 119  :     if (OmapPmExtensions(&_PmIfc, sizeof(OMAP_PMEXT_IFC)) == FALSE)
; 120  :         {
; 121  :         _PmIfc.bInitialized = FALSE;
; 122  :         goto cleanUp;
; 123  :         }
; 124  : 
; 125  :     _PmIfc.bInitialized = TRUE;
; 126  :     rc = TRUE;
; 127  :     
; 128  : cleanUp:    

  000f4	e5950000	 ldr         r0, [r5]

; 131  :         {
; 132  :         // something failed, don't attempt to reload module
; 133  :         FreeLibrary(_hPmExt);

  000f8	eb000000	 bl          FreeLibrary

; 134  :         _hPmExt = (HMODULE)INVALID_HANDLE_VALUE;

  000fc	e3e03000	 mvn         r3, #0
  00100	e5853000	 str         r3, [r5]
  00104		 |$LN1@LoadPmExt|

; 135  :         }
; 136  :             
; 137  :     return rc;

  00104	e59d021c	 ldr         r0, [sp, #0x21C]
  00108	eb000000	 bl          __security_check_cookie

; 138  : }

  0010c	e1a00006	 mov         r0, r6
  00110	e28dde22	 add         sp, sp, #0x22, 28
  00114	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00118	e12fff1e	 bx          lr
  0011c		 |$LN24@LoadPmExt|
  0011c		 |$LN25@LoadPmExt|
  0011c	00000000	 DCD         |??_C@_1CC@CELKBIKF@?$AAO?$AAm?$AAa?$AAp?$AAP?$AAm?$AAE?$AAx?$AAt?$AAe?$AAn?$AAs?$AAi?$AAo?$AAn?$AAs?$AA?$AA@|
  00120		 |$LN26@LoadPmExt|
  00120	00000000	 DCD         |??_C@_17DJMMGLBL@?$AAD?$AAl?$AAl?$AA?$AA@|
  00124		 |$LN27@LoadPmExt|
  00124	00000000	 DCD         |??_C@_1GO@EKFPKFFC@?$AA?2?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo@|
  00128		 |$LN28@LoadPmExt|
  00128	00000000	 DCD         |_hPmExt|
  0012c		 |$LN29@LoadPmExt|
  0012c	00000000	 DCD         |__security_cookie|
  00130		 |$M36734|

			 ENDP  ; |?LoadPmExt@@YAHXZ|, LoadPmExt

	EXPORT	|PmxSendDeviceNotification|

  00000			 AREA	 |.pdata|, PDATA
|$T36760| DCD	|$LN10@PmxSendDev|
	DCD	0x40002302
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PmxSendDeviceNotification| PROC

; 157  : {

  00000		 |$LN10@PmxSendDev|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd010	 sub         sp, sp, #0x10
  00008		 |$M36757|
  00008	e1a08003	 mov         r8, r3
  0000c	e1a09002	 mov         r9, r2
  00010	e1a0a001	 mov         r10, r1
  00014	e1a0b000	 mov         r11, r0

; 158  :     DWORD rc = FALSE;
; 159  : 
; 160  :     // sanity check
; 161  :     if (IsPmExtValid() == FALSE) goto cleanUp;

  00018	e59f7068	 ldr         r7, [pc, #0x68]
  0001c	e3a04000	 mov         r4, #0
  00020	e597e000	 ldr         lr, [r7]
  00024	e35e0000	 cmp         lr, #0
  00028	1a000002	 bne         |$LN7@PmxSendDev|
  0002c	eb000000	 bl          |?LoadPmExt@@YAHXZ|
  00030	e3500000	 cmp         r0, #0
  00034	0a00000f	 beq         |$cleanUp$36574|
  00038		 |$LN7@PmxSendDev|

; 162  : 
; 163  :     // make call
; 164  :     rc = _PmIfc.PmxSendDeviceNotification(listId, dwParam, 
; 165  :                 dwIoControlCode, lpInBuf, nInBufSize, lpOutBuf, 
; 166  :                 nOutBufSize, pdwBytesRet
; 167  :                 );

  00038	e59de040	 ldr         lr, [sp, #0x40]
  0003c	e59d403c	 ldr         r4, [sp, #0x3C]
  00040	e59d5038	 ldr         r5, [sp, #0x38]
  00044	e59d6034	 ldr         r6, [sp, #0x34]
  00048	e5977004	 ldr         r7, [r7, #4]
  0004c	e58de00c	 str         lr, [sp, #0xC]
  00050	e58d4008	 str         r4, [sp, #8]
  00054	e58d5004	 str         r5, [sp, #4]
  00058	e58d6000	 str         r6, [sp]
  0005c	e1a03008	 mov         r3, r8
  00060	e1a02009	 mov         r2, r9
  00064	e1a0100a	 mov         r1, r10
  00068	e1a0000b	 mov         r0, r11
  0006c	e1a0e00f	 mov         lr, pc
  00070	e12fff17	 bx          r7
  00074	e1a04000	 mov         r4, r0
  00078		 |$cleanUp$36574|

; 168  : 
; 169  : cleanUp:
; 170  :     return rc;
; 171  : }

  00078	e1a00004	 mov         r0, r4
  0007c	e28dd010	 add         sp, sp, #0x10
  00080	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00084	e12fff1e	 bx          lr
  00088		 |$LN11@PmxSendDev|
  00088		 |$LN12@PmxSendDev|
  00088	00000000	 DCD         |_PmIfc|
  0008c		 |$M36758|

			 ENDP  ; |PmxSendDeviceNotification|

	EXPORT	|PmxSetConstraintByClass|

  00000			 AREA	 |.pdata|, PDATA
|$T36779| DCD	|$LN10@PmxSetCons|
	DCD	0x40001901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PmxSetConstraintByClass| PROC

; 186  : {

  00000		 |$LN10@PmxSetCons|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004		 |$M36776|
  00004	e1a06003	 mov         r6, r3
  00008	e1a07002	 mov         r7, r2
  0000c	e1a08001	 mov         r8, r1
  00010	e1a09000	 mov         r9, r0

; 187  :     HANDLE rc = NULL;
; 188  : 
; 189  :     // sanity check
; 190  :     if (IsPmExtValid() == FALSE) goto cleanUp;

  00014	e59f5044	 ldr         r5, [pc, #0x44]
  00018	e3a04000	 mov         r4, #0
  0001c	e595e000	 ldr         lr, [r5]
  00020	e35e0000	 cmp         lr, #0
  00024	1a000002	 bne         |$LN7@PmxSetCons|
  00028	eb000000	 bl          |?LoadPmExt@@YAHXZ|
  0002c	e3500000	 cmp         r0, #0
  00030	0a000007	 beq         |$cleanUp$36584|
  00034		 |$LN7@PmxSetCons|

; 191  : 
; 192  :     // make call
; 193  :     rc = _PmIfc.PmxSetConstraintByClass(classId, msg, pParam, size);

  00034	e5954008	 ldr         r4, [r5, #8]
  00038	e1a03006	 mov         r3, r6
  0003c	e1a02007	 mov         r2, r7
  00040	e1a01008	 mov         r1, r8
  00044	e1a00009	 mov         r0, r9
  00048	e1a0e00f	 mov         lr, pc
  0004c	e12fff14	 bx          r4
  00050	e1a04000	 mov         r4, r0
  00054		 |$cleanUp$36584|

; 194  : 
; 195  : cleanUp:
; 196  :     return rc;
; 197  : }

  00054	e1a00004	 mov         r0, r4
  00058	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  0005c	e12fff1e	 bx          lr
  00060		 |$LN11@PmxSetCons|
  00060		 |$LN12@PmxSetCons|
  00060	00000000	 DCD         |_PmIfc|
  00064		 |$M36777|

			 ENDP  ; |PmxSetConstraintByClass|

	EXPORT	|PmxSetConstraintById|

  00000			 AREA	 |.pdata|, PDATA
|$T36798| DCD	|$LN10@PmxSetCons@2|
	DCD	0x40001901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PmxSetConstraintById| PROC

; 212  : {

  00000		 |$LN10@PmxSetCons@2|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004		 |$M36795|
  00004	e1a06003	 mov         r6, r3
  00008	e1a07002	 mov         r7, r2
  0000c	e1a08001	 mov         r8, r1
  00010	e1a09000	 mov         r9, r0

; 213  :     HANDLE rc = NULL;
; 214  : 
; 215  :     // sanity check
; 216  :     if (IsPmExtValid() == FALSE) goto cleanUp;

  00014	e59f5044	 ldr         r5, [pc, #0x44]
  00018	e3a04000	 mov         r4, #0
  0001c	e595e000	 ldr         lr, [r5]
  00020	e35e0000	 cmp         lr, #0
  00024	1a000002	 bne         |$LN7@PmxSetCons@2|
  00028	eb000000	 bl          |?LoadPmExt@@YAHXZ|
  0002c	e3500000	 cmp         r0, #0
  00030	0a000007	 beq         |$cleanUp$36594|
  00034		 |$LN7@PmxSetCons@2|

; 217  : 
; 218  :     // make call
; 219  :     rc = _PmIfc.PmxSetConstraintById(szId, msg, pParam, size);

  00034	e595400c	 ldr         r4, [r5, #0xC]
  00038	e1a03006	 mov         r3, r6
  0003c	e1a02007	 mov         r2, r7
  00040	e1a01008	 mov         r1, r8
  00044	e1a00009	 mov         r0, r9
  00048	e1a0e00f	 mov         lr, pc
  0004c	e12fff14	 bx          r4
  00050	e1a04000	 mov         r4, r0
  00054		 |$cleanUp$36594|

; 220  : 
; 221  : cleanUp:
; 222  :     return rc;
; 223  : }

  00054	e1a00004	 mov         r0, r4
  00058	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  0005c	e12fff1e	 bx          lr
  00060		 |$LN11@PmxSetCons@2|
  00060		 |$LN12@PmxSetCons@2|
  00060	00000000	 DCD         |_PmIfc|
  00064		 |$M36796|

			 ENDP  ; |PmxSetConstraintById|

	EXPORT	|PmxUpdateConstraint|

  00000			 AREA	 |.pdata|, PDATA
|$T36817| DCD	|$LN10@PmxUpdateC|
	DCD	0x40001901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PmxUpdateConstraint| PROC

; 238  : {

  00000		 |$LN10@PmxUpdateC|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004		 |$M36814|
  00004	e1a06003	 mov         r6, r3
  00008	e1a07002	 mov         r7, r2
  0000c	e1a08001	 mov         r8, r1
  00010	e1a09000	 mov         r9, r0

; 239  :     DWORD rc = FALSE;
; 240  : 
; 241  :     // sanity check
; 242  :     if (IsPmExtValid() == FALSE) goto cleanUp;

  00014	e59f5044	 ldr         r5, [pc, #0x44]
  00018	e3a04000	 mov         r4, #0
  0001c	e595e000	 ldr         lr, [r5]
  00020	e35e0000	 cmp         lr, #0
  00024	1a000002	 bne         |$LN7@PmxUpdateC|
  00028	eb000000	 bl          |?LoadPmExt@@YAHXZ|
  0002c	e3500000	 cmp         r0, #0
  00030	0a000007	 beq         |$cleanUp$36604|
  00034		 |$LN7@PmxUpdateC|

; 243  : 
; 244  :     // make call
; 245  :     rc = _PmIfc.PmxUpdateConstraint(hConstraintContext, msg, pParam, size);

  00034	e5954010	 ldr         r4, [r5, #0x10]
  00038	e1a03006	 mov         r3, r6
  0003c	e1a02007	 mov         r2, r7
  00040	e1a01008	 mov         r1, r8
  00044	e1a00009	 mov         r0, r9
  00048	e1a0e00f	 mov         lr, pc
  0004c	e12fff14	 bx          r4
  00050	e1a04000	 mov         r4, r0
  00054		 |$cleanUp$36604|

; 246  : 
; 247  : cleanUp:
; 248  :     return rc;
; 249  : }

  00054	e1a00004	 mov         r0, r4
  00058	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  0005c	e12fff1e	 bx          lr
  00060		 |$LN11@PmxUpdateC|
  00060		 |$LN12@PmxUpdateC|
  00060	00000000	 DCD         |_PmIfc|
  00064		 |$M36815|

			 ENDP  ; |PmxUpdateConstraint|

	EXPORT	|PmxReleaseConstraint|

  00000			 AREA	 |.pdata|, PDATA
|$T36830| DCD	|$LN9@PmxRelease|
	DCD	0x40001001
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PmxReleaseConstraint| PROC

; 261  : {

  00000		 |$LN9@PmxRelease|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M36827|
  00004	e1a05000	 mov         r5, r0

; 262  :     // sanity check
; 263  :     if (IsPmExtValid() == FALSE) return;

  00008	e59f402c	 ldr         r4, [pc, #0x2C]
  0000c	e5943000	 ldr         r3, [r4]
  00010	e3530000	 cmp         r3, #0
  00014	1a000002	 bne         |$LN6@PmxRelease|
  00018	eb000000	 bl          |?LoadPmExt@@YAHXZ|
  0001c	e3500000	 cmp         r0, #0
  00020	0a000003	 beq         |$LN2@PmxRelease|
  00024		 |$LN6@PmxRelease|

; 264  : 
; 265  :     // make call
; 266  :     _PmIfc.PmxReleaseConstraint(hConstraintContext);

  00024	e5943014	 ldr         r3, [r4, #0x14]
  00028	e1a00005	 mov         r0, r5
  0002c	e1a0e00f	 mov         lr, pc
  00030	e12fff13	 bx          r3
  00034		 |$LN2@PmxRelease|

; 267  : }

  00034	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$LN10@PmxRelease|
  0003c		 |$LN11@PmxRelease|
  0003c	00000000	 DCD         |_PmIfc|
  00040		 |$M36828|

			 ENDP  ; |PmxReleaseConstraint|

	EXPORT	|PmxRegisterConstraintCallback|

  00000			 AREA	 |.pdata|, PDATA
|$T36847| DCD	|$LN8@PmxRegiste|
	DCD	0x40001b02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PmxRegisterConstraintCallback| PROC

; 283  : {

  00000		 |$LN8@PmxRegiste|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M36844|
  00008	e1a05003	 mov         r5, r3
  0000c	e1a06002	 mov         r6, r2
  00010	e1a07001	 mov         r7, r1
  00014	e1a08000	 mov         r8, r0

; 284  :     // sanity check
; 285  :     if (IsPmExtValid() == FALSE) return NULL;

  00018	e59f4048	 ldr         r4, [pc, #0x48]
  0001c	e594e000	 ldr         lr, [r4]
  00020	e35e0000	 cmp         lr, #0
  00024	1a000003	 bne         |$LN1@PmxRegiste|
  00028	eb000000	 bl          |?LoadPmExt@@YAHXZ|
  0002c	e3500000	 cmp         r0, #0
  00030	03a00000	 moveq       r0, #0
  00034	0a000008	 beq         |$LN2@PmxRegiste|
  00038		 |$LN1@PmxRegiste|

; 286  : 
; 287  :     // make call
; 288  :     return _PmIfc.PmxRegisterConstraintCallback(hConstraintContext, 
; 289  :                     fnCallback, 
; 290  :                     pParam, 
; 291  :                     size, 
; 292  :                     hRefContext
; 293  :                     );

  00038	e59d201c	 ldr         r2, [sp, #0x1C]
  0003c	e5944018	 ldr         r4, [r4, #0x18]
  00040	e1a03005	 mov         r3, r5
  00044	e58d2000	 str         r2, [sp]
  00048	e1a02006	 mov         r2, r6
  0004c	e1a01007	 mov         r1, r7
  00050	e1a00008	 mov         r0, r8
  00054	e1a0e00f	 mov         lr, pc
  00058	e12fff14	 bx          r4
  0005c		 |$LN2@PmxRegiste|

; 294  : }

  0005c	e28dd004	 add         sp, sp, #4
  00060	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00064	e12fff1e	 bx          lr
  00068		 |$LN9@PmxRegiste|
  00068		 |$LN10@PmxRegiste|
  00068	00000000	 DCD         |_PmIfc|
  0006c		 |$M36845|

			 ENDP  ; |PmxRegisterConstraintCallback|

	EXPORT	|PmxUnregisterConstraintCallback|

  00000			 AREA	 |.pdata|, PDATA
|$T36862| DCD	|$LN8@PmxUnregis|
	DCD	0x40001401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PmxUnregisterConstraintCallback| PROC

; 307  : {

  00000		 |$LN8@PmxUnregis|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M36859|
  00004	e1a05001	 mov         r5, r1
  00008	e1a06000	 mov         r6, r0

; 308  :     // sanity check
; 309  :     if (IsPmExtValid() == FALSE) return FALSE;

  0000c	e59f4038	 ldr         r4, [pc, #0x38]
  00010	e5943000	 ldr         r3, [r4]
  00014	e3530000	 cmp         r3, #0
  00018	1a000004	 bne         |$LN1@PmxUnregis|
  0001c	eb000000	 bl          |?LoadPmExt@@YAHXZ|
  00020	e3500000	 cmp         r0, #0
  00024	03a00000	 moveq       r0, #0

; 315  : }

  00028	08bd4070	 ldmeqia     sp!, {r4 - r6, lr}
  0002c	012fff1e	 bxeq        lr
  00030		 |$LN1@PmxUnregis|

; 310  : 
; 311  :     // make call
; 312  :     return _PmIfc.PmxUnregisterConstraintCallback(hConstraintContext, 
; 313  :                 hConstraintCallback
; 314  :                 );

  00030	e594301c	 ldr         r3, [r4, #0x1C]
  00034	e1a01005	 mov         r1, r5
  00038	e1a00006	 mov         r0, r6
  0003c	e1a0e00f	 mov         lr, pc
  00040	e12fff13	 bx          r3

; 315  : }

  00044	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00048	e12fff1e	 bx          lr
  0004c		 |$LN9@PmxUnregis|
  0004c		 |$LN10@PmxUnregis|
  0004c	00000000	 DCD         |_PmIfc|
  00050		 |$M36860|

			 ENDP  ; |PmxUnregisterConstraintCallback|

	EXPORT	|PmxOpenPolicy|

  00000			 AREA	 |.pdata|, PDATA
|$T36876| DCD	|$LN8@PmxOpenPol|
	DCD	0x40001201
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PmxOpenPolicy| PROC

; 327  : {

  00000		 |$LN8@PmxOpenPol|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M36873|
  00004	e1a05000	 mov         r5, r0

; 328  :     // sanity check
; 329  :     if (IsPmExtValid() == FALSE) return NULL;

  00008	e59f4034	 ldr         r4, [pc, #0x34]
  0000c	e5943000	 ldr         r3, [r4]
  00010	e3530000	 cmp         r3, #0
  00014	1a000004	 bne         |$LN1@PmxOpenPol|
  00018	eb000000	 bl          |?LoadPmExt@@YAHXZ|
  0001c	e3500000	 cmp         r0, #0
  00020	03a00000	 moveq       r0, #0

; 333  : }

  00024	08bd4030	 ldmeqia     sp!, {r4, r5, lr}
  00028	012fff1e	 bxeq        lr
  0002c		 |$LN1@PmxOpenPol|

; 330  : 
; 331  :     // make call
; 332  :     return _PmIfc.PmxOpenPolicy(szId);    

  0002c	e5943020	 ldr         r3, [r4, #0x20]
  00030	e1a00005	 mov         r0, r5
  00034	e1a0e00f	 mov         lr, pc
  00038	e12fff13	 bx          r3

; 333  : }

  0003c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$LN9@PmxOpenPol|
  00044		 |$LN10@PmxOpenPol|
  00044	00000000	 DCD         |_PmIfc|
  00048		 |$M36874|

			 ENDP  ; |PmxOpenPolicy|

	EXPORT	|PmxNotifyPolicy|

  00000			 AREA	 |.pdata|, PDATA
|$T36893| DCD	|$LN8@PmxNotifyP|
	DCD	0x40001801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PmxNotifyPolicy| PROC

; 348  : {

  00000		 |$LN8@PmxNotifyP|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M36890|
  00004	e1a05003	 mov         r5, r3
  00008	e1a06002	 mov         r6, r2
  0000c	e1a07001	 mov         r7, r1
  00010	e1a08000	 mov         r8, r0

; 349  :     // sanity check
; 350  :     if (IsPmExtValid() == FALSE) return FALSE;

  00014	e59f4040	 ldr         r4, [pc, #0x40]
  00018	e594e000	 ldr         lr, [r4]
  0001c	e35e0000	 cmp         lr, #0
  00020	1a000004	 bne         |$LN1@PmxNotifyP|
  00024	eb000000	 bl          |?LoadPmExt@@YAHXZ|
  00028	e3500000	 cmp         r0, #0
  0002c	03a00000	 moveq       r0, #0

; 354  : }

  00030	08bd41f0	 ldmeqia     sp!, {r4 - r8, lr}
  00034	012fff1e	 bxeq        lr
  00038		 |$LN1@PmxNotifyP|

; 351  : 
; 352  :     // make call
; 353  :     return _PmIfc.PmxNotifyPolicy(hPolicyContext, msg, pParam, size);    

  00038	e5944024	 ldr         r4, [r4, #0x24]
  0003c	e1a03005	 mov         r3, r5
  00040	e1a02006	 mov         r2, r6
  00044	e1a01007	 mov         r1, r7
  00048	e1a00008	 mov         r0, r8
  0004c	e1a0e00f	 mov         lr, pc
  00050	e12fff14	 bx          r4

; 354  : }

  00054	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00058	e12fff1e	 bx          lr
  0005c		 |$LN9@PmxNotifyP|
  0005c		 |$LN10@PmxNotifyP|
  0005c	00000000	 DCD         |_PmIfc|
  00060		 |$M36891|

			 ENDP  ; |PmxNotifyPolicy|

	EXPORT	|PmxClosePolicy|

  00000			 AREA	 |.pdata|, PDATA
|$T36906| DCD	|$LN9@PmxClosePo|
	DCD	0x40001001
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PmxClosePolicy| PROC

; 366  : {

  00000		 |$LN9@PmxClosePo|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M36903|
  00004	e1a05000	 mov         r5, r0

; 367  :     // sanity check
; 368  :     if (IsPmExtValid() == FALSE) return;

  00008	e59f402c	 ldr         r4, [pc, #0x2C]
  0000c	e5943000	 ldr         r3, [r4]
  00010	e3530000	 cmp         r3, #0
  00014	1a000002	 bne         |$LN6@PmxClosePo|
  00018	eb000000	 bl          |?LoadPmExt@@YAHXZ|
  0001c	e3500000	 cmp         r0, #0
  00020	0a000003	 beq         |$LN2@PmxClosePo|
  00024		 |$LN6@PmxClosePo|

; 369  : 
; 370  :     // make call
; 371  :     _PmIfc.PmxClosePolicy(hPolicyContext);

  00024	e5943028	 ldr         r3, [r4, #0x28]
  00028	e1a00005	 mov         r0, r5
  0002c	e1a0e00f	 mov         lr, pc
  00030	e12fff13	 bx          r3
  00034		 |$LN2@PmxClosePo|

; 372  : }

  00034	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$LN10@PmxClosePo|
  0003c		 |$LN11@PmxClosePo|
  0003c	00000000	 DCD         |_PmIfc|
  00040		 |$M36904|

			 ENDP  ; |PmxClosePolicy|

	EXPORT	|PmxLoadConstraint|

  00000			 AREA	 |.pdata|, PDATA
|$T36920| DCD	|$LN8@PmxLoadCon|
	DCD	0x40001201
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PmxLoadConstraint| PROC

; 384  : {

  00000		 |$LN8@PmxLoadCon|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M36917|
  00004	e1a05000	 mov         r5, r0

; 385  :     // sanity check
; 386  :     if (IsPmExtValid() == FALSE) return NULL;

  00008	e59f4034	 ldr         r4, [pc, #0x34]
  0000c	e5943000	 ldr         r3, [r4]
  00010	e3530000	 cmp         r3, #0
  00014	1a000004	 bne         |$LN1@PmxLoadCon|
  00018	eb000000	 bl          |?LoadPmExt@@YAHXZ|
  0001c	e3500000	 cmp         r0, #0
  00020	03a00000	 moveq       r0, #0

; 390  : }

  00024	08bd4030	 ldmeqia     sp!, {r4, r5, lr}
  00028	012fff1e	 bxeq        lr
  0002c		 |$LN1@PmxLoadCon|

; 387  : 
; 388  :     // make call
; 389  :     return _PmIfc.PmxLoadConstraint(context);    

  0002c	e594302c	 ldr         r3, [r4, #0x2C]
  00030	e1a00005	 mov         r0, r5
  00034	e1a0e00f	 mov         lr, pc
  00038	e12fff13	 bx          r3

; 390  : }

  0003c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$LN9@PmxLoadCon|
  00044		 |$LN10@PmxLoadCon|
  00044	00000000	 DCD         |_PmIfc|
  00048		 |$M36918|

			 ENDP  ; |PmxLoadConstraint|

	EXPORT	|PmxLoadPolicy|

  00000			 AREA	 |.pdata|, PDATA
|$T36934| DCD	|$LN8@PmxLoadPol|
	DCD	0x40001201
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PmxLoadPolicy| PROC

; 402  : {

  00000		 |$LN8@PmxLoadPol|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M36931|
  00004	e1a05000	 mov         r5, r0

; 403  :     // sanity check
; 404  :     if (IsPmExtValid() == FALSE) return NULL;

  00008	e59f4034	 ldr         r4, [pc, #0x34]
  0000c	e5943000	 ldr         r3, [r4]
  00010	e3530000	 cmp         r3, #0
  00014	1a000004	 bne         |$LN1@PmxLoadPol|
  00018	eb000000	 bl          |?LoadPmExt@@YAHXZ|
  0001c	e3500000	 cmp         r0, #0
  00020	03a00000	 moveq       r0, #0

; 408  : }

  00024	08bd4030	 ldmeqia     sp!, {r4, r5, lr}
  00028	012fff1e	 bxeq        lr
  0002c		 |$LN1@PmxLoadPol|

; 405  : 
; 406  :     // make call
; 407  :     return _PmIfc.PmxLoadPolicy(context);    

  0002c	e5943030	 ldr         r3, [r4, #0x30]
  00030	e1a00005	 mov         r0, r5
  00034	e1a0e00f	 mov         lr, pc
  00038	e12fff13	 bx          r3

; 408  : }

  0003c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$LN9@PmxLoadPol|
  00044		 |$LN10@PmxLoadPol|
  00044	00000000	 DCD         |_PmIfc|
  00048		 |$M36932|

			 ENDP  ; |PmxLoadPolicy|

	END
