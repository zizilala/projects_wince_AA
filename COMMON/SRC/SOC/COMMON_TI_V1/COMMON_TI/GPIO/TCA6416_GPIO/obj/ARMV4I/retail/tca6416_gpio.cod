; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\GPIO\TCA6416_GPIO\tca6416_gpio.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_1BC@GEJDDEKI@?$AAI?$AAn?$AAt?$AAr?$AAG?$AAp?$AAi?$AAo?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@ONIGGELG@?$AAI?$AA2?$AAC?$AAB?$AAa?$AAu?$AAd?$AAr?$AAa?$AAt?$AAe?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@JKIOEOBD@?$AAI?$AA2?$AAC?$AAA?$AAd?$AAd?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@FOJMMCB@?$AAI?$AA2?$AAC?$AAB?$AAu?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|DEVICE_IFC_GPIO_GUID| [ DATA ]
	EXPORT	|dpCurSettings| [ DATA ]
	EXPORT	|Tca6416_Gpio| [ DATA ]

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BC@GEJDDEKI@?$AAI?$AAn?$AAt?$AAr?$AAG?$AAp?$AAi?$AAo?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "G", 0x0, "p", 0x0, "i"
	DCB	0x0, "o", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@ONIGGELG@?$AAI?$AA2?$AAC?$AAB?$AAa?$AAu?$AAd?$AAr?$AAa?$AAt?$AAe?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?$AA@| DCB "I"
	DCB	0x0, "2", 0x0, "C", 0x0, "B", 0x0, "a", 0x0, "u", 0x0, "d"
	DCB	0x0, "r", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "I", 0x0, "n"
	DCB	0x0, "d", 0x0, "e", 0x0, "x", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@JKIOEOBD@?$AAI?$AA2?$AAC?$AAA?$AAd?$AAd?$AAr?$AA?$AA@| DCB "I", 0x0
	DCB	"2", 0x0, "C", 0x0, "A", 0x0, "d", 0x0, "d", 0x0, "r", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@FOJMMCB@?$AAI?$AA2?$AAC?$AAB?$AAu?$AAs?$AA?$AA@| DCB "I", 0x0, "2"
	DCB	0x0, "C", 0x0, "B", 0x0, "u", 0x0, "s", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.data|, DATA
|dpCurSettings| DCB "T", 0x0, "C", 0x0, "A", 0x0, "6", 0x0, "4", 0x0, "1", 0x0
	DCB	"6", 0x0, " ", 0x0, "G", 0x0, "P", 0x0, "I", 0x0, "O", 0x0
	DCB	0x0, 0x0
	%	38
	DCB	"E", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, "s", 0x0
	DCB	0x0, 0x0
	%	50
	DCB	"W", 0x0, "a", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0
	DCB	"g", 0x0, "s", 0x0, 0x0, 0x0
	%	46
	DCB	"F", 0x0, "u", 0x0, "n", 0x0, "c", 0x0, "t", 0x0, "i", 0x0
	DCB	"o", 0x0, "n", 0x0, 0x0, 0x0
	%	46
	DCB	"I", 0x0, "n", 0x0, "f", 0x0, "o", 0x0, 0x0, 0x0
	%	54
	DCB	"I", 0x0, "S", 0x0, "T", 0x0, 0x0, 0x0
	%	56
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCB	"U", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0
	DCB	"n", 0x0, "e", 0x0, "d", 0x0, 0x0, 0x0
	%	44
	DCD	0x3
	%	4
|Tca6416_Gpio| DCD 0x0
	DCD	|?Tca6416GpioInit@@YAHPBGPAPAXPAI@Z|
	DCD	0x0
	DCD	|?Tca6416GpioDeinit@@YAHPAX@Z|
	DCD	|?Tca6416GpioSetBit@@YAHPAXI@Z|
	DCD	|?Tca6416GpioClrBit@@YAHPAXI@Z|
	DCD	|?Tca6416GpioGetBit@@YAKPAXI@Z|
	DCD	|?Tca6416GpioSetMode@@YAHPAXII@Z|
	DCD	|?Tca6416GpioGetMode@@YAKPAXI@Z|
	DCD	|?Tca6416GpioPullup@@YAHPAXII@Z|
	DCD	|?Tca6416GpioPulldown@@YAHPAXII@Z|
	DCD	|?Tca6416GpioIoControl@@YAHPAXIPAEI1IPAK@Z|
	DCD	0x0
	DCD	0x0
	DCD	0x0
	DCD	0x0
	%	8

  00000			 AREA	 |.rdata|, DATA, READONLY
|DEVICE_IFC_GPIO_GUID| DCD 0xa0272611
	DCW	0xdea0
	DCW	0x4678
	DCB	0xae
	DCB	0x62
	DCB	0x65
	DCB	0x61
	DCB	0x5b
	DCB	0x7d
	DCB	0x53
	DCB	0xaa
|g_deviceRegParams| DCD |??_C@_1O@FOJMMCB@?$AAI?$AA2?$AAC?$AAB?$AAu?$AAs?$AA?$AA@|
	DCD	0x1
	DCD	0x1
	DCD	0x0
	DCD	0x4
	DCD	0x0
	DCD	|??_C@_1BA@JKIOEOBD@?$AAI?$AA2?$AAC?$AAA?$AAd?$AAd?$AAr?$AA?$AA@|
	DCD	0x1
	DCD	0x1
	DCD	0x4
	DCD	0x4
	DCD	0x0
	DCD	|??_C@_1CC@ONIGGELG@?$AAI?$AA2?$AAC?$AAB?$AAa?$AAu?$AAd?$AAr?$AAa?$AAt?$AAe?$AAI?$AAn?$AAd?$AAe?$AAx?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0x8
	DCD	0x4
	DCD	0x0
	DCD	|??_C@_1BC@GEJDDEKI@?$AAI?$AAn?$AAt?$AAr?$AAG?$AAp?$AAi?$AAo?$AA?$AA@|
	DCD	0x1
	DCD	0x0
	DCD	0xc
	DCD	0x4
	DCD	0xffffffff
	EXPORT	|SetEvent|
	IMPORT	|EventModify|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T37582| DCD	|$LN5@SetEvent|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetEvent| PROC

; 235  : _inline BOOL SetEvent(HANDLE h) {

  00000		 |$LN5@SetEvent|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37579|

; 236  : 	return EventModify(h,EVENT_SET);

  00004	e3a01003	 mov         r1, #3
  00008	eb000000	 bl          EventModify

; 237  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M37580|

			 ENDP  ; |SetEvent|

	EXPORT	|GetCurrentProcessId|
	IMPORT	|__GetUserKData|

  00000			 AREA	 |.pdata|, PDATA
|$T37591| DCD	|$LN5@GetCurrent|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetCurrentProcessId| PROC

; 373  : _inline DWORD GetCurrentProcessId(void) {

  00000		 |$LN5@GetCurrent|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37588|

; 374  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURPROC * sizeof(HANDLE)));

  00004	e3a0000c	 mov         r0, #0xC
  00008	eb000000	 bl          __GetUserKData

; 375  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M37589|

			 ENDP  ; |GetCurrentProcessId|

	EXPORT	|?IsEqualGUID@@YAHABU_GUID@@0@Z|	; IsEqualGUID
	IMPORT	|memcmp|
; File c:\wince600\public\common\sdk\inc\objbase.h

  00000			 AREA	 |.pdata|, PDATA
|$T37605| DCD	|$LN7@IsEqualGUI|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsEqualGUID@@YAHABU_GUID@@0@Z| PROC	; IsEqualGUID

; 493  : {

  00000		 |$LN7@IsEqualGUI|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37602|

; 494  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00004	e3a02010	 mov         r2, #0x10
  00008	eb000000	 bl          memcmp
  0000c	e3500000	 cmp         r0, #0
  00010	03a00001	 moveq       r0, #1

; 495  : }

  00014	049de004	 ldreq       lr, [sp], #4

; 494  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00018	13a00000	 movne       r0, #0

; 495  : }

  0001c	149de004	 ldrne       lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M37603|

			 ENDP  ; |?IsEqualGUID@@YAHABU_GUID@@0@Z|, IsEqualGUID

	EXPORT	|?SendExtraSCLCycle@@YAXPAX@Z|		; SendExtraSCLCycle
	IMPORT	|I2CDriveSCL|
	IMPORT	|I2CSetManualDriveMode|
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\gpio\tca6416_gpio\tca6416_gpio.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T37613| DCD	|$LN5@SendExtraS|
	DCD	0x40000f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SendExtraSCLCycle@@YAXPAX@Z| PROC	; SendExtraSCLCycle

; 168  : {    

  00000		 |$LN5@SendExtraS|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37610|
  00004	e1a04000	 mov         r4, r0

; 169  :     I2CSetManualDriveMode(hI2C,TRUE);

  00008	e3a01001	 mov         r1, #1
  0000c	eb000000	 bl          I2CSetManualDriveMode

; 170  :     I2CDriveSCL(hI2C,FALSE);

  00010	e3a01000	 mov         r1, #0
  00014	e1a00004	 mov         r0, r4
  00018	eb000000	 bl          I2CDriveSCL

; 171  :     I2CDriveSCL(hI2C,TRUE);

  0001c	e3a01001	 mov         r1, #1
  00020	e1a00004	 mov         r0, r4
  00024	eb000000	 bl          I2CDriveSCL

; 172  :     I2CSetManualDriveMode(hI2C,FALSE);    

  00028	e3a01000	 mov         r1, #0
  0002c	e1a00004	 mov         r0, r4
  00030	eb000000	 bl          I2CSetManualDriveMode

; 173  : }

  00034	e8bd4010	 ldmia       sp!, {r4, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$M37611|

			 ENDP  ; |?SendExtraSCLCycle@@YAXPAX@Z|, SendExtraSCLCycle

	EXPORT	|?TCA6416I2CWrite@@YAIPAXIPBXI@Z|	; TCA6416I2CWrite
	IMPORT	|I2CWrite|

  00000			 AREA	 |.pdata|, PDATA
|$T37627| DCD	|$LN5@TCA6416I2C|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?TCA6416I2CWrite@@YAIPAXIPBXI@Z| PROC	; TCA6416I2CWrite

; 182  : {

  00000		 |$LN5@TCA6416I2C|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37624|
  00004	e1a05000	 mov         r5, r0

; 183  :     UINT result = I2CWrite(hCtx,subAddr,pBuffer,size);

  00008	eb000000	 bl          I2CWrite
  0000c	e1a04000	 mov         r4, r0

; 184  :     SendExtraSCLCycle(hCtx);

  00010	e1a00005	 mov         r0, r5
  00014	eb000000	 bl          |?SendExtraSCLCycle@@YAXPAX@Z|

; 185  :     return result;
; 186  : }

  00018	e1a00004	 mov         r0, r4
  0001c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$M37625|

			 ENDP  ; |?TCA6416I2CWrite@@YAIPAXIPBXI@Z|, TCA6416I2CWrite

	EXPORT	|?TCA6416I2CRead@@YAIPAXI0I@Z|		; TCA6416I2CRead
	IMPORT	|I2CRead|

  00000			 AREA	 |.pdata|, PDATA
|$T37641| DCD	|$LN5@TCA6416I2C@2|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?TCA6416I2CRead@@YAIPAXI0I@Z| PROC	; TCA6416I2CRead

; 195  : {

  00000		 |$LN5@TCA6416I2C@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37638|
  00004	e1a05000	 mov         r5, r0

; 196  :     UINT result = I2CRead(hCtx,subAddr,pBuffer,size);

  00008	eb000000	 bl          I2CRead
  0000c	e1a04000	 mov         r4, r0

; 197  :     SendExtraSCLCycle(hCtx);

  00010	e1a00005	 mov         r0, r5
  00014	eb000000	 bl          |?SendExtraSCLCycle@@YAXPAX@Z|

; 198  :     return result;
; 199  : }

  00018	e1a00004	 mov         r0, r4
  0001c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$M37639|

			 ENDP  ; |?TCA6416I2CRead@@YAIPAXI0I@Z|, TCA6416I2CRead

	EXPORT	|?IST@@YAKPAX@Z|			; IST
	IMPORT	|GPIOInterruptDone|
	IMPORT	|LeaveCriticalSection|
	IMPORT	|GPIOInterruptMask|
	IMPORT	|EnterCriticalSection|
	IMPORT	|WaitForSingleObject|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T37683| DCD	|$LN39@IST|
	DCD	0x40007202
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\gpio\tca6416_gpio\tca6416_gpio.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IST@@YAKPAX@Z| PROC			; IST

; 202  : {

  00000		 |$LN39@IST|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd010	 sub         sp, sp, #0x10
  00008		 |$M37680|
  00008	e1a05000	 mov         r5, r0

; 203  :     int i,j;
; 204  :     UCHAR currentpinstate[NB_BANK];
; 205  :     UCHAR oldpinstate[NB_BANK];
; 206  :     TCA6416_DEVICE *pDevice = (TCA6416_DEVICE *)lpParam;
; 207  :     for (i=0;i<NB_BANK;i++)

  0000c	e3a06000	 mov         r6, #0
  00010	e28d7002	 add         r7, sp, #2
  00014		 |$LL16@IST|

; 208  :     {
; 209  :         TCA6416I2CRead(pDevice->hI2C,INPUT_PORT(i),&oldpinstate[i],sizeof(oldpinstate[i]));

  00014	e5954010	 ldr         r4, [r5, #0x10]
  00018	e3a03001	 mov         r3, #1
  0001c	e0862007	 add         r2, r6, r7
  00020	e1a00004	 mov         r0, r4
  00024	e1a01006	 mov         r1, r6
  00028	eb000000	 bl          I2CRead
  0002c	e1a00004	 mov         r0, r4
  00030	eb000000	 bl          |?SendExtraSCLCycle@@YAXPAX@Z|
  00034	e2866001	 add         r6, r6, #1
  00038	e3560002	 cmp         r6, #2
  0003c	bafffff4	 blt         |$LL16@IST|

; 210  :     }
; 211  :     while (!pDevice->fTerminateThread)

  00040	e5953024	 ldr         r3, [r5, #0x24]
  00044	e3530000	 cmp         r3, #0
  00048	1a00005a	 bne         |$LN35@IST|
  0004c	e3a02c01	 mov         r2, #1, 24
  00050	e28d3000	 add         r3, sp, #0
  00054	e3828002	 orr         r8, r2, #2
  00058	e0453003	 sub         r3, r5, r3
  0005c	e58d800c	 str         r8, [sp, #0xC]
  00060	e58d3008	 str         r3, [sp, #8]
  00064	e3a01c13	 mov         r1, #0x13, 24
  00068	e28d9000	 add         r9, sp, #0
  0006c	e28da002	 add         r10, sp, #2
  00070		 |$LL13@IST|

; 212  :     {
; 213  :         if (WaitForSingleObject(pDevice->hIntrEvent,IST_TIMEOUT) == WAIT_TIMEOUT)

  00070	e595001c	 ldr         r0, [r5, #0x1C]
  00074	e3811088	 orr         r1, r1, #0x88
  00078	eb000000	 bl          WaitForSingleObject
  0007c	e1500008	 cmp         r0, r8
  00080	1a000002	 bne         |$LN11@IST|

; 214  :         {
; 215  :             // we haven't detected any interrupt in the last xxx seconds
; 216  :             // Send a clock cycle on the I2C in case someboday made an I2C transfer that didn't 
; 217  :             // include this extra clock cycle. If don't do it, then the interrupt may never be triggerred again
; 218  :             SendExtraSCLCycle(pDevice->hI2C);

  00084	e5950010	 ldr         r0, [r5, #0x10]
  00088	eb000000	 bl          |?SendExtraSCLCycle@@YAXPAX@Z|

; 219  :             continue;

  0008c	ea000045	 b           |$LN34@IST|
  00090		 |$LN11@IST|

; 220  :         }
; 221  :         if (pDevice->fTerminateThread)

  00090	e5953024	 ldr         r3, [r5, #0x24]
  00094	e3530000	 cmp         r3, #0
  00098	1a000046	 bne         |$LN35@IST|

; 222  :         {
; 223  :             break;
; 224  :         }
; 225  :         
; 226  :         for (i=0;i<NB_BANK;i++)
; 227  :         {
; 228  :             UCHAR diff;
; 229  :             UCHAR bankstatus;
; 230  :             TCA6416I2CRead(pDevice->hI2C,INPUT_PORT(i),&currentpinstate[i],sizeof(currentpinstate[i]));
; 231  :             EnterCriticalSection(&pDevice->bankCs[i]);
; 232  :             diff = currentpinstate[i] ^ oldpinstate[i];     
; 233  :             DEBUGMSG(ZONE_IST,(TEXT("bank %d : 0%x 0%x 0x%x\r\n"),i,currentpinstate[i],oldpinstate[i],diff));
; 234  :             bankstatus = diff & pDevice->intMask[i];
; 235  :             for (j=0;j<NB_PIN_PER_BANK;j++)
; 236  :             {
; 237  :                 
; 238  :                 if (bankstatus & (1<<j))
; 239  :                 {
; 240  :                     pDevice->intMask[i] &= (UCHAR) ~(1<<j);
; 241  :                     pDevice->enabledIntCount--;
; 242  :                     if (pDevice->enabledIntCount == 0)
; 243  :                     {
; 244  :                         GPIOInterruptMask(pDevice->hGpio, pDevice->IntrGpio,pDevice->dwSysintr,TRUE);
; 245  :                     }
; 246  :                     if (pDevice->hPinEvent[i][j])
; 247  :                     {
; 248  :                         SetEvent(pDevice->hPinEvent[i][j]);
; 249  :                     }
; 250  :                 }
; 251  :             }
; 252  :             oldpinstate[i] = currentpinstate[i];
; 253  :             LeaveCriticalSection(&pDevice->bankCs[i]);

  0009c	e59d8008	 ldr         r8, [sp, #8]
  000a0	e3a06000	 mov         r6, #0
  000a4	e2857028	 add         r7, r5, #0x28
  000a8		 |$LL9@IST|
  000a8	e5954010	 ldr         r4, [r5, #0x10]
  000ac	e0869009	 add         r9, r6, r9
  000b0	e3a03001	 mov         r3, #1
  000b4	e1a00004	 mov         r0, r4
  000b8	e1a02009	 mov         r2, r9
  000bc	e1a01006	 mov         r1, r6
  000c0	eb000000	 bl          I2CRead
  000c4	e1a00004	 mov         r0, r4
  000c8	eb000000	 bl          |?SendExtraSCLCycle@@YAXPAX@Z|
  000cc	e1a00007	 mov         r0, r7
  000d0	eb000000	 bl          EnterCriticalSection
  000d4	e1a0b006	 mov         r11, r6
  000d8	e7fb100a	 ldrb        r1, [r11, +r10]!
  000dc	e5d93000	 ldrb        r3, [r9]
  000e0	e088a009	 add         r10, r8, r9
  000e4	e5da2068	 ldrb        r2, [r10, #0x68]
  000e8	e0213003	 eor         r3, r1, r3
  000ec	e3a04000	 mov         r4, #0
  000f0	e0033002	 and         r3, r3, r2
  000f4	e58d3004	 str         r3, [sp, #4]
  000f8	e3a08001	 mov         r8, #1
  000fc		 |$LL6@IST|
  000fc	e1a02418	 mov         r2, r8, lsl r4
  00100	e1130002	 tst         r3, r2
  00104	0a000012	 beq         |$LN5@IST|
  00108	e5da3068	 ldrb        r3, [r10, #0x68]
  0010c	e1c33002	 bic         r3, r3, r2
  00110	e5ca3068	 strb        r3, [r10, #0x68]
  00114	e59530ac	 ldr         r3, [r5, #0xAC]
  00118	e2533001	 subs        r3, r3, #1
  0011c	05952018	 ldreq       r2, [r5, #0x18]
  00120	0595100c	 ldreq       r1, [r5, #0xC]
  00124	05950014	 ldreq       r0, [r5, #0x14]
  00128	e58530ac	 str         r3, [r5, #0xAC]
  0012c	03a03001	 moveq       r3, #1
  00130	0b000000	 bleq        GPIOInterruptMask
  00134	e0843186	 add         r3, r4, r6, lsl #3
  00138	e0853103	 add         r3, r5, r3, lsl #2
  0013c	e593306c	 ldr         r3, [r3, #0x6C]
  00140	e3530000	 cmp         r3, #0
  00144	13a01003	 movne       r1, #3
  00148	11a00003	 movne       r0, r3
  0014c	1b000000	 blne        EventModify
  00150	e59d3004	 ldr         r3, [sp, #4]
  00154		 |$LN5@IST|
  00154	e2844001	 add         r4, r4, #1
  00158	e3540008	 cmp         r4, #8
  0015c	baffffe6	 blt         |$LL6@IST|
  00160	e5d93000	 ldrb        r3, [r9]
  00164	e1a00007	 mov         r0, r7
  00168	e5cb3000	 strb        r3, [r11]
  0016c	eb000000	 bl          LeaveCriticalSection
  00170	e2866001	 add         r6, r6, #1
  00174	e59d8008	 ldr         r8, [sp, #8]
  00178	e3560002	 cmp         r6, #2
  0017c	e2877014	 add         r7, r7, #0x14
  00180	e28d9000	 add         r9, sp, #0
  00184	e28da002	 add         r10, sp, #2
  00188	baffffc6	 blt         |$LL9@IST|

; 254  :         }
; 255  :         GPIOInterruptDone(pDevice->hGpio, pDevice->IntrGpio, pDevice->dwSysintr);     

  0018c	e5952018	 ldr         r2, [r5, #0x18]
  00190	e595100c	 ldr         r1, [r5, #0xC]
  00194	e5950014	 ldr         r0, [r5, #0x14]
  00198	eb000000	 bl          GPIOInterruptDone
  0019c	e59d800c	 ldr         r8, [sp, #0xC]
  001a0	e28d9000	 add         r9, sp, #0
  001a4	e28da002	 add         r10, sp, #2
  001a8		 |$LN34@IST|
  001a8	e5953024	 ldr         r3, [r5, #0x24]
  001ac	e3a01c13	 mov         r1, #0x13, 24
  001b0	e3530000	 cmp         r3, #0
  001b4	0affffad	 beq         |$LL13@IST|
  001b8		 |$LN35@IST|

; 256  : 
; 257  :     }
; 258  :     
; 259  :     return 0;

  001b8	e3a00000	 mov         r0, #0

; 260  : }

  001bc	e28dd010	 add         sp, sp, #0x10
  001c0	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  001c4	e12fff1e	 bx          lr
  001c8		 |$M37681|

			 ENDP  ; |?IST@@YAKPAX@Z|, IST

	IMPORT	|LocalFree|
	IMPORT	|CloseHandle|
	IMPORT	|DeleteCriticalSection|
	IMPORT	|I2CClose|
	IMPORT	|GPIOClose|
	IMPORT	|GPIOInterruptDisable|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T37700| DCD	|$LN20@Tca6416Gpi|
	DCD	0x40002f01
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\gpio\tca6416_gpio\tca6416_gpio.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tca6416GpioDeinit@@YAHPAX@Z| PROC	; Tca6416GpioDeinit

; 353  : {

  00000		 |$LN20@Tca6416Gpi|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M37697|
  00004	e1b04000	 movs        r4, r0

; 354  :     BOOL rc = FALSE;

  00008	e3a00000	 mov         r0, #0

; 355  :     TCA6416_DEVICE *pDevice = (TCA6416_DEVICE*)context;
; 356  :     
; 357  :     if (pDevice == NULL)

  0000c	0a000028	 beq         |$cleanUp$37070|

; 358  :     {
; 359  :         goto cleanUp;
; 360  :     }
; 361  :     
; 362  :     pDevice->fTerminateThread = TRUE;
; 363  :     if (pDevice->hIntrEvent)

  00010	e594301c	 ldr         r3, [r4, #0x1C]
  00014	e3a02001	 mov         r2, #1
  00018	e5842024	 str         r2, [r4, #0x24]
  0001c	e3530000	 cmp         r3, #0

; 364  :     {
; 365  :         SetEvent(pDevice->hIntrEvent);        

  00020	13a01003	 movne       r1, #3
  00024	11a00003	 movne       r0, r3
  00028	1b000000	 blne        EventModify

; 366  :     }
; 367  :     if (pDevice->hIntrthread)

  0002c	e5943020	 ldr         r3, [r4, #0x20]
  00030	e3530000	 cmp         r3, #0

; 368  :     {
; 369  :         WaitForSingleObject(pDevice->hIntrthread,INFINITE);

  00034	13e01000	 mvnne       r1, #0
  00038	11a00003	 movne       r0, r3
  0003c	1b000000	 blne        WaitForSingleObject

; 370  :     }    
; 371  :     if (pDevice->dwSysintr != SYSINTR_UNDEFINED)

  00040	e5942018	 ldr         r2, [r4, #0x18]
  00044	e3720001	 cmn         r2, #1

; 372  :     {
; 373  :         GPIOInterruptDisable(pDevice->hGpio, pDevice->IntrGpio, pDevice->dwSysintr);

  00048	1594100c	 ldrne       r1, [r4, #0xC]
  0004c	15940014	 ldrne       r0, [r4, #0x14]
  00050	1b000000	 blne        GPIOInterruptDisable

; 374  :     }
; 375  :     if (pDevice->hGpio)

  00054	e5943014	 ldr         r3, [r4, #0x14]
  00058	e3530000	 cmp         r3, #0

; 376  :     {
; 377  :         GPIOClose(pDevice->hGpio);

  0005c	11a00003	 movne       r0, r3
  00060	1b000000	 blne        GPIOClose

; 378  :     }
; 379  :     if (pDevice->hI2C)

  00064	e5943010	 ldr         r3, [r4, #0x10]
  00068	e3530000	 cmp         r3, #0

; 380  :     {
; 381  :         I2CClose(pDevice->hI2C);

  0006c	11a00003	 movne       r0, r3
  00070	1b000000	 blne        I2CClose

; 382  :     }
; 383  :     for (int i=0;i<NB_BANK;i++)

  00074	e2845028	 add         r5, r4, #0x28
  00078	e3a06002	 mov         r6, #2
  0007c		 |$LL4@Tca6416Gpi|

; 384  :     {
; 385  :         DeleteCriticalSection(&pDevice->bankCs[i]);

  0007c	e1a00005	 mov         r0, r5
  00080	eb000000	 bl          DeleteCriticalSection
  00084	e2855014	 add         r5, r5, #0x14
  00088	e2566001	 subs        r6, r6, #1
  0008c	1afffffa	 bne         |$LL4@Tca6416Gpi|

; 386  :     }
; 387  :     DeleteCriticalSection(&pDevice->wakeupStateCs);

  00090	e2840050	 add         r0, r4, #0x50
  00094	eb000000	 bl          DeleteCriticalSection

; 388  :     
; 389  :     if (pDevice->hIntrEvent)

  00098	e594301c	 ldr         r3, [r4, #0x1C]
  0009c	e3530000	 cmp         r3, #0

; 390  :     {
; 391  :         CloseHandle(pDevice->hIntrEvent);

  000a0	11a00003	 movne       r0, r3
  000a4	1b000000	 blne        CloseHandle

; 392  :     }
; 393  : 
; 394  :     // Free device structure
; 395  :     LocalFree(pDevice);

  000a8	e1a00004	 mov         r0, r4
  000ac	eb000000	 bl          LocalFree

; 396  :     // Done
; 397  :     rc = TRUE;

  000b0	e3a00001	 mov         r0, #1
  000b4		 |$cleanUp$37070|

; 398  : 
; 399  : cleanUp:
; 400  :     DEBUGMSG(ZONE_FUNCTION, (L"-Tca6416GpioDeinit()\r\n"));
; 401  :     return rc;
; 402  : }

  000b4	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000b8	e12fff1e	 bx          lr
  000bc		 |$M37698|

			 ENDP  ; |?Tca6416GpioDeinit@@YAHPAX@Z|, Tca6416GpioDeinit


  00000			 AREA	 |.pdata|, PDATA
|$T37725| DCD	|$LN15@TCA6416Set|
	DCD	0x40002902
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?TCA6416SetRegMaskedValue@@YAHPAXKEEH@Z| PROC ; TCA6416SetRegMaskedValue

; 411  : {

  00000		 |$LN15@TCA6416Set|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M37722|
  00008	e1a08003	 mov         r8, r3
  0000c	e1a09002	 mov         r9, r2
  00010	e1a07001	 mov         r7, r1
  00014	e1a06000	 mov         r6, r0

; 412  :     UCHAR regval,oldregval;
; 413  :     BOOL rc = FALSE;
; 414  : 
; 415  :     if (TCA6416I2CRead(hI2C, (UCHAR)address, &oldregval, sizeof(oldregval)) != sizeof(oldregval))

  00018	e20710ff	 and         r1, r7, #0xFF
  0001c	e3a03001	 mov         r3, #1
  00020	e28d2000	 add         r2, sp, #0
  00024	e3a05000	 mov         r5, #0
  00028	eb000000	 bl          I2CRead
  0002c	e1a04000	 mov         r4, r0
  00030	e1a00006	 mov         r0, r6
  00034	eb000000	 bl          |?SendExtraSCLCycle@@YAXPAX@Z|
  00038	e3540001	 cmp         r4, #1
  0003c	1a000014	 bne         |$cleanUp$37095|

; 416  :     {
; 417  :         goto cleanUp;
; 418  :     }   
; 419  :     
; 420  :     regval = (oldregval & ~mask) | value;

  00040	e5dd4000	 ldrb        r4, [sp]

; 421  : 
; 422  :     if (fForceWrite || (oldregval != regval))

  00044	e59de020	 ldr         lr, [sp, #0x20]
  00048	e1c43008	 bic         r3, r4, r8
  0004c	e1833009	 orr         r3, r3, r9
  00050	e20330ff	 and         r3, r3, #0xFF
  00054	e5cd3001	 strb        r3, [sp, #1]
  00058	e35e0000	 cmp         lr, #0
  0005c	1a000001	 bne         |$LN3@TCA6416Set|
  00060	e1540003	 cmp         r4, r3
  00064	0a000009	 beq         |$LN2@TCA6416Set|
  00068		 |$LN3@TCA6416Set|

; 423  :     {
; 424  :         if (TCA6416I2CWrite(hI2C, (UCHAR)address, &regval, sizeof(regval)) != sizeof(regval))

  00068	e3a03001	 mov         r3, #1
  0006c	e28d2001	 add         r2, sp, #1
  00070	e20710ff	 and         r1, r7, #0xFF
  00074	e1a00006	 mov         r0, r6
  00078	eb000000	 bl          I2CWrite
  0007c	e1a04000	 mov         r4, r0
  00080	e1a00006	 mov         r0, r6
  00084	eb000000	 bl          |?SendExtraSCLCycle@@YAXPAX@Z|
  00088	e3540001	 cmp         r4, #1
  0008c	1a000000	 bne         |$cleanUp$37095|
  00090		 |$LN2@TCA6416Set|

; 425  :         {
; 426  :             goto cleanUp;
; 427  :         }   
; 428  :     }
; 429  : 
; 430  :     // We succceded
; 431  :     rc = TRUE;

  00090	e3a05001	 mov         r5, #1
  00094		 |$cleanUp$37095|

; 432  : 
; 433  : cleanUp:
; 434  : 
; 435  :     return rc;    
; 436  : }

  00094	e1a00005	 mov         r0, r5
  00098	e28dd004	 add         sp, sp, #4
  0009c	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  000a0	e12fff1e	 bx          lr
  000a4		 |$M37723|

			 ENDP  ; |?TCA6416SetRegMaskedValue@@YAHPAXKEEH@Z|, TCA6416SetRegMaskedValue


  00000			 AREA	 |.pdata|, PDATA
|$T37743| DCD	|$LN10@Tca6416Gpi@2|
	DCD	0x40002302
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tca6416GpioSetMode@@YAHPAXII@Z| PROC	; Tca6416GpioSetMode

; 448  : {

  00000		 |$LN10@Tca6416Gpi@2|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M37740|
  00008	e1a09002	 mov         r9, r2
  0000c	e1b08000	 movs        r8, r0

; 449  :     BOOL rc = FALSE;
; 450  :     int bank = id / NB_PIN_PER_BANK;

  00010	e1a041a1	 mov         r4, r1, lsr #3

; 451  :     int pin = id - (bank*NB_PIN_PER_BANK);

  00014	e0413184	 sub         r3, r1, r4, lsl #3

; 452  :     UCHAR mask = (UCHAR) (1<<pin);

  00018	e3a02001	 mov         r2, #1
  0001c	e1a07312	 mov         r7, r2, lsl r3
  00020	e3a05000	 mov         r5, #0

; 453  :     TCA6416_DEVICE *pDevice = (TCA6416_DEVICE*)context;
; 454  : 
; 455  :     if ((pDevice == NULL) || (bank >= NB_BANK) || (pin >= NB_PIN_PER_BANK))

  00024	0a000014	 beq         |$cleanUp$37116|
  00028	e3540002	 cmp         r4, #2
  0002c	aa000012	 bge         |$cleanUp$37116|
  00030	e3530008	 cmp         r3, #8
  00034	aa000010	 bge         |$cleanUp$37116|

; 456  :     {
; 457  :         goto cleanUp;
; 458  :     }    
; 459  :     
; 460  :     EnterCriticalSection(&pDevice->bankCs[bank]);

  00038	e2843002	 add         r3, r4, #2
  0003c	e0836103	 add         r6, r3, r3, lsl #2
  00040	e0880106	 add         r0, r8, r6, lsl #2
  00044	eb000000	 bl          EnterCriticalSection

; 461  :     rc = TCA6416SetRegMaskedValue(
; 462  :         pDevice->hI2C,
; 463  :         CONFIG_PORT(bank),
; 464  :         (mode & GPIO_DIR_INPUT) ? mask : 0,
; 465  :         mask,
; 466  :         FALSE);

  00048	e3190001	 tst         r9, #1
  0004c	e5980010	 ldr         r0, [r8, #0x10]
  00050	120720ff	 andne       r2, r7, #0xFF
  00054	03a02000	 moveq       r2, #0
  00058	e3a0e000	 mov         lr, #0
  0005c	e20220ff	 and         r2, r2, #0xFF
  00060	e20730ff	 and         r3, r7, #0xFF
  00064	e2841006	 add         r1, r4, #6
  00068	e58de000	 str         lr, [sp]
  0006c	eb000000	 bl          |?TCA6416SetRegMaskedValue@@YAHPAXKEEH@Z|
  00070	e1a05000	 mov         r5, r0

; 467  :     LeaveCriticalSection(&pDevice->bankCs[bank]);

  00074	e0880106	 add         r0, r8, r6, lsl #2
  00078	eb000000	 bl          LeaveCriticalSection
  0007c		 |$cleanUp$37116|

; 468  :         
; 469  : cleanUp:
; 470  :     return rc;
; 471  : }

  0007c	e1a00005	 mov         r0, r5
  00080	e28dd004	 add         sp, sp, #4
  00084	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  00088	e12fff1e	 bx          lr
  0008c		 |$M37741|

			 ENDP  ; |?Tca6416GpioSetMode@@YAHPAXII@Z|, Tca6416GpioSetMode


  00000			 AREA	 |.pdata|, PDATA
|$T37764| DCD	|$LN13@Tca6416Gpi@3|
	DCD	0x40002502
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tca6416GpioGetMode@@YAKPAXI@Z| PROC	; Tca6416GpioGetMode

; 482  : {

  00000		 |$LN13@Tca6416Gpi@3|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M37761|
  00008	e1b08000	 movs        r8, r0

; 483  :     DWORD mode = (DWORD) -1;       
; 484  :     UCHAR config;
; 485  :     int bank = id / NB_PIN_PER_BANK;

  0000c	e1a041a1	 mov         r4, r1, lsr #3

; 486  :     int pin = id - (bank*NB_PIN_PER_BANK);

  00010	e0417184	 sub         r7, r1, r4, lsl #3
  00014	e3e06000	 mvn         r6, #0

; 487  :     UCHAR mask = (UCHAR) (1<<pin);
; 488  : 
; 489  :     TCA6416_DEVICE *pDevice = (TCA6416_DEVICE*)context;
; 490  : 
; 491  :     if ((pDevice == NULL) || (bank >= NB_BANK) || (pin >= NB_PIN_PER_BANK))    

  00018	0a000019	 beq         |$cleanUp$37133|
  0001c	e3540002	 cmp         r4, #2
  00020	aa000017	 bge         |$cleanUp$37133|
  00024	e3570008	 cmp         r7, #8
  00028	aa000015	 bge         |$cleanUp$37133|

; 492  :     {
; 493  :         goto cleanUp;
; 494  :     }    
; 495  :     EnterCriticalSection(&pDevice->bankCs[bank]);

  0002c	e2843002	 add         r3, r4, #2
  00030	e0839103	 add         r9, r3, r3, lsl #2
  00034	e0880109	 add         r0, r8, r9, lsl #2
  00038	eb000000	 bl          EnterCriticalSection

; 496  :     if (TCA6416I2CRead(pDevice->hI2C,CONFIG_PORT(bank),&config,sizeof(config)) == sizeof(config))

  0003c	e5985010	 ldr         r5, [r8, #0x10]
  00040	e3a03001	 mov         r3, #1
  00044	e28d2000	 add         r2, sp, #0
  00048	e1a00005	 mov         r0, r5
  0004c	e2841006	 add         r1, r4, #6
  00050	eb000000	 bl          I2CRead
  00054	e1a04000	 mov         r4, r0
  00058	e1a00005	 mov         r0, r5
  0005c	eb000000	 bl          |?SendExtraSCLCycle@@YAXPAX@Z|
  00060	e3540001	 cmp         r4, #1
  00064	1a000004	 bne         |$LN1@Tca6416Gpi@3|

; 497  :     {
; 498  :         if (config & mask)

  00068	e5dd3000	 ldrb        r3, [sp]
  0006c	e3a02001	 mov         r2, #1
  00070	e1130712	 tst         r3, r2, lsl r7

; 499  :         {
; 500  :             mode = GPIO_DIR_INPUT;

  00074	13a06001	 movne       r6, #1

; 501  :         }
; 502  :         else
; 503  :         {
; 504  :             mode = GPIO_DIR_OUTPUT;

  00078	03a06000	 moveq       r6, #0
  0007c		 |$LN1@Tca6416Gpi@3|

; 505  :         }
; 506  :     }
; 507  :     LeaveCriticalSection(&pDevice->bankCs[bank]);

  0007c	e0880109	 add         r0, r8, r9, lsl #2
  00080	eb000000	 bl          LeaveCriticalSection
  00084		 |$cleanUp$37133|

; 508  : cleanUp:
; 509  :     return mode;
; 510  : }

  00084	e1a00006	 mov         r0, r6
  00088	e28dd004	 add         sp, sp, #4
  0008c	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  00090	e12fff1e	 bx          lr
  00094		 |$M37762|

			 ENDP  ; |?Tca6416GpioGetMode@@YAKPAXI@Z|, Tca6416GpioGetMode


  00000			 AREA	 |.pdata|, PDATA
|$T37773| DCD	|$LN7@Tca6416Gpi@4|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tca6416GpioPullup@@YAHPAXII@Z| PROC	; Tca6416GpioPullup

; 525  : {

  00000		 |$LN7@Tca6416Gpi@4|
  00000		 |$M37770|
  00000		 |$cleanUp$37145|

; 526  :     BOOL    rc = FALSE;
; 527  :     if (context == NULL)
; 528  :     {
; 529  :         goto cleanUp;
; 530  :     }  
; 531  :     UNREFERENCED_PARAMETER(context);
; 532  :     UNREFERENCED_PARAMETER(id);
; 533  :     UNREFERENCED_PARAMETER(enable);
; 534  : 
; 535  :     //Not available on the TCA6416
; 536  : 
; 537  : cleanUp:
; 538  :     return rc;

  00000	e3a00000	 mov         r0, #0

; 539  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M37771|

			 ENDP  ; |?Tca6416GpioPullup@@YAHPAXII@Z|, Tca6416GpioPullup


  00000			 AREA	 |.pdata|, PDATA
|$T37782| DCD	|$LN7@Tca6416Gpi@5|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tca6416GpioPulldown@@YAHPAXII@Z| PROC ; Tca6416GpioPulldown

; 552  : {

  00000		 |$LN7@Tca6416Gpi@5|
  00000		 |$M37779|
  00000		 |$cleanUp$37154|

; 553  :     BOOL    rc = FALSE;
; 554  :     if (context == NULL)
; 555  :     {
; 556  :         goto cleanUp;
; 557  :     }  
; 558  :     UNREFERENCED_PARAMETER(context);
; 559  :     UNREFERENCED_PARAMETER(id);
; 560  :     UNREFERENCED_PARAMETER(enable);
; 561  : 
; 562  :     //Not available on the TCA6416
; 563  : 
; 564  : cleanUp:
; 565  :     return rc;

  00000	e3a00000	 mov         r0, #0

; 566  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M37780|

			 ENDP  ; |?Tca6416GpioPulldown@@YAHPAXII@Z|, Tca6416GpioPulldown

	EXPORT	|?Tca6416GpioInterruptDone@@YAHPAXI@Z|	; Tca6416GpioInterruptDone

  00000			 AREA	 |.pdata|, PDATA
|$T37791| DCD	|$LN7@Tca6416Gpi@6|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tca6416GpioInterruptDone@@YAHPAXI@Z| PROC ; Tca6416GpioInterruptDone

; 577  : {

  00000		 |$LN7@Tca6416Gpi@6|
  00000		 |$M37788|
  00000		 |$cleanUp$37163|

; 578  :     BOOL    rc = FALSE;
; 579  :     if (context == NULL)
; 580  :     {
; 581  :         goto cleanUp;
; 582  :     }  
; 583  :     UNREFERENCED_PARAMETER(context);
; 584  :     UNREFERENCED_PARAMETER(intrId); 
; 585  : cleanUp:
; 586  :     return rc;   

  00000	e3a00000	 mov         r0, #0

; 587  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M37789|

			 ENDP  ; |?Tca6416GpioInterruptDone@@YAHPAXI@Z|, Tca6416GpioInterruptDone

	EXPORT	|?Tca6416GpioInterruptDisable@@YAHPAXI@Z| ; Tca6416GpioInterruptDisable

  00000			 AREA	 |.pdata|, PDATA
|$T37800| DCD	|$LN7@Tca6416Gpi@7|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tca6416GpioInterruptDisable@@YAHPAXI@Z| PROC ; Tca6416GpioInterruptDisable

; 599  : {

  00000		 |$LN7@Tca6416Gpi@7|
  00000		 |$M37797|
  00000		 |$cleanUp$37172|

; 600  :     BOOL    rc = FALSE;
; 601  :     if (context == NULL)
; 602  :     {
; 603  :         goto cleanUp;
; 604  :     }  
; 605  :     UNREFERENCED_PARAMETER(context);
; 606  :     UNREFERENCED_PARAMETER(intrId); 
; 607  : cleanUp:
; 608  :     return rc;   

  00000	e3a00000	 mov         r0, #0

; 609  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M37798|

			 ENDP  ; |?Tca6416GpioInterruptDisable@@YAHPAXI@Z|, Tca6416GpioInterruptDisable


  00000			 AREA	 |.pdata|, PDATA
|$T37815| DCD	|$LN8@Tca6416Gpi@8|
	DCD	0x40001f02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tca6416GpioSetBit@@YAHPAXI@Z| PROC	; Tca6416GpioSetBit

; 622  : {

  00000		 |$LN8@Tca6416Gpi@8|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M37812|
  00008	e1b06000	 movs        r6, r0

; 623  :     BOOL rc = FALSE;
; 624  :     int bank = id / NB_PIN_PER_BANK;

  0000c	e1a031a1	 mov         r3, r1, lsr #3

; 625  :     int pin = id - (bank*NB_PIN_PER_BANK);

  00010	e0412183	 sub         r2, r1, r3, lsl #3

; 626  :     UCHAR mask = (UCHAR) (1<<pin);

  00014	e3a01001	 mov         r1, #1
  00018	e1a07211	 mov         r7, r1, lsl r2
  0001c	e3a04000	 mov         r4, #0

; 627  : 
; 628  :     TCA6416_DEVICE *pDevice = (TCA6416_DEVICE*)context;
; 629  : 
; 630  :     if ((pDevice == NULL) || (bank >= NB_BANK) || (pin >= NB_PIN_PER_BANK))    

  00020	0a000011	 beq         |$cleanUp$37187|
  00024	e3530002	 cmp         r3, #2
  00028	aa00000f	 bge         |$cleanUp$37187|
  0002c	e3520008	 cmp         r2, #8
  00030	aa00000d	 bge         |$cleanUp$37187|

; 631  :     {
; 632  :         goto cleanUp;
; 633  :     }    
; 634  :     
; 635  :     EnterCriticalSection(&pDevice->bankCs[bank]);

  00034	e2834002	 add         r4, r3, #2
  00038	e0845104	 add         r5, r4, r4, lsl #2
  0003c	e0860105	 add         r0, r6, r5, lsl #2
  00040	eb000000	 bl          EnterCriticalSection

; 636  :     rc = TCA6416SetRegMaskedValue(
; 637  :         pDevice->hI2C,
; 638  :         OUTPUT_PORT(bank),
; 639  :         mask,
; 640  :         mask,
; 641  :         FALSE);

  00044	e5960010	 ldr         r0, [r6, #0x10]
  00048	e3a0e000	 mov         lr, #0
  0004c	e20730ff	 and         r3, r7, #0xFF
  00050	e20720ff	 and         r2, r7, #0xFF
  00054	e1a01004	 mov         r1, r4
  00058	e58de000	 str         lr, [sp]
  0005c	eb000000	 bl          |?TCA6416SetRegMaskedValue@@YAHPAXKEEH@Z|
  00060	e1a04000	 mov         r4, r0

; 642  :     LeaveCriticalSection(&pDevice->bankCs[bank]);

  00064	e0860105	 add         r0, r6, r5, lsl #2
  00068	eb000000	 bl          LeaveCriticalSection
  0006c		 |$cleanUp$37187|

; 643  : 
; 644  : cleanUp:
; 645  :     return rc;   
; 646  : }

  0006c	e1a00004	 mov         r0, r4
  00070	e28dd004	 add         sp, sp, #4
  00074	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00078	e12fff1e	 bx          lr
  0007c		 |$M37813|

			 ENDP  ; |?Tca6416GpioSetBit@@YAHPAXI@Z|, Tca6416GpioSetBit


  00000			 AREA	 |.pdata|, PDATA
|$T37829| DCD	|$LN8@Tca6416Gpi@9|
	DCD	0x40001f02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tca6416GpioClrBit@@YAHPAXI@Z| PROC	; Tca6416GpioClrBit

; 657  : {

  00000		 |$LN8@Tca6416Gpi@9|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M37826|
  00008	e1b07000	 movs        r7, r0

; 658  :     BOOL rc = FALSE;
; 659  :     int bank = id / NB_PIN_PER_BANK;

  0000c	e1a031a1	 mov         r3, r1, lsr #3

; 660  :     int pin = id - (bank*NB_PIN_PER_BANK);

  00010	e0416183	 sub         r6, r1, r3, lsl #3
  00014	e3a04000	 mov         r4, #0

; 661  :     UCHAR mask = (UCHAR) (1<<pin);
; 662  : 
; 663  :     TCA6416_DEVICE *pDevice = (TCA6416_DEVICE*)context;
; 664  : 
; 665  :     if ((pDevice == NULL) || (bank >= NB_BANK) || (pin >= NB_PIN_PER_BANK))    

  00018	0a000013	 beq         |$cleanUp$37202|
  0001c	e3530002	 cmp         r3, #2
  00020	aa000011	 bge         |$cleanUp$37202|
  00024	e3560008	 cmp         r6, #8
  00028	aa00000f	 bge         |$cleanUp$37202|

; 666  :     {
; 667  :         goto cleanUp;
; 668  :     }    
; 669  :     
; 670  :     EnterCriticalSection(&pDevice->bankCs[bank]);

  0002c	e2834002	 add         r4, r3, #2
  00030	e0845104	 add         r5, r4, r4, lsl #2
  00034	e0870105	 add         r0, r7, r5, lsl #2
  00038	eb000000	 bl          EnterCriticalSection
  0003c	e3a03001	 mov         r3, #1

; 671  :     rc = TCA6416SetRegMaskedValue(
; 672  :         pDevice->hI2C,
; 673  :         OUTPUT_PORT(bank),
; 674  :         0,
; 675  :         mask,
; 676  :         FALSE);

  00040	e5970010	 ldr         r0, [r7, #0x10]
  00044	e1a03613	 mov         r3, r3, lsl r6
  00048	e3a0e000	 mov         lr, #0
  0004c	e20330ff	 and         r3, r3, #0xFF
  00050	e3a02000	 mov         r2, #0
  00054	e1a01004	 mov         r1, r4
  00058	e58de000	 str         lr, [sp]
  0005c	eb000000	 bl          |?TCA6416SetRegMaskedValue@@YAHPAXKEEH@Z|
  00060	e1a04000	 mov         r4, r0

; 677  :     LeaveCriticalSection(&pDevice->bankCs[bank]);

  00064	e0870105	 add         r0, r7, r5, lsl #2
  00068	eb000000	 bl          LeaveCriticalSection
  0006c		 |$cleanUp$37202|

; 678  : 
; 679  : cleanUp:
; 680  :     return rc;
; 681  : }

  0006c	e1a00004	 mov         r0, r4
  00070	e28dd004	 add         sp, sp, #4
  00074	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00078	e12fff1e	 bx          lr
  0007c		 |$M37827|

			 ENDP  ; |?Tca6416GpioClrBit@@YAHPAXI@Z|, Tca6416GpioClrBit


  00000			 AREA	 |.pdata|, PDATA
|$T37850| DCD	|$LN13@Tca6416Gpi@10|
	DCD	0x40001f02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tca6416GpioGetBit@@YAKPAXI@Z| PROC	; Tca6416GpioGetBit

; 692  : {

  00000		 |$LN13@Tca6416Gpi@10|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M37847|
  00008	e3500000	 cmp         r0, #0

; 693  :     DWORD value = (DWORD) -1;
; 694  :     UCHAR input;
; 695  :     int bank = id / NB_PIN_PER_BANK;

  0000c	e1a0e1a1	 mov         lr, r1, lsr #3

; 696  :     int pin = id - (bank*NB_PIN_PER_BANK);

  00010	e041718e	 sub         r7, r1, lr, lsl #3
  00014	e3e06000	 mvn         r6, #0

; 697  : 
; 698  :     TCA6416_DEVICE *pDevice = (TCA6416_DEVICE*)context;
; 699  : 
; 700  :     if ((pDevice == NULL) || (bank >= NB_BANK) || (pin >= NB_PIN_PER_BANK))    

  00018	0a000013	 beq         |$cleanUp$37217|
  0001c	e35e0002	 cmp         lr, #2
  00020	aa000011	 bge         |$cleanUp$37217|
  00024	e3570008	 cmp         r7, #8
  00028	aa00000f	 bge         |$cleanUp$37217|

; 701  :     {
; 702  :         goto cleanUp;
; 703  :     }        
; 704  :     if (TCA6416I2CRead(pDevice->hI2C,INPUT_PORT(bank),&input,sizeof(input)) == sizeof(input))

  0002c	e5905010	 ldr         r5, [r0, #0x10]
  00030	e3a03001	 mov         r3, #1
  00034	e28d2000	 add         r2, sp, #0
  00038	e1a00005	 mov         r0, r5
  0003c	e1a0100e	 mov         r1, lr
  00040	eb000000	 bl          I2CRead
  00044	e1a04000	 mov         r4, r0
  00048	e1a00005	 mov         r0, r5
  0004c	eb000000	 bl          |?SendExtraSCLCycle@@YAXPAX@Z|
  00050	e3540001	 cmp         r4, #1
  00054	1a000004	 bne         |$cleanUp$37217|

; 705  :     {
; 706  :         if (input & (1<<pin))

  00058	e5dd3000	 ldrb        r3, [sp]
  0005c	e3a02001	 mov         r2, #1
  00060	e1130712	 tst         r3, r2, lsl r7

; 707  :         {
; 708  :             value = 1;

  00064	13a06001	 movne       r6, #1

; 709  :         }
; 710  :         else
; 711  :         {
; 712  :             value = 0;

  00068	03a06000	 moveq       r6, #0
  0006c		 |$cleanUp$37217|

; 713  :         }
; 714  :     }    
; 715  : 
; 716  : cleanUp:
; 717  :     return value;
; 718  : }

  0006c	e1a00006	 mov         r0, r6
  00070	e28dd004	 add         sp, sp, #4
  00074	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00078	e12fff1e	 bx          lr
  0007c		 |$M37848|

			 ENDP  ; |?Tca6416GpioGetBit@@YAKPAXI@Z|, Tca6416GpioGetBit


  00000			 AREA	 |.pdata|, PDATA
|$T37857| DCD	|$LN5@Tca6416Gpi@11|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tca6416GpioPowerUp@@YAXPAX@Z| PROC	; Tca6416GpioPowerUp

; 951  : {

  00000		 |$LN5@Tca6416Gpi@11|
  00000		 |$M37854|

; 952  :     UNREFERENCED_PARAMETER(hContext);
; 953  : }

  00000	e12fff1e	 bx          lr
  00004		 |$M37855|

			 ENDP  ; |?Tca6416GpioPowerUp@@YAXPAX@Z|, Tca6416GpioPowerUp


  00000			 AREA	 |.pdata|, PDATA
|$T37864| DCD	|$LN5@Tca6416Gpi@12|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tca6416GpioPowerDown@@YAXPAX@Z| PROC	; Tca6416GpioPowerDown

; 965  : {

  00000		 |$LN5@Tca6416Gpi@12|
  00000		 |$M37861|

; 966  :     UNREFERENCED_PARAMETER(hContext);
; 967  : }

  00000	e12fff1e	 bx          lr
  00004		 |$M37862|

			 ENDP  ; |?Tca6416GpioPowerDown@@YAXPAX@Z|, Tca6416GpioPowerDown


  00000			 AREA	 |.pdata|, PDATA
|$T37873| DCD	|$LN5@Tca6416Gpi@13|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tca6416GpioGetSystemIrq@@YAKPAXI@Z| PROC ; Tca6416GpioGetSystemIrq

; 970  : {

  00000		 |$LN5@Tca6416Gpi@13|
  00000		 |$M37870|

; 971  :     UNREFERENCED_PARAMETER(hContext);
; 972  :     UNREFERENCED_PARAMETER(id);
; 973  :     return (DWORD) SYSINTR_UNDEFINED;

  00000	e3e00000	 mvn         r0, #0

; 974  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M37871|

			 ENDP  ; |?Tca6416GpioGetSystemIrq@@YAKPAXI@Z|, Tca6416GpioGetSystemIrq

	IMPORT	|ResumeThread|
	IMPORT	|GPIOInterruptInitialize|
	IMPORT	|GPIOOpen|
	IMPORT	|CreateThread|
	IMPORT	|CreateEventW|

  00000			 AREA	 |.pdata|, PDATA
|$T37888| DCD	|$LN18@Tca6416Gpi@14|
	DCD	0x40005c02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tca6416GpioInterruptInitialize@@YAHPAXKPAK0@Z| PROC ; Tca6416GpioInterruptInitialize

; 982  : {

  00000		 |$LN18@Tca6416Gpi@14|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M37885|
  00008	e1a0a003	 mov         r10, r3
  0000c	e1a07002	 mov         r7, r2
  00010	e1a06001	 mov         r6, r1
  00014	e1b04000	 movs        r4, r0

; 983  :     int bank = id / NB_PIN_PER_BANK;

  00018	e1a051a6	 mov         r5, r6, lsr #3

; 984  :     int pin = id - (bank*NB_PIN_PER_BANK);

  0001c	e0469185	 sub         r9, r6, r5, lsl #3

; 985  :     TCA6416_DEVICE *pDevice = (TCA6416_DEVICE*)hContext;
; 986  : 
; 987  :     if ((hContext == NULL) || (sysintr==NULL) || (hEvent==NULL) || (bank >= NB_BANK) || (pin >= NB_PIN_PER_BANK))

  00020	0a00004d	 beq         |$cleanUp$37342|
  00024	e3570000	 cmp         r7, #0
  00028	0a00004b	 beq         |$cleanUp$37342|
  0002c	e35a0000	 cmp         r10, #0
  00030	0a000049	 beq         |$cleanUp$37342|
  00034	e3550002	 cmp         r5, #2
  00038	aa000047	 bge         |$cleanUp$37342|
  0003c	e3590008	 cmp         r9, #8
  00040	aa000045	 bge         |$cleanUp$37342|

; 988  :     {
; 989  :         goto cleanUp;
; 990  :     }
; 991  :     // if needed start the thread (done once only)
; 992  :     if ((pDevice->dwSysintr == SYSINTR_UNDEFINED) && (pDevice->IntrGpio != (DWORD)-1))

  00044	e594e018	 ldr         lr, [r4, #0x18]
  00048	e37e0001	 cmn         lr, #1
  0004c	1a000024	 bne         |$LN10@Tca6416Gpi@14|
  00050	e594300c	 ldr         r3, [r4, #0xC]
  00054	e3730001	 cmn         r3, #1
  00058	0a000021	 beq         |$LN10@Tca6416Gpi@14|

; 993  :     {
; 994  :         pDevice->dwSysintr = (DWORD) SYSINTR_UNDEFINED;

  0005c	e3e03000	 mvn         r3, #0
  00060	e5843018	 str         r3, [r4, #0x18]

; 995  :         pDevice->hIntrEvent = CreateEvent(NULL,FALSE,FALSE,NULL);

  00064	e3a03000	 mov         r3, #0
  00068	e3a02000	 mov         r2, #0
  0006c	e3a01000	 mov         r1, #0
  00070	e3a00000	 mov         r0, #0
  00074	eb000000	 bl          CreateEventW
  00078	e3500000	 cmp         r0, #0
  0007c	e584001c	 str         r0, [r4, #0x1C]

; 996  :         if (pDevice->hIntrEvent == NULL)

  00080	0a000035	 beq         |$cleanUp$37342|

; 997  :         {
; 998  :             goto cleanUp;
; 999  :         }
; 1000 :         pDevice->hIntrthread = CreateThread(NULL,0,IST,pDevice,CREATE_SUSPENDED,NULL);

  00084	e59f20e0	 ldr         r2, [pc, #0xE0]
  00088	e3a0e000	 mov         lr, #0
  0008c	e3a08004	 mov         r8, #4
  00090	e1a03004	 mov         r3, r4
  00094	e3a01000	 mov         r1, #0
  00098	e3a00000	 mov         r0, #0
  0009c	e58de004	 str         lr, [sp, #4]
  000a0	e58d8000	 str         r8, [sp]
  000a4	eb000000	 bl          CreateThread
  000a8	e3500000	 cmp         r0, #0
  000ac	e5840020	 str         r0, [r4, #0x20]

; 1001 :         if (pDevice->hIntrthread == NULL)

  000b0	0a000029	 beq         |$cleanUp$37342|

; 1002 :         {
; 1003 :             goto cleanUp;
; 1004 :         }
; 1005 :         pDevice->hGpio = GPIOOpen();

  000b4	eb000000	 bl          GPIOOpen
  000b8	e3500000	 cmp         r0, #0
  000bc	e5840014	 str         r0, [r4, #0x14]

; 1006 :         if (pDevice->hGpio == NULL)

  000c0	0a000025	 beq         |$cleanUp$37342|

; 1007 :         {
; 1008 :             goto cleanUp;
; 1009 :         }
; 1010 :         if (GPIOInterruptInitialize(pDevice->hGpio,pDevice->IntrGpio,&pDevice->dwSysintr,pDevice->hIntrEvent)== FALSE)

  000c4	e594301c	 ldr         r3, [r4, #0x1C]
  000c8	e594100c	 ldr         r1, [r4, #0xC]
  000cc	e2842018	 add         r2, r4, #0x18
  000d0	eb000000	 bl          GPIOInterruptInitialize
  000d4	e3500000	 cmp         r0, #0
  000d8	0a00001f	 beq         |$cleanUp$37342|

; 1011 :         {
; 1012 :             goto cleanUp;
; 1013 :         }
; 1014 :         ResumeThread(pDevice->hIntrthread);

  000dc	e5940020	 ldr         r0, [r4, #0x20]
  000e0	eb000000	 bl          ResumeThread
  000e4		 |$LN10@Tca6416Gpi@14|

; 1015 :     }
; 1016 : 
; 1017 : 
; 1018 :     EnterCriticalSection(&pDevice->bankCs[bank]);

  000e4	e2853002	 add         r3, r5, #2
  000e8	e0838103	 add         r8, r3, r3, lsl #2
  000ec	e0840108	 add         r0, r4, r8, lsl #2
  000f0	eb000000	 bl          EnterCriticalSection

; 1019 :     pDevice->hPinEvent[bank][pin] = hEvent;

  000f4	e0893185	 add         r3, r9, r5, lsl #3
  000f8	e0843103	 add         r3, r4, r3, lsl #2

; 1020 :     pDevice->intMask[bank] |= (UCHAR) (1<<pin);

  000fc	e0852004	 add         r2, r5, r4
  00100	e583a06c	 str         r10, [r3, #0x6C]
  00104	e5d23068	 ldrb        r3, [r2, #0x68]
  00108	e3a01001	 mov         r1, #1
  0010c	e1833911	 orr         r3, r3, r1, lsl r9
  00110	e5c23068	 strb        r3, [r2, #0x68]

; 1021 :     pDevice->enabledIntCount++;

  00114	e59430ac	 ldr         r3, [r4, #0xAC]
  00118	e2833001	 add         r3, r3, #1

; 1022 :     if (pDevice->enabledIntCount > 0)

  0011c	e3530000	 cmp         r3, #0

; 1023 :     {
; 1024 :         GPIOInterruptMask(pDevice->hGpio, pDevice->IntrGpio,pDevice->dwSysintr,FALSE);

  00120	c5942018	 ldrgt       r2, [r4, #0x18]
  00124	c594100c	 ldrgt       r1, [r4, #0xC]
  00128	c5940014	 ldrgt       r0, [r4, #0x14]
  0012c	e58430ac	 str         r3, [r4, #0xAC]
  00130	c3a03000	 movgt       r3, #0
  00134	cb000000	 blgt        GPIOInterruptMask

; 1025 :     }
; 1026 :     LeaveCriticalSection(&pDevice->bankCs[bank]);

  00138	e0840108	 add         r0, r4, r8, lsl #2
  0013c	eb000000	 bl          LeaveCriticalSection

; 1027 :     // compute a fake sysintr (unique for each pin)
; 1028 :     *sysintr = (pDevice->I2CAddr << 16) | (pDevice->I2CBusIndex << 8) | id;

  00140	e5942004	 ldr         r2, [r4, #4]
  00144	e5943000	 ldr         r3, [r4]

; 1029 :         
; 1030 : 
; 1031 :     
; 1032 :     return TRUE;

  00148	e3a00001	 mov         r0, #1
  0014c	e1833402	 orr         r3, r3, r2, lsl #8
  00150	e1863403	 orr         r3, r6, r3, lsl #8
  00154	e5873000	 str         r3, [r7]
  00158	ea000000	 b           |$LN14@Tca6416Gpi@14|
  0015c		 |$cleanUp$37342|

; 1033 : 
; 1034 : cleanUp:
; 1035 :     return FALSE;

  0015c	e3a00000	 mov         r0, #0
  00160		 |$LN14@Tca6416Gpi@14|

; 1036 : }

  00160	e28dd008	 add         sp, sp, #8
  00164	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  00168	e12fff1e	 bx          lr
  0016c		 |$LN19@Tca6416Gpi@14|
  0016c		 |$LN20@Tca6416Gpi@14|
  0016c	00000000	 DCD         |?IST@@YAKPAX@Z|
  00170		 |$M37886|

			 ENDP  ; |?Tca6416GpioInterruptInitialize@@YAHPAXKPAK0@Z|, Tca6416GpioInterruptInitialize


  00000			 AREA	 |.pdata|, PDATA
|$T37903| DCD	|$LN13@Tca6416Gpi@15|
	DCD	0x40002b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tca6416GpioInterruptMask@@YAXPAXKKH@Z| PROC ; Tca6416GpioInterruptMask

; 1044 : {    

  00000		 |$LN13@Tca6416Gpi@15|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M37900|
  00004	e1a08003	 mov         r8, r3
  00008	e1b04000	 movs        r4, r0

; 1045 :     int bank = id / NB_PIN_PER_BANK;

  0000c	e1a051a1	 mov         r5, r1, lsr #3

; 1046 :     int pin = id - (bank*NB_PIN_PER_BANK);

  00010	e0417185	 sub         r7, r1, r5, lsl #3

; 1047 :     TCA6416_DEVICE *pDevice = (TCA6416_DEVICE*)hContext;
; 1048 : 
; 1049 :     UNREFERENCED_PARAMETER(sysintr);
; 1050 : 
; 1051 :     if ((hContext == NULL) || (bank >= NB_BANK) || (pin >= NB_PIN_PER_BANK))

  00014	0a000022	 beq         |$cleanUp$37369|
  00018	e3550002	 cmp         r5, #2
  0001c	aa000020	 bge         |$cleanUp$37369|
  00020	e3570008	 cmp         r7, #8
  00024	aa00001e	 bge         |$cleanUp$37369|

; 1052 :     {
; 1053 :         goto cleanUp;
; 1054 :     }     
; 1055 : 
; 1056 :     EnterCriticalSection(&pDevice->bankCs[bank]);    

  00028	e2852002	 add         r2, r5, #2
  0002c	e0826102	 add         r6, r2, r2, lsl #2
  00030	e0840106	 add         r0, r4, r6, lsl #2
  00034	eb000000	 bl          EnterCriticalSection

; 1057 :     if (fDisable)
; 1058 :     {
; 1059 :         pDevice->intMask[bank] &= (UCHAR) (~(1<<pin));

  00038	e0852004	 add         r2, r5, r4
  0003c	e5d23068	 ldrb        r3, [r2, #0x68]
  00040	e3580000	 cmp         r8, #0
  00044	e3a01001	 mov         r1, #1
  00048	0a000007	 beq         |$LN4@Tca6416Gpi@15|
  0004c	e1c33711	 bic         r3, r3, r1, lsl r7
  00050	e5c23068	 strb        r3, [r2, #0x68]

; 1060 :         pDevice->enabledIntCount--;

  00054	e59430ac	 ldr         r3, [r4, #0xAC]
  00058	e2533001	 subs        r3, r3, #1
  0005c	e58430ac	 str         r3, [r4, #0xAC]

; 1061 :         if (pDevice->enabledIntCount == 0)

  00060	1a00000d	 bne         |$LN1@Tca6416Gpi@15|

; 1062 :         {
; 1063 :             GPIOInterruptMask(pDevice->hGpio, pDevice->IntrGpio,pDevice->dwSysintr,TRUE);

  00064	e3a03001	 mov         r3, #1

; 1064 :         }
; 1065 :     }
; 1066 :     else

  00068	ea000007	 b           |$LN10@Tca6416Gpi@15|
  0006c		 |$LN4@Tca6416Gpi@15|

; 1067 :     {
; 1068 :         pDevice->intMask[bank] |= (UCHAR) (1<<pin);

  0006c	e1833711	 orr         r3, r3, r1, lsl r7
  00070	e5c23068	 strb        r3, [r2, #0x68]

; 1069 :         pDevice->enabledIntCount++;

  00074	e59430ac	 ldr         r3, [r4, #0xAC]
  00078	e2833001	 add         r3, r3, #1
  0007c	e58430ac	 str         r3, [r4, #0xAC]

; 1070 :         if (pDevice->enabledIntCount > 0)

  00080	e3530000	 cmp         r3, #0
  00084	da000004	 ble         |$LN1@Tca6416Gpi@15|

; 1071 :         {
; 1072 :             GPIOInterruptMask(pDevice->hGpio, pDevice->IntrGpio,pDevice->dwSysintr,FALSE);

  00088	e3a03000	 mov         r3, #0
  0008c		 |$LN10@Tca6416Gpi@15|
  0008c	e5942018	 ldr         r2, [r4, #0x18]
  00090	e594100c	 ldr         r1, [r4, #0xC]
  00094	e5940014	 ldr         r0, [r4, #0x14]
  00098	eb000000	 bl          GPIOInterruptMask
  0009c		 |$LN1@Tca6416Gpi@15|

; 1073 :         }
; 1074 :     }
; 1075 :     LeaveCriticalSection(&pDevice->bankCs[bank]);

  0009c	e0840106	 add         r0, r4, r6, lsl #2
  000a0	eb000000	 bl          LeaveCriticalSection
  000a4		 |$cleanUp$37369|

; 1076 : 
; 1077 : cleanUp:
; 1078 :     return;
; 1079 : }

  000a4	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  000a8	e12fff1e	 bx          lr
  000ac		 |$M37901|

			 ENDP  ; |?Tca6416GpioInterruptMask@@YAXPAXKKH@Z|, Tca6416GpioInterruptMask


  00000			 AREA	 |.pdata|, PDATA
|$T37914| DCD	|$LN8@Tca6416Gpi@16|
	DCD	0x40001a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tca6416GpioInterruptDisable@@YAXPAXKK@Z| PROC ; Tca6416GpioInterruptDisable

; 1087 : {

  00000		 |$LN8@Tca6416Gpi@16|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M37911|
  00004	e1b07000	 movs        r7, r0

; 1088 :     int bank = id / NB_PIN_PER_BANK;

  00008	e1a051a1	 mov         r5, r1, lsr #3

; 1089 :     int pin = id - (bank*NB_PIN_PER_BANK);

  0000c	e0416185	 sub         r6, r1, r5, lsl #3

; 1090 :     TCA6416_DEVICE *pDevice = (TCA6416_DEVICE*)hContext;
; 1091 : 
; 1092 :     UNREFERENCED_PARAMETER(sysintr);
; 1093 : 
; 1094 :     if ((hContext == NULL) || (bank >= NB_BANK) || (pin >= NB_PIN_PER_BANK))

  00010	0a000012	 beq         |$cleanUp$37388|
  00014	e3550002	 cmp         r5, #2
  00018	aa000010	 bge         |$cleanUp$37388|
  0001c	e3560008	 cmp         r6, #8
  00020	aa00000e	 bge         |$cleanUp$37388|

; 1095 :     {
; 1096 :         goto cleanUp;
; 1097 :     }     
; 1098 : 
; 1099 :     EnterCriticalSection(&pDevice->bankCs[bank]);

  00024	e2853002	 add         r3, r5, #2
  00028	e0834103	 add         r4, r3, r3, lsl #2
  0002c	e0870104	 add         r0, r7, r4, lsl #2
  00030	eb000000	 bl          EnterCriticalSection

; 1100 :     pDevice->hPinEvent[bank][pin] = NULL;

  00034	e0863185	 add         r3, r6, r5, lsl #3
  00038	e0873103	 add         r3, r7, r3, lsl #2
  0003c	e3a02000	 mov         r2, #0
  00040	e583206c	 str         r2, [r3, #0x6C]

; 1101 :     pDevice->intMask[bank] &= (UCHAR) ~(1<<pin);

  00044	e0852007	 add         r2, r5, r7
  00048	e5d23068	 ldrb        r3, [r2, #0x68]
  0004c	e3a01001	 mov         r1, #1

; 1102 :     LeaveCriticalSection(&pDevice->bankCs[bank]);

  00050	e0870104	 add         r0, r7, r4, lsl #2
  00054	e1c33611	 bic         r3, r3, r1, lsl r6
  00058	e5c23068	 strb        r3, [r2, #0x68]
  0005c	eb000000	 bl          LeaveCriticalSection
  00060		 |$cleanUp$37388|

; 1103 : 
; 1104 : cleanUp:
; 1105 :     return;
; 1106 : }

  00060	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00064	e12fff1e	 bx          lr
  00068		 |$M37912|

			 ENDP  ; |?Tca6416GpioInterruptDisable@@YAXPAXKK@Z|, Tca6416GpioInterruptDisable


  00000			 AREA	 |.pdata|, PDATA
|$T37924| DCD	|$LN5@Tca6416Gpi@17|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tca6416GpioInterruptDone@@YAXPAXKK@Z| PROC ; Tca6416GpioInterruptDone

; 1114 : {

  00000		 |$LN5@Tca6416Gpi@17|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37921|

; 1115 :     Tca6416GpioInterruptMask(hContext,id, sysintr,FALSE);

  00004	e3a03000	 mov         r3, #0
  00008	eb000000	 bl          |?Tca6416GpioInterruptMask@@YAXPAXKKH@Z|

; 1116 : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M37922|

			 ENDP  ; |?Tca6416GpioInterruptDone@@YAXPAXKK@Z|, Tca6416GpioInterruptDone

	IMPORT	|GPIOInterruptWakeUp|

  00000			 AREA	 |.pdata|, PDATA
|$T37940| DCD	|$LN14@Tca6416Gpi@18|
	DCD	0x40002301
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tca6416GpioInterruptWakeUp@@YAHPAXKKH@Z| PROC ; Tca6416GpioInterruptWakeUp

; 1130 : {    

  00000		 |$LN14@Tca6416Gpi@18|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M37937|
  00004	e1a04003	 mov         r4, r3
  00008	e1a05000	 mov         r5, r0

; 1131 :     TCA6416_DEVICE *pDevice = (TCA6416_DEVICE*)hContext;
; 1132 :     int oldCounter = pDevice->wakeupStateCounter;
; 1133 :     BOOL rc = TRUE;
; 1134 : 
; 1135 :     UNREFERENCED_PARAMETER(sysintr);
; 1136 :     UNREFERENCED_PARAMETER(id);
; 1137 : 
; 1138 :     EnterCriticalSection(&pDevice->wakeupStateCs);

  0000c	e5957064	 ldr         r7, [r5, #0x64]
  00010	e2850050	 add         r0, r5, #0x50
  00014	e3a06001	 mov         r6, #1
  00018	eb000000	 bl          EnterCriticalSection

; 1139 :     
; 1140 :     if (fEnable)
; 1141 :         pDevice->wakeupStateCounter++;

  0001c	e5953064	 ldr         r3, [r5, #0x64]
  00020	e3540000	 cmp         r4, #0
  00024	12833001	 addne       r3, r3, #1

; 1142 :     else
; 1143 :         pDevice->wakeupStateCounter--;

  00028	02433001	 subeq       r3, r3, #1

; 1144 : 
; 1145 :     if (pDevice->wakeupStateCounter < 0)

  0002c	e3530000	 cmp         r3, #0
  00030	e5853064	 str         r3, [r5, #0x64]

; 1146 :     {
; 1147 :         pDevice->wakeupStateCounter = 0;

  00034	b3a03000	 movlt       r3, #0
  00038	b5853064	 strlt       r3, [r5, #0x64]

; 1148 :     }
; 1149 : 
; 1150 :     if ((oldCounter>0) && (pDevice->wakeupStateCounter == 0))

  0003c	e5953064	 ldr         r3, [r5, #0x64]
  00040	e3570000	 cmp         r7, #0
  00044	da000003	 ble         |$LN9@Tca6416Gpi@18|
  00048	e3530000	 cmp         r3, #0
  0004c	1a000009	 bne         |$LN1@Tca6416Gpi@18|

; 1151 :     {
; 1152 :         rc = GPIOInterruptWakeUp(pDevice->hGpio, pDevice->IntrGpio, pDevice->dwSysintr,FALSE);     

  00050	e3a03000	 mov         r3, #0
  00054	ea000002	 b           |$LN11@Tca6416Gpi@18|
  00058		 |$LN9@Tca6416Gpi@18|

; 1153 :     }
; 1154 :     else if ((oldCounter<=0) && (pDevice->wakeupStateCounter > 0))

  00058	e3530000	 cmp         r3, #0
  0005c	da000005	 ble         |$LN1@Tca6416Gpi@18|

; 1155 :     {
; 1156 :         rc = GPIOInterruptWakeUp(pDevice->hGpio, pDevice->IntrGpio, pDevice->dwSysintr,TRUE);     

  00060	e3a03001	 mov         r3, #1
  00064		 |$LN11@Tca6416Gpi@18|
  00064	e5952018	 ldr         r2, [r5, #0x18]
  00068	e595100c	 ldr         r1, [r5, #0xC]
  0006c	e5950014	 ldr         r0, [r5, #0x14]
  00070	eb000000	 bl          GPIOInterruptWakeUp
  00074	e1a06000	 mov         r6, r0
  00078		 |$LN1@Tca6416Gpi@18|

; 1157 :     }
; 1158 : 
; 1159 :     LeaveCriticalSection(&pDevice->wakeupStateCs);

  00078	e2850050	 add         r0, r5, #0x50
  0007c	eb000000	 bl          LeaveCriticalSection

; 1160 : 
; 1161 :     return rc;
; 1162 : }

  00080	e1a00006	 mov         r0, r6
  00084	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00088	e12fff1e	 bx          lr
  0008c		 |$M37938|

			 ENDP  ; |?Tca6416GpioInterruptWakeUp@@YAHPAXKKH@Z|, Tca6416GpioInterruptWakeUp

	EXPORT	|?GIO_Deinit@@YAHK@Z|			; GIO_Deinit

  00000			 AREA	 |.pdata|, PDATA
|$T37950| DCD	|$LN5@GIO_Deinit|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GIO_Deinit@@YAHK@Z| PROC		; GIO_Deinit

; 1184 : {

  00000		 |$LN5@GIO_Deinit|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37947|

; 1185 :     return Tca6416GpioDeinit((HANDLE)hDeviceContext);

  00004	eb000000	 bl          |?Tca6416GpioDeinit@@YAHPAX@Z|

; 1186 : }

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M37948|

			 ENDP  ; |?GIO_Deinit@@YAHK@Z|, GIO_Deinit

	EXPORT	|?GIO_Open@@YAKKKK@Z|			; GIO_Open

  00000			 AREA	 |.pdata|, PDATA
|$T37960| DCD	|$LN5@GIO_Open|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GIO_Open@@YAKKKK@Z| PROC		; GIO_Open

; 1193 : {

  00000		 |$LN5@GIO_Open|
  00000		 |$M37957|

; 1194 :     UNREFERENCED_PARAMETER(AccessCode);
; 1195 :     UNREFERENCED_PARAMETER(ShareMode);
; 1196 :     return hDeviceContext;
; 1197 : }

  00000	e12fff1e	 bx          lr
  00004		 |$M37958|

			 ENDP  ; |?GIO_Open@@YAKKKK@Z|, GIO_Open

	EXPORT	|?GIO_Close@@YAHK@Z|			; GIO_Close

  00000			 AREA	 |.pdata|, PDATA
|$T37969| DCD	|$LN5@GIO_Close|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GIO_Close@@YAHK@Z| PROC		; GIO_Close

; 1202 : {

  00000		 |$LN5@GIO_Close|
  00000		 |$M37966|

; 1203 :     UNREFERENCED_PARAMETER(hOpenContext);
; 1204 :     return TRUE;

  00000	e3a00001	 mov         r0, #1

; 1205 : }

  00004	e12fff1e	 bx          lr
  00008		 |$M37967|

			 ENDP  ; |?GIO_Close@@YAHK@Z|, GIO_Close

	EXPORT	|?GIO_PowerDown@@YAXK@Z|		; GIO_PowerDown

  00000			 AREA	 |.pdata|, PDATA
|$T37979| DCD	|$LN7@GIO_PowerD|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GIO_PowerDown@@YAXK@Z| PROC		; GIO_PowerDown

; 1210 : {

  00000		 |$LN7@GIO_PowerD|
  00000		 |$M37976|

; 1211 :     Tca6416GpioPowerDown((HANDLE) hDeviceContext);
; 1212 : }

  00000	e12fff1e	 bx          lr
  00004		 |$M37977|

			 ENDP  ; |?GIO_PowerDown@@YAXK@Z|, GIO_PowerDown

	EXPORT	|?GIO_PowerUp@@YAXK@Z|			; GIO_PowerUp

  00000			 AREA	 |.pdata|, PDATA
|$T37989| DCD	|$LN7@GIO_PowerU|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GIO_PowerUp@@YAXK@Z| PROC		; GIO_PowerUp

; 1216 : {

  00000		 |$LN7@GIO_PowerU|
  00000		 |$M37986|

; 1217 :     Tca6416GpioPowerUp((HANDLE) hDeviceContext);
; 1218 : }

  00000	e12fff1e	 bx          lr
  00004		 |$M37987|

			 ENDP  ; |?GIO_PowerUp@@YAXK@Z|, GIO_PowerUp

	IMPORT	|InitializeCriticalSection|
	IMPORT	|I2CSetSubAddressMode|
	IMPORT	|I2CSetSlaveAddress|
	IMPORT	|I2CSetBaudIndex|
	IMPORT	|I2COpen|
	IMPORT	|SOCGetI2CDeviceByBus|
	IMPORT	|GetDeviceRegistryParams|
	IMPORT	|LocalAlloc|
	IMPORT	|memset|

  00000			 AREA	 |.pdata|, PDATA
|$T38014| DCD	|$LN25@Tca6416Gpi@19|
	DCD	0x40004a02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tca6416GpioInit@@YAHPBGPAPAXPAI@Z| PROC ; Tca6416GpioInit

; 273  : {

  00000		 |$LN25@Tca6416Gpi@19|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M38011|
  00008	e1a04002	 mov         r4, r2
  0000c	e1b05001	 movs        r5, r1
  00010	e1a08000	 mov         r8, r0

; 274  :     BOOL rc = FALSE;  

  00014	e3a07000	 mov         r7, #0

; 275  :     UCHAR dummy;
; 276  :     TCA6416_DEVICE *pDevice = NULL;

  00018	e3a06000	 mov         r6, #0

; 277  : 
; 278  : 
; 279  :     DEBUGMSG(ZONE_FUNCTION, (
; 280  :         L"+Tca6416GpioInit(%s)\r\n", szContext
; 281  :         ));
; 282  : 
; 283  :     if (phContext == NULL)

  0001c	0a00003a	 beq         |$LN22@Tca6416Gpi@19|

; 284  :     {
; 285  :         goto cleanUp;
; 286  :     }
; 287  :     // Create device structure
; 288  :     pDevice = (TCA6416_DEVICE *)LocalAlloc(LPTR, sizeof(TCA6416_DEVICE));

  00020	e3a010b0	 mov         r1, #0xB0
  00024	e3a00040	 mov         r0, #0x40
  00028	eb000000	 bl          LocalAlloc
  0002c	e1b06000	 movs        r6, r0

; 289  :     if (pDevice == NULL)

  00030	0a000035	 beq         |$LN22@Tca6416Gpi@19|

; 290  :     {
; 291  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: Tca6416GpioInit: "
; 292  :             L"Failed allocate GPIO driver structure\r\n"
; 293  :             ));
; 294  :         goto cleanUp;
; 295  :     }
; 296  :     memset(pDevice, 0, sizeof(TCA6416_DEVICE));

  00034	e3a020b0	 mov         r2, #0xB0
  00038	e3a01000	 mov         r1, #0
  0003c	e1a00006	 mov         r0, r6
  00040	eb000000	 bl          memset

; 297  :     pDevice->dwSysintr = (DWORD) SYSINTR_UNDEFINED;

  00044	e3e03000	 mvn         r3, #0

; 298  :     *phContext = pDevice;
; 299  :     if (pGpioCount)

  00048	e3540000	 cmp         r4, #0
  0004c	e5863018	 str         r3, [r6, #0x18]

; 300  :     {
; 301  :         *pGpioCount = NB_BANK * NB_PIN_PER_BANK;

  00050	13a03010	 movne       r3, #0x10
  00054	e5856000	 str         r6, [r5]
  00058	15843000	 strne       r3, [r4]

; 302  :     }
; 303  : 
; 304  :    // Read device parameters
; 305  :     if (GetDeviceRegistryParams(
; 306  :         szContext, pDevice, dimof(g_deviceRegParams), g_deviceRegParams
; 307  :         ) != ERROR_SUCCESS)

  0005c	e59f30c0	 ldr         r3, [pc, #0xC0]
  00060	e3a02004	 mov         r2, #4
  00064	e1a01006	 mov         r1, r6
  00068	e1a00008	 mov         r0, r8
  0006c	eb000000	 bl          GetDeviceRegistryParams
  00070	e3500000	 cmp         r0, #0
  00074	1a000024	 bne         |$LN22@Tca6416Gpi@19|

; 308  :     {
; 309  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: Tca6416GpioInit: "
; 310  :             L"Failed read FMD registry parameters\r\n"
; 311  :             ));
; 312  :         goto cleanUp;
; 313  :     }
; 314  :     pDevice->hI2C = I2COpen(SOCGetI2CDeviceByBus(pDevice->I2CBusIndex));

  00078	e5960000	 ldr         r0, [r6]
  0007c	eb000000	 bl          SOCGetI2CDeviceByBus
  00080	eb000000	 bl          I2COpen
  00084	e3500000	 cmp         r0, #0
  00088	e5860010	 str         r0, [r6, #0x10]

; 315  :     if (pDevice->hI2C == NULL)

  0008c	0a00001e	 beq         |$LN22@Tca6416Gpi@19|

; 316  :     {
; 317  :         goto cleanUp;
; 318  :     }
; 319  :     I2CSetBaudIndex(pDevice->hI2C,pDevice->I2CBaudrateIndex);

  00090	e5961008	 ldr         r1, [r6, #8]
  00094	eb000000	 bl          I2CSetBaudIndex

; 320  :     I2CSetSlaveAddress(pDevice->hI2C, (UINT16)pDevice->I2CAddr);

  00098	e5963004	 ldr         r3, [r6, #4]
  0009c	e5960010	 ldr         r0, [r6, #0x10]
  000a0	e1a01803	 mov         r1, r3, lsl #16
  000a4	e1a01821	 mov         r1, r1, lsr #16
  000a8	eb000000	 bl          I2CSetSlaveAddress

; 321  : 	I2CSetSubAddressMode(pDevice->hI2C, I2C_SUBADDRESS_MODE_8);

  000ac	e5960010	 ldr         r0, [r6, #0x10]
  000b0	e3a01001	 mov         r1, #1
  000b4	eb000000	 bl          I2CSetSubAddressMode
  000b8	e2864028	 add         r4, r6, #0x28
  000bc	e3a05002	 mov         r5, #2
  000c0		 |$LL6@Tca6416Gpi@19|

; 322  : 
; 323  :     for (int i=0;i<NB_BANK;i++)
; 324  :     {
; 325  :         InitializeCriticalSection(&pDevice->bankCs[i]);

  000c0	e1a00004	 mov         r0, r4
  000c4	eb000000	 bl          InitializeCriticalSection
  000c8	e2844014	 add         r4, r4, #0x14
  000cc	e2555001	 subs        r5, r5, #1
  000d0	1afffffa	 bne         |$LL6@Tca6416Gpi@19|

; 326  :     }
; 327  :     InitializeCriticalSection(&pDevice->wakeupStateCs);    

  000d4	e2860050	 add         r0, r6, #0x50
  000d8	eb000000	 bl          InitializeCriticalSection

; 328  : 
; 329  :     // Do a dummy read to chek if the expander is present on the bus.
; 330  :     if (TCA6416I2CRead(pDevice->hI2C,CONFIG_PORT_0,&dummy,sizeof(dummy)) != sizeof(dummy))

  000dc	e5965010	 ldr         r5, [r6, #0x10]
  000e0	e3a03001	 mov         r3, #1
  000e4	e28d2000	 add         r2, sp, #0
  000e8	e1a00005	 mov         r0, r5
  000ec	e3a01006	 mov         r1, #6
  000f0	eb000000	 bl          I2CRead
  000f4	e1a04000	 mov         r4, r0
  000f8	e1a00005	 mov         r0, r5
  000fc	eb000000	 bl          |?SendExtraSCLCycle@@YAXPAX@Z|
  00100	e3540001	 cmp         r4, #1

; 331  :     {
; 332  :         goto cleanUp;
; 333  :     }
; 334  :     
; 335  :     rc = TRUE;

  00104	03a07001	 moveq       r7, #1
  00108		 |$cleanUp$37038|
  00108	0a000001	 beq         |$LN1@Tca6416Gpi@19|
  0010c		 |$LN22@Tca6416Gpi@19|

; 336  : 
; 337  : cleanUp:
; 338  :     if (rc == FALSE) Tca6416GpioDeinit((HANDLE)pDevice);

  0010c	e1a00006	 mov         r0, r6
  00110	eb000000	 bl          |?Tca6416GpioDeinit@@YAHPAX@Z|
  00114		 |$LN1@Tca6416Gpi@19|

; 339  :     DEBUGMSG(ZONE_FUNCTION, (L"-Tca6416GpioInit()\r\n"));
; 340  :     return rc;
; 341  : }

  00114	e1a00007	 mov         r0, r7
  00118	e28dd004	 add         sp, sp, #4
  0011c	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00120	e12fff1e	 bx          lr
  00124		 |$LN26@Tca6416Gpi@19|
  00124		 |$LN27@Tca6416Gpi@19|
  00124	00000000	 DCD         |g_deviceRegParams|
  00128		 |$M38012|

			 ENDP  ; |?Tca6416GpioInit@@YAHPBGPAPAXPAI@Z|, Tca6416GpioInit

	EXPORT	|??_C@_1MA@CAJGLBPC@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JM@GNDFDECH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAT?$AAc?$AAa?$AA6?$AA4?$AA1?$AA6?$AAG?$AAp?$AAi?$AAo?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAO?$AAC@| [ DATA ] ; `string'
	IMPORT	|NKDbgPrintfW|
	IMPORT	|GetCallerProcess|
	IMPORT	|SetLastError|
	IMPORT	|CeSafeCopyMemory|
; File c:\wince600\public\common\sdk\inc\objbase.h

  00000			 AREA	 |.pdata|, PDATA
|$T38063| DCD	|$LN66@Tca6416Gpi@20|
	DCD	0x40012702

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1MA@CAJGLBPC@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "P"
	DCB	0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "M", 0x0, "\\", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M"
	DCB	0x0, "O", 0x0, "N", 0x0, "\\", 0x0, "S", 0x0, "R", 0x0, "C"
	DCB	0x0, "\\", 0x0, "S", 0x0, "O", 0x0, "C", 0x0, "\\", 0x0, "C"
	DCB	0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N", 0x0, "_"
	DCB	0x0, "T", 0x0, "I", 0x0, "_", 0x0, "V", 0x0, "1", 0x0, "\\"
	DCB	0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N"
	DCB	0x0, "_", 0x0, "T", 0x0, "I", 0x0, "\\", 0x0, "G", 0x0, "P"
	DCB	0x0, "I", 0x0, "O", 0x0, "\\", 0x0, "T", 0x0, "C", 0x0, "A"
	DCB	0x0, "6", 0x0, "4", 0x0, "1", 0x0, "6", 0x0, "_", 0x0, "G"
	DCB	0x0, "P", 0x0, "I", 0x0, "O", 0x0, "\\", 0x0, ".", 0x0, "\\"
	DCB	0x0, "t", 0x0, "c", 0x0, "a", 0x0, "6", 0x0, "4", 0x0, "1"
	DCB	0x0, "6", 0x0, "_", 0x0, "g", 0x0, "p", 0x0, "i", 0x0, "o"
	DCB	0x0, ".", 0x0, "c", 0x0, "p", 0x0, "p", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ":", 0x0, " "
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JM@GNDFDECH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAT?$AAc?$AAa?$AA6?$AA4?$AA1?$AA6?$AAG?$AAp?$AAi?$AAo?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAO?$AAC@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "T", 0x0, "c", 0x0, "a", 0x0, "6", 0x0, "4", 0x0, "1"
	DCB	0x0, "6", 0x0, "G", 0x0, "p", 0x0, "i", 0x0, "o", 0x0, "I"
	DCB	0x0, "O", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "O"
	DCB	0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_", 0x0, "G", 0x0, "P"
	DCB	0x0, "I", 0x0, "O", 0x0, "_", 0x0, "S", 0x0, "E", 0x0, "T"
	DCB	0x0, "_", 0x0, "P", 0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "E"
	DCB	0x0, " ", 0x0, "-", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "v"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "p"
	DCB	0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\gpio\tca6416_gpio\tca6416_gpio.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Tca6416GpioIoControl@@YAHPAXIPAEI1IPAK@Z| PROC ; Tca6416GpioIoControl

; 736  : {

  00000		 |$LN66@Tca6416Gpi@20|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd058	 sub         sp, sp, #0x58
  00008		 |$M38060|
  00008	e1b04000	 movs        r4, r0
  0000c	e58d400c	 str         r4, [sp, #0xC]
  00010	e1a07003	 mov         r7, r3
  00014	e1a05002	 mov         r5, r2

; 737  : #ifdef DEVICE
; 738  :     UINT id;
; 739  :     DWORD value,mode;
; 740  :     DEVICE_IFC_GPIO ifc;
; 741  :     BOOL rc = FALSE;

  00018	e3a06000	 mov         r6, #0

; 742  :     TCA6416_DEVICE *pDevice = (TCA6416_DEVICE*)context;
; 743  : 
; 744  :     UNREFERENCED_PARAMETER(pOutSize);
; 745  : 
; 746  :     DEBUGMSG(ZONE_FUNCTION, (
; 747  :         L"+Tca6416GpioIOControl(0x%08x, 0x%08x, 0x%08x, %d, 0x%08x, %d, 0x%08x)\r\n",
; 748  :         context, code, pInBuffer, inSize, pOutBuffer, outSize, pOutSize
; 749  :         ));
; 750  : 
; 751  :     // Check if we get correct context
; 752  :     if (pDevice == NULL)

  0001c	0a00009c	 beq         |$cleanUp$37241|

; 753  :     {
; 754  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: Tca6416GpioIOControl: "
; 755  :             L"Incorrect context parameter\r\n"
; 756  :             ));
; 757  :         goto cleanUp;
; 758  :     }
; 759  :     switch (code)

  00020	e3a03822	 mov         r3, #0x22, 16
  00024	e3833ec1	 orr         r3, r3, #0xC1, 28
  00028	e1510003	 cmp         r1, r3
  0002c	8a0000b6	 bhi         |$LN49@Tca6416Gpi@20|
  00030	0a00009b	 beq         |$LN15@Tca6416Gpi@20|
  00034	e3a03822	 mov         r3, #0x22, 16
  00038	e383eb01	 orr         lr, r3, #1, 22
  0003c	e151000e	 cmp         r1, lr
  00040	0a000051	 beq         |$LN38@Tca6416Gpi@20|
  00044	e3a03822	 mov         r3, #0x22, 16
  00048	e383eb03	 orr         lr, r3, #3, 22
  0004c	e151000e	 cmp         r1, lr
  00050	0a00003a	 beq         |$LN28@Tca6416Gpi@20|
  00054	e59f343c	 ldr         r3, [pc, #0x43C]
  00058	e1510003	 cmp         r1, r3
  0005c	0a000024	 beq         |$LN24@Tca6416Gpi@20|
  00060	e59f342c	 ldr         r3, [pc, #0x42C]
  00064	e1510003	 cmp         r1, r3
  00068	1a000089	 bne         |$cleanUp$37241|

; 830  :         rc = TRUE;
; 831  :         break;
; 832  : 
; 833  :     case IOCTL_GPIO_GETBIT:
; 834  :         if (pOutSize != 0) *pOutSize = sizeof(DWORD);

  0006c	e59d3084	 ldr         r3, [sp, #0x84]
  00070	e3530000	 cmp         r3, #0
  00074	13a02004	 movne       r2, #4
  00078	15832000	 strne       r2, [r3]

; 835  :         if ((pInBuffer == NULL) || (inSize < sizeof(DWORD)) ||
; 836  :             !CeSafeCopyMemory(&id, pInBuffer, sizeof(DWORD)) ||
; 837  :             (pOutBuffer == NULL) || (outSize < sizeof(DWORD)))

  0007c	e3550000	 cmp         r5, #0
  00080	0a000018	 beq         |$LN34@Tca6416Gpi@20|
  00084	e3570004	 cmp         r7, #4
  00088	3a000016	 bcc         |$LN34@Tca6416Gpi@20|
  0008c	e3a02004	 mov         r2, #4
  00090	e1a01005	 mov         r1, r5
  00094	e28d0000	 add         r0, sp, #0
  00098	eb000000	 bl          CeSafeCopyMemory
  0009c	e3500000	 cmp         r0, #0
  000a0	0a000010	 beq         |$LN34@Tca6416Gpi@20|
  000a4	e59d507c	 ldr         r5, [sp, #0x7C]
  000a8	e3550000	 cmp         r5, #0
  000ac	0a00000d	 beq         |$LN34@Tca6416Gpi@20|
  000b0	e59d3080	 ldr         r3, [sp, #0x80]
  000b4	e3530004	 cmp         r3, #4
  000b8	3a00000a	 bcc         |$LN34@Tca6416Gpi@20|

; 838  :         {
; 839  :             SetLastError(ERROR_INVALID_PARAMETER);
; 840  :             break;
; 841  :         }
; 842  :         value = Tca6416GpioGetBit(context, id);

  000bc	e59d1000	 ldr         r1, [sp]
  000c0	e1a00004	 mov         r0, r4
  000c4	eb000000	 bl          |?Tca6416GpioGetBit@@YAKPAXI@Z|
  000c8	e1a03000	 mov         r3, r0

; 843  :         if (!CeSafeCopyMemory(pOutBuffer, &value, sizeof(value)))

  000cc	e58d3008	 str         r3, [sp, #8]
  000d0	e28d1008	 add         r1, sp, #8
  000d4		 |$LN63@Tca6416Gpi@20|
  000d4	e3a02004	 mov         r2, #4
  000d8	e1a00005	 mov         r0, r5
  000dc	eb000000	 bl          CeSafeCopyMemory
  000e0	e3500000	 cmp         r0, #0
  000e4	1a00009f	 bne         |$LN59@Tca6416Gpi@20|
  000e8		 |$LN34@Tca6416Gpi@20|

; 774  :         {
; 775  :             SetLastError(ERROR_INVALID_PARAMETER);

  000e8	e3a00057	 mov         r0, #0x57
  000ec	eb000000	 bl          SetLastError

; 921  :         }
; 922  :     }
; 923  : 
; 924  : cleanUp:

  000f0	ea000067	 b           |$cleanUp$37241|
  000f4		 |$LN24@Tca6416Gpi@20|

; 818  :         rc = TRUE;
; 819  :         break;
; 820  : 
; 821  :     case IOCTL_GPIO_CLRBIT:
; 822  :         if (pOutSize != 0) *pOutSize = 0;

  000f4	e59d3084	 ldr         r3, [sp, #0x84]
  000f8	e3530000	 cmp         r3, #0
  000fc	13a02000	 movne       r2, #0
  00100	15832000	 strne       r2, [r3]

; 823  :         if ((pInBuffer == NULL) || (inSize < sizeof(DWORD)) ||
; 824  :             !CeSafeCopyMemory(&id, pInBuffer, sizeof(DWORD)))

  00104	e3550000	 cmp         r5, #0
  00108	0afffff6	 beq         |$LN34@Tca6416Gpi@20|
  0010c	e3570004	 cmp         r7, #4
  00110	3afffff4	 bcc         |$LN34@Tca6416Gpi@20|
  00114	e3a02004	 mov         r2, #4
  00118	e1a01005	 mov         r1, r5
  0011c	e28d0000	 add         r0, sp, #0
  00120	eb000000	 bl          CeSafeCopyMemory
  00124	e3500000	 cmp         r0, #0
  00128	0affffee	 beq         |$LN34@Tca6416Gpi@20|

; 825  :         {
; 826  :             SetLastError(ERROR_INVALID_PARAMETER);
; 827  :             break;
; 828  :         }
; 829  :         Tca6416GpioClrBit(context, id);

  0012c	e59d1000	 ldr         r1, [sp]
  00130	e1a00004	 mov         r0, r4
  00134	eb000000	 bl          |?Tca6416GpioClrBit@@YAHPAXI@Z|

; 919  : 
; 920  :             rc = TRUE;

  00138	e3a06001	 mov         r6, #1
  0013c	ea000054	 b           |$cleanUp$37241|
  00140		 |$LN28@Tca6416Gpi@20|

; 803  :             rc = TRUE;
; 804  :             break;
; 805  :         }
; 806  :         SetLastError(ERROR_INVALID_PARAMETER);
; 807  :         break;
; 808  : 
; 809  :     case IOCTL_GPIO_SETBIT:
; 810  :         if (pOutSize != 0) *pOutSize = 0;

  00140	e59d3084	 ldr         r3, [sp, #0x84]
  00144	e3530000	 cmp         r3, #0
  00148	13a02000	 movne       r2, #0
  0014c	15832000	 strne       r2, [r3]

; 811  :         if ((pInBuffer == NULL) || (inSize < sizeof(DWORD)) ||
; 812  :             !CeSafeCopyMemory(&id, pInBuffer, sizeof(DWORD)))

  00150	e3550000	 cmp         r5, #0
  00154	0affffe3	 beq         |$LN34@Tca6416Gpi@20|
  00158	e3570004	 cmp         r7, #4
  0015c	3affffe1	 bcc         |$LN34@Tca6416Gpi@20|
  00160	e3a02004	 mov         r2, #4
  00164	e1a01005	 mov         r1, r5
  00168	e28d0000	 add         r0, sp, #0
  0016c	eb000000	 bl          CeSafeCopyMemory
  00170	e3500000	 cmp         r0, #0
  00174	0affffdb	 beq         |$LN34@Tca6416Gpi@20|

; 813  :         {
; 814  :             SetLastError(ERROR_INVALID_PARAMETER);
; 815  :             break;
; 816  :         }
; 817  :         Tca6416GpioSetBit(context, id);

  00178	e59d1000	 ldr         r1, [sp]
  0017c	e1a00004	 mov         r0, r4
  00180	eb000000	 bl          |?Tca6416GpioSetBit@@YAHPAXI@Z|

; 919  : 
; 920  :             rc = TRUE;

  00184	e3a06001	 mov         r6, #1
  00188	ea000041	 b           |$cleanUp$37241|
  0018c		 |$LN38@Tca6416Gpi@20|

; 760  :     {
; 761  :     case IOCTL_DDK_GET_DRIVER_IFC:
; 762  :         // We can give interface only to our peer in device process
; 763  :         if (GetCurrentProcessId() != (DWORD)GetCallerProcess())

  0018c	e3a0000c	 mov         r0, #0xC
  00190	eb000000	 bl          __GetUserKData
  00194	e1a04000	 mov         r4, r0
  00198	eb000000	 bl          GetCallerProcess
  0019c	e1540000	 cmp         r4, r0
  001a0	0a000002	 beq         |$LN37@Tca6416Gpi@20|

; 764  :         {
; 765  :             DEBUGMSG(ZONE_ERROR, (L"ERROR: GIO_IOControl: "
; 766  :                 L"IOCTL_DDK_GET_DRIVER_IFC can be called only from "
; 767  :                 L"device process (caller process id 0x%08x)\r\n",
; 768  :                 GetCurrentProcessId()
; 769  :                 ));
; 770  :             SetLastError(ERROR_ACCESS_DENIED);

  001a4	e3a00005	 mov         r0, #5
  001a8	eb000000	 bl          SetLastError

; 921  :         }
; 922  :     }
; 923  : 
; 924  : cleanUp:

  001ac	ea000038	 b           |$cleanUp$37241|
  001b0		 |$LN37@Tca6416Gpi@20|

; 771  :             goto cleanUp;
; 772  :         }
; 773  :         if ((pInBuffer == NULL) || (inSize < sizeof(GUID)))

  001b0	e3550000	 cmp         r5, #0
  001b4	0affffcb	 beq         |$LN34@Tca6416Gpi@20|
  001b8	e3570010	 cmp         r7, #0x10
  001bc	3affffc9	 bcc         |$LN34@Tca6416Gpi@20|

; 776  :             break;
; 777  :         }
; 778  :         if (IsEqualGUID(*(GUID*)pInBuffer, DEVICE_IFC_GPIO_GUID))

  001c0	e59f12c8	 ldr         r1, [pc, #0x2C8]
  001c4	e3a02010	 mov         r2, #0x10
  001c8	e1a00005	 mov         r0, r5
  001cc	eb000000	 bl          memcmp
  001d0	e3500000	 cmp         r0, #0
  001d4	1affffc3	 bne         |$LN34@Tca6416Gpi@20|

; 779  :         {
; 780  :             if (pOutSize != NULL) *pOutSize = sizeof(DEVICE_IFC_GPIO);

  001d8	e59d3084	 ldr         r3, [sp, #0x84]
  001dc	e3530000	 cmp         r3, #0
  001e0	13a02048	 movne       r2, #0x48
  001e4	15832000	 strne       r2, [r3]

; 781  :             if ((pOutBuffer == NULL) || (outSize < sizeof(DEVICE_IFC_GPIO)))

  001e8	e59d307c	 ldr         r3, [sp, #0x7C]
  001ec	e3530000	 cmp         r3, #0
  001f0	0affffbc	 beq         |$LN34@Tca6416Gpi@20|
  001f4	e59d3080	 ldr         r3, [sp, #0x80]
  001f8	e3530048	 cmp         r3, #0x48
  001fc	3affffb9	 bcc         |$LN34@Tca6416Gpi@20|

; 782  :             {
; 783  :                 SetLastError(ERROR_INVALID_PARAMETER);
; 784  :                 break;
; 785  :             }
; 786  :             ifc.context                 = context;
; 787  :             ifc.pfnSetBit               = Tca6416GpioSetBit;
; 788  :             ifc.pfnClrBit               = Tca6416GpioClrBit;
; 789  :             ifc.pfnGetBit               = Tca6416GpioGetBit;
; 790  :             ifc.pfnSetMode              = Tca6416GpioSetMode;
; 791  :             ifc.pfnGetMode              = Tca6416GpioGetMode;
; 792  :             ifc.pfnPullup               = Tca6416GpioPullup;
; 793  :             ifc.pfnPulldown             = Tca6416GpioPulldown;
; 794  :             ifc.pfnInterruptInitialize  = Tca6416GpioInterruptInitialize;
; 795  :             ifc.pfnInterruptMask        = Tca6416GpioInterruptMask;
; 796  :             ifc.pfnInterruptDisable     = Tca6416GpioInterruptDisable;
; 797  :             ifc.pfnInterruptDone        = Tca6416GpioInterruptDone;
; 798  : 			ifc.pfnGetSystemIrq			= Tca6416GpioGetSystemIrq;
; 799  :             ifc.pfnInterruptWakeUp      = Tca6416GpioInterruptWakeUp;
; 800  :             ifc.pfnIoControl            = Tca6416GpioIoControl;

  00200	e59f3284	 ldr         r3, [pc, #0x284]
  00204	e59f027c	 ldr         r0, [pc, #0x27C]
  00208	e59f2274	 ldr         r2, [pc, #0x274]
  0020c	e58d3020	 str         r3, [sp, #0x20]
  00210	e59f3268	 ldr         r3, [pc, #0x268]
  00214	e59f1260	 ldr         r1, [pc, #0x260]
  00218	e59fe258	 ldr         lr, [pc, #0x258]
  0021c	e59f4250	 ldr         r4, [pc, #0x250]
  00220	e59f5248	 ldr         r5, [pc, #0x248]
  00224	e59f6240	 ldr         r6, [pc, #0x240]
  00228	e59f7238	 ldr         r7, [pc, #0x238]
  0022c	e59f8230	 ldr         r8, [pc, #0x230]
  00230	e59f9228	 ldr         r9, [pc, #0x228]
  00234	e59fa220	 ldr         r10, [pc, #0x220]
  00238	e59fb218	 ldr         r11, [pc, #0x218]
  0023c	e58d303c	 str         r3, [sp, #0x3C]

; 801  : 
; 802  :             if (!CeSafeCopyMemory(pOutBuffer, &ifc, sizeof(ifc))) break;

  00240	e59d300c	 ldr         r3, [sp, #0xC]
  00244	e58d0054	 str         r0, [sp, #0x54]
  00248	e59d007c	 ldr         r0, [sp, #0x7C]
  0024c	e58d2024	 str         r2, [sp, #0x24]
  00250	e58d1028	 str         r1, [sp, #0x28]
  00254	e3a02048	 mov         r2, #0x48
  00258	e28d1010	 add         r1, sp, #0x10
  0025c	e58d3010	 str         r3, [sp, #0x10]
  00260	e58de02c	 str         lr, [sp, #0x2C]
  00264	e58d4030	 str         r4, [sp, #0x30]
  00268	e58d5034	 str         r5, [sp, #0x34]
  0026c	e58d6038	 str         r6, [sp, #0x38]
  00270	e58d7040	 str         r7, [sp, #0x40]
  00274	e58d8044	 str         r8, [sp, #0x44]
  00278	e58d9048	 str         r9, [sp, #0x48]
  0027c	e58da04c	 str         r10, [sp, #0x4C]
  00280	e58db050	 str         r11, [sp, #0x50]
  00284	eb000000	 bl          CeSafeCopyMemory
  00288	e3500000	 cmp         r0, #0
  0028c	1a000035	 bne         |$LN59@Tca6416Gpi@20|
  00290	e3a06000	 mov         r6, #0

; 873  :         {
; 874  :             SetLastError(ERROR_INVALID_PARAMETER);

  00294		 |$cleanUp$37241|

; 925  :     DEBUGMSG(ZONE_FUNCTION, (L"-Tca6416GpioIOControl(rc = %d)\r\n", rc));
; 926  :     return rc;
; 927  : #endif
; 928  : 
; 929  : #ifdef OAL
; 930  :     UNREFERENCED_PARAMETER(context);
; 931  :     UNREFERENCED_PARAMETER(code);
; 932  :     UNREFERENCED_PARAMETER(pInBuffer);
; 933  :     UNREFERENCED_PARAMETER(inSize);
; 934  :     UNREFERENCED_PARAMETER(pOutBuffer);
; 935  :     UNREFERENCED_PARAMETER(outSize);
; 936  :     UNREFERENCED_PARAMETER(pOutSize);        
; 937  :     return FALSE;
; 938  : #endif
; 939  : }

  00294	e1a00006	 mov         r0, r6
  00298	e28dd058	 add         sp, sp, #0x58
  0029c	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  002a0	e12fff1e	 bx          lr
  002a4		 |$LN15@Tca6416Gpi@20|

; 844  :         {
; 845  :             SetLastError(ERROR_INVALID_PARAMETER);
; 846  :             break;
; 847  :         }
; 848  :         rc = TRUE;
; 849  :         break;
; 850  : 
; 851  :     case IOCTL_GPIO_SETMODE:
; 852  :         if (pOutSize != 0) *pOutSize = 0;

  002a4	e59d3084	 ldr         r3, [sp, #0x84]
  002a8	e3530000	 cmp         r3, #0
  002ac	13a02000	 movne       r2, #0
  002b0	15832000	 strne       r2, [r3]

; 853  :         if ((pInBuffer == NULL) || (inSize < 2 * sizeof(DWORD)) ||
; 854  :             !CeSafeCopyMemory(
; 855  :             &id, &((DWORD*)pInBuffer)[0], sizeof(DWORD)
; 856  :             ) ||
; 857  :             !CeSafeCopyMemory(
; 858  :             &mode, &((DWORD*)pInBuffer)[1], sizeof(DWORD)
; 859  :             ))

  002b4	e3550000	 cmp         r5, #0
  002b8	0affff8a	 beq         |$LN34@Tca6416Gpi@20|
  002bc	e3570008	 cmp         r7, #8
  002c0	3affff88	 bcc         |$LN34@Tca6416Gpi@20|
  002c4	e3a02004	 mov         r2, #4
  002c8	e1a01005	 mov         r1, r5
  002cc	e28d0000	 add         r0, sp, #0
  002d0	eb000000	 bl          CeSafeCopyMemory
  002d4	e3500000	 cmp         r0, #0
  002d8	0affff82	 beq         |$LN34@Tca6416Gpi@20|
  002dc	e3a02004	 mov         r2, #4
  002e0	e2851004	 add         r1, r5, #4
  002e4	e28d0004	 add         r0, sp, #4
  002e8	eb000000	 bl          CeSafeCopyMemory
  002ec	e3500000	 cmp         r0, #0
  002f0	0affff7c	 beq         |$LN34@Tca6416Gpi@20|

; 860  :         {
; 861  :             SetLastError(ERROR_INVALID_PARAMETER);
; 862  :             break;
; 863  :         }
; 864  :         Tca6416GpioSetMode(context, id, mode);

  002f4	e59d2004	 ldr         r2, [sp, #4]
  002f8	e59d1000	 ldr         r1, [sp]
  002fc	e1a00004	 mov         r0, r4
  00300	eb000000	 bl          |?Tca6416GpioSetMode@@YAHPAXII@Z|

; 919  : 
; 920  :             rc = TRUE;

  00304	e3a06001	 mov         r6, #1
  00308	eaffffe1	 b           |$cleanUp$37241|
  0030c		 |$LN49@Tca6416Gpi@20|

; 753  :     {
; 754  :         DEBUGMSG(ZONE_ERROR, (L"ERROR: Tca6416GpioIOControl: "
; 755  :             L"Incorrect context parameter\r\n"
; 756  :             ));
; 757  :         goto cleanUp;
; 758  :     }
; 759  :     switch (code)

  0030c	e59f3140	 ldr         r3, [pc, #0x140]
  00310	e1510003	 cmp         r1, r3
  00314	0a00002e	 beq         |$LN11@Tca6416Gpi@20|
  00318	e59f3130	 ldr         r3, [pc, #0x130]
  0031c	e1510003	 cmp         r1, r3
  00320	0a00001a	 beq         |$LN6@Tca6416Gpi@20|
  00324	e3a03822	 mov         r3, #0x22, 16
  00328	e3833ec2	 orr         r3, r3, #0xC2, 28
  0032c	e1510003	 cmp         r1, r3
  00330	1affffd7	 bne         |$cleanUp$37241|

; 898  : 
; 899  :     case IOCTL_GPIO_GET_POWER_STATE:
; 900  :         {
; 901  :             if ((pInBuffer == NULL) || (pOutBuffer == NULL) ||
; 902  :                 inSize != sizeof(IOCTL_GPIO_POWER_STATE_IN) ||
; 903  :                 outSize != sizeof(IOCTL_GPIO_GET_POWER_STATE_OUT))

  00334	e3550000	 cmp         r5, #0
  00338	0a00000c	 beq         |$LN1@Tca6416Gpi@20|
  0033c	e59d207c	 ldr         r2, [sp, #0x7C]
  00340	e3520000	 cmp         r2, #0
  00344	0a000009	 beq         |$LN1@Tca6416Gpi@20|
  00348	e3570008	 cmp         r7, #8
  0034c	1a000007	 bne         |$LN1@Tca6416Gpi@20|
  00350	e59d3080	 ldr         r3, [sp, #0x80]
  00354	e3530008	 cmp         r3, #8
  00358	1a000004	 bne         |$LN1@Tca6416Gpi@20|

; 910  :             }
; 911  : 
; 912  :             IOCTL_GPIO_POWER_STATE_IN *pPowerIn;
; 913  :             IOCTL_GPIO_GET_POWER_STATE_OUT *pPowerOut;
; 914  :             pPowerIn = (IOCTL_GPIO_POWER_STATE_IN*)pInBuffer;
; 915  :             pPowerOut = (IOCTL_GPIO_GET_POWER_STATE_OUT*)pOutBuffer;
; 916  :             
; 917  :             pPowerOut->gpioState = D0;

  0035c	e3a03000	 mov         r3, #0
  00360	e5823000	 str         r3, [r2]

; 918  :             pPowerOut->bankState = D0;

  00364	e5823004	 str         r3, [r2, #4]
  00368		 |$LN59@Tca6416Gpi@20|

; 919  : 
; 920  :             rc = TRUE;

  00368	e3a06001	 mov         r6, #1
  0036c	eaffffc8	 b           |$cleanUp$37241|
  00370		 |$LN1@Tca6416Gpi@20|

; 904  :             {
; 905  :                 SetLastError(ERROR_INVALID_PARAMETER);

  00370	e3a00057	 mov         r0, #0x57
  00374	eb000000	 bl          SetLastError

; 906  :                 ERRORMSG(ZONE_ERROR, (L"ERROR: Tca6416GpioIOControl: "
; 907  :                     L"IOCTL_GPIO_SET_POWER_STATE - Invalid parameter\r\n"
; 908  :                     ));

  00378	e59f30cc	 ldr         r3, [pc, #0xCC]
  0037c	e5933440	 ldr         r3, [r3, #0x440]
  00380	e3130001	 tst         r3, #1
  00384	0affffc2	 beq         |$cleanUp$37241|
  00388	e3a02fe3	 mov         r2, #0xE3, 30

; 909  :                 break;

  0038c	ea00000a	 b           |$LN62@Tca6416Gpi@20|
  00390		 |$LN6@Tca6416Gpi@20|

; 882  :         }
; 883  :         rc = TRUE;
; 884  :         break;
; 885  :     case IOCTL_GPIO_SET_POWER_STATE:
; 886  :         {
; 887  :             if ((pInBuffer == NULL) || inSize != sizeof(IOCTL_GPIO_POWER_STATE_IN))

  00390	e3550000	 cmp         r5, #0
  00394	0a000001	 beq         |$LN4@Tca6416Gpi@20|
  00398	e3570008	 cmp         r7, #8

; 894  :             }
; 895  :             rc = TRUE;            
; 896  :         }
; 897  :         break;

  0039c	0afffff1	 beq         |$LN59@Tca6416Gpi@20|
  003a0		 |$LN4@Tca6416Gpi@20|

; 888  :             {
; 889  :                 SetLastError(ERROR_INVALID_PARAMETER);

  003a0	e3a00057	 mov         r0, #0x57
  003a4	eb000000	 bl          SetLastError

; 890  :                 ERRORMSG(ZONE_ERROR, (L"ERROR: Tca6416GpioIOControl: "
; 891  :                     L"IOCTL_GPIO_SET_POWER_STATE - Invalid parameter\r\n"
; 892  :                     ));

  003a8	e59f309c	 ldr         r3, [pc, #0x9C]
  003ac	e5933440	 ldr         r3, [r3, #0x440]
  003b0	e3130001	 tst         r3, #1
  003b4	0affffb6	 beq         |$cleanUp$37241|
  003b8	e3a02fdf	 mov         r2, #0xDF, 30
  003bc		 |$LN62@Tca6416Gpi@20|
  003bc	e59f0084	 ldr         r0, [pc, #0x84]
  003c0	e59f107c	 ldr         r1, [pc, #0x7C]
  003c4	eb000000	 bl          NKDbgPrintfW
  003c8	e59f0070	 ldr         r0, [pc, #0x70]
  003cc	eb000000	 bl          NKDbgPrintfW

; 893  :                 break;

  003d0	eaffffaf	 b           |$cleanUp$37241|
  003d4		 |$LN11@Tca6416Gpi@20|

; 865  :         rc = TRUE;
; 866  :         break;
; 867  : 
; 868  :     case IOCTL_GPIO_GETMODE:
; 869  :         if (pOutSize != 0) *pOutSize = sizeof(DWORD);

  003d4	e59d3084	 ldr         r3, [sp, #0x84]
  003d8	e3530000	 cmp         r3, #0
  003dc	13a02004	 movne       r2, #4
  003e0	15832000	 strne       r2, [r3]

; 870  :         if ((pInBuffer == NULL) || (inSize < sizeof(DWORD)) ||
; 871  :             !CeSafeCopyMemory(&id, pInBuffer, sizeof(DWORD)) ||
; 872  :             (pOutBuffer == NULL) || (outSize < sizeof(DWORD)))

  003e4	e3550000	 cmp         r5, #0
  003e8	0affff3e	 beq         |$LN34@Tca6416Gpi@20|
  003ec	e3570004	 cmp         r7, #4
  003f0	3affff3c	 bcc         |$LN34@Tca6416Gpi@20|
  003f4	e3a02004	 mov         r2, #4
  003f8	e1a01005	 mov         r1, r5
  003fc	e28d0000	 add         r0, sp, #0
  00400	eb000000	 bl          CeSafeCopyMemory
  00404	e3500000	 cmp         r0, #0
  00408	0affff36	 beq         |$LN34@Tca6416Gpi@20|
  0040c	e59d507c	 ldr         r5, [sp, #0x7C]
  00410	e3550000	 cmp         r5, #0
  00414	0affff33	 beq         |$LN34@Tca6416Gpi@20|
  00418	e59d3080	 ldr         r3, [sp, #0x80]
  0041c	e3530004	 cmp         r3, #4
  00420	3affff30	 bcc         |$LN34@Tca6416Gpi@20|

; 875  :             break;
; 876  :         }
; 877  :         mode = Tca6416GpioGetMode(context, id);

  00424	e59d1000	 ldr         r1, [sp]
  00428	e1a00004	 mov         r0, r4
  0042c	eb000000	 bl          |?Tca6416GpioGetMode@@YAKPAXI@Z|
  00430	e1a03000	 mov         r3, r0

; 878  :         if (!CeSafeCopyMemory(pOutBuffer, &mode, sizeof(mode)))

  00434	e58d3004	 str         r3, [sp, #4]
  00438	e28d1004	 add         r1, sp, #4

; 879  :         {
; 880  :             SetLastError(ERROR_INVALID_PARAMETER);
; 881  :             break;

  0043c	eaffff24	 b           |$LN63@Tca6416Gpi@20|
  00440		 |$LN67@Tca6416Gpi@20|
  00440		 |$LN68@Tca6416Gpi@20|
  00440	00000000	 DCD         |??_C@_1JM@GNDFDECH@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAT?$AAc?$AAa?$AA6?$AA4?$AA1?$AA6?$AAG?$AAp?$AAi?$AAo?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAI?$AAO?$AAC@|
  00444		 |$LN69@Tca6416Gpi@20|
  00444	00000000	 DCD         |??_C@_1MA@CAJGLBPC@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  00448		 |$LN70@Tca6416Gpi@20|
  00448	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  0044c		 |$LN71@Tca6416Gpi@20|
  0044c	00000000	 DCD         |dpCurSettings|
  00450		 |$LN72@Tca6416Gpi@20|
  00450	00220c1c	 DCD         0x220c1c
  00454		 |$LN73@Tca6416Gpi@20|
  00454	00220c14	 DCD         0x220c14
  00458		 |$LN74@Tca6416Gpi@20|
  00458	00000000	 DCD         |?Tca6416GpioGetSystemIrq@@YAKPAXI@Z|
  0045c		 |$LN75@Tca6416Gpi@20|
  0045c	00000000	 DCD         |?Tca6416GpioInterruptDone@@YAXPAXKK@Z|
  00460		 |$LN76@Tca6416Gpi@20|
  00460	00000000	 DCD         |?Tca6416GpioInterruptDisable@@YAXPAXKK@Z|
  00464		 |$LN77@Tca6416Gpi@20|
  00464	00000000	 DCD         |?Tca6416GpioInterruptMask@@YAXPAXKKH@Z|
  00468		 |$LN78@Tca6416Gpi@20|
  00468	00000000	 DCD         |?Tca6416GpioInterruptInitialize@@YAHPAXKPAK0@Z|
  0046c		 |$LN79@Tca6416Gpi@20|
  0046c	00000000	 DCD         |?Tca6416GpioPulldown@@YAHPAXII@Z|
  00470		 |$LN80@Tca6416Gpi@20|
  00470	00000000	 DCD         |?Tca6416GpioPullup@@YAHPAXII@Z|
  00474		 |$LN81@Tca6416Gpi@20|
  00474	00000000	 DCD         |?Tca6416GpioGetMode@@YAKPAXI@Z|
  00478		 |$LN82@Tca6416Gpi@20|
  00478	00000000	 DCD         |?Tca6416GpioSetMode@@YAHPAXII@Z|
  0047c		 |$LN83@Tca6416Gpi@20|
  0047c	00000000	 DCD         |?Tca6416GpioGetBit@@YAKPAXI@Z|
  00480		 |$LN84@Tca6416Gpi@20|
  00480	00000000	 DCD         |?Tca6416GpioIoControl@@YAHPAXIPAEI1IPAK@Z|
  00484		 |$LN85@Tca6416Gpi@20|
  00484	00000000	 DCD         |?Tca6416GpioClrBit@@YAHPAXI@Z|
  00488		 |$LN86@Tca6416Gpi@20|
  00488	00000000	 DCD         |?Tca6416GpioInterruptWakeUp@@YAHPAXKKH@Z|
  0048c		 |$LN87@Tca6416Gpi@20|
  0048c	00000000	 DCD         |?Tca6416GpioSetBit@@YAHPAXI@Z|
  00490		 |$LN88@Tca6416Gpi@20|
  00490	00000000	 DCD         |DEVICE_IFC_GPIO_GUID|
  00494		 |$LN89@Tca6416Gpi@20|
  00494	00220c0c	 DCD         0x220c0c
  00498		 |$LN90@Tca6416Gpi@20|
  00498	00220c04	 DCD         0x220c04
  0049c		 |$M38061|

			 ENDP  ; |?Tca6416GpioIoControl@@YAHPAXIPAEI1IPAK@Z|, Tca6416GpioIoControl

	EXPORT	|?GIO_Init@@YAKPBGK@Z|			; GIO_Init

  00000			 AREA	 |.pdata|, PDATA
|$T38097| DCD	|$LN6@GIO_Init|
	DCD	0x40000b02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GIO_Init@@YAKPBGK@Z| PROC		; GIO_Init

; 1168 : {

  00000		 |$LN6@GIO_Init|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M38094|

; 1169 :     HANDLE devCtxt;
; 1170 :     UINT count;
; 1171 : 
; 1172 :     UNREFERENCED_PARAMETER(dwBusContext);
; 1173 : 
; 1174 :     if (Tca6416GpioInit(pContext,&devCtxt,&count))

  00008	e28d2004	 add         r2, sp, #4
  0000c	e28d1000	 add         r1, sp, #0
  00010	eb000000	 bl          |?Tca6416GpioInit@@YAHPBGPAPAXPAI@Z|
  00014	e3500000	 cmp         r0, #0

; 1175 :     {
; 1176 :         return (DWORD) devCtxt;                

  00018	159d0000	 ldrne       r0, [sp]

; 1177 :     }
; 1178 :     return NULL;

  0001c	03a00000	 moveq       r0, #0

; 1179 : }

  00020	e28dd008	 add         sp, sp, #8
  00024	e49de004	 ldr         lr, [sp], #4
  00028	e12fff1e	 bx          lr
  0002c		 |$M38095|

			 ENDP  ; |?GIO_Init@@YAKPBGK@Z|, GIO_Init

	EXPORT	|?GIO_IOControl@@YAHKKPAEK0KPAK@Z|	; GIO_IOControl

  00000			 AREA	 |.pdata|, PDATA
|$T38110| DCD	|$LN5@GIO_IOCont|
	DCD	0x40000c02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GIO_IOControl@@YAHKKPAEK0KPAK@Z| PROC ; GIO_IOControl

; 1231 : {

  00000		 |$LN5@GIO_IOCont|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M38107|

; 1232 :     return Tca6416GpioIoControl(
; 1233 :         (HANDLE)hOpenContext,
; 1234 :         dwCode,
; 1235 :         pBufIn,
; 1236 :         dwLenIn,
; 1237 :         pBufOut,
; 1238 :         dwLenOut,
; 1239 :         pdwActualOut 
; 1240 :         );

  00008	e59de020	 ldr         lr, [sp, #0x20]
  0000c	e59d401c	 ldr         r4, [sp, #0x1C]
  00010	e59d5018	 ldr         r5, [sp, #0x18]
  00014	e58de008	 str         lr, [sp, #8]
  00018	e58d4004	 str         r4, [sp, #4]
  0001c	e58d5000	 str         r5, [sp]
  00020	eb000000	 bl          |?Tca6416GpioIoControl@@YAHPAXIPAEI1IPAK@Z|

; 1241 : }

  00024	e28dd00c	 add         sp, sp, #0xC
  00028	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M38108|

			 ENDP  ; |?GIO_IOControl@@YAHKKPAEK0KPAK@Z|, GIO_IOControl

	END
