; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\GPIO\DISPATCH\DEVICE\gpio_dispatch.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|DEVICE_IFC_GPIO_GUID| [ DATA ]

  00000			 AREA	 |.bss|, NOINIT
|s_DispatcherInitialized| % 0x4

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
|DEVICE_IFC_GPIO_GUID| DCD 0xa0272611
	DCW	0xdea0
	DCW	0x4678
	DCB	0xae
	DCB	0x62
	DCB	0x65
	DCB	0x61
	DCB	0x5b
	DCB	0x7d
	DCB	0x53
	DCB	0xaa
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\gpio\dispatch\device\gpio_dispatch.c

  00000			 AREA	 |.pdata|, PDATA
|$T44095| DCD	|$LN11@GetGroupBy|
	DCD	0x40001301
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetGroupByID| PROC

; 17   : {    

  00000		 |$LN11@GetGroupBy|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M44092|

; 18   :     int i=0;
; 19   :     while (pDevice->rgRanges[i] <= id)

  00004	e5904008	 ldr         r4, [r0, #8]
  00008	e3a0e000	 mov         lr, #0
  0000c	e5943000	 ldr         r3, [r4]
  00010	e1530001	 cmp         r3, r1
  00014	8a000007	 bhi         |$LN8@GetGroupBy|
  00018	e5900004	 ldr         r0, [r0, #4]
  0001c		 |$LL3@GetGroupBy|

; 20   :     {
; 21   :         i++;

  0001c	e28ee001	 add         lr, lr, #1

; 22   :         if (i >= pDevice->nbGpioGrp)

  00020	e15e0000	 cmp         lr, r0
  00024	e2844004	 add         r4, r4, #4
  00028	aa000002	 bge         |$LN8@GetGroupBy|
  0002c	e5943000	 ldr         r3, [r4]
  00030	e1530001	 cmp         r3, r1
  00034	9afffff8	 bls         |$LL3@GetGroupBy|
  00038		 |$LN8@GetGroupBy|

; 23   :         {
; 24   :             break;
; 25   :         }
; 26   :     }    
; 27   :     *pGrp = i-1;

  00038	e24e3001	 sub         r3, lr, #1
  0003c	e5823000	 str         r3, [r2]

; 28   :     return TRUE;

  00040	e3a00001	 mov         r0, #1

; 29   : } 

  00044	e8bd4010	 ldmia       sp!, {r4, lr}
  00048	e12fff1e	 bx          lr
  0004c		 |$M44093|

			 ENDP  ; |GetGroupByID|

	EXPORT	|GPIOInit|
	IMPORT	|LocalAlloc|
	IMPORT	|DeviceIoControl|
	IMPORT	|CreateFileW|
	IMPORT	|BSPGetGpioDevicesTable|
	IMPORT	|BSPGpioInit|
	IMPORT	|memcpy|

  00000			 AREA	 |.pdata|, PDATA
|$T44111| DCD	|$LN17@GPIOInit|
	DCD	0x40004602
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOInit| PROC

; 32   : {

  00000		 |$LN17@GPIOInit|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd05c	 sub         sp, sp, #0x5C
  00008		 |$M44108|

; 33   :     int i;
; 34   :     GpioDevice_t* pDevice;
; 35   : 
; 36   :     BSPGpioInit();

  00008	eb000000	 bl          BSPGpioInit

; 37   :     pDevice = BSPGetGpioDevicesTable();

  0000c	eb000000	 bl          BSPGetGpioDevicesTable
  00010	e1a05000	 mov         r5, r0

; 38   : 
; 39   :     // setup range and get handles
; 40   :     for (i = 0; i < pDevice->nbGpioGrp; ++i)

  00014	e5953004	 ldr         r3, [r5, #4]
  00018	e3a04000	 mov         r4, #0
  0001c	e3530000	 cmp         r3, #0
  00020	da000035	 ble         |$LN14@GPIOInit|
  00024	e3a08000	 mov         r8, #0
  00028	e3a09822	 mov         r9, #0x22, 16
  0002c	e3a0b003	 mov         r11, #3
  00030	e28d6010	 add         r6, sp, #0x10
  00034	e3a0a048	 mov         r10, #0x48
  00038	e28d7014	 add         r7, sp, #0x14
  0003c		 |$LL8@GPIOInit|

; 41   :     {
; 42   :         DWORD size;
; 43   :         DEVICE_IFC_GPIO ifc;
; 44   :         pDevice->rgHandles[i] = CreateFile(pDevice->name[i],0,0,NULL,OPEN_EXISTING,0,NULL);

  0003c	e5953014	 ldr         r3, [r5, #0x14]
  00040	e3a02000	 mov         r2, #0
  00044	e3a01000	 mov         r1, #0
  00048	e7930104	 ldr         r0, [r3, +r4, lsl #2]
  0004c	e3a03000	 mov         r3, #0
  00050	e58d8008	 str         r8, [sp, #8]
  00054	e58d8004	 str         r8, [sp, #4]
  00058	e58db000	 str         r11, [sp]
  0005c	eb000000	 bl          CreateFileW
  00060	e595300c	 ldr         r3, [r5, #0xC]
  00064	e7830104	 str         r0, [r3, +r4, lsl #2]

; 45   :         if (pDevice->rgHandles[i] != INVALID_HANDLE_VALUE)

  00068	e595300c	 ldr         r3, [r5, #0xC]
  0006c	e7933104	 ldr         r3, [r3, +r4, lsl #2]
  00070	e3730001	 cmn         r3, #1
  00074	0a00001a	 beq         |$LN5@GPIOInit|

; 46   :         {            
; 47   :             if (DeviceIoControl(pDevice->rgHandles[i],IOCTL_DDK_GET_DRIVER_IFC,
; 48   :                 (BYTE*) &DEVICE_IFC_GPIO_GUID,sizeof(DEVICE_IFC_GPIO_GUID),
; 49   :                 &ifc,sizeof(DEVICE_IFC_GPIO),&size,NULL) == FALSE)

  00078	e595100c	 ldr         r1, [r5, #0xC]
  0007c	e59f2090	 ldr         r2, [pc, #0x90]
  00080	e3a03010	 mov         r3, #0x10
  00084	e7910104	 ldr         r0, [r1, +r4, lsl #2]
  00088	e3891b01	 orr         r1, r9, #1, 22
  0008c	e58d800c	 str         r8, [sp, #0xC]
  00090	e58d6008	 str         r6, [sp, #8]
  00094	e58da004	 str         r10, [sp, #4]
  00098	e58d7000	 str         r7, [sp]
  0009c	eb000000	 bl          DeviceIoControl
  000a0	e3500000	 cmp         r0, #0

; 50   :             {
; 51   :                 pDevice->rgGpioTbls[i] = NULL;
; 52   :             }
; 53   :             else

  000a4	0a00000e	 beq         |$LN5@GPIOInit|

; 54   :             {            
; 55   :                 pDevice->rgGpioTbls[i] = LocalAlloc(0,sizeof(DEVICE_IFC_GPIO));

  000a8	e3a01048	 mov         r1, #0x48
  000ac	e3a00000	 mov         r0, #0
  000b0	eb000000	 bl          LocalAlloc
  000b4	e5953010	 ldr         r3, [r5, #0x10]
  000b8	e7830104	 str         r0, [r3, +r4, lsl #2]

; 56   :                 if (pDevice->rgGpioTbls[i] == NULL)

  000bc	e5953010	 ldr         r3, [r5, #0x10]
  000c0	e7933104	 ldr         r3, [r3, +r4, lsl #2]
  000c4	e3530000	 cmp         r3, #0
  000c8	0a00000f	 beq         |$cleanUp$43791|

; 57   :                 {
; 58   :                     goto cleanUp;
; 59   :                 }
; 60   :                 memcpy(pDevice->rgGpioTbls[i],&ifc,sizeof(DEVICE_IFC_GPIO));

  000cc	e5953010	 ldr         r3, [r5, #0x10]
  000d0	e28d1014	 add         r1, sp, #0x14
  000d4	e3a02048	 mov         r2, #0x48
  000d8	e7930104	 ldr         r0, [r3, +r4, lsl #2]
  000dc	eb000000	 bl          memcpy

; 61   :             }
; 62   :         }
; 63   :         else

  000e0	ea000001	 b           |$LN7@GPIOInit|
  000e4		 |$LN5@GPIOInit|

; 64   :         {
; 65   :             pDevice->rgGpioTbls[i] = NULL;

  000e4	e5953010	 ldr         r3, [r5, #0x10]
  000e8	e7838104	 str         r8, [r3, +r4, lsl #2]
  000ec		 |$LN7@GPIOInit|
  000ec	e5953004	 ldr         r3, [r5, #4]
  000f0	e2844001	 add         r4, r4, #1
  000f4	e1540003	 cmp         r4, r3
  000f8	baffffcf	 blt         |$LL8@GPIOInit|
  000fc		 |$LN14@GPIOInit|

; 66   :         }
; 67   :         
; 68   : 
; 69   :     }
; 70   : 
; 71   :     return TRUE;

  000fc	e3a00001	 mov         r0, #1
  00100		 |$LN9@GPIOInit|

; 75   : }

  00100	e28dd05c	 add         sp, sp, #0x5C
  00104	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00108	e12fff1e	 bx          lr
  0010c		 |$cleanUp$43791|

; 72   : 
; 73   : cleanUp:
; 74   :     return FALSE;

  0010c	e3a00000	 mov         r0, #0
  00110	eafffffa	 b           |$LN9@GPIOInit|
  00114		 |$LN18@GPIOInit|
  00114		 |$LN19@GPIOInit|
  00114	00000000	 DCD         |DEVICE_IFC_GPIO_GUID|
  00118		 |$M44109|

			 ENDP  ; |GPIOInit|

	EXPORT	|GPIOOpen|

  00000			 AREA	 |.pdata|, PDATA
|$T44122| DCD	|$LN7@GPIOOpen|
	DCD	0x40000f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOOpen| PROC

; 78   : {

  00000		 |$LN7@GPIOOpen|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M44119|

; 79   :     if (s_DispatcherInitialized == FALSE)

  00004	e59f402c	 ldr         r4, [pc, #0x2C]
  00008	e5943000	 ldr         r3, [r4]
  0000c	e3530000	 cmp         r3, #0
  00010	1a000005	 bne         |$LN1@GPIOOpen|

; 80   :     {
; 81   :         s_DispatcherInitialized = GPIOInit();

  00014	eb000000	 bl          GPIOInit
  00018	e3500000	 cmp         r0, #0
  0001c	e5840000	 str         r0, [r4]

; 82   :     }
; 83   :     if (s_DispatcherInitialized == FALSE)
; 84   :     {
; 85   :         return NULL;

  00020	03a00000	 moveq       r0, #0

; 88   : }

  00024	08bd4010	 ldmeqia     sp!, {r4, lr}
  00028	012fff1e	 bxeq        lr
  0002c		 |$LN1@GPIOOpen|

; 86   :     }
; 87   :     return BSPGetGpioDevicesTable();

  0002c	eb000000	 bl          BSPGetGpioDevicesTable

; 88   : }

  00030	e8bd4010	 ldmia       sp!, {r4, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$LN8@GPIOOpen|
  00038		 |$LN9@GPIOOpen|
  00038	00000000	 DCD         |s_DispatcherInitialized|
  0003c		 |$M44120|

			 ENDP  ; |GPIOOpen|

	EXPORT	|GPIOClose|

  00000			 AREA	 |.pdata|, PDATA
|$T44131| DCD	|$LN5@GPIOClose|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOClose| PROC

; 91   : {

  00000		 |$LN5@GPIOClose|
  00000		 |$M44128|

; 92   :     UNREFERENCED_PARAMETER(hContext);
; 93   : }

  00000	e12fff1e	 bx          lr
  00004		 |$M44129|

			 ENDP  ; |GPIOClose|

	EXPORT	|GPIOSetBit|

  00000			 AREA	 |.pdata|, PDATA
|$T44141| DCD	|$LN8@GPIOSetBit|
	DCD	0x40002904
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOSetBit| PROC

; 96   : {

  00000		 |$LN8@GPIOSetBit|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5030	 stmdb       sp!, {r4, r5, r12, lr}
  0000c	e24dd014	 sub         sp, sp, #0x14
  00010		 |$M44138|
  00010	e1a05001	 mov         r5, r1
  00014	e58d5028	 str         r5, [sp, #0x28]
  00018	e1a04000	 mov         r4, r0

; 97   :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;
; 98   :     int grp;
; 99   :     if (GetGroupByID(pDevice,id,&grp))

  0001c	e28d2010	 add         r2, sp, #0x10
  00020	eb000000	 bl          GetGroupByID
  00024	e3500000	 cmp         r0, #0
  00028	0a00001a	 beq         |$LN1@GPIOSetBit|

; 100  :     {
; 101  :         id -= pDevice->rgRanges[grp];

  0002c	e59d0010	 ldr         r0, [sp, #0x10]
  00030	e5943008	 ldr         r3, [r4, #8]

; 102  : 
; 103  :         if (pDevice->rgGpioTbls[grp])

  00034	e5942010	 ldr         r2, [r4, #0x10]
  00038	e7933100	 ldr         r3, [r3, +r0, lsl #2]
  0003c	e0451003	 sub         r1, r5, r3
  00040	e58d1028	 str         r1, [sp, #0x28]
  00044	e7b23100	 ldr         r3, [r2, +r0, lsl #2]!
  00048	e3530000	 cmp         r3, #0
  0004c	0a000005	 beq         |$LN2@GPIOSetBit|

; 104  :             pDevice->rgGpioTbls[grp]->pfnSetBit(pDevice->rgGpioTbls[grp]->context, id);

  00050	e5923000	 ldr         r3, [r2]
  00054	e5930000	 ldr         r0, [r3]
  00058	e5933010	 ldr         r3, [r3, #0x10]
  0005c	e1a0e00f	 mov         lr, pc
  00060	e12fff13	 bx          r3

; 105  :         else

  00064	ea00000b	 b           |$LN1@GPIOSetBit|
  00068		 |$LN2@GPIOSetBit|

; 106  :         {
; 107  :             DeviceIoControl(pDevice->rgHandles[grp],IOCTL_GPIO_SETBIT,&id,sizeof(id),NULL,0,NULL,NULL);

  00068	e594300c	 ldr         r3, [r4, #0xC]
  0006c	e3a01822	 mov         r1, #0x22, 16
  00070	e3a0e000	 mov         lr, #0
  00074	e7930100	 ldr         r0, [r3, +r0, lsl #2]
  00078	e3a03004	 mov         r3, #4
  0007c	e28d2028	 add         r2, sp, #0x28
  00080	e3811b03	 orr         r1, r1, #3, 22
  00084	e58de00c	 str         lr, [sp, #0xC]
  00088	e58de008	 str         lr, [sp, #8]
  0008c	e58de004	 str         lr, [sp, #4]
  00090	e58de000	 str         lr, [sp]
  00094	eb000000	 bl          DeviceIoControl
  00098		 |$LN1@GPIOSetBit|

; 108  :         }
; 109  :     }
; 110  : }

  00098	e28dd014	 add         sp, sp, #0x14
  0009c	e89d6030	 ldmia       sp, {r4, r5, sp, lr}
  000a0	e12fff1e	 bx          lr
  000a4		 |$M44139|

			 ENDP  ; |GPIOSetBit|

	EXPORT	|GPIOClrBit|

  00000			 AREA	 |.pdata|, PDATA
|$T44151| DCD	|$LN8@GPIOClrBit|
	DCD	0x40002904
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOClrBit| PROC

; 113  : {

  00000		 |$LN8@GPIOClrBit|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5030	 stmdb       sp!, {r4, r5, r12, lr}
  0000c	e24dd014	 sub         sp, sp, #0x14
  00010		 |$M44148|
  00010	e1a05001	 mov         r5, r1
  00014	e58d5028	 str         r5, [sp, #0x28]
  00018	e1a04000	 mov         r4, r0

; 114  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;
; 115  :     int grp;
; 116  :     if (GetGroupByID(pDevice,id,&grp))

  0001c	e28d2010	 add         r2, sp, #0x10
  00020	eb000000	 bl          GetGroupByID
  00024	e3500000	 cmp         r0, #0
  00028	0a000019	 beq         |$LN1@GPIOClrBit|

; 117  :     {
; 118  :         id -= pDevice->rgRanges[grp];

  0002c	e59d0010	 ldr         r0, [sp, #0x10]
  00030	e5943008	 ldr         r3, [r4, #8]

; 119  : 
; 120  :         if (pDevice->rgGpioTbls[grp])

  00034	e5942010	 ldr         r2, [r4, #0x10]
  00038	e7933100	 ldr         r3, [r3, +r0, lsl #2]
  0003c	e0451003	 sub         r1, r5, r3
  00040	e58d1028	 str         r1, [sp, #0x28]
  00044	e7b23100	 ldr         r3, [r2, +r0, lsl #2]!
  00048	e3530000	 cmp         r3, #0
  0004c	0a000005	 beq         |$LN2@GPIOClrBit|

; 121  :         {
; 122  :             pDevice->rgGpioTbls[grp]->pfnClrBit(pDevice->rgGpioTbls[grp]->context, id);

  00050	e5923000	 ldr         r3, [r2]
  00054	e5930000	 ldr         r0, [r3]
  00058	e5933014	 ldr         r3, [r3, #0x14]
  0005c	e1a0e00f	 mov         lr, pc
  00060	e12fff13	 bx          r3

; 123  :         }
; 124  :         else

  00064	ea00000a	 b           |$LN1@GPIOClrBit|
  00068		 |$LN2@GPIOClrBit|

; 125  :         {
; 126  :             DeviceIoControl(pDevice->rgHandles[grp],IOCTL_GPIO_CLRBIT,&id,sizeof(id),NULL,0,NULL,NULL);

  00068	e594300c	 ldr         r3, [r4, #0xC]
  0006c	e59f102c	 ldr         r1, [pc, #0x2C]
  00070	e3a0e000	 mov         lr, #0
  00074	e7930100	 ldr         r0, [r3, +r0, lsl #2]
  00078	e3a03004	 mov         r3, #4
  0007c	e28d2028	 add         r2, sp, #0x28
  00080	e58de00c	 str         lr, [sp, #0xC]
  00084	e58de008	 str         lr, [sp, #8]
  00088	e58de004	 str         lr, [sp, #4]
  0008c	e58de000	 str         lr, [sp]
  00090	eb000000	 bl          DeviceIoControl
  00094		 |$LN1@GPIOClrBit|

; 127  :         }
; 128  :     }
; 129  : }

  00094	e28dd014	 add         sp, sp, #0x14
  00098	e89d6030	 ldmia       sp, {r4, r5, sp, lr}
  0009c	e12fff1e	 bx          lr
  000a0		 |$LN9@GPIOClrBit|
  000a0		 |$LN10@GPIOClrBit|
  000a0	00220c04	 DCD         0x220c04
  000a4		 |$M44149|

			 ENDP  ; |GPIOClrBit|

	EXPORT	|GPIOGetBit|

  00000			 AREA	 |.pdata|, PDATA
|$T44165| DCD	|$LN9@GPIOGetBit|
	DCD	0x40002f04
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOGetBit| PROC

; 132  : {

  00000		 |$LN9@GPIOGetBit|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5030	 stmdb       sp!, {r4, r5, r12, lr}
  0000c	e24dd014	 sub         sp, sp, #0x14
  00010		 |$M44162|
  00010	e1a04001	 mov         r4, r1
  00014	e58d4028	 str         r4, [sp, #0x28]
  00018	e1a05000	 mov         r5, r0

; 133  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;
; 134  :     int grp;
; 135  :     if (GetGroupByID(pDevice,id,&grp))

  0001c	e28d2010	 add         r2, sp, #0x10
  00020	eb000000	 bl          GetGroupByID
  00024	e3500000	 cmp         r0, #0
  00028	0a00001e	 beq         |$LN1@GPIOGetBit|

; 136  :     {
; 137  :         id -= pDevice->rgRanges[grp];

  0002c	e59d0010	 ldr         r0, [sp, #0x10]
  00030	e5953008	 ldr         r3, [r5, #8]

; 138  : 
; 139  :         if (pDevice->rgGpioTbls[grp])

  00034	e5952010	 ldr         r2, [r5, #0x10]
  00038	e7933100	 ldr         r3, [r3, +r0, lsl #2]
  0003c	e0441003	 sub         r1, r4, r3
  00040	e58d1028	 str         r1, [sp, #0x28]
  00044	e7b23100	 ldr         r3, [r2, +r0, lsl #2]!
  00048	e3530000	 cmp         r3, #0
  0004c	0a000005	 beq         |$LN3@GPIOGetBit|

; 140  :         {
; 141  :             return pDevice->rgGpioTbls[grp]->pfnGetBit(pDevice->rgGpioTbls[grp]->context, id);

  00050	e5923000	 ldr         r3, [r2]
  00054	e5930000	 ldr         r0, [r3]
  00058	e5933018	 ldr         r3, [r3, #0x18]
  0005c	e1a0e00f	 mov         lr, pc
  00060	e12fff13	 bx          r3
  00064	ea000010	 b           |$LN5@GPIOGetBit|
  00068		 |$LN3@GPIOGetBit|

; 142  :         }
; 143  :         else
; 144  :         {
; 145  :             DWORD value;
; 146  :             if (DeviceIoControl(pDevice->rgHandles[grp],IOCTL_GPIO_GETBIT,&id,sizeof(id),&value,sizeof(value),NULL,NULL))

  00068	e595300c	 ldr         r3, [r5, #0xC]
  0006c	e59f1044	 ldr         r1, [pc, #0x44]
  00070	e3a05004	 mov         r5, #4
  00074	e7930100	 ldr         r0, [r3, +r0, lsl #2]
  00078	e28de010	 add         lr, sp, #0x10
  0007c	e3a04000	 mov         r4, #0
  00080	e3a03004	 mov         r3, #4
  00084	e28d2028	 add         r2, sp, #0x28
  00088	e58d400c	 str         r4, [sp, #0xC]
  0008c	e58d4008	 str         r4, [sp, #8]
  00090	e58d5004	 str         r5, [sp, #4]
  00094	e58de000	 str         lr, [sp]
  00098	eb000000	 bl          DeviceIoControl
  0009c	e3500000	 cmp         r0, #0

; 147  :             {
; 148  :                 return value;

  000a0	159d0010	 ldrne       r0, [sp, #0x10]
  000a4	1a000000	 bne         |$LN5@GPIOGetBit|
  000a8		 |$LN1@GPIOGetBit|

; 149  :             }
; 150  :         }
; 151  :     }
; 152  :     return (DWORD) -1;

  000a8	e3e00000	 mvn         r0, #0
  000ac		 |$LN5@GPIOGetBit|

; 153  : }

  000ac	e28dd014	 add         sp, sp, #0x14
  000b0	e89d6030	 ldmia       sp, {r4, r5, sp, lr}
  000b4	e12fff1e	 bx          lr
  000b8		 |$LN10@GPIOGetBit|
  000b8		 |$LN11@GPIOGetBit|
  000b8	00220c0c	 DCD         0x220c0c
  000bc		 |$M44163|

			 ENDP  ; |GPIOGetBit|

	EXPORT	|GPIOSetMode|

  00000			 AREA	 |.pdata|, PDATA
|$T44178| DCD	|$LN8@GPIOSetMod|
	DCD	0x40002a02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOSetMode| PROC

; 156  : {

  00000		 |$LN8@GPIOSetMod|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd018	 sub         sp, sp, #0x18
  00008		 |$M44175|
  00008	e1a06002	 mov         r6, r2
  0000c	e1a05001	 mov         r5, r1
  00010	e1a04000	 mov         r4, r0

; 157  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;
; 158  :     int grp;
; 159  :     if (GetGroupByID(pDevice,id,&grp))

  00014	e28d2010	 add         r2, sp, #0x10
  00018	eb000000	 bl          GetGroupByID
  0001c	e3500000	 cmp         r0, #0
  00020	0a00001d	 beq         |$LN1@GPIOSetMod|

; 160  :     {
; 161  :         id -= pDevice->rgRanges[grp];

  00024	e59d0010	 ldr         r0, [sp, #0x10]
  00028	e5943008	 ldr         r3, [r4, #8]

; 162  : 
; 163  :         if (pDevice->rgGpioTbls[grp])

  0002c	e594e010	 ldr         lr, [r4, #0x10]
  00030	e7933100	 ldr         r3, [r3, +r0, lsl #2]
  00034	e79ee100	 ldr         lr, [lr, +r0, lsl #2]
  00038	e0451003	 sub         r1, r5, r3
  0003c	e35e0000	 cmp         lr, #0
  00040	0a000007	 beq         |$LN2@GPIOSetMod|

; 164  :         {
; 165  :             pDevice->rgGpioTbls[grp]->pfnSetMode((HANDLE) pDevice->rgGpioTbls[grp]->context, id, mode);

  00044	e5943010	 ldr         r3, [r4, #0x10]
  00048	e1a02006	 mov         r2, r6
  0004c	e7933100	 ldr         r3, [r3, +r0, lsl #2]
  00050	e5930000	 ldr         r0, [r3]
  00054	e593301c	 ldr         r3, [r3, #0x1C]
  00058	e1a0e00f	 mov         lr, pc
  0005c	e12fff13	 bx          r3

; 166  :         }
; 167  :         else

  00060	ea00000d	 b           |$LN1@GPIOSetMod|
  00064		 |$LN2@GPIOSetMod|

; 168  :         {
; 169  :             DWORD config[2];
; 170  :             config[0] = id;
; 171  :             config[1] = mode;
; 172  : 
; 173  :             DeviceIoControl(pDevice->rgHandles[grp],IOCTL_GPIO_SETMODE,config,sizeof(config),NULL,0,NULL,NULL);

  00064	e594300c	 ldr         r3, [r4, #0xC]
  00068	e58d1010	 str         r1, [sp, #0x10]
  0006c	e58d6014	 str         r6, [sp, #0x14]
  00070	e7930100	 ldr         r0, [r3, +r0, lsl #2]
  00074	e3a01822	 mov         r1, #0x22, 16
  00078	e3a0e000	 mov         lr, #0
  0007c	e3a03008	 mov         r3, #8
  00080	e28d2010	 add         r2, sp, #0x10
  00084	e3811ec1	 orr         r1, r1, #0xC1, 28
  00088	e58de00c	 str         lr, [sp, #0xC]
  0008c	e58de008	 str         lr, [sp, #8]
  00090	e58de004	 str         lr, [sp, #4]
  00094	e58de000	 str         lr, [sp]
  00098	eb000000	 bl          DeviceIoControl
  0009c		 |$LN1@GPIOSetMod|

; 174  : 
; 175  :         }
; 176  :     }
; 177  : }

  0009c	e28dd018	 add         sp, sp, #0x18
  000a0	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000a4	e12fff1e	 bx          lr
  000a8		 |$M44176|

			 ENDP  ; |GPIOSetMode|

	EXPORT	|GPIOGetMode|

  00000			 AREA	 |.pdata|, PDATA
|$T44190| DCD	|$LN9@GPIOGetMod|
	DCD	0x40002f04
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOGetMode| PROC

; 180  : {

  00000		 |$LN9@GPIOGetMod|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5030	 stmdb       sp!, {r4, r5, r12, lr}
  0000c	e24dd014	 sub         sp, sp, #0x14
  00010		 |$M44187|
  00010	e1a04001	 mov         r4, r1
  00014	e58d4028	 str         r4, [sp, #0x28]
  00018	e1a05000	 mov         r5, r0

; 181  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;
; 182  :     int grp;
; 183  :     if (GetGroupByID(pDevice,id,&grp))

  0001c	e28d2010	 add         r2, sp, #0x10
  00020	eb000000	 bl          GetGroupByID
  00024	e3500000	 cmp         r0, #0
  00028	0a00001e	 beq         |$LN1@GPIOGetMod|

; 184  :     {
; 185  :         id -= pDevice->rgRanges[grp];

  0002c	e59d0010	 ldr         r0, [sp, #0x10]
  00030	e5953008	 ldr         r3, [r5, #8]

; 186  : 
; 187  :         if (pDevice->rgGpioTbls[grp])

  00034	e5952010	 ldr         r2, [r5, #0x10]
  00038	e7933100	 ldr         r3, [r3, +r0, lsl #2]
  0003c	e0441003	 sub         r1, r4, r3
  00040	e58d1028	 str         r1, [sp, #0x28]
  00044	e7b23100	 ldr         r3, [r2, +r0, lsl #2]!
  00048	e3530000	 cmp         r3, #0
  0004c	0a000005	 beq         |$LN3@GPIOGetMod|

; 188  :         {
; 189  :             return pDevice->rgGpioTbls[grp]->pfnGetMode(pDevice->rgGpioTbls[grp]->context, id);

  00050	e5923000	 ldr         r3, [r2]
  00054	e5930000	 ldr         r0, [r3]
  00058	e5933020	 ldr         r3, [r3, #0x20]
  0005c	e1a0e00f	 mov         lr, pc
  00060	e12fff13	 bx          r3
  00064	ea000010	 b           |$LN5@GPIOGetMod|
  00068		 |$LN3@GPIOGetMod|

; 190  :         }
; 191  :         else
; 192  :         {
; 193  :             DWORD mode;
; 194  :             if (DeviceIoControl(pDevice->rgHandles[grp],IOCTL_GPIO_GETMODE,&id,sizeof(id),&mode,sizeof(mode),NULL,NULL))

  00068	e595300c	 ldr         r3, [r5, #0xC]
  0006c	e59f1044	 ldr         r1, [pc, #0x44]
  00070	e3a05004	 mov         r5, #4
  00074	e7930100	 ldr         r0, [r3, +r0, lsl #2]
  00078	e28de010	 add         lr, sp, #0x10
  0007c	e3a04000	 mov         r4, #0
  00080	e3a03004	 mov         r3, #4
  00084	e28d2028	 add         r2, sp, #0x28
  00088	e58d400c	 str         r4, [sp, #0xC]
  0008c	e58d4008	 str         r4, [sp, #8]
  00090	e58d5004	 str         r5, [sp, #4]
  00094	e58de000	 str         lr, [sp]
  00098	eb000000	 bl          DeviceIoControl
  0009c	e3500000	 cmp         r0, #0

; 195  :             {
; 196  :                 return mode;

  000a0	159d0010	 ldrne       r0, [sp, #0x10]
  000a4	1a000000	 bne         |$LN5@GPIOGetMod|
  000a8		 |$LN1@GPIOGetMod|

; 197  :             }
; 198  :         }
; 199  :     }
; 200  :     return (DWORD) -1;

  000a8	e3e00000	 mvn         r0, #0
  000ac		 |$LN5@GPIOGetMod|

; 201  : }

  000ac	e28dd014	 add         sp, sp, #0x14
  000b0	e89d6030	 ldmia       sp, {r4, r5, sp, lr}
  000b4	e12fff1e	 bx          lr
  000b8		 |$LN10@GPIOGetMod|
  000b8		 |$LN11@GPIOGetMod|
  000b8	00220c14	 DCD         0x220c14
  000bc		 |$M44188|

			 ENDP  ; |GPIOGetMode|

	EXPORT	|GPIOPullup|

  00000			 AREA	 |.pdata|, PDATA
|$T44205| DCD	|$LN7@GPIOPullup|
	DCD	0x40001d02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOPullup| PROC

; 204  : {

  00000		 |$LN7@GPIOPullup|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M44202|
  00008	e1a07002	 mov         r7, r2
  0000c	e1a06001	 mov         r6, r1
  00010	e1a04000	 mov         r4, r0

; 205  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;
; 206  :     int grp;
; 207  :     if (GetGroupByID(pDevice,id,&grp))

  00014	e28d2000	 add         r2, sp, #0
  00018	eb000000	 bl          GetGroupByID
  0001c	e3500000	 cmp         r0, #0
  00020	0a00000f	 beq         |$LN1@GPIOPullup|

; 208  :     {
; 209  :         id -= pDevice->rgRanges[grp];

  00024	e59d0000	 ldr         r0, [sp]
  00028	e5943008	 ldr         r3, [r4, #8]

; 210  : 
; 211  :         if (pDevice->rgGpioTbls[grp])

  0002c	e594e010	 ldr         lr, [r4, #0x10]
  00030	e7935100	 ldr         r5, [r3, +r0, lsl #2]
  00034	e79e3100	 ldr         r3, [lr, +r0, lsl #2]
  00038	e3530000	 cmp         r3, #0
  0003c	0a000008	 beq         |$LN1@GPIOPullup|

; 212  :         {
; 213  :             return pDevice->rgGpioTbls[grp]->pfnPullup((HANDLE) pDevice->rgGpioTbls[grp]->context, id, enable);

  00040	e1a0300e	 mov         r3, lr
  00044	e7933100	 ldr         r3, [r3, +r0, lsl #2]
  00048	e1a02007	 mov         r2, r7
  0004c	e0461005	 sub         r1, r6, r5
  00050	e5930000	 ldr         r0, [r3]
  00054	e5933024	 ldr         r3, [r3, #0x24]
  00058	e1a0e00f	 mov         lr, pc
  0005c	e12fff13	 bx          r3
  00060	ea000000	 b           |$LN3@GPIOPullup|
  00064		 |$LN1@GPIOPullup|

; 214  :         }
; 215  :     }
; 216  :     return (DWORD) FALSE;

  00064	e3a00000	 mov         r0, #0
  00068		 |$LN3@GPIOPullup|

; 217  : }

  00068	e28dd004	 add         sp, sp, #4
  0006c	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00070	e12fff1e	 bx          lr
  00074		 |$M44203|

			 ENDP  ; |GPIOPullup|

	EXPORT	|GPIOPulldown|

  00000			 AREA	 |.pdata|, PDATA
|$T44218| DCD	|$LN7@GPIOPulldo|
	DCD	0x40001d02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOPulldown| PROC

; 220  : {

  00000		 |$LN7@GPIOPulldo|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M44215|
  00008	e1a07002	 mov         r7, r2
  0000c	e1a06001	 mov         r6, r1
  00010	e1a04000	 mov         r4, r0

; 221  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;
; 222  :     int grp;
; 223  :     if (GetGroupByID(pDevice,id,&grp))

  00014	e28d2000	 add         r2, sp, #0
  00018	eb000000	 bl          GetGroupByID
  0001c	e3500000	 cmp         r0, #0
  00020	0a00000f	 beq         |$LN1@GPIOPulldo|

; 224  :     {
; 225  :         id -= pDevice->rgRanges[grp];

  00024	e59d0000	 ldr         r0, [sp]
  00028	e5943008	 ldr         r3, [r4, #8]

; 226  : 
; 227  :         if (pDevice->rgGpioTbls[grp])

  0002c	e594e010	 ldr         lr, [r4, #0x10]
  00030	e7935100	 ldr         r5, [r3, +r0, lsl #2]
  00034	e79e3100	 ldr         r3, [lr, +r0, lsl #2]
  00038	e3530000	 cmp         r3, #0
  0003c	0a000008	 beq         |$LN1@GPIOPulldo|

; 228  :         {
; 229  :             return pDevice->rgGpioTbls[grp]->pfnPulldown((HANDLE) pDevice->rgGpioTbls[grp]->context, id, enable);            

  00040	e1a0300e	 mov         r3, lr
  00044	e7933100	 ldr         r3, [r3, +r0, lsl #2]
  00048	e1a02007	 mov         r2, r7
  0004c	e0461005	 sub         r1, r6, r5
  00050	e5930000	 ldr         r0, [r3]
  00054	e5933028	 ldr         r3, [r3, #0x28]
  00058	e1a0e00f	 mov         lr, pc
  0005c	e12fff13	 bx          r3
  00060	ea000000	 b           |$LN3@GPIOPulldo|
  00064		 |$LN1@GPIOPulldo|

; 230  :         }
; 231  :     }
; 232  :     return (DWORD) FALSE;

  00064	e3a00000	 mov         r0, #0
  00068		 |$LN3@GPIOPulldo|

; 233  : }

  00068	e28dd004	 add         sp, sp, #4
  0006c	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00070	e12fff1e	 bx          lr
  00074		 |$M44216|

			 ENDP  ; |GPIOPulldown|

	EXPORT	|GPIOInterruptInitialize|

  00000			 AREA	 |.pdata|, PDATA
|$T44232| DCD	|$LN7@GPIOInterr|
	DCD	0x40001f02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOInterruptInitialize| PROC

; 236  : {

  00000		 |$LN7@GPIOInterr|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M44229|
  00008	e1a09003	 mov         r9, r3
  0000c	e1a0a002	 mov         r10, r2
  00010	e1a08001	 mov         r8, r1
  00014	e1a05000	 mov         r5, r0

; 237  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;
; 238  :     int grp;
; 239  :     if (GetGroupByID(pDevice,id,&grp))

  00018	e28d2000	 add         r2, sp, #0
  0001c	eb000000	 bl          GetGroupByID
  00020	e3500000	 cmp         r0, #0
  00024	0a000010	 beq         |$LN1@GPIOInterr|

; 240  :     {        
; 241  :         id -= pDevice->rgRanges[grp];

  00028	e59d6000	 ldr         r6, [sp]
  0002c	e595e008	 ldr         lr, [r5, #8]

; 242  : 
; 243  :         if (pDevice->rgGpioTbls[grp])

  00030	e5954010	 ldr         r4, [r5, #0x10]
  00034	e79e7106	 ldr         r7, [lr, +r6, lsl #2]
  00038	e794e106	 ldr         lr, [r4, +r6, lsl #2]
  0003c	e35e0000	 cmp         lr, #0
  00040	0a000009	 beq         |$LN1@GPIOInterr|

; 244  :         {
; 245  :             return pDevice->rgGpioTbls[grp]->pfnInterruptInitialize((HANDLE) pDevice->rgGpioTbls[grp]->context, id, sysintr, hEvent);            

  00044	e1a00004	 mov         r0, r4
  00048	e7904106	 ldr         r4, [r0, +r6, lsl #2]
  0004c	e1a03009	 mov         r3, r9
  00050	e1a0200a	 mov         r2, r10
  00054	e5940000	 ldr         r0, [r4]
  00058	e5944030	 ldr         r4, [r4, #0x30]
  0005c	e0481007	 sub         r1, r8, r7
  00060	e1a0e00f	 mov         lr, pc
  00064	e12fff14	 bx          r4
  00068	ea000000	 b           |$LN3@GPIOInterr|
  0006c		 |$LN1@GPIOInterr|

; 246  :         }
; 247  :     }
; 248  :     return FALSE;

  0006c	e3a00000	 mov         r0, #0
  00070		 |$LN3@GPIOInterr|

; 249  : }

  00070	e28dd004	 add         sp, sp, #4
  00074	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  00078	e12fff1e	 bx          lr
  0007c		 |$M44230|

			 ENDP  ; |GPIOInterruptInitialize|

	EXPORT	|GPIOInterruptMask|

  00000			 AREA	 |.pdata|, PDATA
|$T44243| DCD	|$LN7@GPIOInterr@2|
	DCD	0x40001d02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOInterruptMask| PROC

; 252  : {

  00000		 |$LN7@GPIOInterr@2|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M44240|
  00008	e1a07003	 mov         r7, r3
  0000c	e1a08002	 mov         r8, r2
  00010	e1a06001	 mov         r6, r1
  00014	e1a05000	 mov         r5, r0

; 253  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;
; 254  :     int grp;
; 255  :     if (GetGroupByID(pDevice,id,&grp))

  00018	e28d2000	 add         r2, sp, #0
  0001c	eb000000	 bl          GetGroupByID
  00020	e3500000	 cmp         r0, #0
  00024	0a00000f	 beq         |$LN1@GPIOInterr@2|

; 256  :     {
; 257  :         id -= pDevice->rgRanges[grp];
; 258  : 
; 259  :         if (pDevice->rgGpioTbls[grp])

  00028	e59d4000	 ldr         r4, [sp]
  0002c	e595e010	 ldr         lr, [r5, #0x10]
  00030	e79ee104	 ldr         lr, [lr, +r4, lsl #2]
  00034	e35e0000	 cmp         lr, #0
  00038	0a00000a	 beq         |$LN1@GPIOInterr@2|

; 260  :         {
; 261  :             pDevice->rgGpioTbls[grp]->pfnInterruptMask((HANDLE) pDevice->rgGpioTbls[grp]->context, id, dwSysintr, fDisable);

  0003c	e595e010	 ldr         lr, [r5, #0x10]
  00040	e5950008	 ldr         r0, [r5, #8]
  00044	e1a03007	 mov         r3, r7
  00048	e79ee104	 ldr         lr, [lr, +r4, lsl #2]
  0004c	e7905104	 ldr         r5, [r0, +r4, lsl #2]
  00050	e1a02008	 mov         r2, r8
  00054	e59e0000	 ldr         r0, [lr]
  00058	e59e4034	 ldr         r4, [lr, #0x34]
  0005c	e0461005	 sub         r1, r6, r5
  00060	e1a0e00f	 mov         lr, pc
  00064	e12fff14	 bx          r4
  00068		 |$LN1@GPIOInterr@2|

; 262  :         }
; 263  :     }
; 264  : }

  00068	e28dd004	 add         sp, sp, #4
  0006c	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00070	e12fff1e	 bx          lr
  00074		 |$M44241|

			 ENDP  ; |GPIOInterruptMask|

	EXPORT	|GPIOInterruptDisable|

  00000			 AREA	 |.pdata|, PDATA
|$T44253| DCD	|$LN7@GPIOInterr@3|
	DCD	0x40001b02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOInterruptDisable| PROC

; 267  : {

  00000		 |$LN7@GPIOInterr@3|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M44250|
  00008	e1a06002	 mov         r6, r2
  0000c	e1a05001	 mov         r5, r1
  00010	e1a04000	 mov         r4, r0

; 268  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;
; 269  :     int grp;
; 270  :     if (GetGroupByID(pDevice,id,&grp))

  00014	e28d2000	 add         r2, sp, #0
  00018	eb000000	 bl          GetGroupByID
  0001c	e3500000	 cmp         r0, #0
  00020	0a00000e	 beq         |$LN1@GPIOInterr@3|

; 271  :     {
; 272  :         id -= pDevice->rgRanges[grp];
; 273  : 
; 274  :         if (pDevice->rgGpioTbls[grp])

  00024	e59de000	 ldr         lr, [sp]
  00028	e5943010	 ldr         r3, [r4, #0x10]
  0002c	e793310e	 ldr         r3, [r3, +lr, lsl #2]
  00030	e3530000	 cmp         r3, #0
  00034	0a000009	 beq         |$LN1@GPIOInterr@3|

; 275  :         {
; 276  :             pDevice->rgGpioTbls[grp]->pfnInterruptDisable((HANDLE) pDevice->rgGpioTbls[grp]->context, id, dwSysintr);            

  00038	e5943010	 ldr         r3, [r4, #0x10]
  0003c	e5940008	 ldr         r0, [r4, #8]
  00040	e1a02006	 mov         r2, r6
  00044	e793310e	 ldr         r3, [r3, +lr, lsl #2]
  00048	e790410e	 ldr         r4, [r0, +lr, lsl #2]
  0004c	e5930000	 ldr         r0, [r3]
  00050	e5933038	 ldr         r3, [r3, #0x38]
  00054	e0451004	 sub         r1, r5, r4
  00058	e1a0e00f	 mov         lr, pc
  0005c	e12fff13	 bx          r3
  00060		 |$LN1@GPIOInterr@3|

; 277  :         }
; 278  :     }
; 279  : }

  00060	e28dd004	 add         sp, sp, #4
  00064	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00068	e12fff1e	 bx          lr
  0006c		 |$M44251|

			 ENDP  ; |GPIOInterruptDisable|

	EXPORT	|GPIOInterruptDone|

  00000			 AREA	 |.pdata|, PDATA
|$T44263| DCD	|$LN7@GPIOInterr@4|
	DCD	0x40001b02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOInterruptDone| PROC

; 282  : {

  00000		 |$LN7@GPIOInterr@4|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M44260|
  00008	e1a06002	 mov         r6, r2
  0000c	e1a05001	 mov         r5, r1
  00010	e1a04000	 mov         r4, r0

; 283  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;
; 284  :     int grp;
; 285  :     if (GetGroupByID(pDevice,id,&grp))

  00014	e28d2000	 add         r2, sp, #0
  00018	eb000000	 bl          GetGroupByID
  0001c	e3500000	 cmp         r0, #0
  00020	0a00000e	 beq         |$LN1@GPIOInterr@4|

; 286  :     {
; 287  :         id -= pDevice->rgRanges[grp];
; 288  : 
; 289  :         if (pDevice->rgGpioTbls[grp])

  00024	e59de000	 ldr         lr, [sp]
  00028	e5943010	 ldr         r3, [r4, #0x10]
  0002c	e793310e	 ldr         r3, [r3, +lr, lsl #2]
  00030	e3530000	 cmp         r3, #0
  00034	0a000009	 beq         |$LN1@GPIOInterr@4|

; 290  :         {
; 291  :             pDevice->rgGpioTbls[grp]->pfnInterruptDone((HANDLE) pDevice->rgGpioTbls[grp]->context, id, dwSysintr);            

  00038	e5943010	 ldr         r3, [r4, #0x10]
  0003c	e5940008	 ldr         r0, [r4, #8]
  00040	e1a02006	 mov         r2, r6
  00044	e793310e	 ldr         r3, [r3, +lr, lsl #2]
  00048	e790410e	 ldr         r4, [r0, +lr, lsl #2]
  0004c	e5930000	 ldr         r0, [r3]
  00050	e593303c	 ldr         r3, [r3, #0x3C]
  00054	e0451004	 sub         r1, r5, r4
  00058	e1a0e00f	 mov         lr, pc
  0005c	e12fff13	 bx          r3
  00060		 |$LN1@GPIOInterr@4|

; 292  :         }
; 293  :     }
; 294  : }

  00060	e28dd004	 add         sp, sp, #4
  00064	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00068	e12fff1e	 bx          lr
  0006c		 |$M44261|

			 ENDP  ; |GPIOInterruptDone|

	EXPORT	|GPIOGetSystemIrq|

  00000			 AREA	 |.pdata|, PDATA
|$T44275| DCD	|$LN7@GPIOGetSys|
	DCD	0x40001b02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOGetSystemIrq| PROC

; 297  : {

  00000		 |$LN7@GPIOGetSys|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M44272|
  00008	e1a05001	 mov         r5, r1
  0000c	e1a04000	 mov         r4, r0

; 298  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;
; 299  :     int grp;
; 300  :     if (GetGroupByID(pDevice,id,&grp))

  00010	e28d2000	 add         r2, sp, #0
  00014	eb000000	 bl          GetGroupByID
  00018	e3500000	 cmp         r0, #0
  0001c	0a00000e	 beq         |$LN1@GPIOGetSys|

; 301  :     {
; 302  :         id -= pDevice->rgRanges[grp];

  00020	e59d0000	 ldr         r0, [sp]
  00024	e5943008	 ldr         r3, [r4, #8]

; 303  : 
; 304  :         if (pDevice->rgGpioTbls[grp])

  00028	e5942010	 ldr         r2, [r4, #0x10]
  0002c	e7931100	 ldr         r1, [r3, +r0, lsl #2]
  00030	e7923100	 ldr         r3, [r2, +r0, lsl #2]
  00034	e3530000	 cmp         r3, #0
  00038	0a000007	 beq         |$LN1@GPIOGetSys|

; 305  :         {
; 306  :             return pDevice->rgGpioTbls[grp]->pfnGetSystemIrq((HANDLE) pDevice->rgGpioTbls[grp]->context, id);            

  0003c	e1a03002	 mov         r3, r2
  00040	e7933100	 ldr         r3, [r3, +r0, lsl #2]
  00044	e0451001	 sub         r1, r5, r1
  00048	e5930000	 ldr         r0, [r3]
  0004c	e5933040	 ldr         r3, [r3, #0x40]
  00050	e1a0e00f	 mov         lr, pc
  00054	e12fff13	 bx          r3
  00058	ea000000	 b           |$LN3@GPIOGetSys|
  0005c		 |$LN1@GPIOGetSys|

; 307  :         }
; 308  :     }
; 309  : 	return (DWORD)SYSINTR_UNDEFINED;

  0005c	e3e00000	 mvn         r0, #0
  00060		 |$LN3@GPIOGetSys|

; 310  : }

  00060	e28dd004	 add         sp, sp, #4
  00064	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00068	e12fff1e	 bx          lr
  0006c		 |$M44273|

			 ENDP  ; |GPIOGetSystemIrq|

	EXPORT	|GPIOInterruptWakeUp|

  00000			 AREA	 |.pdata|, PDATA
|$T44289| DCD	|$LN7@GPIOInterr@5|
	DCD	0x40001f02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOInterruptWakeUp| PROC

; 313  : {

  00000		 |$LN7@GPIOInterr@5|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M44286|
  00008	e1a09003	 mov         r9, r3
  0000c	e1a0a002	 mov         r10, r2
  00010	e1a08001	 mov         r8, r1
  00014	e1a05000	 mov         r5, r0

; 314  :     BOOL rc = FALSE;
; 315  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;
; 316  :     int grp;
; 317  :     if (GetGroupByID(pDevice,id,&grp))

  00018	e28d2000	 add         r2, sp, #0
  0001c	eb000000	 bl          GetGroupByID
  00020	e3500000	 cmp         r0, #0
  00024	0a000010	 beq         |$LN1@GPIOInterr@5|

; 318  :     {
; 319  :         id -= pDevice->rgRanges[grp];

  00028	e59d6000	 ldr         r6, [sp]
  0002c	e595e008	 ldr         lr, [r5, #8]

; 320  : 
; 321  :         if (pDevice->rgGpioTbls[grp])

  00030	e5954010	 ldr         r4, [r5, #0x10]
  00034	e79e7106	 ldr         r7, [lr, +r6, lsl #2]
  00038	e794e106	 ldr         lr, [r4, +r6, lsl #2]
  0003c	e35e0000	 cmp         lr, #0
  00040	0a000009	 beq         |$LN1@GPIOInterr@5|

; 322  :         {
; 323  :             return pDevice->rgGpioTbls[grp]->pfnInterruptWakeUp((HANDLE) pDevice->rgGpioTbls[grp]->context, id, sysintr, fEnabled);

  00044	e1a00004	 mov         r0, r4
  00048	e7904106	 ldr         r4, [r0, +r6, lsl #2]
  0004c	e1a03009	 mov         r3, r9
  00050	e1a0200a	 mov         r2, r10
  00054	e5940000	 ldr         r0, [r4]
  00058	e5944044	 ldr         r4, [r4, #0x44]
  0005c	e0481007	 sub         r1, r8, r7
  00060	e1a0e00f	 mov         lr, pc
  00064	e12fff14	 bx          r4
  00068	ea000000	 b           |$LN3@GPIOInterr@5|
  0006c		 |$LN1@GPIOInterr@5|

; 324  :         }
; 325  :     }
; 326  : 	return rc;

  0006c	e3a00000	 mov         r0, #0
  00070		 |$LN3@GPIOInterr@5|

; 327  : }

  00070	e28dd004	 add         sp, sp, #4
  00074	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  00078	e12fff1e	 bx          lr
  0007c		 |$M44287|

			 ENDP  ; |GPIOInterruptWakeUp|

	EXPORT	|GPIOIoControl|

  00000			 AREA	 |.pdata|, PDATA
|$T44304| DCD	|$LN9@GPIOIoCont|
	DCD	0x40003102
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GPIOIoControl| PROC

; 340  : {    

  00000		 |$LN9@GPIOIoCont|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004	e24dd014	 sub         sp, sp, #0x14
  00008		 |$M44301|
  00008	e1a09003	 mov         r9, r3
  0000c	e1a0a002	 mov         r10, r2
  00010	e1a05000	 mov         r5, r0

; 341  :     GpioDevice_t *pDevice = (GpioDevice_t*)hContext;
; 342  :     int grp;
; 343  :     BOOL rc = FALSE;
; 344  : 
; 345  :     if (GetGroupByID(pDevice,id,&grp))

  00014	e28d2010	 add         r2, sp, #0x10
  00018	e3a04000	 mov         r4, #0
  0001c	eb000000	 bl          GetGroupByID
  00020	e3500000	 cmp         r0, #0
  00024	0a000022	 beq         |$LN1@GPIOIoCont|

; 346  :     {
; 347  :         id -= pDevice->rgRanges[grp];
; 348  :         
; 349  :         if (pDevice->rgGpioTbls[grp])

  00028	e59d8010	 ldr         r8, [sp, #0x10]
  0002c	e5951010	 ldr         r1, [r5, #0x10]

; 350  :             rc = pDevice->rgGpioTbls[grp]->pfnIoControl(pDevice->rgGpioTbls[grp]->context, code, pInBuffer,
; 351  :                 inSize, pOutBuffer, outSize, pOutSize);            

  00030	e1a02009	 mov         r2, r9
  00034	e7911108	 ldr         r1, [r1, +r8, lsl #2]
  00038	e3510000	 cmp         r1, #0
  0003c	0a00000e	 beq         |$LN2@GPIOIoCont|
  00040	e5951010	 ldr         r1, [r5, #0x10]
  00044	e59d6040	 ldr         r6, [sp, #0x40]
  00048	e59d703c	 ldr         r7, [sp, #0x3C]
  0004c	e7911108	 ldr         r1, [r1, +r8, lsl #2]
  00050	e59d5038	 ldr         r5, [sp, #0x38]
  00054	e59d3034	 ldr         r3, [sp, #0x34]
  00058	e5910000	 ldr         r0, [r1]
  0005c	e591402c	 ldr         r4, [r1, #0x2C]
  00060	e1a0100a	 mov         r1, r10
  00064	e58d6008	 str         r6, [sp, #8]
  00068	e58d7004	 str         r7, [sp, #4]
  0006c	e58d5000	 str         r5, [sp]
  00070	e1a0e00f	 mov         lr, pc
  00074	e12fff14	 bx          r4

; 352  :         else

  00078	ea00000c	 b           |$LN6@GPIOIoCont|
  0007c		 |$LN2@GPIOIoCont|

; 353  :         {
; 354  :             rc=DeviceIoControl(pDevice->rgHandles[grp], code, pInBuffer,
; 355  :                 inSize, pOutBuffer, outSize, pOutSize, NULL);

  0007c	e595300c	 ldr         r3, [r5, #0xC]
  00080	e59de040	 ldr         lr, [sp, #0x40]
  00084	e59d403c	 ldr         r4, [sp, #0x3C]
  00088	e7930108	 ldr         r0, [r3, +r8, lsl #2]
  0008c	e59d5038	 ldr         r5, [sp, #0x38]
  00090	e59d3034	 ldr         r3, [sp, #0x34]
  00094	e3a06000	 mov         r6, #0
  00098	e1a0100a	 mov         r1, r10
  0009c	e58d600c	 str         r6, [sp, #0xC]
  000a0	e58de008	 str         lr, [sp, #8]
  000a4	e58d4004	 str         r4, [sp, #4]
  000a8	e58d5000	 str         r5, [sp]
  000ac	eb000000	 bl          DeviceIoControl
  000b0		 |$LN6@GPIOIoCont|
  000b0	e1a04000	 mov         r4, r0
  000b4		 |$LN1@GPIOIoCont|

; 356  :         }
; 357  :         
; 358  :     }
; 359  :     return (DWORD) rc;
; 360  :     
; 361  : }

  000b4	e1a00004	 mov         r0, r4
  000b8	e28dd014	 add         sp, sp, #0x14
  000bc	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  000c0	e12fff1e	 bx          lr
  000c4		 |$M44302|

			 ENDP  ; |GPIOIoControl|

	END
