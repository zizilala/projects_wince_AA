; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\OAL\OMAP_ALLOC\alloc.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.data|, DATA
	 COMMON	|pool|, 0x4

	 COMMON	|poolSize|, 0x4

	 COMMON	|nbBlock|, 0x4

	 COMMON	|map|, 0x4


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|OALLocalAllocInit|
	IMPORT	|memset|
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\oal\omap_alloc\alloc.c

  00000			 AREA	 |.pdata|, PDATA
|$T43152| DCD	|$LN5@OALLocalAl|
	DCD	0x40001a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALLocalAllocInit| PROC

; 35   : {

  00000		 |$LN5@OALLocalAl|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M43149|
  00004	e1a08000	 mov         r8, r0

; 36   :     DWORD mapSize;
; 37   : 
; 38   :     DEBUGMSG(0,(TEXT("OALLocalAllocInit (0x%x,0x%x)\r\n"),buffer,size));
; 39   :     
; 40   :     nbBlock = (size+BLOCK_SIZE- 1)/ BLOCK_SIZE;	//128

  00008	e2813003	 add         r3, r1, #3
  0000c	e1a03123	 mov         r3, r3, lsr #2

; 41   :     mapSize = (nbBlock+(8*sizeof(*map))-1) / (8*sizeof(*map));//16

  00010	e283e007	 add         lr, r3, #7

; 42   :     poolSize = size - (mapSize*sizeof(*map)); //496

  00014	e04171ae	 sub         r7, r1, lr, lsr #3

; 43   :     nbBlock = (poolSize+BLOCK_SIZE- 1)/ BLOCK_SIZE;    //124

  00018	e59f2044	 ldr         r2, [pc, #0x44]
  0001c	e2873003	 add         r3, r7, #3
  00020	e59f6038	 ldr         r6, [pc, #0x38]

; 44   :     map = buffer;

  00024	e59f4030	 ldr         r4, [pc, #0x30]

; 45   :     pool = map + mapSize*sizeof(*map);

  00028	e59f5028	 ldr         r5, [pc, #0x28]
  0002c	e1a03123	 mov         r3, r3, lsr #2
  00030	e5823000	 str         r3, [r2]

; 46   :     memset(buffer,0,size);

  00034	e1a02001	 mov         r2, r1
  00038	e088e1ae	 add         lr, r8, lr, lsr #3
  0003c	e3a01000	 mov         r1, #0
  00040	e5867000	 str         r7, [r6]
  00044	e5848000	 str         r8, [r4]
  00048	e585e000	 str         lr, [r5]
  0004c	eb000000	 bl          memset

; 47   : 
; 48   :     DEBUGMSG(0,(TEXT("nbBlock 0x%x\r\n"),nbBlock));
; 49   : }

  00050	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$LN6@OALLocalAl|
  00058		 |$LN7@OALLocalAl|
  00058	00000000	 DCD         |pool|
  0005c		 |$LN8@OALLocalAl|
  0005c	00000000	 DCD         |map|
  00060		 |$LN9@OALLocalAl|
  00060	00000000	 DCD         |poolSize|
  00064		 |$LN10@OALLocalAl|
  00064	00000000	 DCD         |nbBlock|
  00068		 |$M43150|

			 ENDP  ; |OALLocalAllocInit|

	EXPORT	|OALLocalAlloc|
	EXPORT	|??_C@_1EA@CJMKJJJH@?$AAO?$AAA?$AAL?$AAL?$AAo?$AAc?$AAa?$AAl?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?5?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|NKDbgPrintfW|

  00000			 AREA	 |.pdata|, PDATA
|$T43176| DCD	|$LN23@OALLocalAl@2|
	DCD	0x40003c01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@CJMKJJJH@?$AAO?$AAA?$AAL?$AAL?$AAo?$AAc?$AAa?$AAl?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?5?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "L", 0x0, "o", 0x0, "c", 0x0, "a"
	DCB	0x0, "l", 0x0, "A", 0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t", 0x0, "u", 0x0, "r"
	DCB	0x0, "n", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "N", 0x0, "U"
	DCB	0x0, "L", 0x0, "L", 0x0, " ", 0x0, "!", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALLocalAlloc| PROC

; 56   : {

  00000		 |$LN23@OALLocalAl@2|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M43173|

; 57   :     DWORD i;
; 58   :     DWORD startBlock = (DWORD) -1;
; 59   :     DWORD contiguous = 0;
; 60   :     T_BLOCK_COUNT_TYPE nbRequestBlock = (T_BLOCK_COUNT_TYPE) (((size+BLOCK_COUNT_SIZE) + BLOCK_SIZE- 1)/ BLOCK_SIZE);
; 61   : 
; 62   :     UNREFERENCED_PARAMETER(flags);
; 63   : 
; 64   :     DEBUGMSG(0,(TEXT("OALLocalAlloc request for %d bytes => %d block\r\n"),size,nbRequestBlock));
; 65   : 
; 66   :     for (i=0;i<nbBlock;i++)

  00004	e59f30e0	 ldr         r3, [pc, #0xE0]
  00008	e2812007	 add         r2, r1, #7
  0000c	e3e00000	 mvn         r0, #0
  00010	e5937000	 ldr         r7, [r3]
  00014	e3a01000	 mov         r1, #0
  00018	e1a0e122	 mov         lr, r2, lsr #2
  0001c	e3570000	 cmp         r7, #0
  00020	e3a04000	 mov         r4, #0
  00024	0a000028	 beq         |$LN5@OALLocalAl@2|
  00028	e59f60b8	 ldr         r6, [pc, #0xB8]
  0002c	e3a08001	 mov         r8, #1
  00030	e5965000	 ldr         r5, [r6]
  00034		 |$LL13@OALLocalAl@2|

; 67   :     {
; 68   :         if (IS_BLOCK_USED(i))

  00034	e7d521a4	 ldrb        r2, [r5, +r4, lsr #3]
  00038	e2043007	 and         r3, r4, #7
  0003c	e1120318	 tst         r2, r8, lsl r3

; 69   :         {
; 70   :             DEBUGMSG(0,(TEXT("block %d is used\r\n"),i));
; 71   :             contiguous = 0;

  00040	13a01000	 movne       r1, #0

; 72   :             startBlock = (DWORD) -1;

  00044	13e00000	 mvnne       r0, #0
  00048	1a000004	 bne         |$LN12@OALLocalAl@2|

; 73   :         }
; 74   :         else
; 75   :         {
; 76   :             if (contiguous == 0)

  0004c	e3510000	 cmp         r1, #0

; 77   :             {
; 78   :                 DEBUGMSG(0,(TEXT("block %d is unused\r\n"),i));
; 79   :                 startBlock = i;
; 80   :             }
; 81   :             contiguous++;      

  00050	e2811001	 add         r1, r1, #1
  00054	01a00004	 moveq       r0, r4

; 82   :             if (nbRequestBlock == contiguous)

  00058	e15e0001	 cmp         lr, r1
  0005c	0a000002	 beq         |$LN18@OALLocalAl@2|
  00060		 |$LN12@OALLocalAl@2|

; 57   :     DWORD i;
; 58   :     DWORD startBlock = (DWORD) -1;
; 59   :     DWORD contiguous = 0;
; 60   :     T_BLOCK_COUNT_TYPE nbRequestBlock = (T_BLOCK_COUNT_TYPE) (((size+BLOCK_COUNT_SIZE) + BLOCK_SIZE- 1)/ BLOCK_SIZE);
; 61   : 
; 62   :     UNREFERENCED_PARAMETER(flags);
; 63   : 
; 64   :     DEBUGMSG(0,(TEXT("OALLocalAlloc request for %d bytes => %d block\r\n"),size,nbRequestBlock));
; 65   : 
; 66   :     for (i=0;i<nbBlock;i++)

  00060	e2844001	 add         r4, r4, #1
  00064	e1540007	 cmp         r4, r7
  00068	3afffff1	 bcc         |$LL13@OALLocalAl@2|
  0006c		 |$LN18@OALLocalAl@2|

; 83   :             {
; 84   :                 DEBUGMSG(0,(TEXT("found %d free blocks (%d,%d)\r\n"),nbRequestBlock,startBlock,i));
; 85   :                 break;
; 86   :             }
; 87   :         }
; 88   :     }
; 89   :     if ((startBlock == (DWORD) -1) || (nbRequestBlock != contiguous))

  0006c	e3700001	 cmn         r0, #1
  00070	0a000015	 beq         |$LN5@OALLocalAl@2|
  00074	e15e0001	 cmp         lr, r1
  00078	1a000013	 bne         |$LN5@OALLocalAl@2|

; 93   :     }
; 94   :     else
; 95   :     {        
; 96   :         T_BLOCK_COUNT_TYPE* p = (T_BLOCK_COUNT_TYPE*) (pool + (startBlock * BLOCK_SIZE));
; 97   :         *p = nbRequestBlock;

  0007c	e59f4060	 ldr         r4, [pc, #0x60]
  00080	e1a05100	 mov         r5, r0, lsl #2

; 98   :         for (i=0;i<nbRequestBlock;i++)

  00084	e35e0000	 cmp         lr, #0
  00088	e5943000	 ldr         r3, [r4]
  0008c	e785e003	 str         lr, [r5, +r3]
  00090	0a000008	 beq         |$LN1@OALLocalAl@2|

; 99   :         {
; 100  :             DEBUGMSG(0,(TEXT("marking block %d used\r\n"),i+startBlock));
; 101  :             MARK_BLOCK_USED(i+startBlock);

  00094	e3a07001	 mov         r7, #1
  00098		 |$LL3@OALLocalAl@2|
  00098	e5961000	 ldr         r1, [r6]
  0009c	e2002007	 and         r2, r0, #7
  000a0	e25ee001	 subs        lr, lr, #1
  000a4	e7f131a0	 ldrb        r3, [r1, +r0, lsr #3]!
  000a8	e2800001	 add         r0, r0, #1
  000ac	e1833217	 orr         r3, r3, r7, lsl r2
  000b0	e5c13000	 strb        r3, [r1]
  000b4	1afffff7	 bne         |$LL3@OALLocalAl@2|
  000b8		 |$LN1@OALLocalAl@2|

; 102  :         }
; 103  :         DEBUGMSG(0,(TEXT("returned value is 0x%x\r\n"),(HLOCAL) (pool + (startBlock * BLOCK_SIZE) + BLOCK_COUNT_SIZE)));
; 104  :         return (HLOCAL) (pool + (startBlock * BLOCK_SIZE) + BLOCK_COUNT_SIZE);

  000b8	e5943000	 ldr         r3, [r4]
  000bc	e0853003	 add         r3, r5, r3
  000c0	e2830004	 add         r0, r3, #4

; 105  :     }
; 106  : }

  000c4	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  000c8	e12fff1e	 bx          lr
  000cc		 |$LN5@OALLocalAl@2|

; 90   :     {
; 91   :         RETAILMSG(1, (TEXT("OALLocalAlloc returned NULL !\r\n")));

  000cc	e59f000c	 ldr         r0, [pc, #0xC]
  000d0	eb000000	 bl          NKDbgPrintfW

; 92   :         return NULL;

  000d4	e3a00000	 mov         r0, #0

; 105  :     }
; 106  : }

  000d8	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  000dc	e12fff1e	 bx          lr
  000e0		 |$LN24@OALLocalAl@2|
  000e0		 |$LN25@OALLocalAl@2|
  000e0	00000000	 DCD         |??_C@_1EA@CJMKJJJH@?$AAO?$AAA?$AAL?$AAL?$AAo?$AAc?$AAa?$AAl?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?5?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@|
  000e4		 |$LN26@OALLocalAl@2|
  000e4	00000000	 DCD         |pool|
  000e8		 |$LN27@OALLocalAl@2|
  000e8	00000000	 DCD         |map|
  000ec		 |$LN28@OALLocalAl@2|
  000ec	00000000	 DCD         |nbBlock|
  000f0		 |$M43174|

			 ENDP  ; |OALLocalAlloc|

	EXPORT	|OALLocalFree|

  00000			 AREA	 |.pdata|, PDATA
|$T43196| DCD	|$LN10@OALLocalFr|
	DCD	0x40001a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALLocalFree| PROC

; 112  : {

  00000		 |$LN10@OALLocalFr|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M43193|

; 113  :     T_BLOCK_COUNT_TYPE index,start;
; 114  :     T_BLOCK_COUNT_TYPE count = *((T_BLOCK_COUNT_TYPE*) ((UCHAR*) hMemory - BLOCK_COUNT_SIZE));
; 115  :     DEBUGMSG(0,(TEXT("OALLocalFree freeing 0x%x (%d blocks) \r\n"),hMemory,count));
; 116  : 
; 117  :     start = ((UCHAR*)hMemory - BLOCK_COUNT_SIZE - pool) / BLOCK_SIZE;

  00004	e59f3058	 ldr         r3, [pc, #0x58]
  00008	e5102004	 ldr         r2, [r0, #-4]
  0000c	e5933000	 ldr         r3, [r3]
  00010	e0403003	 sub         r3, r0, r3
  00014	e2533004	 subs        r3, r3, #4
  00018	42833003	 addmi       r3, r3, #3
  0001c	e1a00143	 mov         r0, r3, asr #2

; 118  :     for (index=start;index<start+count;index++)

  00020	e0804002	 add         r4, r0, r2
  00024	e1500004	 cmp         r0, r4
  00028	2a000009	 bcs         |$LN1@OALLocalFr|
  0002c	e59fe02c	 ldr         lr, [pc, #0x2C]
  00030	e3a05001	 mov         r5, #1
  00034		 |$LL3@OALLocalFr|

; 119  :     {
; 120  :         DEBUGMSG(0,(TEXT("marking block %d unused\r\n"),index));
; 121  :         MARK_BLOCK_UNUSED(index);

  00034	e59e1000	 ldr         r1, [lr]
  00038	e2002007	 and         r2, r0, #7
  0003c	e7f131a0	 ldrb        r3, [r1, +r0, lsr #3]!
  00040	e2800001	 add         r0, r0, #1
  00044	e1500004	 cmp         r0, r4
  00048	e1c33215	 bic         r3, r3, r5, lsl r2
  0004c	e5c13000	 strb        r3, [r1]
  00050	3afffff7	 bcc         |$LL3@OALLocalFr|
  00054		 |$LN1@OALLocalFr|

; 122  :     }
; 123  :     return NULL;

  00054	e3a00000	 mov         r0, #0

; 124  : }

  00058	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0005c	e12fff1e	 bx          lr
  00060		 |$LN11@OALLocalFr|
  00060		 |$LN12@OALLocalFr|
  00060	00000000	 DCD         |map|
  00064		 |$LN13@OALLocalFr|
  00064	00000000	 DCD         |pool|
  00068		 |$M43194|

			 ENDP  ; |OALLocalFree|

	END
