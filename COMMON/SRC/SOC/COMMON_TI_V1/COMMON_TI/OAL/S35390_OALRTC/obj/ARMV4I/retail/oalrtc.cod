; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\OAL\S35390_OALRTC\oalrtc.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.bss|, NOINIT
|g_hI2C| %	0x4

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\oal\s35390_oalrtc\oalrtc.c

  00000			 AREA	 |.pdata|, PDATA
|$T44499| DCD	|$LN11@reverse|
	DCD	0x40000c00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |reverse| PROC

; 93   : {

  00000		 |$LN11@reverse|
  00000		 |$M44496|
  00000	e1a01000	 mov         r1, r0

; 94   :     int i;
; 95   :     BYTE j;
; 96   :     BYTE result=0;

  00004	e3a00000	 mov         r0, #0

; 97   : 
; 98   :     for (i=0x1,j=0x80;i<0x100;i<<=1,j>>=1)

  00008	e3a02001	 mov         r2, #1
  0000c	e3a03080	 mov         r3, #0x80
  00010		 |$LL4@reverse|

; 99   :     {
; 100  :         if (b & i)

  00010	e1110002	 tst         r1, r2

; 101  :         {
; 102  :             result |= j;

  00014	11830000	 orrne       r0, r3, r0
  00018	e1a030a3	 mov         r3, r3, lsr #1
  0001c	e1a02082	 mov         r2, r2, lsl #1
  00020	e20330ff	 and         r3, r3, #0xFF
  00024	e3520c01	 cmp         r2, #1, 24
  00028	bafffff8	 blt         |$LL4@reverse|

; 103  :         }
; 104  :     }
; 105  :     return result;
; 106  : }

  0002c	e12fff1e	 bx          lr
  00030		 |$M44497|

			 ENDP  ; |reverse|


  00000			 AREA	 |.pdata|, PDATA
|$T44524| DCD	|$LN13@ReversedBC|
	DCD	0x40001100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |ReversedBCDtoBIN| PROC

; 108  : {    

  00000		 |$LN13@ReversedBC|
  00000		 |$M44521|

; 109  :     BYTE reversed = reverse(bcd);

  00000	e3a01000	 mov         r1, #0
  00004	e3a02001	 mov         r2, #1
  00008	e3a03080	 mov         r3, #0x80
  0000c		 |$LL6@ReversedBC|
  0000c	e1100002	 tst         r0, r2
  00010	11831001	 orrne       r1, r3, r1
  00014	e1a030a3	 mov         r3, r3, lsr #1
  00018	e1a02082	 mov         r2, r2, lsl #1
  0001c	e20330ff	 and         r3, r3, #0xFF
  00020	e3520c01	 cmp         r2, #1, 24
  00024	bafffff8	 blt         |$LL6@ReversedBC|

; 110  :     return (reversed >> 4) * 10 + (reversed & 0x0F);

  00028	e1a03221	 mov         r3, r1, lsr #4
  0002c	e20320ff	 and         r2, r3, #0xFF
  00030	e201300f	 and         r3, r1, #0xF
  00034	e3a0000a	 mov         r0, #0xA
  00038	e0233092	 mla         r3, r2, r0, r3
  0003c	e20300ff	 and         r0, r3, #0xFF

; 111  : }

  00040	e12fff1e	 bx          lr
  00044		 |$M44522|

			 ENDP  ; |ReversedBCDtoBIN|


  00000			 AREA	 |.pdata|, PDATA
|$T44551| DCD	|$LN13@BINtoRever|
	DCD	0x40001a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BINtoReversedBCD| PROC

; 113  : {

  00000		 |$LN13@BINtoRever|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M44548|

; 114  :     BYTE unit,deci;
; 115  :     deci = binary / 10;

  00004	e59f3058	 ldr         r3, [pc, #0x58]

; 116  :     unit = binary - (deci * 10);    

  00008	e3a020f6	 mov         r2, #0xF6

; 117  :     return reverse((deci << 4) | (unit));

  0000c	e3a04000	 mov         r4, #0
  00010	e0c31390	 smull       r1, r3, r0, r3
  00014	e3a0e001	 mov         lr, #1
  00018	e1a03143	 mov         r3, r3, asr #2
  0001c	e0833fa3	 add         r3, r3, r3, lsr #31
  00020	e20330ff	 and         r3, r3, #0xFF
  00024	e0220293	 mla         r2, r3, r2, r0
  00028	e1a03203	 mov         r3, r3, lsl #4
  0002c	e20220ff	 and         r2, r2, #0xFF
  00030	e20330ff	 and         r3, r3, #0xFF
  00034	e1832002	 orr         r2, r3, r2
  00038	e3a03080	 mov         r3, #0x80
  0003c		 |$LL6@BINtoRever|
  0003c	e112000e	 tst         r2, lr
  00040	11834004	 orrne       r4, r3, r4
  00044	e1a030a3	 mov         r3, r3, lsr #1
  00048	e1a0e08e	 mov         lr, lr, lsl #1
  0004c	e20330ff	 and         r3, r3, #0xFF
  00050	e35e0c01	 cmp         lr, #1, 24
  00054	bafffff8	 blt         |$LL6@BINtoRever|

; 118  : }

  00058	e1a00004	 mov         r0, r4
  0005c	e8bd4010	 ldmia       sp!, {r4, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$LN14@BINtoRever|
  00064		 |$LN15@BINtoRever|
  00064	66666667	 DCD         0x66666667
  00068		 |$M44549|

			 ENDP  ; |BINtoReversedBCD|

	EXPORT	|RTCI2CWrite|
	IMPORT	|I2CWrite|
	IMPORT	|I2CSetSlaveAddress|

  00004			 AREA	 |.bss|, NOINIT
|g_devAddr| %	0x2
|g_devAddr| %	0x2

  00000			 AREA	 |.pdata|, PDATA
|$T44567| DCD	|$LN7@RTCI2CWrit|
	DCD	0x40001701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |RTCI2CWrite| PROC

; 121  : {

  00000		 |$LN7@RTCI2CWrit|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M44564|
  00004	e1a06002	 mov         r6, r2
  00008	e1a05001	 mov         r5, r1
  0000c	e1a0e000	 mov         lr, r0

; 122  :     I2CSetSlaveAddress(g_hI2C, g_devAddr + subAddr);

  00010	e59f4040	 ldr         r4, [pc, #0x40]
  00014	e1d430b0	 ldrh        r3, [r4]
  00018	e5940008	 ldr         r0, [r4, #8]
  0001c	e083300e	 add         r3, r3, lr
  00020	e1a01803	 mov         r1, r3, lsl #16
  00024	e1a01821	 mov         r1, r1, lsr #16
  00028	eb000000	 bl          I2CSetSlaveAddress

; 123  :     return (I2CWrite(g_hI2C, 0, pBuffer, size) == size) ? TRUE : FALSE;

  0002c	e5940008	 ldr         r0, [r4, #8]
  00030	e1a03006	 mov         r3, r6
  00034	e1a02005	 mov         r2, r5
  00038	e3a01000	 mov         r1, #0
  0003c	eb000000	 bl          I2CWrite
  00040	e1500006	 cmp         r0, r6
  00044	03a00001	 moveq       r0, #1

; 124  : }

  00048	08bd4070	 ldmeqia     sp!, {r4 - r6, lr}

; 123  :     return (I2CWrite(g_hI2C, 0, pBuffer, size) == size) ? TRUE : FALSE;

  0004c	13a00000	 movne       r0, #0

; 124  : }

  00050	18bd4070	 ldmneia     sp!, {r4 - r6, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$LN8@RTCI2CWrit|
  00058		 |$LN9@RTCI2CWrit|
  00058	00000000	 DCD         |g_devAddr|
  0005c		 |$M44565|

			 ENDP  ; |RTCI2CWrite|

	EXPORT	|RTCI2CRead|
	IMPORT	|I2CRead|

  00000			 AREA	 |.pdata|, PDATA
|$T44583| DCD	|$LN7@RTCI2CRead|
	DCD	0x40001701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |RTCI2CRead| PROC

; 126  : {

  00000		 |$LN7@RTCI2CRead|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M44580|
  00004	e1a06002	 mov         r6, r2
  00008	e1a05001	 mov         r5, r1
  0000c	e1a0e000	 mov         lr, r0

; 127  :     I2CSetSlaveAddress(g_hI2C, g_devAddr + subAddr);

  00010	e59f4040	 ldr         r4, [pc, #0x40]
  00014	e1d430b0	 ldrh        r3, [r4]
  00018	e5940008	 ldr         r0, [r4, #8]
  0001c	e083300e	 add         r3, r3, lr
  00020	e1a01803	 mov         r1, r3, lsl #16
  00024	e1a01821	 mov         r1, r1, lsr #16
  00028	eb000000	 bl          I2CSetSlaveAddress

; 128  :     return (I2CRead(g_hI2C, 0, pBuffer, size) == size) ? TRUE : FALSE;

  0002c	e5940008	 ldr         r0, [r4, #8]
  00030	e1a03006	 mov         r3, r6
  00034	e1a02005	 mov         r2, r5
  00038	e3a01000	 mov         r1, #0
  0003c	eb000000	 bl          I2CRead
  00040	e1500006	 cmp         r0, r6
  00044	03a00001	 moveq       r0, #1

; 129  : }

  00048	08bd4070	 ldmeqia     sp!, {r4 - r6, lr}

; 128  :     return (I2CRead(g_hI2C, 0, pBuffer, size) == size) ? TRUE : FALSE;

  0004c	13a00000	 movne       r0, #0

; 129  : }

  00050	18bd4070	 ldmneia     sp!, {r4 - r6, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$LN8@RTCI2CRead|
  00058		 |$LN9@RTCI2CRead|
  00058	00000000	 DCD         |g_devAddr|
  0005c		 |$M44581|

			 ENDP  ; |RTCI2CRead|

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|RTC_GetTime|
	EXPORT	|??_C@_1HI@CIMKKNOO@?$AAR?$AAT?$AAC?$AA_?$AAG?$AAe?$AAt?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAt?$AAh@| [ DATA ] ; `string'
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_cookie|
	IMPORT	|__security_check_cookie|

  00008			 AREA	 |.bss|, NOINIT
|g_baseYear| %	0x2
|g_baseYear| %	0x2

  00000			 AREA	 |.pdata|, PDATA
|$T44604| DCD	|$LN9@RTC_GetTim|
	DCD	0xc0004402

  00000			 AREA	 |.xdata|, DATA
|$T44600| DCD	0xfffffff0

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@CIMKKNOO@?$AAR?$AAT?$AAC?$AA_?$AAG?$AAe?$AAt?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAt?$AAh@| DCB "R"
	DCB	0x0, "T", 0x0, "C", 0x0, "_", 0x0, "G", 0x0, "e", 0x0, "t"
	DCB	0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "(", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "h", 0x0, "e", 0x0, " ", 0x0, "d", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "/", 0x0, "t", 0x0, "i", 0x0, "m", 0x0, "e"
	DCB	0x0, " ", 0x0, "f", 0x0, "r", 0x0, "o", 0x0, "m", 0x0, " "
	DCB	0x0, "t", 0x0, "h", 0x0, "e", 0x0, " ", 0x0, "R", 0x0, "T"
	DCB	0x0, "C", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T44600|

  00008		 |RTC_GetTime| PROC

; 132  : {

  00008		 |$LN9@RTC_GetTim|
  00008	e92d4030	 stmdb       sp!, {r4, r5, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M44601|
  00010	e1a05000	 mov         r5, r0
  00014	e59f30f8	 ldr         r3, [pc, #0xF8]
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3008	 str         r3, [sp, #8]

; 133  :     UCHAR receiveBuffer[7];
; 134  : 
; 135  : 	if (g_hI2C == NULL)

  00020	e59f40e8	 ldr         r4, [pc, #0xE8]
  00024	e5943004	 ldr         r3, [r4, #4]
  00028	e3530000	 cmp         r3, #0
  0002c	1a000003	 bne         |$LN2@RTC_GetTim|

; 139  :     {
; 140  :         OALMSG(OAL_ERROR, (L"RTC_GetTime(): Failed to read the date/time from the RTC.\r\n"));

  00030		 |$LN5@RTC_GetTim|
  00030	e59d0008	 ldr         r0, [sp, #8]
  00034	eb000000	 bl          __security_check_cookie
  00038	e3a00000	 mov         r0, #0
  0003c	ea00002e	 b           |$LN3@RTC_GetTim|
  00040		 |$LN2@RTC_GetTim|

; 136  : 		return FALSE;
; 137  : 
; 138  :     if (RTCI2CRead(RTC_CMD_REAL_TIME_DATA_1, receiveBuffer, 7) == FALSE)

  00040	e3a02007	 mov         r2, #7
  00044	e28d1000	 add         r1, sp, #0
  00048	e3a00002	 mov         r0, #2
  0004c	eb000000	 bl          RTCI2CRead
  00050	e3500000	 cmp         r0, #0
  00054	1a000006	 bne         |$LN1@RTC_GetTim|

; 139  :     {
; 140  :         OALMSG(OAL_ERROR, (L"RTC_GetTime(): Failed to read the date/time from the RTC.\r\n"));

  00058	e59f30ac	 ldr         r3, [pc, #0xAC]
  0005c	e5933440	 ldr         r3, [r3, #0x440]
  00060	e3130001	 tst         r3, #1
  00064	0afffff1	 beq         |$LN5@RTC_GetTim|
  00068	e59f0098	 ldr         r0, [pc, #0x98]
  0006c	eb000000	 bl          NKDbgPrintfW

; 141  : 		return FALSE;

  00070	eaffffee	 b           |$LN5@RTC_GetTim|
  00074		 |$LN1@RTC_GetTim|

; 142  : 	}
; 143  : 
; 144  : 	time->wYear = ReversedBCDtoBIN(receiveBuffer[RTC_RTD1_YEAR]) + g_baseYear;

  00074	e5dd0000	 ldrb        r0, [sp]
  00078	eb000000	 bl          ReversedBCDtoBIN
  0007c	e1d420b0	 ldrh        r2, [r4]
  00080	e1a03000	 mov         r3, r0

; 145  : 	time->wMonth = ReversedBCDtoBIN(receiveBuffer[RTC_RTD1_MONTH]);

  00084	e5dd0001	 ldrb        r0, [sp, #1]
  00088	e0833002	 add         r3, r3, r2
  0008c	e1c530b0	 strh        r3, [r5]
  00090	eb000000	 bl          ReversedBCDtoBIN
  00094	e1a03000	 mov         r3, r0

; 146  : 	time->wDay = ReversedBCDtoBIN(receiveBuffer[RTC_RTD1_DAY]);

  00098	e5dd0002	 ldrb        r0, [sp, #2]
  0009c	e1c530b2	 strh        r3, [r5, #2]
  000a0	eb000000	 bl          ReversedBCDtoBIN

; 147  : 	time->wHour = ReversedBCDtoBIN(receiveBuffer[RTC_RTD1_HOUR] & ~(RTC_AMPM_BIT));

  000a4	e5dd3004	 ldrb        r3, [sp, #4]
  000a8	e1c500b6	 strh        r0, [r5, #6]
  000ac	e20300fd	 and         r0, r3, #0xFD
  000b0	eb000000	 bl          ReversedBCDtoBIN
  000b4	e1a03000	 mov         r3, r0

; 148  : 	time->wMinute = ReversedBCDtoBIN(receiveBuffer[RTC_RTD1_MINUTE]);

  000b8	e5dd0005	 ldrb        r0, [sp, #5]
  000bc	e1c530b8	 strh        r3, [r5, #8]
  000c0	eb000000	 bl          ReversedBCDtoBIN
  000c4	e1a03000	 mov         r3, r0

; 149  : 	time->wSecond = ReversedBCDtoBIN(receiveBuffer[RTC_RTD1_SECOND]);

  000c8	e5dd0006	 ldrb        r0, [sp, #6]
  000cc	e1c530ba	 strh        r3, [r5, #0xA]
  000d0	eb000000	 bl          ReversedBCDtoBIN
  000d4	e1a03000	 mov         r3, r0

; 150  : 	time->wDayOfWeek = ReversedBCDtoBIN(receiveBuffer[RTC_RTD1_DAY_OF_WEEK]);

  000d8	e5dd0003	 ldrb        r0, [sp, #3]
  000dc	e1c530bc	 strh        r3, [r5, #0xC]
  000e0	eb000000	 bl          ReversedBCDtoBIN

; 151  : 	time->wMilliseconds = 0;

  000e4	e3a03000	 mov         r3, #0
  000e8	e1c530be	 strh        r3, [r5, #0xE]
  000ec	e1c500b4	 strh        r0, [r5, #4]

; 152  : 
; 153  : 	return TRUE;

  000f0	e59d0008	 ldr         r0, [sp, #8]
  000f4	eb000000	 bl          __security_check_cookie
  000f8	e3a00001	 mov         r0, #1
  000fc		 |$LN3@RTC_GetTim|

; 154  : }

  000fc	e28dd00c	 add         sp, sp, #0xC
  00100	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00104	e12fff1e	 bx          lr
  00108		 |$LN10@RTC_GetTim|
  00108		 |$LN11@RTC_GetTim|
  00108	00000000	 DCD         |??_C@_1HI@CIMKKNOO@?$AAR?$AAT?$AAC?$AA_?$AAG?$AAe?$AAt?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAt?$AAh@|
  0010c		 |$LN12@RTC_GetTim|
  0010c	00000000	 DCD         |dpCurSettings|
  00110		 |$LN13@RTC_GetTim|
  00110	00000000	 DCD         |g_baseYear|
  00114		 |$LN14@RTC_GetTim|
  00114	00000000	 DCD         |__security_cookie|
  00118		 |$M44602|

			 ENDP  ; |RTC_GetTime|

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|RTC_SetTime|
	EXPORT	|??_C@_1HG@GONGOGNI@?$AAR?$AAT?$AAC?$AA_?$AAS?$AAe?$AAt?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAe?$AA?5?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1PM@BDJCONEL@?$AAR?$AAT?$AAC?$AA_?$AAS?$AAe?$AAt?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAD?$AAu?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAh?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?5?$AAl@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T44628| DCD	|$LN13@RTC_SetTim|
	DCD	0xc0005402

  00000			 AREA	 |.xdata|, DATA
|$T44624| DCD	0xffffffec

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@GONGOGNI@?$AAR?$AAT?$AAC?$AA_?$AAS?$AAe?$AAt?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAe?$AA?5?$AAt@| DCB "R"
	DCB	0x0, "T", 0x0, "C", 0x0, "_", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "(", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "w", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "t", 0x0, "h", 0x0, "e", 0x0, " ", 0x0, "d", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, "/", 0x0, "t", 0x0, "i", 0x0, "m"
	DCB	0x0, "e", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "t"
	DCB	0x0, "h", 0x0, "e", 0x0, " ", 0x0, "R", 0x0, "T", 0x0, "C"
	DCB	0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1PM@BDJCONEL@?$AAR?$AAT?$AAC?$AA_?$AAS?$AAe?$AAt?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAD?$AAu?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAh?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?5?$AAl@| DCB "R"
	DCB	0x0, "T", 0x0, "C", 0x0, "_", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "(", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "D", 0x0, "u", 0x0, "e", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "h", 0x0, "a", 0x0, "r"
	DCB	0x0, "d", 0x0, "w", 0x0, "a", 0x0, "r", 0x0, "e", 0x0, " "
	DCB	0x0, "l", 0x0, "i", 0x0, "m", 0x0, "i", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, ",", 0x0, " "
	DCB	0x0, "s", 0x0, "e", 0x0, "t", 0x0, "t", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "a", 0x0, " ", 0x0, "y", 0x0, "e"
	DCB	0x0, "a", 0x0, "r", 0x0, " ", 0x0, "o", 0x0, "u", 0x0, "t"
	DCB	0x0, " ", 0x0, "o", 0x0, "f", 0x0, " ", 0x0, "t", 0x0, "h"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, "-", 0x0, "%"
	DCB	0x0, "u", 0x0, " ", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "g"
	DCB	0x0, "e", 0x0, " ", 0x0, "m", 0x0, "a", 0x0, "y", 0x0, " "
	DCB	0x0, "c", 0x0, "a", 0x0, "u", 0x0, "s", 0x0, "e", 0x0, " "
	DCB	0x0, "u", 0x0, "n", 0x0, "e", 0x0, "x", 0x0, "p", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "b"
	DCB	0x0, "e", 0x0, "h", 0x0, "a", 0x0, "v", 0x0, "i", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "a", 0x0, "f", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "e"
	DCB	0x0, "t", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T44624|

  00008		 |RTC_SetTime| PROC

; 157  : {

  00008		 |$LN13@RTC_SetTim|
  00008	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M44625|
  00010	e1a05000	 mov         r5, r0
  00014	e59f3138	 ldr         r3, [pc, #0x138]
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3008	 str         r3, [sp, #8]

; 158  :     UCHAR cmdBuffer[7];
; 159  : 
; 160  : 	if((time->wYear < g_baseYear) || (time->wYear > g_baseYear + RTC_MAX_YEARS))

  00020	e59f4128	 ldr         r4, [pc, #0x128]
  00024	e1d520b0	 ldrh        r2, [r5]
  00028	e59f611c	 ldr         r6, [pc, #0x11C]
  0002c	e1d410b0	 ldrh        r1, [r4]
  00030	e1520001	 cmp         r2, r1
  00034	3a000002	 bcc         |$LN3@RTC_SetTim|
  00038	e2813063	 add         r3, r1, #0x63
  0003c	e1520003	 cmp         r2, r3
  00040	da000009	 ble         |$LN4@RTC_SetTim|
  00044		 |$LN3@RTC_SetTim|

; 161  : 	{
; 162  : 		// warning
; 163  : 		OALMSG(OAL_WARN, (TEXT("RTC_SetTime(): Due to hardware limitation, setting a year out of the %u-%u range may cause unexpected behavior after reset.\r\n")
; 164  : 							,RTC_DEFAULT_BASE_YEAR,RTC_DEFAULT_BASE_YEAR+RTC_MAX_YEARS));

  00044	e5963440	 ldr         r3, [r6, #0x440]
  00048	e3130002	 tst         r3, #2
  0004c	159f00f4	 ldrne       r0, [pc, #0xF4]
  00050	13a03b02	 movne       r3, #2, 22
  00054	13832033	 orrne       r2, r3, #0x33
  00058	13a01e7d	 movne       r1, #0x7D, 28
  0005c	1b000000	 blne        NKDbgPrintfW

; 165  : 		g_baseYear = time->wYear;

  00060	e1d520b0	 ldrh        r2, [r5]
  00064	e1a01002	 mov         r1, r2
  00068	e1c420b0	 strh        r2, [r4]
  0006c		 |$LN4@RTC_SetTim|

; 166  : 	}
; 167  : 
; 168  : 	if (g_hI2C == NULL)

  0006c	e5943004	 ldr         r3, [r4, #4]
  00070	e3530000	 cmp         r3, #0
  00074	1a000003	 bne         |$LN2@RTC_SetTim|

; 180  : 	{
; 181  : 		OALMSG(OAL_ERROR, (L"RTC_SetTime(): Failed to write the date/time to the RTC.\r\n"));

  00078		 |$LN9@RTC_SetTim|
  00078	e59d0008	 ldr         r0, [sp, #8]
  0007c	eb000000	 bl          __security_check_cookie
  00080	e3a00000	 mov         r0, #0
  00084	ea00002b	 b           |$LN5@RTC_SetTim|
  00088		 |$LN2@RTC_SetTim|

; 169  : 		return FALSE;
; 170  : 
; 171  : 	cmdBuffer[RTC_RTD1_YEAR] = BINtoReversedBCD((UINT8)(time->wYear - g_baseYear));

  00088	e0423001	 sub         r3, r2, r1
  0008c	e20300ff	 and         r0, r3, #0xFF
  00090	eb000000	 bl          BINtoReversedBCD

; 172  : 	cmdBuffer[RTC_RTD1_MONTH] = BINtoReversedBCD((UINT8)time->wMonth);

  00094	e1d530b2	 ldrh        r3, [r5, #2]
  00098	e5cd0000	 strb        r0, [sp]
  0009c	e20300ff	 and         r0, r3, #0xFF
  000a0	eb000000	 bl          BINtoReversedBCD

; 173  : 	cmdBuffer[RTC_RTD1_DAY] = BINtoReversedBCD((UINT8)time->wDay);

  000a4	e1d530b6	 ldrh        r3, [r5, #6]
  000a8	e5cd0001	 strb        r0, [sp, #1]
  000ac	e20300ff	 and         r0, r3, #0xFF
  000b0	eb000000	 bl          BINtoReversedBCD

; 174  : 	cmdBuffer[RTC_RTD1_HOUR] = BINtoReversedBCD((UINT8)time->wHour);

  000b4	e1d530b8	 ldrh        r3, [r5, #8]
  000b8	e5cd0002	 strb        r0, [sp, #2]
  000bc	e20300ff	 and         r0, r3, #0xFF
  000c0	eb000000	 bl          BINtoReversedBCD

; 175  : 	cmdBuffer[RTC_RTD1_MINUTE] = BINtoReversedBCD((UINT8)time->wMinute);

  000c4	e1d530ba	 ldrh        r3, [r5, #0xA]
  000c8	e5cd0004	 strb        r0, [sp, #4]
  000cc	e20300ff	 and         r0, r3, #0xFF
  000d0	eb000000	 bl          BINtoReversedBCD

; 176  : 	cmdBuffer[RTC_RTD1_SECOND] = BINtoReversedBCD((UINT8)time->wSecond);

  000d4	e1d530bc	 ldrh        r3, [r5, #0xC]
  000d8	e5cd0005	 strb        r0, [sp, #5]
  000dc	e20300ff	 and         r0, r3, #0xFF
  000e0	eb000000	 bl          BINtoReversedBCD

; 177  : 	cmdBuffer[RTC_RTD1_DAY_OF_WEEK] = BINtoReversedBCD((UINT8)time->wDayOfWeek);

  000e4	e1d530b4	 ldrh        r3, [r5, #4]
  000e8	e5cd0006	 strb        r0, [sp, #6]
  000ec	e20300ff	 and         r0, r3, #0xFF
  000f0	eb000000	 bl          BINtoReversedBCD
  000f4	e1a03000	 mov         r3, r0

; 178  : 
; 179  : 	if (RTCI2CWrite(RTC_CMD_REAL_TIME_DATA_1,cmdBuffer,7)==FALSE)

  000f8	e3a00002	 mov         r0, #2
  000fc	e3a02007	 mov         r2, #7
  00100	e28d1000	 add         r1, sp, #0
  00104	e5cd3003	 strb        r3, [sp, #3]
  00108	eb000000	 bl          RTCI2CWrite
  0010c	e3500000	 cmp         r0, #0
  00110	1a000005	 bne         |$LN1@RTC_SetTim|

; 180  : 	{
; 181  : 		OALMSG(OAL_ERROR, (L"RTC_SetTime(): Failed to write the date/time to the RTC.\r\n"));

  00114	e5963440	 ldr         r3, [r6, #0x440]
  00118	e3130001	 tst         r3, #1
  0011c	0affffd5	 beq         |$LN9@RTC_SetTim|
  00120	e59f001c	 ldr         r0, [pc, #0x1C]
  00124	eb000000	 bl          NKDbgPrintfW

; 182  : 		return FALSE;

  00128	eaffffd2	 b           |$LN9@RTC_SetTim|
  0012c		 |$LN1@RTC_SetTim|

; 183  : 	}
; 184  : 
; 185  : 	return TRUE;

  0012c	e59d0008	 ldr         r0, [sp, #8]
  00130	eb000000	 bl          __security_check_cookie
  00134	e3a00001	 mov         r0, #1
  00138		 |$LN5@RTC_SetTim|

; 186  : }

  00138	e28dd00c	 add         sp, sp, #0xC
  0013c	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00140	e12fff1e	 bx          lr
  00144		 |$LN14@RTC_SetTim|
  00144		 |$LN15@RTC_SetTim|
  00144	00000000	 DCD         |??_C@_1HG@GONGOGNI@?$AAR?$AAT?$AAC?$AA_?$AAS?$AAe?$AAt?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAe?$AA?5?$AAt@|
  00148		 |$LN16@RTC_SetTim|
  00148	00000000	 DCD         |??_C@_1PM@BDJCONEL@?$AAR?$AAT?$AAC?$AA_?$AAS?$AAe?$AAt?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAD?$AAu?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAh?$AAa?$AAr?$AAd?$AAw?$AAa?$AAr?$AAe?$AA?5?$AAl@|
  0014c		 |$LN17@RTC_SetTim|
  0014c	00000000	 DCD         |dpCurSettings|
  00150		 |$LN18@RTC_SetTim|
  00150	00000000	 DCD         |g_baseYear|
  00154		 |$LN19@RTC_SetTim|
  00154	00000000	 DCD         |__security_cookie|
  00158		 |$M44626|

			 ENDP  ; |RTC_SetTime|

	EXPORT	|OALS35390RTCInit|
	EXPORT	|??_C@_1HK@MAICPOOB@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@OLNGCDJJ@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@GOCBJLIN@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@KCDDHNHA@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BBM@MHIGKPGP@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AAR?$AAT?$AAC?$AA?5?$AAn?$AAe?$AAe?$AAd?$AA?5?$AAa?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IM@DAECHCMP@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@| [ DATA ] ; `string'
	IMPORT	|OALIoCtlHalEnableWake|
	IMPORT	|OEMInterruptEnable|
	IMPORT	|OALIntrStaticTranslate|
	IMPORT	|BSPGetRTCGpioIrq|
	IMPORT	|I2CSetSubAddressMode|
	IMPORT	|I2CSetBaudIndex|
	IMPORT	|I2COpen|

  0000c			 AREA	 |.bss|, NOINIT
|g_NeedReinit| % 0x4
|g_NeedReinit| % 0x4

  00000			 AREA	 |.pdata|, PDATA
|$T44666| DCD	|$LN32@OALS35390R|
	DCD	0x40008d02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@MAICPOOB@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C", 0x0, "t"
	DCB	0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "R", 0x0, "T", 0x0, "C", 0x0, "("
	DCB	0x0, ")", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n", 0x0, " "
	DCB	0x0, "o", 0x0, "f", 0x0, "f", 0x0, " ", 0x0, "c", 0x0, "l"
	DCB	0x0, "o", 0x0, "c", 0x0, "k", 0x0, " ", 0x0, "c", 0x0, "o"
	DCB	0x0, "r", 0x0, "r", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@OLNGCDJJ@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C", 0x0, "t"
	DCB	0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "R", 0x0, "T", 0x0, "C", 0x0, "("
	DCB	0x0, ")", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "d", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "R", 0x0, "T", 0x0, "C"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t", 0x0, "s", 0x0, "."
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@GOCBJLIN@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C", 0x0, "t"
	DCB	0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "R", 0x0, "T", 0x0, "C", 0x0, "("
	DCB	0x0, ")", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, " ", 0x0, "2"
	DCB	0x0, "4", 0x0, " ", 0x0, "h", 0x0, "o", 0x0, "u", 0x0, "r"
	DCB	0x0, " ", 0x0, "t", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, " "
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, "m", 0x0, "a", 0x0, "t"
	DCB	0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@KCDDHNHA@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C", 0x0, "t"
	DCB	0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "R", 0x0, "T", 0x0, "C", 0x0, "("
	DCB	0x0, ")", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "e", 0x0, "t"
	DCB	0x0, " ", 0x0, "R", 0x0, "T", 0x0, "C", 0x0, ".", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BBM@MHIGKPGP@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AAR?$AAT?$AAC?$AA?5?$AAn?$AAe?$AAe?$AAd?$AA?5?$AAa?$AA?5@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C", 0x0, "t"
	DCB	0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "R", 0x0, "T", 0x0, "C", 0x0, "("
	DCB	0x0, ")", 0x0, ":", 0x0, "R", 0x0, "T", 0x0, "C", 0x0, " "
	DCB	0x0, "n", 0x0, "e", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "a"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "i", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, " ", 0x0, "b", 0x0, "e", 0x0, "c", 0x0, "a"
	DCB	0x0, "u", 0x0, "s", 0x0, "e", 0x0, " ", 0x0, "e", 0x0, "i"
	DCB	0x0, "t", 0x0, "h", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "R"
	DCB	0x0, "T", 0x0, "C", 0x0, " ", 0x0, "h", 0x0, "a", 0x0, "d"
	DCB	0x0, " ", 0x0, "b", 0x0, "e", 0x0, "e", 0x0, "n", 0x0, " "
	DCB	0x0, "p", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "o", 0x0, "f", 0x0, "f", 0x0, " "
	DCB	0x0, "a", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "t", 0x0, "h"
	DCB	0x0, "e", 0x0, " ", 0x0, "R", 0x0, "T", 0x0, "C", 0x0, " "
	DCB	0x0, "h", 0x0, "a", 0x0, "s", 0x0, " ", 0x0, "d", 0x0, "r"
	DCB	0x0, "o", 0x0, "p", 0x0, "p", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "b", 0x0, "e", 0x0, "l", 0x0, "o", 0x0, "w", 0x0, " "
	DCB	0x0, "t", 0x0, "h", 0x0, "e", 0x0, " ", 0x0, "a", 0x0, "l"
	DCB	0x0, "l", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "l", 0x0, "e", 0x0, "v", 0x0, "e", 0x0, "l", 0x0, " "
	DCB	0x0, "(", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u"
	DCB	0x0, "s", 0x0, " ", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, "."
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IM@DAECHCMP@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C", 0x0, "t"
	DCB	0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "R", 0x0, "T", 0x0, "C", 0x0, "("
	DCB	0x0, ")", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, " "
	DCB	0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "1", 0x0, " "
	DCB	0x0, "a", 0x0, "f", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, "."
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALS35390RTCInit| PROC

; 189  : {    

  00000		 |$LN32@OALS35390R|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd010	 sub         sp, sp, #0x10
  00008		 |$M44663|
  00008	e1a07003	 mov         r7, r3
  0000c	e1a04002	 mov         r4, r2
  00010	e1a06001	 mov         r6, r1

; 190  :     UCHAR cmd;
; 191  :     UCHAR status;
; 192  : 
; 193  :     g_NeedReinit = FALSE;

  00014	e59f5214	 ldr         r5, [pc, #0x214]
  00018	e3a03000	 mov         r3, #0

; 194  : 
; 195  : 	g_baseYear = RTC_DEFAULT_BASE_YEAR;

  0001c	e3a02e7d	 mov         r2, #0x7D, 28
  00020	e5853000	 str         r3, [r5]
  00024	e1c520b8	 strh        r2, [r5, #8]

; 196  : 
; 197  :     // Open I2C instance
; 198  :     g_hI2C = I2COpen(i2cdev);

  00028	eb000000	 bl          I2COpen
  0002c	e3500000	 cmp         r0, #0
  00030	e585000c	 str         r0, [r5, #0xC]

; 199  :     if (g_hI2C == NULL)

  00034	1a000001	 bne         |$LN10@OALS35390R|

; 212  :     {
; 213  :         OALMSG(OAL_ERROR, (L"OALIoCtlHalInitRTC(): Failed to read status register 1 after reset.\r\n"));

  00038		 |$LN13@OALS35390R|

; 200  :     {
; 201  :         return FALSE;

  00038	e3a00000	 mov         r0, #0
  0003c	ea000071	 b           |$LN11@OALS35390R|
  00040		 |$LN10@OALS35390R|

; 202  :     }
; 203  :     g_devAddr = slaveAddress;
; 204  :     // Set baud rate
; 205  :     I2CSetBaudIndex(g_hI2C, i2cBaudIndex);	

  00040	e1a01006	 mov         r1, r6
  00044	e1c540b4	 strh        r4, [r5, #4]
  00048	eb000000	 bl          I2CSetBaudIndex

; 206  :     // Set sub address mode
; 207  : 	I2CSetSubAddressMode(g_hI2C, I2C_SUBADDRESS_MODE_0);

  0004c	e595000c	 ldr         r0, [r5, #0xC]
  00050	e3a01000	 mov         r1, #0
  00054	eb000000	 bl          I2CSetSubAddressMode

; 208  : 
; 209  :     // Get the BLD and POC flags that will tell if the circuit muste be reinitialized    
; 210  : 	// Read status register 1	
; 211  : 	if (RTCI2CRead(RTC_CMD_STATUS_1, &status, 1) == FALSE)

  00058	e3a02001	 mov         r2, #1
  0005c	e28d1008	 add         r1, sp, #8
  00060	e3a00000	 mov         r0, #0
  00064	eb000000	 bl          RTCI2CRead
  00068	e3500000	 cmp         r0, #0
  0006c	1a000007	 bne         |$LN9@OALS35390R|

; 212  :     {
; 213  :         OALMSG(OAL_ERROR, (L"OALIoCtlHalInitRTC(): Failed to read status register 1 after reset.\r\n"));

  00070	e59f31b0	 ldr         r3, [pc, #0x1B0]
  00074	e5933440	 ldr         r3, [r3, #0x440]
  00078	e3130001	 tst         r3, #1
  0007c	0affffed	 beq         |$LN13@OALS35390R|
  00080	e59f01a4	 ldr         r0, [pc, #0x1A4]
  00084		 |$LN28@OALS35390R|
  00084	eb000000	 bl          NKDbgPrintfW
  00088	e3a00000	 mov         r0, #0
  0008c	ea00005d	 b           |$LN11@OALS35390R|
  00090		 |$LN9@OALS35390R|

; 214  :         return FALSE;
; 215  :     }
; 216  :     if (status & (RTC_POC | RTC_BLD))

  00090	e5dd1008	 ldrb        r1, [sp, #8]
  00094	e59f418c	 ldr         r4, [pc, #0x18C]
  00098	e3110003	 tst         r1, #3
  0009c	0a000006	 beq         |$LN15@OALS35390R|

; 217  :     {
; 218  :         g_NeedReinit = TRUE;
; 219  :         OALMSG(OAL_INFO | OAL_WARN, (L"OALIoCtlHalInitRTC():RTC need a reinit because either RTC had been powered off aor the RTC has dropped below the allowed level (status %x).\r\n",status));

  000a0	e5943440	 ldr         r3, [r4, #0x440]
  000a4	e3a02001	 mov         r2, #1
  000a8	e5852000	 str         r2, [r5]
  000ac	e313000a	 tst         r3, #0xA
  000b0	0a000004	 beq         |$LN27@OALS35390R|
  000b4	e59f0168	 ldr         r0, [pc, #0x168]
  000b8	eb000000	 bl          NKDbgPrintfW
  000bc		 |$LN15@OALS35390R|

; 220  :     }
; 221  : 
; 222  :     if (g_NeedReinit)

  000bc	e5953000	 ldr         r3, [r5]
  000c0	e3530000	 cmp         r3, #0
  000c4	0a00003a	 beq         |$LN2@OALS35390R|
  000c8		 |$LN27@OALS35390R|

; 223  :     {
; 224  :         // Reset the RTC
; 225  :         cmd = RTC_RESET;

  000c8	e3a03080	 mov         r3, #0x80

; 226  : 	    if (RTCI2CWrite(RTC_CMD_STATUS_1, &cmd, 1) == FALSE)

  000cc	e3a02001	 mov         r2, #1
  000d0	e28d1009	 add         r1, sp, #9
  000d4	e3a00000	 mov         r0, #0
  000d8	e5cd3009	 strb        r3, [sp, #9]
  000dc	eb000000	 bl          RTCI2CWrite
  000e0	e3500000	 cmp         r0, #0
  000e4	1a000004	 bne         |$LN6@OALS35390R|

; 227  : 	    {
; 228  : 		    OALMSG(OAL_ERROR, (L"OALIoCtlHalInitRTC(): Failed to reset RTC.\r\n"));

  000e8	e5943440	 ldr         r3, [r4, #0x440]
  000ec	e3130001	 tst         r3, #1
  000f0	0affffd0	 beq         |$LN13@OALS35390R|
  000f4	e59f0124	 ldr         r0, [pc, #0x124]

; 229  : 		    return FALSE;

  000f8	eaffffe1	 b           |$LN28@OALS35390R|
  000fc		 |$LN6@OALS35390R|

; 230  : 	    }
; 231  : 
; 232  :         // Set 24 hour time format
; 233  :         if (RTCI2CRead(RTC_CMD_STATUS_1,&status,1) == FALSE)

  000fc	e3a02001	 mov         r2, #1
  00100	e28d1008	 add         r1, sp, #8
  00104	e3a00000	 mov         r0, #0
  00108	eb000000	 bl          RTCI2CRead
  0010c	e3500000	 cmp         r0, #0
  00110	1a000004	 bne         |$LN5@OALS35390R|
  00114		 |$LN29@OALS35390R|

; 234  :         {
; 235  :             OALMSG(OAL_ERROR, (L"OALIoCtlHalInitRTC(): Failed to set 24 hour time format.\r\n"));

  00114	e5943440	 ldr         r3, [r4, #0x440]
  00118	e3130001	 tst         r3, #1
  0011c	0affffc5	 beq         |$LN13@OALS35390R|
  00120	e59f00f4	 ldr         r0, [pc, #0xF4]

; 236  :             return FALSE;

  00124	eaffffd6	 b           |$LN28@OALS35390R|
  00128		 |$LN5@OALS35390R|

; 237  :         }
; 238  :         status |= RTC_24_HOUR_FORMAT;

  00128	e5dd3008	 ldrb        r3, [sp, #8]

; 239  :         if (RTCI2CWrite(RTC_CMD_STATUS_1,&status,1) == FALSE)

  0012c	e3a02001	 mov         r2, #1
  00130	e28d1008	 add         r1, sp, #8
  00134	e3833040	 orr         r3, r3, #0x40
  00138	e3a00000	 mov         r0, #0
  0013c	e5cd3008	 strb        r3, [sp, #8]
  00140	eb000000	 bl          RTCI2CWrite
  00144	e3500000	 cmp         r0, #0

; 240  :         {
; 241  :             OALMSG(OAL_ERROR, (L"OALIoCtlHalInitRTC(): Failed to set 24 hour time format.\r\n"));
; 242  :             return FALSE;

  00148	0afffff1	 beq         |$LN29@OALS35390R|

; 243  :         }
; 244  :         // Disable RTC interrupts
; 245  :         status = RTC_NO_INTERRUPTS;

  0014c	e3a03000	 mov         r3, #0

; 246  :         if (RTCI2CWrite(RTC_CMD_STATUS_2,&status,1) == FALSE)

  00150	e3a02001	 mov         r2, #1
  00154	e28d1008	 add         r1, sp, #8
  00158	e3a00001	 mov         r0, #1
  0015c	e5cd3008	 strb        r3, [sp, #8]
  00160	eb000000	 bl          RTCI2CWrite
  00164	e3500000	 cmp         r0, #0
  00168	1a000004	 bne         |$LN3@OALS35390R|

; 247  :         {
; 248  :             OALMSG(OAL_ERROR, (L"OALIoCtlHalInitRTC(): Failed to disable RTC interrupts.\r\n"));

  0016c	e5943440	 ldr         r3, [r4, #0x440]
  00170	e3130001	 tst         r3, #1
  00174	0affffaf	 beq         |$LN13@OALS35390R|
  00178	e59f0098	 ldr         r0, [pc, #0x98]

; 249  :             return FALSE;

  0017c	eaffffc0	 b           |$LN28@OALS35390R|
  00180		 |$LN3@OALS35390R|

; 250  :         }
; 251  :         // Turn off clock correction        
; 252  :         cmd = RTC_NO_CLOCK_CORRECTION;

  00180	e3a03000	 mov         r3, #0

; 253  :         if (RTCI2CWrite(RTC_CMD_CLOCK_CORRECTION,&cmd,1) == FALSE)

  00184	e3a02001	 mov         r2, #1
  00188	e28d1009	 add         r1, sp, #9
  0018c	e3a00006	 mov         r0, #6
  00190	e5cd3009	 strb        r3, [sp, #9]
  00194	eb000000	 bl          RTCI2CWrite
  00198	e3500000	 cmp         r0, #0
  0019c	1a000004	 bne         |$LN2@OALS35390R|

; 254  :         {
; 255  :             OALMSG(OAL_ERROR, (L"OALIoCtlHalInitRTC(): Failed to turn off clock correction.\r\n"));

  001a0	e5943440	 ldr         r3, [r4, #0x440]
  001a4	e3130001	 tst         r3, #1
  001a8	0affffa2	 beq         |$LN13@OALS35390R|
  001ac	e59f0060	 ldr         r0, [pc, #0x60]

; 256  :             return FALSE;

  001b0	eaffffb3	 b           |$LN28@OALS35390R|
  001b4		 |$LN2@OALS35390R|

; 257  :         }
; 258  :     }
; 259  :     OALIntrStaticTranslate(SYSINTR_RTC_ALARM, BSPGetRTCGpioIrq());

  001b4	eb000000	 bl          BSPGetRTCGpioIrq
  001b8	e1a01000	 mov         r1, r0
  001bc	e3a0000d	 mov         r0, #0xD
  001c0	eb000000	 bl          OALIntrStaticTranslate

; 260  :     OEMInterruptEnable(SYSINTR_RTC_ALARM,NULL,0);

  001c4	e3a02000	 mov         r2, #0
  001c8	e3a01000	 mov         r1, #0
  001cc	e3a0000d	 mov         r0, #0xD
  001d0	eb000000	 bl          OEMInterruptEnable

; 261  :     
; 262  :     if (fEnableAsWakeUpSource)

  001d4	e3570000	 cmp         r7, #0
  001d8	0a000009	 beq         |$LN1@OALS35390R|

; 263  :     {
; 264  :         DWORD dwSysintr = SYSINTR_RTC_ALARM;

  001dc	e3a0300d	 mov         r3, #0xD
  001e0	e58d300c	 str         r3, [sp, #0xC]

; 265  :         OALIoCtlHalEnableWake(0,&dwSysintr,sizeof(dwSysintr),NULL,0,NULL);

  001e4	e3a0e000	 mov         lr, #0
  001e8	e3a03000	 mov         r3, #0
  001ec	e3a02004	 mov         r2, #4
  001f0	e28d100c	 add         r1, sp, #0xC
  001f4	e3a00000	 mov         r0, #0
  001f8	e58de004	 str         lr, [sp, #4]
  001fc	e58de000	 str         lr, [sp]
  00200	eb000000	 bl          OALIoCtlHalEnableWake
  00204		 |$LN1@OALS35390R|

; 266  :     }
; 267  : 
; 268  :     return TRUE;

  00204	e3a00001	 mov         r0, #1
  00208		 |$LN11@OALS35390R|

; 269  : }

  00208	e28dd010	 add         sp, sp, #0x10
  0020c	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00210	e12fff1e	 bx          lr
  00214		 |$LN33@OALS35390R|
  00214		 |$LN34@OALS35390R|
  00214	00000000	 DCD         |??_C@_1HK@MAICPOOB@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@|
  00218		 |$LN35@OALS35390R|
  00218	00000000	 DCD         |??_C@_1HE@OLNGCDJJ@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@|
  0021c		 |$LN36@OALS35390R|
  0021c	00000000	 DCD         |??_C@_1HG@GOCBJLIN@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@|
  00220		 |$LN37@OALS35390R|
  00220	00000000	 DCD         |??_C@_1FK@KCDDHNHA@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@|
  00224		 |$LN38@OALS35390R|
  00224	00000000	 DCD         |??_C@_1BBM@MHIGKPGP@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AAR?$AAT?$AAC?$AA?5?$AAn?$AAe?$AAe?$AAd?$AA?5?$AAa?$AA?5@|
  00228		 |$LN39@OALS35390R|
  00228	00000000	 DCD         |dpCurSettings|
  0022c		 |$LN40@OALS35390R|
  0022c	00000000	 DCD         |??_C@_1IM@DAECHCMP@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@|
  00230		 |$LN41@OALS35390R|
  00230	00000000	 DCD         |g_NeedReinit|
  00234		 |$M44664|

			 ENDP  ; |OALS35390RTCInit|

	EXPORT	|OALIoCtlHalInitRTC|
	EXPORT	|??_C@_1CG@EBGNPL@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAi?$AAn?$AAg?$AA?5?$AAR?$AAT?$AAC?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T44685| DCD	|$LN6@OALIoCtlHa|
	DCD	0x40001101

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@EBGNPL@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAi?$AAn?$AAg?$AA?5?$AAR?$AAT?$AAC?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l"
	DCB	0x0, "i", 0x0, "z", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "R", 0x0, "T", 0x0, "C", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALIoCtlHalInitRTC| PROC

; 287  : {

  00000		 |$LN6@OALIoCtlHa|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M44682|
  00004	e1a04001	 mov         r4, r1

; 288  : 	SYSTEMTIME *pGivenTime = (LPSYSTEMTIME)pInBuffer;
; 289  : 
; 290  : 	UNREFERENCED_PARAMETER(code);
; 291  : 	UNREFERENCED_PARAMETER(inSize);
; 292  : 	UNREFERENCED_PARAMETER(pOutBuffer);
; 293  : 	UNREFERENCED_PARAMETER(outSize);
; 294  : 	UNREFERENCED_PARAMETER(pOutSize);
; 295  : 
; 296  : 	RETAILMSG(1, (L"Initializing RTC\r\n"));

  00008	e59f0030	 ldr         r0, [pc, #0x30]
  0000c	eb000000	 bl          NKDbgPrintfW

; 297  : 
; 298  : 	// Initialize the time if needed
; 299  : 	if (g_NeedReinit && pGivenTime != NULL)

  00010	e59f2024	 ldr         r2, [pc, #0x24]
  00014	e5923000	 ldr         r3, [r2]
  00018	e3530000	 cmp         r3, #0
  0001c	13540000	 cmpne       r4, #0

; 300  : 	{
; 301  :         g_NeedReinit = FALSE;

  00020	13a03000	 movne       r3, #0

; 302  : 		RTC_SetTime(pGivenTime);

  00024	11a00004	 movne       r0, r4
  00028	15823000	 strne       r3, [r2]
  0002c	1b000000	 blne        RTC_SetTime

; 303  : 	}
; 304  : 
; 305  : 	return TRUE;

  00030	e3a00001	 mov         r0, #1

; 306  : }

  00034	e8bd4010	 ldmia       sp!, {r4, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$LN7@OALIoCtlHa|
  0003c		 |$LN8@OALIoCtlHa|
  0003c	00000000	 DCD         |g_NeedReinit|
  00040		 |$LN9@OALIoCtlHa|
  00040	00000000	 DCD         |??_C@_1CG@EBGNPL@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAi?$AAn?$AAg?$AA?5?$AAR?$AAT?$AAC?$AA?$AN?$AA?6?$AA?$AA@|
  00044		 |$M44683|

			 ENDP  ; |OALIoCtlHalInitRTC|

	EXPORT	|OEMGetRealTime|

  00000			 AREA	 |.pdata|, PDATA
|$T44698| DCD	|$LN6@OEMGetReal|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMGetRealTime| PROC

; 319  : {

  00000		 |$LN6@OEMGetReal|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M44695|

; 320  :     if (g_NeedReinit)

  00004	e59f301c	 ldr         r3, [pc, #0x1C]
  00008	e5933000	 ldr         r3, [r3]
  0000c	e3530000	 cmp         r3, #0

; 321  :     {
; 322  :         return FALSE;

  00010	13a00000	 movne       r0, #0

; 325  : }

  00014	149de004	 ldrne       lr, [sp], #4
  00018	112fff1e	 bxne        lr

; 323  :     }
; 324  : 	return RTC_GetTime(pSystemTime);

  0001c	eb000000	 bl          RTC_GetTime

; 325  : }

  00020	e49de004	 ldr         lr, [sp], #4
  00024	e12fff1e	 bx          lr
  00028		 |$LN7@OEMGetReal|
  00028		 |$LN8@OEMGetReal|
  00028	00000000	 DCD         |g_NeedReinit|
  0002c		 |$M44696|

			 ENDP  ; |OEMGetRealTime|

	EXPORT	|OEMSetRealTime|

  00000			 AREA	 |.pdata|, PDATA
|$T44711| DCD	|$LN6@OEMSetReal|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMSetRealTime| PROC

; 339  : {

  00000		 |$LN6@OEMSetReal|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M44708|

; 340  :     BOOL fResult = RTC_SetTime(pSystemTime);

  00004	eb000000	 bl          RTC_SetTime
  00008	e3500000	 cmp         r0, #0

; 341  : 
; 342  :     if (fResult && g_NeedReinit)

  0000c	159f2014	 ldrne       r2, [pc, #0x14]
  00010	15923000	 ldrne       r3, [r2]
  00014	13530000	 cmpne       r3, #0

; 343  :     {
; 344  :         g_NeedReinit = FALSE;

  00018	13a03000	 movne       r3, #0
  0001c	15823000	 strne       r3, [r2]

; 345  :     }
; 346  : 	return fResult;
; 347  : }

  00020	e49de004	 ldr         lr, [sp], #4
  00024	e12fff1e	 bx          lr
  00028		 |$LN7@OEMSetReal|
  00028		 |$LN8@OEMSetReal|
  00028	00000000	 DCD         |g_NeedReinit|
  0002c		 |$M44709|

			 ENDP  ; |OEMSetRealTime|

	EXPORT	|OEMSetAlarmTime|
	EXPORT	|??_C@_1HM@BAOOGNJE@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@| [ DATA ] ; `string'
	IMPORT	|OEMInterruptDone|

  00000			 AREA	 |.pdata|, PDATA
|$T44736| DCD	|$LN24@OEMSetAlar|
	DCD	0x40005a02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@BAOOGNJE@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C", 0x0, "t"
	DCB	0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "R", 0x0, "T", 0x0, "C", 0x0, "("
	DCB	0x0, ")", 0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "e", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, " ", 0x0, "R", 0x0, "T", 0x0, "C", 0x0, " "
	DCB	0x0, "a", 0x0, "l", 0x0, "a", 0x0, "r", 0x0, "m", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "u", 0x0, "p", 0x0, "t", 0x0, ".", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMSetAlarmTime| PROC

; 359  : {

  00000		 |$LN24@OEMSetAlar|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M44733|
  00008	e1a05000	 mov         r5, r0

; 360  : 	UCHAR cmdBuffer[3];
; 361  : 	UCHAR status;
; 362  : 
; 363  :     if (g_NeedReinit)

  0000c	e59f2150	 ldr         r2, [pc, #0x150]
  00010	e5923000	 ldr         r3, [r2]
  00014	e3530000	 cmp         r3, #0
  00018	0a000001	 beq         |$LN6@OEMSetAlar|
  0001c		 |$LN19@OEMSetAlar|

; 364  :     {
; 365  :         return FALSE;

  0001c	e3a00000	 mov         r0, #0
  00020	ea000048	 b           |$LN7@OEMSetAlar|
  00024		 |$LN6@OEMSetAlar|

; 366  :     }
; 367  : 
; 368  : 	if (g_hI2C == NULL)

  00024	e592300c	 ldr         r3, [r2, #0xC]
  00028	e3530000	 cmp         r3, #0

; 369  : 	{
; 370  : 		return FALSE;

  0002c	0afffffa	 beq         |$LN19@OEMSetAlar|

; 371  : 	}
; 372  : 
; 373  : 	// Deactivate RTC alarm interrupt first
; 374  :     status = RTC_NO_INTERRUPTS;

  00030	e3a03000	 mov         r3, #0

; 375  :     if (RTCI2CWrite(RTC_CMD_STATUS_2,&status,1) == FALSE)

  00034	e3a02001	 mov         r2, #1
  00038	e28d1000	 add         r1, sp, #0
  0003c	e3a00001	 mov         r0, #1
  00040	e5cd3000	 strb        r3, [sp]
  00044	eb000000	 bl          RTCI2CWrite
  00048	e3500000	 cmp         r0, #0
  0004c	1a000007	 bne         |$LN4@OEMSetAlar|
  00050		 |$LN21@OEMSetAlar|

; 376  :     {
; 377  :         OALMSG(OAL_ERROR, (L"OALIoCtlHalInitRTC(): Failed to enable RTC alarm interrupt.\r\n"));

  00050	e59f3100	 ldr         r3, [pc, #0x100]
  00054	e5933440	 ldr         r3, [r3, #0x440]
  00058	e3130001	 tst         r3, #1
  0005c	0affffee	 beq         |$LN19@OEMSetAlar|
  00060	e59f00f8	 ldr         r0, [pc, #0xF8]
  00064		 |$LN20@OEMSetAlar|
  00064	eb000000	 bl          NKDbgPrintfW
  00068	e3a00000	 mov         r0, #0
  0006c	ea000035	 b           |$LN7@OEMSetAlar|
  00070		 |$LN4@OEMSetAlar|

; 378  :         return FALSE;
; 379  :     }
; 380  :     if (RTCI2CRead(RTC_CMD_STATUS_1,&status,1) == FALSE)

  00070	e3a02001	 mov         r2, #1
  00074	e28d1000	 add         r1, sp, #0
  00078	e3a00000	 mov         r0, #0
  0007c	eb000000	 bl          RTCI2CRead
  00080	e3500000	 cmp         r0, #0
  00084	1a000005	 bne         |$LN3@OEMSetAlar|

; 381  :     {
; 382  :         OALMSG(OAL_ERROR, (L"OALIoCtlHalInitRTC(): Failed to set 24 hour time format.\r\n"));

  00088	e59f30c8	 ldr         r3, [pc, #0xC8]
  0008c	e5933440	 ldr         r3, [r3, #0x440]
  00090	e3130001	 tst         r3, #1
  00094	0affffe0	 beq         |$LN19@OEMSetAlar|
  00098	e59f00bc	 ldr         r0, [pc, #0xBC]

; 383  :         return FALSE;

  0009c	eafffff0	 b           |$LN20@OEMSetAlar|
  000a0		 |$LN3@OEMSetAlar|

; 384  :     }
; 385  : 
; 386  : 	// Activate RTC alarm interrupt first (for access to the INT1 alarm registers)
; 387  :     status = RTC_ALARM_INTERRUPT;

  000a0	e3a03020	 mov         r3, #0x20

; 388  :     if (RTCI2CWrite(RTC_CMD_STATUS_2,&status,1) == FALSE)

  000a4	e3a02001	 mov         r2, #1
  000a8	e28d1000	 add         r1, sp, #0
  000ac	e3a00001	 mov         r0, #1
  000b0	e5cd3000	 strb        r3, [sp]
  000b4	eb000000	 bl          RTCI2CWrite
  000b8	e3500000	 cmp         r0, #0

; 389  :     {
; 390  :         OALMSG(OAL_ERROR, (L"OALIoCtlHalInitRTC(): Failed to enable RTC alarm interrupt.\r\n"));
; 391  :         return FALSE;

  000bc	0affffe3	 beq         |$LN21@OEMSetAlar|

; 392  :     }
; 393  : 
; 394  : 	// Set alarm
; 395  : 	cmdBuffer[RTC_INT_WEEK] = RTC_ALARM_ENABLE | BINtoReversedBCD((UINT8)pSystemTime->wDayOfWeek);

  000c0	e1d530b4	 ldrh        r3, [r5, #4]
  000c4	e20300ff	 and         r0, r3, #0xFF
  000c8	eb000000	 bl          BINtoReversedBCD

; 396  :     cmdBuffer[RTC_INT_HOUR] = RTC_ALARM_ENABLE | BINtoReversedBCD((UINT8)pSystemTime->wHour) | ((pSystemTime->wHour>=12) ? (1<<1) : 0);

  000cc	e1d540b8	 ldrh        r4, [r5, #8]
  000d0	e3803001	 orr         r3, r0, #1
  000d4	e5cd3004	 strb        r3, [sp, #4]
  000d8	e20400ff	 and         r0, r4, #0xFF
  000dc	eb000000	 bl          BINtoReversedBCD
  000e0	e354000c	 cmp         r4, #0xC
  000e4	23a03002	 movcs       r3, #2

; 397  : 	cmdBuffer[RTC_INT_MINUTE] = RTC_ALARM_ENABLE | BINtoReversedBCD((UINT8)pSystemTime->wMinute);

  000e8	e1d520ba	 ldrh        r2, [r5, #0xA]
  000ec	33a03000	 movcc       r3, #0
  000f0	e1803003	 orr         r3, r0, r3
  000f4	e3833001	 orr         r3, r3, #1
  000f8	e20200ff	 and         r0, r2, #0xFF
  000fc	e5cd3005	 strb        r3, [sp, #5]
  00100	eb000000	 bl          BINtoReversedBCD
  00104	e3803001	 orr         r3, r0, #1

; 398  : 
; 399  : 	if (RTCI2CWrite(RTC_CMD_INT1,cmdBuffer,3)==FALSE)

  00108	e3a00004	 mov         r0, #4
  0010c	e3a02003	 mov         r2, #3
  00110	e28d1004	 add         r1, sp, #4
  00114	e5cd3006	 strb        r3, [sp, #6]
  00118	eb000000	 bl          RTCI2CWrite
  0011c	e3500000	 cmp         r0, #0
  00120	1a000005	 bne         |$LN1@OEMSetAlar|

; 400  : 	{
; 401  : 		OALMSG(OAL_ERROR, (L"RTC_SetTime(): Failed to write the date/time to the RTC.\r\n"));

  00124	e59f302c	 ldr         r3, [pc, #0x2C]
  00128	e5933440	 ldr         r3, [r3, #0x440]
  0012c	e3130001	 tst         r3, #1
  00130	0affffb9	 beq         |$LN19@OEMSetAlar|
  00134	e59f0018	 ldr         r0, [pc, #0x18]

; 402  : 		return FALSE;

  00138	eaffffc9	 b           |$LN20@OEMSetAlar|
  0013c		 |$LN1@OEMSetAlar|

; 403  : 	}
; 404  : 
; 405  :     OEMInterruptDone(SYSINTR_RTC_ALARM);

  0013c	e3a0000d	 mov         r0, #0xD
  00140	eb000000	 bl          OEMInterruptDone

; 406  : 
; 407  : 	return TRUE;

  00144	e3a00001	 mov         r0, #1
  00148		 |$LN7@OEMSetAlar|

; 408  : }

  00148	e28dd008	 add         sp, sp, #8
  0014c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00150	e12fff1e	 bx          lr
  00154		 |$LN25@OEMSetAlar|
  00154		 |$LN26@OEMSetAlar|
  00154	00000000	 DCD         |??_C@_1HG@GONGOGNI@?$AAR?$AAT?$AAC?$AA_?$AAS?$AAe?$AAt?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAe?$AA?5?$AAt@|
  00158		 |$LN27@OEMSetAlar|
  00158	00000000	 DCD         |dpCurSettings|
  0015c		 |$LN28@OEMSetAlar|
  0015c	00000000	 DCD         |??_C@_1HG@GOCBJLIN@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@|
  00160		 |$LN29@OEMSetAlar|
  00160	00000000	 DCD         |??_C@_1HM@BAOOGNJE@?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5@|
  00164		 |$LN30@OEMSetAlar|
  00164	00000000	 DCD         |g_NeedReinit|
  00168		 |$M44734|

			 ENDP  ; |OEMSetAlarmTime|

	END
