; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\OAL\OMAP_DEBUGSERIAL\debugserial.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.bss|, NOINIT
|s_pUartRegs| %	0x4
|g_pCfg| %	0x4
|bInitializationDone| % 0x4

  00000			 AREA	 |.data|, DATA
|bEnableDebugMessages| DCD 0x1

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|OEMInitDebugSerial|
	IMPORT	|OALPAtoVA|
	IMPORT	|GetAddressByDevice|
	IMPORT	|BSPGetDebugUARTConfig|
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\oal\omap_debugserial\debugserial.c

  00000			 AREA	 |.pdata|, PDATA
|$T43727| DCD	|$LN8@OEMInitDeb|
	DCD	0x40002501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMInitDebugSerial| PROC

; 43   : {    

  00000		 |$LN8@OEMInitDeb|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M43724|

; 44   :     g_pCfg = BSPGetDebugUARTConfig();

  00004	eb000000	 bl          BSPGetDebugUARTConfig
  00008	e59f4080	 ldr         r4, [pc, #0x80]
  0000c	e1a03000	 mov         r3, r0

; 45   :     //----------------------------------------------------------------------
; 46   :     //  Initialize UART
; 47   :     //----------------------------------------------------------------------
; 48   : 
; 49   :     s_pUartRegs = OALPAtoUA(GetAddressByDevice(g_pCfg->dev));

  00010	e5930000	 ldr         r0, [r3]
  00014	e5843004	 str         r3, [r4, #4]
  00018	eb000000	 bl          GetAddressByDevice
  0001c	e3a01000	 mov         r1, #0
  00020	eb000000	 bl          OALPAtoVA

; 50   : 
; 51   :     // Reset UART & wait until it completes
; 52   :     OUTREG8(&s_pUartRegs->SYSC, UART_SYSC_RST);

  00024	e3a03002	 mov         r3, #2
  00028	e5c03054	 strb        r3, [r0, #0x54]
  0002c	e5840000	 str         r0, [r4]
  00030		 |$LL2@OEMInitDeb|

; 53   :     while ((INREG8(&s_pUartRegs->SYSS) & UART_SYSS_RST_DONE) == 0);

  00030	e5d03058	 ldrb        r3, [r0, #0x58]
  00034	e3130001	 tst         r3, #1
  00038	0afffffc	 beq         |$LL2@OEMInitDeb|

; 54   :     // Set baud rate
; 55   :     OUTREG8(&s_pUartRegs->LCR, UART_LCR_DLAB);
; 56   :     OUTREG8(&s_pUartRegs->DLL, g_pCfg->DLL);

  0003c	e5941004	 ldr         r1, [r4, #4]
  00040	e3a03080	 mov         r3, #0x80
  00044	e5c0300c	 strb        r3, [r0, #0xC]
  00048	e5913008	 ldr         r3, [r1, #8]

; 57   :     OUTREG8(&s_pUartRegs->DLH, g_pCfg->DLH);

  0004c	e1a02000	 mov         r2, r0

; 58   :     // 8 bit, 1 stop bit, no parity
; 59   :     OUTREG8(&s_pUartRegs->LCR, g_pCfg->LCR);
; 60   :     // Enable FIFO
; 61   :     OUTREG8(&s_pUartRegs->FCR, UART_FCR_FIFO_EN|UART_FCR_RX_FIFO_CLEAR|UART_FCR_TX_FIFO_CLEAR);

  00050	e3a0e007	 mov         lr, #7
  00054	e5c03000	 strb        r3, [r0]
  00058	e591300c	 ldr         r3, [r1, #0xC]

; 62   :     // Pool
; 63   :     OUTREG8(&s_pUartRegs->IER, 0);

  0005c	e3a05000	 mov         r5, #0
  00060	e5e23004	 strb        r3, [r2, #4]!
  00064	e5913004	 ldr         r3, [r1, #4]

; 64   :     // Set DTR/RTS signals
; 65   :     OUTREG8(&s_pUartRegs->MCR, UART_MCR_DTR|UART_MCR_RTS);

  00068	e3a01003	 mov         r1, #3
  0006c	e5c0300c	 strb        r3, [r0, #0xC]
  00070	e5c0e008	 strb        lr, [r0, #8]
  00074	e5c25000	 strb        r5, [r2]

; 66   :     // Configuration complete so select UART 16x mode
; 67   :     OUTREG8(&s_pUartRegs->MDR1, UART_MDR1_UART16);
; 68   : 
; 69   :     bInitializationDone = TRUE;

  00078	e3a03001	 mov         r3, #1
  0007c	e5c01010	 strb        r1, [r0, #0x10]
  00080	e5c05020	 strb        r5, [r0, #0x20]
  00084	e5843008	 str         r3, [r4, #8]

; 70   : }

  00088	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0008c	e12fff1e	 bx          lr
  00090		 |$LN9@OEMInitDeb|
  00090		 |$LN10@OEMInitDeb|
  00090	00000000	 DCD         |s_pUartRegs|
  00094		 |$M43725|

			 ENDP  ; |OEMInitDebugSerial|

	EXPORT	|OEMDebugInit|

  00000			 AREA	 |.pdata|, PDATA
|$T43738| DCD	|$LN5@OEMDebugIn|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMDebugInit| PROC

; 73   : {

  00000		 |$LN5@OEMDebugIn|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M43735|

; 74   :     OEMInitDebugSerial();

  00004	eb000000	 bl          OEMInitDebugSerial

; 75   :     return TRUE;

  00008	e3a00001	 mov         r0, #1

; 76   : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M43736|

			 ENDP  ; |OEMDebugInit|

	EXPORT	|OEMDeinitDebugSerial|
	IMPORT	|EnableDeviceClocks|

  00000			 AREA	 |.pdata|, PDATA
|$T43746| DCD	|$LN9@OEMDeinitD|
	DCD	0x40001301
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMDeinitDebugSerial| PROC

; 83   : {

  00000		 |$LN9@OEMDeinitD|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M43743|

; 84   :     // Wait while FIFO isn't empty
; 85   :     if (s_pUartRegs != NULL)

  00004	e59f403c	 ldr         r4, [pc, #0x3C]
  00008	e5942000	 ldr         r2, [r4]
  0000c	e3520000	 cmp         r2, #0
  00010	0a000002	 beq         |$LN1@OEMDeinitD|
  00014		 |$LL2@OEMDeinitD|

; 86   :         {
; 87   :         while ((INREG8(&s_pUartRegs->LSR) & UART_LSR_TX_SR_E) == 0);

  00014	e5d23014	 ldrb        r3, [r2, #0x14]
  00018	e3130040	 tst         r3, #0x40
  0001c	0afffffc	 beq         |$LL2@OEMDeinitD|
  00020		 |$LN1@OEMDeinitD|

; 88   :         }
; 89   : 
; 90   :     s_pUartRegs = NULL;
; 91   :     EnableDeviceClocks(g_pCfg->dev, FALSE);

  00020	e5943004	 ldr         r3, [r4, #4]
  00024	e3a02000	 mov         r2, #0
  00028	e3a01000	 mov         r1, #0
  0002c	e5930000	 ldr         r0, [r3]
  00030	e5842000	 str         r2, [r4]
  00034	eb000000	 bl          EnableDeviceClocks

; 92   : 
; 93   :     bInitializationDone = FALSE;

  00038	e3a03000	 mov         r3, #0
  0003c	e5843008	 str         r3, [r4, #8]

; 94   : }

  00040	e8bd4010	 ldmia       sp!, {r4, lr}
  00044	e12fff1e	 bx          lr
  00048		 |$LN10@OEMDeinitD|
  00048		 |$LN11@OEMDeinitD|
  00048	00000000	 DCD         |s_pUartRegs|
  0004c		 |$M43744|

			 ENDP  ; |OEMDeinitDebugSerial|

	EXPORT	|OEMWriteDebugByte|

  00000			 AREA	 |.pdata|, PDATA
|$T43757| DCD	|$LN10@OEMWriteDe|
	DCD	0x40001200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMWriteDebugByte| PROC

; 103  : {

  00000		 |$LN10@OEMWriteDe|
  00000		 |$M43754|

; 104  :     if (bInitializationDone)

  00000	e59f203c	 ldr         r2, [pc, #0x3C]
  00004	e5923008	 ldr         r3, [r2, #8]
  00008	e3530000	 cmp         r3, #0
  0000c	0a00000a	 beq         |$LN3@OEMWriteDe|

; 105  :     {
; 106  :       if (s_pUartRegs != NULL && bEnableDebugMessages)

  00010	e5922000	 ldr         r2, [r2]
  00014	e3520000	 cmp         r2, #0
  00018	0a000007	 beq         |$LN3@OEMWriteDe|
  0001c	e59f301c	 ldr         r3, [pc, #0x1C]
  00020	e5933000	 ldr         r3, [r3]
  00024	e3530000	 cmp         r3, #0
  00028	0a000003	 beq         |$LN3@OEMWriteDe|
  0002c		 |$LL2@OEMWriteDe|

; 107  :             {
; 108  :             // Wait while FIFO is full
; 109  :             while ((INREG8(&s_pUartRegs->SSR) & UART_SSR_TX_FIFO_FULL) != 0);

  0002c	e5d23044	 ldrb        r3, [r2, #0x44]
  00030	e3130001	 tst         r3, #1
  00034	1afffffc	 bne         |$LL2@OEMWriteDe|

; 110  :             // Send byte
; 111  :             OUTREG8(&s_pUartRegs->THR, ch);

  00038	e5c20000	 strb        r0, [r2]
  0003c		 |$LN3@OEMWriteDe|

; 112  :             }
; 113  :     }
; 114  : }

  0003c	e12fff1e	 bx          lr
  00040		 |$LN11@OEMWriteDe|
  00040		 |$LN12@OEMWriteDe|
  00040	00000000	 DCD         |bEnableDebugMessages|
  00044		 |$LN13@OEMWriteDe|
  00044	00000000	 DCD         |s_pUartRegs|
  00048		 |$M43755|

			 ENDP  ; |OEMWriteDebugByte|

	EXPORT	|OEMReadDebugByte|

  00000			 AREA	 |.pdata|, PDATA
|$T43771| DCD	|$LN10@OEMReadDeb|
	DCD	0x40001a00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMReadDebugByte| PROC

; 123  : {

  00000		 |$LN10@OEMReadDeb|
  00000		 |$M43768|

; 124  :     UINT8 ch = (UINT8)OEM_DEBUG_READ_NODATA;
; 125  :     UINT8 status;
; 126  : 
; 127  :     if (bInitializationDone)

  00000	e59f105c	 ldr         r1, [pc, #0x5C]
  00004	e3a020ff	 mov         r2, #0xFF
  00008	e5913008	 ldr         r3, [r1, #8]
  0000c	e3530000	 cmp         r3, #0
  00010	0a000010	 beq         |$LN1@OEMReadDeb|

; 128  :     {
; 129  :         if ((s_pUartRegs == NULL) || !bEnableDebugMessages) return OEM_DEBUG_READ_NODATA;

  00014	e5912000	 ldr         r2, [r1]
  00018	e3520000	 cmp         r2, #0
  0001c	0a00000b	 beq         |$LN3@OEMReadDeb|
  00020	e59f3038	 ldr         r3, [pc, #0x38]
  00024	e5933000	 ldr         r3, [r3]
  00028	e3530000	 cmp         r3, #0
  0002c	0a000007	 beq         |$LN3@OEMReadDeb|

; 130  : 
; 131  :         status = INREG8(&s_pUartRegs->LSR);

  00030	e5d23014	 ldrb        r3, [r2, #0x14]

; 132  : 	    if ((status & UART_LSR_RX_FIFO_E) == 0) return OEM_DEBUG_READ_NODATA;

  00034	e3130001	 tst         r3, #1
  00038	0a000004	 beq         |$LN3@OEMReadDeb|

; 133  : 
; 134  :         ch = INREG8(&s_pUartRegs->RHR);

  0003c	e5d22000	 ldrb        r2, [r2]

; 135  : 	    if ((status & UART_LSR_RX_ERROR) != 0)  return OEM_DEBUG_COM_ERROR;

  00040	e313001e	 tst         r3, #0x1E
  00044	0a000003	 beq         |$LN1@OEMReadDeb|
  00048	e3e00001	 mvn         r0, #1

; 139  : }

  0004c	e12fff1e	 bx          lr
  00050		 |$LN3@OEMReadDeb|

; 128  :     {
; 129  :         if ((s_pUartRegs == NULL) || !bEnableDebugMessages) return OEM_DEBUG_READ_NODATA;

  00050	e3e00000	 mvn         r0, #0

; 139  : }

  00054	e12fff1e	 bx          lr
  00058		 |$LN1@OEMReadDeb|

; 136  :     }
; 137  : 
; 138  : 	return (INT)ch;

  00058	e1a00002	 mov         r0, r2

; 139  : }

  0005c	e12fff1e	 bx          lr
  00060		 |$LN11@OEMReadDeb|
  00060		 |$LN12@OEMReadDeb|
  00060	00000000	 DCD         |bEnableDebugMessages|
  00064		 |$LN13@OEMReadDeb|
  00064	00000000	 DCD         |s_pUartRegs|
  00068		 |$M43769|

			 ENDP  ; |OEMReadDebugByte|

	EXPORT	|OEMEnableDebugOutput|

  00000			 AREA	 |.pdata|, PDATA
|$T43782| DCD	|$LN5@OEMEnableD|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMEnableDebugOutput| PROC

; 151  : {

  00000		 |$LN5@OEMEnableD|
  00000		 |$M43779|

; 152  :     bEnableDebugMessages = bEnable;

  00000	e59f3004	 ldr         r3, [pc, #4]
  00004	e5830000	 str         r0, [r3]

; 153  : }

  00008	e12fff1e	 bx          lr
  0000c		 |$LN6@OEMEnableD|
  0000c		 |$LN7@OEMEnableD|
  0000c	00000000	 DCD         |bEnableDebugMessages|
  00010		 |$M43780|

			 ENDP  ; |OEMEnableDebugOutput|

	EXPORT	|OEMWriteDebugString|

  00000			 AREA	 |.pdata|, PDATA
|$T43795| DCD	|$LN10@OEMWriteDe@2|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMWriteDebugString| PROC

; 162  : {

  00000		 |$LN10@OEMWriteDe@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M43792|
  00004	e1a04000	 mov         r4, r0

; 163  :     while (*string != L'\0') OEMWriteDebugByte((UINT8)*string++);

  00008	e1d430b0	 ldrh        r3, [r4]
  0000c	ea000002	 b           |$LN7@OEMWriteDe@2|
  00010		 |$LL2@OEMWriteDe@2|
  00010	e20300ff	 and         r0, r3, #0xFF
  00014	eb000000	 bl          OEMWriteDebugByte
  00018	e1f430b2	 ldrh        r3, [r4, #2]!
  0001c		 |$LN7@OEMWriteDe@2|
  0001c	e3530000	 cmp         r3, #0
  00020	1afffffa	 bne         |$LL2@OEMWriteDe@2|

; 164  : }

  00024	e8bd4010	 ldmia       sp!, {r4, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M43793|

			 ENDP  ; |OEMWriteDebugString|

	EXPORT	|OEMWriteDebugLED|

  00000			 AREA	 |.pdata|, PDATA
|$T43802| DCD	|$LN5@OEMWriteDe@3|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMWriteDebugLED| PROC

; 183  : {

  00000		 |$LN5@OEMWriteDe@3|
  00000		 |$M43799|

; 184  :     UNREFERENCED_PARAMETER(index);
; 185  :     UNREFERENCED_PARAMETER(data);
; 186  : }

  00000	e12fff1e	 bx          lr
  00004		 |$M43800|

			 ENDP  ; |OEMWriteDebugLED|

	END
