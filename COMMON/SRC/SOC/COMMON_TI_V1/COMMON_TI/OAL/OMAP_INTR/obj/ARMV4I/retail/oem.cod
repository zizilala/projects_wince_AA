; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\COMMON_TI\OAL\OMAP_INTR\oem.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|OEMInterruptEnable|
	EXPORT	|??_C@_1DM@KHBFOEPK@?$AA?9?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA1?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@IIIKCIAC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?3?$AA?5?$AAI?$AAR?$AAQ?$AAs?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@HHGIJMMI@?$AA?$CL?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?$CI?$AA?$CF?$AAd?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd@| [ DATA ] ; `string'
	IMPORT	|OALIntrEnableIrqs|
	IMPORT	|OALIntrTranslateSysIntr|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\oal\omap_intr\oem.c

  00000			 AREA	 |.pdata|, PDATA
|$T43243| DCD	|$LN15@OEMInterru|
	DCD	0x40003502

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@KHBFOEPK@?$AA?9?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA1?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, "(", 0x0, "r", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "1", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@IIIKCIAC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?3?$AA?5?$AAI?$AAR?$AAQ?$AAs?$AA?5@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, ":", 0x0, " ", 0x0, "I", 0x0, "R", 0x0, "Q", 0x0, "s"
	DCB	0x0, " ", 0x0, "a", 0x0, "r", 0x0, "e", 0x0, " ", 0x0, "u"
	DCB	0x0, "n", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "S", 0x0, "y", 0x0, "s", 0x0, "I", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@HHGIJMMI@?$AA?$CL?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?$CI?$AA?$CF?$AAd?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd@| DCB "+"
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, "(", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMInterruptEnable| PROC

; 34   : {

  00000		 |$LN15@OEMInterru|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M43240|
  00008	e1a04000	 mov         r4, r0

; 35   :     BOOL rc = FALSE;
; 36   :     const UINT32 *pIrqs;
; 37   :     UINT32 count;
; 38   : 
; 39   : 	UNREFERENCED_PARAMETER(pvData);
; 40   : 	UNREFERENCED_PARAMETER(cbData);
; 41   : 
; 42   :     OALMSG(OAL_INTR&&OAL_VERBOSE,(L"+OEMInterruptEnable(%d, 0x%x, %d)\r\n", sysIntr, pvData, cbData));

  0000c	e59f60bc	 ldr         r6, [pc, #0xBC]
  00010	e3a05000	 mov         r5, #0
  00014	e5963440	 ldr         r3, [r6, #0x440]
  00018	e3130901	 tst         r3, #1, 18
  0001c	0a000007	 beq         |$LN6@OEMInterru|
  00020	e3130902	 tst         r3, #2, 18
  00024	0a000005	 beq         |$LN6@OEMInterru|
  00028	e59f009c	 ldr         r0, [pc, #0x9C]
  0002c	e1a03002	 mov         r3, r2
  00030	e1a02001	 mov         r2, r1
  00034	e1a01004	 mov         r1, r4
  00038	eb000000	 bl          NKDbgPrintfW
  0003c	e5963440	 ldr         r3, [r6, #0x440]
  00040		 |$LN6@OEMInterru|

; 43   : 
; 44   :     // SYSINTR_VMINI & SYSINTR_TIMING are special cases
; 45   :     if (sysIntr == SYSINTR_VMINI || sysIntr == SYSINTR_TIMING) {

  00040	e354000f	 cmp         r4, #0xF
  00044	0a000015	 beq         |$LN2@OEMInterru|
  00048	e354000a	 cmp         r4, #0xA
  0004c	0a000013	 beq         |$LN2@OEMInterru|

; 47   :         goto cleanUp;
; 48   :     }
; 49   : 
; 50   :     // Obtain the SYSINTR's underlying IRQ number
; 51   :     if (!OALIntrTranslateSysIntr(sysIntr, &count, &pIrqs)) {

  00050	e28d2000	 add         r2, sp, #0
  00054	e28d1004	 add         r1, sp, #4
  00058	e1a00004	 mov         r0, r4
  0005c	eb000000	 bl          OALIntrTranslateSysIntr
  00060	e3500000	 cmp         r0, #0
  00064	1a000007	 bne         |$LN1@OEMInterru|

; 52   :         // Indicate invalid SysIntr
; 53   :         OALMSG(OAL_ERROR, (
; 54   :             L"ERROR: OEMInterruptEnable: IRQs are undefined for SysIntr %d\r\n", 
; 55   :             sysIntr ));

  00068	e5963440	 ldr         r3, [r6, #0x440]
  0006c	e3130001	 tst         r3, #1
  00070	0a00000b	 beq         |$cleanUp$43161|
  00074	e59f004c	 ldr         r0, [pc, #0x4C]
  00078	e1a01004	 mov         r1, r4
  0007c	eb000000	 bl          NKDbgPrintfW

; 56   :         goto cleanUp;

  00080	e5963440	 ldr         r3, [r6, #0x440]
  00084	ea000006	 b           |$cleanUp$43161|
  00088		 |$LN1@OEMInterru|

; 57   :     }
; 58   : 
; 59   :     // Enable the interrupt
; 60   :     rc = OALIntrEnableIrqs(count, pIrqs);

  00088	e59d1000	 ldr         r1, [sp]
  0008c	e59d0004	 ldr         r0, [sp, #4]
  00090	eb000000	 bl          OALIntrEnableIrqs
  00094	e5963440	 ldr         r3, [r6, #0x440]
  00098	e1a05000	 mov         r5, r0
  0009c	ea000000	 b           |$cleanUp$43161|
  000a0		 |$LN2@OEMInterru|

; 46   :         rc = TRUE;

  000a0	e3a05001	 mov         r5, #1
  000a4		 |$cleanUp$43161|

; 61   : 
; 62   : cleanUp:    
; 63   :     OALMSG(OAL_INTR&&OAL_VERBOSE, (L"-OEMInterruptEnable(rc = 1)\r\n"));

  000a4	e3130901	 tst         r3, #1, 18
  000a8	13130902	 tstne       r3, #2, 18
  000ac	159f0010	 ldrne       r0, [pc, #0x10]
  000b0	1b000000	 blne        NKDbgPrintfW

; 64   :     return rc;
; 65   : }

  000b4	e1a00005	 mov         r0, r5
  000b8	e28dd008	 add         sp, sp, #8
  000bc	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000c0	e12fff1e	 bx          lr
  000c4		 |$LN16@OEMInterru|
  000c4		 |$LN17@OEMInterru|
  000c4	00000000	 DCD         |??_C@_1DM@KHBFOEPK@?$AA?9?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA1?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  000c8		 |$LN18@OEMInterru|
  000c8	00000000	 DCD         |??_C@_1HO@IIIKCIAC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?3?$AA?5?$AAI?$AAR?$AAQ?$AAs?$AA?5@|
  000cc		 |$LN19@OEMInterru|
  000cc	00000000	 DCD         |??_C@_1EI@HHGIJMMI@?$AA?$CL?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?$CI?$AA?$CF?$AAd?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd@|
  000d0		 |$LN20@OEMInterru|
  000d0	00000000	 DCD         |dpCurSettings|
  000d4		 |$M43241|

			 ENDP  ; |OEMInterruptEnable|

	EXPORT	|OEMInterruptDisable|
	EXPORT	|??_C@_1CO@FKOPLHGO@?$AA?9?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DG@HOKLDENP@?$AA?$CL?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|OALIntrDisableIrqs|

  00000			 AREA	 |.pdata|, PDATA
|$T43263| DCD	|$LN13@OEMInterru@2|
	DCD	0x40002602

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@FKOPLHGO@?$AA?9?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, "D", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@HOKLDENP@?$AA?$CL?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, "D", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMInterruptDisable| PROC

; 76   : {

  00000		 |$LN13@OEMInterru@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M43260|
  00008	e1a05000	 mov         r5, r0

; 77   :     const UINT32 *pIrqs;
; 78   :     UINT32 count;
; 79   : 
; 80   :     OALMSG(OAL_INTR&&OAL_VERBOSE, (L"+OEMInterruptDisable(%d)\r\n", sysIntr));

  0000c	e59f4080	 ldr         r4, [pc, #0x80]
  00010	e5943440	 ldr         r3, [r4, #0x440]
  00014	e3130901	 tst         r3, #1, 18
  00018	13130902	 tstne       r3, #2, 18
  0001c	159f006c	 ldrne       r0, [pc, #0x6C]
  00020	11a01005	 movne       r1, r5
  00024	1b000000	 blne        NKDbgPrintfW

; 81   : 
; 82   :     // Obtain the SYSINTR's underlying IRQ number
; 83   :     if (!OALIntrTranslateSysIntr(sysIntr, &count, &pIrqs)) {

  00028	e28d2000	 add         r2, sp, #0
  0002c	e28d1004	 add         r1, sp, #4
  00030	e1a00005	 mov         r0, r5
  00034	eb000000	 bl          OALIntrTranslateSysIntr
  00038	e3500000	 cmp         r0, #0
  0003c	1a000006	 bne         |$LN1@OEMInterru@2|

; 84   :         // Indicate invalid SysIntr
; 85   :         OALMSG(OAL_ERROR, (
; 86   :             L"ERROR: OEMInterruptEnable: IRQs are undefined for SysIntr %d\r\n", 
; 87   :             sysIntr 
; 88   :         ));

  00040	e5943440	 ldr         r3, [r4, #0x440]
  00044	e3130001	 tst         r3, #1
  00048	0a000007	 beq         |$cleanUp$43176|
  0004c	e59f0038	 ldr         r0, [pc, #0x38]
  00050	e1a01005	 mov         r1, r5
  00054	eb000000	 bl          NKDbgPrintfW

; 89   :         goto cleanUp;

  00058	ea000002	 b           |$LN10@OEMInterru@2|
  0005c		 |$LN1@OEMInterru@2|

; 90   :     }
; 91   : 
; 92   :     // Disable the interrupt
; 93   :     OALIntrDisableIrqs(count, pIrqs);

  0005c	e59d1000	 ldr         r1, [sp]
  00060	e59d0004	 ldr         r0, [sp, #4]
  00064	eb000000	 bl          OALIntrDisableIrqs
  00068		 |$LN10@OEMInterru@2|
  00068	e5943440	 ldr         r3, [r4, #0x440]
  0006c		 |$cleanUp$43176|

; 94   : 
; 95   : cleanUp:
; 96   :     // Indicate exit
; 97   :     OALMSG(OAL_INTR&&OAL_VERBOSE, (L"-OEMInterruptDisable\r\n"));

  0006c	e3130901	 tst         r3, #1, 18
  00070	13130902	 tstne       r3, #2, 18
  00074	159f000c	 ldrne       r0, [pc, #0xC]
  00078	1b000000	 blne        NKDbgPrintfW

; 98   : }

  0007c	e28dd008	 add         sp, sp, #8
  00080	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00084	e12fff1e	 bx          lr
  00088		 |$LN14@OEMInterru@2|
  00088		 |$LN15@OEMInterru@2|
  00088	00000000	 DCD         |??_C@_1CO@FKOPLHGO@?$AA?9?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  0008c		 |$LN16@OEMInterru@2|
  0008c	00000000	 DCD         |??_C@_1HO@IIIKCIAC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?3?$AA?5?$AAI?$AAR?$AAQ?$AAs?$AA?5@|
  00090		 |$LN17@OEMInterru@2|
  00090	00000000	 DCD         |??_C@_1DG@HOKLDENP@?$AA?$CL?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00094		 |$LN18@OEMInterru@2|
  00094	00000000	 DCD         |dpCurSettings|
  00098		 |$M43261|

			 ENDP  ; |OEMInterruptDisable|

	EXPORT	|OEMInterruptMask|
	EXPORT	|??_C@_1CI@OPHGDEL@?$AA?9?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAM?$AAa?$AAs?$AAk?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@MFEEGIMP@?$AA?$CL?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAM?$AAa?$AAs?$AAk?$AA?$CI?$AA?$CF?$AAd?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T43281| DCD	|$LN11@OEMInterru@3|
	DCD	0x40001d01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@OPHGDEL@?$AA?9?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAM?$AAa?$AAs?$AAk?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, "M", 0x0, "a", 0x0, "s", 0x0, "k", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@MFEEGIMP@?$AA?$CL?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAM?$AAa?$AAs?$AAk?$AA?$CI?$AA?$CF?$AAd?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "r", 0x0, "u", 0x0, "p", 0x0, "t"
	DCB	0x0, "M", 0x0, "a", 0x0, "s", 0x0, "k", 0x0, "(", 0x0, "%"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMInterruptMask| PROC

; 112  : {

  00000		 |$LN11@OEMInterru@3|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M43278|
  00004	e1a05001	 mov         r5, r1
  00008	e1a04000	 mov         r4, r0

; 113  :     OALMSG(OAL_INTR&&OAL_VERBOSE, (
; 114  :         L"+OEMInterruptMask(%d, %d)\r\n", sysIntr, mask
; 115  :         ));

  0000c	e59f605c	 ldr         r6, [pc, #0x5C]
  00010	e5963440	 ldr         r3, [r6, #0x440]
  00014	e3130901	 tst         r3, #1, 18
  00018	13130902	 tstne       r3, #2, 18
  0001c	159f0048	 ldrne       r0, [pc, #0x48]
  00020	11a02005	 movne       r2, r5
  00024	11a01004	 movne       r1, r4
  00028	1b000000	 blne        NKDbgPrintfW

; 116  : 
; 117  :     // Based on mask enable or disable
; 118  :     if (mask)

  0002c	e3550000	 cmp         r5, #0

; 119  :         {
; 120  :         OEMInterruptDisable(sysIntr);

  00030	e1a00004	 mov         r0, r4
  00034	0a000001	 beq         |$LN2@OEMInterru@3|
  00038	eb000000	 bl          OEMInterruptDisable

; 121  :         }
; 122  :     else 

  0003c	ea000002	 b           |$LN1@OEMInterru@3|
  00040		 |$LN2@OEMInterru@3|

; 123  :         {
; 124  :         OEMInterruptEnable(sysIntr, NULL, 0);

  00040	e3a02000	 mov         r2, #0
  00044	e3a01000	 mov         r1, #0
  00048	eb000000	 bl          OEMInterruptEnable
  0004c		 |$LN1@OEMInterru@3|

; 125  :         }
; 126  : 
; 127  :     OALMSG(OAL_INTR&&OAL_VERBOSE, (L"-OEMInterruptMask\r\n"));

  0004c	e5963440	 ldr         r3, [r6, #0x440]
  00050	e3130901	 tst         r3, #1, 18
  00054	13130902	 tstne       r3, #2, 18
  00058	159f0008	 ldrne       r0, [pc, #8]
  0005c	1b000000	 blne        NKDbgPrintfW

; 128  : }

  00060	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00064	e12fff1e	 bx          lr
  00068		 |$LN12@OEMInterru@3|
  00068		 |$LN13@OEMInterru@3|
  00068	00000000	 DCD         |??_C@_1CI@OPHGDEL@?$AA?9?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAM?$AAa?$AAs?$AAk?$AA?$AN?$AA?6?$AA?$AA@|
  0006c		 |$LN14@OEMInterru@3|
  0006c	00000000	 DCD         |??_C@_1DI@MFEEGIMP@?$AA?$CL?$AAO?$AAE?$AAM?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AAM?$AAa?$AAs?$AAk?$AA?$CI?$AA?$CF?$AAd?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00070		 |$LN15@OEMInterru@3|
  00070	00000000	 DCD         |dpCurSettings|
  00074		 |$M43279|

			 ENDP  ; |OEMInterruptMask|

	EXPORT	|OEMInterruptDone|
	IMPORT	|OALIntrDoneIrqs|

  00000			 AREA	 |.pdata|, PDATA
|$T43293| DCD	|$LN6@OEMInterru@4|
	DCD	0x40000c02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMInterruptDone| PROC

; 139  : {

  00000		 |$LN6@OEMInterru@4|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M43290|

; 140  :     const UINT32 *pIrqs;
; 141  :     UINT32 count;
; 142  :     //BOOL bPrevIntrState;
; 143  : 
; 144  :     //OALMSG(OAL_INTR&&OAL_VERBOSE, (L"+OEMInterruptDone(%d)\r\n", sysIntr));
; 145  : 
; 146  :     // Make sure interrupts are disabled
; 147  :     //bPrevIntrState = INTERRUPTS_ENABLE(FALSE);
; 148  :     
; 149  :     if (OALIntrTranslateSysIntr(sysIntr, &count, &pIrqs)) {

  00008	e28d2000	 add         r2, sp, #0
  0000c	e28d1004	 add         r1, sp, #4
  00010	eb000000	 bl          OALIntrTranslateSysIntr
  00014	e3500000	 cmp         r0, #0

; 150  :         OALIntrDoneIrqs(count, pIrqs);

  00018	159d1000	 ldrne       r1, [sp]
  0001c	159d0004	 ldrne       r0, [sp, #4]
  00020	1b000000	 blne        OALIntrDoneIrqs

; 151  :     }
; 152  : 
; 153  :     // Return interrupts to last state
; 154  :     //INTERRUPTS_ENABLE(bPrevIntrState);
; 155  : 
; 156  :     //OALMSG(OAL_INTR&&OAL_VERBOSE, (L"-OEMInterruptDone\r\n"));
; 157  : 
; 158  : }

  00024	e28dd008	 add         sp, sp, #8
  00028	e49de004	 ldr         lr, [sp], #4
  0002c	e12fff1e	 bx          lr
  00030		 |$M43291|

			 ENDP  ; |OEMInterruptDone|

	END
