; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\OMAP3530\PM\CONSTRAINTADAPTERS\POWERDOMAINCONSTRAINT\powerdomaincontext.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|GetCurrentThreadId|
	IMPORT	|__GetUserKData|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T42301| DCD	|$LN5@GetCurrent|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetCurrentThreadId| PROC

; 369  : _inline DWORD GetCurrentThreadId(void) {

  00000		 |$LN5@GetCurrent|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M42298|

; 370  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURTHREAD * sizeof(HANDLE)));

  00004	e3a00008	 mov         r0, #8
  00008	eb000000	 bl          __GetUserKData

; 371  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M42299|

			 ENDP  ; |GetCurrentThreadId|

	EXPORT	|??2@YAPAXIPAX@Z|			; operator new
; File c:\wince600\public\common\sdk\inc\new

  00000			 AREA	 |.pdata|, PDATA
|$T42311| DCD	|$LN5@operator|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??2@YAPAXIPAX@Z| PROC			; operator new

; 73   :     {return (_P); }

  00000		 |$LN5@operator|
  00000		 |$M42308|
  00000	e1a00001	 mov         r0, r1
  00004	e12fff1e	 bx          lr
  00008		 |$M42309|

			 ENDP  ; |??2@YAPAXIPAX@Z|, operator new

	EXPORT	|?Lock@PowerDomainConstraint@@QAAXXZ|	; PowerDomainConstraint::Lock
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\pm\constraintadapters\powerdomainconstraint\powerdomainconstraint.h

  00000			 AREA	 |.pdata|, PDATA
|$T42318| DCD	|$LN5@Lock|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Lock@PowerDomainConstraint@@QAAXXZ| PROC ; PowerDomainConstraint::Lock

; 74   :     {

  00000		 |$LN5@Lock|
  00000		 |$M42315|

; 75   :     }

  00000	e12fff1e	 bx          lr
  00004		 |$M42316|

			 ENDP  ; |?Lock@PowerDomainConstraint@@QAAXXZ|, PowerDomainConstraint::Lock

	EXPORT	|?Unlock@PowerDomainConstraint@@QAAXXZ|	; PowerDomainConstraint::Unlock

  00000			 AREA	 |.pdata|, PDATA
|$T42325| DCD	|$LN5@Unlock|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Unlock@PowerDomainConstraint@@QAAXXZ| PROC ; PowerDomainConstraint::Unlock

; 79   :     {

  00000		 |$LN5@Unlock|
  00000		 |$M42322|

; 80   :     }

  00000	e12fff1e	 bx          lr
  00004		 |$M42323|

			 ENDP  ; |?Unlock@PowerDomainConstraint@@QAAXXZ|, PowerDomainConstraint::Unlock

	IMPORT	|EnterCriticalSection|
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\pm\constraintadapters\powerdomainconstraint\powerdomaincontext.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T42332| DCD	|$LN5@Lock@2|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Lock@@YAXXZ| PROC			; Lock

; 81   : {

  00000		 |$LN5@Lock@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M42329|

; 82   :     EnterCriticalSection(&s_PowerDomainInfo.cs);

  00004	e59f0008	 ldr         r0, [pc, #8]
  00008	eb000000	 bl          EnterCriticalSection

; 83   : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$LN6@Lock@2|
  00014		 |$LN7@Lock@2|
  00014	00000000	 DCD         |s_PowerDomainInfo|
  00018		 |$M42330|

			 ENDP  ; |?Lock@@YAXXZ|, Lock

	IMPORT	|LeaveCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T42341| DCD	|$LN5@Unlock@2|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Unlock@@YAXXZ| PROC			; Unlock

; 94   : {

  00000		 |$LN5@Unlock@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M42338|

; 95   :     LeaveCriticalSection(&s_PowerDomainInfo.cs);

  00004	e59f0008	 ldr         r0, [pc, #8]
  00008	eb000000	 bl          LeaveCriticalSection

; 96   : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$LN6@Unlock@2|
  00014		 |$LN7@Unlock@2|
  00014	00000000	 DCD         |s_PowerDomainInfo|
  00018		 |$M42339|

			 ENDP  ; |?Unlock@@YAXXZ|, Unlock

	EXPORT	|?PWRDOM_DeinitConstraint@@YAHPAX@Z|	; PWRDOM_DeinitConstraint

  00000			 AREA	 |.pdata|, PDATA
|$T42354| DCD	|$LN7@PWRDOM_Dei|
	DCD	0x40000700
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PWRDOM_DeinitConstraint@@YAHPAX@Z| PROC ; PWRDOM_DeinitConstraint

; 254  : {

  00000		 |$LN7@PWRDOM_Dei|
  00000		 |$M42351|

; 255  :     BOOL rc = FALSE;
; 256  : 
; 257  :     // validate parameters
; 258  :     if (hConstraintAdapter != (HANDLE)&s_PowerDomainInfo) goto cleanUp;

  00000	e59f3010	 ldr         r3, [pc, #0x10]
  00004	e3a02000	 mov         r2, #0
  00008	e1500003	 cmp         r0, r3

; 259  : 
; 260  :     // don't do anything as this constraint adapter is meant to be loaded
; 261  :     // all the time.
; 262  : 
; 263  :     rc = TRUE;

  0000c	03a02001	 moveq       r2, #1
  00010		 |$cleanUp$41337|

; 264  : 
; 265  : cleanUp:
; 266  :     return rc;
; 267  : } 

  00010	e1a00002	 mov         r0, r2
  00014	e12fff1e	 bx          lr
  00018		 |$LN8@PWRDOM_Dei|
  00018		 |$LN9@PWRDOM_Dei|
  00018	00000000	 DCD         |s_PowerDomainInfo|
  0001c		 |$M42352|

			 ENDP  ; |?PWRDOM_DeinitConstraint@@YAHPAX@Z|, PWRDOM_DeinitConstraint

	EXPORT	|??0?$IndexList@K@@QAA@XZ|		; IndexList<unsigned long>::IndexList<unsigned long>
	IMPORT	|memset|
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\inc\indexlist.h

  00000			 AREA	 |.pdata|, PDATA
|$T42367| DCD	|$LN5@IndexList|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0?$IndexList@K@@QAA@XZ| PROC	; IndexList<unsigned long>::IndexList<unsigned long>

; 51   :     IndexList()

  00000		 |$LN5@IndexList|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M42364|
  00004	e1a04000	 mov         r4, r0

; 52   :     {        
; 53   :         memset(&m_Head, 0, sizeof(IndexData));

  00008	e3a02088	 mov         r2, #0x88
  0000c	e3a01000	 mov         r1, #0
  00010	eb000000	 bl          memset

; 54   :         m_maxIndex = INDEXED_CHUNK_SIZE - 1;

  00014	e3a0301f	 mov         r3, #0x1F
  00018	e5843088	 str         r3, [r4, #0x88]

; 55   :     }

  0001c	e1a00004	 mov         r0, r4
  00020	e8bd4010	 ldmia       sp!, {r4, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M42365|

			 ENDP  ; |??0?$IndexList@K@@QAA@XZ|, IndexList<unsigned long>::IndexList<unsigned long>

	EXPORT	|??1?$IndexList@K@@QAA@XZ|		; IndexList<unsigned long>::~IndexList<unsigned long>
	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$T42380| DCD	|$LN9@IndexList@2|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1?$IndexList@K@@QAA@XZ| PROC	; IndexList<unsigned long>::~IndexList<unsigned long>

; 58   :     {

  00000		 |$LN9@IndexList@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M42377|

; 59   :         IndexData *pCurrent;
; 60   :         IndexData *pDelete;
; 61   : 
; 62   :         pCurrent = m_Head.pNext;

  00004	e5903000	 ldr         r3, [r0]
  00008	e1b04003	 movs        r4, r3

; 63   :         while (pCurrent != NULL)

  0000c	0a000004	 beq         |$LN1@IndexList@2|
  00010		 |$LL2@IndexList@2|

; 64   :             {
; 65   :             pDelete = pCurrent;

  00010	e1a00004	 mov         r0, r4

; 66   :             pCurrent = pCurrent->pNext;

  00014	e5944000	 ldr         r4, [r4]

; 67   :             delete pDelete;

  00018	eb000000	 bl          |??3@YAXPAX@Z|
  0001c	e3540000	 cmp         r4, #0
  00020	1afffffa	 bne         |$LL2@IndexList@2|
  00024		 |$LN1@IndexList@2|

; 68   :             }
; 69   :     }

  00024	e8bd4010	 ldmia       sp!, {r4, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M42378|

			 ENDP  ; |??1?$IndexList@K@@QAA@XZ|, IndexList<unsigned long>::~IndexList<unsigned long>

	EXPORT	|?MaxIndex@?$IndexList@K@@QAAKXZ|	; IndexList<unsigned long>::MaxIndex

  00000			 AREA	 |.pdata|, PDATA
|$T42390| DCD	|$LN5@MaxIndex|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?MaxIndex@?$IndexList@K@@QAAKXZ| PROC	; IndexList<unsigned long>::MaxIndex

; 76   :     {

  00000		 |$LN5@MaxIndex|
  00000		 |$M42387|

; 77   :         return m_maxIndex;

  00000	e5900088	 ldr         r0, [r0, #0x88]

; 78   :     }

  00004	e12fff1e	 bx          lr
  00008		 |$M42388|

			 ENDP  ; |?MaxIndex@?$IndexList@K@@QAAKXZ|, IndexList<unsigned long>::MaxIndex

	EXPORT	|?NewIndex@?$IndexList@K@@QAAHPAPAKPAK@Z| ; IndexList<unsigned long>::NewIndex
	IMPORT	|??2@YAPAXI@Z|				; operator new

  00000			 AREA	 |.pdata|, PDATA
|$T42416| DCD	|$LN20@NewIndex|
	DCD	0x40003101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?NewIndex@?$IndexList@K@@QAAHPAPAKPAK@Z| PROC ; IndexList<unsigned long>::NewIndex

; 81   :     {

  00000		 |$LN20@NewIndex|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004		 |$M42413|
  00004	e1a09002	 mov         r9, r2
  00008	e1a0a001	 mov         r10, r1
  0000c	e1a08000	 mov         r8, r0

; 82   :         DWORD ffMask;
; 83   :         INT index = 0;        
; 84   :         BOOL rc = FALSE;        
; 85   :         IndexData *pCurrent;
; 86   : 
; 87   :         // find emtpy chunk
; 88   :         pCurrent = &m_Head;
; 89   :         while (pCurrent->ffMask == (-1))

  00010	e5983004	 ldr         r3, [r8, #4]
  00014	e3a05000	 mov         r5, #0
  00018	e3a06000	 mov         r6, #0
  0001c	e1a04008	 mov         r4, r8
  00020	ea000011	 b           |$LN15@NewIndex|
  00024		 |$LL7@NewIndex|

; 90   :             {
; 91   :             if (pCurrent->pNext == NULL)

  00024	e5943000	 ldr         r3, [r4]
  00028	e3530000	 cmp         r3, #0
  0002c	1a00000b	 bne         |$LN5@NewIndex|

; 92   :                 {
; 93   :                 IndexData *pNew = new IndexData;

  00030	e3a00088	 mov         r0, #0x88
  00034	eb000000	 bl          |??2@YAPAXI@Z|
  00038	e1b07000	 movs        r7, r0

; 94   :                 if (pNew == NULL) goto cleanUp;

  0003c	0a00001d	 beq         |$cleanUp$41480|

; 95   : 
; 96   :                 memset(pNew, 0, sizeof(IndexData));

  00040	e3a02088	 mov         r2, #0x88
  00044	e3a01000	 mov         r1, #0
  00048	e1a00007	 mov         r0, r7
  0004c	eb000000	 bl          memset

; 97   :                 pCurrent->pNext = pNew;

  00050	e5847000	 str         r7, [r4]

; 98   :                 m_maxIndex += INDEXED_CHUNK_SIZE;

  00054	e5983088	 ldr         r3, [r8, #0x88]
  00058	e2833020	 add         r3, r3, #0x20
  0005c	e5883088	 str         r3, [r8, #0x88]
  00060		 |$LN5@NewIndex|

; 99   :                 }
; 100  : 
; 101  :             index += INDEXED_CHUNK_SIZE;
; 102  :             pCurrent = pCurrent->pNext;

  00060	e5944000	 ldr         r4, [r4]
  00064	e2855020	 add         r5, r5, #0x20
  00068	e5943004	 ldr         r3, [r4, #4]
  0006c		 |$LN15@NewIndex|
  0006c	e3730001	 cmn         r3, #1
  00070	0affffeb	 beq         |$LL7@NewIndex|

; 103  :             }
; 104  : 
; 105  :         // get index within chunk
; 106  :         ffMask = pCurrent->ffMask;

  00074	e5942004	 ldr         r2, [r4, #4]

; 107  :         while ((ffMask & 1) == 1)

  00078	ea000001	 b           |$LN17@NewIndex|
  0007c		 |$LL2@NewIndex|

; 108  :             {
; 109  :             index++;
; 110  :             ffMask >>= 1;

  0007c	e1a020a2	 mov         r2, r2, lsr #1
  00080	e2855001	 add         r5, r5, #1
  00084		 |$LN17@NewIndex|
  00084	e2023001	 and         r3, r2, #1
  00088	e3530001	 cmp         r3, #1
  0008c	0afffffa	 beq         |$LL2@NewIndex|

; 111  :             }
; 112  : 
; 113  :         // copy empty slot info and mark as reserved
; 114  :         *pId = index;
; 115  :         *ppType = &(pCurrent->rgData[index & 0x1F]);

  00090	e205201f	 and         r2, r5, #0x1F
  00094	e2823002	 add         r3, r2, #2
  00098	e0843103	 add         r3, r4, r3, lsl #2
  0009c	e5895000	 str         r5, [r9]
  000a0	e58a3000	 str         r3, [r10]

; 116  :         pCurrent->ffMask |= (1 << (index & 0x1F));

  000a4	e5943004	 ldr         r3, [r4, #4]
  000a8	e3a01001	 mov         r1, #1

; 117  : 
; 118  :         rc = TRUE;

  000ac	e3a06001	 mov         r6, #1
  000b0	e1833211	 orr         r3, r3, r1, lsl r2
  000b4	e5843004	 str         r3, [r4, #4]
  000b8		 |$cleanUp$41480|

; 119  :     cleanUp:
; 120  :         return rc;
; 121  :     }

  000b8	e1a00006	 mov         r0, r6
  000bc	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  000c0	e12fff1e	 bx          lr
  000c4		 |$M42414|

			 ENDP  ; |?NewIndex@?$IndexList@K@@QAAHPAPAKPAK@Z|, IndexList<unsigned long>::NewIndex

	EXPORT	|?DeleteIndex@?$IndexList@K@@QAAXK@Z|	; IndexList<unsigned long>::DeleteIndex

  00000			 AREA	 |.pdata|, PDATA
|$T42429| DCD	|$LN10@DeleteInde|
	DCD	0x40000e00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DeleteIndex@?$IndexList@K@@QAAXK@Z| PROC ; IndexList<unsigned long>::DeleteIndex

; 124  :     {

  00000		 |$LN10@DeleteInde|
  00000		 |$M42426|

; 125  :         IndexData *pCurrent;
; 126  :         DWORD chunkId = id >> 5;

  00000	e1b022a1	 movs        r2, r1, lsr #5

; 127  : 
; 128  :         // find chunk
; 129  :         pCurrent = &m_Head;
; 130  :         while (chunkId)

  00004	0a000005	 beq         |$LN2@DeleteInde|
  00008		 |$LL3@DeleteInde|

; 131  :             {
; 132  :             --chunkId;
; 133  :             pCurrent = pCurrent->pNext;

  00008	e5903000	 ldr         r3, [r0]
  0000c	e2422001	 sub         r2, r2, #1
  00010	e1b00003	 movs        r0, r3

; 134  :             if (pCurrent == NULL) return;            

  00014	0a000006	 beq         |$LN4@DeleteInde|

; 127  : 
; 128  :         // find chunk
; 129  :         pCurrent = &m_Head;
; 130  :         while (chunkId)

  00018	e3520000	 cmp         r2, #0
  0001c	1afffff9	 bne         |$LL3@DeleteInde|
  00020		 |$LN2@DeleteInde|

; 135  :             }
; 136  : 
; 137  :         // clear mask
; 138  :         pCurrent->ffMask &= ~(1 << (id & 0x1F));

  00020	e5903004	 ldr         r3, [r0, #4]
  00024	e201201f	 and         r2, r1, #0x1F
  00028	e3a01001	 mov         r1, #1
  0002c	e1c33211	 bic         r3, r3, r1, lsl r2
  00030	e5803004	 str         r3, [r0, #4]
  00034		 |$LN4@DeleteInde|

; 139  :     }

  00034	e12fff1e	 bx          lr
  00038		 |$M42427|

			 ENDP  ; |?DeleteIndex@?$IndexList@K@@QAAXK@Z|, IndexList<unsigned long>::DeleteIndex

	EXPORT	|?GetIndex@?$IndexList@K@@QAAPAKK@Z|	; IndexList<unsigned long>::GetIndex

  00000			 AREA	 |.pdata|, PDATA
|$T42446| DCD	|$LN12@GetIndex|
	DCD	0x40001100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetIndex@?$IndexList@K@@QAAPAKK@Z| PROC ; IndexList<unsigned long>::GetIndex

; 142  :     {

  00000		 |$LN12@GetIndex|
  00000		 |$M42443|

; 143  :         IndexData *pCurrent;
; 144  :         DWORD chunkId = id >> 5;

  00000	e1b022a1	 movs        r2, r1, lsr #5

; 145  : 
; 146  :         // find chunk
; 147  :         pCurrent = &m_Head;
; 148  :         while (chunkId)

  00004	0a000005	 beq         |$LN2@GetIndex|
  00008		 |$LL3@GetIndex|

; 149  :             {
; 150  :             --chunkId;
; 151  :             pCurrent = pCurrent->pNext;

  00008	e5903000	 ldr         r3, [r0]
  0000c	e2422001	 sub         r2, r2, #1
  00010	e1b00003	 movs        r0, r3

; 152  :             if (pCurrent == NULL) return NULL;   

  00014	0a000008	 beq         |$LN6@GetIndex|

; 145  : 
; 146  :         // find chunk
; 147  :         pCurrent = &m_Head;
; 148  :         while (chunkId)

  00018	e3520000	 cmp         r2, #0
  0001c	1afffff9	 bne         |$LL3@GetIndex|
  00020		 |$LN2@GetIndex|

; 153  :             }
; 154  : 
; 155  :         // clear mask
; 156  :         return (pCurrent->ffMask & (1 << (id & 0x1F))) ? 
; 157  :                     &(pCurrent->rgData[id & 0x1F]) : NULL;

  00020	e5903004	 ldr         r3, [r0, #4]
  00024	e201201f	 and         r2, r1, #0x1F
  00028	e3a01001	 mov         r1, #1
  0002c	e1130211	 tst         r3, r1, lsl r2
  00030	12823002	 addne       r3, r2, #2
  00034	10800103	 addne       r0, r0, r3, lsl #2

; 158  :     }

  00038	112fff1e	 bxne        lr
  0003c		 |$LN6@GetIndex|

; 153  :             }
; 154  : 
; 155  :         // clear mask
; 156  :         return (pCurrent->ffMask & (1 << (id & 0x1F))) ? 
; 157  :                     &(pCurrent->rgData[id & 0x1F]) : NULL;

  0003c	e3a00000	 mov         r0, #0

; 158  :     }

  00040	e12fff1e	 bx          lr
  00044		 |$M42444|

			 ENDP  ; |?GetIndex@?$IndexList@K@@QAAPAKK@Z|, IndexList<unsigned long>::GetIndex

	EXPORT	|??8iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBA_NABV012@@Z| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::operator==
; File c:\wince600\public\common\sdk\inc\list

  00000			 AREA	 |.pdata|, PDATA
|$T42459| DCD	|$LN7@operator@2|
	DCD	0x40000800
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??8iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBA_NABV012@@Z| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::operator==

; 133  : 			{return (_Ptr == _X._Ptr); }

  00000		 |$LN7@operator@2|
  00000		 |$M42456|
  00000	e5902000	 ldr         r2, [r0]
  00004	e5913000	 ldr         r3, [r1]
  00008	e1520003	 cmp         r2, r3
  0000c	03a03001	 moveq       r3, #1
  00010	020300ff	 andeq       r0, r3, #0xFF
  00014	13a03000	 movne       r3, #0
  00018	120300ff	 andne       r0, r3, #0xFF
  0001c	e12fff1e	 bx          lr
  00020		 |$M42457|

			 ENDP  ; |??8iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBA_NABV012@@Z|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::operator==

	EXPORT	|??0const_iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@XZ| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::const_iterator::const_iterator

  00000			 AREA	 |.pdata|, PDATA
|$T42469| DCD	|$LN5@const_iter|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0const_iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@XZ| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::const_iterator::const_iterator

; 73   : 		const_iterator()

  00000		 |$LN5@const_iter|
  00000		 |$M42466|
  00000	e12fff1e	 bx          lr
  00004		 |$M42467|

			 ENDP  ; |??0const_iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@XZ|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::const_iterator::const_iterator

	EXPORT	|?_Mynode@const_iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBAPAU_Node@23@XZ| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::const_iterator::_Mynode

  00000			 AREA	 |.pdata|, PDATA
|$T42479| DCD	|$LN5@Mynode|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?_Mynode@const_iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBAPAU_Node@23@XZ| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::const_iterator::_Mynode

; 102  : 			{return (_Ptr); }

  00000		 |$LN5@Mynode|
  00000		 |$M42476|
  00000	e5900000	 ldr         r0, [r0]
  00004	e12fff1e	 bx          lr
  00008		 |$M42477|

			 ENDP  ; |?_Mynode@const_iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBAPAU_Node@23@XZ|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::const_iterator::_Mynode

	EXPORT	|?_Next@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::_Acc::_Next

  00000			 AREA	 |.pdata|, PDATA
|$T42489| DCD	|$LN5@Next|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?_Next@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::_Acc::_Next

; 51   : 			{return ((_Nodepref)(*_P)._Next); }

  00000		 |$LN5@Next|
  00000		 |$M42486|
  00000	e12fff1e	 bx          lr
  00004		 |$M42487|

			 ENDP  ; |?_Next@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::_Acc::_Next

	EXPORT	|?_Prev@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::_Acc::_Prev

  00000			 AREA	 |.pdata|, PDATA
|$T42499| DCD	|$LN5@Prev|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?_Prev@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::_Acc::_Prev

; 53   : 			{return ((_Nodepref)(*_P)._Prev); }

  00000		 |$LN5@Prev|
  00000		 |$M42496|
  00000	e2800004	 add         r0, r0, #4
  00004	e12fff1e	 bx          lr
  00008		 |$M42497|

			 ENDP  ; |?_Prev@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAU_Node@23@PAU423@@Z|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::_Acc::_Prev

	EXPORT	|?_Value@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAUPowerDomainCallbackInfo_t@@PAU_Node@23@@Z| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::_Acc::_Value

  00000			 AREA	 |.pdata|, PDATA
|$T42509| DCD	|$LN5@Value|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?_Value@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAUPowerDomainCallbackInfo_t@@PAU_Node@23@@Z| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::_Acc::_Value

; 55   : 			{return ((_Vref)(*_P)._Value); }

  00000		 |$LN5@Value|
  00000		 |$M42506|
  00000	e2800008	 add         r0, r0, #8
  00004	e12fff1e	 bx          lr
  00008		 |$M42507|

			 ENDP  ; |?_Value@_Acc@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@SAAAPAUPowerDomainCallbackInfo_t@@PAU_Node@23@@Z|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::_Acc::_Value

	EXPORT	|?deallocate@?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@QAAXPAXI@Z| ; std::allocator<PowerDomainCallbackInfo_t *>::deallocate
; File c:\wince600\public\common\sdk\inc\xmemory

  00000			 AREA	 |.pdata|, PDATA
|$T42517| DCD	|$LN5@deallocate|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?deallocate@?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@QAAXPAXI@Z| PROC ; std::allocator<PowerDomainCallbackInfo_t *>::deallocate

; 83   :         {operator delete(_P); }

  00000		 |$LN5@deallocate|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M42514|
  00004	e1a00001	 mov         r0, r1
  00008	eb000000	 bl          |??3@YAXPAX@Z|
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M42515|

			 ENDP  ; |?deallocate@?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@QAAXPAXI@Z|, std::allocator<PowerDomainCallbackInfo_t *>::deallocate

	EXPORT	|??0const_iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@PAU_Node@12@@Z| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::const_iterator::const_iterator
; File c:\wince600\public\common\sdk\inc\list

  00000			 AREA	 |.pdata|, PDATA
|$T42528| DCD	|$LN5@const_iter@2|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0const_iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@PAU_Node@12@@Z| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::const_iterator::const_iterator

; 75   : 		const_iterator(_Nodeptr _P)

  00000		 |$LN5@const_iter@2|
  00000		 |$M42525|
  00000	e5801000	 str         r1, [r0]
  00004	e12fff1e	 bx          lr
  00008		 |$M42526|

			 ENDP  ; |??0const_iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@PAU_Node@12@@Z|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::const_iterator::const_iterator

	EXPORT	|??$_Destroy@PAUPowerDomainCallbackInfo_t@@@std@@YAXPAPAUPowerDomainCallbackInfo_t@@@Z| ; std::_Destroy<PowerDomainCallbackInfo_t *>
; File c:\wince600\public\common\sdk\inc\xmemory

  00000			 AREA	 |.pdata|, PDATA
|$T42535| DCD	|$LN5@Destroy|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??$_Destroy@PAUPowerDomainCallbackInfo_t@@@std@@YAXPAPAUPowerDomainCallbackInfo_t@@@Z| PROC ; std::_Destroy<PowerDomainCallbackInfo_t *>

; 57   :     {_DESTRUCTOR(_Ty, _P); }

  00000		 |$LN5@Destroy|
  00000		 |$M42532|
  00000	e12fff1e	 bx          lr
  00004		 |$M42533|

			 ENDP  ; |??$_Destroy@PAUPowerDomainCallbackInfo_t@@@std@@YAXPAPAUPowerDomainCallbackInfo_t@@@Z|, std::_Destroy<PowerDomainCallbackInfo_t *>

	EXPORT	|??$_Allocate@D@std@@YAPADIPAD@Z|	; std::_Allocate<char>
	IMPORT	|__rt_udiv|

  00000			 AREA	 |.pdata|, PDATA
|$T42547| DCD	|$LN9@Allocate|
	DCD	0x40000f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??$_Allocate@D@std@@YAPADIPAD@Z| PROC	; std::_Allocate<char>

; 43   :     {if (_N <= 0)

  00000		 |$LN9@Allocate|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M42544|
  00004	e1b04000	 movs        r4, r0
  00008	1a000004	 bne         |$LN3@Allocate|

; 44   :         _N = 0;

  0000c	e3a04000	 mov         r4, #0
  00010		 |$LN1@Allocate|

; 48   :     return ((_Ty _FARQ *)operator new(
; 49   :         (_SIZT)_N * sizeof (_Ty))); }

  00010	e1a00004	 mov         r0, r4
  00014		 |$LN6@Allocate|
  00014	eb000000	 bl          |??2@YAPAXI@Z|
  00018	e8bd4010	 ldmia       sp!, {r4, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$LN3@Allocate|

; 45   :     /* check for overflow */
; 46   :     else if (((_SIZT)(-1) / _N) < sizeof(_Ty))

  00020	e3e01000	 mvn         r1, #0
  00024	e1a00004	 mov         r0, r4
  00028	eb000000	 bl          __rt_udiv
  0002c	e3500001	 cmp         r0, #1
  00030	2afffff6	 bcs         |$LN1@Allocate|

; 47   :         return (_Ty _FARQ *)operator new((_SIZT)(-1));

  00034	e3e00000	 mvn         r0, #0
  00038	eafffff5	 b           |$LN6@Allocate|
  0003c		 |$M42545|

			 ENDP  ; |??$_Allocate@D@std@@YAPADIPAD@Z|, std::_Allocate<char>

	EXPORT	|??$_Construct@PAUPowerDomainCallbackInfo_t@@PAU1@@std@@YAXPAPAUPowerDomainCallbackInfo_t@@ABQAU1@@Z| ; std::_Construct<PowerDomainCallbackInfo_t *,PowerDomainCallbackInfo_t *>
; File c:\wince600\public\common\sdk\inc\new

  00000			 AREA	 |.pdata|, PDATA
|$T42562| DCD	|$LN9@Construct|
	DCD	0x40000400
; Function compile flags: /Ogspy
; File c:\wince600\public\common\sdk\inc\xmemory

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??$_Construct@PAUPowerDomainCallbackInfo_t@@PAU1@@std@@YAXPAPAUPowerDomainCallbackInfo_t@@ABQAU1@@Z| PROC ; std::_Construct<PowerDomainCallbackInfo_t *,PowerDomainCallbackInfo_t *>

; 53   :     {new ((void _FARQ *)_P) _T1(_V); }

  00000		 |$LN9@Construct|
  00000		 |$M42559|
  00000	e3500000	 cmp         r0, #0
  00004	15913000	 ldrne       r3, [r1]
  00008	15803000	 strne       r3, [r0]
  0000c	e12fff1e	 bx          lr
  00010		 |$M42560|

			 ENDP  ; |??$_Construct@PAUPowerDomainCallbackInfo_t@@PAU1@@std@@YAXPAPAUPowerDomainCallbackInfo_t@@ABQAU1@@Z|, std::_Construct<PowerDomainCallbackInfo_t *,PowerDomainCallbackInfo_t *>

	EXPORT	|??0PowerDomainConstraint@@QAA@XZ|	; PowerDomainConstraint::PowerDomainConstraint
	EXPORT	|??_7PowerDomainConstraint@@6B@| [ DATA ] ; PowerDomainConstraint::`vftable'
	IMPORT	|?UpdatePowerDomainConstraint@PowerDomainConstraint@@MAAHK@Z| ; PowerDomainConstraint::UpdatePowerDomainConstraint
	IMPORT	|_purecall|
; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\inc\indexlist.h

  00000			 AREA	 |.pdata|, PDATA
|$T42578| DCD	|$LN8@PowerDomai|
	DCD	0x40001901

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7PowerDomainConstraint@@6B@| DCD |?UpdatePowerDomainConstraint@PowerDomainConstraint@@MAAHK@Z| ; PowerDomainConstraint::`vftable'
	DCD	|_purecall|
	DCD	|_purecall|
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\pm\constraintadapters\powerdomainconstraint\powerdomainconstraint.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0PowerDomainConstraint@@QAA@XZ| PROC ; PowerDomainConstraint::PowerDomainConstraint

; 48   :     {

  00000		 |$LN8@PowerDomai|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M42575|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3050	 ldr         r3, [pc, #0x50]
  0000c	e3a0e000	 mov         lr, #0
  00010	e3a05004	 mov         r5, #4
  00014	e5843000	 str         r3, [r4]
  00018	e3e03000	 mvn         r3, #0
  0001c	e3a02088	 mov         r2, #0x88
  00020	e3a01000	 mov         r1, #0
  00024	e2840028	 add         r0, r4, #0x28
  00028	e5843020	 str         r3, [r4, #0x20]
  0002c	e5843024	 str         r3, [r4, #0x24]
  00030	e584e018	 str         lr, [r4, #0x18]
  00034	e584501c	 str         r5, [r4, #0x1C]
  00038	eb000000	 bl          memset
  0003c	e3a0301f	 mov         r3, #0x1F

; 49   :         memset(&m_rgPowerDomainConstraints, 0, sizeof(m_rgPowerDomainConstraints));

  00040	e3a02014	 mov         r2, #0x14
  00044	e3a01000	 mov         r1, #0
  00048	e2840004	 add         r0, r4, #4
  0004c	e58430b0	 str         r3, [r4, #0xB0]
  00050	eb000000	 bl          memset

; 50   :     }

  00054	e1a00004	 mov         r0, r4
  00058	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0005c	e12fff1e	 bx          lr
  00060		 |$LN9@PowerDomai|
  00060		 |$LN10@PowerDomai|
  00060	00000000	 DCD         |??_7PowerDomainConstraint@@6B@|
  00064		 |$M42576|

			 ENDP  ; |??0PowerDomainConstraint@@QAA@XZ|, PowerDomainConstraint::PowerDomainConstraint

	EXPORT	|?CreatePowerDomainConstraint@PowerDomainConstraint@@QAAPAXXZ| ; PowerDomainConstraint::CreatePowerDomainConstraint

  00000			 AREA	 |.pdata|, PDATA
|$T42598| DCD	|$LN11@CreatePowe|
	DCD	0x40001102
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CreatePowerDomainConstraint@PowerDomainConstraint@@QAAPAXXZ| PROC ; PowerDomainConstraint::CreatePowerDomainConstraint

; 90   :     {

  00000		 |$LN11@CreatePowe|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M42595|

; 91   :         BOOL b;
; 92   :         DWORD id;
; 93   :         DWORD *pDataNode;
; 94   :         HANDLE rc = NULL;
; 95   : 
; 96   :         Lock();
; 97   :         b = m_IndexList.NewIndex(&pDataNode, &id);

  00008	e28d2004	 add         r2, sp, #4
  0000c	e28d1000	 add         r1, sp, #0
  00010	e2800028	 add         r0, r0, #0x28
  00014	e3a04000	 mov         r4, #0
  00018	eb000000	 bl          |?NewIndex@?$IndexList@K@@QAAHPAPAKPAK@Z|
  0001c	e3500000	 cmp         r0, #0

; 98   :         Unlock();
; 99   : 
; 100  :         // get new index
; 101  :         if (b == FALSE)
; 102  :             {
; 103  :             goto cleanUp;
; 104  :             }
; 105  : 
; 106  :         // initialize values
; 107  :         rc = (HANDLE)(id + 1);
; 108  :         *pDataNode = (UINT32)PwrDeviceUnspecified;

  00020	159d2000	 ldrne       r2, [sp]
  00024	159d3004	 ldrne       r3, [sp, #4]
  00028	13e01000	 mvnne       r1, #0
  0002c	15821000	 strne       r1, [r2]
  00030	12834001	 addne       r4, r3, #1
  00034		 |$cleanUp$40679|

; 109  : 
; 110  :     cleanUp:    
; 111  :         return rc;
; 112  :     }

  00034	e1a00004	 mov         r0, r4
  00038	e28dd008	 add         sp, sp, #8
  0003c	e8bd4010	 ldmia       sp!, {r4, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M42596|

			 ENDP  ; |?CreatePowerDomainConstraint@PowerDomainConstraint@@QAAPAXXZ|, PowerDomainConstraint::CreatePowerDomainConstraint

	EXPORT	|?ClosePowerDomainContraint@PowerDomainConstraint@@QAAHPAX@Z| ; PowerDomainConstraint::ClosePowerDomainContraint

  00000			 AREA	 |.pdata|, PDATA
|$T42634| DCD	|$LN24@ClosePower|
	DCD	0x40002f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ClosePowerDomainContraint@PowerDomainConstraint@@QAAHPAX@Z| PROC ; PowerDomainConstraint::ClosePowerDomainContraint

; 118  :     {

  00000		 |$LN24@ClosePower|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M42631|
  00004	e1a05000	 mov         r5, r0

; 119  :         BOOL rc = FALSE;
; 120  :         DWORD *pDataNode;
; 121  :         DWORD id = (DWORD)hConstraintContext - 1;
; 122  : 
; 123  :         // validate
; 124  :         if (id > m_IndexList.MaxIndex()) goto cleanUp;

  00008	e59530b0	 ldr         r3, [r5, #0xB0]
  0000c	e2414001	 sub         r4, r1, #1
  00010	e3a07000	 mov         r7, #0
  00014	e1540003	 cmp         r4, r3
  00018	8a000024	 bhi         |$cleanUp$40690|

; 125  : 
; 126  :         // get data node
; 127  :         pDataNode = m_IndexList.GetIndex(id);

  0001c	e2856028	 add         r6, r5, #0x28
  00020	e1a00006	 mov         r0, r6
  00024	e1a01004	 mov         r1, r4
  00028	eb000000	 bl          |?GetIndex@?$IndexList@K@@QAAPAKK@Z|
  0002c	e3500000	 cmp         r0, #0

; 128  :         if (pDataNode == NULL) goto cleanUp;

  00030	0a00001e	 beq         |$cleanUp$40690|

; 129  : 
; 130  :         Lock();
; 131  : 
; 132  :         // free any forced constraint
; 133  :         if (m_powerDomainForce == id)

  00034	e5953020	 ldr         r3, [r5, #0x20]
  00038	e1530004	 cmp         r3, r4

; 134  :             {
; 135  :             m_powerDomainForce = (DWORD)-1;

  0003c	03e03000	 mvneq       r3, #0
  00040	05853020	 streq       r3, [r5, #0x20]

; 136  :             }
; 137  : 
; 138  :         // update operating mode
; 139  :         if (*pDataNode != PwrDeviceUnspecified)

  00044	e5903000	 ldr         r3, [r0]
  00048	e3730001	 cmn         r3, #1
  0004c	0a000009	 beq         |$LN1@ClosePower|

; 140  :             {
; 141  :             m_rgPowerDomainConstraints[*pDataNode] -= 1;

  00050	e0852103	 add         r2, r5, r3, lsl #2
  00054	e5923004	 ldr         r3, [r2, #4]

; 142  :             UpdatePowerDomainConstraint(id);

  00058	e1a01004	 mov         r1, r4
  0005c	e1a00005	 mov         r0, r5
  00060	e2433001	 sub         r3, r3, #1
  00064	e5823004	 str         r3, [r2, #4]
  00068	e5953000	 ldr         r3, [r5]
  0006c	e5933000	 ldr         r3, [r3]
  00070	e1a0e00f	 mov         lr, pc
  00074	e12fff13	 bx          r3
  00078		 |$LN1@ClosePower|

; 143  :             }
; 144  : 
; 145  :         m_IndexList.DeleteIndex(id);

  00078	e1b022a4	 movs        r2, r4, lsr #5
  0007c	0a000005	 beq         |$LN14@ClosePower|
  00080		 |$LL15@ClosePower|
  00080	e5963000	 ldr         r3, [r6]
  00084	e2422001	 sub         r2, r2, #1
  00088	e1b06003	 movs        r6, r3
  0008c	0a000006	 beq         |$LN16@ClosePower|
  00090	e3520000	 cmp         r2, #0
  00094	1afffff9	 bne         |$LL15@ClosePower|
  00098		 |$LN14@ClosePower|
  00098	e5963004	 ldr         r3, [r6, #4]
  0009c	e204201f	 and         r2, r4, #0x1F
  000a0	e3a01001	 mov         r1, #1
  000a4	e1c33211	 bic         r3, r3, r1, lsl r2
  000a8	e5863004	 str         r3, [r6, #4]
  000ac		 |$LN16@ClosePower|

; 146  :         
; 147  :         Unlock();
; 148  :         
; 149  :         rc = TRUE;

  000ac	e3a07001	 mov         r7, #1
  000b0		 |$cleanUp$40690|

; 150  :     cleanUp:    
; 151  :         return rc;
; 152  :     } 

  000b0	e1a00007	 mov         r0, r7
  000b4	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  000b8	e12fff1e	 bx          lr
  000bc		 |$M42632|

			 ENDP  ; |?ClosePowerDomainContraint@PowerDomainConstraint@@QAAHPAX@Z|, PowerDomainConstraint::ClosePowerDomainContraint

	EXPORT	|??0PowerDomainConstraintInfo_t@@QAA@XZ| ; PowerDomainConstraintInfo_t::PowerDomainConstraintInfo_t

  00000			 AREA	 |.pdata|, PDATA
|$T42650| DCD	|$LN8@PowerDomai@2|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0PowerDomainConstraintInfo_t@@QAA@XZ| PROC ; PowerDomainConstraintInfo_t::PowerDomainConstraintInfo_t
  00000		 |$LN8@PowerDomai@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M42647|
  00004	e1a04000	 mov         r4, r0
  00008	e2840050	 add         r0, r4, #0x50
  0000c	e3a02088	 mov         r2, #0x88
  00010	e3a01000	 mov         r1, #0
  00014	eb000000	 bl          memset
  00018	e3a0301f	 mov         r3, #0x1F
  0001c	e58430d8	 str         r3, [r4, #0xD8]
  00020	e1a00004	 mov         r0, r4
  00024	e8bd4010	 ldmia       sp!, {r4, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M42648|

			 ENDP  ; |??0PowerDomainConstraintInfo_t@@QAA@XZ|, PowerDomainConstraintInfo_t::PowerDomainConstraintInfo_t

	EXPORT	|??1PowerDomainConstraintInfo_t@@QAA@XZ| ; PowerDomainConstraintInfo_t::~PowerDomainConstraintInfo_t

  00000			 AREA	 |.pdata|, PDATA
|$T42672| DCD	|$LN12@PowerDomai@3|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1PowerDomainConstraintInfo_t@@QAA@XZ| PROC ; PowerDomainConstraintInfo_t::~PowerDomainConstraintInfo_t
  00000		 |$LN12@PowerDomai@3|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M42669|
  00004	e5903050	 ldr         r3, [r0, #0x50]
  00008	e1b04003	 movs        r4, r3
  0000c	0a000004	 beq         |$LN4@PowerDomai@3|
  00010		 |$LL5@PowerDomai@3|
  00010	e1a00004	 mov         r0, r4
  00014	e5944000	 ldr         r4, [r4]
  00018	eb000000	 bl          |??3@YAXPAX@Z|
  0001c	e3540000	 cmp         r4, #0
  00020	1afffffa	 bne         |$LL5@PowerDomai@3|
  00024		 |$LN4@PowerDomai@3|
  00024	e8bd4010	 ldmia       sp!, {r4, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M42670|

			 ENDP  ; |??1PowerDomainConstraintInfo_t@@QAA@XZ|, PowerDomainConstraintInfo_t::~PowerDomainConstraintInfo_t

	EXPORT	|??1PowerDomainConstraint@@QAA@XZ|	; PowerDomainConstraint::~PowerDomainConstraint

  00000			 AREA	 |.pdata|, PDATA
|$T42694| DCD	|$LN12@PowerDomai@4|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1PowerDomainConstraint@@QAA@XZ| PROC ; PowerDomainConstraint::~PowerDomainConstraint
  00000		 |$LN12@PowerDomai@4|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M42691|
  00004	e5903028	 ldr         r3, [r0, #0x28]
  00008	e1b04003	 movs        r4, r3
  0000c	0a000004	 beq         |$LN4@PowerDomai@4|
  00010		 |$LL5@PowerDomai@4|
  00010	e1a00004	 mov         r0, r4
  00014	e5944000	 ldr         r4, [r4]
  00018	eb000000	 bl          |??3@YAXPAX@Z|
  0001c	e3540000	 cmp         r4, #0
  00020	1afffffa	 bne         |$LL5@PowerDomai@4|
  00024		 |$LN4@PowerDomai@4|
  00024	e8bd4010	 ldmia       sp!, {r4, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M42692|

			 ENDP  ; |??1PowerDomainConstraint@@QAA@XZ|, PowerDomainConstraint::~PowerDomainConstraint

	EXPORT	|?PWRDOM_CreateConstraint@@YAPAXPAX@Z|	; PWRDOM_CreateConstraint
	IMPORT	|LocalFree|
	IMPORT	|LocalAlloc|
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\pm\constraintadapters\powerdomainconstraint\powerdomaincontext.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T42714| DCD	|$LN15@PWRDOM_Cre|
	DCD	0x40002602
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PWRDOM_CreateConstraint@@YAPAXPAX@Z| PROC ; PWRDOM_CreateConstraint

; 279  : {

  00000		 |$LN15@PWRDOM_Cre|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M42711|

; 280  :     BOOL b;
; 281  :     DWORD id;
; 282  :     DWORD *pDataNode;
; 283  :     HANDLE rc = NULL;
; 284  :     ConstraintContext *pConstraintContext;
; 285  :     
; 286  :     // validate parameters
; 287  :     if (hConstraintAdapter != (HANDLE)&s_PowerDomainInfo) goto cleanUp;

  00008	e59f7084	 ldr         r7, [pc, #0x84]
  0000c	e3a06000	 mov         r6, #0
  00010	e1500007	 cmp         r0, r7
  00014	1a00001a	 bne         |$cleanUp$41349|

; 288  : 
; 289  :     // create structure to maintain constraints for this handle
; 290  :     pConstraintContext = (ConstraintContext*)LocalAlloc(LPTR, sizeof(ConstraintContext));

  00018	e3a01034	 mov         r1, #0x34
  0001c	e3a00040	 mov         r0, #0x40
  00020	eb000000	 bl          LocalAlloc
  00024	e1b05000	 movs        r5, r0

; 291  :     if (pConstraintContext == NULL) goto cleanUp;

  00028	0a000015	 beq         |$cleanUp$41349|

; 292  :     memset(pConstraintContext->rgConstraints, 0, sizeof(pConstraintContext->rgConstraints));

  0002c	e3a02034	 mov         r2, #0x34
  00030	e3a01000	 mov         r1, #0
  00034	e1a00005	 mov         r0, r5
  00038	eb000000	 bl          memset

; 293  :     
; 294  :     // get new index
; 295  :     Lock();

  0003c	e1a00007	 mov         r0, r7
  00040	eb000000	 bl          EnterCriticalSection

; 296  :     b = s_PowerDomainInfo.IndexList.NewIndex(&pDataNode, &id);

  00044	e28d2004	 add         r2, sp, #4
  00048	e28d1000	 add         r1, sp, #0
  0004c	e2870050	 add         r0, r7, #0x50
  00050	eb000000	 bl          |?NewIndex@?$IndexList@K@@QAAHPAPAKPAK@Z|
  00054	e1a04000	 mov         r4, r0

; 297  :     Unlock();

  00058	e1a00007	 mov         r0, r7
  0005c	eb000000	 bl          LeaveCriticalSection

; 298  :     
; 299  :     if (b == FALSE)

  00060	e3540000	 cmp         r4, #0
  00064	1a000002	 bne         |$LN2@PWRDOM_Cre|

; 300  :         {
; 301  :         LocalFree(pConstraintContext);

  00068	e1a00005	 mov         r0, r5
  0006c	eb000000	 bl          LocalFree

; 308  : 
; 309  : cleanUp:    

  00070	ea000003	 b           |$cleanUp$41349|
  00074		 |$LN2@PWRDOM_Cre|

; 302  :         goto cleanUp;
; 303  :         }
; 304  : 
; 305  :     // initialize values
; 306  :     rc = (HANDLE)(id + 1);
; 307  :     *pDataNode = (DWORD)pConstraintContext;

  00074	e59d2000	 ldr         r2, [sp]
  00078	e59d3004	 ldr         r3, [sp, #4]
  0007c	e5825000	 str         r5, [r2]
  00080	e2836001	 add         r6, r3, #1
  00084		 |$cleanUp$41349|

; 310  :     return rc;
; 311  : } 

  00084	e1a00006	 mov         r0, r6
  00088	e28dd008	 add         sp, sp, #8
  0008c	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00090	e12fff1e	 bx          lr
  00094		 |$LN16@PWRDOM_Cre|
  00094		 |$LN17@PWRDOM_Cre|
  00094	00000000	 DCD         |s_PowerDomainInfo|
  00098		 |$M42712|

			 ENDP  ; |?PWRDOM_CreateConstraint@@YAPAXPAX@Z|, PWRDOM_CreateConstraint

	EXPORT	|?PWRDOM_UpdateConstraint@@YAHPAXK0I@Z|	; PWRDOM_UpdateConstraint
	IMPORT	|?UpdatePowerDomainConstraint@PowerDomainConstraint@@QAAHPAXKKIK@Z| ; PowerDomainConstraint::UpdatePowerDomainConstraint

  00000			 AREA	 |.pdata|, PDATA
|$T42746| DCD	|$LN28@PWRDOM_Upd|
	DCD	0x40003e02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PWRDOM_UpdateConstraint@@YAHPAXK0I@Z| PROC ; PWRDOM_UpdateConstraint

; 326  : {       

  00000		 |$LN28@PWRDOM_Upd|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M42743|
  00008	e1a06002	 mov         r6, r2
  0000c	e1a0b001	 mov         r11, r1

; 327  :     BOOL rc = FALSE;    

  00010	e3a08000	 mov         r8, #0

; 328  :     PowerDomainConstraint *pPowerDomain; 
; 329  :     ConstraintContext *pConstraintContext;
; 330  :     POWERDOMAIN_CONSTRAINT_INFO *pConstraintInfo; 
; 331  :     
; 332  :     DWORD id = (DWORD)hConstraintContext - 1;

  00014	e2409001	 sub         r9, r0, #1

; 333  :     
; 334  :     // validate parameters
; 335  :     if (size != sizeof(POWERDOMAIN_CONSTRAINT_INFO)) goto cleanUp;

  00018	e353000c	 cmp         r3, #0xC
  0001c	1a000030	 bne         |$cleanUp$41373|

; 336  :     if (id > s_PowerDomainInfo.IndexList.MaxIndex()) goto cleanUp;

  00020	e59f40cc	 ldr         r4, [pc, #0xCC]
  00024	e59430d8	 ldr         r3, [r4, #0xD8]
  00028	e1590003	 cmp         r9, r3
  0002c	8a00002c	 bhi         |$cleanUp$41373|

; 337  : 
; 338  :     // don't allow power domain updates on the thread the callback 
; 339  :     // notification is occurring on or else some general synchronous issues
; 340  :     // will occurr
; 341  :     if (s_PowerDomainInfo.bCallbackMode == TRUE &&
; 342  :         s_PowerDomainInfo.currentTID == GetCurrentThreadId())

  00030	e5943014	 ldr         r3, [r4, #0x14]
  00034	e3530001	 cmp         r3, #1
  00038	1a000004	 bne         |$LN11@PWRDOM_Upd|
  0003c	e3a00008	 mov         r0, #8
  00040	eb000000	 bl          __GetUserKData
  00044	e5943018	 ldr         r3, [r4, #0x18]
  00048	e1530000	 cmp         r3, r0
  0004c	0a000024	 beq         |$cleanUp$41373|
  00050		 |$LN11@PWRDOM_Upd|

; 343  :         {
; 344  :         goto cleanUp;
; 345  :         }
; 346  : 
; 347  :     // validate structure
; 348  :     pConstraintInfo = (POWERDOMAIN_CONSTRAINT_INFO*)pParam;
; 349  :     if (pConstraintInfo->size != sizeof(POWERDOMAIN_CONSTRAINT_INFO)) goto cleanUp;

  00050	e5963000	 ldr         r3, [r6]
  00054	e353000c	 cmp         r3, #0xC
  00058	1a000021	 bne         |$cleanUp$41373|

; 350  :     if (pConstraintInfo->powerDomain >= POWERDOMAIN_COUNT) goto cleanUp;

  0005c	e5965004	 ldr         r5, [r6, #4]
  00060	e355000d	 cmp         r5, #0xD
  00064	2a00001e	 bcs         |$cleanUp$41373|

; 351  :     pPowerDomain = s_PowerDomainInfo.rgPowerDomainStates[pConstraintInfo->powerDomain];

  00068	e0843105	 add         r3, r4, r5, lsl #2
  0006c	e593301c	 ldr         r3, [r3, #0x1C]
  00070	e1b0a003	 movs        r10, r3

; 352  :     if (pPowerDomain == NULL) goto cleanUp;

  00074	0a00001a	 beq         |$cleanUp$41373|

; 353  : 
; 354  :     // get constraint list
; 355  :     pConstraintContext = *(ConstraintContext**)s_PowerDomainInfo.IndexList.GetIndex(id);

  00078	e1a01009	 mov         r1, r9
  0007c	e2840050	 add         r0, r4, #0x50
  00080	eb000000	 bl          |?GetIndex@?$IndexList@K@@QAAPAKK@Z|
  00084	e5903000	 ldr         r3, [r0]
  00088	e1b07003	 movs        r7, r3

; 356  :     if (pConstraintContext == NULL) goto cleanUp;

  0008c	0a000014	 beq         |$cleanUp$41373|

; 357  :     
; 358  :     if (pConstraintContext->rgConstraints[pConstraintInfo->powerDomain] == NULL)

  00090	e7973105	 ldr         r3, [r7, +r5, lsl #2]
  00094	e3530000	 cmp         r3, #0
  00098	1a000003	 bne         |$LN1@PWRDOM_Upd|

; 359  :         {
; 360  :         pConstraintContext->rgConstraints[pConstraintInfo->powerDomain] = 
; 361  :             pPowerDomain->CreatePowerDomainConstraint();

  0009c	e1a0000a	 mov         r0, r10
  000a0	eb000000	 bl          |?CreatePowerDomainConstraint@PowerDomainConstraint@@QAAPAXXZ|
  000a4	e5963004	 ldr         r3, [r6, #4]
  000a8	e7870103	 str         r0, [r7, +r3, lsl #2]
  000ac		 |$LN1@PWRDOM_Upd|

; 362  :         }
; 363  : 
; 364  :     // apply constraint
; 365  :     Lock();

  000ac	e1a00004	 mov         r0, r4
  000b0	eb000000	 bl          EnterCriticalSection

; 366  :     rc = pPowerDomain->UpdatePowerDomainConstraint(
; 367  :             pConstraintContext->rgConstraints[pConstraintInfo->powerDomain],
; 368  :             msg,
; 369  :             pConstraintInfo->state,
; 370  :             sizeof(pConstraintInfo->state),
; 371  :             id
; 372  :             );      

  000b4	e5962004	 ldr         r2, [r6, #4]
  000b8	e5963008	 ldr         r3, [r6, #8]
  000bc	e3a0e004	 mov         lr, #4
  000c0	e7971102	 ldr         r1, [r7, +r2, lsl #2]
  000c4	e1a0200b	 mov         r2, r11
  000c8	e1a0000a	 mov         r0, r10
  000cc	e58d9004	 str         r9, [sp, #4]
  000d0	e58de000	 str         lr, [sp]
  000d4	eb000000	 bl          |?UpdatePowerDomainConstraint@PowerDomainConstraint@@QAAHPAXKKIK@Z|
  000d8	e1a08000	 mov         r8, r0

; 373  :     Unlock();

  000dc	e1a00004	 mov         r0, r4
  000e0	eb000000	 bl          LeaveCriticalSection
  000e4		 |$cleanUp$41373|

; 374  :     
; 375  :     
; 376  : cleanUp:
; 377  :     return rc;
; 378  : } 

  000e4	e1a00008	 mov         r0, r8
  000e8	e28dd008	 add         sp, sp, #8
  000ec	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  000f0	e12fff1e	 bx          lr
  000f4		 |$LN29@PWRDOM_Upd|
  000f4		 |$LN30@PWRDOM_Upd|
  000f4	00000000	 DCD         |s_PowerDomainInfo|
  000f8		 |$M42744|

			 ENDP  ; |?PWRDOM_UpdateConstraint@@YAHPAXK0I@Z|, PWRDOM_UpdateConstraint

	EXPORT	|?PWRDOM_CloseConstraint@@YAHPAX@Z|	; PWRDOM_CloseConstraint

  00000			 AREA	 |.pdata|, PDATA
|$T42785| DCD	|$LN28@PWRDOM_Clo|
	DCD	0x40003101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PWRDOM_CloseConstraint@@YAHPAX@Z| PROC ; PWRDOM_CloseConstraint

; 390  : {

  00000		 |$LN28@PWRDOM_Clo|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004		 |$M42782|

; 391  :     BOOL rc = FALSE;
; 392  :     ConstraintContext *pConstraintContext;
; 393  :     DWORD id = (DWORD)hConstraintContext - 1;
; 394  :     
; 395  :     // validate
; 396  :     if (id > s_PowerDomainInfo.IndexList.MaxIndex()) goto cleanUp;

  00004	e59f40b4	 ldr         r4, [pc, #0xB4]
  00008	e2408001	 sub         r8, r0, #1
  0000c	e3a05000	 mov         r5, #0
  00010	e59430d8	 ldr         r3, [r4, #0xD8]
  00014	e1580003	 cmp         r8, r3
  00018	8a000025	 bhi         |$cleanUp$41399|

; 397  : 
; 398  :     // get data node
; 399  :     pConstraintContext = *(ConstraintContext**)s_PowerDomainInfo.IndexList.GetIndex(id);

  0001c	e1a01008	 mov         r1, r8
  00020	e2840050	 add         r0, r4, #0x50
  00024	eb000000	 bl          |?GetIndex@?$IndexList@K@@QAAPAKK@Z|
  00028	e5903000	 ldr         r3, [r0]
  0002c	e1b07003	 movs        r7, r3

; 400  :     if (pConstraintContext == NULL) goto cleanUp;

  00030	0a00001f	 beq         |$cleanUp$41399|

; 401  : 
; 402  :     Lock();    

  00034	e1a00004	 mov         r0, r4
  00038	eb000000	 bl          EnterCriticalSection
  0003c	e1a05007	 mov         r5, r7

; 403  :     for (int i = 0; i < POWERDOMAIN_COUNT; ++i)

  00040	e0449007	 sub         r9, r4, r7
  00044	e3a0600d	 mov         r6, #0xD
  00048		 |$LL4@PWRDOM_Clo|

; 404  :         {
; 405  :         if (pConstraintContext->rgConstraints[i] != NULL)

  00048	e5953000	 ldr         r3, [r5]
  0004c	e1b01003	 movs        r1, r3

; 406  :             {
; 407  :             s_PowerDomainInfo.rgPowerDomainStates[i]->ClosePowerDomainContraint(
; 408  :                 pConstraintContext->rgConstraints[i]
; 409  :                 );

  00050	10893005	 addne       r3, r9, r5
  00054	1593001c	 ldrne       r0, [r3, #0x1C]
  00058	1b000000	 blne        |?ClosePowerDomainContraint@PowerDomainConstraint@@QAAHPAX@Z|
  0005c	e2855004	 add         r5, r5, #4
  00060	e2566001	 subs        r6, r6, #1
  00064	1afffff7	 bne         |$LL4@PWRDOM_Clo|

; 410  :             }
; 411  :         }
; 412  : 
; 413  :     LocalFree(pConstraintContext);    

  00068	e1a00007	 mov         r0, r7
  0006c	eb000000	 bl          LocalFree

; 414  :     s_PowerDomainInfo.IndexList.DeleteIndex(id);  

  00070	e1b022a8	 movs        r2, r8, lsr #5
  00074	e2841050	 add         r1, r4, #0x50
  00078	0a000005	 beq         |$LN16@PWRDOM_Clo|
  0007c		 |$LL17@PWRDOM_Clo|
  0007c	e5913000	 ldr         r3, [r1]
  00080	e2422001	 sub         r2, r2, #1
  00084	e1b01003	 movs        r1, r3
  00088	0a000006	 beq         |$LN18@PWRDOM_Clo|
  0008c	e3520000	 cmp         r2, #0
  00090	1afffff9	 bne         |$LL17@PWRDOM_Clo|
  00094		 |$LN16@PWRDOM_Clo|
  00094	e5913004	 ldr         r3, [r1, #4]
  00098	e208201f	 and         r2, r8, #0x1F
  0009c	e3a00001	 mov         r0, #1
  000a0	e1c33210	 bic         r3, r3, r0, lsl r2
  000a4	e5813004	 str         r3, [r1, #4]
  000a8		 |$LN18@PWRDOM_Clo|

; 415  :     Unlock();

  000a8	e1a00004	 mov         r0, r4
  000ac	eb000000	 bl          LeaveCriticalSection

; 416  :     
; 417  :     rc = TRUE;

  000b0	e3a05001	 mov         r5, #1
  000b4		 |$cleanUp$41399|

; 418  : cleanUp:    
; 419  :     return rc;
; 420  : } 

  000b4	e1a00005	 mov         r0, r5
  000b8	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  000bc	e12fff1e	 bx          lr
  000c0		 |$LN29@PWRDOM_Clo|
  000c0		 |$LN30@PWRDOM_Clo|
  000c0	00000000	 DCD         |s_PowerDomainInfo|
  000c4		 |$M42783|

			 ENDP  ; |?PWRDOM_CloseConstraint@@YAHPAX@Z|, PWRDOM_CloseConstraint

	EXPORT	|??0iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@XZ| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::iterator
; File c:\wince600\public\common\sdk\inc\list

  00000			 AREA	 |.pdata|, PDATA
|$T42800| DCD	|$LN7@iterator|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@XZ| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::iterator

; 110  : 		iterator()

  00000		 |$LN7@iterator|
  00000		 |$M42797|
  00000	e12fff1e	 bx          lr
  00004		 |$M42798|

			 ENDP  ; |??0iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@XZ|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::iterator

	EXPORT	|??Diterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBAAAPAUPowerDomainCallbackInfo_t@@XZ| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::operator*

  00000			 AREA	 |.pdata|, PDATA
|$T42813| DCD	|$LN7@operator@3|
	DCD	0x40000300
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??Diterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBAAAPAUPowerDomainCallbackInfo_t@@XZ| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::operator*

; 115  : 			{return (_Acc::_Value(_Ptr)); }

  00000		 |$LN7@operator@3|
  00000		 |$M42810|
  00000	e5903000	 ldr         r3, [r0]
  00004	e2830008	 add         r0, r3, #8
  00008	e12fff1e	 bx          lr
  0000c		 |$M42811|

			 ENDP  ; |??Diterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBAAAPAUPowerDomainCallbackInfo_t@@XZ|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::operator*

	EXPORT	|??Eiterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAAAAV012@XZ| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::operator++

  00000			 AREA	 |.pdata|, PDATA
|$T42827| DCD	|$LN7@operator@4|
	DCD	0x40000500
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??Eiterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAAAAV012@XZ| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::operator++

; 119  : 			{_Ptr = _Acc::_Next(_Ptr);

  00000		 |$LN7@operator@4|
  00000		 |$M42824|
  00000	e1a02000	 mov         r2, r0
  00004	e5923000	 ldr         r3, [r2]

; 120  : 			return (*this); }

  00008	e5933000	 ldr         r3, [r3]
  0000c	e5823000	 str         r3, [r2]
  00010	e12fff1e	 bx          lr
  00014		 |$M42825|

			 ENDP  ; |??Eiterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAAAAV012@XZ|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::operator++

	EXPORT	|??9iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBA_NABV012@@Z| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::operator!=

  00000			 AREA	 |.pdata|, PDATA
|$T42847| DCD	|$LN11@operator@5|
	DCD	0x40000b00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??9iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBA_NABV012@@Z| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::operator!=

; 135  : 			{return (!(*this == _X)); }

  00000		 |$LN11@operator@5|
  00000		 |$M42844|
  00000	e5902000	 ldr         r2, [r0]
  00004	e5913000	 ldr         r3, [r1]
  00008	e1520003	 cmp         r2, r3
  0000c	03a03001	 moveq       r3, #1
  00010	13a03000	 movne       r3, #0
  00014	e21330ff	 ands        r3, r3, #0xFF
  00018	03a03001	 moveq       r3, #1
  0001c	020300ff	 andeq       r0, r3, #0xFF
  00020	13a03000	 movne       r3, #0
  00024	120300ff	 andne       r0, r3, #0xFF
  00028	e12fff1e	 bx          lr
  0002c		 |$M42845|

			 ENDP  ; |??9iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QBA_NABV012@@Z|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::operator!=

	EXPORT	|?_Freenode@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@IAAXPAU_Node@12@@Z| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::_Freenode
; File c:\wince600\public\common\sdk\inc\xmemory

  00000			 AREA	 |.pdata|, PDATA
|$T42858| DCD	|$LN7@Freenode|
	DCD	0x40000501
; Function compile flags: /Ogspy
; File c:\wince600\public\common\sdk\inc\list

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?_Freenode@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@IAAXPAU_Node@12@@Z| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::_Freenode

; 406  : 		{allocator.deallocate(_S, 1); }

  00000		 |$LN7@Freenode|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M42855|
  00004	e1a00001	 mov         r0, r1
  00008	eb000000	 bl          |??3@YAXPAX@Z|
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M42856|

			 ENDP  ; |?_Freenode@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@IAAXPAU_Node@12@@Z|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::_Freenode

	EXPORT	|?destroy@?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@QAAXPAPAUPowerDomainCallbackInfo_t@@@Z| ; std::allocator<PowerDomainCallbackInfo_t *>::destroy
; File c:\wince600\public\common\sdk\inc\xmemory

  00000			 AREA	 |.pdata|, PDATA
|$T42868| DCD	|$LN7@destroy|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?destroy@?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@QAAXPAPAUPowerDomainCallbackInfo_t@@@Z| PROC ; std::allocator<PowerDomainCallbackInfo_t *>::destroy

; 87   :         {_Destroy(_P); }

  00000		 |$LN7@destroy|
  00000		 |$M42865|
  00000	e12fff1e	 bx          lr
  00004		 |$M42866|

			 ENDP  ; |?destroy@?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@QAAXPAPAUPowerDomainCallbackInfo_t@@@Z|, std::allocator<PowerDomainCallbackInfo_t *>::destroy

	EXPORT	|??0iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@PAU_Node@12@@Z| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::iterator
; File c:\wince600\public\common\sdk\inc\list

  00000			 AREA	 |.pdata|, PDATA
|$T42882| DCD	|$LN7@iterator@2|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@PAU_Node@12@@Z| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::iterator

; 112  : 		iterator(_Nodeptr _P)

  00000		 |$LN7@iterator@2|
  00000		 |$M42879|
  00000	e5801000	 str         r1, [r0]
  00004	e12fff1e	 bx          lr
  00008		 |$M42880|

			 ENDP  ; |??0iterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@PAU_Node@12@@Z|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::iterator

	EXPORT	|??Eiterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AV012@H@Z| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::operator++

  00000			 AREA	 |.pdata|, PDATA
|$T42902| DCD	|$LN9@operator@6|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??Eiterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AV012@H@Z| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::operator++

; 122  : 			{iterator _Tmp = *this;

  00000		 |$LN9@operator@6|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M42899|
  00004	e1a0e000	 mov         lr, r0
  00008	e59e2000	 ldr         r2, [lr]

; 123  : 			++*this;
; 124  : 			return (_Tmp); }

  0000c	e1a00001	 mov         r0, r1
  00010	e5923000	 ldr         r3, [r2]
  00014	e5812000	 str         r2, [r1]
  00018	e58e3000	 str         r3, [lr]
  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M42900|

			 ENDP  ; |??Eiterator@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AV012@H@Z|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::iterator::operator++

	EXPORT	|?_Charalloc@?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@QAAPADI@Z| ; std::allocator<PowerDomainCallbackInfo_t *>::_Charalloc
; File c:\wince600\public\common\sdk\inc\xmemory

  00000			 AREA	 |.pdata|, PDATA
|$T42923| DCD	|$LN11@Charalloc|
	DCD	0x40000f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?_Charalloc@?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@QAAPADI@Z| PROC ; std::allocator<PowerDomainCallbackInfo_t *>::_Charalloc

; 80   :         {return (_Allocate((difference_type)_N,

  00000		 |$LN11@Charalloc|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M42920|
  00004	e1b04001	 movs        r4, r1

; 81   :             (char _FARQ *)0)); }

  00008	1a000004	 bne         |$LN5@Charalloc|
  0000c	e3a04000	 mov         r4, #0
  00010		 |$LN3@Charalloc|
  00010	e1a00004	 mov         r0, r4
  00014		 |$LN8@Charalloc|
  00014	eb000000	 bl          |??2@YAPAXI@Z|
  00018	e8bd4010	 ldmia       sp!, {r4, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$LN5@Charalloc|
  00020	e3e01000	 mvn         r1, #0
  00024	e1a00004	 mov         r0, r4
  00028	eb000000	 bl          __rt_udiv
  0002c	e3500001	 cmp         r0, #1
  00030	2afffff6	 bcs         |$LN3@Charalloc|
  00034	e3e00000	 mvn         r0, #0
  00038	eafffff5	 b           |$LN8@Charalloc|
  0003c		 |$M42921|

			 ENDP  ; |?_Charalloc@?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@QAAPADI@Z|, std::allocator<PowerDomainCallbackInfo_t *>::_Charalloc

	EXPORT	|?construct@?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@QAAXPAPAUPowerDomainCallbackInfo_t@@ABQAU3@@Z| ; std::allocator<PowerDomainCallbackInfo_t *>::construct
; File c:\wince600\public\common\sdk\inc\new

  00000			 AREA	 |.pdata|, PDATA
|$T42946| DCD	|$LN11@construct|
	DCD	0x40000400
; Function compile flags: /Ogspy
; File c:\wince600\public\common\sdk\inc\xmemory

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?construct@?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@QAAXPAPAUPowerDomainCallbackInfo_t@@ABQAU3@@Z| PROC ; std::allocator<PowerDomainCallbackInfo_t *>::construct

; 85   :         {_Construct(_P, _V); }

  00000		 |$LN11@construct|
  00000		 |$M42943|
  00000	e3510000	 cmp         r1, #0
  00004	15923000	 ldrne       r3, [r2]
  00008	15813000	 strne       r3, [r1]
  0000c	e12fff1e	 bx          lr
  00010		 |$M42944|

			 ENDP  ; |?construct@?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@QAAXPAPAUPowerDomainCallbackInfo_t@@ABQAU3@@Z|, std::allocator<PowerDomainCallbackInfo_t *>::construct

	EXPORT	|??0MpuPowerDomainConstraint@@QAA@XZ|	; MpuPowerDomainConstraint::MpuPowerDomainConstraint
	EXPORT	|??_7MpuPowerDomainConstraint@@6B@| [ DATA ] ; MpuPowerDomainConstraint::`vftable'
	EXPORT	|?GetPowerDomain@MpuPowerDomainConstraint@@MBAKXZ| ; MpuPowerDomainConstraint::GetPowerDomain
	IMPORT	|?UpdatePowerDomainConstraint@MpuPowerDomainConstraint@@MAAHK@Z| ; MpuPowerDomainConstraint::UpdatePowerDomainConstraint
	IMPORT	|?FlushDomainPowerState@MpuPowerDomainConstraint@@UAAHXZ| ; MpuPowerDomainConstraint::FlushDomainPowerState

  00000			 AREA	 |.pdata|, PDATA
|$T42957| DCD	|$LN6@MpuPowerDo|
	DCD	0x40000901

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7MpuPowerDomainConstraint@@6B@| DCD |?UpdatePowerDomainConstraint@MpuPowerDomainConstraint@@MAAHK@Z| ; MpuPowerDomainConstraint::`vftable'
	DCD	|?GetPowerDomain@MpuPowerDomainConstraint@@MBAKXZ|
	DCD	|?FlushDomainPowerState@MpuPowerDomainConstraint@@UAAHXZ|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0MpuPowerDomainConstraint@@QAA@XZ| PROC ; MpuPowerDomainConstraint::MpuPowerDomainConstraint
  00000		 |$LN6@MpuPowerDo|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M42954|
  00004	e1a04000	 mov         r4, r0
  00008	eb000000	 bl          |??0PowerDomainConstraint@@QAA@XZ|
  0000c	e59f300c	 ldr         r3, [pc, #0xC]
  00010	e1a00004	 mov         r0, r4
  00014	e5843000	 str         r3, [r4]
  00018	e8bd4010	 ldmia       sp!, {r4, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$LN7@MpuPowerDo|
  00020		 |$LN8@MpuPowerDo|
  00020	00000000	 DCD         |??_7MpuPowerDomainConstraint@@6B@|
  00024		 |$M42955|

			 ENDP  ; |??0MpuPowerDomainConstraint@@QAA@XZ|, MpuPowerDomainConstraint::MpuPowerDomainConstraint

; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\pm\constraintadapters\powerdomainconstraint\powerdomainconstraint.h

  00000			 AREA	 |.pdata|, PDATA
|$T42968| DCD	|$LN5@GetPowerDo|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPowerDomain@MpuPowerDomainConstraint@@MBAKXZ| PROC ; MpuPowerDomainConstraint::GetPowerDomain

; 199  :     GetPowerDomain() const          {return POWERDOMAIN_MPU;}

  00000		 |$LN5@GetPowerDo|
  00000		 |$M42965|
  00000	e3a00005	 mov         r0, #5
  00004	e12fff1e	 bx          lr
  00008		 |$M42966|

			 ENDP  ; |?GetPowerDomain@MpuPowerDomainConstraint@@MBAKXZ|, MpuPowerDomainConstraint::GetPowerDomain

	EXPORT	|??0CorePowerDomainConstraint@@QAA@XZ|	; CorePowerDomainConstraint::CorePowerDomainConstraint
	EXPORT	|??_7CorePowerDomainConstraint@@6B@| [ DATA ] ; CorePowerDomainConstraint::`vftable'
	EXPORT	|?GetPowerDomain@CorePowerDomainConstraint@@MBAKXZ| ; CorePowerDomainConstraint::GetPowerDomain
	IMPORT	|?UpdatePowerDomainConstraint@CorePowerDomainConstraint@@MAAHK@Z| ; CorePowerDomainConstraint::UpdatePowerDomainConstraint
	IMPORT	|?FlushDomainPowerState@CorePowerDomainConstraint@@UAAHXZ| ; CorePowerDomainConstraint::FlushDomainPowerState

  00000			 AREA	 |.pdata|, PDATA
|$T42979| DCD	|$LN6@CorePowerD|
	DCD	0x40000901

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CorePowerDomainConstraint@@6B@| DCD |?UpdatePowerDomainConstraint@CorePowerDomainConstraint@@MAAHK@Z| ; CorePowerDomainConstraint::`vftable'
	DCD	|?GetPowerDomain@CorePowerDomainConstraint@@MBAKXZ|
	DCD	|?FlushDomainPowerState@CorePowerDomainConstraint@@UAAHXZ|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CorePowerDomainConstraint@@QAA@XZ| PROC ; CorePowerDomainConstraint::CorePowerDomainConstraint
  00000		 |$LN6@CorePowerD|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M42976|
  00004	e1a04000	 mov         r4, r0
  00008	eb000000	 bl          |??0PowerDomainConstraint@@QAA@XZ|
  0000c	e59f300c	 ldr         r3, [pc, #0xC]
  00010	e1a00004	 mov         r0, r4
  00014	e5843000	 str         r3, [r4]
  00018	e8bd4010	 ldmia       sp!, {r4, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$LN7@CorePowerD|
  00020		 |$LN8@CorePowerD|
  00020	00000000	 DCD         |??_7CorePowerDomainConstraint@@6B@|
  00024		 |$M42977|

			 ENDP  ; |??0CorePowerDomainConstraint@@QAA@XZ|, CorePowerDomainConstraint::CorePowerDomainConstraint


  00000			 AREA	 |.pdata|, PDATA
|$T42990| DCD	|$LN5@GetPowerDo@2|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPowerDomain@CorePowerDomainConstraint@@MBAKXZ| PROC ; CorePowerDomainConstraint::GetPowerDomain

; 263  :     GetPowerDomain() const          {return POWERDOMAIN_CORE;}

  00000		 |$LN5@GetPowerDo@2|
  00000		 |$M42987|
  00000	e3a00001	 mov         r0, #1
  00004	e12fff1e	 bx          lr
  00008		 |$M42988|

			 ENDP  ; |?GetPowerDomain@CorePowerDomainConstraint@@MBAKXZ|, CorePowerDomainConstraint::GetPowerDomain

	EXPORT	|??0IvaPowerDomainConstraint@@QAA@XZ|	; IvaPowerDomainConstraint::IvaPowerDomainConstraint
	EXPORT	|??_7IvaPowerDomainConstraint@@6B@| [ DATA ] ; IvaPowerDomainConstraint::`vftable'
	EXPORT	|?GetPowerDomain@IvaPowerDomainConstraint@@MBAKXZ| ; IvaPowerDomainConstraint::GetPowerDomain
	IMPORT	|?UpdatePowerDomainConstraint@IvaPowerDomainConstraint@@MAAHK@Z| ; IvaPowerDomainConstraint::UpdatePowerDomainConstraint
	IMPORT	|?FlushDomainPowerState@IvaPowerDomainConstraint@@UAAHXZ| ; IvaPowerDomainConstraint::FlushDomainPowerState

  00000			 AREA	 |.pdata|, PDATA
|$T43001| DCD	|$LN6@IvaPowerDo|
	DCD	0x40000901

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7IvaPowerDomainConstraint@@6B@| DCD |?UpdatePowerDomainConstraint@IvaPowerDomainConstraint@@MAAHK@Z| ; IvaPowerDomainConstraint::`vftable'
	DCD	|?GetPowerDomain@IvaPowerDomainConstraint@@MBAKXZ|
	DCD	|?FlushDomainPowerState@IvaPowerDomainConstraint@@UAAHXZ|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0IvaPowerDomainConstraint@@QAA@XZ| PROC ; IvaPowerDomainConstraint::IvaPowerDomainConstraint
  00000		 |$LN6@IvaPowerDo|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M42998|
  00004	e1a04000	 mov         r4, r0
  00008	eb000000	 bl          |??0PowerDomainConstraint@@QAA@XZ|
  0000c	e59f300c	 ldr         r3, [pc, #0xC]
  00010	e1a00004	 mov         r0, r4
  00014	e5843000	 str         r3, [r4]
  00018	e8bd4010	 ldmia       sp!, {r4, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$LN7@IvaPowerDo|
  00020		 |$LN8@IvaPowerDo|
  00020	00000000	 DCD         |??_7IvaPowerDomainConstraint@@6B@|
  00024		 |$M42999|

			 ENDP  ; |??0IvaPowerDomainConstraint@@QAA@XZ|, IvaPowerDomainConstraint::IvaPowerDomainConstraint


  00000			 AREA	 |.pdata|, PDATA
|$T43012| DCD	|$LN5@GetPowerDo@3|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPowerDomain@IvaPowerDomainConstraint@@MBAKXZ| PROC ; IvaPowerDomainConstraint::GetPowerDomain

; 231  :     GetPowerDomain() const          {return POWERDOMAIN_IVA2;}

  00000		 |$LN5@GetPowerDo@3|
  00000		 |$M43009|
  00000	e3a00008	 mov         r0, #8
  00004	e12fff1e	 bx          lr
  00008		 |$M43010|

			 ENDP  ; |?GetPowerDomain@IvaPowerDomainConstraint@@MBAKXZ|, IvaPowerDomainConstraint::GetPowerDomain

	EXPORT	|??0UsbHostPowerDomainConstraint@@QAA@XZ| ; UsbHostPowerDomainConstraint::UsbHostPowerDomainConstraint
	EXPORT	|??_7UsbHostPowerDomainConstraint@@6B@| [ DATA ] ; UsbHostPowerDomainConstraint::`vftable'
	EXPORT	|?GetPowerDomain@UsbHostPowerDomainConstraint@@MBAKXZ| ; UsbHostPowerDomainConstraint::GetPowerDomain
	IMPORT	|?UpdatePowerDomainConstraint@UsbHostPowerDomainConstraint@@MAAHK@Z| ; UsbHostPowerDomainConstraint::UpdatePowerDomainConstraint
	IMPORT	|?FlushDomainPowerState@UsbHostPowerDomainConstraint@@UAAHXZ| ; UsbHostPowerDomainConstraint::FlushDomainPowerState

  00000			 AREA	 |.pdata|, PDATA
|$T43023| DCD	|$LN6@UsbHostPow|
	DCD	0x40000901

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7UsbHostPowerDomainConstraint@@6B@| DCD |?UpdatePowerDomainConstraint@UsbHostPowerDomainConstraint@@MAAHK@Z| ; UsbHostPowerDomainConstraint::`vftable'
	DCD	|?GetPowerDomain@UsbHostPowerDomainConstraint@@MBAKXZ|
	DCD	|?FlushDomainPowerState@UsbHostPowerDomainConstraint@@UAAHXZ|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0UsbHostPowerDomainConstraint@@QAA@XZ| PROC ; UsbHostPowerDomainConstraint::UsbHostPowerDomainConstraint
  00000		 |$LN6@UsbHostPow|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M43020|
  00004	e1a04000	 mov         r4, r0
  00008	eb000000	 bl          |??0PowerDomainConstraint@@QAA@XZ|
  0000c	e59f300c	 ldr         r3, [pc, #0xC]
  00010	e1a00004	 mov         r0, r4
  00014	e5843000	 str         r3, [r4]
  00018	e8bd4010	 ldmia       sp!, {r4, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$LN7@UsbHostPow|
  00020		 |$LN8@UsbHostPow|
  00020	00000000	 DCD         |??_7UsbHostPowerDomainConstraint@@6B@|
  00024		 |$M43021|

			 ENDP  ; |??0UsbHostPowerDomainConstraint@@QAA@XZ|, UsbHostPowerDomainConstraint::UsbHostPowerDomainConstraint


  00000			 AREA	 |.pdata|, PDATA
|$T43034| DCD	|$LN5@GetPowerDo@4|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPowerDomain@UsbHostPowerDomainConstraint@@MBAKXZ| PROC ; UsbHostPowerDomainConstraint::GetPowerDomain

; 423  :     GetPowerDomain() const          {return POWERDOMAIN_USBHOST;}

  00000		 |$LN5@GetPowerDo@4|
  00000		 |$M43031|
  00000	e3a00003	 mov         r0, #3
  00004	e12fff1e	 bx          lr
  00008		 |$M43032|

			 ENDP  ; |?GetPowerDomain@UsbHostPowerDomainConstraint@@MBAKXZ|, UsbHostPowerDomainConstraint::GetPowerDomain

	EXPORT	|??0DssPowerDomainConstraint@@QAA@XZ|	; DssPowerDomainConstraint::DssPowerDomainConstraint
	EXPORT	|??_7DssPowerDomainConstraint@@6B@| [ DATA ] ; DssPowerDomainConstraint::`vftable'
	EXPORT	|?GetPowerDomain@DssPowerDomainConstraint@@MBAKXZ| ; DssPowerDomainConstraint::GetPowerDomain
	IMPORT	|?UpdatePowerDomainConstraint@DssPowerDomainConstraint@@MAAHK@Z| ; DssPowerDomainConstraint::UpdatePowerDomainConstraint
	IMPORT	|?FlushDomainPowerState@DssPowerDomainConstraint@@UAAHXZ| ; DssPowerDomainConstraint::FlushDomainPowerState

  00000			 AREA	 |.pdata|, PDATA
|$T43045| DCD	|$LN6@DssPowerDo|
	DCD	0x40000901

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7DssPowerDomainConstraint@@6B@| DCD |?UpdatePowerDomainConstraint@DssPowerDomainConstraint@@MAAHK@Z| ; DssPowerDomainConstraint::`vftable'
	DCD	|?GetPowerDomain@DssPowerDomainConstraint@@MBAKXZ|
	DCD	|?FlushDomainPowerState@DssPowerDomainConstraint@@UAAHXZ|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0DssPowerDomainConstraint@@QAA@XZ| PROC ; DssPowerDomainConstraint::DssPowerDomainConstraint
  00000		 |$LN6@DssPowerDo|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M43042|
  00004	e1a04000	 mov         r4, r0
  00008	eb000000	 bl          |??0PowerDomainConstraint@@QAA@XZ|
  0000c	e59f300c	 ldr         r3, [pc, #0xC]
  00010	e1a00004	 mov         r0, r4
  00014	e5843000	 str         r3, [r4]
  00018	e8bd4010	 ldmia       sp!, {r4, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$LN7@DssPowerDo|
  00020		 |$LN8@DssPowerDo|
  00020	00000000	 DCD         |??_7DssPowerDomainConstraint@@6B@|
  00024		 |$M43043|

			 ENDP  ; |??0DssPowerDomainConstraint@@QAA@XZ|, DssPowerDomainConstraint::DssPowerDomainConstraint


  00000			 AREA	 |.pdata|, PDATA
|$T43056| DCD	|$LN5@GetPowerDo@5|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPowerDomain@DssPowerDomainConstraint@@MBAKXZ| PROC ; DssPowerDomainConstraint::GetPowerDomain

; 327  :     GetPowerDomain() const          {return POWERDOMAIN_DSS;}

  00000		 |$LN5@GetPowerDo@5|
  00000		 |$M43053|
  00000	e3a00006	 mov         r0, #6
  00004	e12fff1e	 bx          lr
  00008		 |$M43054|

			 ENDP  ; |?GetPowerDomain@DssPowerDomainConstraint@@MBAKXZ|, DssPowerDomainConstraint::GetPowerDomain

	EXPORT	|??0SgxPowerDomainConstraint@@QAA@XZ|	; SgxPowerDomainConstraint::SgxPowerDomainConstraint
	EXPORT	|??_7SgxPowerDomainConstraint@@6B@| [ DATA ] ; SgxPowerDomainConstraint::`vftable'
	EXPORT	|?GetPowerDomain@SgxPowerDomainConstraint@@MBAKXZ| ; SgxPowerDomainConstraint::GetPowerDomain
	IMPORT	|?UpdatePowerDomainConstraint@SgxPowerDomainConstraint@@MAAHK@Z| ; SgxPowerDomainConstraint::UpdatePowerDomainConstraint
	IMPORT	|?FlushDomainPowerState@SgxPowerDomainConstraint@@UAAHXZ| ; SgxPowerDomainConstraint::FlushDomainPowerState

  00000			 AREA	 |.pdata|, PDATA
|$T43067| DCD	|$LN6@SgxPowerDo|
	DCD	0x40000901

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7SgxPowerDomainConstraint@@6B@| DCD |?UpdatePowerDomainConstraint@SgxPowerDomainConstraint@@MAAHK@Z| ; SgxPowerDomainConstraint::`vftable'
	DCD	|?GetPowerDomain@SgxPowerDomainConstraint@@MBAKXZ|
	DCD	|?FlushDomainPowerState@SgxPowerDomainConstraint@@UAAHXZ|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0SgxPowerDomainConstraint@@QAA@XZ| PROC ; SgxPowerDomainConstraint::SgxPowerDomainConstraint
  00000		 |$LN6@SgxPowerDo|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M43064|
  00004	e1a04000	 mov         r4, r0
  00008	eb000000	 bl          |??0PowerDomainConstraint@@QAA@XZ|
  0000c	e59f300c	 ldr         r3, [pc, #0xC]
  00010	e1a00004	 mov         r0, r4
  00014	e5843000	 str         r3, [r4]
  00018	e8bd4010	 ldmia       sp!, {r4, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$LN7@SgxPowerDo|
  00020		 |$LN8@SgxPowerDo|
  00020	00000000	 DCD         |??_7SgxPowerDomainConstraint@@6B@|
  00024		 |$M43065|

			 ENDP  ; |??0SgxPowerDomainConstraint@@QAA@XZ|, SgxPowerDomainConstraint::SgxPowerDomainConstraint


  00000			 AREA	 |.pdata|, PDATA
|$T43078| DCD	|$LN5@GetPowerDo@6|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPowerDomain@SgxPowerDomainConstraint@@MBAKXZ| PROC ; SgxPowerDomainConstraint::GetPowerDomain

; 359  :     GetPowerDomain() const          {return POWERDOMAIN_SGX;}

  00000		 |$LN5@GetPowerDo@6|
  00000		 |$M43075|
  00000	e3a0000a	 mov         r0, #0xA
  00004	e12fff1e	 bx          lr
  00008		 |$M43076|

			 ENDP  ; |?GetPowerDomain@SgxPowerDomainConstraint@@MBAKXZ|, SgxPowerDomainConstraint::GetPowerDomain

	EXPORT	|??0PeripheralPowerDomainConstraint@@QAA@XZ| ; PeripheralPowerDomainConstraint::PeripheralPowerDomainConstraint
	EXPORT	|??_7PeripheralPowerDomainConstraint@@6B@| [ DATA ] ; PeripheralPowerDomainConstraint::`vftable'
	EXPORT	|?GetPowerDomain@PeripheralPowerDomainConstraint@@MBAKXZ| ; PeripheralPowerDomainConstraint::GetPowerDomain
	IMPORT	|?UpdatePowerDomainConstraint@PeripheralPowerDomainConstraint@@MAAHK@Z| ; PeripheralPowerDomainConstraint::UpdatePowerDomainConstraint
	IMPORT	|?FlushDomainPowerState@PeripheralPowerDomainConstraint@@UAAHXZ| ; PeripheralPowerDomainConstraint::FlushDomainPowerState

  00000			 AREA	 |.pdata|, PDATA
|$T43089| DCD	|$LN6@Peripheral|
	DCD	0x40000901

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7PeripheralPowerDomainConstraint@@6B@| DCD |?UpdatePowerDomainConstraint@PeripheralPowerDomainConstraint@@MAAHK@Z| ; PeripheralPowerDomainConstraint::`vftable'
	DCD	|?GetPowerDomain@PeripheralPowerDomainConstraint@@MBAKXZ|
	DCD	|?FlushDomainPowerState@PeripheralPowerDomainConstraint@@UAAHXZ|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0PeripheralPowerDomainConstraint@@QAA@XZ| PROC ; PeripheralPowerDomainConstraint::PeripheralPowerDomainConstraint
  00000		 |$LN6@Peripheral|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M43086|
  00004	e1a04000	 mov         r4, r0
  00008	eb000000	 bl          |??0PowerDomainConstraint@@QAA@XZ|
  0000c	e59f300c	 ldr         r3, [pc, #0xC]
  00010	e1a00004	 mov         r0, r4
  00014	e5843000	 str         r3, [r4]
  00018	e8bd4010	 ldmia       sp!, {r4, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$LN7@Peripheral|
  00020		 |$LN8@Peripheral|
  00020	00000000	 DCD         |??_7PeripheralPowerDomainConstraint@@6B@|
  00024		 |$M43087|

			 ENDP  ; |??0PeripheralPowerDomainConstraint@@QAA@XZ|, PeripheralPowerDomainConstraint::PeripheralPowerDomainConstraint


  00000			 AREA	 |.pdata|, PDATA
|$T43100| DCD	|$LN5@GetPowerDo@7|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPowerDomain@PeripheralPowerDomainConstraint@@MBAKXZ| PROC ; PeripheralPowerDomainConstraint::GetPowerDomain

; 295  :     GetPowerDomain() const          {return POWERDOMAIN_PERIPHERAL;}

  00000		 |$LN5@GetPowerDo@7|
  00000		 |$M43097|
  00000	e3a00002	 mov         r0, #2
  00004	e12fff1e	 bx          lr
  00008		 |$M43098|

			 ENDP  ; |?GetPowerDomain@PeripheralPowerDomainConstraint@@MBAKXZ|, PeripheralPowerDomainConstraint::GetPowerDomain

	EXPORT	|??0CameraPowerDomainConstraint@@QAA@XZ| ; CameraPowerDomainConstraint::CameraPowerDomainConstraint
	EXPORT	|??_7CameraPowerDomainConstraint@@6B@| [ DATA ] ; CameraPowerDomainConstraint::`vftable'
	EXPORT	|?GetPowerDomain@CameraPowerDomainConstraint@@MBAKXZ| ; CameraPowerDomainConstraint::GetPowerDomain
	IMPORT	|?UpdatePowerDomainConstraint@CameraPowerDomainConstraint@@MAAHK@Z| ; CameraPowerDomainConstraint::UpdatePowerDomainConstraint
	IMPORT	|?FlushDomainPowerState@CameraPowerDomainConstraint@@UAAHXZ| ; CameraPowerDomainConstraint::FlushDomainPowerState

  00000			 AREA	 |.pdata|, PDATA
|$T43111| DCD	|$LN6@CameraPowe|
	DCD	0x40000901

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CameraPowerDomainConstraint@@6B@| DCD |?UpdatePowerDomainConstraint@CameraPowerDomainConstraint@@MAAHK@Z| ; CameraPowerDomainConstraint::`vftable'
	DCD	|?GetPowerDomain@CameraPowerDomainConstraint@@MBAKXZ|
	DCD	|?FlushDomainPowerState@CameraPowerDomainConstraint@@UAAHXZ|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CameraPowerDomainConstraint@@QAA@XZ| PROC ; CameraPowerDomainConstraint::CameraPowerDomainConstraint
  00000		 |$LN6@CameraPowe|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M43108|
  00004	e1a04000	 mov         r4, r0
  00008	eb000000	 bl          |??0PowerDomainConstraint@@QAA@XZ|
  0000c	e59f300c	 ldr         r3, [pc, #0xC]
  00010	e1a00004	 mov         r0, r4
  00014	e5843000	 str         r3, [r4]
  00018	e8bd4010	 ldmia       sp!, {r4, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$LN7@CameraPowe|
  00020		 |$LN8@CameraPowe|
  00020	00000000	 DCD         |??_7CameraPowerDomainConstraint@@6B@|
  00024		 |$M43109|

			 ENDP  ; |??0CameraPowerDomainConstraint@@QAA@XZ|, CameraPowerDomainConstraint::CameraPowerDomainConstraint


  00000			 AREA	 |.pdata|, PDATA
|$T43122| DCD	|$LN5@GetPowerDo@8|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPowerDomain@CameraPowerDomainConstraint@@MBAKXZ| PROC ; CameraPowerDomainConstraint::GetPowerDomain

; 391  :     GetPowerDomain() const          {return POWERDOMAIN_CAMERA;}

  00000		 |$LN5@GetPowerDo@8|
  00000		 |$M43119|
  00000	e3a00009	 mov         r0, #9
  00004	e12fff1e	 bx          lr
  00008		 |$M43120|

			 ENDP  ; |?GetPowerDomain@CameraPowerDomainConstraint@@MBAKXZ|, CameraPowerDomainConstraint::GetPowerDomain

	EXPORT	|??0NeonPowerDomainConstraint@@QAA@XZ|	; NeonPowerDomainConstraint::NeonPowerDomainConstraint
	EXPORT	|??_7NeonPowerDomainConstraint@@6B@| [ DATA ] ; NeonPowerDomainConstraint::`vftable'
	EXPORT	|?GetPowerDomain@NeonPowerDomainConstraint@@MBAKXZ| ; NeonPowerDomainConstraint::GetPowerDomain
	IMPORT	|?UpdatePowerDomainConstraint@NeonPowerDomainConstraint@@MAAHK@Z| ; NeonPowerDomainConstraint::UpdatePowerDomainConstraint
	IMPORT	|?FlushDomainPowerState@NeonPowerDomainConstraint@@UAAHXZ| ; NeonPowerDomainConstraint::FlushDomainPowerState

  00000			 AREA	 |.pdata|, PDATA
|$T43133| DCD	|$LN6@NeonPowerD|
	DCD	0x40000901

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7NeonPowerDomainConstraint@@6B@| DCD |?UpdatePowerDomainConstraint@NeonPowerDomainConstraint@@MAAHK@Z| ; NeonPowerDomainConstraint::`vftable'
	DCD	|?GetPowerDomain@NeonPowerDomainConstraint@@MBAKXZ|
	DCD	|?FlushDomainPowerState@NeonPowerDomainConstraint@@UAAHXZ|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0NeonPowerDomainConstraint@@QAA@XZ| PROC ; NeonPowerDomainConstraint::NeonPowerDomainConstraint
  00000		 |$LN6@NeonPowerD|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M43130|
  00004	e1a04000	 mov         r4, r0
  00008	eb000000	 bl          |??0PowerDomainConstraint@@QAA@XZ|
  0000c	e59f300c	 ldr         r3, [pc, #0xC]
  00010	e1a00004	 mov         r0, r4
  00014	e5843000	 str         r3, [r4]
  00018	e8bd4010	 ldmia       sp!, {r4, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$LN7@NeonPowerD|
  00020		 |$LN8@NeonPowerD|
  00020	00000000	 DCD         |??_7NeonPowerDomainConstraint@@6B@|
  00024		 |$M43131|

			 ENDP  ; |??0NeonPowerDomainConstraint@@QAA@XZ|, NeonPowerDomainConstraint::NeonPowerDomainConstraint


  00000			 AREA	 |.pdata|, PDATA
|$T43144| DCD	|$LN5@GetPowerDo@9|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPowerDomain@NeonPowerDomainConstraint@@MBAKXZ| PROC ; NeonPowerDomainConstraint::GetPowerDomain

; 454  :     GetPowerDomain() const          {return POWERDOMAIN_NEON;}

  00000		 |$LN5@GetPowerDo@9|
  00000		 |$M43141|
  00000	e3a00007	 mov         r0, #7
  00004	e12fff1e	 bx          lr
  00008		 |$M43142|

			 ENDP  ; |?GetPowerDomain@NeonPowerDomainConstraint@@MBAKXZ|, NeonPowerDomainConstraint::GetPowerDomain

	EXPORT	|?begin@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@XZ| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::begin
; File c:\wince600\public\common\sdk\inc\list

  00000			 AREA	 |.pdata|, PDATA
|$T43168| DCD	|$LN11@begin|
	DCD	0x40000500
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?begin@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@XZ| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::begin

; 180  : 		{return (iterator(_Acc::_Next(_Head))); }

  00000		 |$LN11@begin|
  00000		 |$M43165|
  00000	e5903004	 ldr         r3, [r0, #4]
  00004	e1a00001	 mov         r0, r1
  00008	e5933000	 ldr         r3, [r3]
  0000c	e5813000	 str         r3, [r1]
  00010	e12fff1e	 bx          lr
  00014		 |$M43166|

			 ENDP  ; |?begin@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@XZ|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::begin

	EXPORT	|?end@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@XZ| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::end

  00000			 AREA	 |.pdata|, PDATA
|$T43188| DCD	|$LN9@end|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?end@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@XZ| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::end

; 184  : 		{return (iterator(_Head)); }

  00000		 |$LN9@end|
  00000		 |$M43185|
  00000	e5903004	 ldr         r3, [r0, #4]
  00004	e1a00001	 mov         r0, r1
  00008	e5813000	 str         r3, [r1]
  0000c	e12fff1e	 bx          lr
  00010		 |$M43186|

			 ENDP  ; |?end@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@XZ|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::end

	EXPORT	|?erase@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@V312@@Z| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::erase
; File c:\wince600\public\common\sdk\inc\xmemory

  00000			 AREA	 |.pdata|, PDATA
|$T43262| DCD	|$LN35@erase|
	DCD	0x40001603
; Function compile flags: /Ogspy
; File c:\wince600\public\common\sdk\inc\list

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?erase@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@V312@@Z| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::erase

; 249  : 		{_Nodeptr _S = (_P++)._Mynode();

  00000		 |$LN35@erase|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d50f0	 stmdb       sp!, {r4 - r7, r12, lr}
  0000c		 |$M43259|
  0000c	e1a06001	 mov         r6, r1
  00010	e1a07000	 mov         r7, r0

; 250  : 		_Acc::_Next(_Acc::_Prev(_S)) = _Acc::_Next(_S);

  00014	e1a04002	 mov         r4, r2
  00018	e5b4e004	 ldr         lr, [r4, #4]!
  0001c	e5923000	 ldr         r3, [r2]

; 251  : 		_Acc::_Prev(_Acc::_Next(_S)) = _Acc::_Prev(_S);
; 252  : 		allocator.destroy(&_Acc::_Value(_S));
; 253  : 		_Freenode(_S);

  00020	e1a00002	 mov         r0, r2
  00024	e58e3000	 str         r3, [lr]
  00028	e5922000	 ldr         r2, [r2]
  0002c	e1a05003	 mov         r5, r3
  00030	e5943000	 ldr         r3, [r4]
  00034	e5823004	 str         r3, [r2, #4]
  00038	eb000000	 bl          |??3@YAXPAX@Z|

; 254  : 		--_Size;

  0003c	e5973008	 ldr         r3, [r7, #8]

; 255  : 		return (_P); }

  00040	e5865000	 str         r5, [r6]
  00044	e1a00006	 mov         r0, r6
  00048	e2433001	 sub         r3, r3, #1
  0004c	e5873008	 str         r3, [r7, #8]
  00050	e89d60f0	 ldmia       sp, {r4 - r7, sp, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$M43260|

			 ENDP  ; |?erase@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@V312@@Z|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::erase

	EXPORT	|?erase@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@V312@0@Z| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::erase

  00000			 AREA	 |.pdata|, PDATA
|$T43313| DCD	|$LN22@erase@2|
	DCD	0x40001b04
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?erase@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@V312@0@Z| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::erase

; 257  : 		{while (_F != _L)

  00000		 |$LN22@erase@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d50f0	 stmdb       sp!, {r4 - r7, r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M43310|
  00010	e1a06003	 mov         r6, r3
  00014	e1a04002	 mov         r4, r2
  00018	e1a05001	 mov         r5, r1
  0001c	e1a07000	 mov         r7, r0
  00020		 |$LL2@erase@2|
  00020	e1540006	 cmp         r4, r6
  00024	03a02001	 moveq       r2, #1
  00028	13a02000	 movne       r2, #0
  0002c	e21230ff	 ands        r3, r2, #0xFF
  00030	03a03001	 moveq       r3, #1
  00034	13a03000	 movne       r3, #0
  00038	e21330ff	 ands        r3, r3, #0xFF

; 258  : 			erase(_F++);
; 259  : 		return (_F); }

  0003c	0a000005	 beq         |$LN1@erase@2|
  00040	e1a02004	 mov         r2, r4
  00044	e5944000	 ldr         r4, [r4]
  00048	e28d1000	 add         r1, sp, #0
  0004c	e1a00007	 mov         r0, r7
  00050	eb000000	 bl          |?erase@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@V312@@Z|
  00054	eafffff1	 b           |$LL2@erase@2|
  00058		 |$LN1@erase@2|
  00058	e5854000	 str         r4, [r5]
  0005c	e1a00005	 mov         r0, r5
  00060	e28dd004	 add         sp, sp, #4
  00064	e89d60f0	 ldmia       sp, {r4 - r7, sp, lr}
  00068	e12fff1e	 bx          lr
  0006c		 |$M43311|

			 ENDP  ; |?erase@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@V312@0@Z|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::erase

	EXPORT	|?_Buynode@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@IAAPAU_Node@12@PAU312@0@Z| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::_Buynode

  00000			 AREA	 |.pdata|, PDATA
|$T43351| DCD	|$LN20@Buynode|
	DCD	0x40000d01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?_Buynode@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@IAAPAU_Node@12@PAU312@0@Z| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::_Buynode

; 400  : 		{_Nodeptr _S = (_Nodeptr)allocator._Charalloc(

  00000		 |$LN20@Buynode|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M43348|
  00004	e1a04002	 mov         r4, r2
  00008	e1a05001	 mov         r5, r1

; 401  : 			1 * sizeof (_Node));

  0000c	e3a0000c	 mov         r0, #0xC
  00010	eb000000	 bl          |??2@YAPAXI@Z|

; 402  : 		_Acc::_Next(_S) = _Narg != 0 ? _Narg : _S;

  00014	e3550000	 cmp         r5, #0
  00018	01a05000	 moveq       r5, r0

; 403  : 		_Acc::_Prev(_S) = _Parg != 0 ? _Parg : _S;

  0001c	e3540000	 cmp         r4, #0
  00020	01a04000	 moveq       r4, r0
  00024	e5805000	 str         r5, [r0]
  00028	e5804004	 str         r4, [r0, #4]

; 404  : 		return (_S); }

  0002c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00030	e12fff1e	 bx          lr
  00034		 |$M43349|

			 ENDP  ; |?_Buynode@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@IAAPAU_Node@12@PAU312@0@Z|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::_Buynode

	EXPORT	|?NotifyDomainCallbacks@@YAXIIK@Z|	; NotifyDomainCallbacks

  00000			 AREA	 |.pdata|, PDATA
|$T43465| DCD	|$LN54@NotifyDoma|
	DCD	0x40003202
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\pm\constraintadapters\powerdomainconstraint\powerdomaincontext.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?NotifyDomainCallbacks@@YAXIIK@Z| PROC ; NotifyDomainCallbacks

; 108  : {

  00000		 |$LN54@NotifyDoma|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M43462|
  00008	e1a07002	 mov         r7, r2
  0000c	e1a04001	 mov         r4, r1
  00010	e1a05000	 mov         r5, r0

; 109  :     POWERDOMAIN_CONSTRAINT_INFO constraintInfo;
; 110  :     list<PowerDomainCallbackInfo_t*>::iterator iter;
; 111  : 
; 112  :     // Prevent further modification until all clients are notified.
; 113  :     s_PowerDomainInfo.bCallbackMode = TRUE;

  00014	e59f60a8	 ldr         r6, [pc, #0xA8]
  00018	e3a03001	 mov         r3, #1

; 114  :     s_PowerDomainInfo.currentTID = GetCurrentThreadId();

  0001c	e3a00008	 mov         r0, #8
  00020	e5863014	 str         r3, [r6, #0x14]
  00024	eb000000	 bl          __GetUserKData

; 115  : 
; 116  :     // initialize data structure
; 117  :     constraintInfo.state = state;
; 118  :     constraintInfo.powerDomain = powerDomain;
; 119  :     constraintInfo.size = sizeof(POWERDOMAIN_CONSTRAINT_INFO);
; 120  :     
; 121  :     for (iter = s_CallbackList.begin(); iter != s_CallbackList.end(); ++iter)

  00028	e59f8090	 ldr         r8, [pc, #0x90]
  0002c	e3a0300c	 mov         r3, #0xC
  00030	e5860018	 str         r0, [r6, #0x18]
  00034	e5981004	 ldr         r1, [r8, #4]
  00038	e58d4008	 str         r4, [sp, #8]
  0003c	e58d5004	 str         r5, [sp, #4]
  00040	e58d3000	 str         r3, [sp]
  00044	e5915000	 ldr         r5, [r1]
  00048	e3a09802	 mov         r9, #2, 16
  0004c		 |$LL21@NotifyDoma|
  0004c	e1550001	 cmp         r5, r1
  00050	03a03001	 moveq       r3, #1
  00054	13a03000	 movne       r3, #0
  00058	e21330ff	 ands        r3, r3, #0xFF
  0005c	03a03001	 moveq       r3, #1
  00060	13a03000	 movne       r3, #0
  00064	e21330ff	 ands        r3, r3, #0xFF

; 122  :         {
; 123  :         // don't notify the caller who triggered the change
; 124  :         if ((*iter)->idContext == idContext) continue;
; 125  : 
; 126  :         // notify callbacks
; 127  :         (*iter)->fnCallback((*iter)->hRefContext, 
; 128  :             CONSTRAINT_MSG_POWERDOMAIN_UPDATE, 
; 129  :             (void*)&constraintInfo,
; 130  :             sizeof(POWERDOMAIN_CONSTRAINT_INFO)
; 131  :             );
; 132  :         }
; 133  :     
; 134  :     s_PowerDomainInfo.bCallbackMode = FALSE;

  00068	0a00000f	 beq         |$LN2@NotifyDoma|
  0006c	e1a02005	 mov         r2, r5
  00070	e5b23008	 ldr         r3, [r2, #8]!
  00074	e5933000	 ldr         r3, [r3]
  00078	e1530007	 cmp         r3, r7
  0007c	0a000008	 beq         |$LN3@NotifyDoma|
  00080	e5921000	 ldr         r1, [r2]
  00084	e3a0300c	 mov         r3, #0xC
  00088	e28d2000	 add         r2, sp, #0
  0008c	e5910008	 ldr         r0, [r1, #8]
  00090	e5914004	 ldr         r4, [r1, #4]
  00094	e3891001	 orr         r1, r9, #1
  00098	e1a0e00f	 mov         lr, pc
  0009c	e12fff14	 bx          r4
  000a0	e5981004	 ldr         r1, [r8, #4]
  000a4		 |$LN3@NotifyDoma|

; 115  : 
; 116  :     // initialize data structure
; 117  :     constraintInfo.state = state;
; 118  :     constraintInfo.powerDomain = powerDomain;
; 119  :     constraintInfo.size = sizeof(POWERDOMAIN_CONSTRAINT_INFO);
; 120  :     
; 121  :     for (iter = s_CallbackList.begin(); iter != s_CallbackList.end(); ++iter)

  000a4	e5955000	 ldr         r5, [r5]
  000a8	eaffffe7	 b           |$LL21@NotifyDoma|
  000ac		 |$LN2@NotifyDoma|

; 122  :         {
; 123  :         // don't notify the caller who triggered the change
; 124  :         if ((*iter)->idContext == idContext) continue;
; 125  : 
; 126  :         // notify callbacks
; 127  :         (*iter)->fnCallback((*iter)->hRefContext, 
; 128  :             CONSTRAINT_MSG_POWERDOMAIN_UPDATE, 
; 129  :             (void*)&constraintInfo,
; 130  :             sizeof(POWERDOMAIN_CONSTRAINT_INFO)
; 131  :             );
; 132  :         }
; 133  :     
; 134  :     s_PowerDomainInfo.bCallbackMode = FALSE;

  000ac	e3a03000	 mov         r3, #0
  000b0	e5863014	 str         r3, [r6, #0x14]

; 135  : }

  000b4	e28dd00c	 add         sp, sp, #0xC
  000b8	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  000bc	e12fff1e	 bx          lr
  000c0		 |$LN55@NotifyDoma|
  000c0		 |$LN56@NotifyDoma|
  000c0	00000000	 DCD         |s_CallbackList|
  000c4		 |$LN57@NotifyDoma|
  000c4	00000000	 DCD         |s_PowerDomainInfo|
  000c8		 |$M43463|

			 ENDP  ; |?NotifyDomainCallbacks@@YAXIIK@Z|, NotifyDomainCallbacks

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|?PWRDOM_InitConstraint@@YAPAXPBG@Z|	; PWRDOM_InitConstraint
	EXPORT	|??_C@_19HILOPLKE@?$AAN?$AAE?$AAO?$AAN?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@NAINHJLA@?$AAC?$AAA?$AAM?$AAE?$AAR?$AAA?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@CDNAOEMP@?$AAP?$AAE?$AAR?$AAI?$AAP?$AAH?$AAE?$AAR?$AAA?$AAL?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_17FNJAMJCK@?$AAS?$AAG?$AAX?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_17GEKIDGJE@?$AAD?$AAS?$AAS?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@JFNDBDEI@?$AAU?$AAS?$AAB?$AAH?$AAO?$AAS?$AAT?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_17FFHACNOC@?$AAI?$AAV?$AAA?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_19HEMJPKJI@?$AAC?$AAO?$AAR?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_17NIBIAAMN@?$AAM?$AAP?$AAU?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@DFKENGJN@?$AA?$CF?$AAs?$AA?2?$AA?$CF?$AAs?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|InitializeCriticalSection|
	IMPORT	|?InitializePowerDomain@PowerDomainConstraint@@QAAHPBG@Z| ; PowerDomainConstraint::InitializePowerDomain
	IMPORT	|swprintf|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_cookie|
	IMPORT	|__security_check_cookie|

  00000			 AREA	 |.pdata|, PDATA
|$T43575| DCD	|$LN59@PWRDOM_Ini|
	DCD	0xc0011202

  00000			 AREA	 |.xdata|, DATA
|$T43571| DCD	0xffffffec

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_19HILOPLKE@?$AAN?$AAE?$AAO?$AAN?$AA?$AA@| DCB "N", 0x0, "E", 0x0, "O"
	DCB	0x0, "N", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@NAINHJLA@?$AAC?$AAA?$AAM?$AAE?$AAR?$AAA?$AA?$AA@| DCB "C", 0x0, "A"
	DCB	0x0, "M", 0x0, "E", 0x0, "R", 0x0, "A", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@CDNAOEMP@?$AAP?$AAE?$AAR?$AAI?$AAP?$AAH?$AAE?$AAR?$AAA?$AAL?$AA?$AA@| DCB "P"
	DCB	0x0, "E", 0x0, "R", 0x0, "I", 0x0, "P", 0x0, "H", 0x0, "E"
	DCB	0x0, "R", 0x0, "A", 0x0, "L", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17FNJAMJCK@?$AAS?$AAG?$AAX?$AA?$AA@| DCB "S", 0x0, "G", 0x0, "X", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17GEKIDGJE@?$AAD?$AAS?$AAS?$AA?$AA@| DCB "D", 0x0, "S", 0x0, "S", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@JFNDBDEI@?$AAU?$AAS?$AAB?$AAH?$AAO?$AAS?$AAT?$AA?$AA@| DCB "U", 0x0
	DCB	"S", 0x0, "B", 0x0, "H", 0x0, "O", 0x0, "S", 0x0, "T", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17FFHACNOC@?$AAI?$AAV?$AAA?$AA?$AA@| DCB "I", 0x0, "V", 0x0, "A", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_19HEMJPKJI@?$AAC?$AAO?$AAR?$AAE?$AA?$AA@| DCB "C", 0x0, "O", 0x0, "R"
	DCB	0x0, "E", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17NIBIAAMN@?$AAM?$AAP?$AAU?$AA?$AA@| DCB "M", 0x0, "P", 0x0, "U", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@DFKENGJN@?$AA?$CF?$AAs?$AA?2?$AA?$CF?$AAs?$AA?$AA@| DCB "%", 0x0
	DCB	"s", 0x0, "\\", 0x0, "%", 0x0, "s", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T43571|

  00008		 |?PWRDOM_InitConstraint@@YAPAXPBG@Z| PROC ; PWRDOM_InitConstraint

; 147  : {

  00008		 |$LN59@PWRDOM_Ini|
  00008	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  0000c	e24ddf83	 sub         sp, sp, #0x83, 30
  00010		 |$M43572|
  00010	e1a06000	 mov         r6, r0
  00014	e59f3430	 ldr         r3, [pc, #0x430]
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3208	 str         r3, [sp, #0x208]

; 148  :     _TCHAR szBuffer[MAX_PATH];
; 149  :     
; 150  :     // Initialize data structure
; 151  :     memset(&s_PowerDomainInfo.rgPowerDomainStates, 0, sizeof(s_PowerDomainInfo.rgPowerDomainStates));

  00020	e59f4420	 ldr         r4, [pc, #0x420]
  00024	e3a02034	 mov         r2, #0x34
  00028	e3a01000	 mov         r1, #0
  0002c	e284001c	 add         r0, r4, #0x1C
  00030	eb000000	 bl          memset

; 152  : 
; 153  :     // instantiate each power domain which supports constraints
; 154  : 
; 155  :     // mpu
; 156  :     _stprintf(szBuffer, REGEDIT_POWERDOMAIN_FMT, szContext, REGEDIT_POWERDOMAIN_MPU);

  00034	e59f3408	 ldr         r3, [pc, #0x408]
  00038	e59f13c0	 ldr         r1, [pc, #0x3C0]
  0003c	e1a02006	 mov         r2, r6
  00040	e28d0000	 add         r0, sp, #0
  00044	eb000000	 bl          swprintf

; 157  :     s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_MPU] = new MpuPowerDomainConstraint();

  00048	e3a000b4	 mov         r0, #0xB4
  0004c	eb000000	 bl          |??2@YAPAXI@Z|
  00050	e1b05000	 movs        r5, r0
  00054	0a000004	 beq         |$LN12@PWRDOM_Ini|
  00058	e1a00005	 mov         r0, r5
  0005c	eb000000	 bl          |??0PowerDomainConstraint@@QAA@XZ|
  00060	e59f33d8	 ldr         r3, [pc, #0x3D8]
  00064	e5853000	 str         r3, [r5]
  00068	ea000000	 b           |$LN13@PWRDOM_Ini|
  0006c		 |$LN12@PWRDOM_Ini|
  0006c	e3a05000	 mov         r5, #0
  00070		 |$LN13@PWRDOM_Ini|
  00070	e5845030	 str         r5, [r4, #0x30]

; 158  :     if (s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_MPU] != NULL)

  00074	e3550000	 cmp         r5, #0
  00078	0a000007	 beq         |$LN9@PWRDOM_Ini|

; 159  :         {
; 160  :         // Don't need to flush the power state because the cpu load power policy adapter
; 161  :         // will do it for us
; 162  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_MPU]->InitializePowerDomain(szBuffer);

  0007c	e28d1000	 add         r1, sp, #0
  00080	e1a00005	 mov         r0, r5
  00084	eb000000	 bl          |?InitializePowerDomain@PowerDomainConstraint@@QAAHPBG@Z|

; 163  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_MPU]->FlushDomainPowerState(); 

  00088	e5940030	 ldr         r0, [r4, #0x30]
  0008c	e5903000	 ldr         r3, [r0]
  00090	e5933008	 ldr         r3, [r3, #8]
  00094	e1a0e00f	 mov         lr, pc
  00098	e12fff13	 bx          r3
  0009c		 |$LN9@PWRDOM_Ini|

; 164  :         }
; 165  : 
; 166  :     // core
; 167  :     _stprintf(szBuffer, REGEDIT_POWERDOMAIN_FMT, szContext, REGEDIT_POWERDOMAIN_CORE);

  0009c	e59f3398	 ldr         r3, [pc, #0x398]
  000a0	e59f1358	 ldr         r1, [pc, #0x358]
  000a4	e1a02006	 mov         r2, r6
  000a8	e28d0000	 add         r0, sp, #0
  000ac	eb000000	 bl          swprintf

; 168  :     s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_CORE] = new CorePowerDomainConstraint();

  000b0	e3a000b4	 mov         r0, #0xB4
  000b4	eb000000	 bl          |??2@YAPAXI@Z|
  000b8	e1b05000	 movs        r5, r0
  000bc	0a000004	 beq         |$LN14@PWRDOM_Ini|
  000c0	e1a00005	 mov         r0, r5
  000c4	eb000000	 bl          |??0PowerDomainConstraint@@QAA@XZ|
  000c8	e59f3368	 ldr         r3, [pc, #0x368]
  000cc	e5853000	 str         r3, [r5]
  000d0	ea000000	 b           |$LN15@PWRDOM_Ini|
  000d4		 |$LN14@PWRDOM_Ini|
  000d4	e3a05000	 mov         r5, #0
  000d8		 |$LN15@PWRDOM_Ini|
  000d8	e5845020	 str         r5, [r4, #0x20]

; 169  :     if (s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_CORE] != NULL)

  000dc	e3550000	 cmp         r5, #0
  000e0	0a000007	 beq         |$LN8@PWRDOM_Ini|

; 170  :         {
; 171  :         // Depend on external power policy adapter to change the power state of core
; 172  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_CORE]->InitializePowerDomain(szBuffer);

  000e4	e28d1000	 add         r1, sp, #0
  000e8	e1a00005	 mov         r0, r5
  000ec	eb000000	 bl          |?InitializePowerDomain@PowerDomainConstraint@@QAAHPBG@Z|

; 173  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_CORE]->FlushDomainPowerState(); 

  000f0	e5940020	 ldr         r0, [r4, #0x20]
  000f4	e5903000	 ldr         r3, [r0]
  000f8	e5933008	 ldr         r3, [r3, #8]
  000fc	e1a0e00f	 mov         lr, pc
  00100	e12fff13	 bx          r3
  00104		 |$LN8@PWRDOM_Ini|

; 174  :         }
; 175  : 
; 176  :     // iva
; 177  :     _stprintf(szBuffer, REGEDIT_POWERDOMAIN_FMT, szContext, REGEDIT_POWERDOMAIN_IVA);

  00104	e59f3328	 ldr         r3, [pc, #0x328]
  00108	e59f12f0	 ldr         r1, [pc, #0x2F0]
  0010c	e1a02006	 mov         r2, r6
  00110	e28d0000	 add         r0, sp, #0
  00114	eb000000	 bl          swprintf

; 178  :     s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_IVA2] = new IvaPowerDomainConstraint();

  00118	e3a000b4	 mov         r0, #0xB4
  0011c	eb000000	 bl          |??2@YAPAXI@Z|
  00120	e1b05000	 movs        r5, r0
  00124	0a000004	 beq         |$LN16@PWRDOM_Ini|
  00128	e1a00005	 mov         r0, r5
  0012c	eb000000	 bl          |??0PowerDomainConstraint@@QAA@XZ|
  00130	e59f32f8	 ldr         r3, [pc, #0x2F8]
  00134	e5853000	 str         r3, [r5]
  00138	ea000000	 b           |$LN17@PWRDOM_Ini|
  0013c		 |$LN16@PWRDOM_Ini|
  0013c	e3a05000	 mov         r5, #0
  00140		 |$LN17@PWRDOM_Ini|
  00140	e584503c	 str         r5, [r4, #0x3C]

; 179  :     if (s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_IVA2] != NULL)

  00144	e3550000	 cmp         r5, #0
  00148	0a000007	 beq         |$LN7@PWRDOM_Ini|

; 180  :         {
; 181  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_IVA2]->InitializePowerDomain(szBuffer);

  0014c	e28d1000	 add         r1, sp, #0
  00150	e1a00005	 mov         r0, r5
  00154	eb000000	 bl          |?InitializePowerDomain@PowerDomainConstraint@@QAAHPBG@Z|

; 182  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_IVA2]->FlushDomainPowerState();        

  00158	e594003c	 ldr         r0, [r4, #0x3C]
  0015c	e5903000	 ldr         r3, [r0]
  00160	e5933008	 ldr         r3, [r3, #8]
  00164	e1a0e00f	 mov         lr, pc
  00168	e12fff13	 bx          r3
  0016c		 |$LN7@PWRDOM_Ini|

; 183  :         }
; 184  : 
; 185  :     // usbhost
; 186  :     _stprintf(szBuffer, REGEDIT_POWERDOMAIN_FMT, szContext, REGEDIT_POWERDOMAIN_USBHOST);

  0016c	e59f32b8	 ldr         r3, [pc, #0x2B8]
  00170	e59f1288	 ldr         r1, [pc, #0x288]
  00174	e1a02006	 mov         r2, r6
  00178	e28d0000	 add         r0, sp, #0
  0017c	eb000000	 bl          swprintf

; 187  :     s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_USBHOST] = new UsbHostPowerDomainConstraint();

  00180	e3a000b4	 mov         r0, #0xB4
  00184	eb000000	 bl          |??2@YAPAXI@Z|
  00188	e1b05000	 movs        r5, r0
  0018c	0a000004	 beq         |$LN18@PWRDOM_Ini|
  00190	e1a00005	 mov         r0, r5
  00194	eb000000	 bl          |??0PowerDomainConstraint@@QAA@XZ|
  00198	e59f3288	 ldr         r3, [pc, #0x288]
  0019c	e5853000	 str         r3, [r5]
  001a0	ea000000	 b           |$LN19@PWRDOM_Ini|
  001a4		 |$LN18@PWRDOM_Ini|
  001a4	e3a05000	 mov         r5, #0
  001a8		 |$LN19@PWRDOM_Ini|
  001a8	e5845028	 str         r5, [r4, #0x28]

; 188  :     if (s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_USBHOST] != NULL)

  001ac	e3550000	 cmp         r5, #0
  001b0	0a000007	 beq         |$LN6@PWRDOM_Ini|

; 189  :         {
; 190  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_USBHOST]->InitializePowerDomain(szBuffer);

  001b4	e28d1000	 add         r1, sp, #0
  001b8	e1a00005	 mov         r0, r5
  001bc	eb000000	 bl          |?InitializePowerDomain@PowerDomainConstraint@@QAAHPBG@Z|

; 191  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_USBHOST]->FlushDomainPowerState();

  001c0	e5940028	 ldr         r0, [r4, #0x28]
  001c4	e5903000	 ldr         r3, [r0]
  001c8	e5933008	 ldr         r3, [r3, #8]
  001cc	e1a0e00f	 mov         lr, pc
  001d0	e12fff13	 bx          r3
  001d4		 |$LN6@PWRDOM_Ini|

; 192  :         }
; 193  : 
; 194  :     // dss
; 195  :     _stprintf(szBuffer, REGEDIT_POWERDOMAIN_FMT, szContext, REGEDIT_POWERDOMAIN_DSS);

  001d4	e59f3248	 ldr         r3, [pc, #0x248]
  001d8	e59f1220	 ldr         r1, [pc, #0x220]
  001dc	e1a02006	 mov         r2, r6
  001e0	e28d0000	 add         r0, sp, #0
  001e4	eb000000	 bl          swprintf

; 196  :     s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_DSS] = new DssPowerDomainConstraint();

  001e8	e3a000b4	 mov         r0, #0xB4
  001ec	eb000000	 bl          |??2@YAPAXI@Z|
  001f0	e1b05000	 movs        r5, r0
  001f4	0a000004	 beq         |$LN20@PWRDOM_Ini|
  001f8	e1a00005	 mov         r0, r5
  001fc	eb000000	 bl          |??0PowerDomainConstraint@@QAA@XZ|
  00200	e59f3218	 ldr         r3, [pc, #0x218]
  00204	e5853000	 str         r3, [r5]
  00208	ea000000	 b           |$LN21@PWRDOM_Ini|
  0020c		 |$LN20@PWRDOM_Ini|
  0020c	e3a05000	 mov         r5, #0
  00210		 |$LN21@PWRDOM_Ini|
  00210	e5845034	 str         r5, [r4, #0x34]

; 197  :     if (s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_DSS] != NULL)

  00214	e3550000	 cmp         r5, #0
  00218	0a000007	 beq         |$LN5@PWRDOM_Ini|

; 198  :         {
; 199  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_DSS]->InitializePowerDomain(szBuffer);

  0021c	e28d1000	 add         r1, sp, #0
  00220	e1a00005	 mov         r0, r5
  00224	eb000000	 bl          |?InitializePowerDomain@PowerDomainConstraint@@QAAHPBG@Z|

; 200  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_DSS]->FlushDomainPowerState();

  00228	e5940034	 ldr         r0, [r4, #0x34]
  0022c	e5903000	 ldr         r3, [r0]
  00230	e5933008	 ldr         r3, [r3, #8]
  00234	e1a0e00f	 mov         lr, pc
  00238	e12fff13	 bx          r3
  0023c		 |$LN5@PWRDOM_Ini|

; 201  :         }
; 202  : 
; 203  :     // sgx
; 204  :     _stprintf(szBuffer, REGEDIT_POWERDOMAIN_FMT, szContext, REGEDIT_POWERDOMAIN_SGX);

  0023c	e59f31d8	 ldr         r3, [pc, #0x1D8]
  00240	e59f11b8	 ldr         r1, [pc, #0x1B8]
  00244	e1a02006	 mov         r2, r6
  00248	e28d0000	 add         r0, sp, #0
  0024c	eb000000	 bl          swprintf

; 205  :     s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_SGX] = new SgxPowerDomainConstraint();

  00250	e3a000b4	 mov         r0, #0xB4
  00254	eb000000	 bl          |??2@YAPAXI@Z|
  00258	e1b05000	 movs        r5, r0
  0025c	0a000004	 beq         |$LN22@PWRDOM_Ini|
  00260	e1a00005	 mov         r0, r5
  00264	eb000000	 bl          |??0PowerDomainConstraint@@QAA@XZ|
  00268	e59f31a8	 ldr         r3, [pc, #0x1A8]
  0026c	e5853000	 str         r3, [r5]
  00270	ea000000	 b           |$LN23@PWRDOM_Ini|
  00274		 |$LN22@PWRDOM_Ini|
  00274	e3a05000	 mov         r5, #0
  00278		 |$LN23@PWRDOM_Ini|
  00278	e5845044	 str         r5, [r4, #0x44]

; 206  :     if (s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_SGX] != NULL)

  0027c	e3550000	 cmp         r5, #0
  00280	0a000007	 beq         |$LN4@PWRDOM_Ini|

; 207  :         {
; 208  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_SGX]->InitializePowerDomain(szBuffer);

  00284	e28d1000	 add         r1, sp, #0
  00288	e1a00005	 mov         r0, r5
  0028c	eb000000	 bl          |?InitializePowerDomain@PowerDomainConstraint@@QAAHPBG@Z|

; 209  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_SGX]->FlushDomainPowerState();

  00290	e5940044	 ldr         r0, [r4, #0x44]
  00294	e5903000	 ldr         r3, [r0]
  00298	e5933008	 ldr         r3, [r3, #8]
  0029c	e1a0e00f	 mov         lr, pc
  002a0	e12fff13	 bx          r3
  002a4		 |$LN4@PWRDOM_Ini|

; 210  :         }
; 211  : 
; 212  :     // peripheral
; 213  :     _stprintf(szBuffer, REGEDIT_POWERDOMAIN_FMT, szContext, REGEDIT_POWERDOMAIN_PERIPHERAL);

  002a4	e59f3168	 ldr         r3, [pc, #0x168]
  002a8	e59f1150	 ldr         r1, [pc, #0x150]
  002ac	e1a02006	 mov         r2, r6
  002b0	e28d0000	 add         r0, sp, #0
  002b4	eb000000	 bl          swprintf

; 214  :     s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_PERIPHERAL] = new PeripheralPowerDomainConstraint();

  002b8	e3a000b4	 mov         r0, #0xB4
  002bc	eb000000	 bl          |??2@YAPAXI@Z|
  002c0	e1b05000	 movs        r5, r0
  002c4	0a000004	 beq         |$LN24@PWRDOM_Ini|
  002c8	e1a00005	 mov         r0, r5
  002cc	eb000000	 bl          |??0PowerDomainConstraint@@QAA@XZ|
  002d0	e59f3138	 ldr         r3, [pc, #0x138]
  002d4	e5853000	 str         r3, [r5]
  002d8	ea000000	 b           |$LN25@PWRDOM_Ini|
  002dc		 |$LN24@PWRDOM_Ini|
  002dc	e3a05000	 mov         r5, #0
  002e0		 |$LN25@PWRDOM_Ini|
  002e0	e5845024	 str         r5, [r4, #0x24]

; 215  :     if (s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_PERIPHERAL] != NULL)

  002e4	e3550000	 cmp         r5, #0
  002e8	0a000007	 beq         |$LN3@PWRDOM_Ini|

; 216  :         {
; 217  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_PERIPHERAL]->InitializePowerDomain(szBuffer);

  002ec	e28d1000	 add         r1, sp, #0
  002f0	e1a00005	 mov         r0, r5
  002f4	eb000000	 bl          |?InitializePowerDomain@PowerDomainConstraint@@QAAHPBG@Z|

; 218  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_PERIPHERAL]->FlushDomainPowerState();

  002f8	e5940024	 ldr         r0, [r4, #0x24]
  002fc	e5903000	 ldr         r3, [r0]
  00300	e5933008	 ldr         r3, [r3, #8]
  00304	e1a0e00f	 mov         lr, pc
  00308	e12fff13	 bx          r3
  0030c		 |$LN3@PWRDOM_Ini|

; 219  :         }
; 220  : 
; 221  :     // camera
; 222  :     _stprintf(szBuffer, REGEDIT_POWERDOMAIN_FMT, szContext, REGEDIT_POWERDOMAIN_CAMERA);

  0030c	e59f30f8	 ldr         r3, [pc, #0xF8]
  00310	e59f10e8	 ldr         r1, [pc, #0xE8]
  00314	e1a02006	 mov         r2, r6
  00318	e28d0000	 add         r0, sp, #0
  0031c	eb000000	 bl          swprintf

; 223  :     s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_CAMERA] = new CameraPowerDomainConstraint();

  00320	e3a000b4	 mov         r0, #0xB4
  00324	eb000000	 bl          |??2@YAPAXI@Z|
  00328	e1b05000	 movs        r5, r0
  0032c	0a000004	 beq         |$LN26@PWRDOM_Ini|
  00330	e1a00005	 mov         r0, r5
  00334	eb000000	 bl          |??0PowerDomainConstraint@@QAA@XZ|
  00338	e59f30c8	 ldr         r3, [pc, #0xC8]
  0033c	e5853000	 str         r3, [r5]
  00340	ea000000	 b           |$LN27@PWRDOM_Ini|
  00344		 |$LN26@PWRDOM_Ini|
  00344	e3a05000	 mov         r5, #0
  00348		 |$LN27@PWRDOM_Ini|
  00348	e5845040	 str         r5, [r4, #0x40]

; 224  :     if (s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_CAMERA] != NULL)

  0034c	e3550000	 cmp         r5, #0
  00350	0a000007	 beq         |$LN2@PWRDOM_Ini|

; 225  :         {
; 226  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_CAMERA]->InitializePowerDomain(szBuffer);

  00354	e28d1000	 add         r1, sp, #0
  00358	e1a00005	 mov         r0, r5
  0035c	eb000000	 bl          |?InitializePowerDomain@PowerDomainConstraint@@QAAHPBG@Z|

; 227  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_CAMERA]->FlushDomainPowerState();

  00360	e5940040	 ldr         r0, [r4, #0x40]
  00364	e5903000	 ldr         r3, [r0]
  00368	e5933008	 ldr         r3, [r3, #8]
  0036c	e1a0e00f	 mov         lr, pc
  00370	e12fff13	 bx          r3
  00374		 |$LN2@PWRDOM_Ini|

; 228  :         }
; 229  : 
; 230  :     // neon
; 231  :     _stprintf(szBuffer, REGEDIT_POWERDOMAIN_FMT, szContext, REGEDIT_POWERDOMAIN_NEON);

  00374	e59f3088	 ldr         r3, [pc, #0x88]
  00378	e59f1080	 ldr         r1, [pc, #0x80]
  0037c	e1a02006	 mov         r2, r6
  00380	e28d0000	 add         r0, sp, #0
  00384	eb000000	 bl          swprintf

; 232  :     s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_NEON] = new NeonPowerDomainConstraint();

  00388	e3a000b4	 mov         r0, #0xB4
  0038c	eb000000	 bl          |??2@YAPAXI@Z|
  00390	e1b05000	 movs        r5, r0
  00394	0a000004	 beq         |$LN28@PWRDOM_Ini|
  00398	e1a00005	 mov         r0, r5
  0039c	eb000000	 bl          |??0PowerDomainConstraint@@QAA@XZ|
  003a0	e59f3054	 ldr         r3, [pc, #0x54]
  003a4	e5853000	 str         r3, [r5]
  003a8	ea000000	 b           |$LN29@PWRDOM_Ini|
  003ac		 |$LN28@PWRDOM_Ini|
  003ac	e3a05000	 mov         r5, #0
  003b0		 |$LN29@PWRDOM_Ini|
  003b0	e5845038	 str         r5, [r4, #0x38]

; 233  :     if (s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_NEON] != NULL)

  003b4	e3550000	 cmp         r5, #0
  003b8	0a000007	 beq         |$LN1@PWRDOM_Ini|

; 234  :         {
; 235  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_NEON]->InitializePowerDomain(szBuffer);

  003bc	e28d1000	 add         r1, sp, #0
  003c0	e1a00005	 mov         r0, r5
  003c4	eb000000	 bl          |?InitializePowerDomain@PowerDomainConstraint@@QAAHPBG@Z|

; 236  :         s_PowerDomainInfo.rgPowerDomainStates[POWERDOMAIN_NEON]->FlushDomainPowerState();

  003c8	e5940038	 ldr         r0, [r4, #0x38]
  003cc	e5903000	 ldr         r3, [r0]
  003d0	e5933008	 ldr         r3, [r3, #8]
  003d4	e1a0e00f	 mov         lr, pc
  003d8	e12fff13	 bx          r3
  003dc		 |$LN1@PWRDOM_Ini|

; 237  :         }
; 238  : 
; 239  :     InitializeCriticalSection(&s_PowerDomainInfo.cs);

  003dc	e1a00004	 mov         r0, r4
  003e0	eb000000	 bl          InitializeCriticalSection

; 240  :     
; 241  :     return (HANDLE)&s_PowerDomainInfo;

  003e4	e59d0208	 ldr         r0, [sp, #0x208]
  003e8	eb000000	 bl          __security_check_cookie

; 242  : } 

  003ec	e1a00004	 mov         r0, r4
  003f0	e28ddf83	 add         sp, sp, #0x83, 30
  003f4	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  003f8	e12fff1e	 bx          lr
  003fc		 |$LN60@PWRDOM_Ini|
  003fc		 |$LN61@PWRDOM_Ini|
  003fc	00000000	 DCD         |??_7NeonPowerDomainConstraint@@6B@|
  00400		 |$LN62@PWRDOM_Ini|
  00400	00000000	 DCD         |??_C@_1M@DFKENGJN@?$AA?$CF?$AAs?$AA?2?$AA?$CF?$AAs?$AA?$AA@|
  00404		 |$LN63@PWRDOM_Ini|
  00404	00000000	 DCD         |??_C@_19HILOPLKE@?$AAN?$AAE?$AAO?$AAN?$AA?$AA@|
  00408		 |$LN64@PWRDOM_Ini|
  00408	00000000	 DCD         |??_7CameraPowerDomainConstraint@@6B@|
  0040c		 |$LN65@PWRDOM_Ini|
  0040c	00000000	 DCD         |??_C@_1O@NAINHJLA@?$AAC?$AAA?$AAM?$AAE?$AAR?$AAA?$AA?$AA@|
  00410		 |$LN66@PWRDOM_Ini|
  00410	00000000	 DCD         |??_7PeripheralPowerDomainConstraint@@6B@|
  00414		 |$LN67@PWRDOM_Ini|
  00414	00000000	 DCD         |??_C@_1BG@CDNAOEMP@?$AAP?$AAE?$AAR?$AAI?$AAP?$AAH?$AAE?$AAR?$AAA?$AAL?$AA?$AA@|
  00418		 |$LN68@PWRDOM_Ini|
  00418	00000000	 DCD         |??_7SgxPowerDomainConstraint@@6B@|
  0041c		 |$LN69@PWRDOM_Ini|
  0041c	00000000	 DCD         |??_C@_17FNJAMJCK@?$AAS?$AAG?$AAX?$AA?$AA@|
  00420		 |$LN70@PWRDOM_Ini|
  00420	00000000	 DCD         |??_7DssPowerDomainConstraint@@6B@|
  00424		 |$LN71@PWRDOM_Ini|
  00424	00000000	 DCD         |??_C@_17GEKIDGJE@?$AAD?$AAS?$AAS?$AA?$AA@|
  00428		 |$LN72@PWRDOM_Ini|
  00428	00000000	 DCD         |??_7UsbHostPowerDomainConstraint@@6B@|
  0042c		 |$LN73@PWRDOM_Ini|
  0042c	00000000	 DCD         |??_C@_1BA@JFNDBDEI@?$AAU?$AAS?$AAB?$AAH?$AAO?$AAS?$AAT?$AA?$AA@|
  00430		 |$LN74@PWRDOM_Ini|
  00430	00000000	 DCD         |??_7IvaPowerDomainConstraint@@6B@|
  00434		 |$LN75@PWRDOM_Ini|
  00434	00000000	 DCD         |??_C@_17FFHACNOC@?$AAI?$AAV?$AAA?$AA?$AA@|
  00438		 |$LN76@PWRDOM_Ini|
  00438	00000000	 DCD         |??_7CorePowerDomainConstraint@@6B@|
  0043c		 |$LN77@PWRDOM_Ini|
  0043c	00000000	 DCD         |??_C@_19HEMJPKJI@?$AAC?$AAO?$AAR?$AAE?$AA?$AA@|
  00440		 |$LN78@PWRDOM_Ini|
  00440	00000000	 DCD         |??_7MpuPowerDomainConstraint@@6B@|
  00444		 |$LN79@PWRDOM_Ini|
  00444	00000000	 DCD         |??_C@_17NIBIAAMN@?$AAM?$AAP?$AAU?$AA?$AA@|
  00448		 |$LN80@PWRDOM_Ini|
  00448	00000000	 DCD         |s_PowerDomainInfo|
  0044c		 |$LN81@PWRDOM_Ini|
  0044c	00000000	 DCD         |__security_cookie|
  00450		 |$M43573|

			 ENDP  ; |?PWRDOM_InitConstraint@@YAPAXPBG@Z|, PWRDOM_InitConstraint

	EXPORT	|?PWRDOM_RemoveConstraintCallback@@YAHPAX@Z| ; PWRDOM_RemoveConstraintCallback

  00000			 AREA	 |.pdata|, PDATA
|$T43710| DCD	|$LN53@PWRDOM_Rem|
	DCD	0x40002502
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PWRDOM_RemoveConstraintCallback@@YAHPAX@Z| PROC ; PWRDOM_RemoveConstraintCallback

; 482  : {

  00000		 |$LN53@PWRDOM_Rem|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M43707|
  00008	e1a07000	 mov         r7, r0

; 483  :     BOOL rc = FALSE;
; 484  :     list<PowerDomainCallbackInfo_t*>::iterator iter;
; 485  :     
; 486  :     // find entry with matching callback info
; 487  :     Lock();

  0000c	e59f0078	 ldr         r0, [pc, #0x78]
  00010	e3a05000	 mov         r5, #0
  00014	eb000000	 bl          EnterCriticalSection

; 488  :     for (iter = s_CallbackList.begin(); iter != s_CallbackList.end(); ++iter)

  00018	e59f6070	 ldr         r6, [pc, #0x70]
  0001c	e5962004	 ldr         r2, [r6, #4]
  00020	e5924000	 ldr         r4, [r2]
  00024		 |$LL21@PWRDOM_Rem|
  00024	e1540002	 cmp         r4, r2
  00028	03a03001	 moveq       r3, #1
  0002c	13a03000	 movne       r3, #0
  00030	e21330ff	 ands        r3, r3, #0xFF
  00034	03a03001	 moveq       r3, #1
  00038	13a03000	 movne       r3, #0
  0003c	e21330ff	 ands        r3, r3, #0xFF

; 489  :         {
; 490  :         if ((*iter)->hCallbackContext == hConstraintCallback)
; 491  :             {
; 492  :             // free resources
; 493  :             LocalFree(*iter);
; 494  :             s_CallbackList.erase(iter);
; 495  :             rc = TRUE;
; 496  :             break;
; 497  :             }
; 498  :         }
; 499  :     Unlock();
; 500  : 
; 501  :     return rc;
; 502  : } 

  00040	0a00000b	 beq         |$LN2@PWRDOM_Rem|
  00044	e5943008	 ldr         r3, [r4, #8]
  00048	e5933010	 ldr         r3, [r3, #0x10]
  0004c	e1530007	 cmp         r3, r7
  00050	15944000	 ldrne       r4, [r4]
  00054	1afffff2	 bne         |$LL21@PWRDOM_Rem|
  00058	e5940008	 ldr         r0, [r4, #8]
  0005c	eb000000	 bl          LocalFree
  00060	e1a02004	 mov         r2, r4
  00064	e28d1000	 add         r1, sp, #0
  00068	e1a00006	 mov         r0, r6
  0006c	eb000000	 bl          |?erase@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@V312@@Z|
  00070	e3a05001	 mov         r5, #1
  00074		 |$LN2@PWRDOM_Rem|
  00074	e59f0010	 ldr         r0, [pc, #0x10]
  00078	eb000000	 bl          LeaveCriticalSection
  0007c	e1a00005	 mov         r0, r5
  00080	e28dd004	 add         sp, sp, #4
  00084	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00088	e12fff1e	 bx          lr
  0008c		 |$LN54@PWRDOM_Rem|
  0008c		 |$LN55@PWRDOM_Rem|
  0008c	00000000	 DCD         |s_PowerDomainInfo|
  00090		 |$LN56@PWRDOM_Rem|
  00090	00000000	 DCD         |s_CallbackList|
  00094		 |$M43708|

			 ENDP  ; |?PWRDOM_RemoveConstraintCallback@@YAHPAX@Z|, PWRDOM_RemoveConstraintCallback

	EXPORT	|??0?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@ABV?$allocator@PAUPowerDomainCallbackInfo_t@@@1@@Z| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >
; File c:\wince600\public\common\sdk\inc\list

  00000			 AREA	 |.pdata|, PDATA
|$T43769| DCD	|$LN22@list|
	DCD	0x40000c01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@ABV?$allocator@PAUPowerDomainCallbackInfo_t@@@1@@Z| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >

; 145  : 		_Head(_Buynode()), _Size(0) {}

  00000		 |$LN22@list|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M43766|
  00004	e1a04000	 mov         r4, r0
  00008	e3a0000c	 mov         r0, #0xC
  0000c	eb000000	 bl          |??2@YAPAXI@Z|
  00010	e5800000	 str         r0, [r0]
  00014	e5800004	 str         r0, [r0, #4]
  00018	e3a03000	 mov         r3, #0
  0001c	e5840004	 str         r0, [r4, #4]
  00020	e1a00004	 mov         r0, r4
  00024	e5843008	 str         r3, [r4, #8]
  00028	e8bd4010	 ldmia       sp!, {r4, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M43767|

			 ENDP  ; |??0?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@ABV?$allocator@PAUPowerDomainCallbackInfo_t@@@1@@Z|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >

	EXPORT	|??1?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@XZ| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::~list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >
; File c:\wince600\public\common\sdk\inc\xmemory

  00000			 AREA	 |.pdata|, PDATA
|$T43829| DCD	|$LN23@list@2|
	DCD	0x40000f02
; Function compile flags: /Ogspy
; File c:\wince600\public\common\sdk\inc\list

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@XZ| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::~list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >

; 165  : 		{erase(begin(), end());

  00000		 |$LN23@list@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M43826|
  00008	e1a04000	 mov         r4, r0
  0000c	e5943004	 ldr         r3, [r4, #4]
  00010	e28d1000	 add         r1, sp, #0
  00014	e5932000	 ldr         r2, [r3]
  00018	eb000000	 bl          |?erase@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@V312@0@Z|

; 166  : 		_Freenode(_Head);

  0001c	e5940004	 ldr         r0, [r4, #4]
  00020	eb000000	 bl          |??3@YAXPAX@Z|

; 167  : 		_Head = 0, _Size = 0; }

  00024	e3a03000	 mov         r3, #0
  00028	e5843004	 str         r3, [r4, #4]
  0002c	e5843008	 str         r3, [r4, #8]
  00030	e28dd004	 add         sp, sp, #4
  00034	e8bd4010	 ldmia       sp!, {r4, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$M43827|

			 ENDP  ; |??1?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@XZ|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::~list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >

	EXPORT	|?insert@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@V312@ABQAUPowerDomainCallbackInfo_t@@@Z| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::insert

  00000			 AREA	 |.pdata|, PDATA
|$T43947| DCD	|$LN48@insert|
	DCD	0x40001b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?insert@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@V312@ABQAUPowerDomainCallbackInfo_t@@@Z| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::insert

; 232  : 		{_Nodeptr _S = _P._Mynode();

  00000		 |$LN48@insert|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004		 |$M43944|
  00004	e1a09003	 mov         r9, r3
  00008	e1a04002	 mov         r4, r2
  0000c	e1a05001	 mov         r5, r1
  00010	e1a06000	 mov         r6, r0

; 233  : 		_Acc::_Prev(_S) = _Buynode(_S, _Acc::_Prev(_S));

  00014	e1a08004	 mov         r8, r4
  00018	e5b87004	 ldr         r7, [r8, #4]!
  0001c	e3a0000c	 mov         r0, #0xC
  00020	eb000000	 bl          |??2@YAPAXI@Z|
  00024	e3570000	 cmp         r7, #0
  00028	01a07000	 moveq       r7, r0
  0002c	e5804000	 str         r4, [r0]
  00030	e5807004	 str         r7, [r0, #4]

; 234  : 		_S = _Acc::_Prev(_S);

  00034	e1a02000	 mov         r2, r0
  00038	e5880000	 str         r0, [r8]

; 235  : 		_Acc::_Next(_Acc::_Prev(_S)) = _S;

  0003c	e5923004	 ldr         r3, [r2, #4]

; 236  : 		allocator.construct(&_Acc::_Value(_S), _X);

  00040	e2921008	 adds        r1, r2, #8

; 237  : 		++_Size;
; 238  : 		return (iterator(_S)); }

  00044	e5852000	 str         r2, [r5]
  00048	e5832000	 str         r2, [r3]
  0004c	15993000	 ldrne       r3, [r9]
  00050	e1a00005	 mov         r0, r5
  00054	15813000	 strne       r3, [r1]
  00058	e5963008	 ldr         r3, [r6, #8]
  0005c	e2833001	 add         r3, r3, #1
  00060	e5863008	 str         r3, [r6, #8]
  00064	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  00068	e12fff1e	 bx          lr
  0006c		 |$M43945|

			 ENDP  ; |?insert@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@V312@ABQAUPowerDomainCallbackInfo_t@@@Z|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::insert

	EXPORT	|?push_back@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAAXABQAUPowerDomainCallbackInfo_t@@@Z| ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::push_back

  00000			 AREA	 |.pdata|, PDATA
|$T43975| DCD	|$LN11@push_back|
	DCD	0x40000902
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?push_back@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAAXABQAUPowerDomainCallbackInfo_t@@@Z| PROC ; std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::push_back

; 222  : 		{insert(end(), _X); }

  00000		 |$LN11@push_back|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M43972|
  00008	e1a03001	 mov         r3, r1
  0000c	e5902004	 ldr         r2, [r0, #4]
  00010	e28d1000	 add         r1, sp, #0
  00014	eb000000	 bl          |?insert@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@V312@ABQAUPowerDomainCallbackInfo_t@@@Z|
  00018	e28dd004	 add         sp, sp, #4
  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M43973|

			 ENDP  ; |?push_back@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAAXABQAUPowerDomainCallbackInfo_t@@@Z|, std::list<PowerDomainCallbackInfo_t *,std::allocator<PowerDomainCallbackInfo_t *> >::push_back

	EXPORT	|?PWRDOM_InsertConstraintCallback@@YAPAXPAX00I0@Z| ; PWRDOM_InsertConstraintCallback
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\pm\constraintadapters\powerdomainconstraint\powerdomaincontext.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T44028| DCD	|$LN25@PWRDOM_Ins|
	DCD	0x40002802
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PWRDOM_InsertConstraintCallback@@YAPAXPAX00I0@Z| PROC ; PWRDOM_InsertConstraintCallback

; 436  : {

  00000		 |$LN25@PWRDOM_Ins|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M44025|
  00008	e1a07001	 mov         r7, r1
  0000c	e1a06000	 mov         r6, r0

; 437  :     HANDLE rc = NULL;
; 438  :     DWORD *pDataNode;
; 439  :     DWORD id = (DWORD)hConstraintContext - 1;
; 440  :     PowerDomainCallbackInfo_t *pCallbackInfo;
; 441  : 
; 442  :     UNREFERENCED_PARAMETER(size);
; 443  :     UNREFERENCED_PARAMETER(pParam);
; 444  : 
; 445  :     // validate
; 446  :     if (id >s_PowerDomainInfo.IndexList.MaxIndex()) goto cleanUp;

  00010	e59f4084	 ldr         r4, [pc, #0x84]
  00014	e2465001	 sub         r5, r6, #1
  00018	e59430d8	 ldr         r3, [r4, #0xD8]
  0001c	e1550003	 cmp         r5, r3
  00020	8a000018	 bhi         |$cleanUp$41422|

; 447  : 
; 448  :     // get data node
; 449  :     pDataNode = s_PowerDomainInfo.IndexList.GetIndex(id);

  00024	e1a01005	 mov         r1, r5
  00028	e2840050	 add         r0, r4, #0x50
  0002c	eb000000	 bl          |?GetIndex@?$IndexList@K@@QAAPAKK@Z|
  00030	e3500000	 cmp         r0, #0

; 450  :     if (pDataNode == NULL) goto cleanUp;

  00034	0a000013	 beq         |$cleanUp$41422|

; 451  : 
; 452  :     // allocate callback structure
; 453  :     pCallbackInfo = (PowerDomainCallbackInfo_t*)LocalAlloc(LPTR, sizeof(PowerDomainCallbackInfo_t));

  00038	e3a01014	 mov         r1, #0x14
  0003c	e3a00040	 mov         r0, #0x40
  00040	eb000000	 bl          LocalAlloc
  00044	e3500000	 cmp         r0, #0
  00048	e58d0000	 str         r0, [sp]

; 454  :     if (pCallbackInfo == NULL) goto cleanUp;

  0004c	0a00000d	 beq         |$cleanUp$41422|

; 455  : 
; 456  :     // initialize structure
; 457  :     pCallbackInfo->idContext = id;
; 458  :     pCallbackInfo->fnCallback = (ConstraintCallback)pCallback;
; 459  :     pCallbackInfo->hConstraintContext = hConstraintContext;
; 460  :     pCallbackInfo->hCallbackContext = pCallbackInfo;
; 461  :     pCallbackInfo->hRefContext = hRefContext;

  00050	e59d301c	 ldr         r3, [sp, #0x1C]
  00054	e88000a0	 stmia       r0, {r5, r7}
  00058	e580600c	 str         r6, [r0, #0xC]
  0005c	e5800010	 str         r0, [r0, #0x10]
  00060	e5803008	 str         r3, [r0, #8]

; 462  :     
; 463  :     // insert into callback list
; 464  :     Lock();

  00064	e1a00004	 mov         r0, r4
  00068	eb000000	 bl          EnterCriticalSection

; 465  :     s_CallbackList.push_back(pCallbackInfo);

  0006c	e59f0024	 ldr         r0, [pc, #0x24]
  00070	e28d3000	 add         r3, sp, #0
  00074	e28d1004	 add         r1, sp, #4
  00078	e5902004	 ldr         r2, [r0, #4]
  0007c	eb000000	 bl          |?insert@?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA?AViterator@12@V312@ABQAUPowerDomainCallbackInfo_t@@@Z|

; 466  :     Unlock();

  00080	e1a00004	 mov         r0, r4
  00084	eb000000	 bl          LeaveCriticalSection
  00088		 |$cleanUp$41422|

; 467  :     
; 468  : cleanUp:
; 469  :     return rc;

  00088	e3a00000	 mov         r0, #0

; 470  : } 

  0008c	e28dd008	 add         sp, sp, #8
  00090	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00094	e12fff1e	 bx          lr
  00098		 |$LN26@PWRDOM_Ins|
  00098		 |$LN27@PWRDOM_Ins|
  00098	00000000	 DCD         |s_CallbackList|
  0009c		 |$LN28@PWRDOM_Ins|
  0009c	00000000	 DCD         |s_PowerDomainInfo|
  000a0		 |$M44026|

			 ENDP  ; |?PWRDOM_InsertConstraintCallback@@YAPAXPAX00I0@Z|, PWRDOM_InsertConstraintCallback

	IMPORT	|atexit|
; File c:\wince600\public\common\sdk\inc\list

  00000			 AREA	 |.pdata|, PDATA
|$T44106| DCD	|$LN24@dynamic|
	DCD	0x40001001
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\pm\constraintadapters\powerdomainconstraint\powerdomaincontext.cpp

  00000			 AREA	 |.text$yc|, CODE, ARM

  00000		 |??__Es_CallbackList@@YAXXZ| PROC	; `dynamic initializer for 's_CallbackList''

; 69   : static list<PowerDomainCallbackInfo_t*> s_CallbackList;

  00000		 |$LN24@dynamic|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M44103|
  00004	e3a0000c	 mov         r0, #0xC
  00008	eb000000	 bl          |??2@YAPAXI@Z|
  0000c	e59f2028	 ldr         r2, [pc, #0x28]
  00010	e1a03000	 mov         r3, r0
  00014	e5833000	 str         r3, [r3]
  00018	e59f0018	 ldr         r0, [pc, #0x18]
  0001c	e5833004	 str         r3, [r3, #4]
  00020	e5823004	 str         r3, [r2, #4]
  00024	e3a03000	 mov         r3, #0
  00028	e5823008	 str         r3, [r2, #8]
  0002c	eb000000	 bl          atexit
  00030	e49de004	 ldr         lr, [sp], #4
  00034	e12fff1e	 bx          lr
  00038		 |$LN25@dynamic|
  00038		 |$LN26@dynamic|
  00038	00000000	 DCD         |??__Fs_CallbackList@@YAXXZ|
  0003c		 |$LN27@dynamic|
  0003c	00000000	 DCD         |s_CallbackList|
  00040		 |$M44104|

			 ENDP  ; |??__Es_CallbackList@@YAXXZ|, `dynamic initializer for 's_CallbackList''

; File c:\wince600\platform\common\src\soc\common_ti_v1\common_ti\pm\inc\indexlist.h

  00000			 AREA	 |.pdata|, PDATA
|$T44125| DCD	|$LN9@dynamic@2|
	DCD	0x40000e01
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\pm\constraintadapters\powerdomainconstraint\powerdomaincontext.cpp

  00000			 AREA	 |.text$yc|, CODE, ARM

  00000		 |??__Es_PowerDomainInfo@@YAXXZ| PROC	; `dynamic initializer for 's_PowerDomainInfo''

; 70   : static PowerDomainConstraintInfo_t  s_PowerDomainInfo;

  00000		 |$LN9@dynamic@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M44122|
  00004	e59f4028	 ldr         r4, [pc, #0x28]
  00008	e3a02088	 mov         r2, #0x88
  0000c	e3a01000	 mov         r1, #0
  00010	e2840050	 add         r0, r4, #0x50
  00014	eb000000	 bl          memset
  00018	e59f0010	 ldr         r0, [pc, #0x10]
  0001c	e3a0301f	 mov         r3, #0x1F
  00020	e58430d8	 str         r3, [r4, #0xD8]
  00024	eb000000	 bl          atexit
  00028	e8bd4010	 ldmia       sp!, {r4, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$LN10@dynamic@2|
  00030		 |$LN11@dynamic@2|
  00030	00000000	 DCD         |??__Fs_PowerDomainInfo@@YAXXZ|
  00034		 |$LN12@dynamic@2|
  00034	00000000	 DCD         |s_PowerDomainInfo|
  00038		 |$M44123|

			 ENDP  ; |??__Es_PowerDomainInfo@@YAXXZ|, `dynamic initializer for 's_PowerDomainInfo''


  00000			 AREA	 |.pdata|, PDATA
|$T44159| DCD	|$LN14@dynamic@3|
	DCD	0x40000c01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text$yd|, CODE, ARM

  00000		 |??__Fs_PowerDomainInfo@@YAXXZ| PROC	; `dynamic atexit destructor for 's_PowerDomainInfo''
  00000		 |$LN14@dynamic@3|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M44156|
  00004	e59f3020	 ldr         r3, [pc, #0x20]
  00008	e5934050	 ldr         r4, [r3, #0x50]
  0000c	ea000002	 b           |$LN11@dynamic@3|
  00010		 |$LL6@dynamic@3|
  00010	e1a00004	 mov         r0, r4
  00014	e5944000	 ldr         r4, [r4]
  00018	eb000000	 bl          |??3@YAXPAX@Z|
  0001c		 |$LN11@dynamic@3|
  0001c	e3540000	 cmp         r4, #0
  00020	1afffffa	 bne         |$LL6@dynamic@3|
  00024	e8bd4010	 ldmia       sp!, {r4, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$LN15@dynamic@3|
  0002c		 |$LN16@dynamic@3|
  0002c	00000000	 DCD         |s_PowerDomainInfo|
  00030		 |$M44157|

			 ENDP  ; |??__Fs_PowerDomainInfo@@YAXXZ|, `dynamic atexit destructor for 's_PowerDomainInfo''


  00000			 AREA	 |.pdata|, PDATA
|$T44168| DCD	|$LN5@dynamic@4|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text$yd|, CODE, ARM

  00000		 |??__Fs_CallbackList@@YAXXZ| PROC	; `dynamic atexit destructor for 's_CallbackList''
  00000		 |$LN5@dynamic@4|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M44165|
  00004	e59f0008	 ldr         r0, [pc, #8]
  00008	eb000000	 bl          |??1?$list@PAUPowerDomainCallbackInfo_t@@V?$allocator@PAUPowerDomainCallbackInfo_t@@@std@@@std@@QAA@XZ|
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$LN6@dynamic@4|
  00014		 |$LN7@dynamic@4|
  00014	00000000	 DCD         |s_CallbackList|
  00018		 |$M44166|

			 ENDP  ; |??__Fs_CallbackList@@YAXXZ|, `dynamic atexit destructor for 's_CallbackList''


  00000			 AREA	 |.bss|, NOINIT
|s_PowerDomainInfo| % 0xdc
|s_CallbackList| % 0xc

  00000			 AREA	 |.CRT$XCU|, DATA
|s_CallbackList$initializer$| DCD |??__Es_CallbackList@@YAXXZ|
|s_PowerDomainInfo$initializer$| DCD |??__Es_PowerDomainInfo@@YAXXZ|
	END
