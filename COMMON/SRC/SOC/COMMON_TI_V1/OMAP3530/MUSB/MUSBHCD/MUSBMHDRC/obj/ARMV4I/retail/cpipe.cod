; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\OMAP3530\MUSB\MUSBHCD\MUSBMHDRC\cpipe.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_1DK@JPBDFEOB@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@IMCKALLA@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAD?$AAO?$AAN?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@CEGNOBAM@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAF?$AAA?$AAI?$AAL?$AAE?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@PGHDEMEK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAI?$AAG?$AAN?$AAA?$AAL?$AA_?$AAN?$AAE?$AAW?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1II@FBBOBKGN@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AAS?$AAE?$AAR?$AAT?$AA_?$AAN?$AAE?$AAW?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@LCLFDJDO@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAC?$AAR?$AAE?$AAA?$AAT?$AAE?$AA_?$AAN?$AAE?$AAW?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@COKEBMOE@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAC?$AAR?$AAE?$AAA?$AAT?$AAE?$AA_?$AAN?$AAE?$AAW?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@HPGGGHKI@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@KPBCOGEF@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@CFFAAPDL@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@NDHJOKMM@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAD?$AAE?$AAT?$AAE?$AAR?$AAM?$AAI?$AAN?$AAE?$AA_?$AAC@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@JADKDKDC@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@NPLCKJLH@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@MEMGEMJJ@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAE?$AAT?$AAU?$AAP?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@BCHKIAPP@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@FNPCBDHK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@BBOOKHNN@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAL?$AAE?$AAA?$AAV?$AAE?$AA_?$AAA?$AAD?$AAD?$AAR?$AAE@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@LGLHPFAK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@BLNLBKIO@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@NMCKCJLL@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAR?$AAE?$AAS?$AAE?$AAT?$AA_?$AAA?$AAN?$AAD?$AA_?$AAE@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@KNOIBOPH@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAU?$AAS?$AAI?$AAN?$AAG?$AA_?$AAA?$AAD?$AAD?$AAR?$AAE@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@COMJHLEF@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAO?$AAP?$AAE?$AAN?$AAI?$AAN?$AAG?$AA_?$AAE?$AAN?$AAD@| [ DATA ] ; `string'

  00000			 AREA	 |.data|, DATA
|cszCfgStateStrings| DCD |??_C@_1FI@COMJHLEF@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAO?$AAP?$AAE?$AAN?$AAI?$AAN?$AAG?$AA_?$AAE?$AAN?$AAD@|
	DCD	|??_C@_1EI@KNOIBOPH@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAU?$AAS?$AAI?$AAN?$AAG?$AA_?$AAA?$AAD?$AAD?$AAR?$AAE@|
	DCD	|??_C@_1FG@NMCKCJLL@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAR?$AAE?$AAS?$AAE?$AAT?$AA_?$AAA?$AAN?$AAD?$AA_?$AAE@|
	DCD	|??_C@_1HG@BLNLBKIO@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1FI@LGLHPFAK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1EI@BBOOKHNN@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAL?$AAE?$AAA?$AAV?$AAE?$AA_?$AAA?$AAD?$AAD?$AAR?$AAE@|
	DCD	|??_C@_1HM@FNPCBDHK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1GM@BCHKIAPP@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1HE@MEMGEMJJ@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAE?$AAT?$AAU?$AAP?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI@|
	DCD	|??_C@_1HM@NPLCKJLH@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1GM@JADKDKDC@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1GA@NDHJOKMM@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAD?$AAE?$AAT?$AAE?$AAR?$AAM?$AAI?$AAN?$AAE?$AA_?$AAC@|
	DCD	|??_C@_1FG@CFFAAPDL@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1HG@KPBCOGEF@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1GG@HPGGGHKI@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1EI@COKEBMOE@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAC?$AAR?$AAE?$AAA?$AAT?$AAE?$AA_?$AAN?$AAE?$AAW?$AA_@|
	DCD	|??_C@_1FC@LCLFDJDO@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAC?$AAR?$AAE?$AAA?$AAT?$AAE?$AA_?$AAN?$AAE?$AAW?$AA_@|
	DCD	|??_C@_1II@FBBOBKGN@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AAS?$AAE?$AAR?$AAT?$AA_?$AAN?$AAE?$AAW?$AA_@|
	DCD	|??_C@_1HO@PGHDEMEK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAI?$AAG?$AAN?$AAA?$AAL?$AA_?$AAN?$AAE?$AAW?$AA_@|
	DCD	|??_C@_1DI@CEGNOBAM@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAF?$AAA?$AAI?$AAL?$AAE?$AAD?$AA?$AA@|
	DCD	|??_C@_1DE@IMCKALLA@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAD?$AAO?$AAN?$AAE?$AA?$AA@|
	DCD	|??_C@_1DK@JPBDFEOB@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?$AA@|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@JPBDFEOB@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?$AA@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "I", 0x0, "N", 0x0, "V", 0x0, "A"
	DCB	0x0, "L", 0x0, "I", 0x0, "D", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@IMCKALLA@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAD?$AAO?$AAN?$AAE?$AA?$AA@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "D", 0x0, "O", 0x0, "N", 0x0, "E"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@CEGNOBAM@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAF?$AAA?$AAI?$AAL?$AAE?$AAD?$AA?$AA@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "F", 0x0, "A", 0x0, "I", 0x0, "L"
	DCB	0x0, "E", 0x0, "D", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@PGHDEMEK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAI?$AAG?$AAN?$AAA?$AAL?$AA_?$AAN?$AAE?$AAW?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "I", 0x0, "G", 0x0, "N"
	DCB	0x0, "A", 0x0, "L", 0x0, "_", 0x0, "N", 0x0, "E", 0x0, "W"
	DCB	0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C"
	DCB	0x0, "E", 0x0, "_", 0x0, "E", 0x0, "N", 0x0, "T", 0x0, "E"
	DCB	0x0, "R", 0x0, "_", 0x0, "O", 0x0, "P", 0x0, "E", 0x0, "R"
	DCB	0x0, "A", 0x0, "T", 0x0, "I", 0x0, "O", 0x0, "N", 0x0, "A"
	DCB	0x0, "L", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T"
	DCB	0x0, "E", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1II@FBBOBKGN@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AAS?$AAE?$AAR?$AAT?$AA_?$AAN?$AAE?$AAW?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "I", 0x0, "N", 0x0, "S", 0x0, "E"
	DCB	0x0, "R", 0x0, "T", 0x0, "_", 0x0, "N", 0x0, "E", 0x0, "W"
	DCB	0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C"
	DCB	0x0, "E", 0x0, "_", 0x0, "I", 0x0, "N", 0x0, "T", 0x0, "O"
	DCB	0x0, "_", 0x0, "U", 0x0, "P", 0x0, "S", 0x0, "T", 0x0, "R"
	DCB	0x0, "E", 0x0, "A", 0x0, "M", 0x0, "_", 0x0, "H", 0x0, "U"
	DCB	0x0, "B", 0x0, "_", 0x0, "P", 0x0, "O", 0x0, "R", 0x0, "T"
	DCB	0x0, "_", 0x0, "A", 0x0, "R", 0x0, "R", 0x0, "A", 0x0, "Y"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@LCLFDJDO@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAC?$AAR?$AAE?$AAA?$AAT?$AAE?$AA_?$AAN?$AAE?$AAW?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "C", 0x0, "R", 0x0, "E", 0x0, "A"
	DCB	0x0, "T", 0x0, "E", 0x0, "_", 0x0, "N", 0x0, "E", 0x0, "W"
	DCB	0x0, "_", 0x0, "F", 0x0, "U", 0x0, "N", 0x0, "C", 0x0, "T"
	DCB	0x0, "I", 0x0, "O", 0x0, "N", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@COKEBMOE@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAC?$AAR?$AAE?$AAA?$AAT?$AAE?$AA_?$AAN?$AAE?$AAW?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "C", 0x0, "R", 0x0, "E", 0x0, "A"
	DCB	0x0, "T", 0x0, "E", 0x0, "_", 0x0, "N", 0x0, "E", 0x0, "W"
	DCB	0x0, "_", 0x0, "H", 0x0, "U", 0x0, "B", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@HPGGGHKI@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "H"
	DCB	0x0, "U", 0x0, "B", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "S"
	DCB	0x0, "C", 0x0, "R", 0x0, "I", 0x0, "P", 0x0, "T", 0x0, "O"
	DCB	0x0, "R", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@KPBCOGEF@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "I"
	DCB	0x0, "N", 0x0, "I", 0x0, "T", 0x0, "I", 0x0, "A", 0x0, "L"
	DCB	0x0, "_", 0x0, "H", 0x0, "U", 0x0, "B", 0x0, "_", 0x0, "D"
	DCB	0x0, "E", 0x0, "S", 0x0, "C", 0x0, "R", 0x0, "I", 0x0, "P"
	DCB	0x0, "T", 0x0, "O", 0x0, "R", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@CFFAAPDL@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "C"
	DCB	0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@NDHJOKMM@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAD?$AAE?$AAT?$AAE?$AAR?$AAM?$AAI?$AAN?$AAE?$AA_?$AAC@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "T", 0x0, "E"
	DCB	0x0, "R", 0x0, "M", 0x0, "I", 0x0, "N", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "T", 0x0, "O", 0x0, "_", 0x0, "C", 0x0, "H"
	DCB	0x0, "O", 0x0, "O", 0x0, "S", 0x0, "E", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@JADKDKDC@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "C"
	DCB	0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G", 0x0, "_"
	DCB	0x0, "D", 0x0, "E", 0x0, "S", 0x0, "C", 0x0, "R", 0x0, "I"
	DCB	0x0, "P", 0x0, "T", 0x0, "O", 0x0, "R", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@NPLCKJLH@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "I"
	DCB	0x0, "N", 0x0, "I", 0x0, "T", 0x0, "I", 0x0, "A", 0x0, "L"
	DCB	0x0, "_", 0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I"
	DCB	0x0, "G", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "S", 0x0, "C"
	DCB	0x0, "R", 0x0, "I", 0x0, "P", 0x0, "T", 0x0, "O", 0x0, "R"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@MEMGEMJJ@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAE?$AAT?$AAU?$AAP?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "E", 0x0, "T", 0x0, "U"
	DCB	0x0, "P", 0x0, "_", 0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F"
	DCB	0x0, "I", 0x0, "G", 0x0, "U", 0x0, "R", 0x0, "A", 0x0, "T"
	DCB	0x0, "I", 0x0, "O", 0x0, "N", 0x0, "_", 0x0, "D", 0x0, "E"
	DCB	0x0, "S", 0x0, "C", 0x0, "R", 0x0, "I", 0x0, "P", 0x0, "T"
	DCB	0x0, "O", 0x0, "R", 0x0, "_", 0x0, "A", 0x0, "R", 0x0, "R"
	DCB	0x0, "A", 0x0, "Y", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@BCHKIAPP@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "D", 0x0, "E", 0x0, "S", 0x0, "C", 0x0, "R", 0x0, "I"
	DCB	0x0, "P", 0x0, "T", 0x0, "O", 0x0, "R", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@FNPCBDHK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "I"
	DCB	0x0, "N", 0x0, "I", 0x0, "T", 0x0, "I", 0x0, "A", 0x0, "L"
	DCB	0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C"
	DCB	0x0, "E", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "S", 0x0, "C"
	DCB	0x0, "R", 0x0, "I", 0x0, "P", 0x0, "T", 0x0, "O", 0x0, "R"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@BBOOKHNN@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAL?$AAE?$AAA?$AAV?$AAE?$AA_?$AAA?$AAD?$AAD?$AAR?$AAE@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "L", 0x0, "E", 0x0, "A", 0x0, "V"
	DCB	0x0, "E", 0x0, "_", 0x0, "A", 0x0, "D", 0x0, "D", 0x0, "R"
	DCB	0x0, "E", 0x0, "S", 0x0, "S", 0x0, "0", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@LGLHPFAK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "A"
	DCB	0x0, "D", 0x0, "D", 0x0, "R", 0x0, "E", 0x0, "S", 0x0, "S"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@BLNLBKIO@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "D", 0x0, "E", 0x0, "S", 0x0, "C", 0x0, "R", 0x0, "I"
	DCB	0x0, "P", 0x0, "T", 0x0, "O", 0x0, "R", 0x0, "_", 0x0, "T"
	DCB	0x0, "E", 0x0, "S", 0x0, "T", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@NMCKCJLL@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAR?$AAE?$AAS?$AAE?$AAT?$AA_?$AAA?$AAN?$AAD?$AA_?$AAE@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "S", 0x0, "E"
	DCB	0x0, "T", 0x0, "_", 0x0, "A", 0x0, "N", 0x0, "D", 0x0, "_"
	DCB	0x0, "E", 0x0, "N", 0x0, "A", 0x0, "B", 0x0, "L", 0x0, "E"
	DCB	0x0, "_", 0x0, "P", 0x0, "O", 0x0, "R", 0x0, "T", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@KNOIBOPH@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAU?$AAS?$AAI?$AAN?$AAG?$AA_?$AAA?$AAD?$AAD?$AAR?$AAE@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "U", 0x0, "S", 0x0, "I", 0x0, "N"
	DCB	0x0, "G", 0x0, "_", 0x0, "A", 0x0, "D", 0x0, "D", 0x0, "R"
	DCB	0x0, "E", 0x0, "S", 0x0, "S", 0x0, "0", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@COMJHLEF@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAO?$AAP?$AAE?$AAN?$AAI?$AAN?$AAG?$AA_?$AAE?$AAN?$AAD@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "O", 0x0, "P", 0x0, "E", 0x0, "N"
	DCB	0x0, "I", 0x0, "N", 0x0, "G", 0x0, "_", 0x0, "E", 0x0, "N"
	DCB	0x0, "D", 0x0, "P", 0x0, "O", 0x0, "I", 0x0, "N", 0x0, "T"
	DCB	0x0, "0", 0x0, "_", 0x0, "P", 0x0, "I", 0x0, "P", 0x0, "E"
	DCB	0x0, 0x0, 0x0				; `string'
	EXPORT	|??1CQH@@QAA@XZ|			; CQH::~CQH
	IMPORT	|DeleteCriticalSection|
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.h

  00000			 AREA	 |.pdata|, PDATA
|$T37246| DCD	|$LN5@CQH|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CQH@@QAA@XZ| PROC			; CQH::~CQH

; 138  :     ~CQH() { DeleteCriticalSection(&m_csCQTD); };

  00000		 |$LN5@CQH|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37243|
  00004	e280000c	 add         r0, r0, #0xC
  00008	eb000000	 bl          DeleteCriticalSection
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M37244|

			 ENDP  ; |??1CQH@@QAA@XZ|, CQH::~CQH

	EXPORT	|?InvalidNextTD@CQH@@QAAXXZ|		; CQH::InvalidNextTD

  00000			 AREA	 |.pdata|, PDATA
|$T37253| DCD	|$LN5@InvalidNex|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InvalidNextTD@CQH@@QAAXXZ| PROC	; CQH::InvalidNextTD

; 148  :     void InvalidNextTD() {;};

  00000		 |$LN5@InvalidNex|
  00000		 |$M37250|
  00000	e12fff1e	 bx          lr
  00004		 |$M37251|

			 ENDP  ; |?InvalidNextTD@CQH@@QAAXXZ|, CQH::InvalidNextTD

	EXPORT	|?ClearTDList@CQH@@QAAXXZ|		; CQH::ClearTDList

  00000			 AREA	 |.pdata|, PDATA
|$T37261| DCD	|$LN5@ClearTDLis|
	DCD	0x40000300
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ClearTDList@CQH@@QAAXXZ| PROC	; CQH::ClearTDList

; 157  :     void ClearTDList() { m_pCQHTDList = NULL;};

  00000		 |$LN5@ClearTDLis|
  00000		 |$M37258|
  00000	e3a03000	 mov         r3, #0
  00004	e5803004	 str         r3, [r0, #4]
  00008	e12fff1e	 bx          lr
  0000c		 |$M37259|

			 ENDP  ; |?ClearTDList@CQH@@QAAXXZ|, CQH::ClearTDList

	EXPORT	|?GetNextTransfer@CTransfer@@QAAPAV1@XZ| ; CTransfer::GetNextTransfer
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\trans.h

  00000			 AREA	 |.pdata|, PDATA
|$T37271| DCD	|$LN5@GetNextTra|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetNextTransfer@CTransfer@@QAAPAV1@XZ| PROC ; CTransfer::GetNextTransfer

; 58   :     CTransfer * GetNextTransfer(void) { return  m_pNextTransfer; };

  00000		 |$LN5@GetNextTra|
  00000		 |$M37268|
  00000	e590000c	 ldr         r0, [r0, #0xC]
  00004	e12fff1e	 bx          lr
  00008		 |$M37269|

			 ENDP  ; |?GetNextTransfer@CTransfer@@QAAPAV1@XZ|, CTransfer::GetNextTransfer

	EXPORT	|?SetNextTransfer@CTransfer@@QAAXPAV1@@Z| ; CTransfer::SetNextTransfer

  00000			 AREA	 |.pdata|, PDATA
|$T37280| DCD	|$LN5@SetNextTra|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetNextTransfer@CTransfer@@QAAXPAV1@@Z| PROC ; CTransfer::SetNextTransfer

; 59   :     void SetNextTransfer(CTransfer * pNext) {  m_pNextTransfer= pNext; };

  00000		 |$LN5@SetNextTra|
  00000		 |$M37277|
  00000	e580100c	 str         r1, [r0, #0xC]
  00004	e12fff1e	 bx          lr
  00008		 |$M37278|

			 ENDP  ; |?SetNextTransfer@CTransfer@@QAAXPAV1@@Z|, CTransfer::SetNextTransfer

	EXPORT	|?GetSTransfer@CTransfer@@QAA?AUSTRANSFER@@XZ| ; CTransfer::GetSTransfer
	IMPORT	|memcpy|

  00000			 AREA	 |.pdata|, PDATA
|$T37292| DCD	|$LN5@GetSTransf|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetSTransfer@CTransfer@@QAA?AUSTRANSFER@@XZ| PROC ; CTransfer::GetSTransfer

; 62   :     STransfer GetSTransfer () { return m_sTransfer; };

  00000		 |$LN5@GetSTransf|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37289|
  00004	e1a04001	 mov         r4, r1
  00008	e280101c	 add         r1, r0, #0x1C
  0000c	e1a00004	 mov         r0, r4
  00010	e3a02040	 mov         r2, #0x40
  00014	eb000000	 bl          memcpy
  00018	e1a00004	 mov         r0, r4
  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$M37290|

			 ENDP  ; |?GetSTransfer@CTransfer@@QAA?AUSTRANSFER@@XZ|, CTransfer::GetSTransfer

	EXPORT	|?DoNotCallBack@CTransfer@@QAAXXZ|	; CTransfer::DoNotCallBack

  00000			 AREA	 |.pdata|, PDATA
|$T37300| DCD	|$LN5@DoNotCallB|
	DCD	0x40000600
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DoNotCallBack@CTransfer@@QAAXXZ| PROC ; CTransfer::DoNotCallBack

; 64   :     void  DoNotCallBack() {

  00000		 |$LN5@DoNotCallB|
  00000		 |$M37297|

; 65   :         m_sTransfer.lpfComplete = NULL;

  00000	e3a03000	 mov         r3, #0
  00004	e5803050	 str         r3, [r0, #0x50]

; 66   :         m_sTransfer.lpdwError = NULL;

  00008	e5803058	 str         r3, [r0, #0x58]

; 67   :         m_sTransfer.lpdwBytesTransferred = NULL;

  0000c	e5803054	 str         r3, [r0, #0x54]

; 68   :         m_sTransfer.lpStartAddress = NULL;

  00010	e580301c	 str         r3, [r0, #0x1C]

; 69   :     }

  00014	e12fff1e	 bx          lr
  00018		 |$M37298|

			 ENDP  ; |?DoNotCallBack@CTransfer@@QAAXXZ|, CTransfer::DoNotCallBack

	EXPORT	|??0CQTransfer@@QAA@QAVCPipe@@QAVCPhysMem@@USTRANSFER@@@Z| ; CQTransfer::CQTransfer
	EXPORT	|??_7CQTransfer@@6B@| [ DATA ]		; CQTransfer::`vftable'
	IMPORT	|??0CTransfer@@QAA@QAVCPipe@@QAVCPhysMem@@USTRANSFER@@@Z| ; CTransfer::CTransfer
	IMPORT	|??_ECQTransfer@@UAAPAXI@Z|, WEAK |??_GCQTransfer@@UAAPAXI@Z| ; CQTransfer::`vector deleting destructor', CQTransfer::`scalar deleting destructor'
	IMPORT	|?Init@CTransfer@@UAAHXZ|		; CTransfer::Init
	IMPORT	|?AddTransfer@CQTransfer@@UAAHXZ|	; CQTransfer::AddTransfer

  00000			 AREA	 |.pdata|, PDATA
|$T37313| DCD	|$LN5@CQTransfer|
	DCD	0x40001b04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CQTransfer@@6B@| DCD |??_ECQTransfer@@UAAPAXI@Z|	; CQTransfer::`vftable'
	DCD	|?Init@CTransfer@@UAAHXZ|
	DCD	|?AddTransfer@CQTransfer@@UAAHXZ|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CQTransfer@@QAA@QAVCPipe@@QAVCPhysMem@@USTRANSFER@@@Z| PROC ; CQTransfer::CQTransfer

; 86   :     {   m_pCQTDList=NULL;   };

  00000		 |$LN5@CQTransfer|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d50f0	 stmdb       sp!, {r4 - r7, r12, lr}
  0000c	e24dd03c	 sub         sp, sp, #0x3C
  00010		 |$M37310|
  00010	e1a06003	 mov         r6, r3
  00014	e58d6060	 str         r6, [sp, #0x60]
  00018	e1a04002	 mov         r4, r2
  0001c	e1a05001	 mov         r5, r1
  00020	e1a07000	 mov         r7, r0
  00024	e28d0000	 add         r0, sp, #0
  00028	e28d1064	 add         r1, sp, #0x64
  0002c	e3a0203c	 mov         r2, #0x3C
  00030	eb000000	 bl          memcpy
  00034	e1a03006	 mov         r3, r6
  00038	e1a02004	 mov         r2, r4
  0003c	e1a01005	 mov         r1, r5
  00040	e1a00007	 mov         r0, r7
  00044	eb000000	 bl          |??0CTransfer@@QAA@QAVCPipe@@QAVCPhysMem@@USTRANSFER@@@Z|
  00048	e59f3018	 ldr         r3, [pc, #0x18]
  0004c	e3a02000	 mov         r2, #0
  00050	e5872068	 str         r2, [r7, #0x68]
  00054	e5873000	 str         r3, [r7]
  00058	e1a00007	 mov         r0, r7
  0005c	e28dd03c	 add         sp, sp, #0x3C
  00060	e89d60f0	 ldmia       sp, {r4 - r7, sp, lr}
  00064	e12fff1e	 bx          lr
  00068		 |$LN6@CQTransfer|
  00068		 |$LN7@CQTransfer|
  00068	00000000	 DCD         |??_7CQTransfer@@6B@|
  0006c		 |$M37311|

			 ENDP  ; |??0CQTransfer@@QAA@QAVCPipe@@QAVCPhysMem@@USTRANSFER@@@Z|, CQTransfer::CQTransfer

	EXPORT	|?GetCQTDList@CQTransfer@@QAAPAVCQTD@@XZ| ; CQTransfer::GetCQTDList

  00000			 AREA	 |.pdata|, PDATA
|$T37325| DCD	|$LN5@GetCQTDLis|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetCQTDList@CQTransfer@@QAAPAVCQTD@@XZ| PROC ; CQTransfer::GetCQTDList

; 94   :     CQTD *GetCQTDList() { return m_pCQTDList; };

  00000		 |$LN5@GetCQTDLis|
  00000		 |$M37322|
  00000	e5900068	 ldr         r0, [r0, #0x68]
  00004	e12fff1e	 bx          lr
  00008		 |$M37323|

			 ENDP  ; |?GetCQTDList@CQTransfer@@QAAPAVCQTD@@XZ|, CQTransfer::GetCQTDList

	IMPORT	|??3@YAXPAX@Z|				; operator delete
	IMPORT	|??1CQTransfer@@UAA@XZ|			; CQTransfer::~CQTransfer

  00000			 AREA	 |.pdata|, PDATA
|$T37336| DCD	|$LN6@scalar|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GCQTransfer@@UAAPAXI@Z| PROC	; CQTransfer::`scalar deleting destructor'
  00000		 |$LN6@scalar|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37333|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0
  0000c	eb000000	 bl          |??1CQTransfer@@UAA@XZ|
  00010	e3140001	 tst         r4, #1
  00014	11a00005	 movne       r0, r5
  00018	1b000000	 blne        |??3@YAXPAX@Z|
  0001c	e1a00005	 mov         r0, r5
  00020	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M37334|

			 ENDP  ; |??_GCQTransfer@@UAAPAXI@Z|, CQTransfer::`scalar deleting destructor'

	EXPORT	|??0CPipeAbs@@QAA@E@Z|			; CPipeAbs::CPipeAbs
	EXPORT	|??_7CPipeAbs@@6B@| [ DATA ]		; CPipeAbs::`vftable'
	EXPORT	|?ChangeMaxPacketSize@CPipeAbs@@UAAXG@Z| ; CPipeAbs::ChangeMaxPacketSize
	IMPORT	|??_ECPipeAbs@@UAAPAXI@Z|, WEAK |??_GCPipeAbs@@UAAPAXI@Z| ; CPipeAbs::`vector deleting destructor', CPipeAbs::`scalar deleting destructor'
	IMPORT	|_purecall|
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\usb2com\pipeabs.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T37347| DCD	|$LN5@CPipeAbs|
	DCD	0x40000600

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CPipeAbs@@6B@| DCD |??_ECPipeAbs@@UAAPAXI@Z|	; CPipeAbs::`vftable'
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|?ChangeMaxPacketSize@CPipeAbs@@UAAXG@Z|
	DCD	|_purecall|
	DCD	|_purecall|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CPipeAbs@@QAA@E@Z| PROC		; CPipeAbs::CPipeAbs

; 26   :     CPipeAbs(UCHAR const bEndpointAddress):m_bEndpointAddress(bEndpointAddress) {;};

  00000		 |$LN5@CPipeAbs|
  00000		 |$M37344|
  00000	e1a02000	 mov         r2, r0
  00004	e59f3008	 ldr         r3, [pc, #8]
  00008	e5c21004	 strb        r1, [r2, #4]
  0000c	e5823000	 str         r3, [r2]
  00010	e12fff1e	 bx          lr
  00014		 |$LN6@CPipeAbs|
  00014		 |$LN7@CPipeAbs|
  00014	00000000	 DCD         |??_7CPipeAbs@@6B@|
  00018		 |$M37345|

			 ENDP  ; |??0CPipeAbs@@QAA@E@Z|, CPipeAbs::CPipeAbs

	EXPORT	|??1CPipeAbs@@UAA@XZ|			; CPipeAbs::~CPipeAbs

  00000			 AREA	 |.pdata|, PDATA
|$T37357| DCD	|$LN5@CPipeAbs@2|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CPipeAbs@@UAA@XZ| PROC		; CPipeAbs::~CPipeAbs

; 27   :     virtual ~CPipeAbs() {;};

  00000		 |$LN5@CPipeAbs@2|
  00000		 |$M37354|
  00000	e59f3004	 ldr         r3, [pc, #4]
  00004	e5803000	 str         r3, [r0]
  00008	e12fff1e	 bx          lr
  0000c		 |$LN6@CPipeAbs@2|
  0000c		 |$LN7@CPipeAbs@2|
  0000c	00000000	 DCD         |??_7CPipeAbs@@6B@|
  00010		 |$M37355|

			 ENDP  ; |??1CPipeAbs@@UAA@XZ|, CPipeAbs::~CPipeAbs


  00000			 AREA	 |.pdata|, PDATA
|$T37366| DCD	|$LN5@ChangeMaxP|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ChangeMaxPacketSize@CPipeAbs@@UAAXG@Z| PROC ; CPipeAbs::ChangeMaxPacketSize

; 61   :     virtual void ChangeMaxPacketSize( IN const USHORT ) {ASSERT(FALSE);}; // only available for Controller endpoint

  00000		 |$LN5@ChangeMaxP|
  00000		 |$M37363|
  00000	e12fff1e	 bx          lr
  00004		 |$M37364|

			 ENDP  ; |?ChangeMaxPacketSize@CPipeAbs@@UAAXG@Z|, CPipeAbs::ChangeMaxPacketSize


  00000			 AREA	 |.pdata|, PDATA
|$T37380| DCD	|$LN8@scalar@2|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GCPipeAbs@@UAAPAXI@Z| PROC		; CPipeAbs::`scalar deleting destructor'
  00000		 |$LN8@scalar@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37377|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3014	 ldr         r3, [pc, #0x14]
  0000c	e3110001	 tst         r1, #1
  00010	e5843000	 str         r3, [r4]
  00014	1b000000	 blne        |??3@YAXPAX@Z|
  00018	e1a00004	 mov         r0, r4
  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$LN9@scalar@2|
  00024		 |$LN10@scalar@2|
  00024	00000000	 DCD         |??_7CPipeAbs@@6B@|
  00028		 |$M37378|

			 ENDP  ; |??_GCPipeAbs@@UAAPAXI@Z|, CPipeAbs::`scalar deleting destructor'

	EXPORT	|?GetSpeed@CPipe@@QAAEXZ|		; CPipe::GetSpeed
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.h

  00000			 AREA	 |.pdata|, PDATA
|$T37396| DCD	|$LN9@GetSpeed|
	DCD	0x40000c00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetSpeed@CPipe@@QAAEXZ| PROC		; CPipe::GetSpeed

; 98   :     UCHAR GetSpeed() {return (UCHAR)(m_fIsHighSpeed? HIGH_SPEED : (m_fIsLowSpeed? LOW_SPEED: FULL_SPEED));};

  00000		 |$LN9@GetSpeed|
  00000		 |$M37393|
  00000	e5903040	 ldr         r3, [r0, #0x40]
  00004	e3530000	 cmp         r3, #0
  00008	13a03001	 movne       r3, #1
  0000c	120300ff	 andne       r0, r3, #0xFF
  00010	112fff1e	 bxne        lr
  00014	e590303c	 ldr         r3, [r0, #0x3C]
  00018	e3530000	 cmp         r3, #0
  0001c	13a03003	 movne       r3, #3
  00020	120300ff	 andne       r0, r3, #0xFF
  00024	03a03002	 moveq       r3, #2
  00028	020300ff	 andeq       r0, r3, #0xFF
  0002c	e12fff1e	 bx          lr
  00030		 |$M37394|

			 ENDP  ; |?GetSpeed@CPipe@@QAAEXZ|, CPipe::GetSpeed

	EXPORT	|?GetMappedEndPoint@CPipe@@QAAEXZ|	; CPipe::GetMappedEndPoint

  00000			 AREA	 |.pdata|, PDATA
|$T37406| DCD	|$LN5@GetMappedE|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetMappedEndPoint@CPipe@@QAAEXZ| PROC ; CPipe::GetMappedEndPoint

; 103  :     UCHAR   GetMappedEndPoint(void) { return m_mappedEndpoint; };

  00000		 |$LN5@GetMappedE|
  00000		 |$M37403|
  00000	e5d00058	 ldrb        r0, [r0, #0x58]
  00004	e12fff1e	 bx          lr
  00008		 |$M37404|

			 ENDP  ; |?GetMappedEndPoint@CPipe@@QAAEXZ|, CPipe::GetMappedEndPoint

	EXPORT	|?GetTransferMode@CPipe@@QAAEXZ|	; CPipe::GetTransferMode

  00000			 AREA	 |.pdata|, PDATA
|$T37416| DCD	|$LN5@GetTransfe|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetTransferMode@CPipe@@QAAEXZ| PROC	; CPipe::GetTransferMode

; 110  :     UCHAR   GetTransferMode(void) { return m_ucTransferMode;};

  00000		 |$LN5@GetTransfe|
  00000		 |$M37413|
  00000	e5d00014	 ldrb        r0, [r0, #0x14]
  00004	e12fff1e	 bx          lr
  00008		 |$M37414|

			 ENDP  ; |?GetTransferMode@CPipe@@QAAEXZ|, CPipe::GetTransferMode

	EXPORT	|?SetTransferMode@CPipe@@QAAXE@Z|	; CPipe::SetTransferMode

  00000			 AREA	 |.pdata|, PDATA
|$T37425| DCD	|$LN5@SetTransfe|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetTransferMode@CPipe@@QAAXE@Z| PROC	; CPipe::SetTransferMode

; 111  :     void    SetTransferMode(UCHAR mode) { m_ucTransferMode = mode;};

  00000		 |$LN5@SetTransfe|
  00000		 |$M37422|
  00000	e5c01014	 strb        r1, [r0, #0x14]
  00004	e12fff1e	 bx          lr
  00008		 |$M37423|

			 ENDP  ; |?SetTransferMode@CPipe@@QAAXE@Z|, CPipe::SetTransferMode

	EXPORT	|?GetPhysMem@CHW@@QAAPAVCPhysMem@@XZ|	; CHW::GetPhysMem
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\chw.h

  00000			 AREA	 |.pdata|, PDATA
|$T37435| DCD	|$LN5@GetPhysMem|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPhysMem@CHW@@QAAPAVCPhysMem@@XZ| PROC ; CHW::GetPhysMem

; 381  :     CPhysMem * GetPhysMem() { return m_pMem; };

  00000		 |$LN5@GetPhysMem|
  00000		 |$M37432|
  00000	e5900294	 ldr         r0, [r0, #0x294]
  00004	e12fff1e	 bx          lr
  00008		 |$M37433|

			 ENDP  ; |?GetPhysMem@CHW@@QAAPAVCPhysMem@@XZ|, CHW::GetPhysMem

	EXPORT	|?AddToBusyPipeList@CHW@@QAAHQAVCPipe@@H@Z| ; CHW::AddToBusyPipeList
	IMPORT	|?AddToBusyPipeList@CBusyPipeList@@QAAHQAVCPipe@@H@Z| ; CBusyPipeList::AddToBusyPipeList

  00000			 AREA	 |.pdata|, PDATA
|$T37447| DCD	|$LN5@AddToBusyP|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AddToBusyPipeList@CHW@@QAAHQAVCPipe@@H@Z| PROC ; CHW::AddToBusyPipeList

; 384  :     BOOL AddToBusyPipeList( IN CPipe * const pPipe, IN const BOOL fHighPriority ) {  return m_cBusyPipeList.AddToBusyPipeList(pPipe,fHighPriority);};

  00000		 |$LN5@AddToBusyP|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37444|
  00004	e28000c0	 add         r0, r0, #0xC0
  00008	eb000000	 bl          |?AddToBusyPipeList@CBusyPipeList@@QAAHQAVCPipe@@H@Z|
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M37445|

			 ENDP  ; |?AddToBusyPipeList@CHW@@QAAHQAVCPipe@@H@Z|, CHW::AddToBusyPipeList

	EXPORT	|?RemoveFromBusyPipeList@CHW@@QAAXQAVCPipe@@@Z| ; CHW::RemoveFromBusyPipeList
	IMPORT	|?RemoveFromBusyPipeList@CBusyPipeList@@QAAXQAVCPipe@@@Z| ; CBusyPipeList::RemoveFromBusyPipeList

  00000			 AREA	 |.pdata|, PDATA
|$T37456| DCD	|$LN5@RemoveFrom|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RemoveFromBusyPipeList@CHW@@QAAXQAVCPipe@@@Z| PROC ; CHW::RemoveFromBusyPipeList

; 385  :     void RemoveFromBusyPipeList( IN CPipe * const pPipe ) { m_cBusyPipeList.RemoveFromBusyPipeList(pPipe); };           

  00000		 |$LN5@RemoveFrom|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37453|
  00004	e28000c0	 add         r0, r0, #0xC0
  00008	eb000000	 bl          |?RemoveFromBusyPipeList@CBusyPipeList@@QAAXQAVCPipe@@@Z|
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M37454|

			 ENDP  ; |?RemoveFromBusyPipeList@CHW@@QAAXQAVCPipe@@@Z|, CHW::RemoveFromBusyPipeList

	EXPORT	|??0CPipe@@QAA@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCMhcd@@@Z| ; CPipe::CPipe
	EXPORT	|??_7CPipe@@6B@| [ DATA ]		; CPipe::`vftable'
	EXPORT	|?IsPipeHalted@CPipe@@UAA?AW4HCD_REQUEST_STATUS@@QAH@Z| ; CPipe::IsPipeHalted
	EXPORT	|?ClearHaltedFlag@CPipe@@UAAXXZ|	; CPipe::ClearHaltedFlag
	EXPORT	|?ResetEndPoint@CPipe@@UAAXXZ|		; CPipe::ResetEndPoint
	EXPORT	|?SetReservedDeviceAddr@CPipe@@UAAHE@Z|	; CPipe::SetReservedDeviceAddr
	EXPORT	|?GetReservedDeviceAddr@CPipe@@UAAEXZ|	; CPipe::GetReservedDeviceAddr
	EXPORT	|?GetCPhysMem@CPipe@@UAAPAVCPhysMem@@XZ| ; CPipe::GetCPhysMem
	IMPORT	|CreateEventW|
	IMPORT	|InitializeCriticalSection|
	IMPORT	|??_ECPipe@@UAAPAXI@Z|, WEAK |??_GCPipe@@UAAPAXI@Z| ; CPipe::`vector deleting destructor', CPipe::`scalar deleting destructor'
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.h

  00000			 AREA	 |.pdata|, PDATA
|$T37480| DCD	|$LN17@CPipe|
	DCD	0x40004f02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CPipe@@6B@| DCD |??_ECPipe@@UAAPAXI@Z|		; CPipe::`vftable'
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|?IsPipeHalted@CPipe@@UAA?AW4HCD_REQUEST_STATUS@@QAH@Z|
	DCD	|?ClearHaltedFlag@CPipe@@UAAXXZ|
	DCD	|?ResetEndPoint@CPipe@@UAAXXZ|
	DCD	|?ChangeMaxPacketSize@CPipeAbs@@UAAXG@Z|
	DCD	|?SetReservedDeviceAddr@CPipe@@UAAHE@Z|
	DCD	|?GetReservedDeviceAddr@CPipe@@UAAEXZ|
	DCD	|?GetCPhysMem@CPipe@@UAAPAVCPhysMem@@XZ|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|_purecall|
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CPipe@@QAA@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCMhcd@@@Z| PROC ; CPipe::CPipe

; 93   : {

  00000		 |$LN17@CPipe|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M37477|
  00008	e1a0b003	 mov         r11, r3
  0000c	e1a03001	 mov         r3, r1
  00010	e58d3000	 str         r3, [sp]
  00014	e1a09002	 mov         r9, r2
  00018	e1a0a000	 mov         r10, r0
  0001c	e5d3e002	 ldrb        lr, [r3, #2]
  00020	e59f4110	 ldr         r4, [pc, #0x110]
  00024	e5dd502c	 ldrb        r5, [sp, #0x2C]
  00028	e5dd6030	 ldrb        r6, [sp, #0x30]
  0002c	e59d7038	 ldr         r7, [sp, #0x38]
  00030	e59d8034	 ldr         r8, [sp, #0x34]
  00034	e28a0034	 add         r0, r10, #0x34
  00038	e3a02007	 mov         r2, #7
  0003c	e5cae004	 strb        lr, [r10, #4]
  00040	e58a4000	 str         r4, [r10]
  00044	e5ca5008	 strb        r5, [r10, #8]
  00048	e5ca6009	 strb        r6, [r10, #9]
  0004c	e58a700c	 str         r7, [r10, #0xC]
  00050	e58a8010	 str         r8, [r10, #0x10]
  00054	eb000000	 bl          memcpy
  00058	e3590000	 cmp         r9, #0
  0005c	13a03001	 movne       r3, #1
  00060	03a03000	 moveq       r3, #0
  00064	e5dde028	 ldrb        lr, [sp, #0x28]
  00068	e35b0000	 cmp         r11, #0
  0006c	e58a303c	 str         r3, [r10, #0x3C]
  00070	13a03001	 movne       r3, #1
  00074	03a03000	 moveq       r3, #0
  00078	e3a04000	 mov         r4, #0

; 94   :     DEBUGMSG( ZONE_PIPE && ZONE_VERBOSE, (TEXT("%s: +CPipe::CPipe\n"),GetControllerName()) );
; 95   :     // CPipe::Initialize should already have been called by now
; 96   :     // to set up the schedule and init static variables
; 97   :     //DEBUGCHK( pUHCIFrame->m_debug_fInitializeAlreadyCalled );
; 98   : 
; 99   :     InitializeCriticalSection( &m_csPipeLock );

  0007c	e28a0020	 add         r0, r10, #0x20
  00080	e58a3040	 str         r3, [r10, #0x40]
  00084	e5cae03b	 strb        lr, [r10, #0x3B]
  00088	e58a4044	 str         r4, [r10, #0x44]
  0008c	eb000000	 bl          InitializeCriticalSection

; 100  :     m_fIsHalted = FALSE;
; 101  :     // Assume it is Async. If it is not It should be ovewrited.
; 102  :     m_bFrameSMask =  0;
; 103  :     m_bFrameCMask =  0;
; 104  : 
; 105  :     m_tx_fifo_size = 0;
; 106  :     m_tx_fifo_addr = 0;
; 107  :     m_rx_fifo_size = 0;
; 108  :     m_rx_fifo_addr = 0;
; 109  : 
; 110  :     m_ucDataToggle = 0;
; 111  :     m_bProcessDataToggle = TRUE;

  00090	e3a03001	 mov         r3, #1
  00094	e58a3018	 str         r3, [r10, #0x18]

; 112  : 
; 113  :     // Set Transfer Mode by default
; 114  :     SetTransferMode(TRANSFER_FIFO);
; 115  : 
; 116  :     // Control EndPoint
; 117  :     if (USB_ENDPOINT(lpEndpointDescriptor->bEndpointAddress) == 0)

  00098	e59d3000	 ldr         r3, [sp]
  0009c	e58a4044	 str         r4, [r10, #0x44]
  000a0	e5ca401d	 strb        r4, [r10, #0x1D]
  000a4	e5ca401e	 strb        r4, [r10, #0x1E]
  000a8	e58a4050	 str         r4, [r10, #0x50]
  000ac	e58a4048	 str         r4, [r10, #0x48]
  000b0	e58a4054	 str         r4, [r10, #0x54]
  000b4	e58a404c	 str         r4, [r10, #0x4C]
  000b8	e5ca4015	 strb        r4, [r10, #0x15]
  000bc	e5ca4014	 strb        r4, [r10, #0x14]
  000c0	e5d33002	 ldrb        r3, [r3, #2]
  000c4	e313000f	 tst         r3, #0xF
  000c8	1a000005	 bne         |$LN4@CPipe|

; 118  :     {
; 119  :         m_hEPTransferEvent = NULL;

  000cc	e58a405c	 str         r4, [r10, #0x5C]
  000d0		 |$LN2@CPipe|

; 128  :             m_hDMATransferEvent = NULL;

  000d0	e58a4060	 str         r4, [r10, #0x60]
  000d4		 |$LN1@CPipe|

; 129  :     }
; 130  :     // 
; 131  :     
; 132  :     DEBUGMSG( ZONE_PIPE && ZONE_VERBOSE, (TEXT("-CPipe::CPipe\n")) );
; 133  : }

  000d4	e1a0000a	 mov         r0, r10
  000d8	e28dd004	 add         sp, sp, #4
  000dc	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  000e0	e12fff1e	 bx          lr
  000e4		 |$LN4@CPipe|

; 120  :         m_hDMATransferEvent = NULL;
; 121  :     }
; 122  :     else
; 123  :     {
; 124  :         m_hEPTransferEvent = CreateEvent(NULL, FALSE, FALSE, NULL);

  000e4	e3a03000	 mov         r3, #0
  000e8	e3a02000	 mov         r2, #0
  000ec	e3a01000	 mov         r1, #0
  000f0	e3a00000	 mov         r0, #0
  000f4	eb000000	 bl          CreateEventW

; 125  :         if (m_pCMhcd->IsDMASupport())

  000f8	e59a200c	 ldr         r2, [r10, #0xC]
  000fc	e58a005c	 str         r0, [r10, #0x5C]
  00100	e5923000	 ldr         r3, [r2]
  00104	e1a00002	 mov         r0, r2
  00108	e593306c	 ldr         r3, [r3, #0x6C]
  0010c	e1a0e00f	 mov         lr, pc
  00110	e12fff13	 bx          r3
  00114	e3500000	 cmp         r0, #0
  00118	0affffec	 beq         |$LN2@CPipe|

; 126  :             m_hDMATransferEvent = CreateEvent(NULL, FALSE, FALSE, NULL);

  0011c	e3a03000	 mov         r3, #0
  00120	e3a02000	 mov         r2, #0
  00124	e3a01000	 mov         r1, #0
  00128	e3a00000	 mov         r0, #0
  0012c	eb000000	 bl          CreateEventW
  00130	e58a0060	 str         r0, [r10, #0x60]

; 127  :         else

  00134	eaffffe6	 b           |$LN1@CPipe|
  00138		 |$LN18@CPipe|
  00138		 |$LN19@CPipe|
  00138	00000000	 DCD         |??_7CPipe@@6B@|
  0013c		 |$M37478|

			 ENDP  ; |??0CPipe@@QAA@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCMhcd@@@Z|, CPipe::CPipe

; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.h

  00000			 AREA	 |.pdata|, PDATA
|$T37493| DCD	|$LN5@SetReserve|
	DCD	0x40000300
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetReservedDeviceAddr@CPipe@@UAAHE@Z| PROC ; CPipe::SetReservedDeviceAddr

; 99   :     BOOL  SetReservedDeviceAddr(UCHAR bReservedDeviceAddr) { m_bReservedDeviceAddr = bReservedDeviceAddr; return TRUE;};

  00000		 |$LN5@SetReserve|
  00000		 |$M37490|
  00000	e5c0101c	 strb        r1, [r0, #0x1C]
  00004	e3a00001	 mov         r0, #1
  00008	e12fff1e	 bx          lr
  0000c		 |$M37491|

			 ENDP  ; |?SetReservedDeviceAddr@CPipe@@UAAHE@Z|, CPipe::SetReservedDeviceAddr


  00000			 AREA	 |.pdata|, PDATA
|$T37503| DCD	|$LN5@GetReserve|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetReservedDeviceAddr@CPipe@@UAAEXZ| PROC ; CPipe::GetReservedDeviceAddr

; 100  :     UCHAR GetReservedDeviceAddr() { return m_bReservedDeviceAddr;};

  00000		 |$LN5@GetReserve|
  00000		 |$M37500|
  00000	e5d0001c	 ldrb        r0, [r0, #0x1C]
  00004	e12fff1e	 bx          lr
  00008		 |$M37501|

			 ENDP  ; |?GetReservedDeviceAddr@CPipe@@UAAEXZ|, CPipe::GetReservedDeviceAddr

	EXPORT	|?GetDataToggle@CPipe@@QAAEXZ|		; CPipe::GetDataToggle
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T37513| DCD	|$LN5@GetDataTog|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetDataToggle@CPipe@@QAAEXZ| PROC	; CPipe::GetDataToggle

; 137  : {

  00000		 |$LN5@GetDataTog|
  00000		 |$M37510|

; 138  :     return m_ucDataToggle;

  00000	e5d00015	 ldrb        r0, [r0, #0x15]

; 139  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M37511|

			 ENDP  ; |?GetDataToggle@CPipe@@QAAEXZ|, CPipe::GetDataToggle

	EXPORT	|?SetDataToggle@CPipe@@QAAXE@Z|		; CPipe::SetDataToggle
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.h

  00000			 AREA	 |.pdata|, PDATA
|$T37530| DCD	|$LN11@SetDataTog|
	DCD	0x40000400
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetDataToggle@CPipe@@QAAXE@Z| PROC	; CPipe::SetDataToggle

; 143  : {

  00000		 |$LN11@SetDataTog|
  00000		 |$M37527|

; 144  :     RETAILMSG(0, (TEXT("SetDataToggle to %d for EP 0x%x (mapped %d) DevAddr %d OUT %d\r\n"),
; 145  :         dataToggle, m_usbEndpointDescriptor.bEndpointAddress, GetMappedEndPoint(), 
; 146  :         GetReservedDeviceAddr(), USB_ENDPOINT_DIRECTION_OUT(m_usbEndpointDescriptor.bEndpointAddress)));
; 147  :     m_ucDataToggle = dataToggle;
; 148  :     m_bProcessDataToggle = TRUE;

  00000	e3a03001	 mov         r3, #1
  00004	e5803018	 str         r3, [r0, #0x18]
  00008	e5c01015	 strb        r1, [r0, #0x15]

; 149  : }

  0000c	e12fff1e	 bx          lr
  00010		 |$M37528|

			 ENDP  ; |?SetDataToggle@CPipe@@QAAXE@Z|, CPipe::SetDataToggle

	EXPORT	|?IsDataToggle@CPipe@@QAAHXZ|		; CPipe::IsDataToggle
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.h

  00000			 AREA	 |.pdata|, PDATA
|$T37548| DCD	|$LN12@IsDataTogg|
	DCD	0x40000700
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsDataToggle@CPipe@@QAAHXZ| PROC	; CPipe::IsDataToggle

; 152  : {

  00000		 |$LN12@IsDataTogg|
  00000		 |$M37545|

; 153  :     RETAILMSG(0, (TEXT("IsDataToggle for EP 0x%x (mapped %d) DevAddr %d OUT %d return %d\r\n"),
; 154  :         m_usbEndpointDescriptor.bEndpointAddress, GetMappedEndPoint(), 
; 155  :         GetReservedDeviceAddr(), USB_ENDPOINT_DIRECTION_OUT(m_usbEndpointDescriptor.bEndpointAddress), m_bProcessDataToggle));
; 156  : 
; 157  :     if (m_bProcessDataToggle)

  00000	e5903018	 ldr         r3, [r0, #0x18]
  00004	e3530000	 cmp         r3, #0

; 158  :     {
; 159  :         m_bProcessDataToggle = FALSE;

  00008	13a03000	 movne       r3, #0
  0000c	15803018	 strne       r3, [r0, #0x18]

; 160  :         return TRUE;

  00010	13a00001	 movne       r0, #1

; 161  :     }
; 162  :     return FALSE;

  00014	03a00000	 moveq       r0, #0

; 163  : }

  00018	e12fff1e	 bx          lr
  0001c		 |$M37546|

			 ENDP  ; |?IsDataToggle@CPipe@@QAAHXZ|, CPipe::IsDataToggle

	EXPORT	|??1CPipe@@UAA@XZ|			; CPipe::~CPipe
	IMPORT	|CloseHandle|
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\usb2com\pipeabs.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T37559| DCD	|$LN9@CPipe@2|
	DCD	0x40001601
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CPipe@@UAA@XZ| PROC		; CPipe::~CPipe

; 236  : {

  00000		 |$LN9@CPipe@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37556|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3044	 ldr         r3, [pc, #0x44]

; 237  :     DEBUGMSG( ZONE_PIPE && ZONE_VERBOSE, (TEXT("%s: +CPipe::~CPipe\n"),GetControllerName()) );
; 238  :     // transfers should be aborted or closed before deleting object
; 239  :     DeleteCriticalSection( &m_csPipeLock );    

  0000c	e4803020	 str         r3, [r0], #0x20
  00010	eb000000	 bl          DeleteCriticalSection

; 240  :     if (m_hEPTransferEvent)

  00014	e594305c	 ldr         r3, [r4, #0x5C]
  00018	e3530000	 cmp         r3, #0

; 241  :         CloseHandle(m_hEPTransferEvent);

  0001c	11a00003	 movne       r0, r3
  00020	1b000000	 blne        CloseHandle

; 242  :     if (m_hDMATransferEvent)

  00024	e5943060	 ldr         r3, [r4, #0x60]
  00028	e3530000	 cmp         r3, #0

; 243  :         CloseHandle(m_hDMATransferEvent);

  0002c	11a00003	 movne       r0, r3
  00030	1b000000	 blne        CloseHandle

; 244  :     m_hEPTransferEvent = NULL;
; 245  :     m_hDMATransferEvent = NULL;
; 246  :     DEBUGMSG( ZONE_PIPE && ZONE_VERBOSE, (TEXT("-CPipe::~CPipe\n")) );
; 247  : }

  00034	e59f3014	 ldr         r3, [pc, #0x14]
  00038	e3a02000	 mov         r2, #0
  0003c	e584205c	 str         r2, [r4, #0x5C]
  00040	e5843000	 str         r3, [r4]
  00044	e5842060	 str         r2, [r4, #0x60]
  00048	e8bd4010	 ldmia       sp!, {r4, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$LN10@CPipe@2|
  00050		 |$LN11@CPipe@2|
  00050	00000000	 DCD         |??_7CPipeAbs@@6B@|
  00054		 |$LN12@CPipe@2|
  00054	00000000	 DCD         |??_7CPipe@@6B@|
  00058		 |$M37557|

			 ENDP  ; |??1CPipe@@UAA@XZ|, CPipe::~CPipe

; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\chw.h

  00000			 AREA	 |.pdata|, PDATA
|$T37576| DCD	|$LN7@GetCPhysMe|
	DCD	0x40000300
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetCPhysMem@CPipe@@UAAPAVCPhysMem@@XZ| PROC ; CPipe::GetCPhysMem

; 249  : {

  00000		 |$LN7@GetCPhysMe|
  00000		 |$M37573|

; 250  :      return m_pCMhcd->GetPhysMem();

  00000	e590300c	 ldr         r3, [r0, #0xC]
  00004	e5930294	 ldr         r0, [r3, #0x294]

; 251  : }

  00008	e12fff1e	 bx          lr
  0000c		 |$M37574|

			 ENDP  ; |?GetCPhysMem@CPipe@@UAAPAVCPhysMem@@XZ|, CPipe::GetCPhysMem

	IMPORT	|LeaveCriticalSection|
	IMPORT	|EnterCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T37587| DCD	|$LN6@IsPipeHalt|
	DCD	0x40000d01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsPipeHalted@CPipe@@UAA?AW4HCD_REQUEST_STATUS@@QAH@Z| PROC ; CPipe::IsPipeHalted

; 265  : {

  00000		 |$LN6@IsPipeHalt|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37584|
  00004	e1a05001	 mov         r5, r1
  00008	e1a04000	 mov         r4, r0

; 266  :     DEBUGMSG( ZONE_PIPE && ZONE_VERBOSE, (TEXT("%s: +CPipe(%s)::IsPipeHalted\n"),GetControllerName(), GetPipeType()) );
; 267  : 
; 268  :     DEBUGCHK( lpbHalted ); // should be checked by CUhcd
; 269  : 
; 270  :     EnterCriticalSection( &m_csPipeLock );

  0000c	e2840020	 add         r0, r4, #0x20
  00010	eb000000	 bl          EnterCriticalSection

; 271  :     if (lpbHalted)

  00014	e3550000	 cmp         r5, #0

; 272  :         *lpbHalted = m_fIsHalted;

  00018	15943044	 ldrne       r3, [r4, #0x44]

; 273  :     LeaveCriticalSection( &m_csPipeLock );

  0001c	e2840020	 add         r0, r4, #0x20
  00020	15853000	 strne       r3, [r5]
  00024	eb000000	 bl          LeaveCriticalSection

; 274  : 
; 275  :     DEBUGMSG( ZONE_PIPE && ZONE_VERBOSE, (TEXT("%s: -CPipe(%s)::IsPipeHalted, *lpbHalted = %d, returning HCD_REQUEST_STATUS %d\n"),GetControllerName(), GetPipeType(), *lpbHalted, requestOK) );
; 276  :     return requestOK;

  00028	e3a00001	 mov         r0, #1

; 277  : }

  0002c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00030	e12fff1e	 bx          lr
  00034		 |$M37585|

			 ENDP  ; |?IsPipeHalted@CPipe@@UAA?AW4HCD_REQUEST_STATUS@@QAH@Z|, CPipe::IsPipeHalted


  00000			 AREA	 |.pdata|, PDATA
|$T37595| DCD	|$LN5@ClearHalte|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ClearHaltedFlag@CPipe@@UAAXXZ| PROC	; CPipe::ClearHaltedFlag

; 288  : {

  00000		 |$LN5@ClearHalte|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37592|
  00004	e1a04000	 mov         r4, r0

; 289  :     DEBUGMSG( ZONE_PIPE && ZONE_VERBOSE, (TEXT("%s: +CPipe(%s)::ClearHaltedFlag\n"),GetControllerName(), GetPipeType() ) );
; 290  : 
; 291  :     EnterCriticalSection( &m_csPipeLock );

  00008	e2840020	 add         r0, r4, #0x20
  0000c	eb000000	 bl          EnterCriticalSection

; 292  :     DEBUGMSG( ZONE_WARNING && !m_fIsHalted, (TEXT("%s: CPipe(%s)::ClearHaltedFlag - warning! Called on non-stalled pipe\n"),GetControllerName(), GetPipeType()) );
; 293  :     m_fIsHalted = FALSE;

  00010	e3a03000	 mov         r3, #0

; 294  :     LeaveCriticalSection( &m_csPipeLock );

  00014	e2840020	 add         r0, r4, #0x20
  00018	e5843044	 str         r3, [r4, #0x44]
  0001c	eb000000	 bl          LeaveCriticalSection

; 295  : 
; 296  :     DEBUGMSG( ZONE_PIPE && ZONE_VERBOSE, (TEXT("%s: -CPipe(%s)::ClearHaltedFlag\n"),GetControllerName(), GetPipeType()) );
; 297  : }

  00020	e8bd4010	 ldmia       sp!, {r4, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M37593|

			 ENDP  ; |?ClearHaltedFlag@CPipe@@UAAXXZ|, CPipe::ClearHaltedFlag

	EXPORT	|??_C@_1EC@HHJLHFCG@?$AAR?$AAe?$AAs?$AAe?$AAt?$AAE?$AAn?$AAd?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?5?$AAa?$AAt?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	IMPORT	|?ResetEndPoint@CHW@@QAAXE@Z|		; CHW::ResetEndPoint
	IMPORT	|NKDbgPrintfW|

  00000			 AREA	 |.pdata|, PDATA
|$T37605| DCD	|$LN7@ResetEndPo@2|
	DCD	0x40000f01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@HHJLHFCG@?$AAR?$AAe?$AAs?$AAe?$AAt?$AAE?$AAn?$AAd?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?5?$AAa?$AAt?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6@| DCB "R"
	DCB	0x0, "e", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, "E", 0x0, "n"
	DCB	0x0, "d", 0x0, "P", 0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t"
	DCB	0x0, " ", 0x0, "a", 0x0, "t", 0x0, " ", 0x0, "e", 0x0, "n"
	DCB	0x0, "d", 0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ResetEndPoint@CPipe@@UAAXXZ| PROC	; CPipe::ResetEndPoint

; 300  : {

  00000		 |$LN7@ResetEndPo@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37602|
  00004	e1a04000	 mov         r4, r0

; 301  :     EnterCriticalSection(&m_csPipeLock);

  00008	e2840020	 add         r0, r4, #0x20
  0000c	eb000000	 bl          EnterCriticalSection

; 302  :     RETAILMSG(1, (TEXT("ResetEndPoint at endpoint 0x%x\r\n"), m_bEndpointAddress));

  00010	e5d41004	 ldrb        r1, [r4, #4]
  00014	e59f001c	 ldr         r0, [pc, #0x1C]
  00018	eb000000	 bl          NKDbgPrintfW

; 303  :     m_pCMhcd->ResetEndPoint(m_bEndpointAddress);

  0001c	e5d41004	 ldrb        r1, [r4, #4]
  00020	e594000c	 ldr         r0, [r4, #0xC]
  00024	eb000000	 bl          |?ResetEndPoint@CHW@@QAAXE@Z|

; 304  :     LeaveCriticalSection(&m_csPipeLock);

  00028	e2840020	 add         r0, r4, #0x20
  0002c	eb000000	 bl          LeaveCriticalSection

; 305  : }

  00030	e8bd4010	 ldmia       sp!, {r4, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$LN8@ResetEndPo@2|
  00038		 |$LN9@ResetEndPo@2|
  00038	00000000	 DCD         |??_C@_1EC@HHJLHFCG@?$AAR?$AAe?$AAs?$AAe?$AAt?$AAE?$AAn?$AAd?$AAP?$AAo?$AAi?$AAn?$AAt?$AA?5?$AAa?$AAt?$AA?5?$AAe?$AAn?$AAd?$AAp?$AAo?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6@|
  0003c		 |$M37603|

			 ENDP  ; |?ResetEndPoint@CPipe@@UAAXXZ|, CPipe::ResetEndPoint

	EXPORT	|??0CQueuedPipe@@QAA@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCMhcd@@@Z| ; CQueuedPipe::CQueuedPipe
	EXPORT	|??_7CQueuedPipe@@6B@| [ DATA ]		; CQueuedPipe::`vftable'
	EXPORT	|?IssueTransfer@CQueuedPipe@@UAA?AW4HCD_REQUEST_STATUS@@EQ6AKPAX@ZQAXKQBXKKQBKK2K3QAK5QAH55@Z| ; CQueuedPipe::IssueTransfer
	EXPORT	|?AbortTransfer@CQueuedPipe@@UAA?AW4HCD_REQUEST_STATUS@@Q6AKPAX@ZQAXPBX@Z| ; CQueuedPipe::AbortTransfer
	EXPORT	|?ClearHaltedFlag@CQueuedPipe@@UAAXXZ|	; CQueuedPipe::ClearHaltedFlag
	EXPORT	|?ScheduleTransfer@CQueuedPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ| ; CQueuedPipe::ScheduleTransfer
	EXPORT	|?CheckForDoneTransfers@CQueuedPipe@@UAAHXZ| ; CQueuedPipe::CheckForDoneTransfers
	EXPORT	|?ProcessEP@CQueuedPipe@@UAAHKH@Z|	; CQueuedPipe::ProcessEP
	EXPORT	|?GetQHead@CQueuedPipe@@UAAPAVCQH@@XZ|	; CQueuedPipe::GetQHead
	IMPORT	|??_ECQueuedPipe@@UAAPAXI@Z|, WEAK |??_GCQueuedPipe@@UAAPAXI@Z| ; CQueuedPipe::`vector deleting destructor', CQueuedPipe::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T37620| DCD	|$LN5@CQueuedPip|
	DCD	0x40001902

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CQueuedPipe@@6B@| DCD |??_ECQueuedPipe@@UAAPAXI@Z|	; CQueuedPipe::`vftable'
	DCD	|_purecall|
	DCD	|_purecall|
	DCD	|?IssueTransfer@CQueuedPipe@@UAA?AW4HCD_REQUEST_STATUS@@EQ6AKPAX@ZQAXKQBXKKQBKK2K3QAK5QAH55@Z|
	DCD	|?AbortTransfer@CQueuedPipe@@UAA?AW4HCD_REQUEST_STATUS@@Q6AKPAX@ZQAXPBX@Z|
	DCD	|?IsPipeHalted@CPipe@@UAA?AW4HCD_REQUEST_STATUS@@QAH@Z|
	DCD	|?ClearHaltedFlag@CQueuedPipe@@UAAXXZ|
	DCD	|?ResetEndPoint@CPipe@@UAAXXZ|
	DCD	|?ChangeMaxPacketSize@CPipeAbs@@UAAXG@Z|
	DCD	|?SetReservedDeviceAddr@CPipe@@UAAHE@Z|
	DCD	|?GetReservedDeviceAddr@CPipe@@UAAEXZ|
	DCD	|?GetCPhysMem@CPipe@@UAAPAVCPhysMem@@XZ|
	DCD	|?ScheduleTransfer@CQueuedPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ|
	DCD	|?CheckForDoneTransfers@CQueuedPipe@@UAAHXZ|
	DCD	|?ProcessEP@CQueuedPipe@@UAAHKH@Z|
	DCD	|_purecall|
	DCD	|?GetQHead@CQueuedPipe@@UAAPAVCQH@@XZ|
	DCD	|_purecall|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CQueuedPipe@@QAA@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCMhcd@@@Z| PROC ; CQueuedPipe::CQueuedPipe

; 323  : {

  00000		 |$LN5@CQueuedPip|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004	e24dd014	 sub         sp, sp, #0x14
  00008		 |$M37617|
  00008	e1a08000	 mov         r8, r0
  0000c	e59de03c	 ldr         lr, [sp, #0x3C]
  00010	e59d4038	 ldr         r4, [sp, #0x38]
  00014	e5dd5034	 ldrb        r5, [sp, #0x34]
  00018	e5dd6030	 ldrb        r6, [sp, #0x30]
  0001c	e5dd702c	 ldrb        r7, [sp, #0x2C]
  00020	e58de010	 str         lr, [sp, #0x10]
  00024	e58d400c	 str         r4, [sp, #0xC]
  00028	e58d5008	 str         r5, [sp, #8]
  0002c	e58d6004	 str         r6, [sp, #4]
  00030	e58d7000	 str         r7, [sp]
  00034	eb000000	 bl          |??0CPipe@@QAA@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCMhcd@@@Z|
  00038	e59f3020	 ldr         r3, [pc, #0x20]

; 324  :     DEBUGMSG( ZONE_PIPE && ZONE_VERBOSE, (TEXT("%s: +CQueuedPipe::CQueuedPipe\n"),GetControllerName()) );
; 325  :     m_pPipeQHead = NULL;

  0003c	e3a02000	 mov         r2, #0
  00040	e5882064	 str         r2, [r8, #0x64]
  00044	e5883000	 str         r3, [r8]

; 326  :     m_pUnQueuedTransfer=NULL;      // ptr to last transfer in queue

  00048	e5882068	 str         r2, [r8, #0x68]

; 327  :     m_pQueuedTransfer=NULL;

  0004c	e588206c	 str         r2, [r8, #0x6C]

; 328  :     DEBUGMSG( ZONE_PIPE && ZONE_VERBOSE, (TEXT("%s: -CQueuedPipe::CQueuedPipe\n"),GetControllerName()) );
; 329  : }

  00050	e1a00008	 mov         r0, r8
  00054	e28dd014	 add         sp, sp, #0x14
  00058	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  0005c	e12fff1e	 bx          lr
  00060		 |$LN6@CQueuedPip|
  00060		 |$LN7@CQueuedPip|
  00060	00000000	 DCD         |??_7CQueuedPipe@@6B@|
  00064		 |$M37618|

			 ENDP  ; |??0CQueuedPipe@@QAA@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCMhcd@@@Z|, CQueuedPipe::CQueuedPipe

; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.h

  00000			 AREA	 |.pdata|, PDATA
|$T37632| DCD	|$LN5@GetQHead|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetQHead@CQueuedPipe@@UAAPAVCQH@@XZ| PROC ; CQueuedPipe::GetQHead

; 208  :     CQH *  GetQHead() { return m_pPipeQHead; };

  00000		 |$LN5@GetQHead|
  00000		 |$M37629|
  00000	e5900064	 ldr         r0, [r0, #0x64]
  00004	e12fff1e	 bx          lr
  00008		 |$M37630|

			 ENDP  ; |?GetQHead@CQueuedPipe@@UAAPAVCQH@@XZ|, CQueuedPipe::GetQHead

	EXPORT	|??1CQueuedPipe@@UAA@XZ|		; CQueuedPipe::~CQueuedPipe
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T37640| DCD	|$LN5@CQueuedPip@2|
	DCD	0x40000e01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CQueuedPipe@@UAA@XZ| PROC		; CQueuedPipe::~CQueuedPipe

; 343  : {

  00000		 |$LN5@CQueuedPip@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37637|
  00004	e1a05000	 mov         r5, r0
  00008	e59f3024	 ldr         r3, [pc, #0x24]

; 344  :     DEBUGMSG( ZONE_PIPE && ZONE_VERBOSE, (TEXT("%s: +CQueuedPipe::~CQueuedPipe\n"),GetControllerName()) );
; 345  :     // queue should be freed via ClosePipe before calling destructor
; 346  :     EnterCriticalSection( &m_csPipeLock );

  0000c	e1a04005	 mov         r4, r5
  00010	e4843020	 str         r3, [r4], #0x20
  00014	e1a00004	 mov         r0, r4
  00018	eb000000	 bl          EnterCriticalSection

; 347  :     ASSERT(m_pPipeQHead == NULL);
; 348  :     ASSERT(m_pUnQueuedTransfer==NULL);      // ptr to last transfer in queue
; 349  :     ASSERT(m_pQueuedTransfer==NULL);
; 350  :     LeaveCriticalSection( &m_csPipeLock );

  0001c	e1a00004	 mov         r0, r4
  00020	eb000000	 bl          LeaveCriticalSection

; 351  :     DEBUGMSG( ZONE_PIPE && ZONE_VERBOSE, (TEXT("%s: -CQueuedPipe::~CQueuedPipe\n"),GetControllerName()) );
; 352  : }

  00024	e1a00005	 mov         r0, r5
  00028	eb000000	 bl          |??1CPipe@@UAA@XZ|
  0002c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00030	e12fff1e	 bx          lr
  00034		 |$LN6@CQueuedPip@2|
  00034		 |$LN7@CQueuedPip@2|
  00034	00000000	 DCD         |??_7CQueuedPipe@@6B@|
  00038		 |$M37638|

			 ENDP  ; |??1CQueuedPipe@@UAA@XZ|, CQueuedPipe::~CQueuedPipe

	IMPORT	|?DoneTransfer@CQTransfer@@QAAHXZ|	; CQTransfer::DoneTransfer
	IMPORT	|Sleep|
	IMPORT	|?AbortTransfer@CQTransfer@@QAAHXZ|	; CQTransfer::AbortTransfer
	IMPORT	|__C_specific_handler|
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.h

  00000			 AREA	 |.pdata|, PDATA
|$T37714| DCD	|$LN50@AbortTrans|
	DCD	0xc0006b05

  00000			 AREA	 |.pdata|, PDATA
|$T37716| DCD	|$LN18@AbortTrans|
	DCD	0x40000301

  00000			 AREA	 |.xdata|, DATA
|$T37712| DCD	0x1
	DCD	|$LN22@AbortTrans|
	DCD	|$LN23@AbortTrans|
	DCD	|$LN18@AbortTrans|
	DCD	|$LN19@AbortTrans|
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T37712|

  00008		 |?AbortTransfer@CQueuedPipe@@UAA?AW4HCD_REQUEST_STATUS@@Q6AKPAX@ZQAXPBX@Z| PROC ; CQueuedPipe::AbortTransfer

; 375  : {

  00008		 |$LN50@AbortTrans|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d000f	 stmdb       sp!, {r0 - r3}
  00010	e92d5ff0	 stmdb       sp!, {r4 - r12, lr}
  00014	e28db028	 add         r11, sp, #0x28
  00018	e24dd048	 sub         sp, sp, #0x48
  0001c		 |$LN48@AbortTrans|
  0001c	e1a0a003	 mov         r10, r3
  00020	e50b206c	 str         r2, [r11, #-0x6C]
  00024	e1a08001	 mov         r8, r1
  00028	e1a05000	 mov         r5, r0
  0002c	e58b5000	 str         r5, [r11]

; 376  :     DEBUGMSG( ZONE_TRANSFER, (TEXT("%s: +CQueuedPipe(%s)::AbortTransfer - lpvCancelId = 0x%x\n"),GetControllerName(), GetPipeType(), lpvCancelId) );
; 377  : 
; 378  :     HCD_REQUEST_STATUS status = requestFailed;
; 379  :     BOOL fCheckSchedule = FALSE;
; 380  : 
; 381  :     EnterCriticalSection( &m_csPipeLock );

  00030	e2850020	 add         r0, r5, #0x20
  00034	e3a06000	 mov         r6, #0
  00038	e3a09000	 mov         r9, #0
  0003c	eb000000	 bl          EnterCriticalSection

; 382  :     CQTransfer * pCurTransfer = m_pUnQueuedTransfer;

  00040	e595e068	 ldr         lr, [r5, #0x68]

; 383  :     CQTransfer * pPrevTransfer= NULL;

  00044	e3a07000	 mov         r7, #0
  00048	e1b0400e	 movs        r4, lr
  0004c	ea000009	 b           |$LN47@AbortTrans|
  00050		 |$LL12@AbortTrans|

; 384  :     while (pCurTransfer && pCurTransfer->GetSTransfer().lpvCancelId !=  lpvCancelId ) {

  00050	e24b0068	 sub         r0, r11, #0x68
  00054	e284101c	 add         r1, r4, #0x1C
  00058	e3a02040	 mov         r2, #0x40
  0005c	eb000000	 bl          memcpy
  00060	e51be040	 ldr         lr, [r11, #-0x40]
  00064	e15e000a	 cmp         lr, r10
  00068	0a000004	 beq         |$LN46@AbortTrans|

; 385  :         pPrevTransfer = pCurTransfer;
; 386  :         pCurTransfer= ( CQTransfer *)pCurTransfer->GetNextTransfer();

  0006c	e594300c	 ldr         r3, [r4, #0xC]
  00070	e1a07004	 mov         r7, r4
  00074	e1b04003	 movs        r4, r3
  00078		 |$LN47@AbortTrans|
  00078	e50b4070	 str         r4, [r11, #-0x70]
  0007c	1afffff3	 bne         |$LL12@AbortTrans|
  00080		 |$LN46@AbortTrans|

; 387  :         
; 388  :     };
; 389  :     if (pCurTransfer) { // Found Transfer that not queue yet.

  00080	e3540000	 cmp         r4, #0
  00084	0a000007	 beq         |$LN10@AbortTrans|

; 390  :         pCurTransfer->AbortTransfer();

  00088	e1a00004	 mov         r0, r4
  0008c	eb000000	 bl          |?AbortTransfer@CQTransfer@@QAAHXZ|

; 391  :         if (pPrevTransfer)

  00090	e3570000	 cmp         r7, #0

; 392  :             pPrevTransfer->SetNextTransfer(pCurTransfer->GetNextTransfer());

  00094	e594300c	 ldr         r3, [r4, #0xC]
  00098	1587300c	 strne       r3, [r7, #0xC]

; 391  :         if (pPrevTransfer)

  0009c	1a00001e	 bne         |$LN6@AbortTrans|

; 393  :         else
; 394  :             m_pUnQueuedTransfer = ( CQTransfer *)pCurTransfer->GetNextTransfer();

  000a0	e5853068	 str         r3, [r5, #0x68]

; 395  :     }
; 396  :     else {

  000a4	ea00001c	 b           |$LN6@AbortTrans|
  000a8		 |$LN10@AbortTrans|

; 397  :         if (m_pQueuedTransfer!=NULL &&  m_pQueuedTransfer->GetSTransfer().lpvCancelId ==  lpvCancelId ) {

  000a8	e595306c	 ldr         r3, [r5, #0x6C]
  000ac	e1b07003	 movs        r7, r3
  000b0	0a000019	 beq         |$LN6@AbortTrans|
  000b4	e24b0068	 sub         r0, r11, #0x68
  000b8	e287101c	 add         r1, r7, #0x1C
  000bc	e3a02040	 mov         r2, #0x40
  000c0	eb000000	 bl          memcpy
  000c4	e51b3040	 ldr         r3, [r11, #-0x40]
  000c8	e153000a	 cmp         r3, r10
  000cc	1a000012	 bne         |$LN6@AbortTrans|

; 398  :             // This is one in the schdeule
; 399  :             // Not sure if it needs to do something here.
; 400  :             m_pQueuedTransfer->AbortTransfer();           

  000d0	e1a00007	 mov         r0, r7
  000d4	eb000000	 bl          |?AbortTransfer@CQTransfer@@QAAHXZ|

; 401  :             GetQHead()->InvalidNextTD(); 

  000d8	e5953000	 ldr         r3, [r5]
  000dc	e1a00005	 mov         r0, r5
  000e0	e5933040	 ldr         r3, [r3, #0x40]
  000e4	e1a0e00f	 mov         lr, pc
  000e8	e12fff13	 bx          r3

; 402  :             Sleep(2);// this sleep is for Interrupt Pipe;

  000ec	e3a00002	 mov         r0, #2
  000f0	eb000000	 bl          Sleep

; 403  :             pCurTransfer = m_pQueuedTransfer;
; 404  :             m_pQueuedTransfer = NULL;            
; 405  :             GetQHead()->ClearTDList();

  000f4	e5953000	 ldr         r3, [r5]
  000f8	e595406c	 ldr         r4, [r5, #0x6C]
  000fc	e3a07000	 mov         r7, #0
  00100	e5933040	 ldr         r3, [r3, #0x40]
  00104	e1a00005	 mov         r0, r5
  00108	e50b4070	 str         r4, [r11, #-0x70]
  0010c	e585706c	 str         r7, [r5, #0x6C]
  00110	e1a0e00f	 mov         lr, pc
  00114	e12fff13	 bx          r3
  00118	e5807004	 str         r7, [r0, #4]
  0011c		 |$LN6@AbortTrans|

; 406  :         }
; 407  :         else 
; 408  :             ASSERT(FALSE);        
; 409  :     };
; 410  :     if (pCurTransfer) {

  0011c	e3540000	 cmp         r4, #0
  00120	0a000014	 beq         |$LN4@AbortTrans|

; 411  :         pCurTransfer->DoneTransfer();

  00124	e1a00004	 mov         r0, r4
  00128	eb000000	 bl          |?DoneTransfer@CQTransfer@@QAAHXZ|

; 412  :         if ( lpCancelAddress ) {

  0012c	e3580000	 cmp         r8, #0
  00130	0a000008	 beq         |$LN24@AbortTrans|
  00134		 |$LN22@AbortTrans|

; 413  :             __try { // calling the Cancel function
; 414  :                 ( *lpCancelAddress )( lpvNotifyParameter );

  00134	e51b006c	 ldr         r0, [r11, #-0x6C]
  00138	e1a0e00f	 mov         lr, pc
  0013c	e12fff18	 bx          r8
  00140		 |$LN23@AbortTrans|
  00140	ea000004	 b           |$LN24@AbortTrans|
  00144		 |$LN19@AbortTrans|

; 415  :             } __except( EXCEPTION_EXECUTE_HANDLER ) {

  00144	e59b5000	 ldr         r5, [r11]
  00148	e51b4070	 ldr         r4, [r11, #-0x70]
  0014c	ea000001	 b           |$LN24@AbortTrans|
  00150		 |$LN45@AbortTrans|

; 426  :     }
; 427  : 
; 428  :     DEBUGMSG( ZONE_TRANSFER, (TEXT("-CQueuedPipe(%s)::AbortTransfer - lpvCancelId = 0x%x, returning HCD_REQUEST_STATUS %d\n"), GetPipeType(), lpvCancelId, status) );
; 429  :     return status;

  00150	e51b606c	 ldr         r6, [r11, #-0x6C]
  00154	ea000012	 b           |$LN1@AbortTrans|
  00158		 |$LN24@AbortTrans|

; 416  :                   DEBUGMSG( ZONE_ERROR, (TEXT("%s: CQueuedPipe::AbortTransfer - exception executing cancellation callback function\n"),GetControllerName()) );
; 417  :             }
; 418  :         }
; 419  :         status = requestOK;
; 420  :         delete pCurTransfer;

  00158	e5943000	 ldr         r3, [r4]
  0015c	e3a01001	 mov         r1, #1
  00160	e1a00004	 mov         r0, r4
  00164	e5933000	 ldr         r3, [r3]
  00168	e3a06001	 mov         r6, #1
  0016c	e1a0e00f	 mov         lr, pc
  00170	e12fff13	 bx          r3

; 421  :         fCheckSchedule = TRUE;

  00174	e3a09001	 mov         r9, #1
  00178		 |$LN4@AbortTrans|

; 422  :     }
; 423  :     LeaveCriticalSection( &m_csPipeLock );

  00178	e2850020	 add         r0, r5, #0x20
  0017c	eb000000	 bl          LeaveCriticalSection

; 424  :     if (fCheckSchedule && (m_pQueuedTransfer == NULL) ) { // This queue is no longer active. re-activate it.

  00180	e3590000	 cmp         r9, #0
  00184	0a000006	 beq         |$LN1@AbortTrans|
  00188	e595306c	 ldr         r3, [r5, #0x6C]
  0018c	e3530000	 cmp         r3, #0

; 425  :             ScheduleTransfer();

  00190	05953000	 ldreq       r3, [r5]
  00194	01a00005	 moveq       r0, r5
  00198	05933030	 ldreq       r3, [r3, #0x30]
  0019c	01a0e00f	 moveq       lr, pc
  001a0	012fff13	 bxeq        r3
  001a4		 |$LN1@AbortTrans|

; 430  : }

  001a4	e1a00006	 mov         r0, r6
  001a8	e24bd028	 sub         sp, r11, #0x28
  001ac	e89d6ff0	 ldmia       sp, {r4 - r11, sp, lr}
  001b0	e12fff1e	 bx          lr

			 ENDP  ; |?AbortTransfer@CQueuedPipe@@UAA?AW4HCD_REQUEST_STATUS@@Q6AKPAX@ZQAXPBX@Z|, CQueuedPipe::AbortTransfer

  001b4		 |$LN18@AbortTrans|
  001b4		 |$LN49@AbortTrans|

; 415  :             } __except( EXCEPTION_EXECUTE_HANDLER ) {

  001b4	e52de004	 str         lr, [sp, #-4]!
  001b8		 |$LN21@AbortTrans|
  001b8		 |$LN52@AbortTrans|
  001b8	e3a00001	 mov         r0, #1
  001bc		 |$LN20@AbortTrans|
  001bc	e49df004	 ldr         pc, [sp], #4
  001c0		 |$LN53@AbortTrans|
  001c0		 |$LN51@AbortTrans|

  00000			 AREA	 |.pdata|, PDATA
|$T37728| DCD	|$LN5@ClearHalte@2|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ClearHaltedFlag@CQueuedPipe@@UAAXXZ| PROC ; CQueuedPipe::ClearHaltedFlag

; 441  : {

  00000		 |$LN5@ClearHalte@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37725|
  00004	e1a04000	 mov         r4, r0

; 442  :     DEBUGMSG( ZONE_PIPE && ZONE_VERBOSE, (TEXT("%s: +CQueuedPipe(%s)::ClearHaltedFlag\n"),GetControllerName(), GetPipeType() ) );
; 443  : 
; 444  :     EnterCriticalSection( &m_csPipeLock );

  00008	e2840020	 add         r0, r4, #0x20
  0000c	eb000000	 bl          EnterCriticalSection

; 445  :     DEBUGMSG( ZONE_WARNING && !m_fIsHalted, (TEXT("%s: CQueuedPipe(%s)::ClearHaltedFlag - warning! Called on non-stalled pipe\n"),GetControllerName(), GetPipeType()) );
; 446  :     m_fIsHalted = FALSE;

  00010	e3a03000	 mov         r3, #0

; 447  :     
; 448  :     LeaveCriticalSection( &m_csPipeLock );

  00014	e2840020	 add         r0, r4, #0x20
  00018	e5843044	 str         r3, [r4, #0x44]
  0001c	eb000000	 bl          LeaveCriticalSection

; 449  : 
; 450  :     DEBUGMSG( ZONE_PIPE && ZONE_VERBOSE, (TEXT("%s: -CQueuedPipe(%s)::ClearHaltedFlag\n"),GetControllerName(), GetPipeType()) );
; 451  : }

  00020	e8bd4010	 ldmia       sp!, {r4, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M37726|

			 ENDP  ; |?ClearHaltedFlag@CQueuedPipe@@UAAXXZ|, CQueuedPipe::ClearHaltedFlag

	EXPORT	|?AbortQueue@CQueuedPipe@@IAAXXZ|	; CQueuedPipe::AbortQueue
	EXPORT	|??_C@_1BK@MICGADHL@?$AAA?$AAb?$AAo?$AAr?$AAt?$AAQ?$AAu?$AAe?$AAu?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.h

  00000			 AREA	 |.pdata|, PDATA
|$T37764| DCD	|$LN25@AbortQueue|
	DCD	0x40003201

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@MICGADHL@?$AAA?$AAb?$AAo?$AAr?$AAt?$AAQ?$AAu?$AAe?$AAu?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "A"
	DCB	0x0, "b", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, "Q", 0x0, "u"
	DCB	0x0, "e", 0x0, "u", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AbortQueue@CQueuedPipe@@IAAXXZ| PROC	; CQueuedPipe::AbortQueue

; 464  : {

  00000		 |$LN25@AbortQueue|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37761|
  00004	e1a04000	 mov         r4, r0

; 465  :     DEBUGMSG( ZONE_TRANSFER, (TEXT("%s: +CQueuedPipe(%s)::AbortQueue \n"),GetControllerName(), GetPipeType()) );
; 466  :     EnterCriticalSection( &m_csPipeLock );

  00008	e2840020	 add         r0, r4, #0x20
  0000c	eb000000	 bl          EnterCriticalSection

; 467  :     if ( m_pUnQueuedTransfer) {      // ptr to last transfer in queue

  00010	ea00000c	 b           |$LN22@AbortQueue|
  00014		 |$LL3@AbortQueue|

; 468  :         while ( m_pUnQueuedTransfer) {
; 469  :             m_pUnQueuedTransfer ->AbortTransfer();

  00014	e5940068	 ldr         r0, [r4, #0x68]
  00018	eb000000	 bl          |?AbortTransfer@CQTransfer@@QAAHXZ|

; 470  :             m_pUnQueuedTransfer ->DoneTransfer();

  0001c	e5940068	 ldr         r0, [r4, #0x68]
  00020	eb000000	 bl          |?DoneTransfer@CQTransfer@@QAAHXZ|

; 471  :             CQTransfer * pCurTransfer= (CQTransfer *) m_pUnQueuedTransfer->GetNextTransfer();

  00024	e5943068	 ldr         r3, [r4, #0x68]
  00028	e593500c	 ldr         r5, [r3, #0xC]

; 472  :             delete m_pUnQueuedTransfer;

  0002c	e1b00003	 movs        r0, r3
  00030	15903000	 ldrne       r3, [r0]
  00034	13a01001	 movne       r1, #1
  00038	15933000	 ldrne       r3, [r3]
  0003c	11a0e00f	 movne       lr, pc
  00040	112fff13	 bxne        r3

; 473  :             m_pUnQueuedTransfer = pCurTransfer;

  00044	e5845068	 str         r5, [r4, #0x68]
  00048		 |$LN22@AbortQueue|
  00048	e5943068	 ldr         r3, [r4, #0x68]
  0004c	e3530000	 cmp         r3, #0
  00050	1affffef	 bne         |$LL3@AbortQueue|

; 474  :         }       
; 475  :     }
; 476  :     ASSERT( m_pUnQueuedTransfer == NULL);
; 477  :     if (m_pQueuedTransfer) {

  00054	e594306c	 ldr         r3, [r4, #0x6C]
  00058	e3530000	 cmp         r3, #0
  0005c	0a000014	 beq         |$LN17@AbortQueue|

; 478  :         RETAILMSG(1, (TEXT("AbortQueue\r\n")));

  00060	e59f005c	 ldr         r0, [pc, #0x5C]
  00064	eb000000	 bl          NKDbgPrintfW

; 479  :         m_pQueuedTransfer;
; 480  :         m_pQueuedTransfer ->AbortTransfer();

  00068	e594006c	 ldr         r0, [r4, #0x6C]
  0006c	eb000000	 bl          |?AbortTransfer@CQTransfer@@QAAHXZ|

; 481  :         GetQHead()->InvalidNextTD();  

  00070	e5943000	 ldr         r3, [r4]
  00074	e1a00004	 mov         r0, r4
  00078	e5933040	 ldr         r3, [r3, #0x40]
  0007c	e1a0e00f	 mov         lr, pc
  00080	e12fff13	 bx          r3

; 482  :         Sleep(2);// this sleep is for Interrupt Pipe;

  00084	e3a00002	 mov         r0, #2
  00088	eb000000	 bl          Sleep

; 483  :         m_pQueuedTransfer->DoneTransfer();

  0008c	e594006c	 ldr         r0, [r4, #0x6C]
  00090	eb000000	 bl          |?DoneTransfer@CQTransfer@@QAAHXZ|

; 484  :         m_pQueuedTransfer =  NULL;
; 485  :         delete m_pQueuedTransfer;
; 486  :         m_pQueuedTransfer = NULL;        
; 487  :         GetQHead()->ClearTDList();

  00094	e5943000	 ldr         r3, [r4]
  00098	e3a05000	 mov         r5, #0
  0009c	e1a00004	 mov         r0, r4
  000a0	e5933040	 ldr         r3, [r3, #0x40]
  000a4	e584506c	 str         r5, [r4, #0x6C]
  000a8	e1a0e00f	 mov         lr, pc
  000ac	e12fff13	 bx          r3
  000b0	e5805004	 str         r5, [r0, #4]
  000b4		 |$LN17@AbortQueue|

; 488  :     }
; 489  :     ASSERT(m_pQueuedTransfer == NULL);
; 490  : 
; 491  :     LeaveCriticalSection( &m_csPipeLock );

  000b4	e2840020	 add         r0, r4, #0x20
  000b8	eb000000	 bl          LeaveCriticalSection

; 492  :     DEBUGMSG( ZONE_TRANSFER, (TEXT("%s: -CQueuedPipe(%s)::AbortQueue - %d\n"),GetControllerName(), GetPipeType()) );
; 493  : }

  000bc	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000c0	e12fff1e	 bx          lr
  000c4		 |$LN26@AbortQueue|
  000c4		 |$LN27@AbortQueue|
  000c4	00000000	 DCD         |??_C@_1BK@MICGADHL@?$AAA?$AAb?$AAo?$AAr?$AAt?$AAQ?$AAu?$AAe?$AAu?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  000c8		 |$M37762|

			 ENDP  ; |?AbortQueue@CQueuedPipe@@IAAXXZ|, CQueuedPipe::AbortQueue

	IMPORT	|??2@YAPAXI@Z|				; operator new
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\trans.h

  00000			 AREA	 |.pdata|, PDATA
|$T37823| DCD	|$LN44@IssueTrans|
	DCD	0xc0009a05

  00000			 AREA	 |.pdata|, PDATA
|$T37825| DCD	|$LN19@IssueTrans|
	DCD	0x40000502

  00000			 AREA	 |.xdata|, DATA
|$T37821| DCD	0x1
	DCD	|$LN23@IssueTrans|
	DCD	|$LN24@IssueTrans|
	DCD	|$LN19@IssueTrans|
	DCD	|$LN20@IssueTrans|
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T37821|

  00008		 |?IssueTransfer@CQueuedPipe@@UAA?AW4HCD_REQUEST_STATUS@@EQ6AKPAX@ZQAXKQBXKKQBKK2K3QAK5QAH55@Z| PROC ; CQueuedPipe::IssueTransfer

; 526  : {

  00008		 |$LN44@IssueTrans|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d000f	 stmdb       sp!, {r0 - r3}
  00010	e92d5ff0	 stmdb       sp!, {r4 - r12, lr}
  00014	e28db028	 add         r11, sp, #0x28
  00018	e24dd094	 sub         sp, sp, #0x94
  0001c		 |$LN42@IssueTrans|
  0001c	e50b3070	 str         r3, [r11, #-0x70]
  00020	e50b2074	 str         r2, [r11, #-0x74]
  00024	e54b1080	 strb        r1, [r11, #-0x80]
  00028	e1a05000	 mov         r5, r0
  0002c	e50b507c	 str         r5, [r11, #-0x7C]
  00030	e58b5000	 str         r5, [r11]

; 527  :     DEBUGMSG( ZONE_TRANSFER, (TEXT("%s: +CPipe(%s)::IssueTransfer, address = %d\n"),GetControllerName(), GetPipeType(), address) );
; 528  :  
; 529  :     //m_pPipeQHead ->SetDeviceAddress(m_bDeviceAddress, USB_ENDPOINT_DIRECTION_OUT(m_usbEndpointDescriptor.bEndpointAddress));
; 530  :     // Check if it is connected first
; 531  :     if(m_pCMhcd->IsHostConnect() == FALSE)

  00034	e595000c	 ldr         r0, [r5, #0xC]
  00038	e5904000	 ldr         r4, [r0]
  0003c	e5944068	 ldr         r4, [r4, #0x68]
  00040	e1a0e00f	 mov         lr, pc
  00044	e12fff14	 bx          r4
  00048	e3500000	 cmp         r0, #0

; 532  :     {
; 533  :         DEBUGMSG(ZONE_WARNING, (TEXT("CQueuedPipe::IssueTransfer:: Disconnect\r\n")));
; 534  :         return requestFailed;

  0004c	03a04000	 moveq       r4, #0

; 527  :     DEBUGMSG( ZONE_TRANSFER, (TEXT("%s: +CPipe(%s)::IssueTransfer, address = %d\n"),GetControllerName(), GetPipeType(), address) );
; 528  :  
; 529  :     //m_pPipeQHead ->SetDeviceAddress(m_bDeviceAddress, USB_ENDPOINT_DIRECTION_OUT(m_usbEndpointDescriptor.bEndpointAddress));
; 530  :     // Check if it is connected first
; 531  :     if(m_pCMhcd->IsHostConnect() == FALSE)

  00050	0a000082	 beq         |$LN10@IssueTrans|

; 535  :     }
; 536  : 
; 537  : 
; 538  :     
; 539  : 
; 540  :     STransfer sTransfer = {
; 541  :     // These are the IssueTransfer parameters
; 542  :         lpStartAddress,lpvNotifyParameter, dwFlags,lpvControlHeader, dwStartingFrame,dwFrames,
; 543  :         aLengths,dwBufferSize,lpvClientBuffer,paBuffer,lpvCancelId,adwIsochErrors, adwIsochLengths,
; 544  :         lpfComplete,lpdwBytesTransferred,lpdwError};
; 545  :     HCD_REQUEST_STATUS  status = requestFailed;
; 546  :     if (AreTransferParametersValid(&sTransfer) && GetQHead() && m_bDeviceAddress == address ) {

  00054	e5953000	 ldr         r3, [r5]
  00058	e59b2010	 ldr         r2, [r11, #0x10]
  0005c	e59b4014	 ldr         r4, [r11, #0x14]
  00060	e59b5018	 ldr         r5, [r11, #0x18]
  00064	e59b601c	 ldr         r6, [r11, #0x1C]
  00068	e59b7020	 ldr         r7, [r11, #0x20]
  0006c	e59b8024	 ldr         r8, [r11, #0x24]
  00070	e59b9028	 ldr         r9, [r11, #0x28]
  00074	e59ba02c	 ldr         r10, [r11, #0x2C]
  00078	e5933044	 ldr         r3, [r3, #0x44]
  0007c	e50b306c	 str         r3, [r11, #-0x6C]
  00080	e24b1068	 sub         r1, r11, #0x68
  00084	e51b007c	 ldr         r0, [r11, #-0x7C]
  00088	e51b3074	 ldr         r3, [r11, #-0x74]
  0008c	e50b3068	 str         r3, [r11, #-0x68]
  00090	e51b3070	 ldr         r3, [r11, #-0x70]
  00094	e50b3064	 str         r3, [r11, #-0x64]
  00098	e50b2060	 str         r2, [r11, #-0x60]
  0009c	e50b405c	 str         r4, [r11, #-0x5C]
  000a0	e50b5058	 str         r5, [r11, #-0x58]
  000a4	e50b6054	 str         r6, [r11, #-0x54]
  000a8	e50b7050	 str         r7, [r11, #-0x50]
  000ac	e50b804c	 str         r8, [r11, #-0x4C]
  000b0	e50b9048	 str         r9, [r11, #-0x48]
  000b4	e50ba044	 str         r10, [r11, #-0x44]
  000b8	e59b3030	 ldr         r3, [r11, #0x30]
  000bc	e50b3040	 str         r3, [r11, #-0x40]
  000c0	e59b3034	 ldr         r3, [r11, #0x34]
  000c4	e50b303c	 str         r3, [r11, #-0x3C]
  000c8	e59b3038	 ldr         r3, [r11, #0x38]
  000cc	e50b3038	 str         r3, [r11, #-0x38]
  000d0	e59b303c	 ldr         r3, [r11, #0x3C]
  000d4	e50b3034	 str         r3, [r11, #-0x34]
  000d8	e59b3040	 ldr         r3, [r11, #0x40]
  000dc	e50b3030	 str         r3, [r11, #-0x30]
  000e0	e59b3044	 ldr         r3, [r11, #0x44]
  000e4	e50b302c	 str         r3, [r11, #-0x2C]
  000e8	e3a04000	 mov         r4, #0
  000ec	e50b4078	 str         r4, [r11, #-0x78]
  000f0	e51b306c	 ldr         r3, [r11, #-0x6C]
  000f4	e1a0e00f	 mov         lr, pc
  000f8	e12fff13	 bx          r3
  000fc	e3500000	 cmp         r0, #0
  00100	0a000056	 beq         |$LN10@IssueTrans|
  00104	e51b507c	 ldr         r5, [r11, #-0x7C]
  00108	e5953000	 ldr         r3, [r5]
  0010c	e1a00005	 mov         r0, r5
  00110	e5933040	 ldr         r3, [r3, #0x40]
  00114	e1a0e00f	 mov         lr, pc
  00118	e12fff13	 bx          r3
  0011c	e3500000	 cmp         r0, #0
  00120	0a00004e	 beq         |$LN10@IssueTrans|
  00124	e5d5303b	 ldrb        r3, [r5, #0x3B]
  00128	e55b2080	 ldrb        r2, [r11, #-0x80]
  0012c	e1530002	 cmp         r3, r2
  00130	1a00004a	 bne         |$LN10@IssueTrans|

; 547  :         EnterCriticalSection( &m_csPipeLock );

  00134	e2850020	 add         r0, r5, #0x20
  00138	eb000000	 bl          EnterCriticalSection
  0013c		 |$LN23@IssueTrans|

; 548  : #pragma prefast(disable: 322, "Recover gracefully from hardware failure")
; 549  :         __try { // initializing transfer status parameters
; 550  :             *sTransfer.lpfComplete = FALSE;

  0013c	e51b3034	 ldr         r3, [r11, #-0x34]
  00140	e3a06000	 mov         r6, #0
  00144	e3a02c01	 mov         r2, #1, 24
  00148	e5836000	 str         r6, [r3]

; 551  :             *sTransfer.lpdwBytesTransferred = 0;

  0014c	e51b3030	 ldr         r3, [r11, #-0x30]

; 552  :             *sTransfer.lpdwError = USB_NOT_COMPLETE_ERROR;

  00150	e3822003	 orr         r2, r2, #3

; 553  :             CQTransfer * pTransfer = new CQTransfer(this,m_pCMhcd->GetPhysMem(),sTransfer);

  00154	e3a0006c	 mov         r0, #0x6C
  00158	e5836000	 str         r6, [r3]
  0015c	e51b302c	 ldr         r3, [r11, #-0x2C]
  00160	e5832000	 str         r2, [r3]
  00164	eb000000	 bl          |??2@YAPAXI@Z|
  00168	e1b04000	 movs        r4, r0
  0016c	0a00000b	 beq         |$LN14@IssueTrans|
  00170	e28d0000	 add         r0, sp, #0
  00174	e24b1064	 sub         r1, r11, #0x64
  00178	e3a0203c	 mov         r2, #0x3C
  0017c	eb000000	 bl          memcpy
  00180	e595200c	 ldr         r2, [r5, #0xC]
  00184	e51b3068	 ldr         r3, [r11, #-0x68]
  00188	e1a01005	 mov         r1, r5
  0018c	e5922294	 ldr         r2, [r2, #0x294]
  00190	e1a00004	 mov         r0, r4
  00194	eb000000	 bl          |??0CQTransfer@@QAA@QAVCPipe@@QAVCPhysMem@@USTRANSFER@@@Z|
  00198	e1a04000	 mov         r4, r0
  0019c	ea000000	 b           |$LN15@IssueTrans|
  001a0		 |$LN14@IssueTrans|
  001a0	e3a04000	 mov         r4, #0
  001a4		 |$LN15@IssueTrans|

; 554  :             if (pTransfer && pTransfer->Init()) {

  001a4	e3540000	 cmp         r4, #0
  001a8	0a00001f	 beq         |$LN40@IssueTrans|
  001ac	e5943000	 ldr         r3, [r4]
  001b0	e1a00004	 mov         r0, r4
  001b4	e5933004	 ldr         r3, [r3, #4]
  001b8	e1a0e00f	 mov         lr, pc
  001bc	e12fff13	 bx          r3
  001c0	e3500000	 cmp         r0, #0
  001c4	0a00000c	 beq         |$LN8@IssueTrans|

; 555  :                 CQTransfer * pCur = m_pUnQueuedTransfer;

  001c8	e5953068	 ldr         r3, [r5, #0x68]
  001cc	e1b02003	 movs        r2, r3

; 556  :                 if (pCur) {

  001d0	0a000005	 beq         |$LN7@IssueTrans|
  001d4		 |$LL6@IssueTrans|

; 557  :                     while (pCur->GetNextTransfer()!=NULL)

  001d4	e592300c	 ldr         r3, [r2, #0xC]
  001d8	e3530000	 cmp         r3, #0

; 558  :                          pCur = (CQTransfer * )pCur->GetNextTransfer();

  001dc	11a02003	 movne       r2, r3

; 557  :                     while (pCur->GetNextTransfer()!=NULL)

  001e0	1afffffb	 bne         |$LL6@IssueTrans|

; 559  :                     pCur->SetNextTransfer( pTransfer);

  001e4	e582400c	 str         r4, [r2, #0xC]

; 560  :                 }
; 561  :                 else

  001e8	ea000000	 b           |$LN4@IssueTrans|
  001ec		 |$LN7@IssueTrans|

; 562  :                     m_pUnQueuedTransfer=pTransfer;

  001ec	e5854068	 str         r4, [r5, #0x68]
  001f0		 |$LN4@IssueTrans|

; 563  :                 status=requestOK ;

  001f0	e3a04001	 mov         r4, #1
  001f4	e50b4078	 str         r4, [r11, #-0x78]

; 564  :             }
; 565  :             else

  001f8	ea00000c	 b           |$LN24@IssueTrans|
  001fc		 |$LN8@IssueTrans|

; 566  :                 if (pTransfer) { // We return fails here so do not need callback;

  001fc	e3540000	 cmp         r4, #0
  00200	0a000009	 beq         |$LN40@IssueTrans|

; 567  :                     pTransfer->DoNotCallBack() ;

  00204	e5846050	 str         r6, [r4, #0x50]
  00208	e5846058	 str         r6, [r4, #0x58]
  0020c	e5846054	 str         r6, [r4, #0x54]
  00210	e584601c	 str         r6, [r4, #0x1C]

; 568  :                     delete pTransfer;    

  00214	e5943000	 ldr         r3, [r4]
  00218	e3a01001	 mov         r1, #1
  0021c	e1a00004	 mov         r0, r4
  00220	e5933000	 ldr         r3, [r3]
  00224	e1a0e00f	 mov         lr, pc
  00228	e12fff13	 bx          r3
  0022c		 |$LN40@IssueTrans|

; 535  :     }
; 536  : 
; 537  : 
; 538  :     
; 539  : 
; 540  :     STransfer sTransfer = {
; 541  :     // These are the IssueTransfer parameters
; 542  :         lpStartAddress,lpvNotifyParameter, dwFlags,lpvControlHeader, dwStartingFrame,dwFrames,
; 543  :         aLengths,dwBufferSize,lpvClientBuffer,paBuffer,lpvCancelId,adwIsochErrors, adwIsochLengths,
; 544  :         lpfComplete,lpdwBytesTransferred,lpdwError};
; 545  :     HCD_REQUEST_STATUS  status = requestFailed;
; 546  :     if (AreTransferParametersValid(&sTransfer) && GetQHead() && m_bDeviceAddress == address ) {

  0022c	e3a04000	 mov         r4, #0

; 568  :                     delete pTransfer;    

  00230		 |$LN24@IssueTrans|

; 569  :                 }

  00230	ea000001	 b           |$LN25@IssueTrans|
  00234		 |$LN20@IssueTrans|

; 570  :         } __except( EXCEPTION_EXECUTE_HANDLER ) {

  00234	e59b5000	 ldr         r5, [r11]
  00238	e51b4078	 ldr         r4, [r11, #-0x78]
  0023c		 |$LN25@IssueTrans|

; 571  :         }
; 572  : #pragma prefast(pop)
; 573  :         LeaveCriticalSection( &m_csPipeLock );

  0023c	e2850020	 add         r0, r5, #0x20
  00240	eb000000	 bl          LeaveCriticalSection

; 574  :         ScheduleTransfer( );

  00244	e5953000	 ldr         r3, [r5]
  00248	e1a00005	 mov         r0, r5
  0024c	e5933030	 ldr         r3, [r3, #0x30]
  00250	e1a0e00f	 mov         lr, pc
  00254	e12fff13	 bx          r3
  00258	ea000000	 b           |$LN10@IssueTrans|
  0025c		 |$LN39@IssueTrans|

; 575  :     }
; 576  :     else
; 577  :         ASSERT(FALSE);
; 578  :     DEBUGMSG( ZONE_TRANSFER, (TEXT("%s: -CPipe(%s)::IssueTransfer - address = %d, returing HCD_REQUEST_STATUS %d\n"),GetControllerName(), GetPipeType(), address, status) );
; 579  :     return status;

  0025c	e51b406c	 ldr         r4, [r11, #-0x6C]

; 574  :         ScheduleTransfer( );

  00260		 |$LN10@IssueTrans|

; 580  : }

  00260	e1a00004	 mov         r0, r4
  00264	e24bd028	 sub         sp, r11, #0x28
  00268	e89d6ff0	 ldmia       sp, {r4 - r11, sp, lr}
  0026c	e12fff1e	 bx          lr

			 ENDP  ; |?IssueTransfer@CQueuedPipe@@UAA?AW4HCD_REQUEST_STATUS@@EQ6AKPAX@ZQAXKQBXKKQBKK2K3QAK5QAH55@Z|, CQueuedPipe::IssueTransfer

  00270		 |$LN19@IssueTrans|
  00270		 |$LN43@IssueTrans|

; 570  :         } __except( EXCEPTION_EXECUTE_HANDLER ) {

  00270	e52de004	 str         lr, [sp, #-4]!
  00274	e24dd03c	 sub         sp, sp, #0x3C
  00278		 |$LN22@IssueTrans|
  00278		 |$LN46@IssueTrans|
  00278	e3a00001	 mov         r0, #1
  0027c		 |$LN21@IssueTrans|
  0027c	e28dd03c	 add         sp, sp, #0x3C
  00280	e49df004	 ldr         pc, [sp], #4
  00284		 |$LN47@IssueTrans|
  00284		 |$LN45@IssueTrans|
	EXPORT	|??_C@_1DE@HBNHEJMM@?$AAS?$AAc?$AAh?$AAe?$AAd?$AAu?$AAl?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@FKIMPLIC@?$AAS?$AAc?$AAh?$AAe?$AAd?$AAu?$AAl?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAc?$AAq?$AAu?$AAi@| [ DATA ] ; `string'
	IMPORT	|?IssueTransfer@CQH@@QAAKPAVCQTD@@@Z|	; CQH::IssueTransfer
	IMPORT	|?AcquirePhysicalEndPoint@CHW@@QAAEPAVCPipe@@@Z| ; CHW::AcquirePhysicalEndPoint
	IMPORT	|?IsActive@CQH@@QAAHXZ|			; CQH::IsActive
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\trans.h

  00000			 AREA	 |.pdata|, PDATA
|$T37860| DCD	|$LN26@ScheduleTr|
	DCD	0x40005301

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@HBNHEJMM@?$AAS?$AAc?$AAh?$AAe?$AAd?$AAu?$AAl?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "c", 0x0, "h", 0x0, "e", 0x0, "d", 0x0, "u", 0x0, "l"
	DCB	0x0, "e", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "f", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@FKIMPLIC@?$AAS?$AAc?$AAh?$AAe?$AAd?$AAu?$AAl?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAc?$AAq?$AAu?$AAi@| DCB "S"
	DCB	0x0, "c", 0x0, "h", 0x0, "e", 0x0, "d", 0x0, "u", 0x0, "l"
	DCB	0x0, "e", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "f", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "a", 0x0, "c", 0x0, "q", 0x0, "u"
	DCB	0x0, "i", 0x0, "r", 0x0, "e", 0x0, " ", 0x0, "e", 0x0, "p"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ScheduleTransfer@CQueuedPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ| PROC ; CQueuedPipe::ScheduleTransfer

; 591  : {

  00000		 |$LN26@ScheduleTr|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M37857|
  00004	e1a05000	 mov         r5, r0

; 592  :     HCD_REQUEST_STATUS  status = requestFailed;
; 593  :     BOOL bGetLock = TRUE;
; 594  :     DEBUGMSG(ZONE_TRANSFER, (TEXT("ST on EP 0x%x, QT(0x%x), UQT(0x%x), QH(0x%x), Active(0x%x)\r\n"), 
; 595  :         m_usbEndpointDescriptor.bEndpointAddress, m_pQueuedTransfer, m_pUnQueuedTransfer, m_pPipeQHead,
; 596  :         m_pPipeQHead->IsActive()));
; 597  :     EnterCriticalSection( &m_csPipeLock );

  00008	e2850020	 add         r0, r5, #0x20
  0000c	e3a06000	 mov         r6, #0
  00010	eb000000	 bl          EnterCriticalSection

; 598  :     if ( m_pQueuedTransfer == NULL && m_pUnQueuedTransfer!=NULL  && 
; 599  :             m_pPipeQHead && m_pPipeQHead->IsActive()==FALSE)

  00014	e595306c	 ldr         r3, [r5, #0x6C]
  00018	e3530000	 cmp         r3, #0
  0001c	1a000043	 bne         |$SCHEDULE_TRANSFER_EXIT$36582|
  00020	e5953068	 ldr         r3, [r5, #0x68]
  00024	e3530000	 cmp         r3, #0
  00028	0a000040	 beq         |$SCHEDULE_TRANSFER_EXIT$36582|
  0002c	e5953064	 ldr         r3, [r5, #0x64]
  00030	e3530000	 cmp         r3, #0
  00034	0a00003d	 beq         |$SCHEDULE_TRANSFER_EXIT$36582|
  00038	e1a00003	 mov         r0, r3
  0003c	eb000000	 bl          |?IsActive@CQH@@QAAHXZ|
  00040	e3500000	 cmp         r0, #0
  00044	1a000039	 bne         |$SCHEDULE_TRANSFER_EXIT$36582|

; 600  :     { // We need cqueue new Transfer.        
; 601  :         CQTransfer * pCurTransfer = m_pUnQueuedTransfer;        

  00048	e5954068	 ldr         r4, [r5, #0x68]

; 602  :         ASSERT(pCurTransfer!=NULL);
; 603  :         m_pUnQueuedTransfer = (CQTransfer * )pCurTransfer->GetNextTransfer();
; 604  :         pCurTransfer->SetNextTransfer(NULL);

  0004c	e3a07000	 mov         r7, #0
  00050	e594300c	 ldr         r3, [r4, #0xC]
  00054	e5853068	 str         r3, [r5, #0x68]
  00058	e584700c	 str         r7, [r4, #0xC]

; 605  :         m_pQueuedTransfer = pCurTransfer;            
; 606  : 
; 607  :         // Acquire the Phyical EndPoint now    
; 608  :         if(USB_ENDPOINT(m_usbEndpointDescriptor.bEndpointAddress) == 0)

  0005c	e5d53036	 ldrb        r3, [r5, #0x36]
  00060	e585406c	 str         r4, [r5, #0x6C]
  00064	e313000f	 tst         r3, #0xF
  00068	1a00000c	 bne         |$LN7@ScheduleTr|

; 609  :             bGetLock = m_pCMhcd->LockEP0(GetReservedDeviceAddr());

  0006c	e5953000	 ldr         r3, [r5]
  00070	e1a00005	 mov         r0, r5
  00074	e5933028	 ldr         r3, [r3, #0x28]
  00078	e1a0e00f	 mov         lr, pc
  0007c	e12fff13	 bx          r3
  00080	e595200c	 ldr         r2, [r5, #0xC]
  00084	e1a01000	 mov         r1, r0
  00088	e5923000	 ldr         r3, [r2]
  0008c	e1a00002	 mov         r0, r2
  00090	e5933074	 ldr         r3, [r3, #0x74]
  00094	e1a0e00f	 mov         lr, pc
  00098	e12fff13	 bx          r3

; 610  :         else

  0009c	ea000005	 b           |$LN12@ScheduleTr|
  000a0		 |$LN7@ScheduleTr|

; 611  :         {
; 612  :             UCHAR ep = m_pCMhcd->AcquirePhysicalEndPoint(this);        

  000a0	e595000c	 ldr         r0, [r5, #0xC]
  000a4	e1a01005	 mov         r1, r5
  000a8	eb000000	 bl          |?AcquirePhysicalEndPoint@CHW@@QAAEPAVCPipe@@@Z|

; 613  :             bGetLock = (ep == 0xff)? FALSE: TRUE;

  000ac	e35000ff	 cmp         r0, #0xFF
  000b0	0a000019	 beq         |$LN23@ScheduleTr|
  000b4	e3a00001	 mov         r0, #1
  000b8		 |$LN12@ScheduleTr|

; 614  :         }
; 615  : 
; 616  :         if (bGetLock == FALSE)

  000b8	e3500000	 cmp         r0, #0
  000bc	0a000016	 beq         |$LN23@ScheduleTr|

; 622  :             goto SCHEDULE_TRANSFER_EXIT;
; 623  :         }
; 624  :         
; 625  :         if (GetQHead()->IssueTransfer(pCurTransfer->GetCQTDList())==ERROR_SUCCESS) {

  000c0	e5953000	 ldr         r3, [r5]
  000c4	e5944068	 ldr         r4, [r4, #0x68]
  000c8	e1a00005	 mov         r0, r5
  000cc	e5933040	 ldr         r3, [r3, #0x40]
  000d0	e1a0e00f	 mov         lr, pc
  000d4	e12fff13	 bx          r3
  000d8	e1a01004	 mov         r1, r4
  000dc	eb000000	 bl          |?IssueTransfer@CQH@@QAAKPAVCQTD@@@Z|
  000e0	e3500000	 cmp         r0, #0

; 626  :             ASSERT(pCurTransfer->GetCQTDList()->GetTransfer()== pCurTransfer);
; 627  :             status=requestOK ;

  000e4	03a06001	 moveq       r6, #1
  000e8	0a000010	 beq         |$SCHEDULE_TRANSFER_EXIT$36582|

; 628  :         }
; 629  :         else {
; 630  :             ASSERT(FALSE);
; 631  :             // Can not Queue. 
; 632  :             RETAILMSG(1, (TEXT("ScheduleTransfer failed\r\n")));

  000ec	e59f0054	 ldr         r0, [pc, #0x54]
  000f0	eb000000	 bl          NKDbgPrintfW

; 633  :             m_fIsHalted = TRUE;            
; 634  :             m_pQueuedTransfer ->AbortTransfer();

  000f4	e595006c	 ldr         r0, [r5, #0x6C]
  000f8	e3a03001	 mov         r3, #1
  000fc	e5853044	 str         r3, [r5, #0x44]
  00100	eb000000	 bl          |?AbortTransfer@CQTransfer@@QAAHXZ|

; 635  :             //ProcessEP(STATUS_PROCESS_ABORT);
; 636  :             // we should not use ProcessEP, but global abort instead
; 637  :             CheckForDoneTransfers();

  00104	e5953000	 ldr         r3, [r5]
  00108	e1a00005	 mov         r0, r5
  0010c	e5933034	 ldr         r3, [r3, #0x34]
  00110	e1a0e00f	 mov         lr, pc
  00114	e12fff13	 bx          r3
  00118	ea000004	 b           |$SCHEDULE_TRANSFER_EXIT$36582|
  0011c		 |$LN23@ScheduleTr|

; 617  :         {
; 618  :             status = requestFailed;
; 619  :             m_pQueuedTransfer = NULL;
; 620  :             RETAILMSG(1, (TEXT("ScheduleTransfer failed to acquire ep %d\r\n"), 
; 621  :                 m_usbEndpointDescriptor.bEndpointAddress));

  0011c	e5d51036	 ldrb        r1, [r5, #0x36]
  00120	e59f001c	 ldr         r0, [pc, #0x1C]
  00124	e3a06000	 mov         r6, #0
  00128	e585706c	 str         r7, [r5, #0x6C]
  0012c	eb000000	 bl          NKDbgPrintfW

; 635  :             //ProcessEP(STATUS_PROCESS_ABORT);
; 636  :             // we should not use ProcessEP, but global abort instead
; 637  :             CheckForDoneTransfers();

  00130		 |$SCHEDULE_TRANSFER_EXIT$36582|

; 638  :         }
; 639  :     }
; 640  :     else 
; 641  :         DEBUGMSG( ZONE_TRANSFER, (TEXT("-CPipe(%s)::ScheduleTransfer - Schedule called during QHead Busy or nothing to schedule! \n"), GetPipeType()) );
; 642  : 
; 643  : SCHEDULE_TRANSFER_EXIT:
; 644  :     LeaveCriticalSection( &m_csPipeLock );

  00130	e2850020	 add         r0, r5, #0x20
  00134	eb000000	 bl          LeaveCriticalSection

; 645  :     return status;
; 646  : }

  00138	e1a00006	 mov         r0, r6
  0013c	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00140	e12fff1e	 bx          lr
  00144		 |$LN27@ScheduleTr|
  00144		 |$LN28@ScheduleTr|
  00144	00000000	 DCD         |??_C@_1FG@FKIMPLIC@?$AAS?$AAc?$AAh?$AAe?$AAd?$AAu?$AAl?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAc?$AAq?$AAu?$AAi@|
  00148		 |$LN29@ScheduleTr|
  00148	00000000	 DCD         |??_C@_1DE@HBNHEJMM@?$AAS?$AAc?$AAh?$AAe?$AAd?$AAu?$AAl?$AAe?$AAT?$AAr?$AAa?$AAn?$AAs?$AAf?$AAe?$AAr?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0014c		 |$M37858|

			 ENDP  ; |?ScheduleTransfer@CQueuedPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ|, CQueuedPipe::ScheduleTransfer

	IMPORT	|?ProcessEP@CQTransfer@@QAAHKH@Z|	; CQTransfer::ProcessEP

  00000			 AREA	 |.pdata|, PDATA
|$T37877| DCD	|$LN7@ProcessEP|
	DCD	0x40001601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ProcessEP@CQueuedPipe@@UAAHKH@Z| PROC ; CQueuedPipe::ProcessEP

; 658  : {

  00000		 |$LN7@ProcessEP|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M37874|
  00004	e1a06002	 mov         r6, r2
  00008	e1a07001	 mov         r7, r1
  0000c	e1a04000	 mov         r4, r0

; 659  :     BOOL bReturn = FALSE;
; 660  :     EnterCriticalSection( &m_csPipeLock );

  00010	e2840020	 add         r0, r4, #0x20
  00014	e3a05000	 mov         r5, #0
  00018	eb000000	 bl          EnterCriticalSection

; 661  :     
; 662  :     if (m_pQueuedTransfer!=NULL && m_pPipeQHead!=NULL) {

  0001c	e594306c	 ldr         r3, [r4, #0x6C]
  00020	e1b00003	 movs        r0, r3
  00024	0a000006	 beq         |$LN2@ProcessEP|
  00028	e5943064	 ldr         r3, [r4, #0x64]
  0002c	e3530000	 cmp         r3, #0
  00030	0a000003	 beq         |$LN2@ProcessEP|

; 663  :         // Check All the transfer done or not.
; 664  :         CQTransfer * pCurTransfer = m_pQueuedTransfer;                        
; 665  :         bReturn = pCurTransfer->ProcessEP(dwStatus, isDMA);

  00034	e1a02006	 mov         r2, r6
  00038	e1a01007	 mov         r1, r7
  0003c	eb000000	 bl          |?ProcessEP@CQTransfer@@QAAHKH@Z|
  00040	e1a05000	 mov         r5, r0
  00044		 |$LN2@ProcessEP|

; 666  :     }
; 667  :     else
; 668  :         DEBUGMSG(ZONE_TRANSFER, (TEXT("ProcessEP empty m_pQueuedTransfer(0x%x), m_pPipeQHead(0x%x)\r\n"),
; 669  :             m_pQueuedTransfer, m_pPipeQHead));
; 670  :     LeaveCriticalSection( &m_csPipeLock );

  00044	e2840020	 add         r0, r4, #0x20
  00048	eb000000	 bl          LeaveCriticalSection

; 671  :     return bReturn;   
; 672  : 
; 673  : 
; 674  : }

  0004c	e1a00005	 mov         r0, r5
  00050	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$M37875|

			 ENDP  ; |?ProcessEP@CQueuedPipe@@UAAHKH@Z|, CQueuedPipe::ProcessEP

	IMPORT	|?IsTransferDone@CQTransfer@@QAAHXZ|	; CQTransfer::IsTransferDone
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\trans.h

  00000			 AREA	 |.pdata|, PDATA
|$T37906| DCD	|$LN20@CheckForDo|
	DCD	0x40003101
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CheckForDoneTransfers@CQueuedPipe@@UAAHXZ| PROC ; CQueuedPipe::CheckForDoneTransfers

; 689  : {

  00000		 |$LN20@CheckForDo|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M37903|
  00004	e1a04000	 mov         r4, r0

; 690  :     BOOL bReturn = FALSE;
; 691  :     EnterCriticalSection( &m_csPipeLock );

  00008	e2840020	 add         r0, r4, #0x20
  0000c	e3a06000	 mov         r6, #0
  00010	eb000000	 bl          EnterCriticalSection

; 692  :     
; 693  :     if (m_pQueuedTransfer!=NULL && m_pPipeQHead!=NULL) {

  00014	e594306c	 ldr         r3, [r4, #0x6C]
  00018	e1b05003	 movs        r5, r3
  0001c	0a00001c	 beq         |$LN2@CheckForDo|
  00020	e5943064	 ldr         r3, [r4, #0x64]
  00024	e3530000	 cmp         r3, #0
  00028	0a000019	 beq         |$LN2@CheckForDo|

; 694  :         // Check All the transfer done or not.
; 695  :         CQTransfer * pCurTransfer = m_pQueuedTransfer;                        
; 696  :         if (pCurTransfer->IsTransferDone() == TRUE) {           

  0002c	e1a00005	 mov         r0, r5
  00030	eb000000	 bl          |?IsTransferDone@CQTransfer@@QAAHXZ|
  00034	e3500001	 cmp         r0, #1
  00038	1a000012	 bne         |$LN4@CheckForDo|

; 697  :             ASSERT(m_pPipeQHead->IsActive() == FALSE) ;// Pipe Stopped.            
; 698  :             m_fIsHalted = (pCurTransfer->DoneTransfer()!=TRUE);

  0003c	e1a00005	 mov         r0, r5
  00040	eb000000	 bl          |?DoneTransfer@CQTransfer@@QAAHXZ|
  00044	e3500001	 cmp         r0, #1
  00048	13a03001	 movne       r3, #1
  0004c	03a03000	 moveq       r3, #0

; 699  :             // Put it into done Queue.
; 700  :             delete pCurTransfer;

  00050	e3550000	 cmp         r5, #0
  00054	e5843044	 str         r3, [r4, #0x44]
  00058	15953000	 ldrne       r3, [r5]
  0005c	13a01001	 movne       r1, #1
  00060	11a00005	 movne       r0, r5
  00064	15933000	 ldrne       r3, [r3]
  00068	11a0e00f	 movne       lr, pc
  0006c	112fff13	 bxne        r3

; 701  :             if (m_fIsHalted)
; 702  :             {
; 703  :                 DEBUGMSG(ZONE_ERROR, (TEXT("Halt and need to do some data toggle\r\n")));
; 704  :             }
; 705  :             // Excute Next one if there is any.
; 706  :             m_pQueuedTransfer =NULL;
; 707  :             m_pPipeQHead->InvalidNextTD();
; 708  :             m_pPipeQHead->ClearTDList();

  00070	e5943064	 ldr         r3, [r4, #0x64]
  00074	e3a02000	 mov         r2, #0
  00078	e584206c	 str         r2, [r4, #0x6C]
  0007c	e5832004	 str         r2, [r3, #4]

; 709  :             bReturn = TRUE;

  00080	e3a06001	 mov         r6, #1

; 710  :         }
; 711  :         else

  00084	ea000002	 b           |$LN2@CheckForDo|
  00088		 |$LN4@CheckForDo|

; 712  :         {  // Process the next one                       
; 713  :            m_pPipeQHead->IssueTransfer(pCurTransfer->GetCQTDList());                        

  00088	e5951068	 ldr         r1, [r5, #0x68]
  0008c	e5940064	 ldr         r0, [r4, #0x64]
  00090	eb000000	 bl          |?IssueTransfer@CQH@@QAAKPAVCQTD@@@Z|
  00094		 |$LN2@CheckForDo|

; 714  :         }
; 715  : 
; 716  :     }
; 717  :     LeaveCriticalSection( &m_csPipeLock );

  00094	e2840020	 add         r0, r4, #0x20
  00098	eb000000	 bl          LeaveCriticalSection

; 718  :     if (m_pQueuedTransfer==NULL)

  0009c	e594306c	 ldr         r3, [r4, #0x6C]
  000a0	e3530000	 cmp         r3, #0

; 719  :     {
; 720  :         ScheduleTransfer();        

  000a4	05943000	 ldreq       r3, [r4]
  000a8	01a00004	 moveq       r0, r4
  000ac	05933030	 ldreq       r3, [r3, #0x30]
  000b0	01a0e00f	 moveq       lr, pc
  000b4	012fff13	 bxeq        r3

; 721  :     }
; 722  : 
; 723  :     return bReturn;   
; 724  : }

  000b8	e1a00006	 mov         r0, r6
  000bc	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000c0	e12fff1e	 bx          lr
  000c4		 |$M37904|

			 ENDP  ; |?CheckForDoneTransfers@CQueuedPipe@@UAAHXZ|, CQueuedPipe::CheckForDoneTransfers

	EXPORT	|??0CBulkPipe@@QAA@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCMhcd@@@Z| ; CBulkPipe::CBulkPipe
	EXPORT	|??_7CBulkPipe@@6B@| [ DATA ]		; CBulkPipe::`vftable'
	EXPORT	|?OpenPipe@CBulkPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ| ; CBulkPipe::OpenPipe
	EXPORT	|?ClosePipe@CBulkPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ| ; CBulkPipe::ClosePipe
	EXPORT	|?GetTransferType@CBulkPipe@@UBA?BKXZ|	; CBulkPipe::GetTransferType
	EXPORT	|?AreTransferParametersValid@CBulkPipe@@EBAHPBUSTRANSFER@@@Z| ; CBulkPipe::AreTransferParametersValid
	IMPORT	|??_ECBulkPipe@@UAAPAXI@Z|, WEAK |??_GCBulkPipe@@UAAPAXI@Z| ; CBulkPipe::`vector deleting destructor', CBulkPipe::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T37919| DCD	|$LN5@CBulkPipe|
	DCD	0x40001502

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CBulkPipe@@6B@| DCD |??_ECBulkPipe@@UAAPAXI@Z|	; CBulkPipe::`vftable'
	DCD	|?OpenPipe@CBulkPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ|
	DCD	|?ClosePipe@CBulkPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ|
	DCD	|?IssueTransfer@CQueuedPipe@@UAA?AW4HCD_REQUEST_STATUS@@EQ6AKPAX@ZQAXKQBXKKQBKK2K3QAK5QAH55@Z|
	DCD	|?AbortTransfer@CQueuedPipe@@UAA?AW4HCD_REQUEST_STATUS@@Q6AKPAX@ZQAXPBX@Z|
	DCD	|?IsPipeHalted@CPipe@@UAA?AW4HCD_REQUEST_STATUS@@QAH@Z|
	DCD	|?ClearHaltedFlag@CQueuedPipe@@UAAXXZ|
	DCD	|?ResetEndPoint@CPipe@@UAAXXZ|
	DCD	|?ChangeMaxPacketSize@CPipeAbs@@UAAXG@Z|
	DCD	|?SetReservedDeviceAddr@CPipe@@UAAHE@Z|
	DCD	|?GetReservedDeviceAddr@CPipe@@UAAEXZ|
	DCD	|?GetCPhysMem@CPipe@@UAAPAVCPhysMem@@XZ|
	DCD	|?ScheduleTransfer@CQueuedPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ|
	DCD	|?CheckForDoneTransfers@CQueuedPipe@@UAAHXZ|
	DCD	|?ProcessEP@CQueuedPipe@@UAAHKH@Z|
	DCD	|?GetTransferType@CBulkPipe@@UBA?BKXZ|
	DCD	|?GetQHead@CQueuedPipe@@UAAPAVCQH@@XZ|
	DCD	|?AreTransferParametersValid@CBulkPipe@@EBAHPBUSTRANSFER@@@Z|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CBulkPipe@@QAA@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCMhcd@@@Z| PROC ; CBulkPipe::CBulkPipe

; 743  : {

  00000		 |$LN5@CBulkPipe|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004	e24dd014	 sub         sp, sp, #0x14
  00008		 |$M37916|
  00008	e1a08000	 mov         r8, r0
  0000c	e59de03c	 ldr         lr, [sp, #0x3C]
  00010	e59d4038	 ldr         r4, [sp, #0x38]
  00014	e5dd5034	 ldrb        r5, [sp, #0x34]
  00018	e5dd6030	 ldrb        r6, [sp, #0x30]
  0001c	e5dd702c	 ldrb        r7, [sp, #0x2C]
  00020	e58de010	 str         lr, [sp, #0x10]
  00024	e58d400c	 str         r4, [sp, #0xC]
  00028	e58d5008	 str         r5, [sp, #8]
  0002c	e58d6004	 str         r6, [sp, #4]
  00030	e58d7000	 str         r7, [sp]
  00034	eb000000	 bl          |??0CQueuedPipe@@QAA@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCMhcd@@@Z|
  00038	e59f3010	 ldr         r3, [pc, #0x10]

; 744  :     DEBUGMSG( ZONE_PIPE && ZONE_VERBOSE, (TEXT("%s: +CBulkPipe::CBulkPipe\n"),GetControllerName()) );
; 745  :     DEBUGCHK( m_usbEndpointDescriptor.bDescriptorType == USB_ENDPOINT_DESCRIPTOR_TYPE &&
; 746  :               m_usbEndpointDescriptor.bLength >= sizeof( USB_ENDPOINT_DESCRIPTOR ) &&
; 747  :               (m_usbEndpointDescriptor.bmAttributes & USB_ENDPOINT_TYPE_MASK) == USB_ENDPOINT_TYPE_BULK );
; 748  : 
; 749  :     DEBUGCHK( !fIsLowSpeed ); // bulk pipe must be high speed
; 750  : 
; 751  :     DEBUGMSG( ZONE_PIPE && ZONE_VERBOSE, (TEXT("%s: -CBulkPipe::CBulkPipe\n"),GetControllerName()) );
; 752  : }

  0003c	e1a00008	 mov         r0, r8
  00040	e5883000	 str         r3, [r8]
  00044	e28dd014	 add         sp, sp, #0x14
  00048	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$LN6@CBulkPipe|
  00050		 |$LN7@CBulkPipe|
  00050	00000000	 DCD         |??_7CBulkPipe@@6B@|
  00054		 |$M37917|

			 ENDP  ; |??0CBulkPipe@@QAA@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCMhcd@@@Z|, CBulkPipe::CBulkPipe

; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.h

  00000			 AREA	 |.pdata|, PDATA
|$T37930| DCD	|$LN5@GetTransfe@2|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetTransferType@CBulkPipe@@UBA?BKXZ| PROC ; CBulkPipe::GetTransferType

; 263  :     {

  00000		 |$LN5@GetTransfe@2|
  00000		 |$M37927|

; 264  :         return USB_ENDPOINT_TYPE_BULK;

  00000	e3a00002	 mov         r0, #2

; 265  :     }

  00004	e12fff1e	 bx          lr
  00008		 |$M37928|

			 ENDP  ; |?GetTransferType@CBulkPipe@@UBA?BKXZ|, CBulkPipe::GetTransferType

	EXPORT	|??_C@_1IA@CCAOPDIB@?$AAM?$AAU?$AAS?$AAB?$AAM?$AAH?$AAD?$AAR?$AAC?$AA?5?$AAi?$AAs?$AAs?$AAu?$AAe?$AA?5?$AA?9?$AA?5?$AAB?$AAU?$AAL?$AAK?$AA?5?$AAO?$AAU?$AAT?$AA?5?$AAp?$AAi?$AAp?$AAe?$AA?5@| [ DATA ] ; `string'
	IMPORT	|??0CQH@@QAA@PAVCPipe@@@Z|		; CQH::CQH
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\chw.h

  00000			 AREA	 |.pdata|, PDATA
|$T37978| DCD	|$LN36@OpenPipe|
	DCD	0x40004a01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IA@CCAOPDIB@?$AAM?$AAU?$AAS?$AAB?$AAM?$AAH?$AAD?$AAR?$AAC?$AA?5?$AAi?$AAs?$AAs?$AAu?$AAe?$AA?5?$AA?9?$AA?5?$AAB?$AAU?$AAL?$AAK?$AA?5?$AAO?$AAU?$AAT?$AA?5?$AAp?$AAi?$AAp?$AAe?$AA?5@| DCB "M"
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, "M", 0x0, "H", 0x0, "D"
	DCB	0x0, "R", 0x0, "C", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, "s"
	DCB	0x0, "u", 0x0, "e", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "B"
	DCB	0x0, "U", 0x0, "L", 0x0, "K", 0x0, " ", 0x0, "O", 0x0, "U"
	DCB	0x0, "T", 0x0, " ", 0x0, "p", 0x0, "i", 0x0, "p", 0x0, "e"
	DCB	0x0, " ", 0x0, "n", 0x0, "e", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, "c", 0x0, "e", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "r", 0x0, "u", 0x0, "n", 0x0, " ", 0x0, "a", 0x0, "t"
	DCB	0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, " ", 0x0, "0"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?OpenPipe@CBulkPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ| PROC ; CBulkPipe::OpenPipe

; 786  : {

  00000		 |$LN36@OpenPipe|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M37975|
  00004	e1a04000	 mov         r4, r0

; 787  :     DEBUGMSG( ZONE_PIPE, (TEXT("%s: +CBulkPipe::OpenPipe\n"),GetControllerName() ) );
; 788  :     
; 789  :     HCD_REQUEST_STATUS status = requestFailed;
; 790  :     m_pUnQueuedTransfer=NULL;      // ptr to last transfer in queue
; 791  :     m_pQueuedTransfer=NULL;
; 792  :     PREFAST_DEBUGCHK( m_pCMhcd!=NULL );
; 793  :     EnterCriticalSection( &m_csPipeLock );

  00008	e3a06000	 mov         r6, #0
  0000c	e2840020	 add         r0, r4, #0x20
  00010	e5846068	 str         r6, [r4, #0x68]
  00014	e584606c	 str         r6, [r4, #0x6C]
  00018	e3a05000	 mov         r5, #0
  0001c	eb000000	 bl          EnterCriticalSection

; 794  : 
; 795  :     // if this fails, someone is trying to open
; 796  :     // an already opened pipe
; 797  :     DEBUGCHK( m_pPipeQHead  == NULL );
; 798  :     ASSERT(m_pCMhcd !=NULL);
; 799  :     DEBUGCHK( !m_fIsLowSpeed );
; 800  :     // In MUSBMHDRC, we don't need to have queue head allocate by CPhysMem anymore
; 801  :     // it is now turn into internal use.
; 802  :     if (m_pPipeQHead == NULL ) {

  00020	e5943064	 ldr         r3, [r4, #0x64]
  00024	e3530000	 cmp         r3, #0
  00028	1a00000a	 bne         |$LN8@OpenPipe|

; 803  :         m_pPipeQHead = new CQH(this);

  0002c	e3a00020	 mov         r0, #0x20
  00030	eb000000	 bl          |??2@YAPAXI@Z|
  00034	e3500000	 cmp         r0, #0
  00038	0a000002	 beq         |$LN12@OpenPipe|
  0003c	e1a01004	 mov         r1, r4
  00040	eb000000	 bl          |??0CQH@@QAA@PAVCPipe@@@Z|
  00044	ea000000	 b           |$LN13@OpenPipe|
  00048		 |$LN12@OpenPipe|
  00048	e3a00000	 mov         r0, #0
  0004c		 |$LN13@OpenPipe|

; 804  :         if (m_pPipeQHead)             

  0004c	e3500000	 cmp         r0, #0

; 805  :             status = requestOK;

  00050	13a05001	 movne       r5, #1
  00054	e5840064	 str         r0, [r4, #0x64]
  00058		 |$LN8@OpenPipe|

; 806  :         else 
; 807  :             ASSERT(FALSE);
; 808  :     }
; 809  :         
; 810  :     LeaveCriticalSection( &m_csPipeLock );

  00058	e2840020	 add         r0, r4, #0x20
  0005c	eb000000	 bl          LeaveCriticalSection

; 811  :     ASSERT(m_pPipeQHead  != NULL);
; 812  :     if (status == requestOK) {

  00060	e3550001	 cmp         r5, #1
  00064	1a00002b	 bne         |$LN32@OpenPipe|

; 813  :         if (m_pCMhcd->IsDMASupport())

  00068	e594000c	 ldr         r0, [r4, #0xC]
  0006c	e5903000	 ldr         r3, [r0]
  00070	e593306c	 ldr         r3, [r3, #0x6C]
  00074	e1a0e00f	 mov         lr, pc
  00078	e12fff13	 bx          r3
  0007c	e3500000	 cmp         r0, #0
  00080	0a00001e	 beq         |$LN5@OpenPipe|

; 814  :         {
; 815  :             if (m_pCMhcd->GetDMAMode())

  00084	e594000c	 ldr         r0, [r4, #0xC]
  00088	e5903000	 ldr         r3, [r0]
  0008c	e5933070	 ldr         r3, [r3, #0x70]
  00090	e1a0e00f	 mov         lr, pc
  00094	e12fff13	 bx          r3
  00098	e3500000	 cmp         r0, #0

; 816  :                 SetTransferMode(TRANSFER_DMA1);

  0009c	13a03002	 movne       r3, #2
  000a0	e3a06001	 mov         r6, #1
  000a4	15c43014	 strneb      r3, [r4, #0x14]

; 817  :             else
; 818  :                 SetTransferMode(TRANSFER_DMA0);

  000a8	05c46014	 streqb      r6, [r4, #0x14]

; 819  : 
; 820  :             // Special handling for bug in MUSBMHDRC
; 821  :             if ((GetTransferMode() == TRANSFER_DMA1) && (GetSpeed() == FULL_SPEED)
; 822  :                 && (USB_ENDPOINT_DIRECTION_OUT(m_usbEndpointDescriptor.bEndpointAddress)))

  000ac	e5d43014	 ldrb        r3, [r4, #0x14]
  000b0	e3530002	 cmp         r3, #2
  000b4	1a000012	 bne         |$LN30@OpenPipe|
  000b8	e5943040	 ldr         r3, [r4, #0x40]
  000bc	e3530000	 cmp         r3, #0
  000c0	13a03001	 movne       r3, #1
  000c4	1a000003	 bne         |$LN25@OpenPipe|
  000c8	e594303c	 ldr         r3, [r4, #0x3C]
  000cc	e3530000	 cmp         r3, #0
  000d0	13a03003	 movne       r3, #3
  000d4	03a03002	 moveq       r3, #2
  000d8		 |$LN25@OpenPipe|
  000d8	e20330ff	 and         r3, r3, #0xFF
  000dc	e3530002	 cmp         r3, #2
  000e0	1a000007	 bne         |$LN30@OpenPipe|
  000e4	e5d43036	 ldrb        r3, [r4, #0x36]
  000e8	e3130080	 tst         r3, #0x80
  000ec	1a000004	 bne         |$LN30@OpenPipe|

; 823  :             {
; 824  :                 RETAILMSG(1, (TEXT("MUSBMHDRC issue - BULK OUT pipe need to force to run at DMA 0\r\n")));

  000f0	e59f002c	 ldr         r0, [pc, #0x2C]
  000f4	eb000000	 bl          NKDbgPrintfW

; 825  :                 SetTransferMode(TRANSFER_DMA0);

  000f8	e5c46014	 strb        r6, [r4, #0x14]

; 826  :             }
; 827  :         }
; 828  :         else

  000fc	ea000000	 b           |$LN30@OpenPipe|
  00100		 |$LN5@OpenPipe|

; 829  :             SetTransferMode(TRANSFER_FIFO);

  00100	e5c46014	 strb        r6, [r4, #0x14]
  00104		 |$LN30@OpenPipe|

; 830  :         // Add this pipe into busy pipe list
; 831  : #ifdef DEBUG
; 832  :         BOOL bReturn = m_pCMhcd->AddToBusyPipeList(this, FALSE);
; 833  :         ASSERT(bReturn == TRUE);
; 834  : #else
; 835  : 		m_pCMhcd->AddToBusyPipeList(this, FALSE);

  00104	e594300c	 ldr         r3, [r4, #0xC]
  00108	e3a02000	 mov         r2, #0
  0010c	e1a01004	 mov         r1, r4
  00110	e28300c0	 add         r0, r3, #0xC0
  00114	eb000000	 bl          |?AddToBusyPipeList@CBusyPipeList@@QAAHQAVCPipe@@H@Z|
  00118		 |$LN32@OpenPipe|

; 836  : #endif
; 837  :     }
; 838  : 
; 839  :         
; 840  :     DEBUGMSG( ZONE_PIPE, (TEXT("-CBulkPipe::OpenPipe, returning HCD_REQUEST_STATUS %d\n"), status) );
; 841  :     
; 842  :     return status;
; 843  : }

  00118	e1a00005	 mov         r0, r5
  0011c	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00120	e12fff1e	 bx          lr
  00124		 |$LN37@OpenPipe|
  00124		 |$LN38@OpenPipe|
  00124	00000000	 DCD         |??_C@_1IA@CCAOPDIB@?$AAM?$AAU?$AAS?$AAB?$AAM?$AAH?$AAD?$AAR?$AAC?$AA?5?$AAi?$AAs?$AAs?$AAu?$AAe?$AA?5?$AA?9?$AA?5?$AAB?$AAU?$AAL?$AAK?$AA?5?$AAO?$AAU?$AAT?$AA?5?$AAp?$AAi?$AAp?$AAe?$AA?5@|
  00128		 |$M37976|

			 ENDP  ; |?OpenPipe@CBulkPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ|, CBulkPipe::OpenPipe

	EXPORT	|??_GCQH@@QAAPAXI@Z|			; CQH::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T37994| DCD	|$LN8@scalar@3|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GCQH@@QAAPAXI@Z| PROC		; CQH::`scalar deleting destructor'
  00000		 |$LN8@scalar@3|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37991|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0
  0000c	e285000c	 add         r0, r5, #0xC
  00010	eb000000	 bl          DeleteCriticalSection
  00014	e3140001	 tst         r4, #1
  00018	11a00005	 movne       r0, r5
  0001c	1b000000	 blne        |??3@YAXPAX@Z|
  00020	e1a00005	 mov         r0, r5
  00024	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M37992|

			 ENDP  ; |??_GCQH@@QAAPAXI@Z|, CQH::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$T38009| DCD	|$LN9@AreTransfe|
	DCD	0x40001b00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AreTransferParametersValid@CBulkPipe@@EBAHPBUSTRANSFER@@@Z| PROC ; CBulkPipe::AreTransferParametersValid

; 886  : {

  00000		 |$LN9@AreTransfe|
  00000		 |$M38006|
  00000	e3510000	 cmp         r1, #0

; 887  :     if (pTransfer == NULL) {
; 888  :         ASSERT(FALSE);
; 889  :         return FALSE;

  00004	0a000016	 beq         |$LN5@AreTransfe|

; 890  :     }
; 891  :         
; 892  :     
; 893  :     //DEBUGMSG( ZONE_TRANSFER && ZONE_VERBOSE, (TEXT("+CBulkPipe::AreTransferParametersValid\n")) );
; 894  : 
; 895  :     // these parameters aren't used by CBulkPipe, so if they are non NULL,
; 896  :     // it doesn't present a serious problem. But, they shouldn't have been
; 897  :     // passed in as non-NULL by the calling driver.
; 898  :     DEBUGCHK( pTransfer->adwIsochErrors == NULL && // ISOCH
; 899  :               pTransfer->adwIsochLengths == NULL && // ISOCH
; 900  :               pTransfer->aLengths == NULL && // ISOCH
; 901  :               pTransfer->lpvControlHeader == NULL ); // CONTROL
; 902  :     // this is also not a serious problem, but shouldn't happen in normal
; 903  :     // circumstances. It would indicate a logic error in the calling driver.
; 904  :     DEBUGCHK( !(pTransfer->lpStartAddress == NULL && pTransfer->lpvNotifyParameter != NULL) );
; 905  :     // DWORD                     pTransfer->dwStartingFrame (ignored - ISOCH)
; 906  :     // DWORD                     pTransfer->dwFrames (ignored - ISOCH)
; 907  : 
; 908  :     BOOL fValid = ( m_pPipeQHead!=NULL &&
; 909  :                     (pTransfer->lpvBuffer != NULL || pTransfer->dwBufferSize == 0) &&
; 910  :                     // paClientBuffer could be 0 or !0
; 911  :                     m_bDeviceAddress > 0 && m_bDeviceAddress <= USB_MAX_ADDRESS &&
; 912  :                     pTransfer->lpfComplete != NULL &&
; 913  :                     pTransfer->lpdwBytesTransferred != NULL &&
; 914  :                     pTransfer->lpdwError != NULL );

  00008	e5903064	 ldr         r3, [r0, #0x64]
  0000c	e3530000	 cmp         r3, #0
  00010	0a000013	 beq         |$LN5@AreTransfe|
  00014	e5913020	 ldr         r3, [r1, #0x20]
  00018	e3530000	 cmp         r3, #0
  0001c	1a000002	 bne         |$LN4@AreTransfe|
  00020	e591301c	 ldr         r3, [r1, #0x1C]
  00024	e3530000	 cmp         r3, #0
  00028	1a00000d	 bne         |$LN5@AreTransfe|
  0002c		 |$LN4@AreTransfe|
  0002c	e5d0303b	 ldrb        r3, [r0, #0x3B]
  00030	e3530000	 cmp         r3, #0
  00034	0a00000a	 beq         |$LN5@AreTransfe|
  00038	e353007f	 cmp         r3, #0x7F
  0003c	8a000008	 bhi         |$LN5@AreTransfe|
  00040	e5913034	 ldr         r3, [r1, #0x34]
  00044	e3530000	 cmp         r3, #0
  00048	0a000005	 beq         |$LN5@AreTransfe|
  0004c	e5913038	 ldr         r3, [r1, #0x38]
  00050	e3530000	 cmp         r3, #0
  00054	1591303c	 ldrne       r3, [r1, #0x3C]
  00058	13530000	 cmpne       r3, #0
  0005c	13a00001	 movne       r0, #1

; 915  : 
; 916  :     DEBUGMSG( ZONE_TRANSFER && ZONE_VERBOSE && !fValid, (TEXT("%s: !CBulkPipe::AreTransferParametersValid, returning BOOL %d\n"),GetControllerName(), fValid) );
; 917  :     ASSERT(fValid);
; 918  :     return fValid;
; 919  : }

  00060	112fff1e	 bxne        lr
  00064		 |$LN5@AreTransfe|

; 890  :     }
; 891  :         
; 892  :     
; 893  :     //DEBUGMSG( ZONE_TRANSFER && ZONE_VERBOSE, (TEXT("+CBulkPipe::AreTransferParametersValid\n")) );
; 894  : 
; 895  :     // these parameters aren't used by CBulkPipe, so if they are non NULL,
; 896  :     // it doesn't present a serious problem. But, they shouldn't have been
; 897  :     // passed in as non-NULL by the calling driver.
; 898  :     DEBUGCHK( pTransfer->adwIsochErrors == NULL && // ISOCH
; 899  :               pTransfer->adwIsochLengths == NULL && // ISOCH
; 900  :               pTransfer->aLengths == NULL && // ISOCH
; 901  :               pTransfer->lpvControlHeader == NULL ); // CONTROL
; 902  :     // this is also not a serious problem, but shouldn't happen in normal
; 903  :     // circumstances. It would indicate a logic error in the calling driver.
; 904  :     DEBUGCHK( !(pTransfer->lpStartAddress == NULL && pTransfer->lpvNotifyParameter != NULL) );
; 905  :     // DWORD                     pTransfer->dwStartingFrame (ignored - ISOCH)
; 906  :     // DWORD                     pTransfer->dwFrames (ignored - ISOCH)
; 907  : 
; 908  :     BOOL fValid = ( m_pPipeQHead!=NULL &&
; 909  :                     (pTransfer->lpvBuffer != NULL || pTransfer->dwBufferSize == 0) &&
; 910  :                     // paClientBuffer could be 0 or !0
; 911  :                     m_bDeviceAddress > 0 && m_bDeviceAddress <= USB_MAX_ADDRESS &&
; 912  :                     pTransfer->lpfComplete != NULL &&
; 913  :                     pTransfer->lpdwBytesTransferred != NULL &&
; 914  :                     pTransfer->lpdwError != NULL );

  00064	e3a00000	 mov         r0, #0

; 915  : 
; 916  :     DEBUGMSG( ZONE_TRANSFER && ZONE_VERBOSE && !fValid, (TEXT("%s: !CBulkPipe::AreTransferParametersValid, returning BOOL %d\n"),GetControllerName(), fValid) );
; 917  :     ASSERT(fValid);
; 918  :     return fValid;
; 919  : }

  00068	e12fff1e	 bx          lr
  0006c		 |$M38007|

			 ENDP  ; |?AreTransferParametersValid@CBulkPipe@@EBAHPBUSTRANSFER@@@Z|, CBulkPipe::AreTransferParametersValid

	EXPORT	|??0CControlPipe@@QAA@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCMhcd@@@Z| ; CControlPipe::CControlPipe
	EXPORT	|??_7CControlPipe@@6B@| [ DATA ]	; CControlPipe::`vftable'
	EXPORT	|?OpenPipe@CControlPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ| ; CControlPipe::OpenPipe
	EXPORT	|?ClosePipe@CControlPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ| ; CControlPipe::ClosePipe
	EXPORT	|?IssueTransfer@CControlPipe@@UAA?AW4HCD_REQUEST_STATUS@@EQ6AKPAX@ZQAXKQBXKKQBKK2K3QAK5QAH55@Z| ; CControlPipe::IssueTransfer
	EXPORT	|?ChangeMaxPacketSize@CControlPipe@@UAAXG@Z| ; CControlPipe::ChangeMaxPacketSize
	EXPORT	|?GetTransferType@CControlPipe@@UBA?BKXZ| ; CControlPipe::GetTransferType
	EXPORT	|?AreTransferParametersValid@CControlPipe@@EBAHPBUSTRANSFER@@@Z| ; CControlPipe::AreTransferParametersValid
	IMPORT	|??_ECControlPipe@@UAAPAXI@Z|, WEAK |??_GCControlPipe@@UAAPAXI@Z| ; CControlPipe::`vector deleting destructor', CControlPipe::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T38022| DCD	|$LN5@CControlPi|
	DCD	0x40001502

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CControlPipe@@6B@| DCD |??_ECControlPipe@@UAAPAXI@Z| ; CControlPipe::`vftable'
	DCD	|?OpenPipe@CControlPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ|
	DCD	|?ClosePipe@CControlPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ|
	DCD	|?IssueTransfer@CControlPipe@@UAA?AW4HCD_REQUEST_STATUS@@EQ6AKPAX@ZQAXKQBXKKQBKK2K3QAK5QAH55@Z|
	DCD	|?AbortTransfer@CQueuedPipe@@UAA?AW4HCD_REQUEST_STATUS@@Q6AKPAX@ZQAXPBX@Z|
	DCD	|?IsPipeHalted@CPipe@@UAA?AW4HCD_REQUEST_STATUS@@QAH@Z|
	DCD	|?ClearHaltedFlag@CQueuedPipe@@UAAXXZ|
	DCD	|?ResetEndPoint@CPipe@@UAAXXZ|
	DCD	|?ChangeMaxPacketSize@CControlPipe@@UAAXG@Z|
	DCD	|?SetReservedDeviceAddr@CPipe@@UAAHE@Z|
	DCD	|?GetReservedDeviceAddr@CPipe@@UAAEXZ|
	DCD	|?GetCPhysMem@CPipe@@UAAPAVCPhysMem@@XZ|
	DCD	|?ScheduleTransfer@CQueuedPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ|
	DCD	|?CheckForDoneTransfers@CQueuedPipe@@UAAHXZ|
	DCD	|?ProcessEP@CQueuedPipe@@UAAHKH@Z|
	DCD	|?GetTransferType@CControlPipe@@UBA?BKXZ|
	DCD	|?GetQHead@CQueuedPipe@@UAAPAVCQH@@XZ|
	DCD	|?AreTransferParametersValid@CControlPipe@@EBAHPBUSTRANSFER@@@Z|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CControlPipe@@QAA@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCMhcd@@@Z| PROC ; CControlPipe::CControlPipe

; 938  : {

  00000		 |$LN5@CControlPi|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004	e24dd014	 sub         sp, sp, #0x14
  00008		 |$M38019|
  00008	e1a08000	 mov         r8, r0
  0000c	e59de03c	 ldr         lr, [sp, #0x3C]
  00010	e59d4038	 ldr         r4, [sp, #0x38]
  00014	e5dd5034	 ldrb        r5, [sp, #0x34]
  00018	e5dd6030	 ldrb        r6, [sp, #0x30]
  0001c	e5dd702c	 ldrb        r7, [sp, #0x2C]
  00020	e58de010	 str         lr, [sp, #0x10]
  00024	e58d400c	 str         r4, [sp, #0xC]
  00028	e58d5008	 str         r5, [sp, #8]
  0002c	e58d6004	 str         r6, [sp, #4]
  00030	e58d7000	 str         r7, [sp]
  00034	eb000000	 bl          |??0CQueuedPipe@@QAA@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCMhcd@@@Z|
  00038	e59f3010	 ldr         r3, [pc, #0x10]

; 939  :     DEBUGMSG( ZONE_PIPE && ZONE_VERBOSE, (TEXT("%s: +CControlPipe::CControlPipe\n"),GetControllerName()) );
; 940  :     DEBUGCHK( m_usbEndpointDescriptor.bDescriptorType == USB_ENDPOINT_DESCRIPTOR_TYPE &&
; 941  :               m_usbEndpointDescriptor.bLength >= sizeof( USB_ENDPOINT_DESCRIPTOR ) &&
; 942  :               (m_usbEndpointDescriptor.bmAttributes & USB_ENDPOINT_TYPE_MASK) == USB_ENDPOINT_TYPE_CONTROL );
; 943  : 
; 944  :     DEBUGMSG( ZONE_PIPE && ZONE_VERBOSE, (TEXT("%s: -CControlPipe::CControlPipe\n"),GetControllerName()) );
; 945  : }

  0003c	e1a00008	 mov         r0, r8
  00040	e5883000	 str         r3, [r8]
  00044	e28dd014	 add         sp, sp, #0x14
  00048	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$LN6@CControlPi|
  00050		 |$LN7@CControlPi|
  00050	00000000	 DCD         |??_7CControlPipe@@6B@|
  00054		 |$M38020|

			 ENDP  ; |??0CControlPipe@@QAA@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCMhcd@@@Z|, CControlPipe::CControlPipe

; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.h

  00000			 AREA	 |.pdata|, PDATA
|$T38033| DCD	|$LN5@GetTransfe@3|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetTransferType@CControlPipe@@UBA?BKXZ| PROC ; CControlPipe::GetTransferType

; 302  :     {

  00000		 |$LN5@GetTransfe@3|
  00000		 |$M38030|

; 303  :         return USB_ENDPOINT_TYPE_CONTROL;

  00000	e3a00000	 mov         r0, #0

; 304  :     }

  00004	e12fff1e	 bx          lr
  00008		 |$M38031|

			 ENDP  ; |?GetTransferType@CControlPipe@@UBA?BKXZ|, CControlPipe::GetTransferType

; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\chw.h

  00000			 AREA	 |.pdata|, PDATA
|$T38052| DCD	|$LN13@OpenPipe@2|
	DCD	0x40002101
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?OpenPipe@CControlPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ| PROC ; CControlPipe::OpenPipe

; 980  : {

  00000		 |$LN13@OpenPipe@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M38049|
  00004	e1a04000	 mov         r4, r0

; 981  :     DEBUGMSG( ZONE_PIPE, (TEXT("%s: +CControlPipe::OpenPipe\n"),GetControllerName() ) );
; 982  :     HCD_REQUEST_STATUS status = requestFailed;
; 983  :     m_pUnQueuedTransfer=NULL;      // ptr to last transfer in queue
; 984  :     m_pQueuedTransfer=NULL;
; 985  :     PREFAST_DEBUGCHK( m_pCMhcd!=NULL );
; 986  :     EnterCriticalSection( &m_csPipeLock );

  00008	e3a03000	 mov         r3, #0
  0000c	e2840020	 add         r0, r4, #0x20
  00010	e5843068	 str         r3, [r4, #0x68]
  00014	e584306c	 str         r3, [r4, #0x6C]
  00018	e3a05000	 mov         r5, #0
  0001c	eb000000	 bl          EnterCriticalSection

; 987  :     // if this fails, someone is trying to open
; 988  :     // an already opened pipe
; 989  :     DEBUGCHK( m_pPipeQHead  == NULL );
; 990  :     ASSERT(m_pCMhcd !=NULL);
; 991  :     // if this fails, we have a low speed Bulk device
; 992  :     // which is not allowed by the UHCI spec (sec 1.3)
; 993  :     if (m_pPipeQHead == NULL ) {

  00020	e5943064	 ldr         r3, [r4, #0x64]
  00024	e3530000	 cmp         r3, #0
  00028	1a00000a	 bne         |$LN3@OpenPipe@2|

; 994  :         m_pPipeQHead = new CQH (this);

  0002c	e3a00020	 mov         r0, #0x20
  00030	eb000000	 bl          |??2@YAPAXI@Z|
  00034	e3500000	 cmp         r0, #0
  00038	0a000002	 beq         |$LN7@OpenPipe@2|
  0003c	e1a01004	 mov         r1, r4
  00040	eb000000	 bl          |??0CQH@@QAA@PAVCPipe@@@Z|
  00044	ea000000	 b           |$LN8@OpenPipe@2|
  00048		 |$LN7@OpenPipe@2|
  00048	e3a00000	 mov         r0, #0
  0004c		 |$LN8@OpenPipe@2|

; 995  :         if (m_pPipeQHead ) {            

  0004c	e3500000	 cmp         r0, #0

; 996  :             status = requestOK;               

  00050	13a05001	 movne       r5, #1
  00054	e5840064	 str         r0, [r4, #0x64]
  00058		 |$LN3@OpenPipe@2|

; 997  :         }
; 998  :         else {
; 999  :             ASSERT(FALSE);
; 1000 :         }
; 1001 :     }    
; 1002 :     LeaveCriticalSection( &m_csPipeLock );

  00058	e2840020	 add         r0, r4, #0x20
  0005c	eb000000	 bl          LeaveCriticalSection

; 1003 : 
; 1004 :     if (status == requestOK) {

  00060	e3550001	 cmp         r5, #1

; 1005 : #ifdef DEBUG
; 1006 :         BOOL bReturn = m_pCMhcd->AddToBusyPipeList(this, FALSE);
; 1007 :         ASSERT(bReturn == TRUE);
; 1008 : #else
; 1009 : 		m_pCMhcd->AddToBusyPipeList(this, FALSE);

  00064	0594300c	 ldreq       r3, [r4, #0xC]
  00068	03a02000	 moveq       r2, #0
  0006c	01a01004	 moveq       r1, r4
  00070	028300c0	 addeq       r0, r3, #0xC0
  00074	0b000000	 bleq        |?AddToBusyPipeList@CBusyPipeList@@QAAHQAVCPipe@@H@Z|

; 1010 : #endif
; 1011 :     }
; 1012 :     DEBUGMSG( ZONE_PIPE, (TEXT("-CControlPipe::OpenPipe\n") ) );
; 1013 :        
; 1014 :     return status;
; 1015 : }

  00078	e1a00005	 mov         r0, r5
  0007c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00080	e12fff1e	 bx          lr
  00084		 |$M38050|

			 ENDP  ; |?OpenPipe@CControlPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ|, CControlPipe::OpenPipe

; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.h

  00000			 AREA	 |.pdata|, PDATA
|$T38091| DCD	|$LN20@ClosePipe|
	DCD	0x40002001
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ClosePipe@CControlPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ| PROC ; CControlPipe::ClosePipe

; 1029 : {

  00000		 |$LN20@ClosePipe|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M38088|
  00004	e1a04000	 mov         r4, r0

; 1030 :     DEBUGMSG( ZONE_PIPE, (TEXT("%s: +CBulkPipe(%s)::ClosePipe\n"),GetControllerName(), GetPipeType() ) );
; 1031 :     HCD_REQUEST_STATUS status = requestFailed;
; 1032 :     m_pCMhcd->RemoveFromBusyPipeList(this );

  00008	e594300c	 ldr         r3, [r4, #0xC]
  0000c	e1a01004	 mov         r1, r4
  00010	e3a05000	 mov         r5, #0
  00014	e28300c0	 add         r0, r3, #0xC0
  00018	eb000000	 bl          |?RemoveFromBusyPipeList@CBusyPipeList@@QAAXQAVCPipe@@@Z|

; 1033 :     EnterCriticalSection( &m_csPipeLock );

  0001c	e2840020	 add         r0, r4, #0x20
  00020	eb000000	 bl          EnterCriticalSection

; 1034 :     if ( m_pPipeQHead) {        

  00024	e5943064	 ldr         r3, [r4, #0x64]
  00028	e3530000	 cmp         r3, #0
  0002c	0a00000e	 beq         |$LN1@ClosePipe|

; 1035 :         AbortQueue();

  00030	e1a00004	 mov         r0, r4
  00034	eb000000	 bl          |?AbortQueue@CQueuedPipe@@IAAXXZ|

; 1036 :         //delete m_pPipeQHead;
; 1037 :         m_pPipeQHead->~CQH();

  00038	e5943064	 ldr         r3, [r4, #0x64]
  0003c	e283000c	 add         r0, r3, #0xC
  00040	eb000000	 bl          DeleteCriticalSection

; 1038 :         delete m_pPipeQHead;        

  00044	e5943064	 ldr         r3, [r4, #0x64]
  00048	e1b05003	 movs        r5, r3
  0004c	0a000003	 beq         |$LN4@ClosePipe|
  00050	e285000c	 add         r0, r5, #0xC
  00054	eb000000	 bl          DeleteCriticalSection
  00058	e1a00005	 mov         r0, r5
  0005c	eb000000	 bl          |??3@YAXPAX@Z|
  00060		 |$LN4@ClosePipe|

; 1039 :         m_pPipeQHead = NULL;

  00060	e3a03000	 mov         r3, #0
  00064	e5843064	 str         r3, [r4, #0x64]

; 1040 :         status = requestOK;

  00068	e3a05001	 mov         r5, #1
  0006c		 |$LN1@ClosePipe|

; 1041 :     }
; 1042 :     LeaveCriticalSection( &m_csPipeLock );

  0006c	e2840020	 add         r0, r4, #0x20
  00070	eb000000	 bl          LeaveCriticalSection

; 1043 :     return status;
; 1044 : }

  00074	e1a00005	 mov         r0, r5
  00078	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0007c	e12fff1e	 bx          lr
  00080		 |$M38089|

			 ENDP  ; |?ClosePipe@CControlPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ|, CControlPipe::ClosePipe


  00000			 AREA	 |.pdata|, PDATA
|$T38104| DCD	|$LN8@IssueTrans@2|
	DCD	0x40003d02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IssueTransfer@CControlPipe@@UAA?AW4HCD_REQUEST_STATUS@@EQ6AKPAX@ZQAXKQBXKKQBKK2K3QAK5QAH55@Z| PROC ; CControlPipe::IssueTransfer

; 1076 : {

  00000		 |$LN8@IssueTrans@2|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd048	 sub         sp, sp, #0x48
  00008		 |$M38101|
  00008	e58d303c	 str         r3, [sp, #0x3C]
  0000c	e1a03002	 mov         r3, r2
  00010	e1a05001	 mov         r5, r1
  00014	e1a04000	 mov         r4, r0
  00018	e58d3040	 str         r3, [sp, #0x40]
  0001c	e5cd5038	 strb        r5, [sp, #0x38]
  00020	e58d4044	 str         r4, [sp, #0x44]

; 1077 :     DEBUGMSG( ZONE_TRANSFER, (TEXT("%s: +CControlPipe::IssueTransfer, address = %d\n"),GetControllerName(), address) );
; 1078 : 
; 1079 :     // We can store the device address per pipe since the pipe is based on each device connection now.
; 1080 :     // In other words, the pipe is created per device connection if HUB is involved.
; 1081 :     // However, we cannot configEP here since it may be processed by other at this point.
; 1082 :     if (m_bDeviceAddress != address) { // Address Changed.

  00024	e5d4e03b	 ldrb        lr, [r4, #0x3B]
  00028	e15e0005	 cmp         lr, r5
  0002c	0a00000a	 beq         |$LN1@IssueTrans@2|

; 1083 :         if ( m_pQueuedTransfer == NULL &&  m_pPipeQHead && m_pPipeQHead->IsActive()==FALSE) { // We need cqueue new Transfer.

  00030	e594e06c	 ldr         lr, [r4, #0x6C]
  00034	e35e0000	 cmp         lr, #0
  00038	1a00002b	 bne         |$LN2@IssueTrans@2|
  0003c	e594e064	 ldr         lr, [r4, #0x64]
  00040	e35e0000	 cmp         lr, #0
  00044	0a000028	 beq         |$LN2@IssueTrans@2|
  00048	e1a0000e	 mov         r0, lr
  0004c	eb000000	 bl          |?IsActive@CQH@@QAAHXZ|
  00050	e3500000	 cmp         r0, #0
  00054	1a000024	 bne         |$LN2@IssueTrans@2|

; 1084 :             m_bDeviceAddress = address;

  00058	e5c4503b	 strb        r5, [r4, #0x3B]
  0005c		 |$LN1@IssueTrans@2|

; 1091 :         }
; 1092 :     }
; 1093 : 
; 1094 :     HCD_REQUEST_STATUS status = CQueuedPipe::IssueTransfer( address, lpStartAddress,lpvNotifyParameter,
; 1095 :             dwFlags,lpvControlHeader, dwStartingFrame, dwFrames, aLengths, dwBufferSize, lpvClientBuffer,
; 1096 :             paBuffer, lpvCancelId, adwIsochErrors, adwIsochLengths, lpfComplete, lpdwBytesTransferred, lpdwError );

  0005c	e59d30a0	 ldr         r3, [sp, #0xA0]
  00060	e59d209c	 ldr         r2, [sp, #0x9C]
  00064	e59d1098	 ldr         r1, [sp, #0x98]
  00068	e59d0094	 ldr         r0, [sp, #0x94]
  0006c	e58d3034	 str         r3, [sp, #0x34]
  00070	e59d306c	 ldr         r3, [sp, #0x6C]
  00074	e59de090	 ldr         lr, [sp, #0x90]
  00078	e59d408c	 ldr         r4, [sp, #0x8C]
  0007c	e59d5088	 ldr         r5, [sp, #0x88]
  00080	e59d6084	 ldr         r6, [sp, #0x84]
  00084	e59d7080	 ldr         r7, [sp, #0x80]
  00088	e59d807c	 ldr         r8, [sp, #0x7C]
  0008c	e59d9078	 ldr         r9, [sp, #0x78]
  00090	e59da074	 ldr         r10, [sp, #0x74]
  00094	e59db070	 ldr         r11, [sp, #0x70]
  00098	e58d3000	 str         r3, [sp]
  0009c	e59d303c	 ldr         r3, [sp, #0x3C]
  000a0	e58d2030	 str         r2, [sp, #0x30]
  000a4	e59d2040	 ldr         r2, [sp, #0x40]
  000a8	e58d102c	 str         r1, [sp, #0x2C]
  000ac	e5dd1038	 ldrb        r1, [sp, #0x38]
  000b0	e58d0028	 str         r0, [sp, #0x28]
  000b4	e59d0044	 ldr         r0, [sp, #0x44]
  000b8	e58de024	 str         lr, [sp, #0x24]
  000bc	e58d4020	 str         r4, [sp, #0x20]
  000c0	e58d501c	 str         r5, [sp, #0x1C]
  000c4	e58d6018	 str         r6, [sp, #0x18]
  000c8	e58d7014	 str         r7, [sp, #0x14]
  000cc	e58d8010	 str         r8, [sp, #0x10]
  000d0	e58d900c	 str         r9, [sp, #0xC]
  000d4	e58da008	 str         r10, [sp, #8]
  000d8	e58db004	 str         r11, [sp, #4]
  000dc	eb000000	 bl          |?IssueTransfer@CQueuedPipe@@UAA?AW4HCD_REQUEST_STATUS@@EQ6AKPAX@ZQAXKQBXKKQBKK2K3QAK5QAH55@Z|
  000e0		 |$LN4@IssueTrans@2|

; 1097 :     DEBUGMSG( ZONE_TRANSFER, (TEXT("%s: -CControlPipe::::IssueTransfer - address = %d, returing HCD_REQUEST_STATUS %d\n"),GetControllerName(), address, status) );
; 1098 :     return status;
; 1099 : };

  000e0	e28dd048	 add         sp, sp, #0x48
  000e4	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  000e8	e12fff1e	 bx          lr
  000ec		 |$LN2@IssueTrans@2|

; 1085 :             DEBUGMSG(ZONE_TRANSFER|0, (TEXT("CControlPipe::IssueTransfer configure m_bDeviceAddress = %d\r\n"),
; 1086 :                 m_bDeviceAddress));
; 1087 :         }
; 1088 :         else {
; 1089 :             ASSERT(FALSE);
; 1090 :             return requestFailed;

  000ec	e3a00000	 mov         r0, #0
  000f0	eafffffa	 b           |$LN4@IssueTrans@2|
  000f4		 |$M38102|

			 ENDP  ; |?IssueTransfer@CControlPipe@@UAA?AW4HCD_REQUEST_STATUS@@EQ6AKPAX@ZQAXKQBXKKQBKK2K3QAK5QAH55@Z|, CControlPipe::IssueTransfer

	IMPORT	|?SetMaxPacketLength@CQH@@QAAXK@Z|	; CQH::SetMaxPacketLength

  00000			 AREA	 |.pdata|, PDATA
|$T38113| DCD	|$LN7@ChangeMaxP@2|
	DCD	0x40001801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ChangeMaxPacketSize@CControlPipe@@UAAXG@Z| PROC ; CControlPipe::ChangeMaxPacketSize

; 1117 : {

  00000		 |$LN7@ChangeMaxP@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M38110|
  00004	e1a05001	 mov         r5, r1
  00008	e1a04000	 mov         r4, r0

; 1118 :     DEBUGMSG( ZONE_PIPE && ZONE_VERBOSE, (TEXT("%s: +CControlPipe::ChangeMaxPacketSize - new wMaxPacketSize = %d\n"),GetControllerName(), wMaxPacketSize) );
; 1119 :     
; 1120 :     EnterCriticalSection( &m_csPipeLock );

  0000c	e2840020	 add         r0, r4, #0x20
  00010	eb000000	 bl          EnterCriticalSection

; 1121 : 
; 1122 :     // this pipe should be for endpoint 0, control pipe
; 1123 :     DEBUGCHK( (m_usbEndpointDescriptor.bmAttributes & USB_ENDPOINT_TYPE_MASK) == USB_ENDPOINT_TYPE_CONTROL &&
; 1124 :               (m_usbEndpointDescriptor.bEndpointAddress & TD_ENDPOINT_MASK) == 0 );
; 1125 :     // update should only be called if the old address was ENDPOINT_ZERO_MIN_MAXPACKET_SIZE
; 1126 :     DEBUGCHK( m_usbEndpointDescriptor.wMaxPacketSize == ENDPOINT_ZERO_MIN_MAXPACKET_SIZE );
; 1127 :     // this function should only be called if we are increasing the max packet size.
; 1128 :     // in addition, the USB spec 1.0 section 9.6.1 states only the following
; 1129 :     // wMaxPacketSize are allowed for endpoint 0
; 1130 :     DEBUGCHK( wMaxPacketSize > ENDPOINT_ZERO_MIN_MAXPACKET_SIZE &&
; 1131 :               (wMaxPacketSize == 16 ||
; 1132 :                wMaxPacketSize == 32 ||
; 1133 :                wMaxPacketSize == 64) );
; 1134 :     
; 1135 :     m_usbEndpointDescriptor.wMaxPacketSize = wMaxPacketSize;
; 1136 :     if ( m_pQueuedTransfer == NULL &&  m_pPipeQHead && m_pPipeQHead->IsActive()==FALSE) { // We need cqueue new Transfer.

  00014	e594306c	 ldr         r3, [r4, #0x6C]
  00018	e1a02425	 mov         r2, r5, lsr #8
  0001c	e5c45038	 strb        r5, [r4, #0x38]
  00020	e3530000	 cmp         r3, #0
  00024	e5c42039	 strb        r2, [r4, #0x39]
  00028	1a000008	 bne         |$LN2@ChangeMaxP@2|
  0002c	e5943064	 ldr         r3, [r4, #0x64]
  00030	e3530000	 cmp         r3, #0
  00034	0a000005	 beq         |$LN2@ChangeMaxP@2|
  00038	e1a00003	 mov         r0, r3
  0003c	eb000000	 bl          |?IsActive@CQH@@QAAHXZ|
  00040	e3500000	 cmp         r0, #0

; 1137 :         m_pPipeQHead ->SetMaxPacketLength(wMaxPacketSize);

  00044	05940064	 ldreq       r0, [r4, #0x64]
  00048	01a01005	 moveq       r1, r5
  0004c	0b000000	 bleq        |?SetMaxPacketLength@CQH@@QAAXK@Z|
  00050		 |$LN2@ChangeMaxP@2|

; 1138 :     }
; 1139 :     else {
; 1140 :         ASSERT(FALSE);
; 1141 :     } 
; 1142 : 
; 1143 :     LeaveCriticalSection( &m_csPipeLock );

  00050	e2840020	 add         r0, r4, #0x20
  00054	eb000000	 bl          LeaveCriticalSection

; 1144 : 
; 1145 :     DEBUGMSG( ZONE_PIPE && ZONE_VERBOSE, (TEXT("%s: -CControlPipe::ChangeMaxPacketSize - new wMaxPacketSize = %d\n"),GetControllerName(), wMaxPacketSize) );
; 1146 : }

  00058	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0005c	e12fff1e	 bx          lr
  00060		 |$M38111|

			 ENDP  ; |?ChangeMaxPacketSize@CControlPipe@@UAAXG@Z|, CControlPipe::ChangeMaxPacketSize


  00000			 AREA	 |.pdata|, PDATA
|$T38136| DCD	|$LN20@AreTransfe@2|
	DCD	0x40002900
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AreTransferParametersValid@CControlPipe@@EBAHPBUSTRANSFER@@@Z| PROC ; CControlPipe::AreTransferParametersValid

; 1160 : {

  00000		 |$LN20@AreTransfe@2|
  00000		 |$M38133|
  00000	e3510000	 cmp         r1, #0

; 1161 :     if (pTransfer == NULL)
; 1162 :         return FALSE;    

  00004	0a000024	 beq         |$LN7@AreTransfe@2|

; 1163 :     DEBUGMSG( ZONE_TRANSFER && ZONE_VERBOSE, (TEXT("%s: +CControlPipe::AreTransferParametersValid\n"),GetControllerName()) );
; 1164 : 
; 1165 :     // these parameters aren't used by CControlPipe, so if they are non NULL,
; 1166 :     // it doesn't present a serious problem. But, they shouldn't have been
; 1167 :     // passed in as non-NULL by the calling driver.
; 1168 :     DEBUGCHK( pTransfer->adwIsochErrors == NULL && // ISOCH
; 1169 :               pTransfer->adwIsochLengths == NULL && // ISOCH
; 1170 :               pTransfer->aLengths == NULL ); // ISOCH
; 1171 :     // this is also not a serious problem, but shouldn't happen in normal
; 1172 :     // circumstances. It would indicate a logic error in the calling driver.
; 1173 :     DEBUGCHK( !(pTransfer->lpStartAddress == NULL && pTransfer->lpvNotifyParameter != NULL) );
; 1174 :     // DWORD                     pTransfer->dwStartingFrame; (ignored - ISOCH)
; 1175 :     // DWORD                     pTransfer->dwFrames; (ignored - ISOCH)
; 1176 : 
; 1177 :     BOOL fValid = ( m_pPipeQHead != NULL &&
; 1178 :                     m_bDeviceAddress <= USB_MAX_ADDRESS &&
; 1179 :                     pTransfer->lpvControlHeader != NULL &&
; 1180 :                     pTransfer->lpfComplete != NULL &&
; 1181 :                     pTransfer->lpdwBytesTransferred != NULL &&
; 1182 :                     pTransfer->lpdwError != NULL );

  00008	e5903064	 ldr         r3, [r0, #0x64]
  0000c	e3530000	 cmp         r3, #0
  00010	0a000021	 beq         |$LN7@AreTransfe@2|
  00014	e5d0303b	 ldrb        r3, [r0, #0x3B]
  00018	e353007f	 cmp         r3, #0x7F
  0001c	8a00001e	 bhi         |$LN7@AreTransfe@2|
  00020	e591300c	 ldr         r3, [r1, #0xC]
  00024	e3530000	 cmp         r3, #0
  00028	0a00001b	 beq         |$LN7@AreTransfe@2|
  0002c	e5913034	 ldr         r3, [r1, #0x34]
  00030	e3530000	 cmp         r3, #0
  00034	0a000018	 beq         |$LN7@AreTransfe@2|
  00038	e5913038	 ldr         r3, [r1, #0x38]
  0003c	e3530000	 cmp         r3, #0
  00040	0a000015	 beq         |$LN7@AreTransfe@2|
  00044	e591303c	 ldr         r3, [r1, #0x3C]
  00048	e3530000	 cmp         r3, #0
  0004c	0a000012	 beq         |$LN7@AreTransfe@2|

; 1183 :     if ( fValid ) {
; 1184 :         if ( pTransfer->dwFlags & USB_IN_TRANSFER ) {

  00050	e5913008	 ldr         r3, [r1, #8]
  00054	e3130080	 tst         r3, #0x80

; 1185 :             fValid = (pTransfer->lpvBuffer != NULL &&
; 1186 :                       // paClientBuffer could be 0 or !0
; 1187 :                       pTransfer->dwBufferSize > 0);

  00058	e5913020	 ldr         r3, [r1, #0x20]
  0005c	0a000006	 beq         |$LN2@AreTransfe@2|
  00060	e3530000	 cmp         r3, #0
  00064	0a00000c	 beq         |$LN7@AreTransfe@2|
  00068		 |$LN16@AreTransfe@2|

; 1188 :         } else {
; 1189 :             fValid = ( (pTransfer->lpvBuffer == NULL && 
; 1190 :                         pTransfer->paBuffer == 0 &&
; 1191 :                         pTransfer->dwBufferSize == 0) ||
; 1192 :                        (pTransfer->lpvBuffer != NULL &&
; 1193 :                         // paClientBuffer could be 0 or !0
; 1194 :                         pTransfer->dwBufferSize > 0) );

  00068	e591301c	 ldr         r3, [r1, #0x1C]
  0006c	e3530000	 cmp         r3, #0
  00070	9a000009	 bls         |$LN7@AreTransfe@2|
  00074		 |$LN13@AreTransfe@2|
  00074	e3a00001	 mov         r0, #1

; 1195 :         }
; 1196 :     }
; 1197 : 
; 1198 :     ASSERT(fValid);
; 1199 :     DEBUGMSG( ZONE_TRANSFER && ZONE_VERBOSE, (TEXT("%s: -CControlPipe::AreTransferParametersValid, returning BOOL %d\n"),GetControllerName(), fValid) );
; 1200 :     return fValid;
; 1201 : }

  00078	e12fff1e	 bx          lr
  0007c		 |$LN2@AreTransfe@2|

; 1188 :         } else {
; 1189 :             fValid = ( (pTransfer->lpvBuffer == NULL && 
; 1190 :                         pTransfer->paBuffer == 0 &&
; 1191 :                         pTransfer->dwBufferSize == 0) ||
; 1192 :                        (pTransfer->lpvBuffer != NULL &&
; 1193 :                         // paClientBuffer could be 0 or !0
; 1194 :                         pTransfer->dwBufferSize > 0) );

  0007c	e3530000	 cmp         r3, #0
  00080	1afffff8	 bne         |$LN16@AreTransfe@2|
  00084	e5913024	 ldr         r3, [r1, #0x24]
  00088	e3530000	 cmp         r3, #0
  0008c	1a000002	 bne         |$LN7@AreTransfe@2|
  00090	e591301c	 ldr         r3, [r1, #0x1C]
  00094	e3530000	 cmp         r3, #0
  00098	0afffff5	 beq         |$LN13@AreTransfe@2|
  0009c		 |$LN7@AreTransfe@2|

; 1163 :     DEBUGMSG( ZONE_TRANSFER && ZONE_VERBOSE, (TEXT("%s: +CControlPipe::AreTransferParametersValid\n"),GetControllerName()) );
; 1164 : 
; 1165 :     // these parameters aren't used by CControlPipe, so if they are non NULL,
; 1166 :     // it doesn't present a serious problem. But, they shouldn't have been
; 1167 :     // passed in as non-NULL by the calling driver.
; 1168 :     DEBUGCHK( pTransfer->adwIsochErrors == NULL && // ISOCH
; 1169 :               pTransfer->adwIsochLengths == NULL && // ISOCH
; 1170 :               pTransfer->aLengths == NULL ); // ISOCH
; 1171 :     // this is also not a serious problem, but shouldn't happen in normal
; 1172 :     // circumstances. It would indicate a logic error in the calling driver.
; 1173 :     DEBUGCHK( !(pTransfer->lpStartAddress == NULL && pTransfer->lpvNotifyParameter != NULL) );
; 1174 :     // DWORD                     pTransfer->dwStartingFrame; (ignored - ISOCH)
; 1175 :     // DWORD                     pTransfer->dwFrames; (ignored - ISOCH)
; 1176 : 
; 1177 :     BOOL fValid = ( m_pPipeQHead != NULL &&
; 1178 :                     m_bDeviceAddress <= USB_MAX_ADDRESS &&
; 1179 :                     pTransfer->lpvControlHeader != NULL &&
; 1180 :                     pTransfer->lpfComplete != NULL &&
; 1181 :                     pTransfer->lpdwBytesTransferred != NULL &&
; 1182 :                     pTransfer->lpdwError != NULL );

  0009c	e3a00000	 mov         r0, #0

; 1195 :         }
; 1196 :     }
; 1197 : 
; 1198 :     ASSERT(fValid);
; 1199 :     DEBUGMSG( ZONE_TRANSFER && ZONE_VERBOSE, (TEXT("%s: -CControlPipe::AreTransferParametersValid, returning BOOL %d\n"),GetControllerName(), fValid) );
; 1200 :     return fValid;
; 1201 : }

  000a0	e12fff1e	 bx          lr
  000a4		 |$M38134|

			 ENDP  ; |?AreTransferParametersValid@CControlPipe@@EBAHPBUSTRANSFER@@@Z|, CControlPipe::AreTransferParametersValid

	EXPORT	|??0CInterruptPipe@@QAA@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCMhcd@@@Z| ; CInterruptPipe::CInterruptPipe
	EXPORT	|??_7CInterruptPipe@@6B@| [ DATA ]	; CInterruptPipe::`vftable'
	EXPORT	|?OpenPipe@CInterruptPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ| ; CInterruptPipe::OpenPipe
	EXPORT	|?ClosePipe@CInterruptPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ| ; CInterruptPipe::ClosePipe
	EXPORT	|?GetTransferType@CInterruptPipe@@UBA?BKXZ| ; CInterruptPipe::GetTransferType
	EXPORT	|?AreTransferParametersValid@CInterruptPipe@@EBAHPBUSTRANSFER@@@Z| ; CInterruptPipe::AreTransferParametersValid
	IMPORT	|?GetCMASK@USB2lib@@QAAEPAU_EndpointBuget@@@Z| ; USB2lib::GetCMASK
	IMPORT	|?GetSMASK@USB2lib@@QAAEPAU_EndpointBuget@@@Z| ; USB2lib::GetSMASK
	IMPORT	|?AllocUsb2BusTime@USB2lib@@QAAHEEHPAU_EndpointBuget@@@Z| ; USB2lib::AllocUsb2BusTime
	IMPORT	|memset|
	IMPORT	|??_ECInterruptPipe@@UAAPAXI@Z|, WEAK |??_GCInterruptPipe@@UAAPAXI@Z| ; CInterruptPipe::`vector deleting destructor', CInterruptPipe::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T38164| DCD	|$LN25@CInterrupt|
	DCD	0x40006b02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CInterruptPipe@@6B@| DCD |??_ECInterruptPipe@@UAAPAXI@Z| ; CInterruptPipe::`vftable'
	DCD	|?OpenPipe@CInterruptPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ|
	DCD	|?ClosePipe@CInterruptPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ|
	DCD	|?IssueTransfer@CQueuedPipe@@UAA?AW4HCD_REQUEST_STATUS@@EQ6AKPAX@ZQAXKQBXKKQBKK2K3QAK5QAH55@Z|
	DCD	|?AbortTransfer@CQueuedPipe@@UAA?AW4HCD_REQUEST_STATUS@@Q6AKPAX@ZQAXPBX@Z|
	DCD	|?IsPipeHalted@CPipe@@UAA?AW4HCD_REQUEST_STATUS@@QAH@Z|
	DCD	|?ClearHaltedFlag@CQueuedPipe@@UAAXXZ|
	DCD	|?ResetEndPoint@CPipe@@UAAXXZ|
	DCD	|?ChangeMaxPacketSize@CPipeAbs@@UAAXG@Z|
	DCD	|?SetReservedDeviceAddr@CPipe@@UAAHE@Z|
	DCD	|?GetReservedDeviceAddr@CPipe@@UAAEXZ|
	DCD	|?GetCPhysMem@CPipe@@UAAPAVCPhysMem@@XZ|
	DCD	|?ScheduleTransfer@CQueuedPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ|
	DCD	|?CheckForDoneTransfers@CQueuedPipe@@UAAHXZ|
	DCD	|?ProcessEP@CQueuedPipe@@UAAHKH@Z|
	DCD	|?GetTransferType@CInterruptPipe@@UBA?BKXZ|
	DCD	|?GetQHead@CQueuedPipe@@UAAPAVCQH@@XZ|
	DCD	|?AreTransferParametersValid@CInterruptPipe@@EBAHPBUSTRANSFER@@@Z|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CInterruptPipe@@QAA@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCMhcd@@@Z| PROC ; CInterruptPipe::CInterruptPipe

; 1219 : {

  00000		 |$LN25@CInterrupt|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd014	 sub         sp, sp, #0x14
  00008		 |$M38161|
  00008	e1a07003	 mov         r7, r3
  0000c	e1a09002	 mov         r9, r2
  00010	e1a06001	 mov         r6, r1
  00014	e1a05000	 mov         r5, r0
  00018	e59d8048	 ldr         r8, [sp, #0x48]
  0001c	e59d4044	 ldr         r4, [sp, #0x44]
  00020	e5dda040	 ldrb        r10, [sp, #0x40]
  00024	e5ddb03c	 ldrb        r11, [sp, #0x3C]
  00028	e5dde038	 ldrb        lr, [sp, #0x38]
  0002c	e58d8010	 str         r8, [sp, #0x10]
  00030	e58d400c	 str         r4, [sp, #0xC]
  00034	e58da008	 str         r10, [sp, #8]
  00038	e58db004	 str         r11, [sp, #4]
  0003c	e58de000	 str         lr, [sp]
  00040	eb000000	 bl          |??0CQueuedPipe@@QAA@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCMhcd@@@Z|
  00044	e59fe15c	 ldr         lr, [pc, #0x15C]

; 1220 :     DEBUGMSG( ZONE_PIPE && ZONE_VERBOSE, (TEXT("%s: +CInterruptPipe::CInterruptPipe\n"),GetControllerName()) );
; 1221 :     DEBUGCHK( m_usbEndpointDescriptor.bDescriptorType == USB_ENDPOINT_DESCRIPTOR_TYPE &&
; 1222 :               m_usbEndpointDescriptor.bLength >= sizeof( USB_ENDPOINT_DESCRIPTOR ) &&
; 1223 :               (m_usbEndpointDescriptor.bmAttributes & USB_ENDPOINT_TYPE_MASK) == USB_ENDPOINT_TYPE_INTERRUPT );
; 1224 :     // Note: Need Get S-MASK and C-MASK...
; 1225 :     
; 1226 :     memset(&m_EndptBuget,0,sizeof(m_EndptBuget));

  00048	e1a04005	 mov         r4, r5
  0004c	e3a02018	 mov         r2, #0x18
  00050	e484e070	 str         lr, [r4], #0x70
  00054	e3a01000	 mov         r1, #0
  00058	e1a00004	 mov         r0, r4
  0005c	eb000000	 bl          memset

; 1227 :     m_EndptBuget.max_packet= lpEndpointDescriptor->wMaxPacketSize & 0x7ff;

  00060	e5d61004	 ldrb        r1, [r6, #4]
  00064	e5d63005	 ldrb        r3, [r6, #5]
  00068	e3a02c07	 mov         r2, #7, 24
  0006c	e38220ff	 orr         r2, r2, #0xFF
  00070	e1813403	 orr         r3, r1, r3, lsl #8
  00074	e0030002	 and         r0, r3, r2
  00078	e1c507b0	 strh        r0, [r5, #0x70]

; 1228 :     BYTE bInterval=lpEndpointDescriptor->bInterval;

  0007c	e5d61006	 ldrb        r1, [r6, #6]

; 1229 :     if (bInterval==0)

  00080	e3510000	 cmp         r1, #0

; 1230 :         bInterval=1;

  00084	03a01001	 moveq       r1, #1

; 1231 :     if (fIsHighSpeed) { // Table 9-13

  00088	e3570000	 cmp         r7, #0
  0008c	0a00000c	 beq         |$LN10@CInterrupt|

; 1232 :         m_EndptBuget.max_packet *=(((lpEndpointDescriptor->wMaxPacketSize >>11) & 3)+1);

  00090	e5d62004	 ldrb        r2, [r6, #4]
  00094	e5d63005	 ldrb        r3, [r6, #5]

; 1233 :         m_EndptBuget.period = (1<< (bInterval-1));

  00098	e2411001	 sub         r1, r1, #1
  0009c	e3a0e001	 mov         lr, #1
  000a0	e1823403	 orr         r3, r2, r3, lsl #8
  000a4	e2033b06	 and         r3, r3, #6, 22
  000a8	e1a035a3	 mov         r3, r3, lsr #11
  000ac	e2833001	 add         r3, r3, #1
  000b0	e0020093	 mul         r2, r3, r0
  000b4	e1a0311e	 mov         r3, lr, lsl r1
  000b8	e1c527b0	 strh        r2, [r5, #0x70]
  000bc	e1c537b2	 strh        r3, [r5, #0x72]

; 1234 :     }
; 1235 :     else {

  000c0	ea00000c	 b           |$LN6@CInterrupt|
  000c4		 |$LN10@CInterrupt|

; 1236 :         m_EndptBuget.period = bInterval;

  000c4	e1c517b2	 strh        r1, [r5, #0x72]

; 1237 :         for (UCHAR uBit=0x80;uBit!=0;uBit>>=1) {

  000c8	e3a02080	 mov         r2, #0x80
  000cc	e3a03080	 mov         r3, #0x80
  000d0		 |$LL8@CInterrupt|

; 1238 :             if ((m_EndptBuget.period & uBit)!=0) {

  000d0	e0013003	 and         r3, r1, r3
  000d4	e1a03803	 mov         r3, r3, lsl #16
  000d8	e1b03823	 movs        r3, r3, lsr #16

; 1260 :         }
; 1261 :     }
; 1262 :     else {
; 1263 :         ASSERT(FALSE);
; 1264 :     }
; 1265 : 
; 1266 :     DEBUGMSG( ZONE_PIPE && ZONE_VERBOSE, (TEXT("%s: -CInterruptPipe::CInterruptPipe\n"),GetControllerName()) );
; 1267 : }

  000dc	1a000004	 bne         |$LN21@CInterrupt|
  000e0	e1a030a2	 mov         r3, r2, lsr #1
  000e4	e20320ff	 and         r2, r3, #0xFF
  000e8	e1b03002	 movs        r3, r2
  000ec	1afffff7	 bne         |$LL8@CInterrupt|

; 1238 :             if ((m_EndptBuget.period & uBit)!=0) {

  000f0	ea000000	 b           |$LN6@CInterrupt|
  000f4		 |$LN21@CInterrupt|

; 1239 :                 m_EndptBuget.period = uBit;

  000f4	e1c527b2	 strh        r2, [r5, #0x72]
  000f8		 |$LN6@CInterrupt|

; 1240 :                 break;
; 1241 :             }
; 1242 :         }
; 1243 :     }
; 1244 :     ASSERT(m_EndptBuget.period!=0);
; 1245 :     m_EndptBuget.ep_type = interrupt ;

  000f8	e3a03002	 mov         r3, #2
  000fc	e5853074	 str         r3, [r5, #0x74]

; 1246 :     m_EndptBuget.type= lpEndpointDescriptor->bDescriptorType;

  00100	e5d63001	 ldrb        r3, [r6, #1]
  00104	e5c53078	 strb        r3, [r5, #0x78]

; 1247 :     m_EndptBuget.direction =  (USB_ENDPOINT_DIRECTION_OUT(lpEndpointDescriptor->bEndpointAddress)?OUTDIR:INDIR);

  00108	e5d63002	 ldrb        r3, [r6, #2]
  0010c	e3130080	 tst         r3, #0x80
  00110	03a03001	 moveq       r3, #1
  00114	13a03000	 movne       r3, #0

; 1248 :     m_EndptBuget.speed=(fIsHighSpeed?HSSPEED:(fIsLowSpeed?LSSPEED:FSSPEED));

  00118	e3570000	 cmp         r7, #0
  0011c	13a0e002	 movne       lr, #2
  00120	e5c53079	 strb        r3, [r5, #0x79]
  00124	1a000002	 bne         |$LN17@CInterrupt|
  00128	e3590000	 cmp         r9, #0
  0012c	13a0e000	 movne       lr, #0
  00130	03a0e001	 moveq       lr, #1
  00134		 |$LN17@CInterrupt|

; 1249 : 
; 1250 :     m_bSuccess= pCMhcd->AllocUsb2BusTime(bHubAddress,bHubPort,m_TTContext,&m_EndptBuget);

  00134	e5953010	 ldr         r3, [r5, #0x10]
  00138	e2880fa9	 add         r0, r8, #0xA9, 30
  0013c	e1a0200a	 mov         r2, r10
  00140	e1a0100b	 mov         r1, r11
  00144	e5c5e07a	 strb        lr, [r5, #0x7A]
  00148	e58d4000	 str         r4, [sp]
  0014c	eb000000	 bl          |?AllocUsb2BusTime@USB2lib@@QAAHEEHPAU_EndpointBuget@@@Z|
  00150	e3500000	 cmp         r0, #0
  00154	e5850088	 str         r0, [r5, #0x88]

; 1251 :     ASSERT(m_bSuccess);
; 1252 :     if (m_bSuccess ) {

  00158	0a00000e	 beq         |$LN2@CInterrupt|

; 1253 :         if (fIsHighSpeed) { // Update SMask and CMask for Slit Interrupt Endpoitt

  0015c	e3570000	 cmp         r7, #0

; 1254 :             m_bFrameSMask = 0xff;

  00160	13a030ff	 movne       r3, #0xFF

; 1255 :             m_bFrameCMask = 0;

  00164	13a02000	 movne       r2, #0
  00168	15c5301d	 strneb      r3, [r5, #0x1D]
  0016c	15c5201e	 strneb      r2, [r5, #0x1E]
  00170	1a000008	 bne         |$LN2@CInterrupt|

; 1256 :         }
; 1257 :         else {
; 1258 :             m_bFrameSMask=pCMhcd->GetSMASK(&m_EndptBuget);

  00174	e1a01004	 mov         r1, r4
  00178	e2880fa9	 add         r0, r8, #0xA9, 30
  0017c	eb000000	 bl          |?GetSMASK@USB2lib@@QAAEPAU_EndpointBuget@@@Z|
  00180	e1a03000	 mov         r3, r0

; 1259 :             m_bFrameCMask=pCMhcd->GetCMASK(&m_EndptBuget);

  00184	e2880fa9	 add         r0, r8, #0xA9, 30
  00188	e1a01004	 mov         r1, r4
  0018c	e5c5301d	 strb        r3, [r5, #0x1D]
  00190	eb000000	 bl          |?GetCMASK@USB2lib@@QAAEPAU_EndpointBuget@@@Z|
  00194	e5c5001e	 strb        r0, [r5, #0x1E]
  00198		 |$LN2@CInterrupt|

; 1260 :         }
; 1261 :     }
; 1262 :     else {
; 1263 :         ASSERT(FALSE);
; 1264 :     }
; 1265 : 
; 1266 :     DEBUGMSG( ZONE_PIPE && ZONE_VERBOSE, (TEXT("%s: -CInterruptPipe::CInterruptPipe\n"),GetControllerName()) );
; 1267 : }

  00198	e1a00005	 mov         r0, r5
  0019c	e28dd014	 add         sp, sp, #0x14
  001a0	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  001a4	e12fff1e	 bx          lr
  001a8		 |$LN26@CInterrupt|
  001a8		 |$LN27@CInterrupt|
  001a8	00000000	 DCD         |??_7CInterruptPipe@@6B@|
  001ac		 |$M38162|

			 ENDP  ; |??0CInterruptPipe@@QAA@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCMhcd@@@Z|, CInterruptPipe::CInterruptPipe

; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.h

  00000			 AREA	 |.pdata|, PDATA
|$T38175| DCD	|$LN5@GetTransfe@4|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetTransferType@CInterruptPipe@@UBA?BKXZ| PROC ; CInterruptPipe::GetTransferType

; 358  :     {

  00000		 |$LN5@GetTransfe@4|
  00000		 |$M38172|

; 359  :         return USB_ENDPOINT_TYPE_INTERRUPT;

  00000	e3a00003	 mov         r0, #3

; 360  :     }

  00004	e12fff1e	 bx          lr
  00008		 |$M38173|

			 ENDP  ; |?GetTransferType@CInterruptPipe@@UBA?BKXZ|, CInterruptPipe::GetTransferType

	EXPORT	|??_C@_1HG@EJKGBDMK@?$AAM?$AAU?$AAS?$AAB?$AAM?$AAH?$AAD?$AAR?$AAC?$AA?5?$AAi?$AAs?$AAs?$AAu?$AAe?$AA?5?$AA?9?$AA?5?$AAI?$AAN?$AAT?$AAE?$AAR?$AAR?$AAU?$AAP?$AAT?$AA?5?$AAO?$AAU?$AAT?$AA?5@| [ DATA ] ; `string'
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\chw.h

  00000			 AREA	 |.pdata|, PDATA
|$T38224| DCD	|$LN37@OpenPipe@3|
	DCD	0x40004f01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@EJKGBDMK@?$AAM?$AAU?$AAS?$AAB?$AAM?$AAH?$AAD?$AAR?$AAC?$AA?5?$AAi?$AAs?$AAs?$AAu?$AAe?$AA?5?$AA?9?$AA?5?$AAI?$AAN?$AAT?$AAE?$AAR?$AAR?$AAU?$AAP?$AAT?$AA?5?$AAO?$AAU?$AAT?$AA?5@| DCB "M"
	DCB	0x0, "U", 0x0, "S", 0x0, "B", 0x0, "M", 0x0, "H", 0x0, "D"
	DCB	0x0, "R", 0x0, "C", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, "s"
	DCB	0x0, "u", 0x0, "e", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "I"
	DCB	0x0, "N", 0x0, "T", 0x0, "E", 0x0, "R", 0x0, "R", 0x0, "U"
	DCB	0x0, "P", 0x0, "T", 0x0, " ", 0x0, "O", 0x0, "U", 0x0, "T"
	DCB	0x0, " ", 0x0, "n", 0x0, "e", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "o", 0x0, "p", 0x0, "e"
	DCB	0x0, "r", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "a"
	DCB	0x0, "t", 0x0, " ", 0x0, "D", 0x0, "M", 0x0, "A", 0x0, " "
	DCB	0x0, "0", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?OpenPipe@CInterruptPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ| PROC ; CInterruptPipe::OpenPipe

; 1304 : {

  00000		 |$LN37@OpenPipe@3|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M38221|
  00004	e1a04000	 mov         r4, r0

; 1305 :     DEBUGMSG( ZONE_PIPE, (TEXT("%s: +CInterruptPipe::OpenPipe\n"),GetControllerName() ) );
; 1306 : 
; 1307 :     HCD_REQUEST_STATUS status = requestFailed;
; 1308 :     m_pUnQueuedTransfer=NULL;      // ptr to last transfer in queue
; 1309 :     m_pQueuedTransfer=NULL;
; 1310 :     if (!m_bSuccess)

  00008	e5943088	 ldr         r3, [r4, #0x88]
  0000c	e3a06000	 mov         r6, #0
  00010	e3a05000	 mov         r5, #0
  00014	e3530000	 cmp         r3, #0

; 1311 :         return status;

  00018	03a05000	 moveq       r5, #0
  0001c	e5846068	 str         r6, [r4, #0x68]
  00020	e584606c	 str         r6, [r4, #0x6C]
  00024	0a000040	 beq         |$LN32@OpenPipe@3|

; 1312 :     EnterCriticalSection( &m_csPipeLock );

  00028	e2840020	 add         r0, r4, #0x20
  0002c	eb000000	 bl          EnterCriticalSection

; 1313 : 
; 1314 :     // if this fails, someone is trying to open
; 1315 :     // an already opened pipe
; 1316 :     DEBUGCHK(m_pPipeQHead == NULL );
; 1317 :     if ( m_pPipeQHead == NULL )

  00030	e5943064	 ldr         r3, [r4, #0x64]
  00034	e3530000	 cmp         r3, #0
  00038	1a00000a	 bne         |$LN34@OpenPipe@3|

; 1318 :         m_pPipeQHead =  new CQH(this);

  0003c	e3a00020	 mov         r0, #0x20
  00040	eb000000	 bl          |??2@YAPAXI@Z|
  00044	e3500000	 cmp         r0, #0
  00048	0a000002	 beq         |$LN12@OpenPipe@3|
  0004c	e1a01004	 mov         r1, r4
  00050	eb000000	 bl          |??0CQH@@QAA@PAVCPipe@@@Z|
  00054	ea000000	 b           |$LN13@OpenPipe@3|
  00058		 |$LN12@OpenPipe@3|
  00058	e3a00000	 mov         r0, #0
  0005c		 |$LN13@OpenPipe@3|
  0005c	e5840064	 str         r0, [r4, #0x64]

; 1319 :     if (m_pPipeQHead) {        

  00060	e3500000	 cmp         r0, #0
  00064	0a000000	 beq         |$LN7@OpenPipe@3|
  00068		 |$LN34@OpenPipe@3|

; 1320 :         // Interrupt QHs are a bit complicated. See comment
; 1321 :         // in Initialize() routine as well.
; 1322 :         //        
; 1323 :         status = requestOK;

  00068	e3a05001	 mov         r5, #1
  0006c		 |$LN7@OpenPipe@3|

; 1324 :     }
; 1325 :     LeaveCriticalSection( &m_csPipeLock );

  0006c	e2840020	 add         r0, r4, #0x20
  00070	eb000000	 bl          LeaveCriticalSection

; 1326 :    
; 1327 :     if (status == requestOK) {

  00074	e3550001	 cmp         r5, #1
  00078	1a00002b	 bne         |$LN32@OpenPipe@3|

; 1328 :         if (m_pCMhcd->IsDMASupport())

  0007c	e594000c	 ldr         r0, [r4, #0xC]
  00080	e5903000	 ldr         r3, [r0]
  00084	e593306c	 ldr         r3, [r3, #0x6C]
  00088	e1a0e00f	 mov         lr, pc
  0008c	e12fff13	 bx          r3
  00090	e3500000	 cmp         r0, #0
  00094	0a00001e	 beq         |$LN5@OpenPipe@3|

; 1329 :         {
; 1330 :             // We can only set the transfer DMA mode 0 for Interrupt pipe
; 1331 :              if (m_pCMhcd->GetDMAMode())

  00098	e594000c	 ldr         r0, [r4, #0xC]
  0009c	e5903000	 ldr         r3, [r0]
  000a0	e5933070	 ldr         r3, [r3, #0x70]
  000a4	e1a0e00f	 mov         lr, pc
  000a8	e12fff13	 bx          r3
  000ac	e3500000	 cmp         r0, #0

; 1332 :                 SetTransferMode(TRANSFER_DMA1);

  000b0	13a03002	 movne       r3, #2
  000b4	e3a06001	 mov         r6, #1
  000b8	15c43014	 strneb      r3, [r4, #0x14]

; 1333 :             else
; 1334 :                 SetTransferMode(TRANSFER_DMA0);

  000bc	05c46014	 streqb      r6, [r4, #0x14]

; 1335 : 
; 1336 :             // Special handling for bug in MUSBMHDRC
; 1337 :             if ((GetTransferMode() == TRANSFER_DMA1) && (GetSpeed() == FULL_SPEED)
; 1338 :                 && (USB_ENDPOINT_DIRECTION_OUT(m_usbEndpointDescriptor.bEndpointAddress)))

  000c0	e5d43014	 ldrb        r3, [r4, #0x14]
  000c4	e3530002	 cmp         r3, #2
  000c8	1a000012	 bne         |$LN30@OpenPipe@3|
  000cc	e5943040	 ldr         r3, [r4, #0x40]
  000d0	e3530000	 cmp         r3, #0
  000d4	13a03001	 movne       r3, #1
  000d8	1a000003	 bne         |$LN25@OpenPipe@3|
  000dc	e594303c	 ldr         r3, [r4, #0x3C]
  000e0	e3530000	 cmp         r3, #0
  000e4	13a03003	 movne       r3, #3
  000e8	03a03002	 moveq       r3, #2
  000ec		 |$LN25@OpenPipe@3|
  000ec	e20330ff	 and         r3, r3, #0xFF
  000f0	e3530002	 cmp         r3, #2
  000f4	1a000007	 bne         |$LN30@OpenPipe@3|
  000f8	e5d43036	 ldrb        r3, [r4, #0x36]
  000fc	e3130080	 tst         r3, #0x80
  00100	1a000004	 bne         |$LN30@OpenPipe@3|

; 1339 :             {
; 1340 :                 RETAILMSG(1, (TEXT("MUSBMHDRC issue - INTERRUPT OUT need to operate at DMA 0\r\n")));

  00104	e59f002c	 ldr         r0, [pc, #0x2C]
  00108	eb000000	 bl          NKDbgPrintfW

; 1341 :                 SetTransferMode(TRANSFER_DMA0);

  0010c	e5c46014	 strb        r6, [r4, #0x14]

; 1342 :             }
; 1343 :         }
; 1344 :         else

  00110	ea000000	 b           |$LN30@OpenPipe@3|
  00114		 |$LN5@OpenPipe@3|

; 1345 :             SetTransferMode(TRANSFER_FIFO);

  00114	e5c46014	 strb        r6, [r4, #0x14]
  00118		 |$LN30@OpenPipe@3|

; 1346 : 
; 1347 : #ifdef DEBUG
; 1348 :         BOOL bReturn = m_pCMhcd->AddToBusyPipeList(this, FALSE);
; 1349 :         ASSERT(bReturn == TRUE);
; 1350 : #else
; 1351 : 		m_pCMhcd->AddToBusyPipeList(this, FALSE);

  00118	e594300c	 ldr         r3, [r4, #0xC]
  0011c	e3a02000	 mov         r2, #0
  00120	e1a01004	 mov         r1, r4
  00124	e28300c0	 add         r0, r3, #0xC0
  00128	eb000000	 bl          |?AddToBusyPipeList@CBusyPipeList@@QAAHQAVCPipe@@H@Z|
  0012c		 |$LN32@OpenPipe@3|

; 1352 : #endif
; 1353 :     }
; 1354 :     DEBUGMSG( ZONE_PIPE, (TEXT("%s: -CInterruptPipe::OpenPipe, returning HCD_REQUEST_STATUS %d\n"),GetControllerName(), status) );
; 1355 :     return status;
; 1356 : }

  0012c	e1a00005	 mov         r0, r5
  00130	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00134	e12fff1e	 bx          lr
  00138		 |$LN38@OpenPipe@3|
  00138		 |$LN39@OpenPipe@3|
  00138	00000000	 DCD         |??_C@_1HG@EJKGBDMK@?$AAM?$AAU?$AAS?$AAB?$AAM?$AAH?$AAD?$AAR?$AAC?$AA?5?$AAi?$AAs?$AAs?$AAu?$AAe?$AA?5?$AA?9?$AA?5?$AAI?$AAN?$AAT?$AAE?$AAR?$AAR?$AAU?$AAP?$AAT?$AA?5?$AAO?$AAU?$AAT?$AA?5@|
  0013c		 |$M38222|

			 ENDP  ; |?OpenPipe@CInterruptPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ|, CInterruptPipe::OpenPipe

; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.h

  00000			 AREA	 |.pdata|, PDATA
|$T38265| DCD	|$LN20@ClosePipe@2|
	DCD	0x40002001
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ClosePipe@CInterruptPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ| PROC ; CInterruptPipe::ClosePipe

; 1370 : {

  00000		 |$LN20@ClosePipe@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M38262|
  00004	e1a04000	 mov         r4, r0

; 1371 :     DEBUGMSG( ZONE_PIPE, (TEXT("%s: +CBulkPipe(%s)::ClosePipe\n"),GetControllerName(), GetPipeType() ) );
; 1372 :     HCD_REQUEST_STATUS status = requestFailed;
; 1373 :     m_pCMhcd->RemoveFromBusyPipeList(this );

  00008	e594300c	 ldr         r3, [r4, #0xC]
  0000c	e1a01004	 mov         r1, r4
  00010	e3a05000	 mov         r5, #0
  00014	e28300c0	 add         r0, r3, #0xC0
  00018	eb000000	 bl          |?RemoveFromBusyPipeList@CBusyPipeList@@QAAXQAVCPipe@@@Z|

; 1374 :     EnterCriticalSection( &m_csPipeLock );

  0001c	e2840020	 add         r0, r4, #0x20
  00020	eb000000	 bl          EnterCriticalSection

; 1375 :     if ( m_pPipeQHead) {        

  00024	e5943064	 ldr         r3, [r4, #0x64]
  00028	e3530000	 cmp         r3, #0
  0002c	0a00000e	 beq         |$LN1@ClosePipe@2|

; 1376 :         AbortQueue( );

  00030	e1a00004	 mov         r0, r4
  00034	eb000000	 bl          |?AbortQueue@CQueuedPipe@@IAAXXZ|

; 1377 :         //delete m_pPipeQHead;        
; 1378 :         m_pPipeQHead->~CQH();

  00038	e5943064	 ldr         r3, [r4, #0x64]
  0003c	e283000c	 add         r0, r3, #0xC
  00040	eb000000	 bl          DeleteCriticalSection

; 1379 :         delete m_pPipeQHead;        

  00044	e5943064	 ldr         r3, [r4, #0x64]
  00048	e1b05003	 movs        r5, r3
  0004c	0a000003	 beq         |$LN4@ClosePipe@2|
  00050	e285000c	 add         r0, r5, #0xC
  00054	eb000000	 bl          DeleteCriticalSection
  00058	e1a00005	 mov         r0, r5
  0005c	eb000000	 bl          |??3@YAXPAX@Z|
  00060		 |$LN4@ClosePipe@2|

; 1380 :         m_pPipeQHead = NULL;

  00060	e3a03000	 mov         r3, #0
  00064	e5843064	 str         r3, [r4, #0x64]

; 1381 :         status = requestOK;

  00068	e3a05001	 mov         r5, #1
  0006c		 |$LN1@ClosePipe@2|

; 1382 :     }
; 1383 :     LeaveCriticalSection( &m_csPipeLock );

  0006c	e2840020	 add         r0, r4, #0x20
  00070	eb000000	 bl          LeaveCriticalSection

; 1384 :     return status;
; 1385 : }

  00074	e1a00005	 mov         r0, r5
  00078	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0007c	e12fff1e	 bx          lr
  00080		 |$M38263|

			 ENDP  ; |?ClosePipe@CInterruptPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ|, CInterruptPipe::ClosePipe


  00000			 AREA	 |.pdata|, PDATA
|$T38280| DCD	|$LN9@AreTransfe@3|
	DCD	0x40001b00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AreTransferParametersValid@CInterruptPipe@@EBAHPBUSTRANSFER@@@Z| PROC ; CInterruptPipe::AreTransferParametersValid

; 1399 : {

  00000		 |$LN9@AreTransfe@3|
  00000		 |$M38277|
  00000	e3510000	 cmp         r1, #0

; 1400 :     if (pTransfer == NULL)
; 1401 :         return FALSE;

  00004	0a000016	 beq         |$LN4@AreTransfe@3|

; 1402 :     
; 1403 :     DEBUGMSG( ZONE_TRANSFER && ZONE_VERBOSE, (TEXT("%s: +CInterruptPipe::AreTransferParametersValid\n"),GetControllerName()) );
; 1404 : 
; 1405 :     // these parameters aren't used by CInterruptPipe, so if they are non NULL,
; 1406 :     // it doesn't present a serious problem. But, they shouldn't have been
; 1407 :     // passed in as non-NULL by the calling driver.
; 1408 :     DEBUGCHK( pTransfer->adwIsochErrors == NULL && // ISOCH
; 1409 :               pTransfer->adwIsochLengths == NULL && // ISOCH
; 1410 :               pTransfer->aLengths == NULL && // ISOCH
; 1411 :               pTransfer->lpvControlHeader == NULL ); // CONTROL
; 1412 :     // this is also not a serious problem, but shouldn't happen in normal
; 1413 :     // circumstances. It would indicate a logic error in the calling driver.
; 1414 :     DEBUGCHK( !(pTransfer->lpStartAddress  == NULL && pTransfer->lpvNotifyParameter  != NULL) );
; 1415 :     // DWORD                     pTransfer->dwStartingFrame (ignored - ISOCH)
; 1416 :     // DWORD                     pTransfer->dwFrames (ignored - ISOCH)
; 1417 : 
; 1418 :     BOOL fValid = (  m_pPipeQHead!= NULL &&
; 1419 :                     m_bDeviceAddress > 0 && m_bDeviceAddress <= USB_MAX_ADDRESS &&
; 1420 :                     (pTransfer->lpvBuffer != NULL || pTransfer->dwBufferSize == 0) &&
; 1421 :                     // paClientBuffer could be 0 or !0
; 1422 :                     pTransfer->lpfComplete != NULL &&
; 1423 :                     pTransfer->lpdwBytesTransferred != NULL &&
; 1424 :                     pTransfer->lpdwError != NULL );

  00008	e5903064	 ldr         r3, [r0, #0x64]
  0000c	e3530000	 cmp         r3, #0
  00010	0a000013	 beq         |$LN4@AreTransfe@3|
  00014	e5d0303b	 ldrb        r3, [r0, #0x3B]
  00018	e3530000	 cmp         r3, #0
  0001c	0a000010	 beq         |$LN4@AreTransfe@3|
  00020	e353007f	 cmp         r3, #0x7F
  00024	8a00000e	 bhi         |$LN4@AreTransfe@3|
  00028	e5913020	 ldr         r3, [r1, #0x20]
  0002c	e3530000	 cmp         r3, #0
  00030	1a000002	 bne         |$LN5@AreTransfe@3|
  00034	e591301c	 ldr         r3, [r1, #0x1C]
  00038	e3530000	 cmp         r3, #0
  0003c	1a000008	 bne         |$LN4@AreTransfe@3|
  00040		 |$LN5@AreTransfe@3|
  00040	e5913034	 ldr         r3, [r1, #0x34]
  00044	e3530000	 cmp         r3, #0
  00048	0a000005	 beq         |$LN4@AreTransfe@3|
  0004c	e5913038	 ldr         r3, [r1, #0x38]
  00050	e3530000	 cmp         r3, #0
  00054	1591303c	 ldrne       r3, [r1, #0x3C]
  00058	13530000	 cmpne       r3, #0
  0005c	13a00001	 movne       r0, #1

; 1425 : 
; 1426 :     DEBUGMSG( ZONE_TRANSFER && ZONE_VERBOSE, (TEXT("%s: -CInterruptPipe::AreTransferParametersValid, returning BOOL %d\n"),GetControllerName(), fValid) );
; 1427 :     return fValid;
; 1428 : }

  00060	112fff1e	 bxne        lr
  00064		 |$LN4@AreTransfe@3|

; 1402 :     
; 1403 :     DEBUGMSG( ZONE_TRANSFER && ZONE_VERBOSE, (TEXT("%s: +CInterruptPipe::AreTransferParametersValid\n"),GetControllerName()) );
; 1404 : 
; 1405 :     // these parameters aren't used by CInterruptPipe, so if they are non NULL,
; 1406 :     // it doesn't present a serious problem. But, they shouldn't have been
; 1407 :     // passed in as non-NULL by the calling driver.
; 1408 :     DEBUGCHK( pTransfer->adwIsochErrors == NULL && // ISOCH
; 1409 :               pTransfer->adwIsochLengths == NULL && // ISOCH
; 1410 :               pTransfer->aLengths == NULL && // ISOCH
; 1411 :               pTransfer->lpvControlHeader == NULL ); // CONTROL
; 1412 :     // this is also not a serious problem, but shouldn't happen in normal
; 1413 :     // circumstances. It would indicate a logic error in the calling driver.
; 1414 :     DEBUGCHK( !(pTransfer->lpStartAddress  == NULL && pTransfer->lpvNotifyParameter  != NULL) );
; 1415 :     // DWORD                     pTransfer->dwStartingFrame (ignored - ISOCH)
; 1416 :     // DWORD                     pTransfer->dwFrames (ignored - ISOCH)
; 1417 : 
; 1418 :     BOOL fValid = (  m_pPipeQHead!= NULL &&
; 1419 :                     m_bDeviceAddress > 0 && m_bDeviceAddress <= USB_MAX_ADDRESS &&
; 1420 :                     (pTransfer->lpvBuffer != NULL || pTransfer->dwBufferSize == 0) &&
; 1421 :                     // paClientBuffer could be 0 or !0
; 1422 :                     pTransfer->lpfComplete != NULL &&
; 1423 :                     pTransfer->lpdwBytesTransferred != NULL &&
; 1424 :                     pTransfer->lpdwError != NULL );

  00064	e3a00000	 mov         r0, #0

; 1425 : 
; 1426 :     DEBUGMSG( ZONE_TRANSFER && ZONE_VERBOSE, (TEXT("%s: -CInterruptPipe::AreTransferParametersValid, returning BOOL %d\n"),GetControllerName(), fValid) );
; 1427 :     return fValid;
; 1428 : }

  00068	e12fff1e	 bx          lr
  0006c		 |$M38278|

			 ENDP  ; |?AreTransferParametersValid@CInterruptPipe@@EBAHPBUSTRANSFER@@@Z|, CInterruptPipe::AreTransferParametersValid

	EXPORT	|?CreateBulkPipe@@YAPAVCPipeAbs@@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCHcd@@@Z| ; CreateBulkPipe

  00000			 AREA	 |.pdata|, PDATA
|$T38297| DCD	|$LN7@CreateBulk|
	DCD	0x40001c02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CreateBulkPipe@@YAPAVCPipeAbs@@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCHcd@@@Z| PROC ; CreateBulkPipe

; 1436 : {    

  00000		 |$LN7@CreateBulk|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004	e24dd014	 sub         sp, sp, #0x14
  00008		 |$M38294|
  00008	e1a07003	 mov         r7, r3
  0000c	e1a08002	 mov         r8, r2
  00010	e1a09001	 mov         r9, r1
  00014	e1a0a000	 mov         r10, r0

; 1437 :     return new CBulkPipe(lpEndpointDescriptor,fIsLowSpeed,fIsHighSpeed,bDeviceAddress,bHubAddress,bHubPort,ttContext,(CMhcd * const)pChcd);

  00018	e3a00070	 mov         r0, #0x70
  0001c	eb000000	 bl          |??2@YAPAXI@Z|
  00020	e3500000	 cmp         r0, #0
  00024	0a00000d	 beq         |$LN3@CreateBulk|
  00028	e59de040	 ldr         lr, [sp, #0x40]
  0002c	e59d403c	 ldr         r4, [sp, #0x3C]
  00030	e5dd5038	 ldrb        r5, [sp, #0x38]
  00034	e5dd6034	 ldrb        r6, [sp, #0x34]
  00038	e1a03008	 mov         r3, r8
  0003c	e1a02009	 mov         r2, r9
  00040	e1a0100a	 mov         r1, r10
  00044	e58de010	 str         lr, [sp, #0x10]
  00048	e58d400c	 str         r4, [sp, #0xC]
  0004c	e58d5008	 str         r5, [sp, #8]
  00050	e58d6004	 str         r6, [sp, #4]
  00054	e58d7000	 str         r7, [sp]
  00058	eb000000	 bl          |??0CBulkPipe@@QAA@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCMhcd@@@Z|
  0005c	ea000000	 b           |$LN4@CreateBulk|
  00060		 |$LN3@CreateBulk|
  00060	e3a00000	 mov         r0, #0
  00064		 |$LN4@CreateBulk|

; 1438 : }

  00064	e28dd014	 add         sp, sp, #0x14
  00068	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  0006c	e12fff1e	 bx          lr
  00070		 |$M38295|

			 ENDP  ; |?CreateBulkPipe@@YAPAVCPipeAbs@@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCHcd@@@Z|, CreateBulkPipe

	EXPORT	|?CreateControlPipe@@YAPAVCPipeAbs@@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCHcd@@@Z| ; CreateControlPipe

  00000			 AREA	 |.pdata|, PDATA
|$T38314| DCD	|$LN7@CreateCont|
	DCD	0x40001c02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CreateControlPipe@@YAPAVCPipeAbs@@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCHcd@@@Z| PROC ; CreateControlPipe

; 1444 : {     

  00000		 |$LN7@CreateCont|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004	e24dd014	 sub         sp, sp, #0x14
  00008		 |$M38311|
  00008	e1a07003	 mov         r7, r3
  0000c	e1a08002	 mov         r8, r2
  00010	e1a09001	 mov         r9, r1
  00014	e1a0a000	 mov         r10, r0

; 1445 :     return new CControlPipe(lpEndpointDescriptor,fIsLowSpeed,fIsHighSpeed,bDeviceAddress,bHubAddress,bHubPort,ttContext,(CMhcd * const)pChcd);

  00018	e3a00070	 mov         r0, #0x70
  0001c	eb000000	 bl          |??2@YAPAXI@Z|
  00020	e3500000	 cmp         r0, #0
  00024	0a00000d	 beq         |$LN3@CreateCont|
  00028	e59de040	 ldr         lr, [sp, #0x40]
  0002c	e59d403c	 ldr         r4, [sp, #0x3C]
  00030	e5dd5038	 ldrb        r5, [sp, #0x38]
  00034	e5dd6034	 ldrb        r6, [sp, #0x34]
  00038	e1a03008	 mov         r3, r8
  0003c	e1a02009	 mov         r2, r9
  00040	e1a0100a	 mov         r1, r10
  00044	e58de010	 str         lr, [sp, #0x10]
  00048	e58d400c	 str         r4, [sp, #0xC]
  0004c	e58d5008	 str         r5, [sp, #8]
  00050	e58d6004	 str         r6, [sp, #4]
  00054	e58d7000	 str         r7, [sp]
  00058	eb000000	 bl          |??0CControlPipe@@QAA@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCMhcd@@@Z|
  0005c	ea000000	 b           |$LN4@CreateCont|
  00060		 |$LN3@CreateCont|
  00060	e3a00000	 mov         r0, #0
  00064		 |$LN4@CreateCont|

; 1446 : }

  00064	e28dd014	 add         sp, sp, #0x14
  00068	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  0006c	e12fff1e	 bx          lr
  00070		 |$M38312|

			 ENDP  ; |?CreateControlPipe@@YAPAVCPipeAbs@@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCHcd@@@Z|, CreateControlPipe

	EXPORT	|?CreateInterruptPipe@@YAPAVCPipeAbs@@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCHcd@@@Z| ; CreateInterruptPipe

  00000			 AREA	 |.pdata|, PDATA
|$T38331| DCD	|$LN7@CreateInte|
	DCD	0x40001c02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CreateInterruptPipe@@YAPAVCPipeAbs@@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCHcd@@@Z| PROC ; CreateInterruptPipe

; 1453 : {     

  00000		 |$LN7@CreateInte|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004	e24dd014	 sub         sp, sp, #0x14
  00008		 |$M38328|
  00008	e1a07003	 mov         r7, r3
  0000c	e1a08002	 mov         r8, r2
  00010	e1a09001	 mov         r9, r1
  00014	e1a0a000	 mov         r10, r0

; 1454 :     return new CInterruptPipe(lpEndpointDescriptor,fIsLowSpeed,fIsHighSpeed,bDeviceAddress,bHubAddress,bHubPort,ttContext,(CMhcd * const)pChcd);

  00018	e3a0008c	 mov         r0, #0x8C
  0001c	eb000000	 bl          |??2@YAPAXI@Z|
  00020	e3500000	 cmp         r0, #0
  00024	0a00000d	 beq         |$LN3@CreateInte|
  00028	e59de040	 ldr         lr, [sp, #0x40]
  0002c	e59d403c	 ldr         r4, [sp, #0x3C]
  00030	e5dd5038	 ldrb        r5, [sp, #0x38]
  00034	e5dd6034	 ldrb        r6, [sp, #0x34]
  00038	e1a03008	 mov         r3, r8
  0003c	e1a02009	 mov         r2, r9
  00040	e1a0100a	 mov         r1, r10
  00044	e58de010	 str         lr, [sp, #0x10]
  00048	e58d400c	 str         r4, [sp, #0xC]
  0004c	e58d5008	 str         r5, [sp, #8]
  00050	e58d6004	 str         r6, [sp, #4]
  00054	e58d7000	 str         r7, [sp]
  00058	eb000000	 bl          |??0CInterruptPipe@@QAA@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCMhcd@@@Z|
  0005c	ea000000	 b           |$LN4@CreateInte|
  00060		 |$LN3@CreateInte|
  00060	e3a00000	 mov         r0, #0
  00064		 |$LN4@CreateInte|

; 1455 : }

  00064	e28dd014	 add         sp, sp, #0x14
  00068	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  0006c	e12fff1e	 bx          lr
  00070		 |$M38329|

			 ENDP  ; |?CreateInterruptPipe@@YAPAVCPipeAbs@@QBU_USB_ENDPOINT_DESCRIPTOR@@HHEEEHQAVCHcd@@@Z|, CreateInterruptPipe


  00000			 AREA	 |.pdata|, PDATA
|$T38342| DCD	|$LN6@scalar@4|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GCPipe@@UAAPAXI@Z| PROC		; CPipe::`scalar deleting destructor'
  00000		 |$LN6@scalar@4|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M38339|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0
  0000c	eb000000	 bl          |??1CPipe@@UAA@XZ|
  00010	e3140001	 tst         r4, #1
  00014	11a00005	 movne       r0, r5
  00018	1b000000	 blne        |??3@YAXPAX@Z|
  0001c	e1a00005	 mov         r0, r5
  00020	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M38340|

			 ENDP  ; |??_GCPipe@@UAAPAXI@Z|, CPipe::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$T38353| DCD	|$LN6@scalar@5|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GCQueuedPipe@@UAAPAXI@Z| PROC	; CQueuedPipe::`scalar deleting destructor'
  00000		 |$LN6@scalar@5|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M38350|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0
  0000c	eb000000	 bl          |??1CQueuedPipe@@UAA@XZ|
  00010	e3140001	 tst         r4, #1
  00014	11a00005	 movne       r0, r5
  00018	1b000000	 blne        |??3@YAXPAX@Z|
  0001c	e1a00005	 mov         r0, r5
  00020	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M38351|

			 ENDP  ; |??_GCQueuedPipe@@UAAPAXI@Z|, CQueuedPipe::`scalar deleting destructor'

; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.h

  00000			 AREA	 |.pdata|, PDATA
|$T38392| DCD	|$LN20@ClosePipe@3|
	DCD	0x40002001
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ClosePipe@CBulkPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ| PROC ; CBulkPipe::ClosePipe

; 857  : {

  00000		 |$LN20@ClosePipe@3|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M38389|
  00004	e1a04000	 mov         r4, r0

; 858  :     DEBUGMSG( ZONE_PIPE, (TEXT("%s: +CBulkPipe(%s)::ClosePipe\n"),GetControllerName(), GetPipeType() ) );
; 859  :     HCD_REQUEST_STATUS status = requestFailed;
; 860  :     m_pCMhcd->RemoveFromBusyPipeList(this );

  00008	e594300c	 ldr         r3, [r4, #0xC]
  0000c	e1a01004	 mov         r1, r4
  00010	e3a05000	 mov         r5, #0
  00014	e28300c0	 add         r0, r3, #0xC0
  00018	eb000000	 bl          |?RemoveFromBusyPipeList@CBusyPipeList@@QAAXQAVCPipe@@@Z|

; 861  :     EnterCriticalSection( &m_csPipeLock );

  0001c	e2840020	 add         r0, r4, #0x20
  00020	eb000000	 bl          EnterCriticalSection

; 862  :     if ( m_pPipeQHead) {

  00024	e5943064	 ldr         r3, [r4, #0x64]
  00028	e3530000	 cmp         r3, #0
  0002c	0a00000e	 beq         |$LN1@ClosePipe@3|

; 863  :         
; 864  :         AbortQueue();                

  00030	e1a00004	 mov         r0, r4
  00034	eb000000	 bl          |?AbortQueue@CQueuedPipe@@IAAXXZ|

; 865  :         m_pPipeQHead->~CQH();

  00038	e5943064	 ldr         r3, [r4, #0x64]
  0003c	e283000c	 add         r0, r3, #0xC
  00040	eb000000	 bl          DeleteCriticalSection

; 866  :         delete m_pPipeQHead;

  00044	e5943064	 ldr         r3, [r4, #0x64]
  00048	e1b05003	 movs        r5, r3
  0004c	0a000003	 beq         |$LN4@ClosePipe@3|
  00050	e285000c	 add         r0, r5, #0xC
  00054	eb000000	 bl          DeleteCriticalSection
  00058	e1a00005	 mov         r0, r5
  0005c	eb000000	 bl          |??3@YAXPAX@Z|
  00060		 |$LN4@ClosePipe@3|

; 867  :         m_pPipeQHead = NULL;

  00060	e3a03000	 mov         r3, #0
  00064	e5843064	 str         r3, [r4, #0x64]

; 868  :         status = requestOK;

  00068	e3a05001	 mov         r5, #1
  0006c		 |$LN1@ClosePipe@3|

; 869  :     }
; 870  :     LeaveCriticalSection( &m_csPipeLock );

  0006c	e2840020	 add         r0, r4, #0x20
  00070	eb000000	 bl          LeaveCriticalSection

; 871  :     return status;
; 872  : }

  00074	e1a00005	 mov         r0, r5
  00078	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0007c	e12fff1e	 bx          lr
  00080		 |$M38390|

			 ENDP  ; |?ClosePipe@CBulkPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ|, CBulkPipe::ClosePipe

	EXPORT	|??1CControlPipe@@UAA@XZ|		; CControlPipe::~CControlPipe

  00000			 AREA	 |.pdata|, PDATA
|$T38400| DCD	|$LN5@CControlPi@2|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CControlPipe@@UAA@XZ| PROC		; CControlPipe::~CControlPipe

; 959  : {

  00000		 |$LN5@CControlPi@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M38397|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3014	 ldr         r3, [pc, #0x14]

; 960  :     DEBUGMSG( ZONE_PIPE && ZONE_VERBOSE, (TEXT("%s: +CControlPipe::~CControlPipe\n"),GetControllerName()) );
; 961  :     ClosePipe();

  0000c	e5843000	 str         r3, [r4]
  00010	eb000000	 bl          |?ClosePipe@CControlPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ|

; 962  :     DEBUGMSG( ZONE_PIPE && ZONE_VERBOSE, (TEXT("%s: -CControlPipe::~CControlPipe\n"),GetControllerName()) );
; 963  : }

  00014	e1a00004	 mov         r0, r4
  00018	eb000000	 bl          |??1CQueuedPipe@@UAA@XZ|
  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$LN6@CControlPi@2|
  00024		 |$LN7@CControlPi@2|
  00024	00000000	 DCD         |??_7CControlPipe@@6B@|
  00028		 |$M38398|

			 ENDP  ; |??1CControlPipe@@UAA@XZ|, CControlPipe::~CControlPipe

	EXPORT	|??1CInterruptPipe@@UAA@XZ|		; CInterruptPipe::~CInterruptPipe
	IMPORT	|?FreeUsb2BusTime@USB2lib@@QAAXEEHPAU_EndpointBuget@@@Z| ; USB2lib::FreeUsb2BusTime

  00000			 AREA	 |.pdata|, PDATA
|$T38410| DCD	|$LN6@CInterrupt@2|
	DCD	0x40001702
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CInterruptPipe@@UAA@XZ| PROC	; CInterruptPipe::~CInterruptPipe

; 1281 : {

  00000		 |$LN6@CInterrupt@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M38407|
  00008	e1a05000	 mov         r5, r0

; 1282 :     DEBUGMSG( ZONE_PIPE && ZONE_VERBOSE, (TEXT("%s: +CInterruptPipe::~CInterruptPipe\n"),GetControllerName()) );
; 1283 :     if (m_bSuccess)

  0000c	e5952088	 ldr         r2, [r5, #0x88]
  00010	e59f3040	 ldr         r3, [pc, #0x40]
  00014	e3520000	 cmp         r2, #0

; 1284 :         m_pCMhcd->FreeUsb2BusTime( m_bHubAddress, m_bHubPort,m_TTContext,&m_EndptBuget);

  00018	1595400c	 ldrne       r4, [r5, #0xC]
  0001c	15d52009	 ldrneb      r2, [r5, #9]
  00020	15d51008	 ldrneb      r1, [r5, #8]
  00024	e5853000	 str         r3, [r5]
  00028	15953010	 ldrne       r3, [r5, #0x10]
  0002c	1285e070	 addne       lr, r5, #0x70
  00030	12840fa9	 addne       r0, r4, #0xA9, 30
  00034	158de000	 strne       lr, [sp]
  00038	1b000000	 blne        |?FreeUsb2BusTime@USB2lib@@QAAXEEHPAU_EndpointBuget@@@Z|

; 1285 :     DEBUGMSG( ZONE_PIPE|ZONE_DEBUG, (TEXT("CInterruptPipe::~CInterruptPipe close\r\n")));
; 1286 :     ClosePipe();

  0003c	e1a00005	 mov         r0, r5
  00040	eb000000	 bl          |?ClosePipe@CInterruptPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ|

; 1287 :     DEBUGMSG( ZONE_PIPE && ZONE_VERBOSE, (TEXT("%s: -CInterruptPipe::~CInterruptPipe\n"),GetControllerName()) );
; 1288 : }

  00044	e1a00005	 mov         r0, r5
  00048	eb000000	 bl          |??1CQueuedPipe@@UAA@XZ|
  0004c	e28dd004	 add         sp, sp, #4
  00050	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$LN7@CInterrupt@2|
  00058		 |$LN8@CInterrupt@2|
  00058	00000000	 DCD         |??_7CInterruptPipe@@6B@|
  0005c		 |$M38408|

			 ENDP  ; |??1CInterruptPipe@@UAA@XZ|, CInterruptPipe::~CInterruptPipe

	EXPORT	|??1CBulkPipe@@UAA@XZ|			; CBulkPipe::~CBulkPipe

  00000			 AREA	 |.pdata|, PDATA
|$T38420| DCD	|$LN5@CBulkPipe@2|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CBulkPipe@@UAA@XZ| PROC		; CBulkPipe::~CBulkPipe

; 766  : {

  00000		 |$LN5@CBulkPipe@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M38417|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3014	 ldr         r3, [pc, #0x14]

; 767  :     DEBUGMSG( ZONE_PIPE && ZONE_VERBOSE, (TEXT("%s: +CBulkPipe::~CBulkPipe\n"),GetControllerName()) );
; 768  :     ClosePipe();

  0000c	e5843000	 str         r3, [r4]
  00010	eb000000	 bl          |?ClosePipe@CBulkPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ|

; 769  :     DEBUGMSG( ZONE_PIPE && ZONE_VERBOSE, (TEXT("%s: -CBulkPipe::~CBulkPipe\n"),GetControllerName()) );
; 770  : }

  00014	e1a00004	 mov         r0, r4
  00018	eb000000	 bl          |??1CQueuedPipe@@UAA@XZ|
  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$LN6@CBulkPipe@2|
  00024		 |$LN7@CBulkPipe@2|
  00024	00000000	 DCD         |??_7CBulkPipe@@6B@|
  00028		 |$M38418|

			 ENDP  ; |??1CBulkPipe@@UAA@XZ|, CBulkPipe::~CBulkPipe


  00000			 AREA	 |.pdata|, PDATA
|$T38436| DCD	|$LN8@scalar@6|
	DCD	0x40000f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GCControlPipe@@UAAPAXI@Z| PROC	; CControlPipe::`scalar deleting destructor'
  00000		 |$LN8@scalar@6|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M38433|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0
  0000c	e59f3024	 ldr         r3, [pc, #0x24]
  00010	e5853000	 str         r3, [r5]
  00014	eb000000	 bl          |?ClosePipe@CControlPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ|
  00018	e1a00005	 mov         r0, r5
  0001c	eb000000	 bl          |??1CQueuedPipe@@UAA@XZ|
  00020	e3140001	 tst         r4, #1
  00024	11a00005	 movne       r0, r5
  00028	1b000000	 blne        |??3@YAXPAX@Z|
  0002c	e1a00005	 mov         r0, r5
  00030	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$LN9@scalar@6|
  00038		 |$LN10@scalar@6|
  00038	00000000	 DCD         |??_7CControlPipe@@6B@|
  0003c		 |$M38434|

			 ENDP  ; |??_GCControlPipe@@UAAPAXI@Z|, CControlPipe::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$T38449| DCD	|$LN6@scalar@7|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GCInterruptPipe@@UAAPAXI@Z| PROC	; CInterruptPipe::`scalar deleting destructor'
  00000		 |$LN6@scalar@7|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M38446|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0
  0000c	eb000000	 bl          |??1CInterruptPipe@@UAA@XZ|
  00010	e3140001	 tst         r4, #1
  00014	11a00005	 movne       r0, r5
  00018	1b000000	 blne        |??3@YAXPAX@Z|
  0001c	e1a00005	 mov         r0, r5
  00020	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M38447|

			 ENDP  ; |??_GCInterruptPipe@@UAAPAXI@Z|, CInterruptPipe::`scalar deleting destructor'


  00000			 AREA	 |.pdata|, PDATA
|$T38463| DCD	|$LN8@scalar@8|
	DCD	0x40000f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GCBulkPipe@@UAAPAXI@Z| PROC	; CBulkPipe::`scalar deleting destructor'
  00000		 |$LN8@scalar@8|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M38460|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0
  0000c	e59f3024	 ldr         r3, [pc, #0x24]
  00010	e5853000	 str         r3, [r5]
  00014	eb000000	 bl          |?ClosePipe@CBulkPipe@@UAA?AW4HCD_REQUEST_STATUS@@XZ|
  00018	e1a00005	 mov         r0, r5
  0001c	eb000000	 bl          |??1CQueuedPipe@@UAA@XZ|
  00020	e3140001	 tst         r4, #1
  00024	11a00005	 movne       r0, r5
  00028	1b000000	 blne        |??3@YAXPAX@Z|
  0002c	e1a00005	 mov         r0, r5
  00030	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$LN9@scalar@8|
  00038		 |$LN10@scalar@8|
  00038	00000000	 DCD         |??_7CBulkPipe@@6B@|
  0003c		 |$M38461|

			 ENDP  ; |??_GCBulkPipe@@UAAPAXI@Z|, CBulkPipe::`scalar deleting destructor'

	END
