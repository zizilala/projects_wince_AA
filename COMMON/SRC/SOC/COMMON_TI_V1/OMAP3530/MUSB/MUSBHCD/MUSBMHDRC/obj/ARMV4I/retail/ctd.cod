; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\OMAP3530\MUSB\MUSBHCD\MUSBMHDRC\ctd.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_1DK@JPBDFEOB@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@IMCKALLA@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAD?$AAO?$AAN?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@CEGNOBAM@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAF?$AAA?$AAI?$AAL?$AAE?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@PGHDEMEK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAI?$AAG?$AAN?$AAA?$AAL?$AA_?$AAN?$AAE?$AAW?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1II@FBBOBKGN@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AAS?$AAE?$AAR?$AAT?$AA_?$AAN?$AAE?$AAW?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@LCLFDJDO@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAC?$AAR?$AAE?$AAA?$AAT?$AAE?$AA_?$AAN?$AAE?$AAW?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@COKEBMOE@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAC?$AAR?$AAE?$AAA?$AAT?$AAE?$AA_?$AAN?$AAE?$AAW?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@HPGGGHKI@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@KPBCOGEF@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@CFFAAPDL@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@NDHJOKMM@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAD?$AAE?$AAT?$AAE?$AAR?$AAM?$AAI?$AAN?$AAE?$AA_?$AAC@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@JADKDKDC@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@NPLCKJLH@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@MEMGEMJJ@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAE?$AAT?$AAU?$AAP?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@BCHKIAPP@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@FNPCBDHK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@BBOOKHNN@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAL?$AAE?$AAA?$AAV?$AAE?$AA_?$AAA?$AAD?$AAD?$AAR?$AAE@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@LGLHPFAK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@BLNLBKIO@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@NMCKCJLL@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAR?$AAE?$AAS?$AAE?$AAT?$AA_?$AAA?$AAN?$AAD?$AA_?$AAE@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@KNOIBOPH@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAU?$AAS?$AAI?$AAN?$AAG?$AA_?$AAA?$AAD?$AAD?$AAR?$AAE@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@COMJHLEF@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAO?$AAP?$AAE?$AAN?$AAI?$AAN?$AAG?$AA_?$AAE?$AAN?$AAD@| [ DATA ] ; `string'

  00000			 AREA	 |.data|, DATA
|cszCfgStateStrings| DCD |??_C@_1FI@COMJHLEF@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAO?$AAP?$AAE?$AAN?$AAI?$AAN?$AAG?$AA_?$AAE?$AAN?$AAD@|
	DCD	|??_C@_1EI@KNOIBOPH@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAU?$AAS?$AAI?$AAN?$AAG?$AA_?$AAA?$AAD?$AAD?$AAR?$AAE@|
	DCD	|??_C@_1FG@NMCKCJLL@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAR?$AAE?$AAS?$AAE?$AAT?$AA_?$AAA?$AAN?$AAD?$AA_?$AAE@|
	DCD	|??_C@_1HG@BLNLBKIO@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1FI@LGLHPFAK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1EI@BBOOKHNN@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAL?$AAE?$AAA?$AAV?$AAE?$AA_?$AAA?$AAD?$AAD?$AAR?$AAE@|
	DCD	|??_C@_1HM@FNPCBDHK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1GM@BCHKIAPP@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1HE@MEMGEMJJ@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAE?$AAT?$AAU?$AAP?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI@|
	DCD	|??_C@_1HM@NPLCKJLH@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1GM@JADKDKDC@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1GA@NDHJOKMM@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAD?$AAE?$AAT?$AAE?$AAR?$AAM?$AAI?$AAN?$AAE?$AA_?$AAC@|
	DCD	|??_C@_1FG@CFFAAPDL@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1HG@KPBCOGEF@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1GG@HPGGGHKI@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@|
	DCD	|??_C@_1EI@COKEBMOE@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAC?$AAR?$AAE?$AAA?$AAT?$AAE?$AA_?$AAN?$AAE?$AAW?$AA_@|
	DCD	|??_C@_1FC@LCLFDJDO@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAC?$AAR?$AAE?$AAA?$AAT?$AAE?$AA_?$AAN?$AAE?$AAW?$AA_@|
	DCD	|??_C@_1II@FBBOBKGN@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AAS?$AAE?$AAR?$AAT?$AA_?$AAN?$AAE?$AAW?$AA_@|
	DCD	|??_C@_1HO@PGHDEMEK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAI?$AAG?$AAN?$AAA?$AAL?$AA_?$AAN?$AAE?$AAW?$AA_@|
	DCD	|??_C@_1DI@CEGNOBAM@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAF?$AAA?$AAI?$AAL?$AAE?$AAD?$AA?$AA@|
	DCD	|??_C@_1DE@IMCKALLA@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAD?$AAO?$AAN?$AAE?$AA?$AA@|
	DCD	|??_C@_1DK@JPBDFEOB@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?$AA@|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@JPBDFEOB@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AAV?$AAA?$AAL?$AAI?$AAD?$AA?$AA@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "I", 0x0, "N", 0x0, "V", 0x0, "A"
	DCB	0x0, "L", 0x0, "I", 0x0, "D", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@IMCKALLA@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAD?$AAO?$AAN?$AAE?$AA?$AA@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "D", 0x0, "O", 0x0, "N", 0x0, "E"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@CEGNOBAM@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAF?$AAA?$AAI?$AAL?$AAE?$AAD?$AA?$AA@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "F", 0x0, "A", 0x0, "I", 0x0, "L"
	DCB	0x0, "E", 0x0, "D", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@PGHDEMEK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAI?$AAG?$AAN?$AAA?$AAL?$AA_?$AAN?$AAE?$AAW?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "I", 0x0, "G", 0x0, "N"
	DCB	0x0, "A", 0x0, "L", 0x0, "_", 0x0, "N", 0x0, "E", 0x0, "W"
	DCB	0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C"
	DCB	0x0, "E", 0x0, "_", 0x0, "E", 0x0, "N", 0x0, "T", 0x0, "E"
	DCB	0x0, "R", 0x0, "_", 0x0, "O", 0x0, "P", 0x0, "E", 0x0, "R"
	DCB	0x0, "A", 0x0, "T", 0x0, "I", 0x0, "O", 0x0, "N", 0x0, "A"
	DCB	0x0, "L", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T"
	DCB	0x0, "E", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1II@FBBOBKGN@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAI?$AAN?$AAS?$AAE?$AAR?$AAT?$AA_?$AAN?$AAE?$AAW?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "I", 0x0, "N", 0x0, "S", 0x0, "E"
	DCB	0x0, "R", 0x0, "T", 0x0, "_", 0x0, "N", 0x0, "E", 0x0, "W"
	DCB	0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C"
	DCB	0x0, "E", 0x0, "_", 0x0, "I", 0x0, "N", 0x0, "T", 0x0, "O"
	DCB	0x0, "_", 0x0, "U", 0x0, "P", 0x0, "S", 0x0, "T", 0x0, "R"
	DCB	0x0, "E", 0x0, "A", 0x0, "M", 0x0, "_", 0x0, "H", 0x0, "U"
	DCB	0x0, "B", 0x0, "_", 0x0, "P", 0x0, "O", 0x0, "R", 0x0, "T"
	DCB	0x0, "_", 0x0, "A", 0x0, "R", 0x0, "R", 0x0, "A", 0x0, "Y"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@LCLFDJDO@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAC?$AAR?$AAE?$AAA?$AAT?$AAE?$AA_?$AAN?$AAE?$AAW?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "C", 0x0, "R", 0x0, "E", 0x0, "A"
	DCB	0x0, "T", 0x0, "E", 0x0, "_", 0x0, "N", 0x0, "E", 0x0, "W"
	DCB	0x0, "_", 0x0, "F", 0x0, "U", 0x0, "N", 0x0, "C", 0x0, "T"
	DCB	0x0, "I", 0x0, "O", 0x0, "N", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@COKEBMOE@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAC?$AAR?$AAE?$AAA?$AAT?$AAE?$AA_?$AAN?$AAE?$AAW?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "C", 0x0, "R", 0x0, "E", 0x0, "A"
	DCB	0x0, "T", 0x0, "E", 0x0, "_", 0x0, "N", 0x0, "E", 0x0, "W"
	DCB	0x0, "_", 0x0, "H", 0x0, "U", 0x0, "B", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@HPGGGHKI@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "H"
	DCB	0x0, "U", 0x0, "B", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "S"
	DCB	0x0, "C", 0x0, "R", 0x0, "I", 0x0, "P", 0x0, "T", 0x0, "O"
	DCB	0x0, "R", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@KPBCOGEF@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "I"
	DCB	0x0, "N", 0x0, "I", 0x0, "T", 0x0, "I", 0x0, "A", 0x0, "L"
	DCB	0x0, "_", 0x0, "H", 0x0, "U", 0x0, "B", 0x0, "_", 0x0, "D"
	DCB	0x0, "E", 0x0, "S", 0x0, "C", 0x0, "R", 0x0, "I", 0x0, "P"
	DCB	0x0, "T", 0x0, "O", 0x0, "R", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@CFFAAPDL@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "C"
	DCB	0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@NDHJOKMM@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAD?$AAE?$AAT?$AAE?$AAR?$AAM?$AAI?$AAN?$AAE?$AA_?$AAC@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "T", 0x0, "E"
	DCB	0x0, "R", 0x0, "M", 0x0, "I", 0x0, "N", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "T", 0x0, "O", 0x0, "_", 0x0, "C", 0x0, "H"
	DCB	0x0, "O", 0x0, "O", 0x0, "S", 0x0, "E", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@JADKDKDC@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "C"
	DCB	0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G", 0x0, "_"
	DCB	0x0, "D", 0x0, "E", 0x0, "S", 0x0, "C", 0x0, "R", 0x0, "I"
	DCB	0x0, "P", 0x0, "T", 0x0, "O", 0x0, "R", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@NPLCKJLH@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "I"
	DCB	0x0, "N", 0x0, "I", 0x0, "T", 0x0, "I", 0x0, "A", 0x0, "L"
	DCB	0x0, "_", 0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I"
	DCB	0x0, "G", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "S", 0x0, "C"
	DCB	0x0, "R", 0x0, "I", 0x0, "P", 0x0, "T", 0x0, "O", 0x0, "R"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@MEMGEMJJ@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAE?$AAT?$AAU?$AAP?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "E", 0x0, "T", 0x0, "U"
	DCB	0x0, "P", 0x0, "_", 0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F"
	DCB	0x0, "I", 0x0, "G", 0x0, "U", 0x0, "R", 0x0, "A", 0x0, "T"
	DCB	0x0, "I", 0x0, "O", 0x0, "N", 0x0, "_", 0x0, "D", 0x0, "E"
	DCB	0x0, "S", 0x0, "C", 0x0, "R", 0x0, "I", 0x0, "P", 0x0, "T"
	DCB	0x0, "O", 0x0, "R", 0x0, "_", 0x0, "A", 0x0, "R", 0x0, "R"
	DCB	0x0, "A", 0x0, "Y", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@BCHKIAPP@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "D", 0x0, "E", 0x0, "S", 0x0, "C", 0x0, "R", 0x0, "I"
	DCB	0x0, "P", 0x0, "T", 0x0, "O", 0x0, "R", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@FNPCBDHK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "I"
	DCB	0x0, "N", 0x0, "I", 0x0, "T", 0x0, "I", 0x0, "A", 0x0, "L"
	DCB	0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C"
	DCB	0x0, "E", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "S", 0x0, "C"
	DCB	0x0, "R", 0x0, "I", 0x0, "P", 0x0, "T", 0x0, "O", 0x0, "R"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@BBOOKHNN@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAL?$AAE?$AAA?$AAV?$AAE?$AA_?$AAA?$AAD?$AAD?$AAR?$AAE@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "L", 0x0, "E", 0x0, "A", 0x0, "V"
	DCB	0x0, "E", 0x0, "_", 0x0, "A", 0x0, "D", 0x0, "D", 0x0, "R"
	DCB	0x0, "E", 0x0, "S", 0x0, "S", 0x0, "0", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@LGLHPFAK@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "A"
	DCB	0x0, "D", 0x0, "D", 0x0, "R", 0x0, "E", 0x0, "S", 0x0, "S"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@BLNLBKIO@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAS?$AAC?$AAH?$AAE?$AAD?$AAU?$AAL?$AAI?$AAN?$AAG?$AA_@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "H", 0x0, "E"
	DCB	0x0, "D", 0x0, "U", 0x0, "L", 0x0, "I", 0x0, "N", 0x0, "G"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "D", 0x0, "E", 0x0, "S", 0x0, "C", 0x0, "R", 0x0, "I"
	DCB	0x0, "P", 0x0, "T", 0x0, "O", 0x0, "R", 0x0, "_", 0x0, "T"
	DCB	0x0, "E", 0x0, "S", 0x0, "T", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@NMCKCJLL@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAR?$AAE?$AAS?$AAE?$AAT?$AA_?$AAA?$AAN?$AAD?$AA_?$AAE@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "S", 0x0, "E"
	DCB	0x0, "T", 0x0, "_", 0x0, "A", 0x0, "N", 0x0, "D", 0x0, "_"
	DCB	0x0, "E", 0x0, "N", 0x0, "A", 0x0, "B", 0x0, "L", 0x0, "E"
	DCB	0x0, "_", 0x0, "P", 0x0, "O", 0x0, "R", 0x0, "T", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@KNOIBOPH@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAU?$AAS?$AAI?$AAN?$AAG?$AA_?$AAA?$AAD?$AAD?$AAR?$AAE@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "U", 0x0, "S", 0x0, "I", 0x0, "N"
	DCB	0x0, "G", 0x0, "_", 0x0, "A", 0x0, "D", 0x0, "D", 0x0, "R"
	DCB	0x0, "E", 0x0, "S", 0x0, "S", 0x0, "0", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@COMJHLEF@?$AAD?$AAE?$AAV?$AAI?$AAC?$AAE?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA_?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAO?$AAP?$AAE?$AAN?$AAI?$AAN?$AAG?$AA_?$AAE?$AAN?$AAD@| DCB "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "U"
	DCB	0x0, "S", 0x0, "_", 0x0, "O", 0x0, "P", 0x0, "E", 0x0, "N"
	DCB	0x0, "I", 0x0, "N", 0x0, "G", 0x0, "_", 0x0, "E", 0x0, "N"
	DCB	0x0, "D", 0x0, "P", 0x0, "O", 0x0, "I", 0x0, "N", 0x0, "T"
	DCB	0x0, "0", 0x0, "_", 0x0, "P", 0x0, "I", 0x0, "P", 0x0, "E"
	DCB	0x0, 0x0, 0x0				; `string'
	EXPORT	|?GetNextTD@CQTD@@QAAPAV1@XZ|		; CQTD::GetNextTD
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.h

  00000			 AREA	 |.pdata|, PDATA
|$T42343| DCD	|$LN5@GetNextTD|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetNextTD@CQTD@@QAAPAV1@XZ| PROC	; CQTD::GetNextTD

; 77   :     CQTD *GetNextTD() {return m_pNext; };

  00000		 |$LN5@GetNextTD|
  00000		 |$M42340|
  00000	e5900008	 ldr         r0, [r0, #8]
  00004	e12fff1e	 bx          lr
  00008		 |$M42341|

			 ENDP  ; |?GetNextTD@CQTD@@QAAPAV1@XZ|, CQTD::GetNextTD

	EXPORT	|?SetStatus@CQTD@@QAAXK@Z|		; CQTD::SetStatus

  00000			 AREA	 |.pdata|, PDATA
|$T42352| DCD	|$LN5@SetStatus|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetStatus@CQTD@@QAAXK@Z| PROC	; CQTD::SetStatus

; 85   :     void SetStatus(DWORD status) { m_dwStatus = status;};

  00000		 |$LN5@SetStatus|
  00000		 |$M42349|
  00000	e5801028	 str         r1, [r0, #0x28]
  00004	e12fff1e	 bx          lr
  00008		 |$M42350|

			 ENDP  ; |?SetStatus@CQTD@@QAAXK@Z|, CQTD::SetStatus

	EXPORT	|?SetTotTfrSize@CQTD@@QAAXK@Z|		; CQTD::SetTotTfrSize

  00000			 AREA	 |.pdata|, PDATA
|$T42361| DCD	|$LN5@SetTotTfrS|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetTotTfrSize@CQTD@@QAAXK@Z| PROC	; CQTD::SetTotTfrSize

; 86   :     void SetTotTfrSize(DWORD size) { m_cbTransferred = size;};

  00000		 |$LN5@SetTotTfrS|
  00000		 |$M42358|
  00000	e580101c	 str         r1, [r0, #0x1C]
  00004	e12fff1e	 bx          lr
  00008		 |$M42359|

			 ENDP  ; |?SetTotTfrSize@CQTD@@QAAXK@Z|, CQTD::SetTotTfrSize

	EXPORT	|?SetCurTfrSize@CQTD@@QAAXK@Z|		; CQTD::SetCurTfrSize

  00000			 AREA	 |.pdata|, PDATA
|$T42370| DCD	|$LN5@SetCurTfrS|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetCurTfrSize@CQTD@@QAAXK@Z| PROC	; CQTD::SetCurTfrSize

; 87   :     void SetCurTfrSize(DWORD size) { m_cbCurTransferred = size;};

  00000		 |$LN5@SetCurTfrS|
  00000		 |$M42367|
  00000	e5801020	 str         r1, [r0, #0x20]
  00004	e12fff1e	 bx          lr
  00008		 |$M42368|

			 ENDP  ; |?SetCurTfrSize@CQTD@@QAAXK@Z|, CQTD::SetCurTfrSize

	EXPORT	|?GetStatus@CQTD@@QAAKXZ|		; CQTD::GetStatus

  00000			 AREA	 |.pdata|, PDATA
|$T42380| DCD	|$LN5@GetStatus|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetStatus@CQTD@@QAAKXZ| PROC		; CQTD::GetStatus

; 90   :     DWORD GetStatus() { return m_dwStatus; };

  00000		 |$LN5@GetStatus|
  00000		 |$M42377|
  00000	e5900028	 ldr         r0, [r0, #0x28]
  00004	e12fff1e	 bx          lr
  00008		 |$M42378|

			 ENDP  ; |?GetStatus@CQTD@@QAAKXZ|, CQTD::GetStatus

	EXPORT	|?GetTDType@CQTD@@QAAKXZ|		; CQTD::GetTDType

  00000			 AREA	 |.pdata|, PDATA
|$T42390| DCD	|$LN5@GetTDType|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetTDType@CQTD@@QAAKXZ| PROC		; CQTD::GetTDType

; 92   :     DWORD GetTDType() { return m_dwTDType; };

  00000		 |$LN5@GetTDType|
  00000		 |$M42387|
  00000	e590000c	 ldr         r0, [r0, #0xC]
  00004	e12fff1e	 bx          lr
  00008		 |$M42388|

			 ENDP  ; |?GetTDType@CQTD@@QAAKXZ|, CQTD::GetTDType

	EXPORT	|?GetDataSize@CQTD@@QAAKXZ|		; CQTD::GetDataSize

  00000			 AREA	 |.pdata|, PDATA
|$T42400| DCD	|$LN5@GetDataSiz|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetDataSize@CQTD@@QAAKXZ| PROC	; CQTD::GetDataSize

; 93   :     DWORD GetDataSize() { return m_cbData; };

  00000		 |$LN5@GetDataSiz|
  00000		 |$M42397|
  00000	e5900018	 ldr         r0, [r0, #0x18]
  00004	e12fff1e	 bx          lr
  00008		 |$M42398|

			 ENDP  ; |?GetDataSize@CQTD@@QAAKXZ|, CQTD::GetDataSize

	EXPORT	|?GetPAData@CQTD@@QAAKXZ|		; CQTD::GetPAData

  00000			 AREA	 |.pdata|, PDATA
|$T42410| DCD	|$LN5@GetPAData|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPAData@CQTD@@QAAKXZ| PROC		; CQTD::GetPAData

; 94   :     DWORD GetPAData() { return m_dwPAData; };

  00000		 |$LN5@GetPAData|
  00000		 |$M42407|
  00000	e5900010	 ldr         r0, [r0, #0x10]
  00004	e12fff1e	 bx          lr
  00008		 |$M42408|

			 ENDP  ; |?GetPAData@CQTD@@QAAKXZ|, CQTD::GetPAData

	EXPORT	|?GetVAData@CQTD@@QAAKXZ|		; CQTD::GetVAData

  00000			 AREA	 |.pdata|, PDATA
|$T42420| DCD	|$LN5@GetVAData|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetVAData@CQTD@@QAAKXZ| PROC		; CQTD::GetVAData

; 95   :     DWORD GetVAData() { return m_dwVAData; };

  00000		 |$LN5@GetVAData|
  00000		 |$M42417|
  00000	e5900014	 ldr         r0, [r0, #0x14]
  00004	e12fff1e	 bx          lr
  00008		 |$M42418|

			 ENDP  ; |?GetVAData@CQTD@@QAAKXZ|, CQTD::GetVAData

	EXPORT	|?GetTotTfrSize@CQTD@@QAAKXZ|		; CQTD::GetTotTfrSize

  00000			 AREA	 |.pdata|, PDATA
|$T42430| DCD	|$LN5@GetTotTfrS|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetTotTfrSize@CQTD@@QAAKXZ| PROC	; CQTD::GetTotTfrSize

; 96   :     DWORD GetTotTfrSize() { return m_cbTransferred; };

  00000		 |$LN5@GetTotTfrS|
  00000		 |$M42427|
  00000	e590001c	 ldr         r0, [r0, #0x1C]
  00004	e12fff1e	 bx          lr
  00008		 |$M42428|

			 ENDP  ; |?GetTotTfrSize@CQTD@@QAAKXZ|, CQTD::GetTotTfrSize

	EXPORT	|?GetCurTfrSize@CQTD@@QAAKXZ|		; CQTD::GetCurTfrSize

  00000			 AREA	 |.pdata|, PDATA
|$T42440| DCD	|$LN5@GetCurTfrS|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetCurTfrSize@CQTD@@QAAKXZ| PROC	; CQTD::GetCurTfrSize

; 97   :     DWORD GetCurTfrSize() { return m_cbCurTransferred;};

  00000		 |$LN5@GetCurTfrS|
  00000		 |$M42437|
  00000	e5900020	 ldr         r0, [r0, #0x20]
  00004	e12fff1e	 bx          lr
  00008		 |$M42438|

			 ENDP  ; |?GetCurTfrSize@CQTD@@QAAKXZ|, CQTD::GetCurTfrSize

	EXPORT	|?GetPacketSize@CQTD@@QAAKXZ|		; CQTD::GetPacketSize

  00000			 AREA	 |.pdata|, PDATA
|$T42450| DCD	|$LN5@GetPacketS|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPacketSize@CQTD@@QAAKXZ| PROC	; CQTD::GetPacketSize

; 98   :     DWORD GetPacketSize() { return m_dwPacketSize;};    

  00000		 |$LN5@GetPacketS|
  00000		 |$M42447|
  00000	e590002c	 ldr         r0, [r0, #0x2C]
  00004	e12fff1e	 bx          lr
  00008		 |$M42448|

			 ENDP  ; |?GetPacketSize@CQTD@@QAAKXZ|, CQTD::GetPacketSize

	EXPORT	|?Lock@CQH@@QAAXXZ|			; CQH::Lock
	IMPORT	|EnterCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T42458| DCD	|$LN5@Lock|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Lock@CQH@@QAAXXZ| PROC		; CQH::Lock

; 150  :     void Lock() { EnterCriticalSection(&m_csCQTD); };

  00000		 |$LN5@Lock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M42455|
  00004	e280000c	 add         r0, r0, #0xC
  00008	eb000000	 bl          EnterCriticalSection
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M42456|

			 ENDP  ; |?Lock@CQH@@QAAXXZ|, CQH::Lock

	EXPORT	|?UnLock@CQH@@QAAXXZ|			; CQH::UnLock
	IMPORT	|LeaveCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T42466| DCD	|$LN5@UnLock|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UnLock@CQH@@QAAXXZ| PROC		; CQH::UnLock

; 151  :     void UnLock() { LeaveCriticalSection(&m_csCQTD); };

  00000		 |$LN5@UnLock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M42463|
  00004	e280000c	 add         r0, r0, #0xC
  00008	eb000000	 bl          LeaveCriticalSection
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M42464|

			 ENDP  ; |?UnLock@CQH@@QAAXXZ|, CQH::UnLock

	EXPORT	|?InitLock@CQH@@QAAXXZ|			; CQH::InitLock
	IMPORT	|InitializeCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T42474| DCD	|$LN5@InitLock|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InitLock@CQH@@QAAXXZ| PROC		; CQH::InitLock

; 152  :     void InitLock() { InitializeCriticalSection(&m_csCQTD);};

  00000		 |$LN5@InitLock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M42471|
  00004	e280000c	 add         r0, r0, #0xC
  00008	eb000000	 bl          InitializeCriticalSection
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M42472|

			 ENDP  ; |?InitLock@CQH@@QAAXXZ|, CQH::InitLock

	EXPORT	|?GetPipe@CQH@@QAAPAVCPipe@@XZ|		; CQH::GetPipe

  00000			 AREA	 |.pdata|, PDATA
|$T42484| DCD	|$LN5@GetPipe|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPipe@CQH@@QAAPAVCPipe@@XZ| PROC	; CQH::GetPipe

; 156  :     CPipe *GetPipe() { return m_pPipe;};

  00000		 |$LN5@GetPipe|
  00000		 |$M42481|
  00000	e5900000	 ldr         r0, [r0]
  00004	e12fff1e	 bx          lr
  00008		 |$M42482|

			 ENDP  ; |?GetPipe@CQH@@QAAPAVCPipe@@XZ|, CQH::GetPipe

	EXPORT	|?GetEndptDescriptor@CPipe@@QAA?AU_USB_ENDPOINT_DESCRIPTOR@@XZ| ; CPipe::GetEndptDescriptor
	IMPORT	|memcpy|
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.h

  00000			 AREA	 |.pdata|, PDATA
|$T42496| DCD	|$LN5@GetEndptDe|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetEndptDescriptor@CPipe@@QAA?AU_USB_ENDPOINT_DESCRIPTOR@@XZ| PROC ; CPipe::GetEndptDescriptor

; 96   :     USB_ENDPOINT_DESCRIPTOR GetEndptDescriptor() { return m_usbEndpointDescriptor;};

  00000		 |$LN5@GetEndptDe|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M42493|
  00004	e1a04001	 mov         r4, r1
  00008	e2801034	 add         r1, r0, #0x34
  0000c	e1a00004	 mov         r0, r4
  00010	e3a02007	 mov         r2, #7
  00014	eb000000	 bl          memcpy
  00018	e1a00004	 mov         r0, r4
  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$M42494|

			 ENDP  ; |?GetEndptDescriptor@CPipe@@QAA?AU_USB_ENDPOINT_DESCRIPTOR@@XZ|, CPipe::GetEndptDescriptor

	EXPORT	|?GetDeviceAddress@CPipe@@QAAEXZ|	; CPipe::GetDeviceAddress

  00000			 AREA	 |.pdata|, PDATA
|$T42506| DCD	|$LN5@GetDeviceA|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetDeviceAddress@CPipe@@QAAEXZ| PROC	; CPipe::GetDeviceAddress

; 97   :     UCHAR GetDeviceAddress() { return m_bDeviceAddress; };

  00000		 |$LN5@GetDeviceA|
  00000		 |$M42503|
  00000	e5d0003b	 ldrb        r0, [r0, #0x3B]
  00004	e12fff1e	 bx          lr
  00008		 |$M42504|

			 ENDP  ; |?GetDeviceAddress@CPipe@@QAAEXZ|, CPipe::GetDeviceAddress

	EXPORT	|?GetSpeed@CPipe@@QAAEXZ|		; CPipe::GetSpeed

  00000			 AREA	 |.pdata|, PDATA
|$T42520| DCD	|$LN9@GetSpeed|
	DCD	0x40000c00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetSpeed@CPipe@@QAAEXZ| PROC		; CPipe::GetSpeed

; 98   :     UCHAR GetSpeed() {return (UCHAR)(m_fIsHighSpeed? HIGH_SPEED : (m_fIsLowSpeed? LOW_SPEED: FULL_SPEED));};

  00000		 |$LN9@GetSpeed|
  00000		 |$M42517|
  00000	e5903040	 ldr         r3, [r0, #0x40]
  00004	e3530000	 cmp         r3, #0
  00008	13a03001	 movne       r3, #1
  0000c	120300ff	 andne       r0, r3, #0xFF
  00010	112fff1e	 bxne        lr
  00014	e590303c	 ldr         r3, [r0, #0x3C]
  00018	e3530000	 cmp         r3, #0
  0001c	13a03003	 movne       r3, #3
  00020	120300ff	 andne       r0, r3, #0xFF
  00024	03a03002	 moveq       r3, #2
  00028	020300ff	 andeq       r0, r3, #0xFF
  0002c	e12fff1e	 bx          lr
  00030		 |$M42518|

			 ENDP  ; |?GetSpeed@CPipe@@QAAEXZ|, CPipe::GetSpeed

	EXPORT	|?GetMappedEndPoint@CPipe@@QAAEXZ|	; CPipe::GetMappedEndPoint

  00000			 AREA	 |.pdata|, PDATA
|$T42530| DCD	|$LN5@GetMappedE|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetMappedEndPoint@CPipe@@QAAEXZ| PROC ; CPipe::GetMappedEndPoint

; 103  :     UCHAR   GetMappedEndPoint(void) { return m_mappedEndpoint; };

  00000		 |$LN5@GetMappedE|
  00000		 |$M42527|
  00000	e5d00058	 ldrb        r0, [r0, #0x58]
  00004	e12fff1e	 bx          lr
  00008		 |$M42528|

			 ENDP  ; |?GetMappedEndPoint@CPipe@@QAAEXZ|, CPipe::GetMappedEndPoint

	EXPORT	|?GetTransferMode@CPipe@@QAAEXZ|	; CPipe::GetTransferMode

  00000			 AREA	 |.pdata|, PDATA
|$T42540| DCD	|$LN5@GetTransfe|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetTransferMode@CPipe@@QAAEXZ| PROC	; CPipe::GetTransferMode

; 110  :     UCHAR   GetTransferMode(void) { return m_ucTransferMode;};

  00000		 |$LN5@GetTransfe|
  00000		 |$M42537|
  00000	e5d00014	 ldrb        r0, [r0, #0x14]
  00004	e12fff1e	 bx          lr
  00008		 |$M42538|

			 ENDP  ; |?GetTransferMode@CPipe@@QAAEXZ|, CPipe::GetTransferMode

	EXPORT	|?GetOTGContext@CHcd@@QAAPAXXZ|		; CHcd::GetOTGContext
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\usb2com\hcd.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T42550| DCD	|$LN5@GetOTGCont|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetOTGContext@CHcd@@QAAPAXXZ| PROC	; CHcd::GetOTGContext

; 121  :     PVOID   GetOTGContext() { return m_pOTG;};

  00000		 |$LN5@GetOTGCont|
  00000		 |$M42547|
  00000	e59000b0	 ldr         r0, [r0, #0xB0]
  00004	e12fff1e	 bx          lr
  00008		 |$M42548|

			 ENDP  ; |?GetOTGContext@CHcd@@QAAPAXXZ|, CHcd::GetOTGContext

	EXPORT	|?SetRxDataAvail@CHW@@QAAXE@Z|		; CHW::SetRxDataAvail
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\chw.h

  00000			 AREA	 |.pdata|, PDATA
|$T42559| DCD	|$LN5@SetRxDataA|
	DCD	0x40000600
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetRxDataAvail@CHW@@QAAXE@Z| PROC	; CHW::SetRxDataAvail

; 387  :     void SetRxDataAvail(UCHAR endpoint) { m_intr_rx_avail |= (1<<endpoint);};

  00000		 |$LN5@SetRxDataA|
  00000		 |$M42556|
  00000	e2802c02	 add         r2, r0, #2, 24
  00004	e1d237ba	 ldrh        r3, [r2, #0x7A]
  00008	e3a00001	 mov         r0, #1
  0000c	e1833110	 orr         r3, r3, r0, lsl r1
  00010	e1c237ba	 strh        r3, [r2, #0x7A]
  00014	e12fff1e	 bx          lr
  00018		 |$M42557|

			 ENDP  ; |?SetRxDataAvail@CHW@@QAAXE@Z|, CHW::SetRxDataAvail

	EXPORT	|??0CQTD@@QAA@PAVCQTransfer@@PAVCQH@@@Z| ; CQTD::CQTD
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T42571| DCD	|$LN5@CQTD|
	DCD	0x40000700
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CQTD@@QAA@PAVCQTransfer@@PAVCQH@@@Z| PROC ; CQTD::CQTD

; 59   : {

  00000		 |$LN5@CQTD|
  00000		 |$M42568|

; 60   :     m_dwTDType = TD_IDLE;

  00000	e3a03000	 mov         r3, #0
  00004	e580300c	 str         r3, [r0, #0xC]

; 61   :     m_pNext=NULL;    
; 62   :     m_cbTransferred = 0;

  00008	e580301c	 str         r3, [r0, #0x1C]

; 63   :     m_dwStatus = STATUS_IDLE;

  0000c	e5803028	 str         r3, [r0, #0x28]

; 64   :     m_dwError = 0;

  00010	e5803034	 str         r3, [r0, #0x34]
  00014	e880000e	 stmia       r0, {r1 - r3}

; 65   : }

  00018	e12fff1e	 bx          lr
  0001c		 |$M42569|

			 ENDP  ; |??0CQTD@@QAA@PAVCQTransfer@@PAVCQH@@@Z|, CQTD::CQTD

	EXPORT	|?ClearRxPktRdy@CQTD@@QAAXXZ|		; CQTD::ClearRxPktRdy
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.h

  00000			 AREA	 |.pdata|, PDATA
|$T42596| DCD	|$LN15@ClearRxPkt|
	DCD	0x40003401
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ClearRxPktRdy@CQTD@@QAAXXZ| PROC	; CQTD::ClearRxPktRdy

; 241  : {

  00000		 |$LN15@ClearRxPkt|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M42593|

; 242  :     PHSMUSB_T pOTG;
; 243  :     UCHAR endpoint;
; 244  :     UCHAR csrIndex;
; 245  :     CPipe *pPipe = m_pQh->GetPipe();        

  00004	e5903004	 ldr         r3, [r0, #4]
  00008	e5933000	 ldr         r3, [r3]
  0000c	e1b02003	 movs        r2, r3

; 246  :     if (!pPipe)

  00010	0a00002c	 beq         |$LN5@ClearRxPkt|

; 247  :     {
; 248  :         DEBUGMSG(ZONE_ERROR, (TEXT("CQTD::ClearRxPktRdy -> not able to read the associated pipe\r\n")));
; 249  :         return;
; 250  :     }
; 251  :     pOTG = (PHSMUSB_T)pPipe->m_pCMhcd->GetOTGContext();

  00014	e592300c	 ldr         r3, [r2, #0xC]
  00018	e59330b0	 ldr         r3, [r3, #0xB0]
  0001c	e1b05003	 movs        r5, r3

; 252  :     if (pOTG == NULL)

  00020	0a000028	 beq         |$LN5@ClearRxPkt|

; 253  :     {
; 254  :         DEBUGMSG(ZONE_ERROR, (TEXT("CQTD::ClearRxPktRdy: Get pOTG failed\r\n")));        
; 255  :         return;
; 256  :     }
; 257  : 
; 258  :     endpoint = pPipe->GetMappedEndPoint();
; 259  :     // Set Index Register
; 260  :     EnterCriticalSection(&pOTG->regCS);    

  00024	e5d24058	 ldrb        r4, [r2, #0x58]
  00028	e2850038	 add         r0, r5, #0x38
  0002c	eb000000	 bl          EnterCriticalSection

; 261  :     OUTREG8(&pOTG->pUsbGenRegs->Index, INDEX(endpoint));

  00030	e5952020	 ldr         r2, [r5, #0x20]
  00034	e1b03004	 movs        r3, r4
  00038	e203e00f	 and         lr, r3, #0xF
  0003c	e5c2e00e	 strb        lr, [r2, #0xE]

; 262  :     csrIndex = INDEX(endpoint);
; 263  :     
; 264  :     if (endpoint == 0) // Endpoint 0 handling

  00040	1a00000a	 bne         |$LN2@ClearRxPkt|

; 265  :     {
; 266  :         CLRREG16(&pOTG->pUsbCsrRegs->ep[0].CSR.CSR0, CSR0_H_RxPktRdy|CSR0_H_StatusPkt|CSR0_H_SetupPkt|CSR0_H_ReqPkt);        

  00044	e595001c	 ldr         r0, [r5, #0x1C]
  00048	e3a03cff	 mov         r3, #0xFF, 24
  0004c	e3831096	 orr         r1, r3, #0x96
  00050	e5d02002	 ldrb        r2, [r0, #2]
  00054	e5d03003	 ldrb        r3, [r0, #3]
  00058	e1823403	 orr         r3, r2, r3, lsl #8
  0005c	e0033001	 and         r3, r3, r1
  00060	e1a02423	 mov         r2, r3, lsr #8
  00064	e5c03002	 strb        r3, [r0, #2]
  00068	e5c02003	 strb        r2, [r0, #3]

; 267  :     }
; 268  :     else

  0006c	ea000013	 b           |$LN1@ClearRxPkt|
  00070		 |$LN2@ClearRxPkt|

; 269  :     {
; 270  :         DEBUGMSG(ZONE_HCD, (TEXT("ClearRxPktRdy bit for ep %d\r\n"), USB_ENDPOINT(endpoint)));
; 271  :         SETREG16(&pOTG->pUsbCsrRegs->ep[csrIndex].RxCSR, RXCSR_H_FlushFIFO);

  00070	e595301c	 ldr         r3, [r5, #0x1C]
  00074	e3a02cff	 mov         r2, #0xFF, 24

; 272  :         CLRREG16(&pOTG->pUsbCsrRegs->ep[csrIndex].RxCSR, RXCSR_H_RxPktRdy); 

  00078	e38200fe	 orr         r0, r2, #0xFE
  0007c	e083120e	 add         r1, r3, lr, lsl #4
  00080	e5d12006	 ldrb        r2, [r1, #6]
  00084	e5d13007	 ldrb        r3, [r1, #7]
  00088	e1823403	 orr         r3, r2, r3, lsl #8
  0008c	e3833010	 orr         r3, r3, #0x10
  00090	e1a02423	 mov         r2, r3, lsr #8
  00094	e5c13006	 strb        r3, [r1, #6]
  00098	e5c12007	 strb        r2, [r1, #7]
  0009c	e595301c	 ldr         r3, [r5, #0x1C]
  000a0	e083120e	 add         r1, r3, lr, lsl #4
  000a4	e5d12006	 ldrb        r2, [r1, #6]
  000a8	e5d13007	 ldrb        r3, [r1, #7]
  000ac	e1823403	 orr         r3, r2, r3, lsl #8
  000b0	e0033000	 and         r3, r3, r0
  000b4	e1a02423	 mov         r2, r3, lsr #8
  000b8	e5c13006	 strb        r3, [r1, #6]
  000bc	e5c12007	 strb        r2, [r1, #7]
  000c0		 |$LN1@ClearRxPkt|

; 273  :         DEBUGMSG(ZONE_HCD|0, (TEXT("RxCSR[%d] = 0x%x\r\n"), csrIndex, INREG16(&pOTG->pUsbCsrRegs->ep[csrIndex].RxCSR)));
; 274  :     }    
; 275  :     LeaveCriticalSection(&pOTG->regCS);

  000c0	e2850038	 add         r0, r5, #0x38
  000c4	eb000000	 bl          LeaveCriticalSection
  000c8		 |$LN5@ClearRxPkt|

; 276  :     return;
; 277  : }

  000c8	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000cc	e12fff1e	 bx          lr
  000d0		 |$M42594|

			 ENDP  ; |?ClearRxPktRdy@CQTD@@QAAXXZ|, CQTD::ClearRxPktRdy

	EXPORT	|?DumpReg@CQTD@@QAAXXZ|			; CQTD::DumpReg
	EXPORT	|??_C@_1DO@KIADPAKK@?$AAD?$AAu?$AAm?$AAp?$AAR?$AAe?$AAg?$AA?5?$AAC?$AAr?$AAi?$AAt?$AAi?$AAc?$AAa?$AAl?$AAS?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AAO?$AAU?$AAT?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@OPAHOGDF@?$AAD?$AAu?$AAm?$AAp?$AAR?$AAe?$AAg?$AA?3?$AA?3?$AAT?$AAX?$AAC?$AAS?$AAR?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@IKOEMBBO@?$AAD?$AAu?$AAm?$AAp?$AAR?$AAe?$AAg?$AA?3?$AA?3?$AAR?$AAX?$AAC?$AAS?$AAR?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@NKACFNMM@?$AAD?$AAu?$AAm?$AAp?$AAR?$AAe?$AAg?$AA?3?$AA?3?$AAC?$AAS?$AAR?$AA0?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@CECBLJCP@?$AAD?$AAu?$AAm?$AAp?$AAR?$AAe?$AAg?$AA?5?$AAC?$AAr?$AAi?$AAt?$AAi?$AAc?$AAa?$AAl?$AAS?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AAI?$AAN?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@FIKDIPMK@?$AAC?$AAQ?$AAT?$AAD?$AA?3?$AA?3?$AAC?$AAl?$AAe?$AAa?$AAr?$AAR?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd?$AAy?$AA?3?$AA?5?$AAG?$AAe?$AAt?$AA?5?$AAp?$AAO?$AAT?$AAG?$AA?5?$AAf?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@EEJMOJLC@?$AAC?$AAQ?$AAT?$AAD?$AA?3?$AA?3?$AAC?$AAl?$AAe?$AAa?$AAr?$AAR?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd?$AAy?$AA?5?$AA?9?$AA?$DO?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAa?$AAb?$AAl?$AAe?$AA?5@| [ DATA ] ; `string'
	IMPORT	|NKDbgPrintfW|
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.h

  00000			 AREA	 |.pdata|, PDATA
|$T42642| DCD	|$LN35@DumpReg|
	DCD	0x40003701

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@KIADPAKK@?$AAD?$AAu?$AAm?$AAp?$AAR?$AAe?$AAg?$AA?5?$AAC?$AAr?$AAi?$AAt?$AAi?$AAc?$AAa?$AAl?$AAS?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AAO?$AAU?$AAT?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "u", 0x0, "m", 0x0, "p", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, " ", 0x0, "C", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "i"
	DCB	0x0, "c", 0x0, "a", 0x0, "l", 0x0, "S", 0x0, "e", 0x0, "c"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "U", 0x0, "T", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@OPAHOGDF@?$AAD?$AAu?$AAm?$AAp?$AAR?$AAe?$AAg?$AA?3?$AA?3?$AAT?$AAX?$AAC?$AAS?$AAR?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0@| DCB "D"
	DCB	0x0, "u", 0x0, "m", 0x0, "p", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, ":", 0x0, ":", 0x0, "T", 0x0, "X", 0x0, "C", 0x0, "S"
	DCB	0x0, "R", 0x0, " ", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@IKOEMBBO@?$AAD?$AAu?$AAm?$AAp?$AAR?$AAe?$AAg?$AA?3?$AA?3?$AAR?$AAX?$AAC?$AAS?$AAR?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0@| DCB "D"
	DCB	0x0, "u", 0x0, "m", 0x0, "p", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, ":", 0x0, ":", 0x0, "R", 0x0, "X", 0x0, "C", 0x0, "S"
	DCB	0x0, "R", 0x0, " ", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@NKACFNMM@?$AAD?$AAu?$AAm?$AAp?$AAR?$AAe?$AAg?$AA?3?$AA?3?$AAC?$AAS?$AAR?$AA0?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "u", 0x0, "m", 0x0, "p", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, ":", 0x0, ":", 0x0, "C", 0x0, "S", 0x0, "R", 0x0, "0"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@CECBLJCP@?$AAD?$AAu?$AAm?$AAp?$AAR?$AAe?$AAg?$AA?5?$AAC?$AAr?$AAi?$AAt?$AAi?$AAc?$AAa?$AAl?$AAS?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AAI?$AAN?$AA?$AN?$AA?6?$AA?$AA@| DCB "D"
	DCB	0x0, "u", 0x0, "m", 0x0, "p", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, " ", 0x0, "C", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "i"
	DCB	0x0, "c", 0x0, "a", 0x0, "l", 0x0, "S", 0x0, "e", 0x0, "c"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "N", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@FIKDIPMK@?$AAC?$AAQ?$AAT?$AAD?$AA?3?$AA?3?$AAC?$AAl?$AAe?$AAa?$AAr?$AAR?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd?$AAy?$AA?3?$AA?5?$AAG?$AAe?$AAt?$AA?5?$AAp?$AAO?$AAT?$AAG?$AA?5?$AAf?$AAa@| DCB "C"
	DCB	0x0, "Q", 0x0, "T", 0x0, "D", 0x0, ":", 0x0, ":", 0x0, "C"
	DCB	0x0, "l", 0x0, "e", 0x0, "a", 0x0, "r", 0x0, "R", 0x0, "x"
	DCB	0x0, "P", 0x0, "k", 0x0, "t", 0x0, "R", 0x0, "d", 0x0, "y"
	DCB	0x0, ":", 0x0, " ", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, " "
	DCB	0x0, "p", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@EEJMOJLC@?$AAC?$AAQ?$AAT?$AAD?$AA?3?$AA?3?$AAC?$AAl?$AAe?$AAa?$AAr?$AAR?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd?$AAy?$AA?5?$AA?9?$AA?$DO?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAa?$AAb?$AAl?$AAe?$AA?5@| DCB "C"
	DCB	0x0, "Q", 0x0, "T", 0x0, "D", 0x0, ":", 0x0, ":", 0x0, "C"
	DCB	0x0, "l", 0x0, "e", 0x0, "a", 0x0, "r", 0x0, "R", 0x0, "x"
	DCB	0x0, "P", 0x0, "k", 0x0, "t", 0x0, "R", 0x0, "d", 0x0, "y"
	DCB	0x0, " ", 0x0, "-", 0x0, ">", 0x0, " ", 0x0, "n", 0x0, "o"
	DCB	0x0, "t", 0x0, " ", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "h", 0x0, "e"
	DCB	0x0, " ", 0x0, "a", 0x0, "s", 0x0, "s", 0x0, "o", 0x0, "c"
	DCB	0x0, "i", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "p", 0x0, "i", 0x0, "p", 0x0, "e", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DumpReg@CQTD@@QAAXXZ| PROC		; CQTD::DumpReg

; 286  : {

  00000		 |$LN35@DumpReg|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M42639|

; 287  :     PHSMUSB_T pOTG;
; 288  :     UCHAR endpoint;
; 289  :     UCHAR csrIndex;
; 290  :     DWORD dwType = GetTDType();        
; 291  :     CPipe *pPipe = m_pQh->GetPipe();        

  00004	e5903004	 ldr         r3, [r0, #4]
  00008	e590500c	 ldr         r5, [r0, #0xC]
  0000c	e5933000	 ldr         r3, [r3]
  00010	e1b02003	 movs        r2, r3

; 292  :     if (!pPipe)

  00014	1a000003	 bne         |$LN6@DumpReg|

; 293  :     {
; 294  :         RETAILMSG(1, (TEXT("CQTD::ClearRxPktRdy -> not able to read the associated pipe\r\n")));

  00018	e59f00b8	 ldr         r0, [pc, #0xB8]
  0001c		 |$LN32@DumpReg|
  0001c	eb000000	 bl          NKDbgPrintfW

; 326  : }

  00020	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$LN6@DumpReg|

; 295  :         return;
; 296  :     }
; 297  :     pOTG = (PHSMUSB_T)pPipe->m_pCMhcd->GetOTGContext();

  00028	e592300c	 ldr         r3, [r2, #0xC]
  0002c	e59330b0	 ldr         r3, [r3, #0xB0]
  00030	e1b04003	 movs        r4, r3

; 298  :     if (pOTG == NULL)
; 299  :     {
; 300  :         RETAILMSG(1, (TEXT("CQTD::ClearRxPktRdy: Get pOTG failed\r\n")));        

  00034	059f0098	 ldreq       r0, [pc, #0x98]
  00038	0afffff7	 beq         |$LN32@DumpReg|

; 301  :         return;
; 302  :     }
; 303  : 
; 304  :     endpoint = pPipe->GetMappedEndPoint();
; 305  :     // Set Index Register
; 306  :     EnterCriticalSection(&pOTG->regCS);

  0003c	e5d26058	 ldrb        r6, [r2, #0x58]
  00040	e2840038	 add         r0, r4, #0x38
  00044	eb000000	 bl          EnterCriticalSection

; 307  :     RETAILMSG(1, (TEXT("DumpReg CriticalSection: IN\r\n")));

  00048	e59f0080	 ldr         r0, [pc, #0x80]
  0004c	eb000000	 bl          NKDbgPrintfW

; 308  :     OUTREG8(&pOTG->pUsbGenRegs->Index, INDEX(endpoint));

  00050	e5943020	 ldr         r3, [r4, #0x20]
  00054	e216200f	 ands        r2, r6, #0xF
  00058	e5c3200e	 strb        r2, [r3, #0xE]

; 309  :     csrIndex = INDEX(endpoint);
; 310  :     if (USB_ENDPOINT(endpoint) == 0)
; 311  :         RETAILMSG(1, (TEXT("DumpReg::CSR0 register = 0x%x\r\n"), INREG16(&pOTG->pUsbCsrRegs->ep[0].CSR.CSR0)));

  0005c	e594301c	 ldr         r3, [r4, #0x1C]
  00060	1a000005	 bne         |$LN4@DumpReg|
  00064	e5d32002	 ldrb        r2, [r3, #2]
  00068	e5d33003	 ldrb        r3, [r3, #3]
  0006c	e59f0058	 ldr         r0, [pc, #0x58]
  00070	e1821403	 orr         r1, r2, r3, lsl #8
  00074	eb000000	 bl          NKDbgPrintfW

; 312  :     else {

  00078	ea00000a	 b           |$LN20@DumpReg|
  0007c		 |$LN4@DumpReg|

; 313  :         if (dwType == TD_DATA_IN)

  0007c	e3550002	 cmp         r5, #2

; 314  :         {
; 315  :             RETAILMSG(1, (TEXT("DumpReg::RXCSR (%d) register = 0x%x\r\n"), endpoint, 
; 316  :                 INREG16(&pOTG->pUsbCsrRegs->ep[csrIndex].RxCSR)));  

  00080	e0833202	 add         r3, r3, r2, lsl #4
  00084	05d32006	 ldreqb      r2, [r3, #6]
  00088	05d33007	 ldreqb      r3, [r3, #7]
  0008c	059f0034	 ldreq       r0, [pc, #0x34]

; 317  :         }
; 318  :         else
; 319  :         {
; 320  :             RETAILMSG(1, (TEXT("DumpReg::TXCSR (%d) register = 0x%x\r\n"), endpoint, 
; 321  :                 INREG16(&pOTG->pUsbCsrRegs->ep[csrIndex].CSR.TxCSR)));

  00090	159f002c	 ldrne       r0, [pc, #0x2C]
  00094	15d32002	 ldrneb      r2, [r3, #2]
  00098	15d33003	 ldrneb      r3, [r3, #3]
  0009c	e1a01006	 mov         r1, r6
  000a0	e1822403	 orr         r2, r2, r3, lsl #8
  000a4	eb000000	 bl          NKDbgPrintfW
  000a8		 |$LN20@DumpReg|

; 322  :         }
; 323  :     }
; 324  :     RETAILMSG(1, (TEXT("DumpReg CriticalSection: OUT\r\n")));

  000a8	e59f0010	 ldr         r0, [pc, #0x10]
  000ac	eb000000	 bl          NKDbgPrintfW

; 325  :     LeaveCriticalSection(&pOTG->regCS);

  000b0	e2840038	 add         r0, r4, #0x38
  000b4	eb000000	 bl          LeaveCriticalSection

; 326  : }

  000b8	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000bc	e12fff1e	 bx          lr
  000c0		 |$LN36@DumpReg|
  000c0		 |$LN37@DumpReg|
  000c0	00000000	 DCD         |??_C@_1DO@KIADPAKK@?$AAD?$AAu?$AAm?$AAp?$AAR?$AAe?$AAg?$AA?5?$AAC?$AAr?$AAi?$AAt?$AAi?$AAc?$AAa?$AAl?$AAS?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AAO?$AAU?$AAT?$AA?$AN?$AA?6?$AA?$AA@|
  000c4		 |$LN38@DumpReg|
  000c4	00000000	 DCD         |??_C@_1EM@OPAHOGDF@?$AAD?$AAu?$AAm?$AAp?$AAR?$AAe?$AAg?$AA?3?$AA?3?$AAT?$AAX?$AAC?$AAS?$AAR?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0@|
  000c8		 |$LN39@DumpReg|
  000c8	00000000	 DCD         |??_C@_1EM@IKOEMBBO@?$AAD?$AAu?$AAm?$AAp?$AAR?$AAe?$AAg?$AA?3?$AA?3?$AAR?$AAX?$AAC?$AAS?$AAR?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0@|
  000cc		 |$LN40@DumpReg|
  000cc	00000000	 DCD         |??_C@_1EA@NKACFNMM@?$AAD?$AAu?$AAm?$AAp?$AAR?$AAe?$AAg?$AA?3?$AA?3?$AAC?$AAS?$AAR?$AA0?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000d0		 |$LN41@DumpReg|
  000d0	00000000	 DCD         |??_C@_1DM@CECBLJCP@?$AAD?$AAu?$AAm?$AAp?$AAR?$AAe?$AAg?$AA?5?$AAC?$AAr?$AAi?$AAt?$AAi?$AAc?$AAa?$AAl?$AAS?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AAI?$AAN?$AA?$AN?$AA?6?$AA?$AA@|
  000d4		 |$LN42@DumpReg|
  000d4	00000000	 DCD         |??_C@_1EO@FIKDIPMK@?$AAC?$AAQ?$AAT?$AAD?$AA?3?$AA?3?$AAC?$AAl?$AAe?$AAa?$AAr?$AAR?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd?$AAy?$AA?3?$AA?5?$AAG?$AAe?$AAt?$AA?5?$AAp?$AAO?$AAT?$AAG?$AA?5?$AAf?$AAa@|
  000d8		 |$LN43@DumpReg|
  000d8	00000000	 DCD         |??_C@_1HM@EEJMOJLC@?$AAC?$AAQ?$AAT?$AAD?$AA?3?$AA?3?$AAC?$AAl?$AAe?$AAa?$AAr?$AAR?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd?$AAy?$AA?5?$AA?9?$AA?$DO?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAa?$AAb?$AAl?$AAe?$AA?5@|
  000dc		 |$M42640|

			 ENDP  ; |?DumpReg@CQTD@@QAAXXZ|, CQTD::DumpReg

	EXPORT	|?QueueNextTD@CQTD@@QAAPAV1@PAV1@@Z|	; CQTD::QueueNextTD

  00000			 AREA	 |.pdata|, PDATA
|$T42662| DCD	|$LN5@QueueNextT@2|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?QueueNextTD@CQTD@@QAAPAV1@PAV1@@Z| PROC ; CQTD::QueueNextTD

; 337  : {    

  00000		 |$LN5@QueueNextT@2|
  00000		 |$M42659|
  00000	e1a03000	 mov         r3, r0

; 338  :     CQTD * pReturn = m_pNext;    

  00004	e5930008	 ldr         r0, [r3, #8]

; 339  :     m_pNext = pNextTD;        

  00008	e5831008	 str         r1, [r3, #8]

; 340  :     return pReturn;
; 341  : }

  0000c	e12fff1e	 bx          lr
  00010		 |$M42660|

			 ENDP  ; |?QueueNextTD@CQTD@@QAAPAV1@PAV1@@Z|, CQTD::QueueNextTD

	EXPORT	|?DeActiveTD@CQTD@@QAAXXZ|		; CQTD::DeActiveTD
	EXPORT	|??_C@_1FA@PJLPIBKD@?$AAF?$AAl?$AAu?$AAs?$AAh?$AAF?$AAI?$AAF?$AAO?$AA?3?$AA?3?$AAT?$AAX?$AAC?$AAS?$AAR?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@PJMJCBIE@?$AAC?$AAS?$AAR?$AA0?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.h

  00000			 AREA	 |.pdata|, PDATA
|$T42713| DCD	|$LN35@DeActiveTD|
	DCD	0x40005901

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@PJLPIBKD@?$AAF?$AAl?$AAu?$AAs?$AAh?$AAF?$AAI?$AAF?$AAO?$AA?3?$AA?3?$AAT?$AAX?$AAC?$AAS?$AAR?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN@| DCB "F"
	DCB	0x0, "l", 0x0, "u", 0x0, "s", 0x0, "h", 0x0, "F", 0x0, "I"
	DCB	0x0, "F", 0x0, "O", 0x0, ":", 0x0, ":", 0x0, "T", 0x0, "X"
	DCB	0x0, "C", 0x0, "S", 0x0, "R", 0x0, " ", 0x0, "(", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@PJMJCBIE@?$AAC?$AAS?$AAR?$AA0?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "C"
	DCB	0x0, "S", 0x0, "R", 0x0, "0", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DeActiveTD@CQTD@@QAAXXZ| PROC	; CQTD::DeActiveTD

; 352  : {    

  00000		 |$LN35@DeActiveTD|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M42710|
  00004	e1a05000	 mov         r5, r0

; 353  :     PHSMUSB_T pOTG;
; 354  :     UCHAR endpoint;
; 355  :     UCHAR csrIndex;
; 356  :     DWORD dwType = GetTDType();        
; 357  : 
; 358  :     m_pQh->Lock();

  00008	e5953004	 ldr         r3, [r5, #4]
  0000c	e595700c	 ldr         r7, [r5, #0xC]
  00010	e283000c	 add         r0, r3, #0xC
  00014	eb000000	 bl          EnterCriticalSection

; 359  :     SetStatus(STATUS_ABORT);
; 360  :     CPipe *pPipe = m_pQh->GetPipe();        

  00018	e5953004	 ldr         r3, [r5, #4]
  0001c	e3a0200e	 mov         r2, #0xE
  00020	e5852028	 str         r2, [r5, #0x28]
  00024	e5933000	 ldr         r3, [r3]
  00028	e1b02003	 movs        r2, r3

; 361  :     if (!pPipe)

  0002c	1a000003	 bne         |$LN6@DeActiveTD|

; 362  :     {
; 363  :         RETAILMSG(1, (TEXT("CQTD::ClearRxPktRdy -> not able to read the associated pipe\r\n")));

  00030	e59f0128	 ldr         r0, [pc, #0x128]
  00034		 |$LN32@DeActiveTD|
  00034	eb000000	 bl          NKDbgPrintfW

; 405  : }

  00038	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN6@DeActiveTD|

; 364  :         return;
; 365  :     }
; 366  :     pOTG = (PHSMUSB_T)pPipe->m_pCMhcd->GetOTGContext();

  00040	e592300c	 ldr         r3, [r2, #0xC]
  00044	e59330b0	 ldr         r3, [r3, #0xB0]
  00048	e1b04003	 movs        r4, r3

; 367  :     if (pOTG == NULL)
; 368  :     {
; 369  :         RETAILMSG(1, (TEXT("CQTD::ClearRxPktRdy: Get pOTG failed\r\n")));        

  0004c	059f0108	 ldreq       r0, [pc, #0x108]
  00050	0afffff7	 beq         |$LN32@DeActiveTD|

; 370  :         return;
; 371  :     }
; 372  : 
; 373  :     endpoint = pPipe->GetMappedEndPoint();
; 374  :     // Set Index Register
; 375  :     EnterCriticalSection(&pOTG->regCS);

  00054	e5d28058	 ldrb        r8, [r2, #0x58]
  00058	e2840038	 add         r0, r4, #0x38
  0005c	eb000000	 bl          EnterCriticalSection

; 376  :     OUTREG8(&pOTG->pUsbGenRegs->Index, INDEX(endpoint));

  00060	e5943020	 ldr         r3, [r4, #0x20]
  00064	e218600f	 ands        r6, r8, #0xF
  00068	e5c3600e	 strb        r6, [r3, #0xE]

; 377  :     csrIndex = INDEX(endpoint);
; 378  :     if (USB_ENDPOINT(endpoint) == 0)
; 379  :     {
; 380  :         RETAILMSG(1, (TEXT("CSR0 register = 0x%x\r\n"), INREG16(&pOTG->pUsbCsrRegs->ep[0].CSR.CSR0)));

  0006c	e594301c	 ldr         r3, [r4, #0x1C]
  00070	1a00000a	 bne         |$LN4@DeActiveTD|
  00074	e5d32002	 ldrb        r2, [r3, #2]
  00078	e5d33003	 ldrb        r3, [r3, #3]
  0007c	e59f00d4	 ldr         r0, [pc, #0xD4]
  00080	e1821403	 orr         r1, r2, r3, lsl #8
  00084	eb000000	 bl          NKDbgPrintfW

; 381  :         SETREG16(&pOTG->pUsbCsrRegs->ep[0].CSR.CSR0, CSR0_H_FlushFIFO);

  00088	e594101c	 ldr         r1, [r4, #0x1C]
  0008c	e5d12002	 ldrb        r2, [r1, #2]
  00090	e5d13003	 ldrb        r3, [r1, #3]
  00094	e1823403	 orr         r3, r2, r3, lsl #8
  00098	e3833c01	 orr         r3, r3, #1, 24

; 382  :     }
; 383  :     else {

  0009c	ea000022	 b           |$LN31@DeActiveTD|
  000a0		 |$LN4@DeActiveTD|

; 384  :         if (dwType == TD_DATA_IN)

  000a0	e3570002	 cmp         r7, #2
  000a4	1a000013	 bne         |$LN2@DeActiveTD|

; 385  :         {
; 386  :             SETREG16(&pOTG->pUsbCsrRegs->ep[csrIndex].RxCSR, RXCSR_H_FlushFIFO|RXCSR_H_ClrDataTog);

  000a8	e0831206	 add         r1, r3, r6, lsl #4
  000ac	e5d12006	 ldrb        r2, [r1, #6]
  000b0	e5d13007	 ldrb        r3, [r1, #7]
  000b4	e3a00cff	 mov         r0, #0xFF, 24

; 387  :             CLRREG16(&pOTG->pUsbCsrRegs->ep[csrIndex].RxCSR, RXCSR_H_ReqPkt);

  000b8	e38000df	 orr         r0, r0, #0xDF
  000bc	e1823403	 orr         r3, r2, r3, lsl #8
  000c0	e3833090	 orr         r3, r3, #0x90
  000c4	e1a02423	 mov         r2, r3, lsr #8
  000c8	e5c13006	 strb        r3, [r1, #6]
  000cc	e5c12007	 strb        r2, [r1, #7]
  000d0	e594301c	 ldr         r3, [r4, #0x1C]
  000d4	e0831206	 add         r1, r3, r6, lsl #4
  000d8	e5d12006	 ldrb        r2, [r1, #6]
  000dc	e5d13007	 ldrb        r3, [r1, #7]
  000e0	e1823403	 orr         r3, r2, r3, lsl #8
  000e4	e0033000	 and         r3, r3, r0
  000e8	e1a02423	 mov         r2, r3, lsr #8
  000ec	e5c13006	 strb        r3, [r1, #6]
  000f0	e5c12007	 strb        r2, [r1, #7]

; 388  :             DEBUGMSG(1, (TEXT("FlushFIFO::RXCSR (%d) register = 0x%x\r\n"), endpoint, 
; 389  :                 INREG16(&pOTG->pUsbCsrRegs->ep[csrIndex].RxCSR)));
; 390  :             DEBUGMSG(1, (TEXT("FlushFIFO: RxCount(0x%x)\r\n"), INREG16(&pOTG->pUsbCsrRegs->ep[csrIndex].Count.RxCount)));
; 391  : 
; 392  : 
; 393  :         }
; 394  :         else

  000f4	ea00000f	 b           |$LN1@DeActiveTD|
  000f8		 |$LN2@DeActiveTD|

; 395  :         {
; 396  :             RETAILMSG(1, (TEXT("FlushFIFO::TXCSR (%d) register = 0x%x\r\n"), endpoint, 
; 397  :                 INREG16(&pOTG->pUsbCsrRegs->ep[csrIndex].CSR.TxCSR)));

  000f8	e0833206	 add         r3, r3, r6, lsl #4
  000fc	e5d32002	 ldrb        r2, [r3, #2]
  00100	e5d33003	 ldrb        r3, [r3, #3]
  00104	e59f0048	 ldr         r0, [pc, #0x48]
  00108	e1a01008	 mov         r1, r8
  0010c	e1822403	 orr         r2, r2, r3, lsl #8
  00110	eb000000	 bl          NKDbgPrintfW

; 398  :             SETREG16(&pOTG->pUsbCsrRegs->ep[csrIndex].CSR.TxCSR, TXCSR_H_FlushFIFO|TXCSR_H_ClrDataTog);

  00114	e594301c	 ldr         r3, [r4, #0x1C]
  00118	e0831206	 add         r1, r3, r6, lsl #4
  0011c	e5d12002	 ldrb        r2, [r1, #2]
  00120	e5d13003	 ldrb        r3, [r1, #3]
  00124	e1823403	 orr         r3, r2, r3, lsl #8
  00128	e3833048	 orr         r3, r3, #0x48
  0012c		 |$LN31@DeActiveTD|
  0012c	e1a02423	 mov         r2, r3, lsr #8
  00130	e5c13002	 strb        r3, [r1, #2]
  00134	e5c12003	 strb        r2, [r1, #3]
  00138		 |$LN1@DeActiveTD|

; 399  :         }
; 400  :     }    
; 401  :     LeaveCriticalSection(&pOTG->regCS);

  00138	e2840038	 add         r0, r4, #0x38
  0013c	eb000000	 bl          LeaveCriticalSection

; 402  : 
; 403  :     // Need to add FlushFIFO here....    
; 404  :     m_pQh->UnLock();

  00140	e5953004	 ldr         r3, [r5, #4]
  00144	e283000c	 add         r0, r3, #0xC
  00148	eb000000	 bl          LeaveCriticalSection

; 405  : }

  0014c	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00150	e12fff1e	 bx          lr
  00154		 |$LN36@DeActiveTD|
  00154		 |$LN37@DeActiveTD|
  00154	00000000	 DCD         |??_C@_1FA@PJLPIBKD@?$AAF?$AAl?$AAu?$AAs?$AAh?$AAF?$AAI?$AAF?$AAO?$AA?3?$AA?3?$AAT?$AAX?$AAC?$AAS?$AAR?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN@|
  00158		 |$LN38@DeActiveTD|
  00158	00000000	 DCD         |??_C@_1CO@PJMJCBIE@?$AAC?$AAS?$AAR?$AA0?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  0015c		 |$LN39@DeActiveTD|
  0015c	00000000	 DCD         |??_C@_1EO@FIKDIPMK@?$AAC?$AAQ?$AAT?$AAD?$AA?3?$AA?3?$AAC?$AAl?$AAe?$AAa?$AAr?$AAR?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd?$AAy?$AA?3?$AA?5?$AAG?$AAe?$AAt?$AA?5?$AAp?$AAO?$AAT?$AAG?$AA?5?$AAf?$AAa@|
  00160		 |$LN40@DeActiveTD|
  00160	00000000	 DCD         |??_C@_1HM@EEJMOJLC@?$AAC?$AAQ?$AAT?$AAD?$AA?3?$AA?3?$AAC?$AAl?$AAe?$AAa?$AAr?$AAR?$AAx?$AAP?$AAk?$AAt?$AAR?$AAd?$AAy?$AA?5?$AA?9?$AA?$DO?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAa?$AAb?$AAl?$AAe?$AA?5@|
  00164		 |$M42711|

			 ENDP  ; |?DeActiveTD@CQTD@@QAAXXZ|, CQTD::DeActiveTD

	EXPORT	|??0CQH@@QAA@PAVCPipe@@@Z|		; CQH::CQH
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.h

  00000			 AREA	 |.pdata|, PDATA
|$T42735| DCD	|$LN9@CQH|
	DCD	0x40001302
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CQH@@QAA@PAVCPipe@@@Z| PROC	; CQH::CQH

; 420  : {    

  00000		 |$LN9@CQH|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M42732|
  00008	e1a03001	 mov         r3, r1
  0000c	e1a04000	 mov         r4, r0
  00010	e3a02000	 mov         r2, #0
  00014	e5842004	 str         r2, [r4, #4]

; 421  :     USB_ENDPOINT_DESCRIPTOR endptDesc = pPipe->GetEndptDescriptor();

  00018	e3a02007	 mov         r2, #7
  0001c	e28d0000	 add         r0, sp, #0
  00020	e2831034	 add         r1, r3, #0x34
  00024	e5843000	 str         r3, [r4]
  00028	eb000000	 bl          memcpy

; 422  :     m_bEndPointAddress = endptDesc.bEndpointAddress;

  0002c	e5dd3002	 ldrb        r3, [sp, #2]

; 423  :     InitLock();

  00030	e284000c	 add         r0, r4, #0xC
  00034	e5c43008	 strb        r3, [r4, #8]
  00038	eb000000	 bl          InitializeCriticalSection

; 424  : }

  0003c	e1a00004	 mov         r0, r4
  00040	e28dd008	 add         sp, sp, #8
  00044	e8bd4010	 ldmia       sp!, {r4, lr}
  00048	e12fff1e	 bx          lr
  0004c		 |$M42733|

			 ENDP  ; |??0CQH@@QAA@PAVCPipe@@@Z|, CQH::CQH

	EXPORT	|?IsActive@CQH@@QAAHXZ|			; CQH::IsActive
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.h

  00000			 AREA	 |.pdata|, PDATA
|$T42763| DCD	|$LN20@IsActive|
	DCD	0x40000e00
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsActive@CQH@@QAAHXZ| PROC		; CQH::IsActive

; 435  : {

  00000		 |$LN20@IsActive|
  00000		 |$M42760|

; 436  :     // Loop through and see if there is any outstanding CQTD
; 437  :     if (m_pCQHTDList == NULL) // there is nothing in the QH, we can return NOT active

  00000	e5903004	 ldr         r3, [r0, #4]
  00004	ea000005	 b           |$LN17@IsActive|
  00008		 |$LL3@IsActive|

; 438  :         return FALSE;
; 439  : 
; 440  :     CQTD *pTmp = m_pCQHTDList;
; 441  :     while (pTmp != NULL)
; 442  :     {
; 443  :         if ((pTmp->GetStatus() > STATUS_ACTIVE_START) && (pTmp->GetStatus() < STATUS_ACTIVE_END))

  00008	e5923028	 ldr         r3, [r2, #0x28]
  0000c	e3530002	 cmp         r3, #2
  00010	9a000001	 bls         |$LN1@IsActive|
  00014	e353000c	 cmp         r3, #0xC
  00018	3a000004	 bcc         |$LN14@IsActive|
  0001c		 |$LN1@IsActive|

; 446  :         }
; 447  : 
; 448  :         pTmp = pTmp->GetNextTD();

  0001c	e5923008	 ldr         r3, [r2, #8]
  00020		 |$LN17@IsActive|
  00020	e1b02003	 movs        r2, r3
  00024	1afffff7	 bne         |$LL3@IsActive|

; 449  :     }
; 450  : 
; 451  :     return FALSE;

  00028	e3a00000	 mov         r0, #0

; 452  : }

  0002c	e12fff1e	 bx          lr
  00030		 |$LN14@IsActive|

; 444  :         {
; 445  :             return TRUE;

  00030	e3a00001	 mov         r0, #1

; 452  : }

  00034	e12fff1e	 bx          lr
  00038		 |$M42761|

			 ENDP  ; |?IsActive@CQH@@QAAHXZ|, CQH::IsActive

	EXPORT	|?IssueTransfer@CQH@@QAAKPAVCQTD@@@Z|	; CQH::IssueTransfer
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.h

  00000			 AREA	 |.pdata|, PDATA
|$T42841| DCD	|$LN55@IssueTrans|
	DCD	0x40006a02
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IssueTransfer@CQH@@QAAKPAVCQTD@@@Z| PROC ; CQH::IssueTransfer

; 464  : {

  00000		 |$LN55@IssueTrans|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd024	 sub         sp, sp, #0x24
  00008		 |$M42838|
  00008	e3510000	 cmp         r1, #0
  0000c	e1a0a000	 mov         r10, r0

; 465  :     DWORD dwStatus = STATUS_ERROR;

  00010	e3a0300f	 mov         r3, #0xF

; 466  :     if (pCurTD)

  00014	0a000014	 beq         |$EXIT$42071|

; 467  :     {        
; 468  :         if ((m_pCQHTDList != NULL) && (m_pCQHTDList != pCurTD))

  00018	e59a3004	 ldr         r3, [r10, #4]
  0001c	e3530000	 cmp         r3, #0
  00020	0a000003	 beq         |$LN49@IssueTrans|
  00024	e1530001	 cmp         r3, r1
  00028	0a000002	 beq         |$LN11@IssueTrans|

; 469  :         {
; 470  :             DEBUGMSG(ZONE_ERROR, (TEXT("There are something wrong with sequence\r\n")));
; 471  :             dwStatus = STATUS_ERROR;

  0002c	e3a0300f	 mov         r3, #0xF
  00030	ea00000d	 b           |$EXIT$42071|
  00034		 |$LN49@IssueTrans|

; 472  :             goto EXIT;
; 473  :         }
; 474  :         else if (m_pCQHTDList == NULL)
; 475  :             m_pCQHTDList = pCurTD;

  00034	e58a1004	 str         r1, [r10, #4]
  00038		 |$LN11@IssueTrans|

; 476  : 
; 477  :         // Perform the FIFO or DMA transfer here
; 478  :         // pCurTD should be linked-list of the TD to be transferred.
; 479  :         CQTD *pTmp;
; 480  : 
; 481  :         pTmp = m_pCQHTDList;
; 482  :         dwStatus = ERROR_SUCCESS;

  00038	e3a02000	 mov         r2, #0
  0003c	e59a3004	 ldr         r3, [r10, #4]
  00040	e58d2018	 str         r2, [sp, #0x18]
  00044	ea000003	 b           |$LN50@IssueTrans|
  00048		 |$LL10@IssueTrans|

; 483  :         while (pTmp != NULL)
; 484  :         {
; 485  :             // 1. Find the TD that is not processed yet
; 486  :             // 2. Put in the FIFO
; 487  :             // 3. Set the status and tx or rx bit
; 488  :             // 4. Exit and wait for packet tx or rx interrupt.
; 489  :             DWORD dwPrevStatus;
; 490  :             DEBUGMSG(ZONE_HCD, (TEXT("CQTD with type(%d), status(%d)\r\n"), pTmp->GetTDType(), pTmp->GetStatus()));
; 491  :             if (pTmp->GetStatus() == STATUS_COMPLETE)

  00048	e59b3028	 ldr         r3, [r11, #0x28]
  0004c	e3530011	 cmp         r3, #0x11
  00050	1a000009	 bne         |$LN8@IssueTrans|

; 492  :             {
; 493  :                 pTmp = pTmp->GetNextTD();

  00054	e59b3008	 ldr         r3, [r11, #8]
  00058		 |$LN50@IssueTrans|
  00058	e1b0b003	 movs        r11, r3
  0005c	1afffff9	 bne         |$LL10@IssueTrans|

; 540  :         {
; 541  :             dwStatus = ERROR_SUCCESS;
; 542  :             m_pCQHTDList = NULL;

  00060	e3a03000	 mov         r3, #0
  00064	e58a3004	 str         r3, [r10, #4]
  00068	e3a03000	 mov         r3, #0
  0006c		 |$EXIT$42071|

; 543  :         }
; 544  :     }
; 545  : EXIT:    
; 546  :     return dwStatus;
; 547  : }

  0006c	e1a00003	 mov         r0, r3
  00070	e28dd024	 add         sp, sp, #0x24
  00074	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00078	e12fff1e	 bx          lr
  0007c		 |$LN8@IssueTrans|

; 494  :                 continue;
; 495  :             }
; 496  : 
; 497  :             dwPrevStatus = pTmp->GetStatus();

  0007c	e59b3028	 ldr         r3, [r11, #0x28]

; 498  :             if ((dwPrevStatus == STATUS_WAIT_TRANSFER) ||
; 499  :                 (dwPrevStatus == STATUS_WAIT_MORE_DATA) ||
; 500  :                 (dwPrevStatus == STATUS_SEND_MORE_DATA) ||
; 501  :                 (dwPrevStatus == STATUS_PROCESS_DMA))

  00080	e3530001	 cmp         r3, #1
  00084	0a000008	 beq         |$LN4@IssueTrans|
  00088	e3530004	 cmp         r3, #4
  0008c	0a000006	 beq         |$LN4@IssueTrans|
  00090	e3530005	 cmp         r3, #5
  00094	0a000004	 beq         |$LN4@IssueTrans|
  00098	e3530006	 cmp         r3, #6

; 527  :                 break; // jump out from the while loop
; 528  :             }
; 529  :             else 
; 530  :             {
; 531  :                 //DEBUGMSG(ZONE_ERROR, (TEXT("GetStatus return %d for this\r\n"), pTmp->GetStatus()));
; 532  :                 // I guess we don't need to continue loop but break it.
; 533  :                 dwStatus = ERROR_NOT_READY;

  0009c	13a03015	 movne       r3, #0x15
  000a0	1afffff1	 bne         |$EXIT$42071|

; 502  :             {                              
; 503  :                 if (((dwPrevStatus == STATUS_WAIT_TRANSFER) || 
; 504  :                      (dwPrevStatus == STATUS_WAIT_MORE_DATA)||
; 505  :                      (dwPrevStatus == STATUS_SEND_MORE_DATA)) && 
; 506  :                     (USB_ENDPOINT(m_bEndPointAddress) != 0) &&
; 507  :                     (USB_ENDPOINT_DIRECTION_OUT(m_bEndPointAddress)) &&
; 508  :                     (m_pPipe->GetTransferMode() != TRANSFER_FIFO))

  000a4	e3530005	 cmp         r3, #5
  000a8	1a000009	 bne         |$LN5@IssueTrans|
  000ac		 |$LN4@IssueTrans|
  000ac	e5da3008	 ldrb        r3, [r10, #8]
  000b0	e313000f	 tst         r3, #0xF
  000b4	0a000006	 beq         |$LN5@IssueTrans|
  000b8	e3130080	 tst         r3, #0x80
  000bc	1a000004	 bne         |$LN5@IssueTrans|
  000c0	e59a3000	 ldr         r3, [r10]
  000c4	e5d33014	 ldrb        r3, [r3, #0x14]
  000c8	e3530000	 cmp         r3, #0

; 509  :                         pTmp->SetStatus(STATUS_PROCESS_DMA);

  000cc	13a03006	 movne       r3, #6
  000d0	1a000000	 bne         |$LN52@IssueTrans|
  000d4		 |$LN5@IssueTrans|

; 510  :                 else                 
; 511  :                         pTmp->SetStatus(STATUS_WAIT_RESPONSE);

  000d4	e3a03003	 mov         r3, #3
  000d8		 |$LN52@IssueTrans|
  000d8	e58b3028	 str         r3, [r11, #0x28]

; 512  : 
; 513  :                 // Configure Endpoint here ... not sure if it should
; 514  :                 // be the case.
; 515  :                 // Put the data into FIFO       
; 516  :                 //RETAILMSG(1, (TEXT("IssueTransfer::EP %d\r\n"), USB_ENDPOINT((m_pPipe->GetEndptDescriptor()).bEndpointAddress)));
; 517  :                 DEBUGMSG(ZONE_HCD, (TEXT("IssueTransfer:EP %d, mapped %d\r\n"), 
; 518  :                     USB_ENDPOINT((m_pPipe->GetEndptDescriptor()).bEndpointAddress), m_pPipe->GetMappedEndPoint()));
; 519  :                 m_pPipe->m_pCMhcd->InitFIFO(m_pPipe);

  000dc	e59a1000	 ldr         r1, [r10]
  000e0	e591000c	 ldr         r0, [r1, #0xC]
  000e4	e5903000	 ldr         r3, [r0]
  000e8	e5933040	 ldr         r3, [r3, #0x40]
  000ec	e1a0e00f	 mov         lr, pc
  000f0	e12fff13	 bx          r3

; 520  : #pragma warning(push)
; 521  : #pragma warning(disable : 4238)
; 522  :                 m_pPipe->m_pCMhcd->ConfigEP(&(m_pPipe->GetEndptDescriptor()), 
; 523  :                     m_pPipe->GetMappedEndPoint(), m_pPipe->GetDeviceAddress(), m_pPipe->m_bHubAddress,
; 524  :                     m_pPipe->m_bHubPort, m_pPipe->GetSpeed(), m_pPipe->GetTransferMode(), FALSE);

  000f4	e59a4000	 ldr         r4, [r10]
  000f8	e5943040	 ldr         r3, [r4, #0x40]
  000fc	e5d42014	 ldrb        r2, [r4, #0x14]
  00100	e3530000	 cmp         r3, #0
  00104	13a07001	 movne       r7, #1
  00108	e5cd2014	 strb        r2, [sp, #0x14]
  0010c	1a000003	 bne         |$LN35@IssueTrans|
  00110	e594303c	 ldr         r3, [r4, #0x3C]
  00114	e3530000	 cmp         r3, #0
  00118	13a07003	 movne       r7, #3
  0011c	03a07002	 moveq       r7, #2
  00120		 |$LN35@IssueTrans|
  00120	e5d4503b	 ldrb        r5, [r4, #0x3B]
  00124	e5d46058	 ldrb        r6, [r4, #0x58]
  00128	e28d001c	 add         r0, sp, #0x1C
  0012c	e2841034	 add         r1, r4, #0x34
  00130	e3a02007	 mov         r2, #7
  00134	eb000000	 bl          memcpy
  00138	e594000c	 ldr         r0, [r4, #0xC]
  0013c	e1a03005	 mov         r3, r5
  00140	e3a05000	 mov         r5, #0
  00144	e5901000	 ldr         r1, [r0]
  00148	e5d48009	 ldrb        r8, [r4, #9]
  0014c	e5d49008	 ldrb        r9, [r4, #8]
  00150	e58d5010	 str         r5, [sp, #0x10]
  00154	e5dd5014	 ldrb        r5, [sp, #0x14]
  00158	e20740ff	 and         r4, r7, #0xFF
  0015c	e591704c	 ldr         r7, [r1, #0x4C]
  00160	e28d101c	 add         r1, sp, #0x1C
  00164	e1a02006	 mov         r2, r6
  00168	e58d500c	 str         r5, [sp, #0xC]
  0016c	e58d4008	 str         r4, [sp, #8]
  00170	e58d8004	 str         r8, [sp, #4]
  00174	e58d9000	 str         r9, [sp]
  00178	e1a0e00f	 mov         lr, pc
  0017c	e12fff17	 bx          r7

; 525  : #pragma warning(pop)
; 526  :                 m_pPipe->m_pCMhcd->ProcessTD(m_pPipe->GetMappedEndPoint(),(void *)pTmp);                                      

  00180	e59a3000	 ldr         r3, [r10]
  00184	e1a0200b	 mov         r2, r11
  00188	e593000c	 ldr         r0, [r3, #0xC]
  0018c	e5d31058	 ldrb        r1, [r3, #0x58]
  00190	e5903000	 ldr         r3, [r0]
  00194	e5933050	 ldr         r3, [r3, #0x50]
  00198	e1a0e00f	 mov         lr, pc
  0019c	e12fff13	 bx          r3

; 534  :                 break;
; 535  :             }
; 536  :                
; 537  :         }          
; 538  :         // Finally, check if the current list in m_pQTDList has been completed.
; 539  :         if (pTmp == NULL)

  001a0	e59d3018	 ldr         r3, [sp, #0x18]
  001a4	eaffffb0	 b           |$EXIT$42071|
  001a8		 |$M42839|

			 ENDP  ; |?IssueTransfer@CQH@@QAAKPAVCQTD@@@Z|, CQH::IssueTransfer

	EXPORT	|?SetDeviceAddress@CQH@@QAAXEE@Z|	; CQH::SetDeviceAddress
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\cpipe.h

  00000			 AREA	 |.pdata|, PDATA
|$T42864| DCD	|$LN13@SetDeviceA|
	DCD	0x40001802
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetDeviceAddress@CQH@@QAAXEE@Z| PROC	; CQH::SetDeviceAddress

; 560  : {

  00000		 |$LN13@SetDeviceA|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M42861|
  00008	e1a06002	 mov         r6, r2
  0000c	e1a02001	 mov         r2, r1

; 561  :     // Need to handle HUB case later on
; 562  :     PHSMUSB_T pOTG;
; 563  :     CPipe *pPipe = GetPipe();        

  00010	e5900000	 ldr         r0, [r0]
  00014	e1b04000	 movs        r4, r0

; 564  :     if (!pPipe)

  00018	0a00000d	 beq         |$LN3@SetDeviceA|

; 565  :     {
; 566  :         DEBUGMSG(ZONE_ERROR, (TEXT("CQTD::ClearRxPktRdy -> not able to read the associated pipe\r\n")));
; 567  :         return;
; 568  :     }
; 569  :     pOTG = (PHSMUSB_T)pPipe->m_pCMhcd->GetOTGContext();
; 570  :     if (pOTG == NULL)

  0001c	e594300c	 ldr         r3, [r4, #0xC]
  00020	e59330b0	 ldr         r3, [r3, #0xB0]
  00024	e3530000	 cmp         r3, #0
  00028	0a000009	 beq         |$LN3@SetDeviceA|

; 571  :     {
; 572  :         DEBUGMSG(ZONE_ERROR, (TEXT("CQTD::ClearRxPktRdy: Get pOTG failed\r\n")));        
; 573  :         return;
; 574  :     }
; 575  : 
; 576  :     m_pPipe->m_pCMhcd->SetDeviceAddress(pPipe->GetMappedEndPoint(), ucDeviceAddress, 
; 577  :         pPipe->m_bHubAddress,pPipe->m_bHubPort, outdir);     

  0002c	e590000c	 ldr         r0, [r0, #0xC]
  00030	e5d45009	 ldrb        r5, [r4, #9]
  00034	e5d43008	 ldrb        r3, [r4, #8]
  00038	e590e000	 ldr         lr, [r0]
  0003c	e5d41058	 ldrb        r1, [r4, #0x58]
  00040	e58d6004	 str         r6, [sp, #4]
  00044	e59e4064	 ldr         r4, [lr, #0x64]
  00048	e58d5000	 str         r5, [sp]
  0004c	e1a0e00f	 mov         lr, pc
  00050	e12fff14	 bx          r4
  00054		 |$LN3@SetDeviceA|

; 578  :     
; 579  : }

  00054	e28dd008	 add         sp, sp, #8
  00058	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0005c	e12fff1e	 bx          lr
  00060		 |$M42862|

			 ENDP  ; |?SetDeviceAddress@CQH@@QAAXEE@Z|, CQH::SetDeviceAddress

	EXPORT	|?SetMaxPacketLength@CQH@@QAAXK@Z|	; CQH::SetMaxPacketLength

  00000			 AREA	 |.pdata|, PDATA
|$T42871| DCD	|$LN5@SetMaxPack|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetMaxPacketLength@CQH@@QAAXK@Z| PROC ; CQH::SetMaxPacketLength

; 590  : {

  00000		 |$LN5@SetMaxPack|
  00000		 |$M42868|

; 591  :     // To be implemented
; 592  : #ifdef DEBUG
; 593  :     DEBUGMSG(ZONE_HCD, (TEXT("Handle SetMaxPacketLength request (%d)\r\n"), dwMaxPacketSize));
; 594  : #else
; 595  :     UNREFERENCED_PARAMETER(dwMaxPacketSize);
; 596  : #endif
; 597  : }

  00000	e12fff1e	 bx          lr
  00004		 |$M42869|

			 ENDP  ; |?SetMaxPacketLength@CQH@@QAAXK@Z|, CQH::SetMaxPacketLength

	EXPORT	|?ReadDataIN@CQTD@@QAAKPAK@Z|		; CQTD::ReadDataIN
	EXPORT	|??_C@_1EO@FDEEAPGH@?$AAD?$AAM?$AAA?$AA?5?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?0?$AA?5?$AAu?$AAs?$AAe?$AA?5?$AAF?$AAI?$AAF?$AAO?$AA?5?$AAt?$AAo?$AA?5@| [ DATA ] ; `string'
	IMPORT	|?RestoreRxConfig@CHW@@QAAHPAXE@Z|	; CHW::RestoreRxConfig
	IMPORT	|?CheckDMAResult@CHW@@QAAKPAXE@Z|	; CHW::CheckDMAResult
	IMPORT	|?DeviceInfo2Channel@CHW@@QAAEPAVCPipe@@@Z| ; CHW::DeviceInfo2Channel
	IMPORT	|?ReadDMA@CHW@@QAAKPAXEE0KKPAVCQTD@@@Z|	; CHW::ReadDMA
	IMPORT	|?AcquireDMAChannel@CHW@@QAAEPAVCPipe@@@Z| ; CHW::AcquireDMAChannel
	IMPORT	|?CheckRxCSR@CHW@@QAAKE@Z|		; CHW::CheckRxCSR
	IMPORT	|__rt_udiv|
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.h

  00000			 AREA	 |.pdata|, PDATA
|$T43042| DCD	|$LN109@ReadDataIN|
	DCD	0x4000b302

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@FDEEAPGH@?$AAD?$AAM?$AAA?$AA?5?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?0?$AA?5?$AAu?$AAs?$AAe?$AA?5?$AAF?$AAI?$AAF?$AAO?$AA?5?$AAt?$AAo?$AA?5@| DCB "D"
	DCB	0x0, "M", 0x0, "A", 0x0, " ", 0x0, "C", 0x0, "h", 0x0, "a"
	DCB	0x0, "n", 0x0, "n", 0x0, "e", 0x0, "l", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "u", 0x0, "s", 0x0, "e", 0x0, " ", 0x0, "F"
	DCB	0x0, "I", 0x0, "F", 0x0, "O", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\musb\musbhcd\musbmhdrc\ctd.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ReadDataIN@CQTD@@QAAKPAK@Z| PROC	; CQTD::ReadDataIN

; 76   : {

  00000		 |$LN109@ReadDataIN|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd024	 sub         sp, sp, #0x24
  00008		 |$M43039|
  00008	e1a09001	 mov         r9, r1
  0000c	e1a06000	 mov         r6, r0

; 77   :     PHSMUSB_T pOTG;
; 78   :     CPipe *pPipe = m_pQh->GetPipe();            

  00010	e5963004	 ldr         r3, [r6, #4]

; 79   :     BYTE *pvData;
; 80   :     BYTE *ppData;
; 81   :     DWORD dwData;
; 82   :     DWORD count;
; 83   :     int iRetSize = 0;
; 84   :     DWORD dwError = USB_NO_ERROR;    
; 85   :     BOOL fClearRxPkt = TRUE;
; 86   :     DWORD status = GetStatus();

  00014	e596a028	 ldr         r10, [r6, #0x28]
  00018	e3a02000	 mov         r2, #0
  0001c	e5933000	 ldr         r3, [r3]

; 87   : 
; 88   :     
; 89   :     *pdwMore = MUSB_READ_SUCCESS;

  00020	e3a01000	 mov         r1, #0
  00024	e58d2014	 str         r2, [sp, #0x14]
  00028	e1b07003	 movs        r7, r3
  0002c	e5891000	 str         r1, [r9]

; 90   :     if (!pPipe)

  00030	0a000030	 beq         |$LN106@ReadDataIN|

; 91   :     {
; 92   :         DEBUGMSG(ZONE_ERROR, (TEXT("CQTD::ReadDataIN -> not able to read the associated pipe\r\n")));        
; 93   :         goto READ_EXIT;
; 94   :     }
; 95   :     pOTG = (PHSMUSB_T)pPipe->m_pCMhcd->GetOTGContext();

  00034	e597000c	 ldr         r0, [r7, #0xC]
  00038	e59030b0	 ldr         r3, [r0, #0xB0]
  0003c	e1b0b003	 movs        r11, r3

; 96   :     if (pOTG == NULL)

  00040	0a00002c	 beq         |$LN106@ReadDataIN|

; 97   :     {
; 98   :         DEBUGMSG(ZONE_ERROR, (TEXT("CQTD::ReadDataIN: Get pOTG failed\r\n")));        
; 99   :         goto READ_EXIT;
; 100  :     }
; 101  : 
; 102  :     pvData = (BYTE *)GetVAData();
; 103  :     pvData = pvData + GetTotTfrSize();
; 104  :     ppData = (BYTE *)GetPAData();
; 105  :     ppData = ppData + GetTotTfrSize();
; 106  :     dwData = GetDataSize() - GetTotTfrSize();
; 107  : 
; 108  :     UCHAR endpoint = pPipe->GetMappedEndPoint();       

  00044	e5963014	 ldr         r3, [r6, #0x14]
  00048	e596e01c	 ldr         lr, [r6, #0x1C]
  0004c	e5d75058	 ldrb        r5, [r7, #0x58]
  00050	e58d3020	 str         r3, [sp, #0x20]
  00054	e5963010	 ldr         r3, [r6, #0x10]
  00058	e5962018	 ldr         r2, [r6, #0x18]

; 109  : 
; 110  :     DEBUGMSG(ZONE_HCD, (TEXT("Total=%d, Start=%d, Remain=%d\r\n"), GetDataSize(), GetTotTfrSize(), dwData));
; 111  :     DEBUGMSG(ZONE_HCD, (TEXT("ReadDataIN: Total=%d, Start=%d, Remain=%d, CurTfrSize=%d\r\n"), 
; 112  :         GetDataSize(), GetTotTfrSize(), dwData, GetCurTfrSize()));
; 113  : 
; 114  :     dwError = pPipe->m_pCMhcd->CheckRxCSR(endpoint);

  0005c	e1a01005	 mov         r1, r5
  00060	e08e3003	 add         r3, lr, r3
  00064	e58d3018	 str         r3, [sp, #0x18]
  00068	e5cd5010	 strb        r5, [sp, #0x10]
  0006c	e58de01c	 str         lr, [sp, #0x1C]
  00070	e042800e	 sub         r8, r2, lr
  00074	eb000000	 bl          |?CheckRxCSR@CHW@@QAAKE@Z|
  00078	e1b04000	 movs        r4, r0

; 115  :     if (dwError != USB_NO_ERROR)
; 116  :     {
; 117  :         DEBUGMSG(ZONE_ERROR, (TEXT("Failed in checkRxCSR\r\n")));
; 118  :         SetCurTfrSize(0);

  0007c	13a03000	 movne       r3, #0
  00080	15863020	 strne       r3, [r6, #0x20]
  00084	1a00001e	 bne         |$LN28@ReadDataIN|

; 119  :         return dwError;
; 120  :     }
; 121  :     // Read the FIFO now
; 122  :     if ((pPipe->GetTransferMode() != TRANSFER_FIFO) && (pPipe->GetTransferType() != USB_ENDPOINT_TYPE_CONTROL) && (dwData != 0))

  00088	e5d73014	 ldrb        r3, [r7, #0x14]
  0008c	e3530000	 cmp         r3, #0
  00090	0a000027	 beq         |$PROCESS_READ_FIFO$41919|
  00094	e5973000	 ldr         r3, [r7]
  00098	e1a00007	 mov         r0, r7
  0009c	e593303c	 ldr         r3, [r3, #0x3C]
  000a0	e1a0e00f	 mov         lr, pc
  000a4	e12fff13	 bx          r3
  000a8	e3500000	 cmp         r0, #0
  000ac	0a000020	 beq         |$PROCESS_READ_FIFO$41919|
  000b0	e3580000	 cmp         r8, #0
  000b4	0a00001e	 beq         |$PROCESS_READ_FIFO$41919|

; 123  :     {
; 124  :         if (status == STATUS_WAIT_RESPONSE)

  000b8	e35a0003	 cmp         r10, #3
  000bc	1a00004a	 bne         |$LN21@ReadDataIN|

; 125  :         {
; 126  :         	DWORD dwCount;
; 127  : 			UCHAR csrIndex = INDEX(endpoint);
; 128  : 			dwCount = INREG16(&pOTG->pUsbCsrRegs->ep[csrIndex].Count.RxCount);

  000c0	e59b201c	 ldr         r2, [r11, #0x1C]
  000c4	e205300f	 and         r3, r5, #0xF
  000c8	e0823203	 add         r3, r2, r3, lsl #4
  000cc	e5d32008	 ldrb        r2, [r3, #8]
  000d0	e5d33009	 ldrb        r3, [r3, #9]
  000d4	e1923403	 orrs        r3, r2, r3, lsl #8

; 129  : 			if (dwCount == 0){

  000d8	1a00000d	 bne         |$LN20@ReadDataIN|

; 130  : //                RETAILMSG(1, (L"CQTD::ReadDataIN ZERO_LENGTH PACKET\r\n"));
; 131  : 				SetCurTfrSize(GetDataSize() - GetTotTfrSize());

  000dc	e5961018	 ldr         r1, [r6, #0x18]
  000e0	e596301c	 ldr         r3, [r6, #0x1C]

; 132  : 				SetTotTfrSize(GetTotTfrSize() + (DWORD)GetCurTfrSize());

  000e4	e1a02003	 mov         r2, r3
  000e8	e0411003	 sub         r1, r1, r3
  000ec	e0813002	 add         r3, r1, r2
  000f0	e586301c	 str         r3, [r6, #0x1C]
  000f4	e5861020	 str         r1, [r6, #0x20]
  000f8		 |$LN106@ReadDataIN|

; 230  :         ClearRxPktRdy();

  000f8	e1a00006	 mov         r0, r6
  000fc	eb000000	 bl          |?ClearRxPktRdy@CQTD@@QAAXXZ|
  00100		 |$LN1@ReadDataIN|

; 231  :     return USB_NO_ERROR;

  00100	e3a04000	 mov         r4, #0
  00104		 |$LN28@ReadDataIN|

; 232  : }

  00104	e1a00004	 mov         r0, r4
  00108	e28dd024	 add         sp, sp, #0x24
  0010c	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00110	e12fff1e	 bx          lr
  00114		 |$LN20@ReadDataIN|

; 133  : 				goto READ_EXIT;
; 134  : 			}
; 135  : 			
; 136  : 		
; 137  :             // Actually need to check if the RxCSR has error
; 138  :             UCHAR channel = pPipe->m_pCMhcd->AcquireDMAChannel(pPipe);

  00114	e597000c	 ldr         r0, [r7, #0xC]
  00118	e1a01007	 mov         r1, r7
  0011c	eb000000	 bl          |?AcquireDMAChannel@CHW@@QAAEPAVCPipe@@@Z|
  00120	e1a05000	 mov         r5, r0

; 139  :             if (channel == 0xff) // Not able to get the DMA channel, use FIFO instead.

  00124	e35500ff	 cmp         r5, #0xFF
  00128	1a000013	 bne         |$LN18@ReadDataIN|

; 140  :             {
; 141  :                 RETAILMSG(1, (TEXT("DMA Channel failed, use FIFO to read\r\n")));

  0012c	e59f0194	 ldr         r0, [pc, #0x194]
  00130	eb000000	 bl          NKDbgPrintfW
  00134		 |$PROCESS_READ_FIFO$41919|

; 171  :     {
; 172  : PROCESS_READ_FIFO:
; 173  :         DEBUGMSG(ZONE_TRANSFER, (TEXT("Read FIFO for MappedEP %d start\r\n"), USB_ENDPOINT(endpoint)));
; 174  :         dwError = pPipe->m_pCMhcd->ReadFIFO((void *)pOTG, endpoint, (void *)pvData, dwData, &iRetSize);

  00134	e597000c	 ldr         r0, [r7, #0xC]
  00138	e59d301c	 ldr         r3, [sp, #0x1C]
  0013c	e59d2020	 ldr         r2, [sp, #0x20]
  00140	e590e000	 ldr         lr, [r0]
  00144	e28d5014	 add         r5, sp, #0x14
  00148	e0833002	 add         r3, r3, r2
  0014c	e59e405c	 ldr         r4, [lr, #0x5C]
  00150	e5dd2010	 ldrb        r2, [sp, #0x10]
  00154	e1a0100b	 mov         r1, r11
  00158	e58d5004	 str         r5, [sp, #4]
  0015c	e58d8000	 str         r8, [sp]
  00160	e1a0e00f	 mov         lr, pc
  00164	e12fff14	 bx          r4
  00168	e1b04000	 movs        r4, r0

; 175  :         if (dwError == USB_NO_ERROR)

  0016c	1a00002f	 bne         |$LN9@ReadDataIN|

; 176  :         {
; 177  :             SetCurTfrSize(iRetSize);            

  00170	e59d3014	 ldr         r3, [sp, #0x14]
  00174	e5863020	 str         r3, [r6, #0x20]

; 178  :         }
; 179  :         else

  00178	ea000030	 b           |$LN7@ReadDataIN|
  0017c		 |$LN18@ReadDataIN|

; 142  :                 goto PROCESS_READ_FIFO;
; 143  :             }
; 144  : 
; 145  : 
; 146  :             if (pPipe->GetTransferMode() == TRANSFER_DMA1)

  0017c	e5d73014	 ldrb        r3, [r7, #0x14]
  00180	e3530002	 cmp         r3, #2
  00184	1a000009	 bne         |$LN16@ReadDataIN|

; 147  :             {
; 148  :                 // This is a hack as mode 1 not working well.
; 149  :                 if ((dwData % GetPacketSize() == 0) && (dwData > GetPacketSize()))

  00188	e596402c	 ldr         r4, [r6, #0x2C]
  0018c	e1a01008	 mov         r1, r8
  00190	e1a00004	 mov         r0, r4
  00194	eb000000	 bl          __rt_udiv
  00198	e3510000	 cmp         r1, #0
  0019c	1a000004	 bne         |$LN14@ReadDataIN|
  001a0	e1580004	 cmp         r8, r4
  001a4	9a000002	 bls         |$LN14@ReadDataIN|

; 150  :                     dwData = dwData - 8; // Just minus 8 bytes i.e. it would have the last packet ACK

  001a8	e2488008	 sub         r8, r8, #8

; 151  :             }
; 152  :             else

  001ac	ea000000	 b           |$LN14@ReadDataIN|
  001b0		 |$LN16@ReadDataIN|

; 153  :                 dwData = GetPacketSize();

  001b0	e596802c	 ldr         r8, [r6, #0x2C]
  001b4		 |$LN14@ReadDataIN|

; 154  : 
; 155  :             *pdwMore = MUSB_WAIT_DMA_COMPLETE;

  001b4	e3a03002	 mov         r3, #2
  001b8	e5893000	 str         r3, [r9]

; 156  :             count = pPipe->m_pCMhcd->ReadDMA((void *)pOTG, endpoint, channel, 
; 157  :                          (void *)ppData, dwData, GetPacketSize(), this);       

  001bc	e596e02c	 ldr         lr, [r6, #0x2C]
  001c0	e597000c	 ldr         r0, [r7, #0xC]
  001c4	e5dd2010	 ldrb        r2, [sp, #0x10]
  001c8	e58de008	 str         lr, [sp, #8]
  001cc	e59de018	 ldr         lr, [sp, #0x18]
  001d0	e1a03005	 mov         r3, r5
  001d4	e1a0100b	 mov         r1, r11
  001d8	e58de000	 str         lr, [sp]
  001dc	e58d600c	 str         r6, [sp, #0xC]
  001e0	e58d8004	 str         r8, [sp, #4]
  001e4	eb000000	 bl          |?ReadDMA@CHW@@QAAKPAXEE0KKPAVCQTD@@@Z|

; 158  :             return USB_NO_ERROR;

  001e8	eaffffc4	 b           |$LN1@ReadDataIN|
  001ec		 |$LN21@ReadDataIN|

; 159  :         }
; 160  :         else if ((status == STATUS_WAIT_DMA_0_RD_FIFO_COMPLETE) ||
; 161  :             (status == STATUS_WAIT_DMA_1_RD_FIFO_COMPLETE))

  001ec	e35a000a	 cmp         r10, #0xA
  001f0	0a000001	 beq         |$LN11@ReadDataIN|
  001f4	e35a000b	 cmp         r10, #0xB
  001f8	1a000010	 bne         |$LN7@ReadDataIN|
  001fc		 |$LN11@ReadDataIN|

; 162  :         {           
; 163  :             UCHAR channel = pPipe->m_pCMhcd->DeviceInfo2Channel(pPipe);                

  001fc	e597000c	 ldr         r0, [r7, #0xC]
  00200	e1a01007	 mov         r1, r7
  00204	eb000000	 bl          |?DeviceInfo2Channel@CHW@@QAAEPAVCPipe@@@Z|
  00208	e1a02000	 mov         r2, r0

; 164  :             dwError = pPipe->m_pCMhcd->CheckDMAResult((void *)pOTG, channel);

  0020c	e597000c	 ldr         r0, [r7, #0xC]
  00210	e1a0100b	 mov         r1, r11
  00214	eb000000	 bl          |?CheckDMAResult@CHW@@QAAKPAXE@Z|
  00218	e1a04000	 mov         r4, r0

; 165  :             DEBUGMSG(ZONE_HCD, (TEXT("DMA IN success with status(0x%x), channel(0x%x), endpoint(%d)\r\n"),
; 166  :                 status, channel, USB_ENDPOINT(endpoint)));
; 167  :             pPipe->m_pCMhcd->RestoreRxConfig((void *)pOTG, endpoint);            

  0021c	e597000c	 ldr         r0, [r7, #0xC]
  00220	e1a02005	 mov         r2, r5
  00224	e1a0100b	 mov         r1, r11
  00228	eb000000	 bl          |?RestoreRxConfig@CHW@@QAAHPAXE@Z|

; 168  :         }
; 169  :     }
; 170  :     else

  0022c	ea000001	 b           |$LN80@ReadDataIN|
  00230		 |$LN9@ReadDataIN|

; 180  :         {
; 181  :             SetCurTfrSize(0);

  00230	e3a03000	 mov         r3, #0
  00234	e5863020	 str         r3, [r6, #0x20]
  00238		 |$LN80@ReadDataIN|

; 182  :         }
; 183  :         DEBUGMSG(ZONE_HCD, (TEXT("Read FIFO for mapped EP %d success return size %d\r\n"), 
; 184  :             USB_ENDPOINT(endpoint), iRetSize));
; 185  :     }
; 186  :     if (dwError != USB_NO_ERROR)

  00238	e3540000	 cmp         r4, #0

; 187  :     {        
; 188  :         DEBUGMSG(1, (TEXT("ReadFIFO error which suppose to read total %d bytes error 0x%x\r\n"), GetDataSize(), dwError));
; 189  :         return dwError;

  0023c	1affffb0	 bne         |$LN28@ReadDataIN|
  00240		 |$LN7@ReadDataIN|

; 190  :     }
; 191  :     
; 192  :     SetTotTfrSize(GetTotTfrSize() + (DWORD)GetCurTfrSize());

  00240	e5962020	 ldr         r2, [r6, #0x20]
  00244	e596301c	 ldr         r3, [r6, #0x1C]

; 193  :     // Control endpoint (message type), we can use exactly data buffer to wait
; 194  :     // It seems that it doesn't send out zero data length to you ...
; 195  :     // so, you should just check the data size.
; 196  :     // transfer should be considered complete when short packets and zero length packets
; 197  :     if (!((GetTotTfrSize() >= GetDataSize()) || (GetCurTfrSize() < GetPacketSize())))

  00248	e5961018	 ldr         r1, [r6, #0x18]
  0024c	e0823003	 add         r3, r2, r3
  00250	e586301c	 str         r3, [r6, #0x1C]
  00254	e1530001	 cmp         r3, r1
  00258	2a000003	 bcs         |$LN6@ReadDataIN|
  0025c	e596302c	 ldr         r3, [r6, #0x2C]
  00260	e1520003	 cmp         r2, r3

; 198  :       *pdwMore = MUSB_READ_MORE_DATA;

  00264	23a03001	 movcs       r3, #1
  00268	25893000	 strcs       r3, [r9]
  0026c		 |$LN6@ReadDataIN|

; 199  : 
; 200  :     // For mode 1, we need to check and see if there is more data
; 201  :     if ((pPipe->GetTransferMode() != TRANSFER_FIFO) && (status == STATUS_WAIT_DMA_1_RD_FIFO_COMPLETE))

  0026c	e5d73014	 ldrb        r3, [r7, #0x14]
  00270	e3530000	 cmp         r3, #0
  00274	0affff9f	 beq         |$LN106@ReadDataIN|
  00278	e35a000b	 cmp         r10, #0xB
  0027c	1affff9d	 bne         |$LN106@ReadDataIN|

; 202  :     {
; 203  :         // Don't clear the RxPktRdy in case of RD 1 mode as it is auto clear already.
; 204  :         fClearRxPkt = FALSE;
; 205  : 
; 206  :         // No need to worry about the RxCount at this point, since the DMA is too fast.
; 207  :         // Just set data available and let the IssueTransfer check if RxCount.
; 208  :         if (*pdwMore == MUSB_READ_MORE_DATA) // there is residue data, need to DMA again with mode 0

  00280	e5993000	 ldr         r3, [r9]
  00284	e3530001	 cmp         r3, #1
  00288	1a000005	 bne         |$LN4@ReadDataIN|

; 209  :         {                 
; 210  :             SetStatus(STATUS_WAIT_RESPONSE);

  0028c	e3a03003	 mov         r3, #3

; 211  :             ReadDataIN(pdwMore);            

  00290	e1a01009	 mov         r1, r9
  00294	e1a00006	 mov         r0, r6
  00298	e5863028	 str         r3, [r6, #0x28]
  0029c	eb000000	 bl          |?ReadDataIN@CQTD@@QAAKPAK@Z|

; 212  :             DEBUGMSG( ZONE_HCD|ZONE_DEBUG, (TEXT("Read the last block of data for ep %d, mapped %d\r\n"), 
; 213  :                 USB_ENDPOINT(endpoint), USB_ENDPOINT(pPipe->GetMappedEndPoint())));
; 214  :         }
; 215  :         else // Check and see if there is any thing inside the FIFO

  002a0	eaffff96	 b           |$LN1@ReadDataIN|
  002a4		 |$LN4@ReadDataIN|

; 216  :         {
; 217  :             pPipe->m_pCMhcd->SetRxDataAvail(USB_ENDPOINT(endpoint));

  002a4	e5dd2010	 ldrb        r2, [sp, #0x10]
  002a8	e597300c	 ldr         r3, [r7, #0xC]
  002ac	e3a00001	 mov         r0, #1
  002b0	e202100f	 and         r1, r2, #0xF
  002b4	e2832c02	 add         r2, r3, #2, 24
  002b8	e1d237ba	 ldrh        r3, [r2, #0x7A]
  002bc		 |$READ_EXIT$41895|
  002bc	e1833110	 orr         r3, r3, r0, lsl r1
  002c0	e1c237ba	 strh        r3, [r2, #0x7A]

; 218  :             DEBUGMSG(ZONE_HCD, (TEXT("DataAvail(%d) = 0x%x\r\n"), USB_ENDPOINT(endpoint), 
; 219  :                     pPipe->m_pCMhcd->GetRxDataAvail(USB_ENDPOINT(endpoint))));        
; 220  :         }
; 221  :     }
; 222  :     
; 223  :     DEBUGMSG(ZONE_HCD, (TEXT("DataBuffer(0x%x), TfrSze(0x%x), Receive(0x%x), PacketSize(0x%x)\r\n"), 
; 224  :         GetDataSize(),GetTotTfrSize(), iRetSize, GetPacketSize()));
; 225  :     if (GetTotTfrSize() > GetDataSize())
; 226  :         DEBUGMSG(ZONE_ERROR, (TEXT("Something wrong: receive more data than expected\r\n")));
; 227  : 
; 228  : READ_EXIT:
; 229  :     if (fClearRxPkt) 

  002c4	eaffff8d	 b           |$LN1@ReadDataIN|
  002c8		 |$LN110@ReadDataIN|
  002c8		 |$LN111@ReadDataIN|
  002c8	00000000	 DCD         |??_C@_1EO@FDEEAPGH@?$AAD?$AAM?$AAA?$AA?5?$AAC?$AAh?$AAa?$AAn?$AAn?$AAe?$AAl?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?0?$AA?5?$AAu?$AAs?$AAe?$AA?5?$AAF?$AAI?$AAF?$AAO?$AA?5?$AAt?$AAo?$AA?5@|
  002cc		 |$M43040|

			 ENDP  ; |?ReadDataIN@CQTD@@QAAKPAK@Z|, CQTD::ReadDataIN

	END
