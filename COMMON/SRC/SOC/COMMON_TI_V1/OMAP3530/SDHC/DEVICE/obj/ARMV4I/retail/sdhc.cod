; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\OMAP3530\SDHC\sdhc.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|SocSdhcDevconf|
	IMPORT	|MmUnmapIoSpace|
	IMPORT	|Sleep|
	IMPORT	|MmMapIoSpace|
	IMPORT	|KernelIoControl|
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\sdhc\sdhc.c

  00000			 AREA	 |.pdata|, PDATA
|$T46324| DCD	|$LN21@SocSdhcDev|
	DCD	0x40004102
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SocSdhcDevconf| PROC

; 36   : {

  00000		 |$LN21@SocSdhcDev|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M46321|
  00008	e1a05000	 mov         r5, r0

; 37   :     OMAP_SYSC_GENERAL_REGS* pSyscGeneralRegs = NULL;
; 38   : 	DWORD dwCPURev = (DWORD)CPU_REVISION_UNKNOWN;
; 39   : 
; 40   : #ifdef BOOT_MODE
; 41   : 	dwCPURev = m_dwCPURev;
; 42   :     pSyscGeneralRegs = OALPAtoUA(OMAP_SYSC_GENERAL_REGS_PA);
; 43   : #else
; 44   : 	
; 45   : 	PHYSICAL_ADDRESS pa;
; 46   : 	pa.QuadPart = (LONGLONG)OMAP_SYSC_GENERAL_REGS_PA;
; 47   : 
; 48   : 	// Retrieve CPU revision
; 49   : 	KernelIoControl(IOCTL_HAL_GET_CPUREVISION, NULL, 0, &dwCPURev, sizeof(dwCPURev), NULL);

  0000c	e59f00ec	 ldr         r0, [pc, #0xEC]
  00010	e3e0e000	 mvn         lr, #0
  00014	e3a04000	 mov         r4, #0
  00018	e3a06004	 mov         r6, #4
  0001c	e28d3008	 add         r3, sp, #8
  00020	e3a02000	 mov         r2, #0
  00024	e3a01000	 mov         r1, #0
  00028	e58de008	 str         lr, [sp, #8]
  0002c	e58d4004	 str         r4, [sp, #4]
  00030	e58d6000	 str         r6, [sp]
  00034	eb000000	 bl          KernelIoControl

; 50   : 
; 51   : 	// Map the System Control Module registers
; 52   : 	pSyscGeneralRegs = (OMAP_SYSC_GENERAL_REGS*)MmMapIoSpace(pa, sizeof(OMAP_SYSC_GENERAL_REGS), FALSE);

  00038	e59f00bc	 ldr         r0, [pc, #0xBC]
  0003c	e3a03000	 mov         r3, #0
  00040	e3a02fb5	 mov         r2, #0xB5, 30
  00044	e3a01000	 mov         r1, #0
  00048	eb000000	 bl          MmMapIoSpace
  0004c	e1b04000	 movs        r4, r0

; 53   : 	if (pSyscGeneralRegs == NULL)

  00050	0a000026	 beq         |$LN14@SocSdhcDev|

; 54   : 	{
; 55   : 		return;
; 56   : 	}
; 57   : #endif
; 58   :  
; 59   :     // prepare power change
; 60   :     if (dwSlot == MMCSLOT_1)

  00054	e3550001	 cmp         r5, #1
  00058	1a000011	 bne         |$LN12@SocSdhcDev|

; 61   :     {
; 62   :         // Make sure VDDS stable bit is cleared before enabling the power for slot1
; 63   : 		CLRREG32(&pSyscGeneralRegs->CONTROL_PBIAS_LITE, (PBIASLITEVMODE0|PBIASLITEPWRDNZ0));

  0005c	e59432b0	 ldr         r3, [r4, #0x2B0]
  00060	e3c33003	 bic         r3, r3, #3
  00064	e58432b0	 str         r3, [r4, #0x2B0]

; 68   : 		CLRREG32(&pSyscGeneralRegs->CONTROL_DEVCONF1, DEVCONF1_MMCSDIO2ADPCLKISEL);
; 69   :     }
; 70   : 
; 71   :     // post power change    
; 72   :     if (dwSlot == MMCSLOT_1)
; 73   :     {
; 74   :         UINT32 dwPBiasValue = DEFAULT_PBIAS_VALUE;
; 75   : 
; 76   :         if (dwCPURev == 1)   // ES 1.0

  00068	e59d3008	 ldr         r3, [sp, #8]
  0006c	e3530001	 cmp         r3, #1

; 77   : 		{
; 78   :             dwPBiasValue = (PBIASLITEVMODE0|PBIASLITEPWRDNZ0);

  00070	0a000002	 beq         |$LN6@SocSdhcDev|

; 79   : 		}
; 80   :         else if (dwCPURev == 2) // ES 2.0

  00074	e3530002	 cmp         r3, #2

; 81   : 		{
; 82   :             dwPBiasValue = PBIASLITEPWRDNZ0;

  00078	03a05002	 moveq       r5, #2
  0007c	0a000000	 beq         |$LN4@SocSdhcDev|
  00080		 |$LN6@SocSdhcDev|

; 83   : 		}
; 84   :         else if (dwCPURev == 3) // ES 2.1

  00080	e3a05003	 mov         r5, #3
  00084		 |$LN4@SocSdhcDev|

; 85   : 		{
; 86   : #ifdef MMCHS1_LOW_VOLTAGE
; 87   :             dwPBiasValue = PBIASLITEPWRDNZ0;
; 88   : #else
; 89   : 			dwPBiasValue = (PBIASLITEVMODE0|PBIASLITEPWRDNZ0);
; 90   : #endif
; 91   : 		}
; 92   :         else
; 93   : 		{
; 94   :             dwPBiasValue = DEFAULT_PBIAS_VALUE;
; 95   : 		}
; 96   : 
; 97   : #ifdef BOOT_MODE
; 98   :         OALStall(100 * 1000);
; 99   : #else
; 100  : 		Sleep(100);	

  00084	e3a00064	 mov         r0, #0x64
  00088	eb000000	 bl          Sleep

; 101  : #endif
; 102  :         // Workaround to make the MMC slot 1 work
; 103  : 		SETREG32(&pSyscGeneralRegs->CONTROL_PBIAS_LITE, dwPBiasValue);

  0008c	e59432b0	 ldr         r3, [r4, #0x2B0]

; 104  : 		SETREG32(&pSyscGeneralRegs->CONTROL_DEVCONF1, (1 << 24));	// Undocumented bit in the datasheet

  00090	e1833005	 orr         r3, r3, r5
  00094	e58432b0	 str         r3, [r4, #0x2B0]
  00098	e5943068	 ldr         r3, [r4, #0x68]
  0009c	e3833401	 orr         r3, r3, #1, 8
  000a0	ea00000e	 b           |$LN18@SocSdhcDev|
  000a4		 |$LN12@SocSdhcDev|

; 64   :     } 
; 65   :     else if (dwSlot == MMCSLOT_2)

  000a4	e3550002	 cmp         r5, #2
  000a8	1a00000d	 bne         |$LN1@SocSdhcDev|

; 66   :     {
; 67   : 		CLRREG32(&pSyscGeneralRegs->CONTROL_PBIAS_LITE, PBIASLITEPWRDNZ0);

  000ac	e59432b0	 ldr         r3, [r4, #0x2B0]

; 105  :     }
; 106  :     else if (dwSlot == MMCSLOT_2)
; 107  :     {
; 108  : #ifdef BOOT_MODE
; 109  :         OALStall(100 * 1000);
; 110  : #else
; 111  : 		Sleep(100);	

  000b0	e3a00064	 mov         r0, #0x64
  000b4	e3c33002	 bic         r3, r3, #2
  000b8	e58432b0	 str         r3, [r4, #0x2B0]
  000bc	e5943068	 ldr         r3, [r4, #0x68]
  000c0	e3c33040	 bic         r3, r3, #0x40
  000c4	e5843068	 str         r3, [r4, #0x68]
  000c8	eb000000	 bl          Sleep

; 112  : #endif
; 113  : 		SETREG32(&pSyscGeneralRegs->CONTROL_PBIAS_LITE, PBIASLITEPWRDNZ0);

  000cc	e59432b0	 ldr         r3, [r4, #0x2B0]
  000d0	e3833002	 orr         r3, r3, #2
  000d4	e58432b0	 str         r3, [r4, #0x2B0]

; 114  : 		SETREG32(&pSyscGeneralRegs->CONTROL_DEVCONF1, DEVCONF1_MMCSDIO2ADPCLKISEL);

  000d8	e5943068	 ldr         r3, [r4, #0x68]
  000dc	e3833040	 orr         r3, r3, #0x40
  000e0		 |$LN18@SocSdhcDev|
  000e0	e5843068	 str         r3, [r4, #0x68]
  000e4		 |$LN1@SocSdhcDev|

; 115  :     }
; 116  : 
; 117  : #ifndef BOOT_MODE
; 118  :     MmUnmapIoSpace((PVOID)pSyscGeneralRegs, sizeof(OMAP_SYSC_GENERAL_REGS));

  000e4	e3a01fb5	 mov         r1, #0xB5, 30
  000e8	e1a00004	 mov         r0, r4
  000ec	eb000000	 bl          MmUnmapIoSpace
  000f0		 |$LN14@SocSdhcDev|

; 119  : #endif
; 120  : }

  000f0	e28dd00c	 add         sp, sp, #0xC
  000f4	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000f8	e12fff1e	 bx          lr
  000fc		 |$LN22@SocSdhcDev|
  000fc		 |$LN23@SocSdhcDev|
  000fc	48002270	 DCD         0x48002270
  00100		 |$LN24@SocSdhcDev|
  00100	01012010	 DCD         0x1012010
  00104		 |$M46322|

			 ENDP  ; |SocSdhcDevconf|

	END
