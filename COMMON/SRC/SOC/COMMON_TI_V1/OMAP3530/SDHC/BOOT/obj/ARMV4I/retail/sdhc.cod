; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\OMAP3530\SDHC\sdhc.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|SocSdhcDevconf|
	IMPORT	|OALStall|
	IMPORT	|OALPAtoVA|
	IMPORT	|m_dwCPURev|
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\sdhc\sdhc.c

  00000			 AREA	 |.pdata|, PDATA
|$T46313| DCD	|$LN20@SocSdhcDev|
	DCD	0x40003101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SocSdhcDevconf| PROC

; 36   : {

  00000		 |$LN20@SocSdhcDev|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M46310|
  00004	e1a06000	 mov         r6, r0

; 37   :     OMAP_SYSC_GENERAL_REGS* pSyscGeneralRegs = NULL;
; 38   : 	DWORD dwCPURev = (DWORD)CPU_REVISION_UNKNOWN;
; 39   : 
; 40   : #ifdef BOOT_MODE
; 41   : 	dwCPURev = m_dwCPURev;

  00008	e59f30b0	 ldr         r3, [pc, #0xB0]

; 42   :     pSyscGeneralRegs = OALPAtoUA(OMAP_SYSC_GENERAL_REGS_PA);

  0000c	e59f00a8	 ldr         r0, [pc, #0xA8]
  00010	e3a01000	 mov         r1, #0
  00014	e5935000	 ldr         r5, [r3]
  00018	eb000000	 bl          OALPAtoVA
  0001c	e1a04000	 mov         r4, r0

; 43   : #else
; 44   : 	
; 45   : 	PHYSICAL_ADDRESS pa;
; 46   : 	pa.QuadPart = (LONGLONG)OMAP_SYSC_GENERAL_REGS_PA;
; 47   : 
; 48   : 	// Retrieve CPU revision
; 49   : 	KernelIoControl(IOCTL_HAL_GET_CPUREVISION, NULL, 0, &dwCPURev, sizeof(dwCPURev), NULL);
; 50   : 
; 51   : 	// Map the System Control Module registers
; 52   : 	pSyscGeneralRegs = (OMAP_SYSC_GENERAL_REGS*)MmMapIoSpace(pa, sizeof(OMAP_SYSC_GENERAL_REGS), FALSE);
; 53   : 	if (pSyscGeneralRegs == NULL)
; 54   : 	{
; 55   : 		return;
; 56   : 	}
; 57   : #endif
; 58   :  
; 59   :     // prepare power change
; 60   :     if (dwSlot == MMCSLOT_1)

  00020	e3560001	 cmp         r6, #1
  00024	1a000011	 bne         |$LN12@SocSdhcDev|

; 61   :     {
; 62   :         // Make sure VDDS stable bit is cleared before enabling the power for slot1
; 63   : 		CLRREG32(&pSyscGeneralRegs->CONTROL_PBIAS_LITE, (PBIASLITEVMODE0|PBIASLITEPWRDNZ0));

  00028	e59432b0	 ldr         r3, [r4, #0x2B0]

; 69   :     }
; 70   : 
; 71   :     // post power change    
; 72   :     if (dwSlot == MMCSLOT_1)
; 73   :     {
; 74   :         UINT32 dwPBiasValue = DEFAULT_PBIAS_VALUE;
; 75   : 
; 76   :         if (dwCPURev == 1)   // ES 1.0

  0002c	e3550001	 cmp         r5, #1
  00030	e3c33003	 bic         r3, r3, #3
  00034	e58432b0	 str         r3, [r4, #0x2B0]

; 77   : 		{
; 78   :             dwPBiasValue = (PBIASLITEVMODE0|PBIASLITEPWRDNZ0);

  00038	0a000002	 beq         |$LN6@SocSdhcDev|

; 79   : 		}
; 80   :         else if (dwCPURev == 2) // ES 2.0

  0003c	e3550002	 cmp         r5, #2

; 81   : 		{
; 82   :             dwPBiasValue = PBIASLITEPWRDNZ0;

  00040	03a05002	 moveq       r5, #2
  00044	0a000000	 beq         |$LN4@SocSdhcDev|
  00048		 |$LN6@SocSdhcDev|

; 83   : 		}
; 84   :         else if (dwCPURev == 3) // ES 2.1

  00048	e3a05003	 mov         r5, #3
  0004c		 |$LN4@SocSdhcDev|
  0004c	e3a03b61	 mov         r3, #0x61, 22

; 85   : 		{
; 86   : #ifdef MMCHS1_LOW_VOLTAGE
; 87   :             dwPBiasValue = PBIASLITEPWRDNZ0;
; 88   : #else
; 89   : 			dwPBiasValue = (PBIASLITEVMODE0|PBIASLITEPWRDNZ0);
; 90   : #endif
; 91   : 		}
; 92   :         else
; 93   : 		{
; 94   :             dwPBiasValue = DEFAULT_PBIAS_VALUE;
; 95   : 		}
; 96   : 
; 97   : #ifdef BOOT_MODE
; 98   :         OALStall(100 * 1000);

  00050	e3830e2a	 orr         r0, r3, #0x2A, 28
  00054	eb000000	 bl          OALStall

; 99   : #else
; 100  : 		Sleep(100);	
; 101  : #endif
; 102  :         // Workaround to make the MMC slot 1 work
; 103  : 		SETREG32(&pSyscGeneralRegs->CONTROL_PBIAS_LITE, dwPBiasValue);

  00058	e59432b0	 ldr         r3, [r4, #0x2B0]

; 104  : 		SETREG32(&pSyscGeneralRegs->CONTROL_DEVCONF1, (1 << 24));	// Undocumented bit in the datasheet

  0005c	e1833005	 orr         r3, r3, r5
  00060	e58432b0	 str         r3, [r4, #0x2B0]
  00064	e5943068	 ldr         r3, [r4, #0x68]
  00068	e3833401	 orr         r3, r3, #1, 8
  0006c	ea00000f	 b           |$LN17@SocSdhcDev|
  00070		 |$LN12@SocSdhcDev|

; 64   :     } 
; 65   :     else if (dwSlot == MMCSLOT_2)

  00070	e3560002	 cmp         r6, #2
  00074	1a00000e	 bne         |$LN1@SocSdhcDev|

; 66   :     {
; 67   : 		CLRREG32(&pSyscGeneralRegs->CONTROL_PBIAS_LITE, PBIASLITEPWRDNZ0);

  00078	e59432b0	 ldr         r3, [r4, #0x2B0]

; 68   : 		CLRREG32(&pSyscGeneralRegs->CONTROL_DEVCONF1, DEVCONF1_MMCSDIO2ADPCLKISEL);

  0007c	e3c33002	 bic         r3, r3, #2
  00080	e58432b0	 str         r3, [r4, #0x2B0]
  00084	e5943068	 ldr         r3, [r4, #0x68]
  00088	e3c33040	 bic         r3, r3, #0x40
  0008c	e5843068	 str         r3, [r4, #0x68]
  00090	e3a03b61	 mov         r3, #0x61, 22

; 105  :     }
; 106  :     else if (dwSlot == MMCSLOT_2)
; 107  :     {
; 108  : #ifdef BOOT_MODE
; 109  :         OALStall(100 * 1000);

  00094	e3830e2a	 orr         r0, r3, #0x2A, 28
  00098	eb000000	 bl          OALStall

; 110  : #else
; 111  : 		Sleep(100);	
; 112  : #endif
; 113  : 		SETREG32(&pSyscGeneralRegs->CONTROL_PBIAS_LITE, PBIASLITEPWRDNZ0);

  0009c	e59432b0	 ldr         r3, [r4, #0x2B0]
  000a0	e3833002	 orr         r3, r3, #2
  000a4	e58432b0	 str         r3, [r4, #0x2B0]

; 114  : 		SETREG32(&pSyscGeneralRegs->CONTROL_DEVCONF1, DEVCONF1_MMCSDIO2ADPCLKISEL);

  000a8	e5943068	 ldr         r3, [r4, #0x68]
  000ac	e3833040	 orr         r3, r3, #0x40
  000b0		 |$LN17@SocSdhcDev|
  000b0	e5843068	 str         r3, [r4, #0x68]
  000b4		 |$LN1@SocSdhcDev|

; 115  :     }
; 116  : 
; 117  : #ifndef BOOT_MODE
; 118  :     MmUnmapIoSpace((PVOID)pSyscGeneralRegs, sizeof(OMAP_SYSC_GENERAL_REGS));
; 119  : #endif
; 120  : }

  000b4	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000b8	e12fff1e	 bx          lr
  000bc		 |$LN21@SocSdhcDev|
  000bc		 |$LN22@SocSdhcDev|
  000bc	48002270	 DCD         0x48002270
  000c0		 |$LN23@SocSdhcDev|
  000c0	00000000	 DCD         |m_dwCPURev|
  000c4		 |$M46311|

			 ENDP  ; |SocSdhcDevconf|

	END
