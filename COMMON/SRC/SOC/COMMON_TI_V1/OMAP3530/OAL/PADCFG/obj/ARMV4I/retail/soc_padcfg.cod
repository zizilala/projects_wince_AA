; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\OMAP3530\OAL\PADCFG\soc_padcfg.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.bss|, NOINIT
|g_pPadCfg| %	0x4
|g_pWkupPadCfg| % 0x4

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	IMPORT	|OALPAtoVA|
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\oal\padcfg\soc_padcfg.c

  00000			 AREA	 |.pdata|, PDATA
|$T45683| DCD	|$LN7@MapPadRegi|
	DCD	0x40001501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |MapPadRegisters| PROC

; 22   : {

  00000		 |$LN7@MapPadRegi|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M45680|

; 23   :     if (g_pPadCfg == NULL)

  00004	e59f4044	 ldr         r4, [pc, #0x44]
  00008	e5943000	 ldr         r3, [r4]
  0000c	e3530000	 cmp         r3, #0
  00010	1a000003	 bne         |$LN2@MapPadRegi|

; 24   :     {
; 25   :         g_pPadCfg = OALPAtoUA(OMAP_SYSC_PADCONFS_REGS_PA);

  00014	e59f0030	 ldr         r0, [pc, #0x30]
  00018	e3a01000	 mov         r1, #0
  0001c	eb000000	 bl          OALPAtoVA
  00020	e5840000	 str         r0, [r4]
  00024		 |$LN2@MapPadRegi|

; 26   :     }
; 27   :     
; 28   :     if (g_pWkupPadCfg == NULL)

  00024	e5943004	 ldr         r3, [r4, #4]
  00028	e3530000	 cmp         r3, #0
  0002c	1a000004	 bne         |$LN1@MapPadRegi|
  00030	e3a03312	 mov         r3, #0x12, 6

; 29   :     {
; 30   :         g_pWkupPadCfg = OALPAtoUA(OMAP_SYSC_PADCONFS_WKUP_REGS_PA);

  00034	e3830c2a	 orr         r0, r3, #0x2A, 24
  00038	e3a01000	 mov         r1, #0
  0003c	eb000000	 bl          OALPAtoVA
  00040	e5840004	 str         r0, [r4, #4]
  00044		 |$LN1@MapPadRegi|

; 31   :     }
; 32   : }

  00044	e8bd4010	 ldmia       sp!, {r4, lr}
  00048	e12fff1e	 bx          lr
  0004c		 |$LN8@MapPadRegi|
  0004c		 |$LN9@MapPadRegi|
  0004c	48002030	 DCD         0x48002030
  00050		 |$LN10@MapPadRegi|
  00050	00000000	 DCD         |g_pPadCfg|
  00054		 |$M45681|

			 ENDP  ; |MapPadRegisters|

	EXPORT	|SOCSetPadConfig|

  00000			 AREA	 |.pdata|, PDATA
|$T45711| DCD	|$LN18@SOCSetPadC|
	DCD	0x40002f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SOCSetPadConfig| PROC

; 35   : {

  00000		 |$LN18@SOCSetPadC|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M45708|
  00004	e1a05001	 mov         r5, r1
  00008	e1a06000	 mov         r6, r0

; 36   :     UINT16 hwcfg = 0;
; 37   : 
; 38   :     MapPadRegisters();

  0000c	e59f40a4	 ldr         r4, [pc, #0xA4]
  00010	e5940000	 ldr         r0, [r4]
  00014	e3500000	 cmp         r0, #0
  00018	1a000003	 bne         |$LN12@SOCSetPadC|
  0001c	e59f0090	 ldr         r0, [pc, #0x90]
  00020	e3a01000	 mov         r1, #0
  00024	eb000000	 bl          OALPAtoVA
  00028	e5840000	 str         r0, [r4]
  0002c		 |$LN12@SOCSetPadC|
  0002c	e5941004	 ldr         r1, [r4, #4]
  00030	e3510000	 cmp         r1, #0
  00034	1a000006	 bne         |$LN11@SOCSetPadC|
  00038	e3a03312	 mov         r3, #0x12, 6
  0003c	e3830c2a	 orr         r0, r3, #0x2A, 24
  00040	e3a01000	 mov         r1, #0
  00044	eb000000	 bl          OALPAtoVA
  00048	e1a01000	 mov         r1, r0
  0004c	e5940000	 ldr         r0, [r4]
  00050	e5841004	 str         r1, [r4, #4]
  00054		 |$LN11@SOCSetPadC|

; 39   : 
; 40   :     
; 41   :     //Translate config to CONTROL_PADCONF_X format
; 42   :     hwcfg |= (cfg & INPUT_ENABLED)          ?   INPUT_ENABLE : 0;

  00054	e3150001	 tst         r5, #1
  00058	13a0ec01	 movne       lr, #1, 24
  0005c	03a0e000	 moveq       lr, #0

; 43   :     hwcfg |= (cfg & PULL_RESISTOR_ENABLED)  ?   (cfg & PULLUP_RESISTOR) ? PULL_UP : PULL_DOWN : 0;    

  00060	e3150002	 tst         r5, #2
  00064	0a000004	 beq         |$LN9@SOCSetPadC|
  00068	e3150004	 tst         r5, #4
  0006c	13a02018	 movne       r2, #0x18
  00070	1a000002	 bne         |$LN10@SOCSetPadC|
  00074	e3a02008	 mov         r2, #8
  00078	ea000000	 b           |$LN10@SOCSetPadC|
  0007c		 |$LN9@SOCSetPadC|
  0007c	e3a02000	 mov         r2, #0
  00080		 |$LN10@SOCSetPadC|

; 44   :     hwcfg |= ((cfg >> 3) & 0x7) << 0;

  00080	e2053038	 and         r3, r5, #0x38
  00084	e18231a3	 orr         r3, r2, r3, lsr #3
  00088	e183200e	 orr         r2, r3, lr

; 45   :     
; 46   :     //write CONTROL_PADCONF_X. don't worry about the offset it has been checked by upper layers
; 47   :     if (padId < FIRST_WKUP_PAD_INDEX)

  0008c	e3a03c05	 mov         r3, #5, 24
  00090	e3833016	 orr         r3, r3, #0x16
  00094	e1560003	 cmp         r6, r3

; 48   :     {
; 49   :         OUTREG16(&g_pPadCfg[padId],hwcfg);   

  00098	30803086	 addcc       r3, r0, r6, lsl #1

; 50   :     }
; 51   :     else
; 52   :     {
; 53   :         OUTREG16(&g_pWkupPadCfg[padId-FIRST_WKUP_PAD_INDEX],hwcfg);  

  0009c	20463003	 subcs       r3, r6, r3
  000a0	20813083	 addcs       r3, r1, r3, lsl #1
  000a4	e1c320b0	 strh        r2, [r3]

; 54   :     }
; 55   : 
; 56   :     return TRUE;

  000a8	e3a00001	 mov         r0, #1

; 57   : }

  000ac	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000b0	e12fff1e	 bx          lr
  000b4		 |$LN19@SOCSetPadC|
  000b4		 |$LN20@SOCSetPadC|
  000b4	48002030	 DCD         0x48002030
  000b8		 |$LN21@SOCSetPadC|
  000b8	00000000	 DCD         |g_pPadCfg|
  000bc		 |$M45709|

			 ENDP  ; |SOCSetPadConfig|

	EXPORT	|SOCGetPadConfig|

  00000			 AREA	 |.pdata|, PDATA
|$T45735| DCD	|$LN19@SOCGetPadC|
	DCD	0x40003201
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SOCGetPadConfig| PROC

; 59   : {

  00000		 |$LN19@SOCGetPadC|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M45732|
  00004	e1a06001	 mov         r6, r1
  00008	e1a05000	 mov         r5, r0

; 60   :     UINT16 hwcfg;
; 61   :     UINT16 cfg = 0;    
; 62   : 
; 63   :     MapPadRegisters();

  0000c	e59f40b0	 ldr         r4, [pc, #0xB0]
  00010	e5940000	 ldr         r0, [r4]
  00014	e3500000	 cmp         r0, #0
  00018	1a000003	 bne         |$LN13@SOCGetPadC|
  0001c	e59f009c	 ldr         r0, [pc, #0x9C]
  00020	e3a01000	 mov         r1, #0
  00024	eb000000	 bl          OALPAtoVA
  00028	e5840000	 str         r0, [r4]
  0002c		 |$LN13@SOCGetPadC|
  0002c	e5942004	 ldr         r2, [r4, #4]
  00030	e3520000	 cmp         r2, #0
  00034	1a000006	 bne         |$LN12@SOCGetPadC|
  00038	e3a03312	 mov         r3, #0x12, 6
  0003c	e3830c2a	 orr         r0, r3, #0x2A, 24
  00040	e3a01000	 mov         r1, #0
  00044	eb000000	 bl          OALPAtoVA
  00048	e1a02000	 mov         r2, r0
  0004c	e5940000	 ldr         r0, [r4]
  00050	e5842004	 str         r2, [r4, #4]
  00054		 |$LN12@SOCGetPadC|

; 64   : 
; 65   :     //read CONTROL_PADCONF_X. don't worry about the offset it has been checked by upper layers
; 66   :     if (padId < FIRST_WKUP_PAD_INDEX)

  00054	e3a03c05	 mov         r3, #5, 24
  00058	e3833016	 orr         r3, r3, #0x16
  0005c	e1550003	 cmp         r5, r3

; 67   :     {
; 68   :         hwcfg = INREG16(&g_pPadCfg[padId]);   

  00060	30803085	 addcc       r3, r0, r5, lsl #1

; 69   :     }
; 70   :     else
; 71   :     {
; 72   :         hwcfg = INREG16(&g_pWkupPadCfg[padId-FIRST_WKUP_PAD_INDEX]);  

  00064	20453003	 subcs       r3, r5, r3
  00068	20823083	 addcs       r3, r2, r3, lsl #1
  0006c	e1d330b0	 ldrh        r3, [r3]

; 73   :     }
; 74   :     //Translate CONTROL_PADCONF_X format to the API format
; 75   :     cfg |= (hwcfg & INPUT_ENABLE) ? INPUT_ENABLED : 0;

  00070	e3130c01	 tst         r3, #1, 24
  00074	13a02001	 movne       r2, #1
  00078	03a02000	 moveq       r2, #0
  0007c	e1a02802	 mov         r2, r2, lsl #16
  00080	e1a02822	 mov         r2, r2, lsr #16

; 76   : 
; 77   :     switch (hwcfg & PULL_UP)

  00084	e2131018	 ands        r1, r3, #0x18
  00088	0a000006	 beq         |$LN1@SOCGetPadC|
  0008c	e3510008	 cmp         r1, #8
  00090	0a000003	 beq         |$LN2@SOCGetPadC|
  00094	e3510018	 cmp         r1, #0x18
  00098	1a000002	 bne         |$LN1@SOCGetPadC|

; 78   :     {
; 79   :     case PULL_UP:
; 80   :         cfg |= PULL_RESISTOR_ENABLED | PULLUP_RESISTOR;

  0009c	e3822006	 orr         r2, r2, #6

; 81   :         break;

  000a0	ea000000	 b           |$LN1@SOCGetPadC|
  000a4		 |$LN2@SOCGetPadC|

; 82   :     case PULL_DOWN:
; 83   :         cfg |= PULL_RESISTOR_ENABLED | PULLDOWN_RESISTOR;

  000a4	e3822002	 orr         r2, r2, #2
  000a8		 |$LN1@SOCGetPadC|

; 84   :         break;
; 85   :     case PULL_INACTIVE:
; 86   :         cfg |= PULL_RESISTOR_DISABLED;
; 87   :         break;
; 88   :     }
; 89   : 
; 90   :     cfg |= ((hwcfg >> 0) & 0x7) << 3;
; 91   : 
; 92   :     *pCfg = cfg;

  000a8	e2033007	 and         r3, r3, #7
  000ac	e1823183	 orr         r3, r2, r3, lsl #3
  000b0	e1c630b0	 strh        r3, [r6]

; 93   : 
; 94   :     return TRUE;

  000b4	e3a00001	 mov         r0, #1

; 95   : }

  000b8	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000bc	e12fff1e	 bx          lr
  000c0		 |$LN20@SOCGetPadC|
  000c0		 |$LN21@SOCGetPadC|
  000c0	48002030	 DCD         0x48002030
  000c4		 |$LN22@SOCGetPadC|
  000c4	00000000	 DCD         |g_pPadCfg|
  000c8		 |$M45733|

			 ENDP  ; |SOCGetPadConfig|

	END
