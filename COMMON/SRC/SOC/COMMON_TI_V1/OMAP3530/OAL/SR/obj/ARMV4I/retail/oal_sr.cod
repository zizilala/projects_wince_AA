; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\OMAP3530\OAL\SR\oal_sr.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|SmartReflex_dump_register_v2|
	EXPORT	|SmartReflex_ClearInterruptStatus_v2|
	EXPORT	|SmartReflex_EnableInterrupts_v2|
	EXPORT	|SmartReflex_SetErrorControl_v2|
	EXPORT	|SmartReflex_SetIdleMode_v2|
	EXPORT	|SmartReflex_SetSensorMode_v2|
	EXPORT	|SmartReflex_dump_register_v1|
	EXPORT	|SmartReflex_SetAvgWeight|
	EXPORT	|SmartReflex_GetStatus|
	EXPORT	|SmartReflex_ClearInterruptStatus_v1|
	EXPORT	|SmartReflex_Enable|
	EXPORT	|SmartReflex_EnableSensorBlock|
	EXPORT	|SmartReflex_EnableMinMaxAvgBlock|
	EXPORT	|SmartReflex_EnableErrorGeneratorBlock|
	EXPORT	|SmartReflex_EnableInterrupts_v1|
	EXPORT	|SmartReflex_SetErrorControl_v1|
	EXPORT	|SmartReflex_SetSensorReferenceData|
	EXPORT	|SmartReflex_SetIdleMode_v1|
	EXPORT	|SmartReflex_SetSensorMode_v1|
	EXPORT	|SmartReflex_SetAccumulationSize|
	EXPORT	|SmartReflex_InitializeChannel|
	EXPORT	|SmartReflex_Functions_v1| [ DATA ]
	EXPORT	|SmartReflex_Functions_v2| [ DATA ]

  00000			 AREA	 |.data|, DATA
|SmartReflex_Functions_v1| DCD |SmartReflex_InitializeChannel|
	DCD	|SmartReflex_SetAccumulationSize|
	DCD	|SmartReflex_SetSensorMode_v1|
	DCD	|SmartReflex_SetIdleMode_v1|
	DCD	|SmartReflex_SetSensorReferenceData|
	DCD	|SmartReflex_SetErrorControl_v1|
	DCD	|SmartReflex_EnableInterrupts_v1|
	DCD	|SmartReflex_EnableErrorGeneratorBlock|
	DCD	|SmartReflex_EnableMinMaxAvgBlock|
	DCD	|SmartReflex_EnableSensorBlock|
	DCD	|SmartReflex_Enable|
	DCD	|SmartReflex_ClearInterruptStatus_v1|
	DCD	|SmartReflex_GetStatus|
	DCD	|SmartReflex_SetAvgWeight|
	DCD	|SmartReflex_dump_register_v1|
|SmartReflex_Functions_v2| DCD |SmartReflex_InitializeChannel|
	DCD	|SmartReflex_SetAccumulationSize|
	DCD	|SmartReflex_SetSensorMode_v2|
	DCD	|SmartReflex_SetIdleMode_v2|
	DCD	|SmartReflex_SetSensorReferenceData|
	DCD	|SmartReflex_SetErrorControl_v2|
	DCD	|SmartReflex_EnableInterrupts_v2|
	DCD	|SmartReflex_EnableErrorGeneratorBlock|
	DCD	|SmartReflex_EnableMinMaxAvgBlock|
	DCD	|SmartReflex_EnableSensorBlock|
	DCD	|SmartReflex_Enable|
	DCD	|SmartReflex_ClearInterruptStatus_v2|
	DCD	|SmartReflex_GetStatus|
	DCD	|SmartReflex_SetAvgWeight|
	DCD	|SmartReflex_dump_register_v2|

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0

  00000			 AREA	 |.bss|, NOINIT
|g_pSr|	%	0x8
|g_pSr|	%	0x8
; File c:\wince600\platform\common\src\soc\common_ti_v1\omap3530\oal\sr\oal_sr.c

  00000			 AREA	 |.pdata|, PDATA
|$T46888| DCD	|$LN5@SmartRefle|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SmartReflex_InitializeChannel| PROC

; 36   : {

  00000		 |$LN5@SmartRefle|
  00000		 |$M46885|

; 37   :     g_pSr[channel] = pSr;

  00000	e59f3004	 ldr         r3, [pc, #4]
  00004	e7831100	 str         r1, [r3, +r0, lsl #2]

; 38   : }

  00008	e12fff1e	 bx          lr
  0000c		 |$LN6@SmartRefle|
  0000c		 |$LN7@SmartRefle|
  0000c	00000000	 DCD         |g_pSr|
  00010		 |$M46886|

			 ENDP  ; |SmartReflex_InitializeChannel|


  00000			 AREA	 |.pdata|, PDATA
|$T46901| DCD	|$LN5@SmartRefle@2|
	DCD	0x40000a00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SmartReflex_SetAccumulationSize| PROC

; 46   : {

  00000		 |$LN5@SmartRefle@2|
  00000		 |$M46898|

; 47   :     UINT                val;
; 48   :     OMAP_SMARTREFLEX   *pSr = g_pSr[channel];

  00000	e59f301c	 ldr         r3, [pc, #0x1C]
  00004	e3e024ff	 mvn         r2, #0xFF, 8

; 49   : 
; 50   :     val = INREG32(&pSr->sr_regs.omap_35xx.SRCONFIG);
; 51   :     val &= ~(SRCONFIG_ACCUMDATA_MASK);

  00008	e2222503	 eor         r2, r2, #3, 10
  0000c	e7930100	 ldr         r0, [r3, +r0, lsl #2]
  00010	e5903000	 ldr         r3, [r0]
  00014	e0033002	 and         r3, r3, r2

; 52   :     val |= ((accumData << SRCONFIG_ACCUMDATA_SHIFT) & SRCONFIG_ACCUMDATA_MASK);

  00018	e1833b01	 orr         r3, r3, r1, lsl #22

; 53   :     OUTREG32(&pSr->sr_regs.omap_35xx.SRCONFIG, val);

  0001c	e5803000	 str         r3, [r0]

; 54   : }

  00020	e12fff1e	 bx          lr
  00024		 |$LN6@SmartRefle@2|
  00024		 |$LN7@SmartRefle@2|
  00024	00000000	 DCD         |g_pSr|
  00028		 |$M46899|

			 ENDP  ; |SmartReflex_SetAccumulationSize|


  00000			 AREA	 |.pdata|, PDATA
|$T46915| DCD	|$LN5@SmartRefle@3|
	DCD	0x40000b00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SmartReflex_SetSensorMode_v1| PROC

; 63   : {

  00000		 |$LN5@SmartRefle@3|
  00000		 |$M46912|

; 64   :     UINT                val;
; 65   :     OMAP_SMARTREFLEX   *pSr = g_pSr[channel];

  00000	e59f3020	 ldr         r3, [pc, #0x20]

; 66   : 
; 67   :     UNREFERENCED_PARAMETER(senPMode);
; 68   : 
; 69   :     val = INREG32(&pSr->sr_regs.omap_35xx.SRCONFIG);
; 70   :     val &= ~(SRCONFIG_SENPENABLE_MASK | SRCONFIG_SENNENABLE_MASK);
; 71   :     val |= ((senNMode << SRCONFIG_SENNENABLE_SHIFT) & SRCONFIG_SENNENABLE_MASK);
; 72   :     val |= ((senPMode << SRCONFIG_SENPENABLE_SHIFT) & SRCONFIG_SENPENABLE_MASK);
; 73   :     OUTREG32(&pSr->sr_regs.omap_35xx.SRCONFIG, val);

  00004	e2011003	 and         r1, r1, #3
  00008	e2022003	 and         r2, r2, #3
  0000c	e7930100	 ldr         r0, [r3, +r0, lsl #2]
  00010	e1822101	 orr         r2, r2, r1, lsl #2
  00014	e5903000	 ldr         r3, [r0]
  00018	e3c33078	 bic         r3, r3, #0x78
  0001c	e1833182	 orr         r3, r3, r2, lsl #3
  00020	e5803000	 str         r3, [r0]

; 74   : }

  00024	e12fff1e	 bx          lr
  00028		 |$LN6@SmartRefle@3|
  00028		 |$LN7@SmartRefle@3|
  00028	00000000	 DCD         |g_pSr|
  0002c		 |$M46913|

			 ENDP  ; |SmartReflex_SetSensorMode_v1|


  00000			 AREA	 |.pdata|, PDATA
|$T46929| DCD	|$LN5@SmartRefle@4|
	DCD	0x40000b00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SmartReflex_SetSensorMode_v2| PROC

; 83   : {

  00000		 |$LN5@SmartRefle@4|
  00000		 |$M46926|

; 84   :     UINT                val;
; 85   :     OMAP_SMARTREFLEX   *pSr = g_pSr[channel];

  00000	e59f3020	 ldr         r3, [pc, #0x20]

; 86   : 
; 87   :     val = INREG32(&pSr->sr_regs.omap_37xx.SRCONFIG);
; 88   : 	
; 89   :     val &= ~(SRCONFIG_SENPENABLE_MASK_37XX | SRCONFIG_SENNENABLE_MASK_37XX);
; 90   :     val |= ((senNMode << SRCONFIG_SENNENABLE_SHIFT_37XX) & SRCONFIG_SENNENABLE_MASK_37XX);
; 91   :     val |= ((senPMode << SRCONFIG_SENPENABLE_SHIFT_37XX) & SRCONFIG_SENPENABLE_MASK_37XX);
; 92   :     OUTREG32(&pSr->sr_regs.omap_37xx.SRCONFIG, val);

  00004	e2011001	 and         r1, r1, #1
  00008	e2022001	 and         r2, r2, #1
  0000c	e7930100	 ldr         r0, [r3, +r0, lsl #2]
  00010	e5903000	 ldr         r3, [r0]
  00014	e3c33003	 bic         r3, r3, #3
  00018	e1833081	 orr         r3, r3, r1, lsl #1
  0001c	e1833002	 orr         r3, r3, r2
  00020	e5803000	 str         r3, [r0]

; 93   : }

  00024	e12fff1e	 bx          lr
  00028		 |$LN6@SmartRefle@4|
  00028		 |$LN7@SmartRefle@4|
  00028	00000000	 DCD         |g_pSr|
  0002c		 |$M46927|

			 ENDP  ; |SmartReflex_SetSensorMode_v2|


  00000			 AREA	 |.pdata|, PDATA
|$T46943| DCD	|$LN8@SmartRefle@5|
	DCD	0x40000a00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SmartReflex_EnableInterrupts_v1| PROC

; 102  : {

  00000		 |$LN8@SmartRefle@5|
  00000		 |$M46940|
  00000	e3520000	 cmp         r2, #0

; 103  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  00004	e59f3018	 ldr         r3, [pc, #0x18]
  00008	e7932100	 ldr         r2, [r3, +r0, lsl #2]

; 104  : 
; 105  :     if (bEnable != FALSE)
; 106  :         {
; 107  :         SETREG32(&pSr->sr_regs.omap_35xx.ERRCONFIG, mask);

  0000c	e5923024	 ldr         r3, [r2, #0x24]
  00010	11833001	 orrne       r3, r3, r1

; 108  :         }
; 109  :     else
; 110  :         {
; 111  :         CLRREG32(&pSr->sr_regs.omap_35xx.ERRCONFIG, mask);

  00014	15823024	 strne       r3, [r2, #0x24]
  00018	01c33001	 biceq       r3, r3, r1
  0001c	05823024	 streq       r3, [r2, #0x24]

; 112  :         }
; 113  : }

  00020	e12fff1e	 bx          lr
  00024		 |$LN9@SmartRefle@5|
  00024		 |$LN10@SmartRefle@5|
  00024	00000000	 DCD         |g_pSr|
  00028		 |$M46941|

			 ENDP  ; |SmartReflex_EnableInterrupts_v1|


  00000			 AREA	 |.pdata|, PDATA
|$T46961| DCD	|$LN21@SmartRefle@6|
	DCD	0x40002701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SmartReflex_EnableInterrupts_v2| PROC

; 122  : {

  00000		 |$LN21@SmartRefle@6|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M46958|
  00004	e1a0e002	 mov         lr, r2

; 123  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  00008	e59f3088	 ldr         r3, [pc, #0x88]

; 124  :     UINT32 *pReg, new_mask;
; 125  : 
; 126  :     if(mask & ERRCONFIG_VP_BOUNDINT_EN)

  0000c	e3110102	 tst         r1, #2, 2
  00010	e7930100	 ldr         r0, [r3, +r0, lsl #2]
  00014	0a000008	 beq         |$LN14@SmartRefle@6|

; 127  :     {
; 128  :         pReg = (UINT32 *)&pSr->sr_regs.omap_37xx.ERRCONFIG;
; 129  :         new_mask = ERRCONFIG_VP_BOUNDINT_EN_37XX;
; 130  : 	 if (bEnable != FALSE)
; 131  : 	 {
; 132  : 	    SETREG32(pReg, new_mask);

  00018	e5903038	 ldr         r3, [r0, #0x38]
  0001c	e35e0000	 cmp         lr, #0
  00020	13833501	 orrne       r3, r3, #1, 10

; 133  : 	 }
; 134  : 	 else
; 135  : 	 {
; 136  : 	    CLRREG32(pReg, new_mask);

  00024	15803038	 strne       r3, [r0, #0x38]

; 169  : 	 }
; 170  : 		
; 171  :     }
; 172  : 
; 173  : }

  00028	149de004	 ldrne       lr, [sp], #4

; 133  : 	 }
; 134  : 	 else
; 135  : 	 {
; 136  : 	    CLRREG32(pReg, new_mask);

  0002c	03c33501	 biceq       r3, r3, #1, 10
  00030	05803038	 streq       r3, [r0, #0x38]

; 169  : 	 }
; 170  : 		
; 171  :     }
; 172  : 
; 173  : }

  00034	049de004	 ldreq       lr, [sp], #4
  00038	e12fff1e	 bx          lr
  0003c		 |$LN14@SmartRefle@6|

; 137  : 	 }
; 138  :     }
; 139  :     else
; 140  :     {
; 141  :         pReg = 	(UINT32 *)&pSr->sr_regs.omap_37xx.IRQENABLE_SET;
; 142  :         switch (mask)

  0003c	e3510502	 cmp         r1, #2, 10
  00040	0a00000c	 beq         |$LN8@SmartRefle@6|
  00044	e3510402	 cmp         r1, #2, 8
  00048	0a000008	 beq         |$LN7@SmartRefle@6|
  0004c	e3510302	 cmp         r1, #2, 6
  00050	0a000004	 beq         |$LN6@SmartRefle@6|
  00054	e3510202	 cmp         r1, #2, 4

; 156  :             case ERRCONFIG_INTR_SR_MASK:
; 157  : 		  mask = IRQENABLE_MASK;
; 158  : 	     default:
; 159  :                 mask = 0;

  00058	13a02000	 movne       r2, #0
  0005c	1a000006	 bne         |$LN9@SmartRefle@6|

; 153  :             case ERRCONFIG_MCU_ACCUMINT_EN:
; 154  :                 mask = IRQENABLE_SET_MCUACCUMINTENA;

  00060	e3a02008	 mov         r2, #8

; 155  :                 break;

  00064	ea000004	 b           |$LN9@SmartRefle@6|
  00068		 |$LN6@SmartRefle@6|

; 150  :             case ERRCONFIG_MCU_VALIDINT_EN:
; 151  :                 mask = IRQENABLE_SET_MCUVALIDINTENA;

  00068	e3a02004	 mov         r2, #4

; 152  :                 break;

  0006c	ea000002	 b           |$LN9@SmartRefle@6|
  00070		 |$LN7@SmartRefle@6|

; 146  :                 break;
; 147  :             case ERRCONFIG_MCU_BOUNDINT_EN:
; 148  :                 mask = IRQENABLE_SET_MCUBOUNDSINTENA;

  00070	e3a02002	 mov         r2, #2

; 149  :                 break;

  00074	ea000000	 b           |$LN9@SmartRefle@6|
  00078		 |$LN8@SmartRefle@6|

; 143  :         {
; 144  :             case ERRCONFIG_MCU_DISACKINT_EN:
; 145  :                 mask = IRQENABLE_SET_MCUDISABLEACKINTSTATENA;

  00078	e3a02001	 mov         r2, #1
  0007c		 |$LN9@SmartRefle@6|

; 160  :                 break;
; 161  :         }
; 162  : 	 if (bEnable != FALSE)
; 163  : 	 {
; 164  : 	    SETREG32(pReg, mask);

  0007c	e590302c	 ldr         r3, [r0, #0x2C]
  00080	e35e0000	 cmp         lr, #0
  00084	11833002	 orrne       r3, r3, r2

; 165  : 	 }
; 166  : 	 else
; 167  : 	 {
; 168  : 	    CLRREG32(pReg, mask);

  00088	01c33002	 biceq       r3, r3, r2
  0008c	e580302c	 str         r3, [r0, #0x2C]

; 169  : 	 }
; 170  : 		
; 171  :     }
; 172  : 
; 173  : }

  00090	e49de004	 ldr         lr, [sp], #4
  00094	e12fff1e	 bx          lr
  00098		 |$LN22@SmartRefle@6|
  00098		 |$LN23@SmartRefle@6|
  00098	00000000	 DCD         |g_pSr|
  0009c		 |$M46959|

			 ENDP  ; |SmartReflex_EnableInterrupts_v2|


  00000			 AREA	 |.pdata|, PDATA
|$T46974| DCD	|$LN8@SmartRefle@7|
	DCD	0x40000a00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SmartReflex_EnableErrorGeneratorBlock| PROC

; 181  : {

  00000		 |$LN8@SmartRefle@7|
  00000		 |$M46971|
  00000	e3510000	 cmp         r1, #0

; 182  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  00004	e59f3018	 ldr         r3, [pc, #0x18]
  00008	e7932100	 ldr         r2, [r3, +r0, lsl #2]

; 183  :     
; 184  :     if (bEnable != FALSE)
; 185  :         {
; 186  :         SETREG32(&pSr->sr_regs.omap_35xx.SRCONFIG, SRCONFIG_ERRORGEN_EN);

  0000c	e5923000	 ldr         r3, [r2]
  00010	13833c02	 orrne       r3, r3, #2, 24

; 187  :         }
; 188  :     else
; 189  :         {
; 190  :         CLRREG32(&pSr->sr_regs.omap_35xx.SRCONFIG, SRCONFIG_ERRORGEN_EN);

  00014	15823000	 strne       r3, [r2]
  00018	03c33c02	 biceq       r3, r3, #2, 24
  0001c	05823000	 streq       r3, [r2]

; 191  :         }
; 192  : }

  00020	e12fff1e	 bx          lr
  00024		 |$LN9@SmartRefle@7|
  00024		 |$LN10@SmartRefle@7|
  00024	00000000	 DCD         |g_pSr|
  00028		 |$M46972|

			 ENDP  ; |SmartReflex_EnableErrorGeneratorBlock|


  00000			 AREA	 |.pdata|, PDATA
|$T46987| DCD	|$LN8@SmartRefle@8|
	DCD	0x40000a00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SmartReflex_EnableMinMaxAvgBlock| PROC

; 200  : {

  00000		 |$LN8@SmartRefle@8|
  00000		 |$M46984|
  00000	e3510000	 cmp         r1, #0

; 201  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  00004	e59f3018	 ldr         r3, [pc, #0x18]
  00008	e7932100	 ldr         r2, [r3, +r0, lsl #2]

; 202  :     
; 203  :     if (bEnable != FALSE)
; 204  :         {
; 205  :         SETREG32(&pSr->sr_regs.omap_35xx.SRCONFIG, SRCONFIG_MINMAXAVG_EN);

  0000c	e5923000	 ldr         r3, [r2]
  00010	13833c01	 orrne       r3, r3, #1, 24

; 206  :         }
; 207  :     else
; 208  :         {
; 209  :         CLRREG32(&pSr->sr_regs.omap_35xx.SRCONFIG, SRCONFIG_MINMAXAVG_EN);

  00014	15823000	 strne       r3, [r2]
  00018	03c33c01	 biceq       r3, r3, #1, 24
  0001c	05823000	 streq       r3, [r2]

; 210  :         }
; 211  : }

  00020	e12fff1e	 bx          lr
  00024		 |$LN9@SmartRefle@8|
  00024		 |$LN10@SmartRefle@8|
  00024	00000000	 DCD         |g_pSr|
  00028		 |$M46985|

			 ENDP  ; |SmartReflex_EnableMinMaxAvgBlock|


  00000			 AREA	 |.pdata|, PDATA
|$T47000| DCD	|$LN8@SmartRefle@9|
	DCD	0x40000a00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SmartReflex_EnableSensorBlock| PROC

; 219  : {

  00000		 |$LN8@SmartRefle@9|
  00000		 |$M46997|
  00000	e3510000	 cmp         r1, #0

; 220  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  00004	e59f3018	 ldr         r3, [pc, #0x18]
  00008	e7932100	 ldr         r2, [r3, +r0, lsl #2]

; 221  :     
; 222  :     if (bEnable != FALSE)
; 223  :         {
; 224  :         SETREG32(&pSr->sr_regs.omap_35xx.SRCONFIG, SRCONFIG_SENENABLE);

  0000c	e5923000	 ldr         r3, [r2]
  00010	13833b01	 orrne       r3, r3, #1, 22

; 225  :         }
; 226  :     else
; 227  :         {
; 228  :         CLRREG32(&pSr->sr_regs.omap_35xx.SRCONFIG, SRCONFIG_SENENABLE);

  00014	15823000	 strne       r3, [r2]
  00018	03c33b01	 biceq       r3, r3, #1, 22
  0001c	05823000	 streq       r3, [r2]

; 229  :         }
; 230  : }

  00020	e12fff1e	 bx          lr
  00024		 |$LN9@SmartRefle@9|
  00024		 |$LN10@SmartRefle@9|
  00024	00000000	 DCD         |g_pSr|
  00028		 |$M46998|

			 ENDP  ; |SmartReflex_EnableSensorBlock|


  00000			 AREA	 |.pdata|, PDATA
|$T47013| DCD	|$LN8@SmartRefle@10|
	DCD	0x40000a00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SmartReflex_Enable| PROC

; 238  : {

  00000		 |$LN8@SmartRefle@10|
  00000		 |$M47010|
  00000	e3510000	 cmp         r1, #0

; 239  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  00004	e59f3018	 ldr         r3, [pc, #0x18]
  00008	e7932100	 ldr         r2, [r3, +r0, lsl #2]

; 240  :     
; 241  :     if (bEnable != FALSE)
; 242  :         {
; 243  :         SETREG32(&pSr->sr_regs.omap_35xx.SRCONFIG, SRCONFIG_SRENABLE);

  0000c	e5923000	 ldr         r3, [r2]
  00010	13833b02	 orrne       r3, r3, #2, 22

; 244  :         }
; 245  :     else
; 246  :         {
; 247  :         CLRREG32(&pSr->sr_regs.omap_35xx.SRCONFIG, SRCONFIG_SRENABLE);

  00014	15823000	 strne       r3, [r2]
  00018	03c33b02	 biceq       r3, r3, #2, 22
  0001c	05823000	 streq       r3, [r2]

; 248  :         }
; 249  : }

  00020	e12fff1e	 bx          lr
  00024		 |$LN9@SmartRefle@10|
  00024		 |$LN10@SmartRefle@10|
  00024	00000000	 DCD         |g_pSr|
  00028		 |$M47011|

			 ENDP  ; |SmartReflex_Enable|


  00000			 AREA	 |.pdata|, PDATA
|$T47026| DCD	|$LN5@SmartRefle@11|
	DCD	0x40000900
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SmartReflex_SetIdleMode_v1| PROC

; 257  : {

  00000		 |$LN5@SmartRefle@11|
  00000		 |$M47023|

; 258  :     UINT              val;
; 259  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  00000	e59f3018	 ldr         r3, [pc, #0x18]
  00004	e7930100	 ldr         r0, [r3, +r0, lsl #2]

; 260  : 
; 261  :     val = INREG32(&pSr->sr_regs.omap_35xx.ERRCONFIG);

  00008	e5902024	 ldr         r2, [r0, #0x24]

; 262  :     val &= ~ERRCONFIG_CLKACTIVITY_MASK;
; 263  :     val |= ((idleMode << ERRCONFIG_CLKACTIVITY_SHIFT) & ERRCONFIG_CLKACTIVITY_MASK);
; 264  :     OUTREG32(&pSr->sr_regs.omap_35xx.ERRCONFIG, val);

  0000c	e0223a01	 eor         r3, r2, r1, lsl #20
  00010	e2033603	 and         r3, r3, #3, 12
  00014	e0233002	 eor         r3, r3, r2
  00018	e5803024	 str         r3, [r0, #0x24]

; 265  : }

  0001c	e12fff1e	 bx          lr
  00020		 |$LN6@SmartRefle@11|
  00020		 |$LN7@SmartRefle@11|
  00020	00000000	 DCD         |g_pSr|
  00024		 |$M47024|

			 ENDP  ; |SmartReflex_SetIdleMode_v1|


  00000			 AREA	 |.pdata|, PDATA
|$T47039| DCD	|$LN5@SmartRefle@12|
	DCD	0x40000900
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SmartReflex_SetIdleMode_v2| PROC

; 272  : {

  00000		 |$LN5@SmartRefle@12|
  00000		 |$M47036|

; 273  :     UINT              val;
; 274  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  00000	e59f3018	 ldr         r3, [pc, #0x18]
  00004	e7930100	 ldr         r0, [r3, +r0, lsl #2]

; 275  : 
; 276  :     val = INREG32(&pSr->sr_regs.omap_37xx.ERRCONFIG);

  00008	e5902038	 ldr         r2, [r0, #0x38]

; 277  :     val &= ~ERRCONFIG_CLKACTIVITY_MASK_37XX;
; 278  :     val |= ((idleMode << ERRCONFIG_CLKACTIVITY_SHIFT_37XX) & ERRCONFIG_CLKACTIVITY_MASK_37XX);
; 279  : 	
; 280  :     OUTREG32(&pSr->sr_regs.omap_37xx.ERRCONFIG, val);

  0000c	e0223c01	 eor         r3, r2, r1, lsl #24
  00010	e2033403	 and         r3, r3, #3, 8
  00014	e0233002	 eor         r3, r3, r2
  00018	e5803038	 str         r3, [r0, #0x38]

; 281  : }

  0001c	e12fff1e	 bx          lr
  00020		 |$LN6@SmartRefle@12|
  00020		 |$LN7@SmartRefle@12|
  00020	00000000	 DCD         |g_pSr|
  00024		 |$M47037|

			 ENDP  ; |SmartReflex_SetIdleMode_v2|


  00000			 AREA	 |.pdata|, PDATA
|$T47056| DCD	|$LN5@SmartRefle@13|
	DCD	0x40001a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SmartReflex_SetSensorReferenceData| PROC

; 289  : {

  00000		 |$LN5@SmartRefle@13|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M47053|

; 290  :     UINT              val;
; 291  :     UINT              srClkLengthT = pSensorData->srClkLengthT;
; 292  :     UINT              rnsenp = pSensorData->rnsenp;
; 293  :     UINT              rnsenn = pSensorData->rnsenn;
; 294  :     UINT              senpgain = pSensorData->senpgain;
; 295  :     UINT              senngain = pSensorData->senngain;
; 296  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  00004	e59f3058	 ldr         r3, [pc, #0x58]
  00008	e5912010	 ldr         r2, [r1, #0x10]
  0000c	e591e014	 ldr         lr, [r1, #0x14]
  00010	e7937100	 ldr         r7, [r3, +r0, lsl #2]

; 297  : 
; 298  :     // update smartreflex clk sampling frequency
; 299  :     val = INREG32(&pSr->sr_regs.omap_35xx.SRCONFIG);
; 300  :     val &= ~SRCONFIG_SRCLKLENGTH_MASK;
; 301  :     val |= ((srClkLengthT << SRCONFIG_SRCLKLENGTH_SHIFT) & SRCONFIG_SRCLKLENGTH_MASK);
; 302  :     OUTREG32(&pSr->sr_regs.omap_35xx.SRCONFIG , val);

  00014	e5913004	 ldr         r3, [r1, #4]
  00018	e5914008	 ldr         r4, [r1, #8]
  0001c	e5975000	 ldr         r5, [r7]
  00020	e591600c	 ldr         r6, [r1, #0xC]
  00024	e3a089ff	 mov         r8, #0xFF, 18
  00028	e0251603	 eor         r1, r5, r3, lsl #12

; 303  : 
; 304  :     // set scale value for SenN, SenP, SenNGain, SenPGain
; 305  :     val = ((rnsenn << NVALUERECIPROCAL_RNSENN_SHIFT) & NVALUERECIPROCAL_RNSENN_MASK);
; 306  :     val |= ((rnsenp << NVALUERECIPROCAL_RNSENP_SHIFT) & NVALUERECIPROCAL_RNSENP_MASK);
; 307  :     val |= ((senngain << NVALUERECIPROCAL_SENNGAIN_SHIFT) & NVALUERECIPROCAL_SENNGAIN_MASK);
; 308  :     val |= ((senpgain << NVALUERECIPROCAL_SENPGAIN_SHIFT) & NVALUERECIPROCAL_SENPGAIN_MASK);
; 309  :     OUTREG32(&pSr->sr_regs.omap_35xx.NVALUERECIPROCAL, val);

  0002c	e3883a03	 orr         r3, r8, #3, 20
  00030	e202000f	 and         r0, r2, #0xF
  00034	e20e200f	 and         r2, lr, #0xF
  00038	e0011003	 and         r1, r1, r3
  0003c	e20430ff	 and         r3, r4, #0xFF
  00040	e1822200	 orr         r2, r2, r0, lsl #4
  00044	e1832402	 orr         r2, r3, r2, lsl #8
  00048	e20630ff	 and         r3, r6, #0xFF
  0004c	e0211005	 eor         r1, r1, r5
  00050	e1833402	 orr         r3, r3, r2, lsl #8
  00054	e5871000	 str         r1, [r7]
  00058	e587301c	 str         r3, [r7, #0x1C]

; 310  : }

  0005c	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$LN6@SmartRefle@13|
  00064		 |$LN7@SmartRefle@13|
  00064	00000000	 DCD         |g_pSr|
  00068		 |$M47054|

			 ENDP  ; |SmartReflex_SetSensorReferenceData|


  00000			 AREA	 |.pdata|, PDATA
|$T47071| DCD	|$LN5@SmartRefle@14|
	DCD	0x40001101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SmartReflex_SetErrorControl_v1| PROC

; 320  : {

  00000		 |$LN5@SmartRefle@14|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M47068|

; 321  :     UINT              val;
; 322  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  00004	e59fe034	 ldr         lr, [pc, #0x34]

; 323  : 
; 324  :     val = INREG32(&pSr->sr_regs.omap_35xx.ERRCONFIG);
; 325  :     val &= ~(ERRCONFIG_ERRMAXLIMIT_MASK | ERRCONFIG_ERRMINLIMIT_MASK | ERRCONFIG_ERRWEIGHT_MASK);
; 326  :     val |= ((errorWeight << ERRCONFIG_ERRWEIGHT_SHIFT) & ERRCONFIG_ERRWEIGHT_MASK);
; 327  :     val |= ((errorMax << ERRCONFIG_ERRMAXLIMIT_SHIFT) & ERRCONFIG_ERRMAXLIMIT_MASK);
; 328  :     val |= ((errorMin << ERRCONFIG_ERRMINLIMIT_SHIFT) & ERRCONFIG_ERRMINLIMIT_MASK);
; 329  :     OUTREG32(&pSr->sr_regs.omap_35xx.ERRCONFIG, val);

  00008	e2011007	 and         r1, r1, #7
  0000c	e20220ff	 and         r2, r2, #0xFF
  00010	e79ee100	 ldr         lr, [lr, +r0, lsl #2]
  00014	e1820401	 orr         r0, r2, r1, lsl #8
  00018	e3a044ff	 mov         r4, #0xFF, 8
  0001c	e59e2024	 ldr         r2, [lr, #0x24]
  00020	e20310ff	 and         r1, r3, #0xFF
  00024	e384373e	 orr         r3, r4, #0x3E, 14
  00028	e0022003	 and         r2, r2, r3
  0002c	e1813400	 orr         r3, r1, r0, lsl #8
  00030	e1833002	 orr         r3, r3, r2
  00034	e58e3024	 str         r3, [lr, #0x24]

; 330  : }

  00038	e8bd4010	 ldmia       sp!, {r4, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN6@SmartRefle@14|
  00040		 |$LN7@SmartRefle@14|
  00040	00000000	 DCD         |g_pSr|
  00044		 |$M47069|

			 ENDP  ; |SmartReflex_SetErrorControl_v1|


  00000			 AREA	 |.pdata|, PDATA
|$T47086| DCD	|$LN5@SmartRefle@15|
	DCD	0x40001101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SmartReflex_SetErrorControl_v2| PROC

; 340  : {

  00000		 |$LN5@SmartRefle@15|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M47083|

; 341  :     UINT              val;
; 342  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  00004	e59fe034	 ldr         lr, [pc, #0x34]

; 343  : 
; 344  :     val = INREG32(&pSr->sr_regs.omap_37xx.ERRCONFIG);
; 345  :     val &= ~(ERRCONFIG_ERRMAXLIMIT_MASK | ERRCONFIG_ERRMINLIMIT_MASK | ERRCONFIG_ERRWEIGHT_MASK);
; 346  :     val |= ((errorWeight << ERRCONFIG_ERRWEIGHT_SHIFT) & ERRCONFIG_ERRWEIGHT_MASK);
; 347  :     val |= ((errorMax << ERRCONFIG_ERRMAXLIMIT_SHIFT) & ERRCONFIG_ERRMAXLIMIT_MASK);
; 348  :     val |= ((errorMin << ERRCONFIG_ERRMINLIMIT_SHIFT) & ERRCONFIG_ERRMINLIMIT_MASK);
; 349  : 	
; 350  :     OUTREG32(&pSr->sr_regs.omap_37xx.ERRCONFIG, val);

  00008	e2011007	 and         r1, r1, #7
  0000c	e20220ff	 and         r2, r2, #0xFF
  00010	e79ee100	 ldr         lr, [lr, +r0, lsl #2]
  00014	e1820401	 orr         r0, r2, r1, lsl #8
  00018	e3a044ff	 mov         r4, #0xFF, 8
  0001c	e59e2038	 ldr         r2, [lr, #0x38]
  00020	e20310ff	 and         r1, r3, #0xFF
  00024	e384373e	 orr         r3, r4, #0x3E, 14
  00028	e0022003	 and         r2, r2, r3
  0002c	e1813400	 orr         r3, r1, r0, lsl #8
  00030	e1833002	 orr         r3, r3, r2
  00034	e58e3038	 str         r3, [lr, #0x38]

; 351  : }

  00038	e8bd4010	 ldmia       sp!, {r4, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN6@SmartRefle@15|
  00040		 |$LN7@SmartRefle@15|
  00040	00000000	 DCD         |g_pSr|
  00044		 |$M47084|

			 ENDP  ; |SmartReflex_SetErrorControl_v2|


  00000			 AREA	 |.pdata|, PDATA
|$T47100| DCD	|$LN5@SmartRefle@16|
	DCD	0x40000d01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SmartReflex_SetAvgWeight| PROC

; 360  : {

  00000		 |$LN5@SmartRefle@16|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M47097|

; 361  :     UINT              val;
; 362  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  00004	e59f3024	 ldr         r3, [pc, #0x24]

; 363  : 
; 364  :     val = INREG32(&pSr->sr_regs.omap_35xx.AVGWEIGHT);
; 365  :     val &= ~(AVGWEIGHT_SENNAVGWEIGHT_MASK | AVGWEIGHT_SENPAVGWEIGHT_MASK);
; 366  :     val |= ((senNWeight << AVGWEIGHT_SENNAVGWEIGHT_SHIFT) & AVGWEIGHT_SENNAVGWEIGHT_MASK);
; 367  :     val |= ((senPWeight << AVGWEIGHT_SENPAVGWEIGHT_SHIFT) & AVGWEIGHT_SENPAVGWEIGHT_MASK);
; 368  : 	
; 369  :     OUTREG32(&pSr->sr_regs.omap_35xx.AVGWEIGHT, val);

  00008	e202e003	 and         lr, r2, #3
  0000c	e2012003	 and         r2, r1, #3
  00010	e7930100	 ldr         r0, [r3, +r0, lsl #2]
  00014	e5903018	 ldr         r3, [r0, #0x18]
  00018	e3c3300f	 bic         r3, r3, #0xF
  0001c	e183310e	 orr         r3, r3, lr, lsl #2
  00020	e1833002	 orr         r3, r3, r2
  00024	e5803018	 str         r3, [r0, #0x18]

; 370  : }

  00028	e49de004	 ldr         lr, [sp], #4
  0002c	e12fff1e	 bx          lr
  00030		 |$LN6@SmartRefle@16|
  00030		 |$LN7@SmartRefle@16|
  00030	00000000	 DCD         |g_pSr|
  00034		 |$M47098|

			 ENDP  ; |SmartReflex_SetAvgWeight|


  00000			 AREA	 |.pdata|, PDATA
|$T47115| DCD	|$LN5@SmartRefle@17|
	DCD	0x40000d00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SmartReflex_ClearInterruptStatus_v1| PROC

; 378  : {

  00000		 |$LN5@SmartRefle@17|
  00000		 |$M47112|

; 379  :     UINT              rc;
; 380  :     UINT              intrStatus;
; 381  :     UINT              val;
; 382  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  00000	e59f2028	 ldr         r2, [pc, #0x28]
  00004	e3e03455	 mvn         r3, #0x55, 8

; 383  : 
; 384  :     // clear only the interrupt status in the mask
; 385  :     rc = INREG32(&pSr->sr_regs.omap_35xx.ERRCONFIG);

  00008	e2233501	 eor         r3, r3, #1, 10
  0000c	e7920100	 ldr         r0, [r2, +r0, lsl #2]
  00010	e1813003	 orr         r3, r1, r3
  00014	e3a02455	 mov         r2, #0x55, 8
  00018	e5901024	 ldr         r1, [r0, #0x24]

; 386  : 
; 387  :     // Get the non interrupt status part of ERRCONFIG register
; 388  :     val = rc & ~ERRCONFIG_INTR_SR_MASK;
; 389  : 
; 390  :     // Get the interrupt status bit to be cleared
; 391  :     mask &= ERRCONFIG_INTR_SR_MASK;
; 392  :     intrStatus = rc & mask;
; 393  : 
; 394  :     // Clear the interrupt status
; 395  :     val |= intrStatus;
; 396  :     OUTREG32(&pSr->sr_regs.omap_35xx.ERRCONFIG, val);
; 397  : 
; 398  :     // return the status prior to clearing the status
; 399  :     return rc & ERRCONFIG_INTR_SR_MASK;

  0001c	e3822501	 orr         r2, r2, #1, 10
  00020	e0033001	 and         r3, r3, r1
  00024	e5803024	 str         r3, [r0, #0x24]
  00028	e0010002	 and         r0, r1, r2

; 400  : }

  0002c	e12fff1e	 bx          lr
  00030		 |$LN6@SmartRefle@17|
  00030		 |$LN7@SmartRefle@17|
  00030	00000000	 DCD         |g_pSr|
  00034		 |$M47113|

			 ENDP  ; |SmartReflex_ClearInterruptStatus_v1|


  00000			 AREA	 |.pdata|, PDATA
|$T47132| DCD	|$LN16@SmartRefle@18|
	DCD	0x40002b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SmartReflex_ClearInterruptStatus_v2| PROC

; 408  : {

  00000		 |$LN16@SmartRefle@18|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M47129|

; 409  :     UINT              new_mask, rc=0;
; 410  :     UINT              intrStatus;
; 411  :     UINT              val, reg_mask=0;
; 412  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  00004	e59f309c	 ldr         r3, [pc, #0x9C]

; 413  :     UINT32 *pReg=NULL;
; 414  : 
; 415  :     if(mask & ERRCONFIG_VP_BOUNDINT_ST)

  00008	e3110101	 tst         r1, #1, 2
  0000c	e3a04000	 mov         r4, #0
  00010	e7932100	 ldr         r2, [r3, +r0, lsl #2]
  00014	e3a00000	 mov         r0, #0

; 416  :     {
; 417  :         pReg = 	(UINT32 *)&pSr->sr_regs.omap_37xx.ERRCONFIG;
; 418  :         reg_mask = ERRCONFIG_VP_BOUNDINT_ST_37XX;
; 419  :         new_mask = ERRCONFIG_VP_BOUNDINT_ST_37XX;
; 420  : 	 // clear only the interrupt status in the mask
; 421  : 	 rc = INREG32(pReg);
; 422  : 
; 423  : 	 // Get the non interrupt status part of ERRCONFIG register
; 424  : 	 val = rc & ~reg_mask;
; 425  :          // Get the interrupt status bit to be cleared
; 426  : 	 intrStatus = rc & new_mask;
; 427  : 
; 428  : 	 // Clear the interrupt status
; 429  : 	 val |= intrStatus;
; 430  : 	 OUTREG32(pReg, val);

  00018	e3a03455	 mov         r3, #0x55, 8
  0001c	12820038	 addne       r0, r2, #0x38
  00020	15904000	 ldrne       r4, [r0]
  00024	e3a0e000	 mov         lr, #0

; 431  :     }
; 432  :     if(mask & ERRCONFIG_INTR_SR_MASK)

  00028	e3833501	 orr         r3, r3, #1, 10
  0002c	15804000	 strne       r4, [r0]
  00030	13a0e502	 movne       lr, #2, 10
  00034	e1110003	 tst         r1, r3
  00038	0a00000f	 beq         |$LN8@SmartRefle@18|

; 433  :     {
; 434  :         pReg = 	(UINT32 *)&pSr->sr_regs.omap_37xx.IRQENABLE_CLR;

  0003c	e2820030	 add         r0, r2, #0x30

; 435  :         reg_mask = IRQENABLE_MASK;

  00040	e3a0e00f	 mov         lr, #0xF

; 436  :         switch (mask)

  00044	e3510501	 cmp         r1, #1, 10
  00048	0a00000a	 beq         |$LN7@SmartRefle@18|
  0004c	e3510401	 cmp         r1, #1, 8
  00050	0a000006	 beq         |$LN6@SmartRefle@18|
  00054	e3510301	 cmp         r1, #1, 6
  00058	0a000004	 beq         |$LN6@SmartRefle@18|
  0005c	e3510201	 cmp         r1, #1, 4

; 450  :             case ERRCONFIG_INTR_SR_MASK:
; 451  :                 mask = IRQENABLE_MASK;
; 452  : 	     default:
; 453  :                 mask = 0;

  00060	13a01000	 movne       r1, #0
  00064	1a000004	 bne         |$LN8@SmartRefle@18|

; 444  :             case ERRCONFIG_MCU_VALIDINT_ST:
; 445  :                 mask = IRQENABLE_CLR_MCUVALIDINTENA;
; 446  :                 break;
; 447  :             case ERRCONFIG_MCU_ACCUMINT_ST:
; 448  :                 mask = IRQENABLE_CLR_MCUACCUMINTENA;

  00068	e3a01008	 mov         r1, #8

; 449  :                 break;

  0006c	ea000002	 b           |$LN8@SmartRefle@18|
  00070		 |$LN6@SmartRefle@18|

; 440  :                 break;
; 441  :             case ERRCONFIG_MCU_BOUNDINT_ST:
; 442  :                 mask = IRQENABLE_CLR_MCUVALIDINTENA;

  00070	e3a01004	 mov         r1, #4

; 443  :                 break;

  00074	ea000000	 b           |$LN8@SmartRefle@18|
  00078		 |$LN7@SmartRefle@18|

; 437  :         {
; 438  :             case ERRCONFIG_MCU_DISACKINT_ST:
; 439  :                 mask = IRQENABLE_CLR_MCUDISABLEACKINTSTATENA;

  00078	e3a01001	 mov         r1, #1
  0007c		 |$LN8@SmartRefle@18|

; 454  :                 break;
; 455  :         }
; 456  : 		
; 457  :     }
; 458  : 
; 459  :     if((pReg != NULL) && (reg_mask))

  0007c	e3500000	 cmp         r0, #0
  00080	135e0000	 cmpne       lr, #0

; 460  :     {
; 461  :         // clear only the interrupt status in the mask
; 462  : 	 rc = INREG32(pReg);

  00084	15904000	 ldrne       r4, [r0]

; 463  : 
; 464  : 	 // Get the non interrupt status part of ERRCONFIG register
; 465  : 	 val = rc & ~reg_mask;
; 466  : 
; 467  : 	 // Get the interrupt status bit to be cleared
; 468  : 	 mask &= reg_mask;
; 469  : 	 intrStatus = rc & mask;

  00088	100e2001	 andne       r2, lr, r1
  0008c	11e0300e	 mvnne       r3, lr
  00090	11823003	 orrne       r3, r2, r3
  00094	10033004	 andne       r3, r3, r4

; 470  : 
; 471  :         // Clear the interrupt status
; 472  : 	 val |= intrStatus;
; 473  : 	 OUTREG32(pReg, val);

  00098	15803000	 strne       r3, [r0]

; 474  :     }
; 475  :     // return the status prior to clearing the status
; 476  :     return (rc & reg_mask);

  0009c	e00e0004	 and         r0, lr, r4

; 477  : }

  000a0	e8bd4010	 ldmia       sp!, {r4, lr}
  000a4	e12fff1e	 bx          lr
  000a8		 |$LN17@SmartRefle@18|
  000a8		 |$LN18@SmartRefle@18|
  000a8	00000000	 DCD         |g_pSr|
  000ac		 |$M47130|

			 ENDP  ; |SmartReflex_ClearInterruptStatus_v2|


  00000			 AREA	 |.pdata|, PDATA
|$T47144| DCD	|$LN5@SmartRefle@19|
	DCD	0x40000500
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SmartReflex_GetStatus| PROC

; 484  : {

  00000		 |$LN5@SmartRefle@19|
  00000		 |$M47141|

; 485  :     return INREG32(&g_pSr[channel]->sr_regs.omap_35xx.SRSTATUS);

  00000	e59f3008	 ldr         r3, [pc, #8]
  00004	e7933100	 ldr         r3, [r3, +r0, lsl #2]
  00008	e5930004	 ldr         r0, [r3, #4]

; 486  : }

  0000c	e12fff1e	 bx          lr
  00010		 |$LN6@SmartRefle@19|
  00010		 |$LN7@SmartRefle@19|
  00010	00000000	 DCD         |g_pSr|
  00014		 |$M47142|

			 ENDP  ; |SmartReflex_GetStatus|

	EXPORT	|??_C@_1DM@HCJMCLID@?$AA?$CL?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAD?$AAU?$AAM?$AAP?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@KLDDLMIK@?$AA?7?$AAS?$AAR?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@MPAJGDLO@?$AA?7?$AAS?$AAR?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@BGLJEEOM@?$AA?7?$AAS?$AAE?$AAN?$AAV?$AAA?$AAL?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@KHHKDINM@?$AA?7?$AAS?$AAE?$AAN?$AAM?$AAI?$AAN?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@BKHOAOPD@?$AA?7?$AAS?$AAE?$AAN?$AAM?$AAA?$AAX?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@CGMCEODF@?$AA?7?$AAS?$AAE?$AAN?$AAA?$AAV?$AAG?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@OLFJAIOF@?$AA?7?$AAA?$AAV?$AAG?$AAW?$AAE?$AAI?$AAG?$AAH?$AAT?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@PJEIKBGE@?$AA?7?$AAN?$AAV?$AAA?$AAL?$AAU?$AAE?$AAR?$AAE?$AAC?$AAI?$AAP?$AAR?$AAO?$AAC?$AAA?$AAL?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@FLBPAKFF@?$AA?7?$AAS?$AAE?$AAN?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@GPEMKPMB@?$AA?7?$AAE?$AAR?$AAR?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|NKDbgPrintfW|

  00000			 AREA	 |.pdata|, PDATA
|$T47155| DCD	|$LN5@SmartRefle@20|
	DCD	0x40003201

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@HCJMCLID@?$AA?$CL?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAD?$AAU?$AAM?$AAP?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "S", 0x0, "m", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "R"
	DCB	0x0, "e", 0x0, "f", 0x0, "l", 0x0, "e", 0x0, "x", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "D", 0x0, "U", 0x0, "M"
	DCB	0x0, "P", 0x0, ":", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@KLDDLMIK@?$AA?7?$AAS?$AAR?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "S", 0x0, "R", 0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F"
	DCB	0x0, "I", 0x0, "G", 0x0, ":", 0x0, 0x9, 0x0, 0x9, 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@MPAJGDLO@?$AA?7?$AAS?$AAR?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "S", 0x0, "R", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T"
	DCB	0x0, "U", 0x0, "S", 0x0, ":", 0x0, 0x9, 0x0, 0x9, 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@BGLJEEOM@?$AA?7?$AAS?$AAE?$AAN?$AAV?$AAA?$AAL?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "S", 0x0, "E", 0x0, "N", 0x0, "V", 0x0, "A", 0x0, "L"
	DCB	0x0, ":", 0x0, 0x9, 0x0, 0x9, 0x0, "%", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@KHHKDINM@?$AA?7?$AAS?$AAE?$AAN?$AAM?$AAI?$AAN?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "S", 0x0, "E", 0x0, "N", 0x0, "M", 0x0, "I", 0x0, "N"
	DCB	0x0, ":", 0x0, 0x9, 0x0, 0x9, 0x0, "%", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@BKHOAOPD@?$AA?7?$AAS?$AAE?$AAN?$AAM?$AAA?$AAX?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "S", 0x0, "E", 0x0, "N", 0x0, "M", 0x0, "A", 0x0, "X"
	DCB	0x0, ":", 0x0, 0x9, 0x0, 0x9, 0x0, "%", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@CGMCEODF@?$AA?7?$AAS?$AAE?$AAN?$AAA?$AAV?$AAG?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "S", 0x0, "E", 0x0, "N", 0x0, "A", 0x0, "V", 0x0, "G"
	DCB	0x0, ":", 0x0, 0x9, 0x0, 0x9, 0x0, "%", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@OLFJAIOF@?$AA?7?$AAA?$AAV?$AAG?$AAW?$AAE?$AAI?$AAG?$AAH?$AAT?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "A", 0x0, "V", 0x0, "G", 0x0, "W", 0x0, "E", 0x0, "I"
	DCB	0x0, "G", 0x0, "H", 0x0, "T", 0x0, ":", 0x0, 0x9, 0x0, 0x9
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@PJEIKBGE@?$AA?7?$AAN?$AAV?$AAA?$AAL?$AAU?$AAE?$AAR?$AAE?$AAC?$AAI?$AAP?$AAR?$AAO?$AAC?$AAA?$AAL?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "N", 0x0, "V", 0x0, "A", 0x0, "L", 0x0, "U", 0x0, "E"
	DCB	0x0, "R", 0x0, "E", 0x0, "C", 0x0, "I", 0x0, "P", 0x0, "R"
	DCB	0x0, "O", 0x0, "C", 0x0, "A", 0x0, "L", 0x0, ":", 0x0, 0x9
	DCB	0x0, 0x9, 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@FLBPAKFF@?$AA?7?$AAS?$AAE?$AAN?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "S", 0x0, "E", 0x0, "N", 0x0, "E", 0x0, "R", 0x0, "R"
	DCB	0x0, "O", 0x0, "R", 0x0, ":", 0x0, 0x9, 0x0, 0x9, 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@GPEMKPMB@?$AA?7?$AAE?$AAR?$AAR?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "E", 0x0, "R", 0x0, "R", 0x0, "C", 0x0, "O", 0x0, "N"
	DCB	0x0, "F", 0x0, "I", 0x0, "G", 0x0, ":", 0x0, 0x9, 0x0, 0x9
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SmartReflex_dump_register_v1| PROC

; 492  : {

  00000		 |$LN5@SmartRefle@20|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M47152|
  00004	e1a02000	 mov         r2, r0

; 493  : #ifndef SHIP_BUILD
; 494  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  00008	e59f30b4	 ldr         r3, [pc, #0xB4]

; 495  : 	
; 496  :     OALMSG( 1, (L"+SmartReflex register DUMP:\r\n"));

  0000c	e59f00ac	 ldr         r0, [pc, #0xAC]
  00010	e7934102	 ldr         r4, [r3, +r2, lsl #2]
  00014	eb000000	 bl          NKDbgPrintfW

; 497  : 
; 498  :     OALMSG( 1, (L"\tSRCONFIG:\t\t%x\r\n", pSr->sr_regs.omap_35xx.SRCONFIG));

  00018	e5941000	 ldr         r1, [r4]
  0001c	e59f0098	 ldr         r0, [pc, #0x98]
  00020	eb000000	 bl          NKDbgPrintfW

; 499  :     OALMSG( 1, (L"\tSRSTATUS:\t\t%x\r\n", pSr->sr_regs.omap_35xx.SRSTATUS));

  00024	e5941004	 ldr         r1, [r4, #4]
  00028	e59f0088	 ldr         r0, [pc, #0x88]
  0002c	eb000000	 bl          NKDbgPrintfW

; 500  :     OALMSG( 1, (L"\tSENVAL:\t\t%x\r\n", pSr->sr_regs.omap_35xx.SENVAL));

  00030	e5941008	 ldr         r1, [r4, #8]
  00034	e59f0078	 ldr         r0, [pc, #0x78]
  00038	eb000000	 bl          NKDbgPrintfW

; 501  :     OALMSG( 1, (L"\tSENMIN:\t\t%x\r\n", pSr->sr_regs.omap_35xx.SENMIN));

  0003c	e594100c	 ldr         r1, [r4, #0xC]
  00040	e59f0068	 ldr         r0, [pc, #0x68]
  00044	eb000000	 bl          NKDbgPrintfW

; 502  :     OALMSG( 1, (L"\tSENMAX:\t\t%x\r\n", pSr->sr_regs.omap_35xx.SENMAX));

  00048	e5941010	 ldr         r1, [r4, #0x10]
  0004c	e59f0058	 ldr         r0, [pc, #0x58]
  00050	eb000000	 bl          NKDbgPrintfW

; 503  :     OALMSG( 1, (L"\tSENAVG:\t\t%x\r\n", pSr->sr_regs.omap_35xx.SENAVG));

  00054	e5941014	 ldr         r1, [r4, #0x14]
  00058	e59f0048	 ldr         r0, [pc, #0x48]
  0005c	eb000000	 bl          NKDbgPrintfW

; 504  :     OALMSG( 1, (L"\tAVGWEIGHT:\t\t%x\r\n", pSr->sr_regs.omap_35xx.AVGWEIGHT));

  00060	e5941018	 ldr         r1, [r4, #0x18]
  00064	e59f0038	 ldr         r0, [pc, #0x38]
  00068	eb000000	 bl          NKDbgPrintfW

; 505  :     OALMSG( 1, (L"\tNVALUERECIPROCAL:\t\t%x\r\n", pSr->sr_regs.omap_35xx.NVALUERECIPROCAL));

  0006c	e594101c	 ldr         r1, [r4, #0x1C]
  00070	e59f0028	 ldr         r0, [pc, #0x28]
  00074	eb000000	 bl          NKDbgPrintfW

; 506  :     OALMSG( 1, (L"\tSENERROR:\t\t%x\r\n", pSr->sr_regs.omap_35xx.SENERROR));

  00078	e5941020	 ldr         r1, [r4, #0x20]
  0007c	e59f0018	 ldr         r0, [pc, #0x18]
  00080	eb000000	 bl          NKDbgPrintfW

; 507  :     OALMSG( 1, (L"\tERRCONFIG:\t\t%x\r\n", pSr->sr_regs.omap_35xx.ERRCONFIG));

  00084	e5941024	 ldr         r1, [r4, #0x24]
  00088	e59f0008	 ldr         r0, [pc, #8]
  0008c	eb000000	 bl          NKDbgPrintfW

; 508  : #else
; 509  : 	UNREFERENCED_PARAMETER(channel);
; 510  : #endif
; 511  : }

  00090	e8bd4010	 ldmia       sp!, {r4, lr}
  00094	e12fff1e	 bx          lr
  00098		 |$LN6@SmartRefle@20|
  00098		 |$LN7@SmartRefle@20|
  00098	00000000	 DCD         |??_C@_1CE@GPEMKPMB@?$AA?7?$AAE?$AAR?$AAR?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  0009c		 |$LN8@SmartRefle@20|
  0009c	00000000	 DCD         |??_C@_1CC@FLBPAKFF@?$AA?7?$AAS?$AAE?$AAN?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000a0		 |$LN9@SmartRefle@20|
  000a0	00000000	 DCD         |??_C@_1DC@PJEIKBGE@?$AA?7?$AAN?$AAV?$AAA?$AAL?$AAU?$AAE?$AAR?$AAE?$AAC?$AAI?$AAP?$AAR?$AAO?$AAC?$AAA?$AAL?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000a4		 |$LN10@SmartRefle@20|
  000a4	00000000	 DCD         |??_C@_1CE@OLFJAIOF@?$AA?7?$AAA?$AAV?$AAG?$AAW?$AAE?$AAI?$AAG?$AAH?$AAT?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000a8		 |$LN11@SmartRefle@20|
  000a8	00000000	 DCD         |??_C@_1BO@CGMCEODF@?$AA?7?$AAS?$AAE?$AAN?$AAA?$AAV?$AAG?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000ac		 |$LN12@SmartRefle@20|
  000ac	00000000	 DCD         |??_C@_1BO@BKHOAOPD@?$AA?7?$AAS?$AAE?$AAN?$AAM?$AAA?$AAX?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000b0		 |$LN13@SmartRefle@20|
  000b0	00000000	 DCD         |??_C@_1BO@KHHKDINM@?$AA?7?$AAS?$AAE?$AAN?$AAM?$AAI?$AAN?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000b4		 |$LN14@SmartRefle@20|
  000b4	00000000	 DCD         |??_C@_1BO@BGLJEEOM@?$AA?7?$AAS?$AAE?$AAN?$AAV?$AAA?$AAL?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000b8		 |$LN15@SmartRefle@20|
  000b8	00000000	 DCD         |??_C@_1CC@MPAJGDLO@?$AA?7?$AAS?$AAR?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000bc		 |$LN16@SmartRefle@20|
  000bc	00000000	 DCD         |??_C@_1CC@KLDDLMIK@?$AA?7?$AAS?$AAR?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000c0		 |$LN17@SmartRefle@20|
  000c0	00000000	 DCD         |??_C@_1DM@HCJMCLID@?$AA?$CL?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAD?$AAU?$AAM?$AAP?$AA?3?$AA?$AN?$AA?6?$AA?$AA@|
  000c4		 |$LN18@SmartRefle@20|
  000c4	00000000	 DCD         |g_pSr|
  000c8		 |$M47153|

			 ENDP  ; |SmartReflex_dump_register_v1|

	EXPORT	|??_C@_1CM@CJHEJDAE@?$AA?7?$AAI?$AAR?$AAQ?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAR?$AAA?$AAW?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@CCLNJOME@?$AA?7?$AAI?$AAR?$AAQ?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@FKAAFELP@?$AA?7?$AAI?$AAR?$AAQ?$AAE?$AAN?$AAA?$AAB?$AAL?$AAE?$AA_?$AAS?$AAE?$AAT?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@FDHEPIP@?$AA?7?$AAI?$AAR?$AAQ?$AAE?$AAN?$AAA?$AAB?$AAL?$AAE?$AA_?$AAC?$AAL?$AAR?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T47177| DCD	|$LN5@SmartRefle@21|
	DCD	0x40004201

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@CJHEJDAE@?$AA?7?$AAI?$AAR?$AAQ?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAR?$AAA?$AAW?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "I", 0x0, "R", 0x0, "Q", 0x0, "S", 0x0, "T", 0x0, "A"
	DCB	0x0, "T", 0x0, "U", 0x0, "S", 0x0, "_", 0x0, "R", 0x0, "A"
	DCB	0x0, "W", 0x0, ":", 0x0, 0x9, 0x0, 0x9, 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@CCLNJOME@?$AA?7?$AAI?$AAR?$AAQ?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "I", 0x0, "R", 0x0, "Q", 0x0, "S", 0x0, "T", 0x0, "A"
	DCB	0x0, "T", 0x0, "U", 0x0, "S", 0x0, ":", 0x0, 0x9, 0x0, 0x9
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@FKAAFELP@?$AA?7?$AAI?$AAR?$AAQ?$AAE?$AAN?$AAA?$AAB?$AAL?$AAE?$AA_?$AAS?$AAE?$AAT?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "I", 0x0, "R", 0x0, "Q", 0x0, "E", 0x0, "N", 0x0, "A"
	DCB	0x0, "B", 0x0, "L", 0x0, "E", 0x0, "_", 0x0, "S", 0x0, "E"
	DCB	0x0, "T", 0x0, ":", 0x0, 0x9, 0x0, 0x9, 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@FDHEPIP@?$AA?7?$AAI?$AAR?$AAQ?$AAE?$AAN?$AAA?$AAB?$AAL?$AAE?$AA_?$AAC?$AAL?$AAR?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB 0x9
	DCB	0x0, "I", 0x0, "R", 0x0, "Q", 0x0, "E", 0x0, "N", 0x0, "A"
	DCB	0x0, "B", 0x0, "L", 0x0, "E", 0x0, "_", 0x0, "C", 0x0, "L"
	DCB	0x0, "R", 0x0, ":", 0x0, 0x9, 0x0, 0x9, 0x0, "%", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SmartReflex_dump_register_v2| PROC

; 516  : {

  00000		 |$LN5@SmartRefle@21|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M47174|
  00004	e1a02000	 mov         r2, r0

; 517  : #ifndef SHIP_BUILD
; 518  :     OMAP_SMARTREFLEX *pSr = g_pSr[channel];

  00008	e59f30f4	 ldr         r3, [pc, #0xF4]

; 519  : 	
; 520  :     OALMSG( 1, (L"+SmartReflex register DUMP:\r\n"));

  0000c	e59f00ec	 ldr         r0, [pc, #0xEC]
  00010	e7934102	 ldr         r4, [r3, +r2, lsl #2]
  00014	eb000000	 bl          NKDbgPrintfW

; 521  : 
; 522  :     OALMSG( 1, (L"\tSRCONFIG:\t\t%x\r\n", pSr->sr_regs.omap_37xx.SRCONFIG));

  00018	e5941000	 ldr         r1, [r4]
  0001c	e59f00d8	 ldr         r0, [pc, #0xD8]
  00020	eb000000	 bl          NKDbgPrintfW

; 523  :     OALMSG( 1, (L"\tSRSTATUS:\t\t%x\r\n", pSr->sr_regs.omap_37xx.SRSTATUS));

  00024	e5941004	 ldr         r1, [r4, #4]
  00028	e59f00c8	 ldr         r0, [pc, #0xC8]
  0002c	eb000000	 bl          NKDbgPrintfW

; 524  :     OALMSG( 1, (L"\tSENVAL:\t\t%x\r\n", pSr->sr_regs.omap_37xx.SENVAL));

  00030	e5941008	 ldr         r1, [r4, #8]
  00034	e59f00b8	 ldr         r0, [pc, #0xB8]
  00038	eb000000	 bl          NKDbgPrintfW

; 525  :     OALMSG( 1, (L"\tSENMIN:\t\t%x\r\n", pSr->sr_regs.omap_37xx.SENMIN));

  0003c	e594100c	 ldr         r1, [r4, #0xC]
  00040	e59f00a8	 ldr         r0, [pc, #0xA8]
  00044	eb000000	 bl          NKDbgPrintfW

; 526  :     OALMSG( 1, (L"\tSENMAX:\t\t%x\r\n", pSr->sr_regs.omap_37xx.SENMAX));

  00048	e5941010	 ldr         r1, [r4, #0x10]
  0004c	e59f0098	 ldr         r0, [pc, #0x98]
  00050	eb000000	 bl          NKDbgPrintfW

; 527  :     OALMSG( 1, (L"\tSENAVG:\t\t%x\r\n", pSr->sr_regs.omap_37xx.SENAVG));

  00054	e5941014	 ldr         r1, [r4, #0x14]
  00058	e59f0088	 ldr         r0, [pc, #0x88]
  0005c	eb000000	 bl          NKDbgPrintfW

; 528  :     OALMSG( 1, (L"\tAVGWEIGHT:\t\t%x\r\n", pSr->sr_regs.omap_37xx.AVGWEIGHT));

  00060	e5941018	 ldr         r1, [r4, #0x18]
  00064	e59f0078	 ldr         r0, [pc, #0x78]
  00068	eb000000	 bl          NKDbgPrintfW

; 529  :     OALMSG( 1, (L"\tNVALUERECIPROCAL:\t\t%x\r\n", pSr->sr_regs.omap_37xx.NVALUERECIPROCAL));

  0006c	e594101c	 ldr         r1, [r4, #0x1C]
  00070	e59f0068	 ldr         r0, [pc, #0x68]
  00074	eb000000	 bl          NKDbgPrintfW

; 530  :     OALMSG( 1, (L"\tIRQSTATUS_RAW:\t\t%x\r\n", pSr->sr_regs.omap_37xx.IRQSTATUS_RAW));

  00078	e5941024	 ldr         r1, [r4, #0x24]
  0007c	e59f0058	 ldr         r0, [pc, #0x58]
  00080	eb000000	 bl          NKDbgPrintfW

; 531  :     OALMSG( 1, (L"\tIRQSTATUS:\t\t%x\r\n", pSr->sr_regs.omap_37xx.IRQSTATUS));

  00084	e5941028	 ldr         r1, [r4, #0x28]
  00088	e59f0048	 ldr         r0, [pc, #0x48]
  0008c	eb000000	 bl          NKDbgPrintfW

; 532  :     OALMSG( 1, (L"\tIRQENABLE_SET:\t\t%x\r\n", pSr->sr_regs.omap_37xx.IRQENABLE_SET));

  00090	e594102c	 ldr         r1, [r4, #0x2C]
  00094	e59f0038	 ldr         r0, [pc, #0x38]
  00098	eb000000	 bl          NKDbgPrintfW

; 533  :     OALMSG( 1, (L"\tIRQENABLE_CLR:\t\t%x\r\n", pSr->sr_regs.omap_37xx.IRQENABLE_CLR));

  0009c	e5941030	 ldr         r1, [r4, #0x30]
  000a0	e59f0028	 ldr         r0, [pc, #0x28]
  000a4	eb000000	 bl          NKDbgPrintfW

; 534  :     OALMSG( 1, (L"\tSENERROR:\t\t%x\r\n", pSr->sr_regs.omap_37xx.SENERROR));

  000a8	e5941034	 ldr         r1, [r4, #0x34]
  000ac	e59f0018	 ldr         r0, [pc, #0x18]
  000b0	eb000000	 bl          NKDbgPrintfW

; 535  :     OALMSG( 1, (L"\tERRCONFIG:\t\t%x\r\n", pSr->sr_regs.omap_37xx.ERRCONFIG));

  000b4	e5941038	 ldr         r1, [r4, #0x38]
  000b8	e59f0008	 ldr         r0, [pc, #8]
  000bc	eb000000	 bl          NKDbgPrintfW

; 536  : #else
; 537  : 	UNREFERENCED_PARAMETER(channel);
; 538  : #endif
; 539  : }

  000c0	e8bd4010	 ldmia       sp!, {r4, lr}
  000c4	e12fff1e	 bx          lr
  000c8		 |$LN6@SmartRefle@21|
  000c8		 |$LN7@SmartRefle@21|
  000c8	00000000	 DCD         |??_C@_1CE@GPEMKPMB@?$AA?7?$AAE?$AAR?$AAR?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000cc		 |$LN8@SmartRefle@21|
  000cc	00000000	 DCD         |??_C@_1CC@FLBPAKFF@?$AA?7?$AAS?$AAE?$AAN?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000d0		 |$LN9@SmartRefle@21|
  000d0	00000000	 DCD         |??_C@_1CM@FDHEPIP@?$AA?7?$AAI?$AAR?$AAQ?$AAE?$AAN?$AAA?$AAB?$AAL?$AAE?$AA_?$AAC?$AAL?$AAR?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000d4		 |$LN10@SmartRefle@21|
  000d4	00000000	 DCD         |??_C@_1CM@FKAAFELP@?$AA?7?$AAI?$AAR?$AAQ?$AAE?$AAN?$AAA?$AAB?$AAL?$AAE?$AA_?$AAS?$AAE?$AAT?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000d8		 |$LN11@SmartRefle@21|
  000d8	00000000	 DCD         |??_C@_1CE@CCLNJOME@?$AA?7?$AAI?$AAR?$AAQ?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000dc		 |$LN12@SmartRefle@21|
  000dc	00000000	 DCD         |??_C@_1CM@CJHEJDAE@?$AA?7?$AAI?$AAR?$AAQ?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA_?$AAR?$AAA?$AAW?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000e0		 |$LN13@SmartRefle@21|
  000e0	00000000	 DCD         |??_C@_1DC@PJEIKBGE@?$AA?7?$AAN?$AAV?$AAA?$AAL?$AAU?$AAE?$AAR?$AAE?$AAC?$AAI?$AAP?$AAR?$AAO?$AAC?$AAA?$AAL?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000e4		 |$LN14@SmartRefle@21|
  000e4	00000000	 DCD         |??_C@_1CE@OLFJAIOF@?$AA?7?$AAA?$AAV?$AAG?$AAW?$AAE?$AAI?$AAG?$AAH?$AAT?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000e8		 |$LN15@SmartRefle@21|
  000e8	00000000	 DCD         |??_C@_1BO@CGMCEODF@?$AA?7?$AAS?$AAE?$AAN?$AAA?$AAV?$AAG?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000ec		 |$LN16@SmartRefle@21|
  000ec	00000000	 DCD         |??_C@_1BO@BKHOAOPD@?$AA?7?$AAS?$AAE?$AAN?$AAM?$AAA?$AAX?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000f0		 |$LN17@SmartRefle@21|
  000f0	00000000	 DCD         |??_C@_1BO@KHHKDINM@?$AA?7?$AAS?$AAE?$AAN?$AAM?$AAI?$AAN?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000f4		 |$LN18@SmartRefle@21|
  000f4	00000000	 DCD         |??_C@_1BO@BGLJEEOM@?$AA?7?$AAS?$AAE?$AAN?$AAV?$AAA?$AAL?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000f8		 |$LN19@SmartRefle@21|
  000f8	00000000	 DCD         |??_C@_1CC@MPAJGDLO@?$AA?7?$AAS?$AAR?$AAS?$AAT?$AAA?$AAT?$AAU?$AAS?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000fc		 |$LN20@SmartRefle@21|
  000fc	00000000	 DCD         |??_C@_1CC@KLDDLMIK@?$AA?7?$AAS?$AAR?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?3?$AA?7?$AA?7?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00100		 |$LN21@SmartRefle@21|
  00100	00000000	 DCD         |??_C@_1DM@HCJMCLID@?$AA?$CL?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?5?$AAD?$AAU?$AAM?$AAP?$AA?3?$AA?$AN?$AA?6?$AA?$AA@|
  00104		 |$LN22@SmartRefle@21|
  00104	00000000	 DCD         |g_pSr|
  00108		 |$M47175|

			 ENDP  ; |SmartReflex_dump_register_v2|

	EXPORT	|SmartReflex_Get_functions_hander|
	EXPORT	|??_C@_1IK@BPJEEHJP@?$AA?$AN?$AA?6?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA_?$AAG?$AAe?$AAt?$AA_?$AAf?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AAs?$AA_?$AAh?$AAa?$AAn?$AAd@| [ DATA ] ; `string'
	IMPORT	|dpCurSettings|

  00000			 AREA	 |.pdata|, PDATA
|$T47207| DCD	|$LN12@SmartRefle@22|
	DCD	0x40001801

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IK@BPJEEHJP@?$AA?$AN?$AA?6?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA_?$AAG?$AAe?$AAt?$AA_?$AAf?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AAs?$AA_?$AAh?$AAa?$AAn?$AAd@| DCB 0xd
	DCB	0x0, 0xa, 0x0, "S", 0x0, "m", 0x0, "a", 0x0, "r", 0x0, "t"
	DCB	0x0, "R", 0x0, "e", 0x0, "f", 0x0, "l", 0x0, "e", 0x0, "x"
	DCB	0x0, "_", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "_", 0x0, "f"
	DCB	0x0, "u", 0x0, "n", 0x0, "c", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, "s", 0x0, "_", 0x0, "h", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "S", 0x0, "m", 0x0, "a", 0x0, "r", 0x0, "t"
	DCB	0x0, "R", 0x0, "e", 0x0, "f", 0x0, "l", 0x0, "e", 0x0, "x"
	DCB	0x0, " ", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, "s", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, ":", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SmartReflex_Get_functions_hander| PROC

; 584  : {

  00000		 |$LN12@SmartRefle@22|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M47204|
  00004	e1a01000	 mov         r1, r0

; 585  :     SmartReflex_Functions_t* pFunc = NULL;

  00008	e3a04000	 mov         r4, #0

; 586  : 
; 587  :     switch (Version)

  0000c	e3510001	 cmp         r1, #1
  00010	0a00000b	 beq         |$LN3@SmartRefle@22|
  00014	e3510002	 cmp         r1, #2
  00018	0a000006	 beq         |$LN2@SmartRefle@22|

; 596  : 			
; 597  :         default:
; 598  :             OALMSG( OAL_ERROR, (L"\r\nSmartReflex_Get_functions_hander: Invalid SmartReflex version:%d\r\n", Version));

  0001c	e59f3038	 ldr         r3, [pc, #0x38]
  00020	e5933440	 ldr         r3, [r3, #0x440]
  00024	e3130001	 tst         r3, #1
  00028	0a000006	 beq         |$LN4@SmartRefle@22|
  0002c	e59f0024	 ldr         r0, [pc, #0x24]
  00030	eb000000	 bl          NKDbgPrintfW

; 599  :             break;

  00034	ea000003	 b           |$LN4@SmartRefle@22|
  00038		 |$LN2@SmartRefle@22|

; 591  :             break;
; 592  : 			
; 593  :         case 2:
; 594  :             pFunc = &SmartReflex_Functions_v2;

  00038	e59f3014	 ldr         r3, [pc, #0x14]
  0003c	e283403c	 add         r4, r3, #0x3C

; 595  :             break;

  00040	ea000000	 b           |$LN4@SmartRefle@22|
  00044		 |$LN3@SmartRefle@22|

; 588  :     {
; 589  :         case 1:
; 590  :             pFunc = &SmartReflex_Functions_v1;

  00044	e59f4008	 ldr         r4, [pc, #8]
  00048		 |$LN4@SmartRefle@22|

; 600  :     }
; 601  :     return (pFunc);
; 602  : }

  00048	e1a00004	 mov         r0, r4
  0004c	e8bd4010	 ldmia       sp!, {r4, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$LN13@SmartRefle@22|
  00054		 |$LN14@SmartRefle@22|
  00054	00000000	 DCD         |SmartReflex_Functions_v1|
  00058		 |$LN15@SmartRefle@22|
  00058	00000000	 DCD         |??_C@_1IK@BPJEEHJP@?$AA?$AN?$AA?6?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA_?$AAG?$AAe?$AAt?$AA_?$AAf?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AAs?$AA_?$AAh?$AAa?$AAn?$AAd@|
  0005c		 |$LN16@SmartRefle@22|
  0005c	00000000	 DCD         |dpCurSettings|
  00060		 |$M47205|

			 ENDP  ; |SmartReflex_Get_functions_hander|

	END
