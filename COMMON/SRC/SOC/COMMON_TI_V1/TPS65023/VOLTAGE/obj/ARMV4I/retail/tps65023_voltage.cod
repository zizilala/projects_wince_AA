; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\TPS65023\VOLTAGE\tps65023_voltage.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|LDO2_table| [ DATA ]
	EXPORT	|LDO1_table| [ DATA ]

  00000			 AREA	 |.bss|, NOINIT
|g_hTwl| %	0x4

  00000			 AREA	 |.data|, DATA
|LDO2_table| DCW 0x41a
	DCW	0x4b0
	DCW	0x514
	DCW	0x708
	DCW	0x9c4
	DCW	0xaf0
	DCW	0xbb8
	DCW	0xce4
	DCW	0xffff
	%	2
|LDO1_table| DCW 0x3e8
	DCW	0x44c
	DCW	0x514
	DCW	0x708
	DCW	0x898
	DCW	0xa28
	DCW	0xaf0
	DCW	0xc4e
	DCW	0xffff

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|ValidateHandle|
	IMPORT	|TWLOpen|
; File c:\wince600\platform\common\src\soc\common_ti_v1\tps65023\voltage\tps65023_voltage.c

  00000			 AREA	 |.pdata|, PDATA
|$T43673| DCD	|$LN9@ValidateHa|
	DCD	0x40000f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |ValidateHandle| PROC

; 90   : {

  00000		 |$LN9@ValidateHa|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M43670|

; 91   : 	if ( g_hTwl == NULL)

  00004	e59f402c	 ldr         r4, [pc, #0x2C]
  00008	e5943000	 ldr         r3, [r4]
  0000c	e3530000	 cmp         r3, #0
  00010	1a000005	 bne         |$LN6@ValidateHa|

; 92   : 	{
; 93   : 		g_hTwl = TWLOpen();

  00014	eb000000	 bl          TWLOpen
  00018	e3500000	 cmp         r0, #0
  0001c	e5840000	 str         r0, [r4]

; 94   : 	}
; 95   : 	return (g_hTwl != NULL);

  00020	03a00000	 moveq       r0, #0

; 96   : }

  00024	08bd4010	 ldmeqia     sp!, {r4, lr}
  00028	012fff1e	 bxeq        lr
  0002c		 |$LN6@ValidateHa|

; 94   : 	}
; 95   : 	return (g_hTwl != NULL);

  0002c	e3a00001	 mov         r0, #1

; 96   : }

  00030	e8bd4010	 ldmia       sp!, {r4, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$LN10@ValidateHa|
  00038		 |$LN11@ValidateHa|
  00038	00000000	 DCD         |g_hTwl|
  0003c		 |$M43671|

			 ENDP  ; |ValidateHandle|


  00000			 AREA	 |.pdata|, PDATA
|$T43691| DCD	|$LN12@FindVoltag|
	DCD	0x40001301
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |FindVoltageIndex| PROC

; 99   : {

  00000		 |$LN12@FindVoltag|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M43688|
  00004	e1a02000	 mov         r2, r0

; 100  :     BYTE i=0;    
; 101  :     while (table[i] != 0xFFFF)    

  00008	e3a00cff	 mov         r0, #0xFF, 24
  0000c	e1d230b0	 ldrh        r3, [r2]
  00010	e380e0ff	 orr         lr, r0, #0xFF
  00014	e3a00000	 mov         r0, #0
  00018	ea000005	 b           |$LN9@FindVoltag|
  0001c		 |$LL3@FindVoltag|

; 102  :     {
; 103  :         if (mv < table[i])

  0001c	e1510003	 cmp         r1, r3
  00020	3a000007	 bcc         |$LN4@FindVoltag|

; 104  :         {            
; 105  :             return i;            
; 106  :         }
; 107  :         i++;

  00024	e2803001	 add         r3, r0, #1
  00028	e20300ff	 and         r0, r3, #0xFF
  0002c	e0823080	 add         r3, r2, r0, lsl #1
  00030	e1d330b0	 ldrh        r3, [r3]
  00034		 |$LN9@FindVoltag|
  00034	e153000e	 cmp         r3, lr
  00038	1afffff7	 bne         |$LL3@FindVoltag|

; 108  :     }
; 109  :     return i-1;

  0003c	e28030ff	 add         r3, r0, #0xFF
  00040	e20300ff	 and         r0, r3, #0xFF
  00044		 |$LN4@FindVoltag|

; 110  : }

  00044	e49de004	 ldr         lr, [sp], #4
  00048	e12fff1e	 bx          lr
  0004c		 |$M43689|

			 ENDP  ; |FindVoltageIndex|

	EXPORT	|TWLSetVoltage|
	IMPORT	|TWLSetValue|
	IMPORT	|TWLWriteRegs|

  00000			 AREA	 |.pdata|, PDATA
|$T43730| DCD	|$LN38@TWLSetVolt|
	DCD	0x40006802
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |TWLSetVoltage| PROC

; 116  : {

  00000		 |$LN38@TWLSetVolt|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M43727|
  00008	e1a04001	 mov         r4, r1
  0000c	e1a05000	 mov         r5, r0

; 117  : 	BYTE Buffer;
; 118  : 	ValidateHandle();

  00010	eb000000	 bl          ValidateHandle

; 119  : 	
; 120  : 	switch(voltage)

  00014	e3550000	 cmp         r5, #0
  00018	0a00003d	 beq         |$LN13@TWLSetVolt|
  0001c	e3550001	 cmp         r5, #1
  00020	0a00001d	 beq         |$LN10@TWLSetVolt|
  00024	e3550002	 cmp         r5, #2
  00028	0a000004	 beq         |$LN7@TWLSetVolt|
  0002c	e3550003	 cmp         r5, #3
  00030		 |$LN11@TWLSetVolt|

; 121  : 	{
; 122  : 	case VLDO1:
; 123  : 		if( mv < VLDO1_MIN_VOLTAGE || mv > VLDO1_MAX_VOLTAGE)
; 124  : 			return FALSE;

  00030	e3a00000	 mov         r0, #0
  00034		 |$LN16@TWLSetVolt|

; 159  : }

  00034	e28dd004	 add         sp, sp, #4
  00038	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN7@TWLSetVolt|

; 135  : 
; 136  : 	case VDCDC1:
; 137  : 		if( mv < VDCDC1_MIN_VOLTAGE || mv > VDCDC1_MAX_VOLTAGE)

  00040	e2443e32	 sub         r3, r4, #0x32, 28
  00044	e3530e32	 cmp         r3, #0x32, 28
  00048	8afffff8	 bhi         |$LN11@TWLSetVolt|

; 139  :         
; 140  :         if (mv > 1575)  //special case (0x1F that should be 1575mv is actually 1600mv)

  0004c	e3a03c06	 mov         r3, #6, 24
  00050	e3833027	 orr         r3, r3, #0x27
  00054	e1540003	 cmp         r4, r3

; 141  :             mv = 1575;

  00058	81a04003	 movhi       r4, r3

; 142  : 
; 143  : 		Buffer = (BYTE) ((mv - VDCDC1_MIN_VOLTAGE)/VDCDC1_VOLTAGE_STEP);        

  0005c	e59f3138	 ldr         r3, [pc, #0x138]
  00060	e2444e32	 sub         r4, r4, #0x32, 28

; 144  : 		TWLWriteRegs(g_hTwl, DEFCORE, &Buffer, 1);

  00064	e59f5128	 ldr         r5, [pc, #0x128]
  00068	e082e394	 umull       lr, r2, r4, r3
  0006c	e3a03001	 mov         r3, #1
  00070	e5950000	 ldr         r0, [r5]
  00074	e1a011a2	 mov         r1, r2, lsr #3
  00078	e28d2000	 add         r2, sp, #0
  0007c	e5cd1000	 strb        r1, [sp]
  00080	e3a01006	 mov         r1, #6
  00084	eb000000	 bl          TWLWriteRegs

; 145  :         TWLSetValue(g_hTwl, CON_CTRL2, CON_CTRL2_GO, CON_CTRL2_GO);

  00088	e5950000	 ldr         r0, [r5]
  0008c	e3a03080	 mov         r3, #0x80
  00090	e3a02080	 mov         r2, #0x80
  00094	e3a01005	 mov         r1, #5

; 146  :         
; 147  : 		break;

  00098	ea00003a	 b           |$LN34@TWLSetVolt|
  0009c		 |$LN10@TWLSetVolt|

; 138  : 			return FALSE;

  0009c	e3a03b01	 mov         r3, #1, 22
  000a0	e383301a	 orr         r3, r3, #0x1A
  000a4	e3a01b02	 mov         r1, #2, 22
  000a8	e0442003	 sub         r2, r4, r3
  000ac	e38130ca	 orr         r3, r1, #0xCA
  000b0	e1520003	 cmp         r2, r3
  000b4	8affffdd	 bhi         |$LN11@TWLSetVolt|
  000b8	e59f10d8	 ldr         r1, [pc, #0xD8]
  000bc	e3a03cff	 mov         r3, #0xFF, 24
  000c0	e38320ff	 orr         r2, r3, #0xFF
  000c4	e1d130b0	 ldrh        r3, [r1]
  000c8	e3a0e000	 mov         lr, #0
  000cc	e1530002	 cmp         r3, r2
  000d0	0a000007	 beq         |$LN24@TWLSetVolt|

; 132  : 		Buffer = FindVoltageIndex(LDO2_table,mv);		

  000d4		 |$LL25@TWLSetVolt|
  000d4	e1540003	 cmp         r4, r3
  000d8	3a000007	 bcc         |$LN26@TWLSetVolt|
  000dc	e28e3001	 add         r3, lr, #1
  000e0	e203e0ff	 and         lr, r3, #0xFF
  000e4	e081308e	 add         r3, r1, lr, lsl #1
  000e8	e1d330b0	 ldrh        r3, [r3]
  000ec	e1530002	 cmp         r3, r2
  000f0	1afffff7	 bne         |$LL25@TWLSetVolt|
  000f4		 |$LN24@TWLSetVolt|
  000f4	e28e30ff	 add         r3, lr, #0xFF
  000f8	e203e0ff	 and         lr, r3, #0xFF
  000fc		 |$LN26@TWLSetVolt|

; 133  : 		TWLSetValue(g_hTwl, LDO_CTRL, Buffer << 4, 0x7 << 4);

  000fc	e59f2090	 ldr         r2, [pc, #0x90]
  00100	e1a0120e	 mov         r1, lr, lsl #4
  00104	e3a03070	 mov         r3, #0x70
  00108	e5920000	 ldr         r0, [r2]
  0010c	e20120ff	 and         r2, r1, #0xFF

; 134  : 		break;

  00110	ea00001a	 b           |$LN35@TWLSetVolt|
  00114		 |$LN13@TWLSetVolt|

; 127  : 		break;
; 128  : 
; 129  : 	case VLDO2:
; 130  : 		if( mv < VLDO2_MIN_VOLTAGE || mv > VLDO2_MAX_VOLTAGE)
; 131  : 			return FALSE;

  00114	e3a03b02	 mov         r3, #2, 22
  00118	e3832066	 orr         r2, r3, #0x66
  0011c	e2443ffa	 sub         r3, r4, #0xFA, 30
  00120	e1530002	 cmp         r3, r2
  00124	8affffc1	 bhi         |$LN11@TWLSetVolt|
  00128	e59f1068	 ldr         r1, [pc, #0x68]
  0012c	e3a03cff	 mov         r3, #0xFF, 24
  00130	e38320ff	 orr         r2, r3, #0xFF
  00134	e1d131b4	 ldrh        r3, [r1, #0x14]
  00138	e3a0e000	 mov         lr, #0
  0013c	e1530002	 cmp         r3, r2
  00140	0a000008	 beq         |$LN19@TWLSetVolt|

; 125  : 		Buffer = FindVoltageIndex(LDO1_table,mv);

  00144	e2811014	 add         r1, r1, #0x14
  00148		 |$LL20@TWLSetVolt|
  00148	e1540003	 cmp         r4, r3
  0014c	3a000007	 bcc         |$LN21@TWLSetVolt|
  00150	e28e3001	 add         r3, lr, #1
  00154	e203e0ff	 and         lr, r3, #0xFF
  00158	e081308e	 add         r3, r1, lr, lsl #1
  0015c	e1d330b0	 ldrh        r3, [r3]
  00160	e1530002	 cmp         r3, r2
  00164	1afffff7	 bne         |$LL20@TWLSetVolt|
  00168		 |$LN19@TWLSetVolt|
  00168	e28e30ff	 add         r3, lr, #0xFF
  0016c	e203e0ff	 and         lr, r3, #0xFF
  00170		 |$LN21@TWLSetVolt|

; 126  : 		TWLSetValue(g_hTwl, LDO_CTRL, Buffer, 0x7);

  00170	e59f101c	 ldr         r1, [pc, #0x1C]
  00174	e3a03007	 mov         r3, #7
  00178	e1a0200e	 mov         r2, lr
  0017c	e5910000	 ldr         r0, [r1]
  00180		 |$LN35@TWLSetVolt|
  00180	e5cde000	 strb        lr, [sp]
  00184	e3a01008	 mov         r1, #8
  00188		 |$LN34@TWLSetVolt|
  00188	eb000000	 bl          TWLSetValue

; 148  : 
; 149  : 	case VDCDC2:
; 150  : 		return FALSE;
; 151  : 
; 152  : 	case VDCDC3:
; 153  : 		return FALSE;
; 154  : 
; 155  : 	default :
; 156  : 		return FALSE;
; 157  : 	}
; 158  : 	return TRUE;

  0018c	e3a00001	 mov         r0, #1
  00190	eaffffa7	 b           |$LN16@TWLSetVolt|
  00194		 |$LN39@TWLSetVolt|
  00194		 |$LN40@TWLSetVolt|
  00194	00000000	 DCD         |g_hTwl|
  00198		 |$LN41@TWLSetVolt|
  00198	00000000	 DCD         |LDO2_table|
  0019c		 |$LN42@TWLSetVolt|
  0019c	51eb851f	 DCD         0x51eb851f
  001a0		 |$M43728|

			 ENDP  ; |TWLSetVoltage|

	EXPORT	|TWLGetVoltage|
	IMPORT	|TWLReadRegs|

  00000			 AREA	 |.pdata|, PDATA
|$T43748| DCD	|$LN16@TWLGetVolt|
	DCD	0x40003e02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |TWLGetVoltage| PROC

; 166  : {

  00000		 |$LN16@TWLGetVolt|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M43745|
  00008	e1a05001	 mov         r5, r1
  0000c	e1a04000	 mov         r4, r0

; 167  : 	BYTE Buffer;
; 168  : 	ValidateHandle();

  00010	eb000000	 bl          ValidateHandle

; 169  : 
; 170  : 	switch(voltage)

  00014	e3540000	 cmp         r4, #0
  00018	0a000023	 beq         |$LN7@TWLGetVolt|
  0001c	e3540001	 cmp         r4, #1
  00020	0a000015	 beq         |$LN6@TWLGetVolt|
  00024	e3540002	 cmp         r4, #2
  00028	0a000002	 beq         |$LN5@TWLGetVolt|
  0002c	e3540003	 cmp         r4, #3
  00030	e3a00000	 mov         r0, #0

; 188  : 
; 189  : 	case VDCDC2:
; 190  : 		return FALSE;
; 191  : 		break;
; 192  : 
; 193  : 	case VDCDC3:
; 194  : 		return FALSE;

  00034	ea00002a	 b           |$LN10@TWLGetVolt|
  00038		 |$LN5@TWLGetVolt|

; 181  : 
; 182  : 	case VDCDC1:
; 183  : 		TWLReadRegs(g_hTwl, DEFCORE, &Buffer, 1);        

  00038	e59f10b4	 ldr         r1, [pc, #0xB4]
  0003c	e3a03001	 mov         r3, #1
  00040	e28d2000	 add         r2, sp, #0
  00044	e5910000	 ldr         r0, [r1]
  00048	e3a01006	 mov         r1, #6
  0004c	eb000000	 bl          TWLReadRegs

; 184  : 		*pmv = (Buffer * VDCDC1_VOLTAGE_STEP) + VDCDC1_MIN_VOLTAGE;

  00050	e5dd3000	 ldrb        r3, [sp]
  00054	e3a01c06	 mov         r1, #6, 24
  00058	e2833020	 add         r3, r3, #0x20
  0005c	e0833103	 add         r3, r3, r3, lsl #2
  00060	e0832103	 add         r2, r3, r3, lsl #2

; 185  :         if (*pmv == 1575) //special case

  00064	e3813027	 orr         r3, r1, #0x27
  00068	e1520003	 cmp         r2, r3
  0006c	e5852000	 str         r2, [r5]
  00070	1a00001a	 bne         |$LN8@TWLGetVolt|

; 186  :             *pmv = 1600; 

  00074	e3a03d19	 mov         r3, #0x19, 26

; 187  : 		break;

  00078	ea000017	 b           |$LN12@TWLGetVolt|
  0007c		 |$LN6@TWLGetVolt|

; 175  : 		break;
; 176  : 
; 177  : 	case VLDO2:
; 178  : 		TWLReadRegs(g_hTwl, LDO_CTRL, &Buffer, 1);

  0007c	e59f1070	 ldr         r1, [pc, #0x70]
  00080	e3a03001	 mov         r3, #1
  00084	e28d2000	 add         r2, sp, #0
  00088	e5910000	 ldr         r0, [r1]
  0008c	e3a01008	 mov         r1, #8
  00090	eb000000	 bl          TWLReadRegs

; 179  : 		*pmv = LDO2_table[(Buffer >> 4) & 0x7];

  00094	e5dd3000	 ldrb        r3, [sp]
  00098	e59f2050	 ldr         r2, [pc, #0x50]
  0009c	e1a03c83	 mov         r3, r3, lsl #25
  000a0	e1a03ea3	 mov         r3, r3, lsr #29
  000a4	e0823083	 add         r3, r2, r3, lsl #1

; 180  : 		break;

  000a8	ea00000a	 b           |$LN13@TWLGetVolt|
  000ac		 |$LN7@TWLGetVolt|

; 171  : 	{
; 172  : 	case VLDO1:
; 173  : 		TWLReadRegs(g_hTwl, LDO_CTRL, &Buffer, 1);		

  000ac	e59f1040	 ldr         r1, [pc, #0x40]
  000b0	e3a03001	 mov         r3, #1
  000b4	e28d2000	 add         r2, sp, #0
  000b8	e5910000	 ldr         r0, [r1]
  000bc	e3a01008	 mov         r1, #8
  000c0	eb000000	 bl          TWLReadRegs

; 174  : 		*pmv = LDO1_table[Buffer & 0x7];

  000c4	e5dd3000	 ldrb        r3, [sp]
  000c8	e59f2020	 ldr         r2, [pc, #0x20]
  000cc	e2031007	 and         r1, r3, #7
  000d0	e2823014	 add         r3, r2, #0x14
  000d4	e0833081	 add         r3, r3, r1, lsl #1
  000d8		 |$LN13@TWLGetVolt|
  000d8	e1d330b0	 ldrh        r3, [r3]
  000dc		 |$LN12@TWLGetVolt|
  000dc	e5853000	 str         r3, [r5]
  000e0		 |$LN8@TWLGetVolt|

; 195  : 		break;
; 196  : 
; 197  : 	default :
; 198  : 		return FALSE;
; 199  : 	}
; 200  : 	return TRUE;

  000e0	e3a00001	 mov         r0, #1
  000e4		 |$LN10@TWLGetVolt|

; 201  : }

  000e4	e28dd004	 add         sp, sp, #4
  000e8	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000ec	e12fff1e	 bx          lr
  000f0		 |$LN17@TWLGetVolt|
  000f0		 |$LN18@TWLGetVolt|
  000f0	00000000	 DCD         |LDO2_table|
  000f4		 |$LN19@TWLGetVolt|
  000f4	00000000	 DCD         |g_hTwl|
  000f8		 |$M43746|

			 ENDP  ; |TWLGetVoltage|

	EXPORT	|TWLGetVoltageStatus|

  00000			 AREA	 |.pdata|, PDATA
|$T43764| DCD	|$LN25@TWLGetVolt@2|
	DCD	0x40003702
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |TWLGetVoltageStatus| PROC

; 208  : {

  00000		 |$LN25@TWLGetVolt@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M43761|
  00008	e1a04001	 mov         r4, r1
  0000c	e1a05000	 mov         r5, r0

; 209  : 	BYTE Buffer;
; 210  : 	*status = VOLTAGE_OK;

  00010	e3a03001	 mov         r3, #1
  00014	e5843000	 str         r3, [r4]

; 211  : 	ValidateHandle();

  00018	eb000000	 bl          ValidateHandle

; 212  : 	if(!TWLReadRegs(g_hTwl, PGOODZ, &Buffer, 1))

  0001c	e59fe0b4	 ldr         lr, [pc, #0xB4]
  00020	e3a03001	 mov         r3, #1
  00024	e28d2000	 add         r2, sp, #0
  00028	e59e0000	 ldr         r0, [lr]
  0002c	e3a01001	 mov         r1, #1
  00030	eb000000	 bl          TWLReadRegs
  00034	e3500000	 cmp         r0, #0
  00038	1a000001	 bne         |$LN18@TWLGetVolt@2|
  0003c		 |$LN22@TWLGetVolt@2|

; 213  : 		return FALSE;

  0003c	e3a00000	 mov         r0, #0
  00040	ea000021	 b           |$LN19@TWLGetVolt@2|
  00044		 |$LN18@TWLGetVolt@2|

; 214  : 	switch(voltage)

  00044	e3550000	 cmp         r5, #0
  00048	0a00001a	 beq         |$LN15@TWLGetVolt@2|
  0004c	e3550001	 cmp         r5, #1
  00050	0a000015	 beq         |$LN13@TWLGetVolt@2|
  00054	e3550002	 cmp         r5, #2
  00058	0a00000d	 beq         |$LN7@TWLGetVolt@2|
  0005c	e3550003	 cmp         r5, #3
  00060	0a00000e	 beq         |$LN9@TWLGetVolt@2|
  00064	e3550004	 cmp         r5, #4
  00068	0a000009	 beq         |$LN7@TWLGetVolt@2|
  0006c	e3550005	 cmp         r5, #5
  00070	0a000004	 beq         |$LN5@TWLGetVolt@2|
  00074	e3550006	 cmp         r5, #6

; 245  : 
; 246  : 	case PWRFAIL:
; 247  : 		if(Buffer & PGOODZ_PWRFAIL)
; 248  : 			*status = VOLTAGE_FAILURE;
; 249  : 		break;
; 250  : 
; 251  : 	default :
; 252  : 		return FALSE;

  00078	1affffef	 bne         |$LN22@TWLGetVolt@2|
  0007c	e5dd3000	 ldrb        r3, [sp]
  00080	e3130080	 tst         r3, #0x80
  00084	ea00000d	 b           |$LN21@TWLGetVolt@2|
  00088		 |$LN5@TWLGetVolt@2|

; 240  : 
; 241  : 	case LOWBATT:
; 242  : 		if(Buffer & PGOODZ_LOWBATT)

  00088	e5dd3000	 ldrb        r3, [sp]
  0008c	e3130040	 tst         r3, #0x40

; 243  : 			*status = VOLTAGE_FAILURE;
; 244  : 		break;

  00090	ea00000a	 b           |$LN21@TWLGetVolt@2|
  00094		 |$LN7@TWLGetVolt@2|

; 235  : 
; 236  : 	case VDCDC3:
; 237  : 		if(Buffer & PGOODZ_DCDC1)

  00094	e5dd3000	 ldrb        r3, [sp]
  00098	e3130020	 tst         r3, #0x20

; 238  : 			*status = VOLTAGE_FAILURE;
; 239  : 		break;

  0009c	ea000007	 b           |$LN21@TWLGetVolt@2|
  000a0		 |$LN9@TWLGetVolt@2|

; 225  : 
; 226  : 	case VDCDC1:
; 227  : 		if(Buffer & PGOODZ_DCDC1)
; 228  : 			*status = VOLTAGE_FAILURE;
; 229  : 		break;
; 230  : 
; 231  : 	case VDCDC2:
; 232  : 		if(Buffer & PGOODZ_DCDC2)

  000a0	e5dd3000	 ldrb        r3, [sp]
  000a4	e3130010	 tst         r3, #0x10

; 233  : 			*status = VOLTAGE_FAILURE;
; 234  : 		break;

  000a8	ea000004	 b           |$LN21@TWLGetVolt@2|
  000ac		 |$LN13@TWLGetVolt@2|

; 219  : 		break;
; 220  : 
; 221  : 	case VLDO2:
; 222  : 		if(Buffer & PGOODZ_LDO2)

  000ac	e5dd3000	 ldrb        r3, [sp]
  000b0	e3130004	 tst         r3, #4

; 223  : 			*status = VOLTAGE_FAILURE;
; 224  : 		break;

  000b4	ea000001	 b           |$LN21@TWLGetVolt@2|
  000b8		 |$LN15@TWLGetVolt@2|

; 215  : 	{
; 216  : 	case VLDO1:
; 217  : 		if(Buffer & PGOODZ_LDO1)

  000b8	e5dd3000	 ldrb        r3, [sp]
  000bc	e3130002	 tst         r3, #2
  000c0		 |$LN21@TWLGetVolt@2|

; 218  : 			*status = VOLTAGE_FAILURE;

  000c0	13a03000	 movne       r3, #0
  000c4	15843000	 strne       r3, [r4]

; 253  : 	}
; 254  : 	return TRUE;

  000c8	e3a00001	 mov         r0, #1
  000cc		 |$LN19@TWLGetVolt@2|

; 255  : }

  000cc	e28dd004	 add         sp, sp, #4
  000d0	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000d4	e12fff1e	 bx          lr
  000d8		 |$LN26@TWLGetVolt@2|
  000d8		 |$LN27@TWLGetVolt@2|
  000d8	00000000	 DCD         |g_hTwl|
  000dc		 |$M43762|

			 ENDP  ; |TWLGetVoltageStatus|

	EXPORT	|TWLSetVoltageSlewRate|

  00000			 AREA	 |.pdata|, PDATA
|$T43775| DCD	|$LN6@TWLSetVolt@2|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |TWLSetVoltageSlewRate| PROC

; 261  : {

  00000		 |$LN6@TWLSetVolt@2|
  00000		 |$M43772|

; 262  :     if (voltage != VDCDC1)

  00000	e3a00000	 mov         r0, #0

; 263  :     {
; 264  :         return FALSE;
; 265  :     }
; 266  :     UNREFERENCED_PARAMETER(rate);
; 267  :     return FALSE;
; 268  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M43773|

			 ENDP  ; |TWLSetVoltageSlewRate|

	EXPORT	|TWLGetVoltageSlewRate|

  00000			 AREA	 |.pdata|, PDATA
|$T43784| DCD	|$LN6@TWLGetVolt@3|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |TWLGetVoltageSlewRate| PROC

; 274  : {

  00000		 |$LN6@TWLGetVolt@3|
  00000		 |$M43781|

; 275  :     if (voltage != VDCDC1)

  00000	e3a00000	 mov         r0, #0

; 276  :     {
; 277  :         return FALSE;
; 278  :     }
; 279  :     UNREFERENCED_PARAMETER(rate);
; 280  :     return FALSE;
; 281  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M43782|

			 ENDP  ; |TWLGetVoltageSlewRate|

	EXPORT	|TWLEnableVoltage|

  00000			 AREA	 |.pdata|, PDATA
|$T43798| DCD	|$LN15@TWLEnableV|
	DCD	0x40002101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |TWLEnableVoltage| PROC

; 287  : {

  00000		 |$LN15@TWLEnableV|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M43795|
  00004	e3500000	 cmp         r0, #0

; 288  :     BYTE mask = 0;
; 289  :     switch (voltage)

  00008	0a000011	 beq         |$LN3@TWLEnableV|
  0000c	e3500001	 cmp         r0, #1
  00010	0a00000d	 beq         |$LN2@TWLEnableV|
  00014	e3500002	 cmp         r0, #2
  00018	0a000009	 beq         |$LN6@TWLEnableV|
  0001c	e3500003	 cmp         r0, #3
  00020	0a000005	 beq         |$LN5@TWLEnableV|
  00024	e3500004	 cmp         r0, #4

; 306  :     default: return FALSE;

  00028	13a00000	 movne       r0, #0

; 309  : }

  0002c	149de004	 ldrne       lr, [sp], #4
  00030	112fff1e	 bxne        lr

; 297  :     case VDCDC3:
; 298  :         mask = REG_CTRL_DCDC3;

  00034	e3a03008	 mov         r3, #8

; 299  :         break;

  00038	ea000006	 b           |$LN7@TWLEnableV|
  0003c		 |$LN5@TWLEnableV|

; 294  :     case VDCDC2:
; 295  :         mask = REG_CTRL_DCDC2;

  0003c	e3a03010	 mov         r3, #0x10

; 296  :         break;

  00040	ea000004	 b           |$LN7@TWLEnableV|
  00044		 |$LN6@TWLEnableV|

; 290  :     {
; 291  :     case VDCDC1:
; 292  :         mask = REG_CTRL_DCDC1;

  00044	e3a03020	 mov         r3, #0x20

; 293  :         break;

  00048	ea000002	 b           |$LN7@TWLEnableV|
  0004c		 |$LN2@TWLEnableV|

; 302  :         break;
; 303  :     case VLDO2:
; 304  :         mask = REG_CTRL_LDO2;

  0004c	e3a03004	 mov         r3, #4

; 305  :         break;

  00050	ea000000	 b           |$LN7@TWLEnableV|
  00054		 |$LN3@TWLEnableV|

; 300  :     case VLDO1:
; 301  :         mask = REG_CTRL_LDO1;

  00054	e3a03002	 mov         r3, #2
  00058		 |$LN7@TWLEnableV|

; 307  :     }
; 308  :     return TWLSetValue(g_hTwl, REG_CTRL, fOn ? mask : 0, mask);

  00058	e3510000	 cmp         r1, #0
  0005c	e59f101c	 ldr         r1, [pc, #0x1C]
  00060	11a02003	 movne       r2, r3
  00064	03a02000	 moveq       r2, #0
  00068	e5910000	 ldr         r0, [r1]
  0006c	e20220ff	 and         r2, r2, #0xFF
  00070	e3a01003	 mov         r1, #3
  00074	eb000000	 bl          TWLSetValue

; 309  : }

  00078	e49de004	 ldr         lr, [sp], #4
  0007c	e12fff1e	 bx          lr
  00080		 |$LN16@TWLEnableV|
  00080		 |$LN17@TWLEnableV|
  00080	00000000	 DCD         |g_hTwl|
  00084		 |$M43796|

			 ENDP  ; |TWLEnableVoltage|

	EXPORT	|TWLReadIDCode|

  00000			 AREA	 |.pdata|, PDATA
|$T43810| DCD	|$LN7@TWLReadIDC|
	DCD	0x40000c02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |TWLReadIDCode| PROC

; 319  : {    

  00000		 |$LN7@TWLReadIDC|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M43807|

; 320  :     UINT8 version;
; 321  :     if (TWLReadRegs(hTwl, VERSION, &version, sizeof(version)))

  00008	e3a03001	 mov         r3, #1
  0000c	e28d2000	 add         r2, sp, #0
  00010	e3a01000	 mov         r1, #0
  00014	eb000000	 bl          TWLReadRegs
  00018	e3500000	 cmp         r0, #0

; 322  :     {
; 323  :         return version;

  0001c	15dd0000	 ldrneb      r0, [sp]

; 324  :     }
; 325  :     else
; 326  :     {
; 327  :         return (UINT8) -1;

  00020	03a000ff	 moveq       r0, #0xFF

; 328  :     }
; 329  : }

  00024	e28dd004	 add         sp, sp, #4
  00028	e49de004	 ldr         lr, [sp], #4
  0002c	e12fff1e	 bx          lr
  00030		 |$M43808|

			 ENDP  ; |TWLReadIDCode|

	END
