; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\TPS659XX\WAVE\tps659xx_audio.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|DEVICE_IFC_TWL_GUID| [ DATA ]

  00000			 AREA	 |.bss|, NOINIT
|s_currentAudioMode| % 0x4
|s_pHwCodecConfigInfo| % 0x4

  00000			 AREA	 |.rdata|, DATA, READONLY
|DEVICE_IFC_TWL_GUID| DCD 0xdef0a04b
	DCW	0xb967
	DCW	0x43db
	DCB	0x95
	DCB	0x9e
	DCB	0xd9
	DCB	0xfc
	DCB	0x62
	DCB	0x25
	DCB	0xcd
	DCB	0xeb
	EXPORT	|OpenHwCodecHandle|
	IMPORT	|TWLOpen|
; File c:\wince600\platform\common\src\soc\common_ti_v1\tps659xx\wave\tps659xx_audio.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T36462| DCD	|$LN8@OpenHwCode|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OpenHwCodecHandle| PROC

; 70   : {

  00000		 |$LN8@OpenHwCode|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36459|

; 71   :     HANDLE hDevice = NULL;
; 72   : 
; 73   :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+%S\r\n",__FUNCTION__));
; 74   : 
; 75   :     // Populate the global variable with T2 Hw codec configurations obtained
; 76   :     // from registry
; 77   :     //
; 78   :     s_pHwCodecConfigInfo = pHwCodecConfigInfo;

  00004	e59f300c	 ldr         r3, [pc, #0xC]
  00008	e5830000	 str         r0, [r3]

; 79   : 
; 80   :     hDevice = TWLOpen();

  0000c	eb000000	 bl          TWLOpen

; 81   :     if (hDevice == NULL)
; 82   :     {
; 83   :         RETAILMSG(hDevice == INVALID_HANDLE_VALUE,
; 84   :             (L"WAV:!ERROR Can't load Triton Driver err=0x%08X\r\n",
; 85   :             GetLastError()
; 86   :             ));
; 87   :     }
; 88   : 
; 89   :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-%S\r\n",__FUNCTION__));
; 90   : 
; 91   :     return (hDevice);
; 92   : }

  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$LN9@OpenHwCode|
  00018		 |$LN10@OpenHwCode|
  00018	00000000	 DCD         |s_pHwCodecConfigInfo|
  0001c		 |$M36460|

			 ENDP  ; |OpenHwCodecHandle|

	IMPORT	|TWLWriteRegs|

  00000			 AREA	 |.pdata|, PDATA
|$T36472| DCD	|$LN7@SetHwCodec|
	DCD	0x40000d02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetHwCodecMode_DisableCodecPower| PROC

; 107  : {

  00000		 |$LN7@SetHwCodec|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M36469|
  00008	e3500000	 cmp         r0, #0

; 108  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+%S\r\n",__FUNCTION__));
; 109  : 
; 110  :     if (hTritonDriver)

  0000c	13a03801	 movne       r3, #1, 16

; 111  :         {
; 112  :         UINT8 regVal;
; 113  : 
; 114  :         regVal = 0;
; 115  :         TWLWriteRegs(hTritonDriver, TWL_CODEC_MODE, &regVal, sizeof(regVal));

  00010	13831001	 orrne       r1, r3, #1
  00014	13a0e000	 movne       lr, #0
  00018	13a03001	 movne       r3, #1
  0001c	128d2000	 addne       r2, sp, #0
  00020	15cde000	 strneb      lr, [sp]
  00024	1b000000	 blne        TWLWriteRegs

; 116  :         }
; 117  :     else
; 118  :         {
; 119  :         DEBUGMSG(ZONE_TPS659XX, (L"WAV:%S - hTritonDriver is NULL!!!\r\n",
; 120  :              __FUNCTION__
; 121  :              ));
; 122  :         }
; 123  : 
; 124  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-%S\r\n",__FUNCTION__));
; 125  : }

  00028	e28dd004	 add         sp, sp, #4
  0002c	e49de004	 ldr         lr, [sp], #4
  00030	e12fff1e	 bx          lr
  00034		 |$M36470|

			 ENDP  ; |SetHwCodecMode_DisableCodecPower|


  00000			 AREA	 |.pdata|, PDATA
|$T36480| DCD	|$LN7@SetHwCodec@2|
	DCD	0x40000d02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetHwCodecMode_EnableCodecPower| PROC

; 140  : {

  00000		 |$LN7@SetHwCodec@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M36477|
  00008	e3500000	 cmp         r0, #0

; 141  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+%S\r\n",__FUNCTION__));
; 142  : 
; 143  :     if (hTritonDriver)

  0000c	13a03801	 movne       r3, #1, 16

; 144  :         {
; 145  :         UINT8 regVal;
; 146  : 
; 147  :         regVal = (CODEC_MODE_CODEC_PDZ);
; 148  :         TWLWriteRegs(hTritonDriver, TWL_CODEC_MODE, &regVal, sizeof(regVal));

  00010	13831001	 orrne       r1, r3, #1
  00014	13a0e002	 movne       lr, #2
  00018	13a03001	 movne       r3, #1
  0001c	128d2000	 addne       r2, sp, #0
  00020	15cde000	 strneb      lr, [sp]
  00024	1b000000	 blne        TWLWriteRegs

; 149  :         }
; 150  :     else
; 151  :         {
; 152  :         DEBUGMSG(ZONE_TPS659XX, (L"WAV:%S - hTritonDriver is NULL!!!\r\n",
; 153  :             __FUNCTION__
; 154  :             ));
; 155  :         }
; 156  : 
; 157  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-%S\r\n",__FUNCTION__));
; 158  : }

  00028	e28dd004	 add         sp, sp, #4
  0002c	e49de004	 ldr         lr, [sp], #4
  00030	e12fff1e	 bx          lr
  00034		 |$M36478|

			 ENDP  ; |SetHwCodecMode_EnableCodecPower|


  00000			 AREA	 |.pdata|, PDATA
|$T36488| DCD	|$LN7@SetHwCodec@3|
	DCD	0x40001d02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetHwCodecMode_DisableCodec| PROC

; 173  : {

  00000		 |$LN7@SetHwCodec@3|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M36485|
  00008	e1b04000	 movs        r4, r0

; 174  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+%S\r\n",__FUNCTION__));
; 175  : 
; 176  :     if (hTritonDriver)

  0000c	0a000015	 beq         |$LN2@SetHwCodec@3|
  00010	e3a05801	 mov         r5, #1, 16

; 177  :         {
; 178  :         UINT8 regVal;
; 179  : 
; 180  :         regVal = APLL_INFREQ(6);

  00014	e3a0e006	 mov         lr, #6

; 181  :         TWLWriteRegs(hTritonDriver, TWL_APLL_CTL, &regVal, sizeof(regVal));

  00018	e385103a	 orr         r1, r5, #0x3A
  0001c	e3a03001	 mov         r3, #1
  00020	e28d2000	 add         r2, sp, #0
  00024	e1a00004	 mov         r0, r4
  00028	e5cde000	 strb        lr, [sp]
  0002c	eb000000	 bl          TWLWriteRegs

; 182  : 
; 183  :         regVal = 0;

  00030	e3a03000	 mov         r3, #0
  00034	e5cd3000	 strb        r3, [sp]

; 184  :         TWLWriteRegs(hTritonDriver, TWL_AUDIO_IF, &regVal, sizeof(regVal));

  00038	e3a03001	 mov         r3, #1
  0003c	e28d2000	 add         r2, sp, #0
  00040	e385100e	 orr         r1, r5, #0xE
  00044	e1a00004	 mov         r0, r4
  00048	eb000000	 bl          TWLWriteRegs

; 185  : 
; 186  :         regVal = 0;

  0004c	e3a03000	 mov         r3, #0
  00050	e5cd3000	 strb        r3, [sp]

; 187  :         TWLWriteRegs(hTritonDriver, TWL_VOICE_IF, &regVal, sizeof(regVal));

  00054	e3a03001	 mov         r3, #1
  00058	e28d2000	 add         r2, sp, #0
  0005c	e385100f	 orr         r1, r5, #0xF
  00060	e1a00004	 mov         r0, r4
  00064	eb000000	 bl          TWLWriteRegs
  00068		 |$LN2@SetHwCodec@3|

; 188  : 
; 189  :         }
; 190  :     else
; 191  :         {
; 192  :         DEBUGMSG(ZONE_TPS659XX, (L"WAV:%S - hTritonDriver is NULL!!!\r\n",
; 193  :             __FUNCTION__
; 194  :             ));
; 195  :         }
; 196  : 
; 197  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-%S\r\n",__FUNCTION__));
; 198  : }

  00068	e28dd004	 add         sp, sp, #4
  0006c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00070	e12fff1e	 bx          lr
  00074		 |$M36486|

			 ENDP  ; |SetHwCodecMode_DisableCodec|

	IMPORT	|TWLReadRegs|

  00000			 AREA	 |.pdata|, PDATA
|$T36497| DCD	|$LN7@SetHwCodec@4|
	DCD	0x40003402
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetHwCodecMode_EnableCodec| PROC

; 214  : {

  00000		 |$LN7@SetHwCodec@4|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M36494|
  00008	e1a05001	 mov         r5, r1
  0000c	e1b04000	 movs        r4, r0

; 215  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+%S\r\n",__FUNCTION__));
; 216  : 
; 217  :     if (hTritonDriver)

  00010	0a00002b	 beq         |$LN2@SetHwCodec@4|

; 218  :         {
; 219  :         UINT8 regVal;
; 220  : 
; 221  :         // init
; 222  :         regVal = APLL_INFREQ(6);

  00014	e3a03006	 mov         r3, #6

; 223  :         TWLWriteRegs(hTritonDriver, TWL_APLL_CTL, &regVal, sizeof(regVal));

  00018	e3a06801	 mov         r6, #1, 16
  0001c	e5cd3000	 strb        r3, [sp]
  00020	e3a03001	 mov         r3, #1
  00024	e386103a	 orr         r1, r6, #0x3A
  00028	e28d2000	 add         r2, sp, #0
  0002c	e1a00004	 mov         r0, r4
  00030	eb000000	 bl          TWLWriteRegs

; 224  : 
; 225  :         TWLReadRegs(hTritonDriver, TWL_CODEC_MODE, &regVal, sizeof(regVal));

  00034	e3861001	 orr         r1, r6, #1
  00038	e3a03001	 mov         r3, #1
  0003c	e28d2000	 add         r2, sp, #0
  00040	e1a00004	 mov         r0, r4
  00044	eb000000	 bl          TWLReadRegs

; 226  :         regVal |= (CODEC_MODE_CODEC_PDZ | CODEC_MODE_APLL_RATE(apllRate));

  00048	e5dde000	 ldrb        lr, [sp]

; 227  :         TWLWriteRegs(hTritonDriver, TWL_CODEC_MODE, &regVal, sizeof(regVal));

  0004c	e3a03001	 mov         r3, #1
  00050	e28d2000	 add         r2, sp, #0
  00054	e18e1205	 orr         r1, lr, r5, lsl #4
  00058	e3811002	 orr         r1, r1, #2
  0005c	e5cd1000	 strb        r1, [sp]
  00060	e3861001	 orr         r1, r6, #1
  00064	e1a00004	 mov         r0, r4
  00068	eb000000	 bl          TWLWriteRegs

; 228  : 
; 229  :         regVal = (APLL_EN | APLL_INFREQ(6));

  0006c	e3a03016	 mov         r3, #0x16
  00070	e5cd3000	 strb        r3, [sp]

; 230  :         TWLWriteRegs(hTritonDriver, TWL_APLL_CTL, &regVal, sizeof(regVal));

  00074	e3a03001	 mov         r3, #1
  00078	e28d2000	 add         r2, sp, #0
  0007c	e386103a	 orr         r1, r6, #0x3A
  00080	e1a00004	 mov         r0, r4
  00084	eb000000	 bl          TWLWriteRegs
  00088	e3a05801	 mov         r5, #1, 16

; 231  : 
; 232  :         regVal = AUDIO_IF_AIF_EN;

  0008c	e3a0e001	 mov         lr, #1

; 233  :         TWLWriteRegs(hTritonDriver, TWL_AUDIO_IF, &regVal, sizeof(regVal));

  00090	e385100e	 orr         r1, r5, #0xE
  00094	e3a03001	 mov         r3, #1
  00098	e28d2000	 add         r2, sp, #0
  0009c	e1a00004	 mov         r0, r4
  000a0	e5cde000	 strb        lr, [sp]
  000a4	eb000000	 bl          TWLWriteRegs

; 234  : 
; 235  :         regVal = 0;

  000a8	e3a03000	 mov         r3, #0
  000ac	e5cd3000	 strb        r3, [sp]

; 236  :         TWLWriteRegs(hTritonDriver, TWL_VOICE_IF, &regVal, sizeof(regVal));

  000b0	e3a03001	 mov         r3, #1
  000b4	e28d2000	 add         r2, sp, #0
  000b8	e385100f	 orr         r1, r5, #0xF
  000bc	e1a00004	 mov         r0, r4
  000c0	eb000000	 bl          TWLWriteRegs
  000c4		 |$LN2@SetHwCodec@4|

; 237  :         }
; 238  :     else
; 239  :         {
; 240  :         DEBUGMSG(ZONE_TPS659XX, (L"WAV:%S - hTritonDriver is NULL!!!\r\n",
; 241  :             __FUNCTION__
; 242  :             ));
; 243  :         }
; 244  : 
; 245  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-%S\r\n",__FUNCTION__));
; 246  : }

  000c4	e28dd004	 add         sp, sp, #4
  000c8	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000cc	e12fff1e	 bx          lr
  000d0		 |$M36495|

			 ENDP  ; |SetHwCodecMode_EnableCodec|


  00000			 AREA	 |.pdata|, PDATA
|$T36506| DCD	|$LN7@SetHwCodec@5|
	DCD	0x40006302
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetHwCodecMode_DisableOutputRouting| PROC

; 262  : {

  00000		 |$LN7@SetHwCodec@5|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M36503|
  00008	e1b04000	 movs        r4, r0

; 263  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+%S\r\n",__FUNCTION__));
; 264  : 
; 265  :     if (hTritonDriver)

  0000c	0a00005b	 beq         |$LN2@SetHwCodec@5|

; 266  :         {
; 267  :         UINT8 regVal;
; 268  : 
; 269  :         TWLReadRegs(hTritonDriver, TWL_OPTION, &regVal, sizeof(regVal));

  00010	e3a05801	 mov         r5, #1, 16
  00014	e3851002	 orr         r1, r5, #2
  00018	e3a03001	 mov         r3, #1
  0001c	e28d2000	 add         r2, sp, #0
  00020	e1a00004	 mov         r0, r4
  00024	eb000000	 bl          TWLReadRegs

; 270  :         regVal &= ~(OPTION_ARXL2_EN | OPTION_ARXR2_EN |
; 271  :             OPTION_ARXR1_EN | OPTION_ARXL1_VRX_EN);

  00028	e5dd3000	 ldrb        r3, [sp]

; 272  :         TWLWriteRegs(hTritonDriver, TWL_OPTION, &regVal, sizeof(regVal));

  0002c	e28d2000	 add         r2, sp, #0
  00030	e3851002	 orr         r1, r5, #2
  00034	e203300f	 and         r3, r3, #0xF
  00038	e5cd3000	 strb        r3, [sp]
  0003c	e3a03001	 mov         r3, #1
  00040	e1a00004	 mov         r0, r4
  00044	eb000000	 bl          TWLWriteRegs
  00048	e3a05801	 mov         r5, #1, 16

; 273  : 
; 274  :         regVal = 0;

  0004c	e3a0e000	 mov         lr, #0

; 275  :         TWLWriteRegs(hTritonDriver, TWL_EAR_CTL, &regVal, sizeof(regVal));

  00050	e3851021	 orr         r1, r5, #0x21
  00054	e3a03001	 mov         r3, #1
  00058	e28d2000	 add         r2, sp, #0
  0005c	e1a00004	 mov         r0, r4
  00060	e5cde000	 strb        lr, [sp]
  00064	eb000000	 bl          TWLWriteRegs

; 276  : 
; 277  :         regVal = 0;

  00068	e3a03000	 mov         r3, #0
  0006c	e5cd3000	 strb        r3, [sp]

; 278  :         TWLWriteRegs(hTritonDriver, TWL_HS_SEL, &regVal, sizeof(regVal));

  00070	e3a03001	 mov         r3, #1
  00074	e28d2000	 add         r2, sp, #0
  00078	e3851022	 orr         r1, r5, #0x22
  0007c	e1a00004	 mov         r0, r4
  00080	eb000000	 bl          TWLWriteRegs

; 279  : 
; 280  :         regVal = 0;

  00084	e3a03000	 mov         r3, #0
  00088	e5cd3000	 strb        r3, [sp]

; 281  :         TWLWriteRegs(hTritonDriver, TWL_HS_GAIN_SET, &regVal, sizeof(regVal));

  0008c	e3a03001	 mov         r3, #1
  00090	e28d2000	 add         r2, sp, #0
  00094	e3851023	 orr         r1, r5, #0x23
  00098	e1a00004	 mov         r0, r4
  0009c	eb000000	 bl          TWLWriteRegs

; 282  : 
; 283  :         regVal = 0;

  000a0	e3a03000	 mov         r3, #0
  000a4	e5cd3000	 strb        r3, [sp]

; 284  :         TWLWriteRegs(hTritonDriver, TWL_PREDL_CTL, &regVal, sizeof(regVal));

  000a8	e3a03001	 mov         r3, #1
  000ac	e28d2000	 add         r2, sp, #0
  000b0	e3851025	 orr         r1, r5, #0x25
  000b4	e1a00004	 mov         r0, r4
  000b8	eb000000	 bl          TWLWriteRegs

; 285  : 
; 286  :         regVal = 0;

  000bc	e3a03000	 mov         r3, #0
  000c0	e5cd3000	 strb        r3, [sp]

; 287  :         TWLWriteRegs(hTritonDriver, TWL_PREDR_CTL, &regVal, sizeof(regVal));

  000c4	e3a03001	 mov         r3, #1
  000c8	e28d2000	 add         r2, sp, #0
  000cc	e3851026	 orr         r1, r5, #0x26
  000d0	e1a00004	 mov         r0, r4
  000d4	eb000000	 bl          TWLWriteRegs

; 288  : 
; 289  :         regVal = 0;

  000d8	e3a03000	 mov         r3, #0
  000dc	e5cd3000	 strb        r3, [sp]

; 290  :         TWLWriteRegs(hTritonDriver, TWL_PRECKL_CTL, &regVal, sizeof(regVal));

  000e0	e3a03001	 mov         r3, #1
  000e4	e28d2000	 add         r2, sp, #0
  000e8	e3851027	 orr         r1, r5, #0x27
  000ec	e1a00004	 mov         r0, r4
  000f0	eb000000	 bl          TWLWriteRegs

; 291  : 
; 292  :         regVal = 0;

  000f4	e3a03000	 mov         r3, #0
  000f8	e5cd3000	 strb        r3, [sp]

; 293  :         TWLWriteRegs(hTritonDriver, TWL_PRECKR_CTL, &regVal, sizeof(regVal));

  000fc	e3a03001	 mov         r3, #1
  00100	e28d2000	 add         r2, sp, #0
  00104	e3851028	 orr         r1, r5, #0x28
  00108	e1a00004	 mov         r0, r4
  0010c	eb000000	 bl          TWLWriteRegs

; 294  : 
; 295  :         regVal = 0;

  00110	e3a03000	 mov         r3, #0
  00114	e5cd3000	 strb        r3, [sp]

; 296  :         TWLWriteRegs(hTritonDriver, TWL_HFL_CTL, &regVal, sizeof(regVal));

  00118	e3a03001	 mov         r3, #1
  0011c	e28d2000	 add         r2, sp, #0
  00120	e3851029	 orr         r1, r5, #0x29
  00124	e1a00004	 mov         r0, r4
  00128	eb000000	 bl          TWLWriteRegs

; 297  : 
; 298  :         regVal = 0;

  0012c	e3a03000	 mov         r3, #0
  00130	e5cd3000	 strb        r3, [sp]

; 299  :         TWLWriteRegs(hTritonDriver, TWL_HFR_CTL, &regVal, sizeof(regVal));

  00134	e3a03001	 mov         r3, #1
  00138	e28d2000	 add         r2, sp, #0
  0013c	e385102a	 orr         r1, r5, #0x2A
  00140	e1a00004	 mov         r0, r4
  00144	eb000000	 bl          TWLWriteRegs

; 300  : 
; 301  :         regVal = 0;

  00148	e3a03000	 mov         r3, #0
  0014c	e5cd3000	 strb        r3, [sp]

; 302  :         TWLWriteRegs(hTritonDriver, TWL_AVDAC_CTL, &regVal, sizeof(regVal));

  00150	e3a03001	 mov         r3, #1
  00154	e28d2000	 add         r2, sp, #0
  00158	e3851017	 orr         r1, r5, #0x17
  0015c	e1a00004	 mov         r0, r4
  00160	eb000000	 bl          TWLWriteRegs

; 303  : 
; 304  :         regVal = 0;

  00164	e3a03000	 mov         r3, #0
  00168	e5cd3000	 strb        r3, [sp]

; 305  :         TWLWriteRegs(hTritonDriver, TWL_RX_PATH_SEL, &regVal, sizeof(regVal));

  0016c	e3a03001	 mov         r3, #1
  00170	e28d2000	 add         r2, sp, #0
  00174	e3851043	 orr         r1, r5, #0x43
  00178	e1a00004	 mov         r0, r4
  0017c	eb000000	 bl          TWLWriteRegs
  00180		 |$LN2@SetHwCodec@5|

; 306  : 
; 307  :         }
; 308  :     else
; 309  :         {
; 310  :         DEBUGMSG(ZONE_TPS659XX, (L"WAV:%S - hTritonDriver is NULL!!!\r\n",
; 311  :             __FUNCTION__
; 312  :             ));
; 313  :         }
; 314  : 
; 315  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-%S\r\n",__FUNCTION__));
; 316  : }

  00180	e28dd004	 add         sp, sp, #4
  00184	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00188	e12fff1e	 bx          lr
  0018c		 |$M36504|

			 ENDP  ; |SetHwCodecMode_DisableOutputRouting|


  00000			 AREA	 |.pdata|, PDATA
|$T36514| DCD	|$LN7@SetHwCodec@6|
	DCD	0x40004002
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetHwCodecMode_DisableOutputGain| PROC

; 331  : {

  00000		 |$LN7@SetHwCodec@6|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M36511|
  00008	e1b04000	 movs        r4, r0

; 332  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+%S\r\n",__FUNCTION__));
; 333  : 
; 334  :     if (hTritonDriver)

  0000c	0a000038	 beq         |$LN2@SetHwCodec@6|
  00010	e3a05801	 mov         r5, #1, 16

; 335  :         {
; 336  :         UINT8 regVal;
; 337  : 
; 338  :         regVal = 0;

  00014	e3a0e000	 mov         lr, #0

; 339  :         TWLWriteRegs(hTritonDriver, TWL_ARXL1PGA, &regVal, sizeof(regVal));

  00018	e3851011	 orr         r1, r5, #0x11
  0001c	e3a03001	 mov         r3, #1
  00020	e28d2000	 add         r2, sp, #0
  00024	e1a00004	 mov         r0, r4
  00028	e5cde000	 strb        lr, [sp]
  0002c	eb000000	 bl          TWLWriteRegs

; 340  : 
; 341  :         regVal = 0;

  00030	e3a03000	 mov         r3, #0
  00034	e5cd3000	 strb        r3, [sp]

; 342  :         TWLWriteRegs(hTritonDriver, TWL_ARXR1PGA, &regVal, sizeof(regVal));

  00038	e3a03001	 mov         r3, #1
  0003c	e28d2000	 add         r2, sp, #0
  00040	e3851010	 orr         r1, r5, #0x10
  00044	e1a00004	 mov         r0, r4
  00048	eb000000	 bl          TWLWriteRegs

; 343  : 
; 344  :         regVal = 0;

  0004c	e3a03000	 mov         r3, #0
  00050	e5cd3000	 strb        r3, [sp]

; 345  :         TWLWriteRegs(hTritonDriver, TWL_ARXL2PGA, &regVal, sizeof(regVal));

  00054	e3a03001	 mov         r3, #1
  00058	e28d2000	 add         r2, sp, #0
  0005c	e3851013	 orr         r1, r5, #0x13
  00060	e1a00004	 mov         r0, r4
  00064	eb000000	 bl          TWLWriteRegs

; 346  : 
; 347  :         regVal = 0;

  00068	e3a03000	 mov         r3, #0
  0006c	e5cd3000	 strb        r3, [sp]

; 348  :         TWLWriteRegs(hTritonDriver, TWL_ARXR2PGA, &regVal, sizeof(regVal));

  00070	e3a03001	 mov         r3, #1
  00074	e28d2000	 add         r2, sp, #0
  00078	e3851012	 orr         r1, r5, #0x12
  0007c	e1a00004	 mov         r0, r4
  00080	eb000000	 bl          TWLWriteRegs

; 349  : 
; 350  :         regVal = 0;

  00084	e3a03000	 mov         r3, #0
  00088	e5cd3000	 strb        r3, [sp]

; 351  :         TWLWriteRegs(hTritonDriver, TWL_ARXL1_APGA_CTL, &regVal,
; 352  :             sizeof(regVal)
; 353  :             );

  0008c	e3a03001	 mov         r3, #1
  00090	e28d2000	 add         r2, sp, #0
  00094	e3851019	 orr         r1, r5, #0x19
  00098	e1a00004	 mov         r0, r4
  0009c	eb000000	 bl          TWLWriteRegs

; 354  : 
; 355  :         regVal = 0;

  000a0	e3a03000	 mov         r3, #0
  000a4	e5cd3000	 strb        r3, [sp]

; 356  :         TWLWriteRegs(hTritonDriver, TWL_ARXR1_APGA_CTL, &regVal,
; 357  :             sizeof(regVal)
; 358  :             );

  000a8	e3a03001	 mov         r3, #1
  000ac	e28d2000	 add         r2, sp, #0
  000b0	e385101a	 orr         r1, r5, #0x1A
  000b4	e1a00004	 mov         r0, r4
  000b8	eb000000	 bl          TWLWriteRegs

; 359  : 
; 360  :         regVal = 0;

  000bc	e3a03000	 mov         r3, #0
  000c0	e5cd3000	 strb        r3, [sp]

; 361  :         TWLWriteRegs(hTritonDriver, TWL_ARXL2_APGA_CTL, &regVal,
; 362  :             sizeof(regVal)
; 363  :             );

  000c4	e3a03001	 mov         r3, #1
  000c8	e28d2000	 add         r2, sp, #0
  000cc	e385101b	 orr         r1, r5, #0x1B
  000d0	e1a00004	 mov         r0, r4
  000d4	eb000000	 bl          TWLWriteRegs

; 364  : 
; 365  :         regVal = 0;

  000d8	e3a03000	 mov         r3, #0
  000dc	e5cd3000	 strb        r3, [sp]

; 366  :         TWLWriteRegs(hTritonDriver, TWL_ARXR2_APGA_CTL, &regVal,
; 367  :             sizeof(regVal)
; 368  :             );

  000e0	e3a03001	 mov         r3, #1
  000e4	e28d2000	 add         r2, sp, #0
  000e8	e385101c	 orr         r1, r5, #0x1C
  000ec	e1a00004	 mov         r0, r4
  000f0	eb000000	 bl          TWLWriteRegs
  000f4		 |$LN2@SetHwCodec@6|

; 369  :         }
; 370  :     else
; 371  :         {
; 372  :         DEBUGMSG(ZONE_TPS659XX, (L"WAV:%S - hTritonDriver is NULL!!!\r\n",
; 373  :             __FUNCTION__
; 374  :             ));
; 375  :         }
; 376  : 
; 377  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-%S\r\n",__FUNCTION__));
; 378  : }

  000f4	e28dd004	 add         sp, sp, #4
  000f8	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000fc	e12fff1e	 bx          lr
  00100		 |$M36512|

			 ENDP  ; |SetHwCodecMode_DisableOutputGain|


  00000			 AREA	 |.pdata|, PDATA
|$T36534| DCD	|$LN14@SetHwCodec@7|
	DCD	0x40009302
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetHwCodecMode_EnableOutputRouting| PROC

; 394  : {

  00000		 |$LN14@SetHwCodec@7|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M36531|
  00008	e1b04000	 movs        r4, r0

; 395  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+%S\r\n",__FUNCTION__));
; 396  : 
; 397  :     if (hTritonDriver)

  0000c	0a00008b	 beq         |$LN6@SetHwCodec@7|

; 398  :         {
; 399  :         UINT8 regVal;
; 400  : 
; 401  :         switch (type)

  00010	e3510001	 cmp         r1, #1
  00014	0a00001f	 beq         |$LN5@SetHwCodec@7|
  00018	e3510003	 cmp         r1, #3
  0001c	0a000001	 beq         |$LN4@SetHwCodec@7|
  00020	e3510005	 cmp         r1, #5
  00024	1a000085	 bne         |$LN6@SetHwCodec@7|
  00028		 |$LN4@SetHwCodec@7|

; 509  : 
; 510  :             case kAudioModeHeadset: // Mic Headset
; 511  :                 regVal = VMID_EN;
; 512  :                 TWLWriteRegs(hTritonDriver, TWL_HS_POPN_SET, &regVal,
; 513  :                     sizeof(regVal)
; 514  :                     );

  00028	e3a03801	 mov         r3, #1, 16
  0002c	e3a02040	 mov         r2, #0x40
  00030	e3835024	 orr         r5, r3, #0x24
  00034	e5cd2000	 strb        r2, [sp]
  00038	e1a01005	 mov         r1, r5
  0003c	e3a03001	 mov         r3, #1
  00040	e28d2000	 add         r2, sp, #0
  00044	e1a00004	 mov         r0, r4
  00048	eb000000	 bl          TWLWriteRegs

; 515  : 
; 516  :                 regVal = (VMID_EN | RAMP_EN);

  0004c	e3a03042	 mov         r3, #0x42
  00050	e5cd3000	 strb        r3, [sp]

; 517  :                 TWLWriteRegs(hTritonDriver, TWL_HS_POPN_SET, &regVal,
; 518  :                     sizeof(regVal)
; 519  :                     );

  00054	e3a03001	 mov         r3, #1
  00058	e28d2000	 add         r2, sp, #0
  0005c	e1a01005	 mov         r1, r5
  00060	e1a00004	 mov         r0, r4
  00064	eb000000	 bl          TWLWriteRegs
  00068	e3a05801	 mov         r5, #1, 16

; 520  : 
; 521  :                 regVal = (HSOR_AR2_EN | HSOL_AL2_EN);

  0006c	e3a0e024	 mov         lr, #0x24

; 522  :                 TWLWriteRegs(hTritonDriver, TWL_HS_SEL, &regVal,
; 523  :                     sizeof(regVal)
; 524  :                     );

  00070	e3851022	 orr         r1, r5, #0x22
  00074	e3a03001	 mov         r3, #1
  00078	e28d2000	 add         r2, sp, #0
  0007c	e1a00004	 mov         r0, r4
  00080	e5cde000	 strb        lr, [sp]
  00084	eb000000	 bl          TWLWriteRegs

; 525  : 
; 526  :                 regVal = (HSR_GAIN(2) | HSL_GAIN(2));

  00088	e3a0300a	 mov         r3, #0xA
  0008c	e5cd3000	 strb        r3, [sp]

; 527  :                 TWLWriteRegs(hTritonDriver, TWL_HS_GAIN_SET, &regVal,
; 528  :                     sizeof(regVal)
; 529  :                     );

  00090	e3851023	 orr         r1, r5, #0x23

; 530  : 
; 531  :                 regVal = (AVDAC_CTL_ADACL2_EN | AVDAC_CTL_ADACR2_EN);
; 532  :                 TWLWriteRegs(hTritonDriver, TWL_AVDAC_CTL, &regVal,
; 533  :                     sizeof(regVal)
; 534  :                     );
; 535  : 
; 536  :                 TWLReadRegs(hTritonDriver, TWL_OPTION, &regVal,
; 537  :                     sizeof(regVal)
; 538  :                     );
; 539  :                 regVal |= (OPTION_ARXL2_EN | OPTION_ARXR2_EN);
; 540  :                 TWLWriteRegs(hTritonDriver, TWL_OPTION, &regVal,
; 541  :                     sizeof(regVal)
; 542  :                     );
; 543  : 
; 544  :                 break;

  00094	ea000050	 b           |$LN11@SetHwCodec@7|
  00098		 |$LN5@SetHwCodec@7|

; 471  : 
; 472  :                 break;
; 473  : 
; 474  :             case kAudioModeStereoHeadset: // Stereo Headset
; 475  :                 regVal = VMID_EN;
; 476  :                 TWLWriteRegs(hTritonDriver, TWL_HS_POPN_SET, &regVal,
; 477  :                     sizeof(regVal)
; 478  :                     );
; 479  : 
; 480  :                 regVal = (VMID_EN | RAMP_EN);
; 481  :                 TWLWriteRegs(hTritonDriver, TWL_HS_POPN_SET, &regVal,
; 482  :                     sizeof(regVal)
; 483  :                     );
; 484  : 
; 485  :                 regVal = (HSOR_AR2_EN | HSOL_AL2_EN);
; 486  :                 TWLWriteRegs(hTritonDriver, TWL_HS_SEL, &regVal,
; 487  :                     sizeof(regVal)
; 488  :                     );
; 489  : 
; 490  :                 regVal = (HSR_GAIN(2) | HSL_GAIN(2));
; 491  :                 TWLWriteRegs(hTritonDriver, TWL_HS_GAIN_SET, &regVal,
; 492  :                     sizeof(regVal)
; 493  :                     );
; 494  : 
; 495  :                 regVal = (AVDAC_CTL_ADACL2_EN | AVDAC_CTL_ADACR2_EN);
; 496  :                 TWLWriteRegs(hTritonDriver, TWL_AVDAC_CTL, &regVal,
; 497  :                     sizeof(regVal)
; 498  :                     );
; 499  : 
; 500  :                 TWLReadRegs(hTritonDriver, TWL_OPTION, &regVal,
; 501  :                     sizeof(regVal)
; 502  :                     );
; 503  :                 regVal |= (OPTION_ARXL2_EN | OPTION_ARXR2_EN);
; 504  :                 TWLWriteRegs(hTritonDriver, TWL_OPTION, &regVal,
; 505  :                      sizeof(regVal)
; 506  :                      );
; 507  : 
; 508  :                 break;

  00098	e3a05801	 mov         r5, #1, 16
  0009c	e3a0e0a4	 mov         lr, #0xA4
  000a0	e3851025	 orr         r1, r5, #0x25
  000a4	e3a03001	 mov         r3, #1
  000a8	e28d2000	 add         r2, sp, #0
  000ac	e1a00004	 mov         r0, r4
  000b0	e5cde000	 strb        lr, [sp]
  000b4	eb000000	 bl          TWLWriteRegs
  000b8	e3a030a4	 mov         r3, #0xA4
  000bc	e5cd3000	 strb        r3, [sp]
  000c0	e3a03001	 mov         r3, #1
  000c4	e28d2000	 add         r2, sp, #0
  000c8	e3851026	 orr         r1, r5, #0x26
  000cc	e1a00004	 mov         r0, r4
  000d0	eb000000	 bl          TWLWriteRegs
  000d4	e3a03020	 mov         r3, #0x20
  000d8	e5cd3000	 strb        r3, [sp]
  000dc	e3a03001	 mov         r3, #1
  000e0	e385102a	 orr         r1, r5, #0x2A
  000e4	e28d2000	 add         r2, sp, #0
  000e8	e1a00004	 mov         r0, r4
  000ec	eb000000	 bl          TWLWriteRegs
  000f0	e5dd3000	 ldrb        r3, [sp]
  000f4	e28d2000	 add         r2, sp, #0
  000f8	e385102a	 orr         r1, r5, #0x2A
  000fc	e3833010	 orr         r3, r3, #0x10
  00100	e5cd3000	 strb        r3, [sp]
  00104	e3a03001	 mov         r3, #1
  00108	e1a00004	 mov         r0, r4
  0010c	eb000000	 bl          TWLWriteRegs
  00110	e5dd3000	 ldrb        r3, [sp]
  00114	e28d2000	 add         r2, sp, #0
  00118	e385102a	 orr         r1, r5, #0x2A
  0011c	e383300c	 orr         r3, r3, #0xC
  00120	e5cd3000	 strb        r3, [sp]
  00124	e3a03001	 mov         r3, #1
  00128	e1a00004	 mov         r0, r4
  0012c	eb000000	 bl          TWLWriteRegs
  00130	e5dd3000	 ldrb        r3, [sp]
  00134	e28d2000	 add         r2, sp, #0
  00138	e385102a	 orr         r1, r5, #0x2A
  0013c	e3833002	 orr         r3, r3, #2
  00140	e5cd3000	 strb        r3, [sp]
  00144	e3a03001	 mov         r3, #1
  00148	e1a00004	 mov         r0, r4
  0014c	eb000000	 bl          TWLWriteRegs
  00150	e3a03020	 mov         r3, #0x20
  00154	e5cd3000	 strb        r3, [sp]
  00158	e3a03001	 mov         r3, #1
  0015c	e3851029	 orr         r1, r5, #0x29
  00160	e28d2000	 add         r2, sp, #0
  00164	e1a00004	 mov         r0, r4
  00168	eb000000	 bl          TWLWriteRegs
  0016c	e5dd3000	 ldrb        r3, [sp]
  00170	e28d2000	 add         r2, sp, #0
  00174	e3851029	 orr         r1, r5, #0x29
  00178	e3833010	 orr         r3, r3, #0x10
  0017c	e5cd3000	 strb        r3, [sp]
  00180	e3a03001	 mov         r3, #1
  00184	e1a00004	 mov         r0, r4
  00188	eb000000	 bl          TWLWriteRegs
  0018c	e5dd3000	 ldrb        r3, [sp]
  00190	e28d2000	 add         r2, sp, #0
  00194	e3851029	 orr         r1, r5, #0x29
  00198	e3833008	 orr         r3, r3, #8
  0019c	e5cd3000	 strb        r3, [sp]
  001a0	e3a03001	 mov         r3, #1
  001a4	e1a00004	 mov         r0, r4
  001a8	eb000000	 bl          TWLWriteRegs
  001ac	e5dd3000	 ldrb        r3, [sp]
  001b0	e28d2000	 add         r2, sp, #0
  001b4	e3851029	 orr         r1, r5, #0x29
  001b8	e3833004	 orr         r3, r3, #4
  001bc	e5cd3000	 strb        r3, [sp]
  001c0	e3a03001	 mov         r3, #1
  001c4	e1a00004	 mov         r0, r4
  001c8	eb000000	 bl          TWLWriteRegs
  001cc	e5dd3000	 ldrb        r3, [sp]
  001d0	e3851029	 orr         r1, r5, #0x29
  001d4	e383e002	 orr         lr, r3, #2
  001d8	e5cde000	 strb        lr, [sp]
  001dc		 |$LN11@SetHwCodec@7|

; 402  :             {
; 403  :             case kAudioModeSpeaker: // Handsfree Speaker Out
; 404  :                 regVal = (PREDL_OUTLOW_EN | PREDL_GAIN(2) | PREDL_AL2_EN);
; 405  :                 TWLWriteRegs(hTritonDriver, TWL_PREDL_CTL, &regVal,
; 406  :                     sizeof(regVal)
; 407  :                     );
; 408  : 
; 409  :                 regVal = (PREDR_OUTLOW_EN | PREDR_GAIN(2) | PREDR_AR2_EN);
; 410  :                 TWLWriteRegs(hTritonDriver, TWL_PREDR_CTL, &regVal,
; 411  :                     sizeof(regVal)
; 412  :                     );
; 413  : 
; 414  :                 regVal = HFX_REF_EN;
; 415  :                 TWLWriteRegs(hTritonDriver, TWL_HFR_CTL, &regVal,
; 416  :                     sizeof(regVal)
; 417  :                     );
; 418  : 
; 419  :                 regVal |= HFX_REF_RAMP;
; 420  :                 TWLWriteRegs(hTritonDriver, TWL_HFR_CTL, &regVal,
; 421  :                     sizeof(regVal)
; 422  :                     );
; 423  : 
; 424  :                 regVal |= (HFX_REF_LOOP | HFX_REF_HB);
; 425  :                 TWLWriteRegs(hTritonDriver, TWL_HFR_CTL, &regVal,
; 426  :                     sizeof(regVal)
; 427  :                     );
; 428  : 
; 429  :                 regVal |=  HFX_INPUT_SEL(2);
; 430  :                 TWLWriteRegs(hTritonDriver, TWL_HFR_CTL, &regVal,
; 431  :                     sizeof(regVal)
; 432  :                     );
; 433  : 
; 434  :                 regVal = HFX_REF_EN;
; 435  :                 TWLWriteRegs(hTritonDriver, TWL_HFL_CTL, &regVal,
; 436  :                     sizeof(regVal)
; 437  :                     );
; 438  : 
; 439  :                 regVal |= HFX_REF_RAMP;
; 440  :                 TWLWriteRegs(hTritonDriver, TWL_HFL_CTL, &regVal,
; 441  :                     sizeof(regVal)
; 442  :                     );
; 443  : 
; 444  :                 regVal |= HFX_REF_LOOP;
; 445  :                 TWLWriteRegs(hTritonDriver, TWL_HFL_CTL, &regVal,
; 446  :                     sizeof(regVal)
; 447  :                     );
; 448  : 
; 449  :                 regVal |= HFX_REF_HB;
; 450  :                 TWLWriteRegs(hTritonDriver, TWL_HFL_CTL, &regVal,
; 451  :                     sizeof(regVal)
; 452  :                     );
; 453  : 
; 454  :                 regVal |=  HFX_INPUT_SEL(2);
; 455  :                 TWLWriteRegs(hTritonDriver, TWL_HFL_CTL, &regVal,
; 456  :                     sizeof(regVal)
; 457  :                     );

  001dc	e3a03001	 mov         r3, #1
  001e0	e28d2000	 add         r2, sp, #0
  001e4	e1a00004	 mov         r0, r4
  001e8	eb000000	 bl          TWLWriteRegs

; 458  : 
; 459  :                 regVal = (AVDAC_CTL_ADACL2_EN | AVDAC_CTL_ADACR2_EN);

  001ec	e3a0300c	 mov         r3, #0xC
  001f0	e5cd3000	 strb        r3, [sp]

; 460  :                 TWLWriteRegs(hTritonDriver, TWL_AVDAC_CTL, &regVal,
; 461  :                     sizeof(regVal)
; 462  :                     );

  001f4	e3a03001	 mov         r3, #1
  001f8	e28d2000	 add         r2, sp, #0
  001fc	e3851017	 orr         r1, r5, #0x17
  00200	e1a00004	 mov         r0, r4
  00204	eb000000	 bl          TWLWriteRegs

; 463  : 
; 464  :                 TWLReadRegs(hTritonDriver, TWL_OPTION, &regVal,
; 465  :                     sizeof(regVal)
; 466  :                     );

  00208	e3855002	 orr         r5, r5, #2
  0020c	e1a01005	 mov         r1, r5
  00210	e3a03001	 mov         r3, #1
  00214	e28d2000	 add         r2, sp, #0
  00218	e1a00004	 mov         r0, r4
  0021c	eb000000	 bl          TWLReadRegs

; 467  :                 regVal |= (OPTION_ARXL2_EN | OPTION_ARXR2_EN);

  00220	e5dd3000	 ldrb        r3, [sp]

; 468  :                 TWLWriteRegs(hTritonDriver, TWL_OPTION, &regVal,
; 469  :                     sizeof(regVal)
; 470  :                     );

  00224	e28d2000	 add         r2, sp, #0
  00228	e1a01005	 mov         r1, r5
  0022c	e38330c0	 orr         r3, r3, #0xC0
  00230	e5cd3000	 strb        r3, [sp]
  00234	e3a03001	 mov         r3, #1
  00238	e1a00004	 mov         r0, r4
  0023c	eb000000	 bl          TWLWriteRegs
  00240		 |$LN6@SetHwCodec@7|

; 545  : 
; 546  :             default:
; 547  :                 break;
; 548  :             }
; 549  :         }
; 550  :     else
; 551  :         {
; 552  :         DEBUGMSG(ZONE_TPS659XX, (L"WAV:%S - hTritonDriver is NULL!!!\r\n",
; 553  :             __FUNCTION__
; 554  :             ));
; 555  :         }
; 556  : 
; 557  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-%S\r\n",__FUNCTION__));
; 558  : }

  00240	e28dd004	 add         sp, sp, #4
  00244	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00248	e12fff1e	 bx          lr
  0024c		 |$M36532|

			 ENDP  ; |SetHwCodecMode_EnableOutputRouting|


  00000			 AREA	 |.pdata|, PDATA
|$T36544| DCD	|$LN14@SetHwCodec@8|
	DCD	0x40007202
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetHwCodecMode_EnableOutputGain| PROC

; 574  : {

  00000		 |$LN14@SetHwCodec@8|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M36541|
  00008	e1b05000	 movs        r5, r0

; 575  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+%S\r\n",__FUNCTION__));
; 576  : 
; 577  :     if (hTritonDriver)

  0000c	0a000069	 beq         |$LN6@SetHwCodec@8|

; 578  :         {
; 579  :         UINT8 regVal;
; 580  : 
; 581  :         switch (type)

  00010	e3510001	 cmp         r1, #1
  00014	0a000041	 beq         |$LN5@SetHwCodec@8|
  00018	e3510003	 cmp         r1, #3
  0001c	0a000020	 beq         |$LN4@SetHwCodec@8|
  00020	e3510005	 cmp         r1, #5
  00024	1a000063	 bne         |$LN6@SetHwCodec@8|

; 644  : 
; 645  :             case kAudioModeHeadset: // Mic Headset
; 646  :                 regVal = (UINT8)s_pHwCodecConfigInfo->
; 647  :                     dwHwCodecOutHeadsetMicDigitalGain;

  00028	e59f4194	 ldr         r4, [pc, #0x194]
  0002c	e3a06801	 mov         r6, #1, 16

; 648  :                 TWLWriteRegs(hTritonDriver, TWL_ARXL2PGA, &regVal,
; 649  :                     sizeof(regVal)
; 650  :                     );

  00030	e3a03001	 mov         r3, #1
  00034	e594e000	 ldr         lr, [r4]
  00038	e28d2000	 add         r2, sp, #0
  0003c	e3861013	 orr         r1, r6, #0x13
  00040	e59ee020	 ldr         lr, [lr, #0x20]
  00044	e1a00005	 mov         r0, r5
  00048	e5cde000	 strb        lr, [sp]
  0004c	eb000000	 bl          TWLWriteRegs

; 651  : 
; 652  :                 regVal = (UINT8)s_pHwCodecConfigInfo->
; 653  :                     dwHwCodecOutHeadsetMicDigitalGain;

  00050	e5941000	 ldr         r1, [r4]

; 654  :                 TWLWriteRegs(hTritonDriver, TWL_ARXR2PGA, &regVal,
; 655  :                     sizeof(regVal)
; 656  :                     );

  00054	e3a03001	 mov         r3, #1
  00058	e28d2000	 add         r2, sp, #0
  0005c	e591e020	 ldr         lr, [r1, #0x20]
  00060	e3861012	 orr         r1, r6, #0x12
  00064	e1a00005	 mov         r0, r5
  00068	e5cde000	 strb        lr, [sp]
  0006c	eb000000	 bl          TWLWriteRegs

; 657  : 
; 658  :                 regVal = (APGA_CTL_PDZ | APGA_CTL_DA_EN |
; 659  :                 (UINT8) APGA_CTL_GAIN_SET(s_pHwCodecConfigInfo->
; 660  :                     dwHwCodecOutHeadsetMicAnalogGain)
; 661  :                     );

  00070	e5941000	 ldr         r1, [r4]

; 662  :                 TWLWriteRegs(hTritonDriver, TWL_ARXL2_APGA_CTL, &regVal,
; 663  :                     sizeof(regVal)
; 664  :                     );

  00074	e3a03001	 mov         r3, #1
  00078	e28d2000	 add         r2, sp, #0
  0007c	e591e02c	 ldr         lr, [r1, #0x2C]
  00080	e386101b	 orr         r1, r6, #0x1B
  00084	e1a00005	 mov         r0, r5
  00088	e1a0e18e	 mov         lr, lr, lsl #3
  0008c	e38ee003	 orr         lr, lr, #3
  00090	e5cde000	 strb        lr, [sp]
  00094	eb000000	 bl          TWLWriteRegs

; 665  : 
; 666  :                 regVal = (APGA_CTL_PDZ | APGA_CTL_DA_EN |
; 667  :                 (UINT8) APGA_CTL_GAIN_SET(s_pHwCodecConfigInfo->
; 668  :                     dwHwCodecOutHeadsetMicAnalogGain)
; 669  :                     );

  00098	e5941000	 ldr         r1, [r4]

; 670  :                 TWLWriteRegs(hTritonDriver, TWL_ARXR2_APGA_CTL, &regVal,
; 671  :                     sizeof(regVal)
; 672  :                     );

  0009c	e591e02c	 ldr         lr, [r1, #0x2C]

; 673  : 
; 674  :                 break;

  000a0	ea00003c	 b           |$LN11@SetHwCodec@8|
  000a4		 |$LN4@SetHwCodec@8|

; 612  :                 break;
; 613  : 
; 614  :             case kAudioModeStereoHeadset: // Stereo Headset
; 615  :                 regVal = (UINT8)s_pHwCodecConfigInfo->
; 616  :                     dwHwCodecOutStereoHeadsetDigitalGain;

  000a4	e59f4118	 ldr         r4, [pc, #0x118]
  000a8	e3a06801	 mov         r6, #1, 16

; 617  :                 TWLWriteRegs(hTritonDriver, TWL_ARXL2PGA, &regVal,
; 618  :                     sizeof(regVal)
; 619  :                     );

  000ac	e3a03001	 mov         r3, #1
  000b0	e5940000	 ldr         r0, [r4]
  000b4	e28d2000	 add         r2, sp, #0
  000b8	e3861013	 orr         r1, r6, #0x13
  000bc	e590e01c	 ldr         lr, [r0, #0x1C]
  000c0	e1a00005	 mov         r0, r5
  000c4	e5cde000	 strb        lr, [sp]
  000c8	eb000000	 bl          TWLWriteRegs

; 620  : 
; 621  :                 regVal = (UINT8)s_pHwCodecConfigInfo->
; 622  :                     dwHwCodecOutStereoHeadsetDigitalGain;

  000cc	e5941000	 ldr         r1, [r4]

; 623  :                 TWLWriteRegs(hTritonDriver, TWL_ARXR2PGA, &regVal,
; 624  :                     sizeof(regVal)
; 625  :                     );

  000d0	e3a03001	 mov         r3, #1
  000d4	e28d2000	 add         r2, sp, #0
  000d8	e591e01c	 ldr         lr, [r1, #0x1C]
  000dc	e3861012	 orr         r1, r6, #0x12
  000e0	e1a00005	 mov         r0, r5
  000e4	e5cde000	 strb        lr, [sp]
  000e8	eb000000	 bl          TWLWriteRegs

; 626  : 
; 627  :                 regVal = (APGA_CTL_PDZ | APGA_CTL_DA_EN |
; 628  :                 (UINT8) APGA_CTL_GAIN_SET(s_pHwCodecConfigInfo->
; 629  :                     dwHwCodecOutStereoHeadsetAnalogGain)
; 630  :                     );

  000ec	e5941000	 ldr         r1, [r4]

; 631  :                 TWLWriteRegs(hTritonDriver, TWL_ARXL2_APGA_CTL, &regVal,
; 632  :                     sizeof(regVal)
; 633  :                     );

  000f0	e3a03001	 mov         r3, #1
  000f4	e28d2000	 add         r2, sp, #0
  000f8	e591e028	 ldr         lr, [r1, #0x28]
  000fc	e386101b	 orr         r1, r6, #0x1B
  00100	e1a00005	 mov         r0, r5
  00104	e1a0e18e	 mov         lr, lr, lsl #3
  00108	e38ee003	 orr         lr, lr, #3
  0010c	e5cde000	 strb        lr, [sp]
  00110	eb000000	 bl          TWLWriteRegs

; 634  : 
; 635  :                 regVal = (APGA_CTL_PDZ | APGA_CTL_DA_EN |
; 636  :                 (UINT8) APGA_CTL_GAIN_SET(s_pHwCodecConfigInfo->
; 637  :                     dwHwCodecOutStereoHeadsetAnalogGain)
; 638  :                     );

  00114	e5941000	 ldr         r1, [r4]

; 639  :                 TWLWriteRegs(hTritonDriver, TWL_ARXR2_APGA_CTL, &regVal,
; 640  :                     sizeof(regVal)
; 641  :                     );

  00118	e591e028	 ldr         lr, [r1, #0x28]

; 642  : 
; 643  :                 break;

  0011c	ea00001d	 b           |$LN11@SetHwCodec@8|
  00120		 |$LN5@SetHwCodec@8|

; 582  :             {
; 583  :             case kAudioModeSpeaker: // Handsfree Speaker out
; 584  : 
; 585  :                 regVal = (UINT8)s_pHwCodecConfigInfo->
; 586  :                     dwHwCodecOutStereoSpeakerDigitalGain;

  00120	e59f409c	 ldr         r4, [pc, #0x9C]
  00124	e3a06801	 mov         r6, #1, 16

; 587  :                 TWLWriteRegs(hTritonDriver, TWL_ARXL2PGA, &regVal,
; 588  :                     sizeof(regVal)
; 589  :                     );

  00128	e3a03001	 mov         r3, #1
  0012c	e5940000	 ldr         r0, [r4]
  00130	e28d2000	 add         r2, sp, #0
  00134	e3861013	 orr         r1, r6, #0x13
  00138	e590e018	 ldr         lr, [r0, #0x18]
  0013c	e1a00005	 mov         r0, r5
  00140	e5cde000	 strb        lr, [sp]
  00144	eb000000	 bl          TWLWriteRegs

; 590  : 
; 591  :                 regVal = (UINT8)s_pHwCodecConfigInfo->
; 592  :                     dwHwCodecOutStereoSpeakerDigitalGain;

  00148	e5941000	 ldr         r1, [r4]

; 593  :                 TWLWriteRegs(hTritonDriver, TWL_ARXR2PGA, &regVal,
; 594  :                     sizeof(regVal)
; 595  :                     );

  0014c	e3a03001	 mov         r3, #1
  00150	e28d2000	 add         r2, sp, #0
  00154	e591e018	 ldr         lr, [r1, #0x18]
  00158	e3861012	 orr         r1, r6, #0x12
  0015c	e1a00005	 mov         r0, r5
  00160	e5cde000	 strb        lr, [sp]
  00164	eb000000	 bl          TWLWriteRegs

; 596  : 
; 597  :                 regVal = (UINT8) (APGA_CTL_PDZ | APGA_CTL_DA_EN |
; 598  :                     APGA_CTL_GAIN_SET(s_pHwCodecConfigInfo->
; 599  :                     dwHwCodecOutStereoSpeakerAnalogGain)
; 600  :                     );

  00168	e5941000	 ldr         r1, [r4]

; 601  :                 TWLWriteRegs(hTritonDriver, TWL_ARXL2_APGA_CTL, &regVal,
; 602  :                     sizeof(regVal)
; 603  :                     );

  0016c	e3a03001	 mov         r3, #1
  00170	e28d2000	 add         r2, sp, #0
  00174	e591e024	 ldr         lr, [r1, #0x24]
  00178	e386101b	 orr         r1, r6, #0x1B
  0017c	e1a00005	 mov         r0, r5
  00180	e1a0e18e	 mov         lr, lr, lsl #3
  00184	e38ee003	 orr         lr, lr, #3
  00188	e5cde000	 strb        lr, [sp]
  0018c	eb000000	 bl          TWLWriteRegs

; 604  : 
; 605  :                 regVal = (UINT8)(APGA_CTL_PDZ | APGA_CTL_DA_EN |
; 606  :                     APGA_CTL_GAIN_SET(s_pHwCodecConfigInfo->
; 607  :                     dwHwCodecOutStereoSpeakerAnalogGain)
; 608  :                     );

  00190	e5941000	 ldr         r1, [r4]

; 609  :                 TWLWriteRegs(hTritonDriver, TWL_ARXR2_APGA_CTL, &regVal,
; 610  :                     sizeof(regVal)
; 611  :                     );

  00194	e591e024	 ldr         lr, [r1, #0x24]
  00198		 |$LN11@SetHwCodec@8|
  00198	e1a0e18e	 mov         lr, lr, lsl #3
  0019c	e38ee003	 orr         lr, lr, #3
  001a0	e3a03001	 mov         r3, #1
  001a4	e28d2000	 add         r2, sp, #0
  001a8	e386101c	 orr         r1, r6, #0x1C
  001ac	e1a00005	 mov         r0, r5
  001b0	e5cde000	 strb        lr, [sp]
  001b4	eb000000	 bl          TWLWriteRegs
  001b8		 |$LN6@SetHwCodec@8|

; 675  : 
; 676  :             default:
; 677  :                 break;
; 678  :             }
; 679  :         }
; 680  :     else
; 681  :         {
; 682  :         DEBUGMSG(ZONE_TPS659XX, (L"WAV:%S - hTritonDriver is NULL!!!\r\n",
; 683  :             __FUNCTION__
; 684  :             ));
; 685  :         }
; 686  : 
; 687  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-%S\r\n",__FUNCTION__));
; 688  : }

  001b8	e28dd004	 add         sp, sp, #4
  001bc	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  001c0	e12fff1e	 bx          lr
  001c4		 |$LN15@SetHwCodec@8|
  001c4		 |$LN16@SetHwCodec@8|
  001c4	00000000	 DCD         |s_pHwCodecConfigInfo|
  001c8		 |$M36542|

			 ENDP  ; |SetHwCodecMode_EnableOutputGain|


  00000			 AREA	 |.pdata|, PDATA
|$T36555| DCD	|$LN7@SetHwCodec@9|
	DCD	0x40004002
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetHwCodecMode_DisableInputRouting| PROC

; 703  : {

  00000		 |$LN7@SetHwCodec@9|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M36552|
  00008	e1b04000	 movs        r4, r0

; 704  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+%S\r\n",__FUNCTION__));
; 705  : 
; 706  :     if (hTritonDriver)

  0000c	0a000038	 beq         |$LN2@SetHwCodec@9|

; 707  :         {
; 708  :         UINT8 regVal;
; 709  : 
; 710  :         TWLReadRegs(hTritonDriver, TWL_OPTION, &regVal, sizeof(regVal));

  00010	e3a05801	 mov         r5, #1, 16
  00014	e3851002	 orr         r1, r5, #2
  00018	e3a03001	 mov         r3, #1
  0001c	e28d2000	 add         r2, sp, #0
  00020	e1a00004	 mov         r0, r4
  00024	eb000000	 bl          TWLReadRegs

; 711  :         regVal &= ~(OPTION_ATXR2_VTXR_EN | OPTION_ATXL2_VTXL_EN |
; 712  :             OPTION_ATXR1_EN | OPTION_ATXL1_EN
; 713  :             );

  00028	e5dd3000	 ldrb        r3, [sp]

; 714  :         TWLWriteRegs(hTritonDriver, TWL_OPTION, &regVal, sizeof(regVal));

  0002c	e28d2000	 add         r2, sp, #0
  00030	e3851002	 orr         r1, r5, #2
  00034	e20330f0	 and         r3, r3, #0xF0
  00038	e5cd3000	 strb        r3, [sp]
  0003c	e3a03001	 mov         r3, #1
  00040	e1a00004	 mov         r0, r4
  00044	eb000000	 bl          TWLWriteRegs
  00048	e3a05801	 mov         r5, #1, 16

; 715  : 
; 716  :         regVal = 0;

  0004c	e3a0e000	 mov         lr, #0

; 717  :         TWLWriteRegs(hTritonDriver, TWL_MICBIAS_CTL, &regVal, sizeof(regVal));

  00050	e3851004	 orr         r1, r5, #4
  00054	e3a03001	 mov         r3, #1
  00058	e28d2000	 add         r2, sp, #0
  0005c	e1a00004	 mov         r0, r4
  00060	e5cde000	 strb        lr, [sp]
  00064	eb000000	 bl          TWLWriteRegs

; 718  : 
; 719  :         regVal = 0;

  00068	e3a03000	 mov         r3, #0
  0006c	e5cd3000	 strb        r3, [sp]

; 720  :         TWLWriteRegs(hTritonDriver, TWL_ANAMICL, &regVal, sizeof(regVal));

  00070	e3a03001	 mov         r3, #1
  00074	e28d2000	 add         r2, sp, #0
  00078	e3851005	 orr         r1, r5, #5
  0007c	e1a00004	 mov         r0, r4
  00080	eb000000	 bl          TWLWriteRegs

; 721  : 
; 722  :         regVal = 0;

  00084	e3a03000	 mov         r3, #0
  00088	e5cd3000	 strb        r3, [sp]

; 723  :         TWLWriteRegs(hTritonDriver, TWL_ANAMICR, &regVal, sizeof(regVal));

  0008c	e3a03001	 mov         r3, #1
  00090	e28d2000	 add         r2, sp, #0
  00094	e3851006	 orr         r1, r5, #6
  00098	e1a00004	 mov         r0, r4
  0009c	eb000000	 bl          TWLWriteRegs

; 724  : 
; 725  :         regVal = 0;

  000a0	e3a03000	 mov         r3, #0
  000a4	e5cd3000	 strb        r3, [sp]

; 726  :         TWLWriteRegs(hTritonDriver, TWL_AVADC_CTL, &regVal, sizeof(regVal));

  000a8	e3a03001	 mov         r3, #1
  000ac	e28d2000	 add         r2, sp, #0
  000b0	e3851007	 orr         r1, r5, #7
  000b4	e1a00004	 mov         r0, r4
  000b8	eb000000	 bl          TWLWriteRegs

; 727  : 
; 728  :         regVal = 0;

  000bc	e3a03000	 mov         r3, #0
  000c0	e5cd3000	 strb        r3, [sp]

; 729  :         TWLWriteRegs(hTritonDriver, TWL_ADCMICSEL, &regVal, sizeof(regVal));

  000c4	e3a03001	 mov         r3, #1
  000c8	e28d2000	 add         r2, sp, #0
  000cc	e3851008	 orr         r1, r5, #8
  000d0	e1a00004	 mov         r0, r4
  000d4	eb000000	 bl          TWLWriteRegs

; 730  : 
; 731  :         regVal = 0;

  000d8	e3a03000	 mov         r3, #0
  000dc	e5cd3000	 strb        r3, [sp]

; 732  :         TWLWriteRegs(hTritonDriver, TWL_DIGMIXING, &regVal, sizeof(regVal));

  000e0	e3a03001	 mov         r3, #1
  000e4	e28d2000	 add         r2, sp, #0
  000e8	e3851009	 orr         r1, r5, #9
  000ec	e1a00004	 mov         r0, r4
  000f0	eb000000	 bl          TWLWriteRegs
  000f4		 |$LN2@SetHwCodec@9|

; 733  :         }
; 734  :     else
; 735  :         {
; 736  :         DEBUGMSG(ZONE_TPS659XX, (L"WAV:%S - hTritonDriver is NULL!!!\r\n",
; 737  :             __FUNCTION__
; 738  :             ));
; 739  :         }
; 740  : 
; 741  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-%S\r\n",__FUNCTION__));
; 742  : }

  000f4	e28dd004	 add         sp, sp, #4
  000f8	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000fc	e12fff1e	 bx          lr
  00100		 |$M36553|

			 ENDP  ; |SetHwCodecMode_DisableInputRouting|


  00000			 AREA	 |.pdata|, PDATA
|$T36563| DCD	|$LN7@SetHwCodec@10|
	DCD	0x40003202
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetHwCodecMode_DisableInputGain| PROC

; 757  : {

  00000		 |$LN7@SetHwCodec@10|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M36560|
  00008	e1b04000	 movs        r4, r0

; 758  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+%S\r\n",__FUNCTION__));
; 759  : 
; 760  :     if (hTritonDriver)

  0000c	0a00002a	 beq         |$LN2@SetHwCodec@10|
  00010	e3a05801	 mov         r5, #1, 16

; 761  :         {
; 762  :         UINT8 regVal;
; 763  : 
; 764  :         regVal = ALC_WAIT(5); // default

  00014	e3a0e000	 mov         lr, #0

; 765  :         TWLWriteRegs(hTritonDriver, TWL_ALC_CTL, &regVal, sizeof(regVal));

  00018	e385102b	 orr         r1, r5, #0x2B
  0001c	e3a03001	 mov         r3, #1
  00020	e28d2000	 add         r2, sp, #0
  00024	e1a00004	 mov         r0, r4
  00028	e5cde000	 strb        lr, [sp]
  0002c	eb000000	 bl          TWLWriteRegs

; 766  : 
; 767  :         regVal = 0;

  00030	e3a03000	 mov         r3, #0
  00034	e5cd3000	 strb        r3, [sp]

; 768  :         TWLWriteRegs(hTritonDriver, TWL_ANAMIC_GAIN, &regVal, sizeof(regVal));

  00038	e3a03001	 mov         r3, #1
  0003c	e28d2000	 add         r2, sp, #0
  00040	e3851048	 orr         r1, r5, #0x48
  00044	e1a00004	 mov         r0, r4
  00048	eb000000	 bl          TWLWriteRegs

; 769  : 
; 770  :         regVal = 0;

  0004c	e3a03000	 mov         r3, #0
  00050	e5cd3000	 strb        r3, [sp]

; 771  :         TWLWriteRegs(hTritonDriver, TWL_ATXL1PGA, &regVal, sizeof(regVal));

  00054	e3a03001	 mov         r3, #1
  00058	e28d2000	 add         r2, sp, #0
  0005c	e385100a	 orr         r1, r5, #0xA
  00060	e1a00004	 mov         r0, r4
  00064	eb000000	 bl          TWLWriteRegs

; 772  : 
; 773  :         regVal = 0;

  00068	e3a03000	 mov         r3, #0
  0006c	e5cd3000	 strb        r3, [sp]

; 774  :         TWLWriteRegs(hTritonDriver, TWL_ATXR1PGA, &regVal, sizeof(regVal));

  00070	e3a03001	 mov         r3, #1
  00074	e28d2000	 add         r2, sp, #0
  00078	e385100b	 orr         r1, r5, #0xB
  0007c	e1a00004	 mov         r0, r4
  00080	eb000000	 bl          TWLWriteRegs

; 775  : 
; 776  :         regVal = 0;

  00084	e3a03000	 mov         r3, #0
  00088	e5cd3000	 strb        r3, [sp]

; 777  :         TWLWriteRegs(hTritonDriver, TWL_AVTXL2PGA, &regVal, sizeof(regVal));

  0008c	e3a03001	 mov         r3, #1
  00090	e28d2000	 add         r2, sp, #0
  00094	e385100c	 orr         r1, r5, #0xC
  00098	e1a00004	 mov         r0, r4
  0009c	eb000000	 bl          TWLWriteRegs

; 778  : 
; 779  :         regVal = 0;

  000a0	e3a03000	 mov         r3, #0
  000a4	e5cd3000	 strb        r3, [sp]

; 780  :         TWLWriteRegs(hTritonDriver, TWL_AVTXR2PGA, &regVal, sizeof(regVal));

  000a8	e3a03001	 mov         r3, #1
  000ac	e28d2000	 add         r2, sp, #0
  000b0	e385100d	 orr         r1, r5, #0xD
  000b4	e1a00004	 mov         r0, r4
  000b8	eb000000	 bl          TWLWriteRegs
  000bc		 |$LN2@SetHwCodec@10|

; 781  :         }
; 782  :     else
; 783  :         {
; 784  :         DEBUGMSG(ZONE_TPS659XX, (L"WAV:%S - hTritonDriver is NULL!!!\r\n",
; 785  :             __FUNCTION__
; 786  :             ));
; 787  :         }
; 788  : 
; 789  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-%S\r\n",__FUNCTION__));
; 790  : }

  000bc	e28dd004	 add         sp, sp, #4
  000c0	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000c4	e12fff1e	 bx          lr
  000c8		 |$M36561|

			 ENDP  ; |SetHwCodecMode_DisableInputGain|


  00000			 AREA	 |.pdata|, PDATA
|$T36578| DCD	|$LN16@SetHwCodec@11|
	DCD	0x40008d02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetHwCodecMode_EnableInputRouting| PROC

; 806  : {

  00000		 |$LN16@SetHwCodec@11|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M36575|
  00008	e1b04000	 movs        r4, r0

; 807  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+%S\r\n",__FUNCTION__));
; 808  : 
; 809  :     if (hTritonDriver)

  0000c	0a000085	 beq         |$LN7@SetHwCodec@11|

; 810  :         {
; 811  :         UINT8 regVal;
; 812  : 
; 813  :         switch (type)

  00010	e3510002	 cmp         r1, #2
  00014	0a00005e	 beq         |$LN6@SetHwCodec@11|
  00018	e3510004	 cmp         r1, #4
  0001c	0a00003c	 beq         |$LN5@SetHwCodec@11|
  00020	e3510006	 cmp         r1, #6
  00024	0a00001a	 beq         |$LN3@SetHwCodec@11|
  00028	e3510007	 cmp         r1, #7
  0002c	1a00007d	 bne         |$LN7@SetHwCodec@11|

; 874  : 
; 875  :             case kAudioModeMicHeadset: // Mic Headset
; 876  :                 /* The active channel is TxPath channel 1 - left channel */
; 877  :                 TWLReadRegs(hTritonDriver, TWL_OPTION, &regVal,
; 878  :                     sizeof(regVal)
; 879  :                     );

  00030	e3a03801	 mov         r3, #1, 16
  00034	e3835002	 orr         r5, r3, #2
  00038	e1a01005	 mov         r1, r5
  0003c	e3a03001	 mov         r3, #1
  00040	e28d2000	 add         r2, sp, #0
  00044	e1a00004	 mov         r0, r4
  00048	eb000000	 bl          TWLReadRegs

; 880  :                 regVal |= OPTION_ATXL1_EN;

  0004c	e5dd3000	 ldrb        r3, [sp]

; 881  :                 TWLWriteRegs(hTritonDriver, TWL_OPTION, &regVal,
; 882  :                     sizeof(regVal)
; 883  :                     );

  00050	e28d2000	 add         r2, sp, #0
  00054	e1a01005	 mov         r1, r5
  00058	e3833001	 orr         r3, r3, #1
  0005c	e5cd3000	 strb        r3, [sp]
  00060	e3a03001	 mov         r3, #1
  00064	e1a00004	 mov         r0, r4
  00068	eb000000	 bl          TWLWriteRegs
  0006c	e3a05801	 mov         r5, #1, 16

; 884  : 
; 885  :                 /* Set the HSMICBIAS for analog MIC and enable it */
; 886  :                 regVal = HSMICBIAS_EN;

  00070	e3a0e004	 mov         lr, #4

; 887  :                 TWLWriteRegs(hTritonDriver, TWL_MICBIAS_CTL, &regVal,
; 888  :                     sizeof(regVal)
; 889  :                     );

  00074	e3851004	 orr         r1, r5, #4
  00078	e3a03001	 mov         r3, #1
  0007c	e28d2000	 add         r2, sp, #0
  00080	e1a00004	 mov         r0, r4
  00084	e5cde000	 strb        lr, [sp]
  00088	eb000000	 bl          TWLWriteRegs

; 890  : 
; 891  :                 /* Enable the HS MIC and select ADCL input */
; 892  :                 regVal = (ANAMICL_MICAMPL_EN | ANAMICL_HSMIC_EN);

  0008c	e3a03012	 mov         r3, #0x12

; 893  :                 TWLWriteRegs(hTritonDriver, TWL_ANAMICL, &regVal,
; 894  :                     sizeof(regVal)
; 895  :                     );
; 896  : 
; 897  :                 /* Enable Left ADC */
; 898  :                 regVal = AVADC_CTL_ADCL_EN;
; 899  :                 TWLWriteRegs(hTritonDriver, TWL_AVADC_CTL, &regVal,
; 900  :                     sizeof(regVal)
; 901  :                     );
; 902  : 
; 903  :                 break;

  00090	ea000057	 b           |$LN12@SetHwCodec@11|
  00094		 |$LN3@SetHwCodec@11|

; 904  : 
; 905  :             case kAudioModeAuxHeadset: // Aux In, Headset Out
; 906  :                 /* The active channel is TxPath channel 1 - left and right channel */
; 907  :                 TWLReadRegs(hTritonDriver, TWL_OPTION, &regVal, sizeof(regVal));

  00094	e3a03801	 mov         r3, #1, 16
  00098	e3835002	 orr         r5, r3, #2
  0009c	e1a01005	 mov         r1, r5
  000a0	e3a03001	 mov         r3, #1
  000a4	e28d2000	 add         r2, sp, #0
  000a8	e1a00004	 mov         r0, r4
  000ac	eb000000	 bl          TWLReadRegs

; 908  :                 regVal |= OPTION_ATXL1_EN | OPTION_ATXR1_EN;

  000b0	e5dd3000	 ldrb        r3, [sp]

; 909  :                 TWLWriteRegs(hTritonDriver, TWL_OPTION, &regVal, sizeof(regVal));

  000b4	e28d2000	 add         r2, sp, #0
  000b8	e1a01005	 mov         r1, r5
  000bc	e3833003	 orr         r3, r3, #3
  000c0	e5cd3000	 strb        r3, [sp]
  000c4	e3a03001	 mov         r3, #1
  000c8	e1a00004	 mov         r0, r4
  000cc	eb000000	 bl          TWLWriteRegs
  000d0	e3a05801	 mov         r5, #1, 16

; 910  : 
; 911  :                 /* Set the HSMICBIAS for analog MIC and enable it */
; 912  :                 //regVal = HSMICBIAS_EN;
; 913  :                 //TWLWriteRegs(hTritonDriver, TWL_MICBIAS_CTL, &regVal, sizeof(regVal));
; 914  : 
; 915  :                 /* select the AUXL input, enable MICAMPL */
; 916  :                 //regVal = (ANAMICL_MICAMPL_EN | ANAMICL_HSMIC_EN);
; 917  :                 regVal = ANAMICL_AUXL_EN | ANAMICL_MICAMPL_EN;

  000d4	e3a0e014	 mov         lr, #0x14

; 918  :                 TWLWriteRegs(hTritonDriver, TWL_ANAMICL, &regVal, sizeof(regVal));

  000d8	e3851005	 orr         r1, r5, #5
  000dc	e3a03001	 mov         r3, #1
  000e0	e28d2000	 add         r2, sp, #0
  000e4	e1a00004	 mov         r0, r4
  000e8	e5cde000	 strb        lr, [sp]
  000ec	eb000000	 bl          TWLWriteRegs

; 919  : 
; 920  :                 /* select the AUXR input, enable MICAMPR */
; 921  :                 regVal = ANAMICR_AUXR_EN | ANAMICR_MICAMPR_EN;

  000f0	e3a03014	 mov         r3, #0x14
  000f4	e5cd3000	 strb        r3, [sp]

; 922  :                 TWLWriteRegs(hTritonDriver, TWL_ANAMICR, &regVal, sizeof(regVal));

  000f8	e3a03001	 mov         r3, #1
  000fc	e28d2000	 add         r2, sp, #0
  00100	e3851006	 orr         r1, r5, #6
  00104	e1a00004	 mov         r0, r4
  00108	eb000000	 bl          TWLWriteRegs

; 923  :                 
; 924  :                 /* Enable Left and Right ADC */
; 925  :                 regVal = AVADC_CTL_ADCL_EN | AVADC_CTL_ADCR_EN;

  0010c	e3a0300a	 mov         r3, #0xA

; 926  :                 TWLWriteRegs(hTritonDriver, TWL_AVADC_CTL, &regVal, sizeof(regVal));
; 927  : 
; 928  :                 break;

  00110	ea00003e	 b           |$LN13@SetHwCodec@11|
  00114		 |$LN5@SetHwCodec@11|

; 842  : 
; 843  :                 break;
; 844  : 
; 845  :             case kAudioModeSubMic: // Sub Mic
; 846  :                 /* The active channel is TxPath channel 1 - right channel */
; 847  :                 TWLReadRegs(hTritonDriver, TWL_OPTION, &regVal,
; 848  :                     sizeof(regVal)
; 849  :                     );

  00114	e3a03801	 mov         r3, #1, 16
  00118	e3835002	 orr         r5, r3, #2
  0011c	e1a01005	 mov         r1, r5
  00120	e3a03001	 mov         r3, #1
  00124	e28d2000	 add         r2, sp, #0
  00128	e1a00004	 mov         r0, r4
  0012c	eb000000	 bl          TWLReadRegs

; 850  :                 regVal |= OPTION_ATXR1_EN;

  00130	e5dd3000	 ldrb        r3, [sp]

; 851  :                 TWLWriteRegs(hTritonDriver, TWL_OPTION, &regVal,
; 852  :                     sizeof(regVal)
; 853  :                     );

  00134	e28d2000	 add         r2, sp, #0
  00138	e1a01005	 mov         r1, r5
  0013c	e3833002	 orr         r3, r3, #2
  00140	e5cd3000	 strb        r3, [sp]
  00144	e3a03001	 mov         r3, #1
  00148	e1a00004	 mov         r0, r4
  0014c	eb000000	 bl          TWLWriteRegs
  00150	e3a05801	 mov         r5, #1, 16

; 854  : 
; 855  :                 /* Set the MICBIAS for analog MIC and enable it */
; 856  :                 regVal = MICBIAS2_EN;

  00154	e3a0e002	 mov         lr, #2

; 857  :                 TWLWriteRegs(hTritonDriver, TWL_MICBIAS_CTL, &regVal,
; 858  :                     sizeof(regVal)
; 859  :                     );

  00158	e3851004	 orr         r1, r5, #4
  0015c	e3a03001	 mov         r3, #1
  00160	e28d2000	 add         r2, sp, #0
  00164	e1a00004	 mov         r0, r4
  00168	e5cde000	 strb        lr, [sp]
  0016c	eb000000	 bl          TWLWriteRegs

; 860  : 
; 861  :                 /* Enable the sub MIC and select ADCL input */
; 862  :                 regVal = (ANAMICR_MICAMPR_EN | ANAMICR_SUBMIC_EN);

  00170	e3a03011	 mov         r3, #0x11
  00174	e5cd3000	 strb        r3, [sp]

; 863  :                 TWLWriteRegs(hTritonDriver, TWL_ANAMICR, &regVal,
; 864  :                     sizeof(regVal)
; 865  :                     );

  00178	e3a03001	 mov         r3, #1
  0017c	e28d2000	 add         r2, sp, #0
  00180	e3851006	 orr         r1, r5, #6
  00184	e1a00004	 mov         r0, r4
  00188	eb000000	 bl          TWLWriteRegs

; 866  : 
; 867  :                 /* Enable Right ADC */
; 868  :                 regVal = AVADC_CTL_ADCR_EN;

  0018c	e3a03002	 mov         r3, #2

; 869  :                 TWLWriteRegs(hTritonDriver, TWL_AVADC_CTL, &regVal,
; 870  :                     sizeof(regVal)
; 871  :                     );
; 872  : 
; 873  :                 break;

  00190	ea00001e	 b           |$LN13@SetHwCodec@11|
  00194		 |$LN6@SetHwCodec@11|

; 814  :             {
; 815  :             case kAudioModeMicrophone: // Main Mic
; 816  :                 /* The active channel is TxPath channel 1 - left channel */
; 817  :                 TWLReadRegs(hTritonDriver, TWL_OPTION, &regVal,
; 818  :                     sizeof(regVal)
; 819  :                     );

  00194	e3a03801	 mov         r3, #1, 16
  00198	e3835002	 orr         r5, r3, #2
  0019c	e1a01005	 mov         r1, r5
  001a0	e3a03001	 mov         r3, #1
  001a4	e28d2000	 add         r2, sp, #0
  001a8	e1a00004	 mov         r0, r4
  001ac	eb000000	 bl          TWLReadRegs

; 820  :                 regVal |= OPTION_ATXL1_EN;

  001b0	e5dd3000	 ldrb        r3, [sp]

; 821  :                 TWLWriteRegs(hTritonDriver, TWL_OPTION, &regVal,
; 822  :                     sizeof(regVal)
; 823  :                     );

  001b4	e28d2000	 add         r2, sp, #0
  001b8	e1a01005	 mov         r1, r5
  001bc	e3833001	 orr         r3, r3, #1
  001c0	e5cd3000	 strb        r3, [sp]
  001c4	e3a03001	 mov         r3, #1
  001c8	e1a00004	 mov         r0, r4
  001cc	eb000000	 bl          TWLWriteRegs
  001d0	e3a05801	 mov         r5, #1, 16

; 824  : 
; 825  :                 /* Set the MICBIAS for analog MIC and enable it */
; 826  :                 regVal = MICBIAS1_EN;

  001d4	e3a0e001	 mov         lr, #1

; 827  :                 TWLWriteRegs(hTritonDriver, TWL_MICBIAS_CTL, &regVal,
; 828  :                     sizeof(regVal)
; 829  :                     );

  001d8	e3851004	 orr         r1, r5, #4
  001dc	e3a03001	 mov         r3, #1
  001e0	e28d2000	 add         r2, sp, #0
  001e4	e1a00004	 mov         r0, r4
  001e8	e5cde000	 strb        lr, [sp]
  001ec	eb000000	 bl          TWLWriteRegs

; 830  : 
; 831  :                 /* Enable the main MIC and select ADCL input */
; 832  :                 regVal = (ANAMICL_MICAMPL_EN | ANAMICL_MAINMIC_EN);

  001f0	e3a03011	 mov         r3, #0x11
  001f4		 |$LN12@SetHwCodec@11|
  001f4	e5cd3000	 strb        r3, [sp]

; 833  :                 TWLWriteRegs(hTritonDriver, TWL_ANAMICL, &regVal,
; 834  :                     sizeof(regVal)
; 835  :                     );

  001f8	e3a03001	 mov         r3, #1
  001fc	e28d2000	 add         r2, sp, #0
  00200	e3851005	 orr         r1, r5, #5
  00204	e1a00004	 mov         r0, r4
  00208	eb000000	 bl          TWLWriteRegs

; 836  : 
; 837  :                 /* Enable Left ADC */
; 838  :                 regVal = AVADC_CTL_ADCL_EN;

  0020c	e3a03008	 mov         r3, #8
  00210		 |$LN13@SetHwCodec@11|
  00210	e5cd3000	 strb        r3, [sp]

; 839  :                 TWLWriteRegs(hTritonDriver, TWL_AVADC_CTL, &regVal,
; 840  :                     sizeof(regVal)
; 841  :                     );

  00214	e3a03001	 mov         r3, #1
  00218	e28d2000	 add         r2, sp, #0
  0021c	e3851007	 orr         r1, r5, #7
  00220	e1a00004	 mov         r0, r4
  00224	eb000000	 bl          TWLWriteRegs
  00228		 |$LN7@SetHwCodec@11|

; 929  : 
; 930  :             default:
; 931  :                 break;
; 932  :             }
; 933  :         }
; 934  :     else
; 935  :         {
; 936  :         DEBUGMSG(ZONE_TPS659XX, (L"WAV:%S - hTritonDriver is NULL!!!\r\n",
; 937  :             __FUNCTION__
; 938  :             ));
; 939  :         }
; 940  : 
; 941  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-%S\r\n",__FUNCTION__));
; 942  : }

  00228	e28dd004	 add         sp, sp, #4
  0022c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00230	e12fff1e	 bx          lr
  00234		 |$M36576|

			 ENDP  ; |SetHwCodecMode_EnableInputRouting|


  00000			 AREA	 |.pdata|, PDATA
|$T36590| DCD	|$LN17@SetHwCodec@12|
	DCD	0x40005502
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetHwCodecMode_EnableInputGain| PROC

; 958  : {

  00000		 |$LN17@SetHwCodec@12|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M36587|
  00008	e1b05000	 movs        r5, r0

; 959  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+%S\r\n",__FUNCTION__));
; 960  : 
; 961  :     if (hTritonDriver)

  0000c	0a00004c	 beq         |$LN7@SetHwCodec@12|

; 962  :         {
; 963  :         UINT8 regVal;
; 964  : 
; 965  :         switch (type)

  00010	e3510002	 cmp         r1, #2
  00014	0a000038	 beq         |$LN6@SetHwCodec@12|
  00018	e3510004	 cmp         r1, #4
  0001c	0a000027	 beq         |$LN5@SetHwCodec@12|
  00020	e3510006	 cmp         r1, #6
  00024	0a00000e	 beq         |$LN3@SetHwCodec@12|
  00028	e3510007	 cmp         r1, #7
  0002c	1a000044	 bne         |$LN7@SetHwCodec@12|

; 1000 : 
; 1001 :                 break;
; 1002 : 
; 1003 :             case kAudioModeMicHeadset: // Mic Headset
; 1004 :                 /* Configure gain on input */
; 1005 :                 regVal = (UINT8)ANAMIC_MICAMPL_GAIN(s_pHwCodecConfigInfo->
; 1006 :                     dwHwCodecInHeadsetMicAnalogGain
; 1007 :                     );

  00030	e59f4118	 ldr         r4, [pc, #0x118]
  00034	e3a06801	 mov         r6, #1, 16

; 1008 :                 TWLWriteRegs(hTritonDriver, TWL_ANAMIC_GAIN, &regVal,
; 1009 :                     sizeof(regVal)
; 1010 :                     );

  00038	e3a03001	 mov         r3, #1
  0003c	e594e000	 ldr         lr, [r4]
  00040	e28d2000	 add         r2, sp, #0
  00044	e3861048	 orr         r1, r6, #0x48
  00048	e59ee014	 ldr         lr, [lr, #0x14]
  0004c	e1a00005	 mov         r0, r5
  00050	e5cde000	 strb        lr, [sp]
  00054	eb000000	 bl          TWLWriteRegs

; 1011 : 
; 1012 :                 /* Set Tx path volume control */
; 1013 :                 regVal =(UINT8) s_pHwCodecConfigInfo->
; 1014 :                     dwHwCodecInHeadsetMicDigitalGain;

  00058	e5941000	 ldr         r1, [r4]

; 1015 :                 TWLWriteRegs(hTritonDriver, TWL_ATXL1PGA, &regVal,
; 1016 :                     sizeof(regVal)
; 1017 :                     );

  0005c	e591e008	 ldr         lr, [r1, #8]

; 1018 : 
; 1019 :                 break;

  00060	ea000031	 b           |$LN12@SetHwCodec@12|
  00064		 |$LN3@SetHwCodec@12|

; 1020 : 
; 1021 :             case kAudioModeAuxHeadset: // Aux in, Headset out
; 1022 :                 /* Configure gain on input */
; 1023 :                 regVal = (UINT8) ( ANAMIC_MICAMPL_GAIN(s_pHwCodecConfigInfo->dwHwCodecInHeadsetAuxAnalogGain) | 
; 1024 :                          ANAMIC_MICAMPR_GAIN(s_pHwCodecConfigInfo->dwHwCodecInHeadsetAuxAnalogGain) );

  00064	e59f40e4	 ldr         r4, [pc, #0xE4]
  00068	e3a06801	 mov         r6, #1, 16

; 1025 :                 TWLWriteRegs(hTritonDriver, TWL_ANAMIC_GAIN, &regVal, sizeof(regVal));

  0006c	e3a03001	 mov         r3, #1
  00070	e5940000	 ldr         r0, [r4]
  00074	e28d2000	 add         r2, sp, #0
  00078	e3861048	 orr         r1, r6, #0x48
  0007c	e590e034	 ldr         lr, [r0, #0x34]
  00080	e1a00005	 mov         r0, r5
  00084	e18ee18e	 orr         lr, lr, lr, lsl #3
  00088	e5cde000	 strb        lr, [sp]
  0008c	eb000000	 bl          TWLWriteRegs

; 1026 : 
; 1027 :                 /* Set Tx Left path volume control */
; 1028 :                 regVal = (UINT8) s_pHwCodecConfigInfo->dwHwCodecInHeadsetAuxDigitalGain;

  00090	e5941000	 ldr         r1, [r4]

; 1029 :                 TWLWriteRegs(hTritonDriver, TWL_ATXL1PGA, &regVal, sizeof(regVal));

  00094	e3a03001	 mov         r3, #1
  00098	e28d2000	 add         r2, sp, #0
  0009c	e591e030	 ldr         lr, [r1, #0x30]
  000a0	e386100a	 orr         r1, r6, #0xA
  000a4	e1a00005	 mov         r0, r5
  000a8	e5cde000	 strb        lr, [sp]
  000ac	eb000000	 bl          TWLWriteRegs

; 1030 : 
; 1031 :                 /* Set Tx Right path volume control */
; 1032 :                 regVal = (UINT8) s_pHwCodecConfigInfo->dwHwCodecInHeadsetAuxDigitalGain;

  000b0	e5941000	 ldr         r1, [r4]

; 1033 :                 TWLWriteRegs(hTritonDriver, TWL_ATXR1PGA, &regVal, sizeof(regVal));

  000b4	e591e030	 ldr         lr, [r1, #0x30]
  000b8	e386100b	 orr         r1, r6, #0xB

; 1034 : 
; 1035 :                 break;

  000bc	ea00001b	 b           |$LN13@SetHwCodec@12|
  000c0		 |$LN5@SetHwCodec@12|

; 982  : 
; 983  :                 break;
; 984  : 
; 985  :             case kAudioModeSubMic: // Sub Mic
; 986  :                 /* Configure gain on input */
; 987  :                 regVal = (UINT8)ANAMIC_MICAMPR_GAIN(s_pHwCodecConfigInfo->
; 988  :                     dwHwCodecInSubMicAnalogGain
; 989  :                     );

  000c0	e59f4088	 ldr         r4, [pc, #0x88]
  000c4	e3a06801	 mov         r6, #1, 16

; 990  :                 TWLWriteRegs(hTritonDriver, TWL_ANAMIC_GAIN, &regVal,
; 991  :                     sizeof(regVal)
; 992  :                     );

  000c8	e3a03001	 mov         r3, #1
  000cc	e5940000	 ldr         r0, [r4]
  000d0	e28d2000	 add         r2, sp, #0
  000d4	e3861048	 orr         r1, r6, #0x48
  000d8	e590e010	 ldr         lr, [r0, #0x10]
  000dc	e1a00005	 mov         r0, r5
  000e0	e1a0e18e	 mov         lr, lr, lsl #3
  000e4	e5cde000	 strb        lr, [sp]
  000e8	eb000000	 bl          TWLWriteRegs

; 993  : 
; 994  :                 /* Set Tx path volume control */
; 995  :                 regVal = (UINT8)s_pHwCodecConfigInfo->
; 996  :                     dwHwCodecInSubMicDigitalGain;

  000ec	e5941000	 ldr         r1, [r4]

; 997  :                 TWLWriteRegs(hTritonDriver, TWL_ATXR1PGA, &regVal,
; 998  :                     sizeof(regVal)
; 999  :                     );

  000f0	e591e004	 ldr         lr, [r1, #4]

; 1033 :                 TWLWriteRegs(hTritonDriver, TWL_ATXR1PGA, &regVal, sizeof(regVal));

  000f4	e386100b	 orr         r1, r6, #0xB

; 1034 : 
; 1035 :                 break;

  000f8	ea00000c	 b           |$LN13@SetHwCodec@12|
  000fc		 |$LN6@SetHwCodec@12|

; 966  :             {
; 967  :             case kAudioModeMicrophone: // Main Mic
; 968  :                 /* Configure gain on input */
; 969  :                 regVal = (UINT8)ANAMIC_MICAMPL_GAIN(s_pHwCodecConfigInfo->
; 970  :                     dwHwCodecInMainMicAnalogGain
; 971  :                     );

  000fc	e59f404c	 ldr         r4, [pc, #0x4C]
  00100	e3a06801	 mov         r6, #1, 16

; 972  :                 TWLWriteRegs(hTritonDriver, TWL_ANAMIC_GAIN, &regVal,
; 973  :                     sizeof(regVal)
; 974  :                     );

  00104	e3a03001	 mov         r3, #1
  00108	e5940000	 ldr         r0, [r4]
  0010c	e28d2000	 add         r2, sp, #0
  00110	e3861048	 orr         r1, r6, #0x48
  00114	e590e00c	 ldr         lr, [r0, #0xC]
  00118	e1a00005	 mov         r0, r5
  0011c	e5cde000	 strb        lr, [sp]
  00120	eb000000	 bl          TWLWriteRegs

; 975  : 
; 976  :                 /* Set Tx path volume control */
; 977  :                 regVal = (UINT8)s_pHwCodecConfigInfo->
; 978  :                     dwHwCodecInMainMicDigitalGain;

  00124	e5941000	 ldr         r1, [r4]

; 979  :                 TWLWriteRegs(hTritonDriver, TWL_ATXL1PGA, &regVal,
; 980  :                     sizeof(regVal)
; 981  :                     );

  00128	e591e000	 ldr         lr, [r1]
  0012c		 |$LN12@SetHwCodec@12|
  0012c	e386100a	 orr         r1, r6, #0xA
  00130		 |$LN13@SetHwCodec@12|
  00130	e3a03001	 mov         r3, #1
  00134	e28d2000	 add         r2, sp, #0
  00138	e1a00005	 mov         r0, r5
  0013c	e5cde000	 strb        lr, [sp]
  00140	eb000000	 bl          TWLWriteRegs
  00144		 |$LN7@SetHwCodec@12|

; 1036 : 
; 1037 :             default:
; 1038 :                 break;
; 1039 :             }
; 1040 :         }
; 1041 :     else
; 1042 :         {
; 1043 :         DEBUGMSG(ZONE_TPS659XX, (L"WAV:%S - hTritonDriver is NULL!!!\r\n",
; 1044 :             __FUNCTION__
; 1045 :             ));
; 1046 :         }
; 1047 : 
; 1048 :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-%S\r\n",__FUNCTION__));
; 1049 : }

  00144	e28dd004	 add         sp, sp, #4
  00148	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0014c	e12fff1e	 bx          lr
  00150		 |$LN18@SetHwCodec@12|
  00150		 |$LN19@SetHwCodec@12|
  00150	00000000	 DCD         |s_pHwCodecConfigInfo|
  00154		 |$M36588|

			 ENDP  ; |SetHwCodecMode_EnableInputGain|

	EXPORT	|SetAudioI2SProfile|

  00000			 AREA	 |.pdata|, PDATA
|$T36602| DCD	|$LN7@SetAudioI2|
	DCD	0x40002a02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetAudioI2SProfile| PROC

; 1064 : {

  00000		 |$LN7@SetAudioI2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M36599|
  00008	e1b04000	 movs        r4, r0

; 1065 :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+%S\r\n",__FUNCTION__));
; 1066 : 
; 1067 :     if (hTritonDriver)

  0000c	0a000022	 beq         |$LN2@SetAudioI2|

; 1068 :     {
; 1069 :         UINT8 regVal;
; 1070 : 
; 1071 :         TWLReadRegs(hTritonDriver, TWL_CODEC_MODE, &regVal, sizeof(regVal));

  00010	e3a05801	 mov         r5, #1, 16
  00014	e3851001	 orr         r1, r5, #1
  00018	e3a03001	 mov         r3, #1
  0001c	e28d2000	 add         r2, sp, #0
  00020	e1a00004	 mov         r0, r4
  00024	eb000000	 bl          TWLReadRegs

; 1072 :         regVal &= ~(CODEC_MODE_CODEC_OPT_MODE);

  00028	e5dd3000	 ldrb        r3, [sp]

; 1073 :         TWLWriteRegs(hTritonDriver, TWL_CODEC_MODE, &regVal, sizeof(regVal));

  0002c	e28d2000	 add         r2, sp, #0
  00030	e3851001	 orr         r1, r5, #1
  00034	e20330fe	 and         r3, r3, #0xFE
  00038	e5cd3000	 strb        r3, [sp]
  0003c	e3a03001	 mov         r3, #1
  00040	e1a00004	 mov         r0, r4
  00044	eb000000	 bl          TWLWriteRegs

; 1074 : 
; 1075 :         TWLReadRegs(hTritonDriver, TWL_AUDIO_IF, &regVal, sizeof(regVal));

  00048	e385100e	 orr         r1, r5, #0xE
  0004c	e3a03001	 mov         r3, #1
  00050	e28d2000	 add         r2, sp, #0
  00054	e1a00004	 mov         r0, r4
  00058	eb000000	 bl          TWLReadRegs

; 1076 :         regVal &= ~( AUDIO_IF_AIF_FORMAT(3) | AUDIO_IF_DATA_WIDTH(0));

  0005c	e5dd3000	 ldrb        r3, [sp]

; 1077 :         TWLWriteRegs(hTritonDriver, TWL_AUDIO_IF, &regVal, sizeof(regVal));

  00060	e28d2000	 add         r2, sp, #0
  00064	e385100e	 orr         r1, r5, #0xE
  00068	e20330e7	 and         r3, r3, #0xE7
  0006c	e5cd3000	 strb        r3, [sp]
  00070	e3a03001	 mov         r3, #1
  00074	e1a00004	 mov         r0, r4
  00078	eb000000	 bl          TWLWriteRegs
  0007c	e3a03801	 mov         r3, #1, 16

; 1078 : 
; 1079 :         // Side tone gain
; 1080 :         //
; 1081 :         regVal = 0x0;      // Mute
; 1082 :         TWLWriteRegs(hTritonDriver, TWL_VSTPGA, &regVal, sizeof(regVal));

  00080	e3831015	 orr         r1, r3, #0x15
  00084	e3a0e000	 mov         lr, #0
  00088	e3a03001	 mov         r3, #1
  0008c	e28d2000	 add         r2, sp, #0
  00090	e1a00004	 mov         r0, r4
  00094	e5cde000	 strb        lr, [sp]
  00098	eb000000	 bl          TWLWriteRegs
  0009c		 |$LN2@SetAudioI2|

; 1083 : 
; 1084 :     }
; 1085 :     else
; 1086 :     {
; 1087 :         DEBUGMSG(ZONE_TPS659XX, (L"WAV:%S - hTritonDriver is NULL!!!\r\n",
; 1088 :             __FUNCTION__
; 1089 :             ));
; 1090 :     }
; 1091 : 
; 1092 :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-%S\r\n",__FUNCTION__));
; 1093 : }

  0009c	e28dd004	 add         sp, sp, #4
  000a0	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000a4	e12fff1e	 bx          lr
  000a8		 |$M36600|

			 ENDP  ; |SetAudioI2SProfile|

	EXPORT	|SetAudioTDMProfile|

  00000			 AREA	 |.pdata|, PDATA
|$T36612| DCD	|$LN7@SetAudioTD|
	DCD	0x40002a02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetAudioTDMProfile| PROC

; 1108 : {

  00000		 |$LN7@SetAudioTD|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M36609|
  00008	e1b04000	 movs        r4, r0

; 1109 :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+%S\r\n",__FUNCTION__));
; 1110 : 
; 1111 :     if (hTritonDriver)

  0000c	0a000022	 beq         |$LN2@SetAudioTD|

; 1112 :     {
; 1113 :         UINT8 regVal;
; 1114 : 
; 1115 :         TWLReadRegs(hTritonDriver, TWL_CODEC_MODE, &regVal, sizeof(regVal));

  00010	e3a05801	 mov         r5, #1, 16
  00014	e3851001	 orr         r1, r5, #1
  00018	e3a03001	 mov         r3, #1
  0001c	e28d2000	 add         r2, sp, #0
  00020	e1a00004	 mov         r0, r4
  00024	eb000000	 bl          TWLReadRegs

; 1116 :         regVal |= CODEC_MODE_CODEC_OPT_MODE;

  00028	e5dd3000	 ldrb        r3, [sp]

; 1117 :         TWLWriteRegs(hTritonDriver, TWL_CODEC_MODE, &regVal, sizeof(regVal));

  0002c	e28d2000	 add         r2, sp, #0
  00030	e3851001	 orr         r1, r5, #1
  00034	e3833001	 orr         r3, r3, #1
  00038	e5cd3000	 strb        r3, [sp]
  0003c	e3a03001	 mov         r3, #1
  00040	e1a00004	 mov         r0, r4
  00044	eb000000	 bl          TWLWriteRegs

; 1118 : 
; 1119 :         TWLReadRegs(hTritonDriver, TWL_AUDIO_IF, &regVal, sizeof(regVal));

  00048	e385100e	 orr         r1, r5, #0xE
  0004c	e3a03001	 mov         r3, #1
  00050	e28d2000	 add         r2, sp, #0
  00054	e1a00004	 mov         r0, r4
  00058	eb000000	 bl          TWLReadRegs

; 1120 :         regVal |= (AUDIO_IF_DATA_WIDTH(0) | AUDIO_IF_AIF_FORMAT(3));

  0005c	e5dd3000	 ldrb        r3, [sp]

; 1121 :         TWLWriteRegs(hTritonDriver, TWL_AUDIO_IF, &regVal, sizeof(regVal));

  00060	e28d2000	 add         r2, sp, #0
  00064	e385100e	 orr         r1, r5, #0xE
  00068	e3833018	 orr         r3, r3, #0x18
  0006c	e5cd3000	 strb        r3, [sp]
  00070	e3a03001	 mov         r3, #1
  00074	e1a00004	 mov         r0, r4
  00078	eb000000	 bl          TWLWriteRegs
  0007c	e3a03801	 mov         r3, #1, 16

; 1122 : 
; 1123 :         // Side tone gain
; 1124 :         //
; 1125 :         regVal = 0x29;      // -10db
; 1126 :         TWLWriteRegs(hTritonDriver, TWL_VSTPGA, &regVal, sizeof(regVal));

  00080	e3831015	 orr         r1, r3, #0x15
  00084	e3a0e029	 mov         lr, #0x29
  00088	e3a03001	 mov         r3, #1
  0008c	e28d2000	 add         r2, sp, #0
  00090	e1a00004	 mov         r0, r4
  00094	e5cde000	 strb        lr, [sp]
  00098	eb000000	 bl          TWLWriteRegs
  0009c		 |$LN2@SetAudioTD|

; 1127 : 
; 1128 :     }
; 1129 :     else
; 1130 :     {
; 1131 :         DEBUGMSG(ZONE_TPS659XX, (L"WAV:%S - hTritonDriver is NULL!!!\r\n",
; 1132 :             __FUNCTION__
; 1133 :             ));
; 1134 :     }
; 1135 : 
; 1136 :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-%S\r\n",__FUNCTION__));
; 1137 : }

  0009c	e28dd004	 add         sp, sp, #4
  000a0	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000a4	e12fff1e	 bx          lr
  000a8		 |$M36610|

			 ENDP  ; |SetAudioTDMProfile|

	EXPORT	|SetHwCodecMode_Disabled|

  00000			 AREA	 |.pdata|, PDATA
|$T36632| DCD	|$LN15@SetHwCodec@13|
	DCD	0x40003002
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetHwCodecMode_Disabled| PROC

; 1153 : {

  00000		 |$LN15@SetHwCodec@13|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M36629|
  00008	e1b04000	 movs        r4, r0

; 1154 :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+%S\r\n",__FUNCTION__));
; 1155 : 
; 1156 :     if (hTritonDriver)

  0000c	0a000027	 beq         |$LN2@SetHwCodec@13|

; 1157 :         {
; 1158 :         SetHwCodecMode_DisableOutputRouting(hTritonDriver);

  00010	e1a00004	 mov         r0, r4
  00014	eb000000	 bl          SetHwCodecMode_DisableOutputRouting

; 1159 :         SetHwCodecMode_DisableOutputGain(hTritonDriver);

  00018	e1a00004	 mov         r0, r4
  0001c	eb000000	 bl          SetHwCodecMode_DisableOutputGain

; 1160 :         SetHwCodecMode_DisableInputRouting(hTritonDriver);

  00020	e1a00004	 mov         r0, r4
  00024	eb000000	 bl          SetHwCodecMode_DisableInputRouting

; 1161 :         SetHwCodecMode_DisableInputGain(hTritonDriver);

  00028	e1a00004	 mov         r0, r4
  0002c	eb000000	 bl          SetHwCodecMode_DisableInputGain
  00030	e3a05801	 mov         r5, #1, 16

; 1162 :         SetHwCodecMode_DisableCodec(hTritonDriver);

  00034	e3a0e006	 mov         lr, #6
  00038	e385103a	 orr         r1, r5, #0x3A
  0003c	e3a03001	 mov         r3, #1
  00040	e28d2000	 add         r2, sp, #0
  00044	e1a00004	 mov         r0, r4
  00048	e5cde000	 strb        lr, [sp]
  0004c	eb000000	 bl          TWLWriteRegs
  00050	e3a03000	 mov         r3, #0
  00054	e5cd3000	 strb        r3, [sp]
  00058	e3a03001	 mov         r3, #1
  0005c	e28d2000	 add         r2, sp, #0
  00060	e385100e	 orr         r1, r5, #0xE
  00064	e1a00004	 mov         r0, r4
  00068	eb000000	 bl          TWLWriteRegs
  0006c	e3a03000	 mov         r3, #0
  00070	e5cd3000	 strb        r3, [sp]
  00074	e3a03001	 mov         r3, #1
  00078	e28d2000	 add         r2, sp, #0
  0007c	e385100f	 orr         r1, r5, #0xF
  00080	e1a00004	 mov         r0, r4
  00084	eb000000	 bl          TWLWriteRegs

; 1163 :         SetHwCodecMode_DisableCodecPower(hTritonDriver);

  00088	e3a03000	 mov         r3, #0
  0008c	e5cd3000	 strb        r3, [sp]
  00090	e3a03001	 mov         r3, #1
  00094	e28d2000	 add         r2, sp, #0
  00098	e3851001	 orr         r1, r5, #1
  0009c	e1a00004	 mov         r0, r4
  000a0	eb000000	 bl          TWLWriteRegs

; 1164 : 
; 1165 :         s_currentAudioMode = kAudioModeDisabled;

  000a4	e59f3010	 ldr         r3, [pc, #0x10]
  000a8	e3a02000	 mov         r2, #0
  000ac	e5832000	 str         r2, [r3]
  000b0		 |$LN2@SetHwCodec@13|

; 1166 : #ifdef DUMP_TRITON_AUDIO_REGS
; 1167 :         DumpTritonAudioRegs(hTritonDriver);
; 1168 : #endif
; 1169 :         }
; 1170 :     else
; 1171 :         {
; 1172 :         DEBUGMSG(ZONE_TPS659XX, (L"WAV:%S - hTritonDriver is NULL!!!\r\n",
; 1173 :             __FUNCTION__
; 1174 :             ));
; 1175 :         }
; 1176 : 
; 1177 :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-%S\r\n",__FUNCTION__));
; 1178 : }

  000b0	e28dd004	 add         sp, sp, #4
  000b4	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000b8	e12fff1e	 bx          lr
  000bc		 |$LN16@SetHwCodec@13|
  000bc		 |$LN17@SetHwCodec@13|
  000bc	00000000	 DCD         |s_currentAudioMode|
  000c0		 |$M36630|

			 ENDP  ; |SetHwCodecMode_Disabled|

	EXPORT	|SetHwCodecMode_EnableT2AudioClkOnly|

  00000			 AREA	 |.pdata|, PDATA
|$T36644| DCD	|$LN12@SetHwCodec@14|
	DCD	0x40004002
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetHwCodecMode_EnableT2AudioClkOnly| PROC

; 1193 : {

  00000		 |$LN12@SetHwCodec@14|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M36641|
  00008	e1b05000	 movs        r5, r0

; 1194 :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+%S\r\n",__FUNCTION__));
; 1195 : 
; 1196 :     if (hTritonDriver)

  0000c	0a000037	 beq         |$code_exit$36232|

; 1197 :         {
; 1198 :         if (s_currentAudioMode == kAudioModeClockOnly)

  00010	e59f40e4	 ldr         r4, [pc, #0xE4]
  00014	e5943000	 ldr         r3, [r4]
  00018	e3530008	 cmp         r3, #8
  0001c	0a000033	 beq         |$code_exit$36232|

; 1199 :             {
; 1200 :             goto code_exit;
; 1201 :             }
; 1202 : 
; 1203 :         if (s_currentAudioMode != kAudioModeDisabled)

  00020	e3530000	 cmp         r3, #0
  00024	0a000004	 beq         |$LN9@SetHwCodec@14|

; 1204 :             {
; 1205 :             SetHwCodecMode_Disabled(hTritonDriver);

  00028	e1a00005	 mov         r0, r5
  0002c	eb000000	 bl          SetHwCodecMode_Disabled

; 1206 :             }
; 1207 : 
; 1208 :         if (s_currentAudioMode == kAudioModeDisabled)

  00030	e5943000	 ldr         r3, [r4]
  00034	e3530000	 cmp         r3, #0
  00038	1a00002a	 bne         |$LN2@SetHwCodec@14|
  0003c		 |$LN9@SetHwCodec@14|

; 1209 :             {
; 1210 :             UINT8 regVal;
; 1211 : 
; 1212 :             // Power on codec
; 1213 :             regVal = (CODEC_MODE_CODEC_PDZ);

  0003c	e3a03002	 mov         r3, #2

; 1214 :             TWLWriteRegs(hTritonDriver, TWL_CODEC_MODE, &regVal,
; 1215 :                 sizeof(regVal)
; 1216 :                 );

  00040	e3a06801	 mov         r6, #1, 16
  00044	e5cd3000	 strb        r3, [sp]
  00048	e3a03001	 mov         r3, #1
  0004c	e3861001	 orr         r1, r6, #1
  00050	e28d2000	 add         r2, sp, #0
  00054	e1a00005	 mov         r0, r5
  00058	eb000000	 bl          TWLWriteRegs

; 1217 : 
; 1218 :             // init
; 1219 :             regVal = APLL_INFREQ(6);

  0005c	e3a03006	 mov         r3, #6

; 1220 :             TWLWriteRegs(hTritonDriver, TWL_APLL_CTL, &regVal, sizeof(regVal));

  00060	e5cd3000	 strb        r3, [sp]
  00064	e3a03001	 mov         r3, #1
  00068	e386103a	 orr         r1, r6, #0x3A
  0006c	e28d2000	 add         r2, sp, #0
  00070	e1a00005	 mov         r0, r5
  00074	eb000000	 bl          TWLWriteRegs

; 1221 : 
; 1222 :             // Power on codec; Fs = 44.1 KHz, o/p 256 * fs KHz
; 1223 :             TWLReadRegs(hTritonDriver, TWL_CODEC_MODE, &regVal, sizeof(regVal));

  00078	e3a03001	 mov         r3, #1
  0007c	e28d2000	 add         r2, sp, #0
  00080	e3861001	 orr         r1, r6, #1
  00084	e1a00005	 mov         r0, r5
  00088	eb000000	 bl          TWLReadRegs

; 1224 :             regVal |= (CODEC_MODE_CODEC_PDZ |
; 1225 :                 CODEC_MODE_APLL_RATE(kSampleRate_44_1KHz));

  0008c	e5dd3000	 ldrb        r3, [sp]

; 1226 :             TWLWriteRegs(hTritonDriver, TWL_CODEC_MODE, &regVal,
; 1227 :                 sizeof(regVal)
; 1228 :                 );

  00090	e28d2000	 add         r2, sp, #0
  00094	e3861001	 orr         r1, r6, #1
  00098	e3833092	 orr         r3, r3, #0x92
  0009c	e5cd3000	 strb        r3, [sp]
  000a0	e3a03001	 mov         r3, #1
  000a4	e1a00005	 mov         r0, r5
  000a8	eb000000	 bl          TWLWriteRegs

; 1229 : 
; 1230 :             // Enalbe APLL; Input clock frq - 26Mhz and APLL is enabled
; 1231 :             regVal = (APLL_EN | APLL_INFREQ(6));

  000ac	e3a03016	 mov         r3, #0x16
  000b0	e5cd3000	 strb        r3, [sp]

; 1232 :             TWLWriteRegs(hTritonDriver, TWL_APLL_CTL, &regVal, sizeof(regVal));

  000b4	e3a03001	 mov         r3, #1
  000b8	e28d2000	 add         r2, sp, #0
  000bc	e386103a	 orr         r1, r6, #0x3A
  000c0	e1a00005	 mov         r0, r5
  000c4	eb000000	 bl          TWLWriteRegs
  000c8	e3a03801	 mov         r3, #1, 16

; 1233 : 
; 1234 :             // Enable CLK256FS
; 1235 :             regVal = AUDIO_IF_AIF_SLAVE_EN | AUDIO_IF_AIF_TRI_EN |
; 1236 :                 AUDIO_IF_CLK256FS_EN | AUDIO_IF_AIF_EN;
; 1237 :             TWLWriteRegs(hTritonDriver, TWL_AUDIO_IF, &regVal, sizeof(regVal));

  000cc	e383100e	 orr         r1, r3, #0xE
  000d0	e3a0e087	 mov         lr, #0x87
  000d4	e3a03001	 mov         r3, #1
  000d8	e28d2000	 add         r2, sp, #0
  000dc	e1a00005	 mov         r0, r5
  000e0	e5cde000	 strb        lr, [sp]
  000e4	eb000000	 bl          TWLWriteRegs
  000e8		 |$LN2@SetHwCodec@14|

; 1238 : 
; 1239 :             }
; 1240 : 
; 1241 :         s_currentAudioMode = kAudioModeClockOnly;

  000e8	e3a03008	 mov         r3, #8
  000ec	e5843000	 str         r3, [r4]
  000f0		 |$code_exit$36232|

; 1242 :         }
; 1243 :     else
; 1244 :         {
; 1245 :         DEBUGMSG(ZONE_TPS659XX, (L"WAV:%S - hTritonDriver is NULL!!!\r\n",
; 1246 :             __FUNCTION__)
; 1247 :             );
; 1248 :         }
; 1249 : 
; 1250 : code_exit:
; 1251 :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-%S\r\n",__FUNCTION__));
; 1252 : }

  000f0	e28dd004	 add         sp, sp, #4
  000f4	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000f8	e12fff1e	 bx          lr
  000fc		 |$LN13@SetHwCodec@14|
  000fc		 |$LN14@SetHwCodec@14|
  000fc	00000000	 DCD         |s_currentAudioMode|
  00100		 |$M36642|

			 ENDP  ; |SetHwCodecMode_EnableT2AudioClkOnly|

	EXPORT	|SetHwCodecMode_Microphone|

  00000			 AREA	 |.pdata|, PDATA
|$T36674| DCD	|$LN31@SetHwCodec@15|
	DCD	0x40004b02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetHwCodecMode_Microphone| PROC

; 1268 : {

  00000		 |$LN31@SetHwCodec@15|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M36671|
  00008	e1a06001	 mov         r6, r1
  0000c	e1a04000	 mov         r4, r0

; 1269 :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+%S\r\n",__FUNCTION__));
; 1270 : 
; 1271 :     if (s_currentAudioMode == kAudioModeMicrophone)

  00010	e59f5110	 ldr         r5, [pc, #0x110]
  00014	e5953000	 ldr         r3, [r5]
  00018	e3530002	 cmp         r3, #2
  0001c	0a00003e	 beq         |$code_exit$36246|

; 1272 :         {
; 1273 :         goto code_exit;
; 1274 :         }
; 1275 : 
; 1276 :     if (hTritonDriver)

  00020	e3540000	 cmp         r4, #0
  00024	0a00003c	 beq         |$code_exit$36246|

; 1277 :         {
; 1278 :         if (s_currentAudioMode == kAudioModeClockOnly)

  00028	e3530008	 cmp         r3, #8
  0002c	1a000001	 bne         |$LN8@SetHwCodec@15|

; 1279 :             {
; 1280 :             SetHwCodecMode_Disabled(hTritonDriver);

  00030	eb000000	 bl          SetHwCodecMode_Disabled
  00034	e5953000	 ldr         r3, [r5]
  00038		 |$LN8@SetHwCodec@15|

; 1281 :             }
; 1282 : 
; 1283 :         if (s_currentAudioMode == kAudioModeDisabled)

  00038	e3530000	 cmp         r3, #0

; 1284 :             {
; 1285 :             // init
; 1286 :             SetHwCodecMode_EnableCodecPower(hTritonDriver);

  0003c	e1a00004	 mov         r0, r4
  00040	1a000012	 bne         |$LN7@SetHwCodec@15|
  00044	e3a03801	 mov         r3, #1, 16
  00048	e3831001	 orr         r1, r3, #1
  0004c	e3a0e002	 mov         lr, #2
  00050	e3a03001	 mov         r3, #1
  00054	e28d2000	 add         r2, sp, #0
  00058	e5cde000	 strb        lr, [sp]
  0005c	eb000000	 bl          TWLWriteRegs

; 1287 :             SetHwCodecMode_EnableCodec(hTritonDriver, kSampleRate_44_1KHz);

  00060	e3a01009	 mov         r1, #9
  00064	e1a00004	 mov         r0, r4
  00068	eb000000	 bl          SetHwCodecMode_EnableCodec

; 1288 : 
; 1289 :             if (audioProfile == kAudioI2SProfile)

  0006c	e3560000	 cmp         r6, #0

; 1290 :                 {
; 1291 :                 SetAudioI2SProfile(hTritonDriver);

  00070	e1a00004	 mov         r0, r4
  00074	0a000003	 beq         |$LN4@SetHwCodec@15|

; 1292 :                 }
; 1293 :             else if (audioProfile == kAudioTDMProfile)

  00078	e3560001	 cmp         r6, #1
  0007c	1a000001	 bne         |$LN4@SetHwCodec@15|

; 1294 :                 {
; 1295 :                 SetAudioTDMProfile(hTritonDriver);

  00080	eb000000	 bl          SetAudioTDMProfile

; 1296 :                 }
; 1297 :             else

  00084	ea000008	 b           |$LN2@SetHwCodec@15|
  00088		 |$LN4@SetHwCodec@15|

; 1298 :                 {
; 1299 :                 SetAudioI2SProfile(hTritonDriver);

  00088	eb000000	 bl          SetAudioI2SProfile

; 1300 :                 }
; 1301 :             }
; 1302 :         else

  0008c	ea000006	 b           |$LN2@SetHwCodec@15|
  00090		 |$LN7@SetHwCodec@15|

; 1303 :             {
; 1304 :             // disable output if transitioning directly from different output
; 1305 :             SetHwCodecMode_DisableOutputRouting(hTritonDriver);

  00090	eb000000	 bl          SetHwCodecMode_DisableOutputRouting

; 1306 :             SetHwCodecMode_DisableOutputGain(hTritonDriver);

  00094	e1a00004	 mov         r0, r4
  00098	eb000000	 bl          SetHwCodecMode_DisableOutputGain

; 1307 : 
; 1308 :             // disable input if transitioning directly from different input
; 1309 :             SetHwCodecMode_DisableInputRouting(hTritonDriver);

  0009c	e1a00004	 mov         r0, r4
  000a0	eb000000	 bl          SetHwCodecMode_DisableInputRouting

; 1310 :             SetHwCodecMode_DisableInputGain(hTritonDriver);

  000a4	e1a00004	 mov         r0, r4
  000a8	eb000000	 bl          SetHwCodecMode_DisableInputGain
  000ac		 |$LN2@SetHwCodec@15|

; 1311 :             }
; 1312 : 
; 1313 :         // enable output
; 1314 :         SetHwCodecMode_EnableOutputRouting(hTritonDriver, kAudioModeSpeaker);

  000ac	e3a01001	 mov         r1, #1
  000b0	e1a00004	 mov         r0, r4
  000b4	eb000000	 bl          SetHwCodecMode_EnableOutputRouting

; 1315 :         SetHwCodecMode_EnableOutputGain(hTritonDriver, kAudioModeSpeaker);

  000b8	e3a01001	 mov         r1, #1
  000bc	e1a00004	 mov         r0, r4
  000c0	eb000000	 bl          SetHwCodecMode_EnableOutputGain

; 1316 : 
; 1317 :         // enable input
; 1318 :         SetHwCodecMode_EnableInputRouting(hTritonDriver, kAudioModeMicrophone);

  000c4	e3a01002	 mov         r1, #2
  000c8	e1a00004	 mov         r0, r4
  000cc	eb000000	 bl          SetHwCodecMode_EnableInputRouting

; 1319 :         SetHwCodecMode_EnableInputGain(hTritonDriver, kAudioModeMicrophone);

  000d0	e5952004	 ldr         r2, [r5, #4]
  000d4	e3a06801	 mov         r6, #1, 16
  000d8	e3a03001	 mov         r3, #1
  000dc	e592000c	 ldr         r0, [r2, #0xC]
  000e0	e28d2000	 add         r2, sp, #0
  000e4	e3861048	 orr         r1, r6, #0x48
  000e8	e5cd0000	 strb        r0, [sp]
  000ec	e1a00004	 mov         r0, r4
  000f0	eb000000	 bl          TWLWriteRegs
  000f4	e5951004	 ldr         r1, [r5, #4]
  000f8	e3a03001	 mov         r3, #1
  000fc	e28d2000	 add         r2, sp, #0
  00100	e591e000	 ldr         lr, [r1]
  00104	e386100a	 orr         r1, r6, #0xA
  00108	e1a00004	 mov         r0, r4
  0010c	e5cde000	 strb        lr, [sp]
  00110	eb000000	 bl          TWLWriteRegs

; 1320 : 
; 1321 :         s_currentAudioMode = kAudioModeMicrophone;

  00114	e3a03002	 mov         r3, #2
  00118	e5853000	 str         r3, [r5]
  0011c		 |$code_exit$36246|

; 1322 :         //RETAILMSG(1, (L"WAV:%S\r\n",__FUNCTION__));
; 1323 : #ifdef DUMP_TRITON_AUDIO_REGS
; 1324 :         DumpTritonAudioRegs(hTritonDriver);
; 1325 : #endif
; 1326 :         }
; 1327 :     else
; 1328 :         {
; 1329 :         DEBUGMSG(ZONE_TPS659XX, (L"WAV:%S - hTritonDriver is NULL!!!\r\n",
; 1330 :             __FUNCTION__
; 1331 :             ));
; 1332 :         }
; 1333 : code_exit:
; 1334 :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-%S\r\n",__FUNCTION__));
; 1335 : }

  0011c	e28dd004	 add         sp, sp, #4
  00120	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00124	e12fff1e	 bx          lr
  00128		 |$LN32@SetHwCodec@15|
  00128		 |$LN33@SetHwCodec@15|
  00128	00000000	 DCD         |s_currentAudioMode|
  0012c		 |$M36672|

			 ENDP  ; |SetHwCodecMode_Microphone|

	EXPORT	|SetHwCodecMode_Speaker|

  00000			 AREA	 |.pdata|, PDATA
|$T36691| DCD	|$LN21@SetHwCodec@16|
	DCD	0x40003502
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetHwCodecMode_Speaker| PROC

; 1351 : {

  00000		 |$LN21@SetHwCodec@16|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M36688|
  00008	e1a06001	 mov         r6, r1
  0000c	e1a04000	 mov         r4, r0

; 1352 :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+%S\r\n",__FUNCTION__));
; 1353 : 
; 1354 :     if ((s_currentAudioMode == kAudioModeSpeaker) ||
; 1355 :         (s_currentAudioMode == kAudioModeMicrophone))

  00010	e59f50b8	 ldr         r5, [pc, #0xB8]
  00014	e5953000	 ldr         r3, [r5]
  00018	e3530001	 cmp         r3, #1
  0001c	0a000028	 beq         |$code_exit$36266|
  00020	e3530002	 cmp         r3, #2
  00024	0a000026	 beq         |$code_exit$36266|

; 1356 :         {
; 1357 :         goto code_exit;
; 1358 :         }
; 1359 : 
; 1360 :     if (hTritonDriver)

  00028	e3540000	 cmp         r4, #0
  0002c	0a000024	 beq         |$code_exit$36266|

; 1361 :         {
; 1362 :         if (s_currentAudioMode == kAudioModeClockOnly)

  00030	e3530008	 cmp         r3, #8
  00034	1a000001	 bne         |$LN8@SetHwCodec@16|

; 1363 :             {
; 1364 :             SetHwCodecMode_Disabled(hTritonDriver);

  00038	eb000000	 bl          SetHwCodecMode_Disabled
  0003c	e5953000	 ldr         r3, [r5]
  00040		 |$LN8@SetHwCodec@16|

; 1365 :             }
; 1366 : 
; 1367 :         if (s_currentAudioMode == kAudioModeDisabled)

  00040	e3530000	 cmp         r3, #0

; 1368 :             {
; 1369 :             // init
; 1370 :             SetHwCodecMode_EnableCodecPower(hTritonDriver);

  00044	e1a00004	 mov         r0, r4
  00048	1a000012	 bne         |$LN7@SetHwCodec@16|
  0004c	e3a03801	 mov         r3, #1, 16
  00050	e3831001	 orr         r1, r3, #1
  00054	e3a0e002	 mov         lr, #2
  00058	e3a03001	 mov         r3, #1
  0005c	e28d2000	 add         r2, sp, #0
  00060	e5cde000	 strb        lr, [sp]
  00064	eb000000	 bl          TWLWriteRegs

; 1371 :             SetHwCodecMode_EnableCodec(hTritonDriver, kSampleRate_44_1KHz);

  00068	e3a01009	 mov         r1, #9
  0006c	e1a00004	 mov         r0, r4
  00070	eb000000	 bl          SetHwCodecMode_EnableCodec

; 1372 : 
; 1373 :             if (audioProfile == kAudioI2SProfile)

  00074	e3560000	 cmp         r6, #0

; 1374 :                 {
; 1375 :                 SetAudioI2SProfile(hTritonDriver);

  00078	e1a00004	 mov         r0, r4
  0007c	0a000003	 beq         |$LN4@SetHwCodec@16|

; 1376 :                 }
; 1377 :             else if (audioProfile == kAudioTDMProfile)

  00080	e3560001	 cmp         r6, #1
  00084	1a000001	 bne         |$LN4@SetHwCodec@16|

; 1378 :                 {
; 1379 :                 SetAudioTDMProfile(hTritonDriver);

  00088	eb000000	 bl          SetAudioTDMProfile

; 1380 :                 }
; 1381 :             else

  0008c	ea000004	 b           |$LN2@SetHwCodec@16|
  00090		 |$LN4@SetHwCodec@16|

; 1382 :                 {
; 1383 :                 SetAudioI2SProfile(hTritonDriver);

  00090	eb000000	 bl          SetAudioI2SProfile

; 1384 :                 }
; 1385 :             }
; 1386 :         else

  00094	ea000002	 b           |$LN2@SetHwCodec@16|
  00098		 |$LN7@SetHwCodec@16|

; 1387 :             {
; 1388 :             // disable output if transitioning directly from different output
; 1389 :             SetHwCodecMode_DisableOutputRouting(hTritonDriver);

  00098	eb000000	 bl          SetHwCodecMode_DisableOutputRouting

; 1390 :             SetHwCodecMode_DisableOutputGain(hTritonDriver);

  0009c	e1a00004	 mov         r0, r4
  000a0	eb000000	 bl          SetHwCodecMode_DisableOutputGain
  000a4		 |$LN2@SetHwCodec@16|

; 1391 :             }
; 1392 : 
; 1393 :         // enable output
; 1394 :         SetHwCodecMode_EnableOutputRouting(hTritonDriver, kAudioModeSpeaker);

  000a4	e3a01001	 mov         r1, #1
  000a8	e1a00004	 mov         r0, r4
  000ac	eb000000	 bl          SetHwCodecMode_EnableOutputRouting

; 1395 :         SetHwCodecMode_EnableOutputGain(hTritonDriver, kAudioModeSpeaker);

  000b0	e3a01001	 mov         r1, #1
  000b4	e1a00004	 mov         r0, r4
  000b8	eb000000	 bl          SetHwCodecMode_EnableOutputGain

; 1396 : 
; 1397 :         s_currentAudioMode = kAudioModeSpeaker;

  000bc	e3a03001	 mov         r3, #1
  000c0	e5853000	 str         r3, [r5]
  000c4		 |$code_exit$36266|

; 1398 :         //RETAILMSG(1, (L"WAV:%S\r\n",__FUNCTION__));
; 1399 : #ifdef DUMP_TRITON_AUDIO_REGS
; 1400 :         DumpTritonAudioRegs(hTritonDriver);
; 1401 : #endif
; 1402 :         }
; 1403 :     else
; 1404 :         {
; 1405 :         DEBUGMSG(ZONE_TPS659XX, (L"WAV:%S - hTritonDriver is NULL!!!\r\n",
; 1406 :             __FUNCTION__
; 1407 :             ));
; 1408 :         }
; 1409 : code_exit:
; 1410 :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-%S\r\n",__FUNCTION__));
; 1411 : }

  000c4	e28dd004	 add         sp, sp, #4
  000c8	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000cc	e12fff1e	 bx          lr
  000d0		 |$LN22@SetHwCodec@16|
  000d0		 |$LN23@SetHwCodec@16|
  000d0	00000000	 DCD         |s_currentAudioMode|
  000d4		 |$M36689|

			 ENDP  ; |SetHwCodecMode_Speaker|

	EXPORT	|SetHwCodecMode_MicHeadset|

  00000			 AREA	 |.pdata|, PDATA
|$T36721| DCD	|$LN31@SetHwCodec@17|
	DCD	0x40004b02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetHwCodecMode_MicHeadset| PROC

; 1427 : {

  00000		 |$LN31@SetHwCodec@17|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M36718|
  00008	e1a06001	 mov         r6, r1
  0000c	e1a04000	 mov         r4, r0

; 1428 :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+%S\r\n",__FUNCTION__));
; 1429 : 
; 1430 :     if (s_currentAudioMode == kAudioModeMicHeadset)

  00010	e59f5110	 ldr         r5, [pc, #0x110]
  00014	e5953000	 ldr         r3, [r5]
  00018	e3530007	 cmp         r3, #7
  0001c	0a00003e	 beq         |$code_exit$36285|

; 1431 :         {
; 1432 :         goto code_exit;
; 1433 :         }
; 1434 : 
; 1435 :     if (hTritonDriver)

  00020	e3540000	 cmp         r4, #0
  00024	0a00003c	 beq         |$code_exit$36285|

; 1436 :         {
; 1437 :         if (s_currentAudioMode == kAudioModeClockOnly)

  00028	e3530008	 cmp         r3, #8
  0002c	1a000001	 bne         |$LN8@SetHwCodec@17|

; 1438 :             {
; 1439 :             SetHwCodecMode_Disabled(hTritonDriver);

  00030	eb000000	 bl          SetHwCodecMode_Disabled
  00034	e5953000	 ldr         r3, [r5]
  00038		 |$LN8@SetHwCodec@17|

; 1440 :             }
; 1441 : 
; 1442 :         if (s_currentAudioMode == kAudioModeDisabled)

  00038	e3530000	 cmp         r3, #0

; 1443 :             {
; 1444 :             // init
; 1445 :             SetHwCodecMode_EnableCodecPower(hTritonDriver);

  0003c	e1a00004	 mov         r0, r4
  00040	1a000012	 bne         |$LN7@SetHwCodec@17|
  00044	e3a03801	 mov         r3, #1, 16
  00048	e3831001	 orr         r1, r3, #1
  0004c	e3a0e002	 mov         lr, #2
  00050	e3a03001	 mov         r3, #1
  00054	e28d2000	 add         r2, sp, #0
  00058	e5cde000	 strb        lr, [sp]
  0005c	eb000000	 bl          TWLWriteRegs

; 1446 :             SetHwCodecMode_EnableCodec(hTritonDriver, kSampleRate_44_1KHz);

  00060	e3a01009	 mov         r1, #9
  00064	e1a00004	 mov         r0, r4
  00068	eb000000	 bl          SetHwCodecMode_EnableCodec

; 1447 : 
; 1448 :             if (audioProfile == kAudioI2SProfile)

  0006c	e3560000	 cmp         r6, #0

; 1449 :                 {
; 1450 :                 SetAudioI2SProfile(hTritonDriver);

  00070	e1a00004	 mov         r0, r4
  00074	0a000003	 beq         |$LN4@SetHwCodec@17|

; 1451 :                 }
; 1452 :             else if (audioProfile == kAudioTDMProfile)

  00078	e3560001	 cmp         r6, #1
  0007c	1a000001	 bne         |$LN4@SetHwCodec@17|

; 1453 :                 {
; 1454 :                 SetAudioTDMProfile(hTritonDriver);

  00080	eb000000	 bl          SetAudioTDMProfile

; 1455 :                 }
; 1456 :             else

  00084	ea000008	 b           |$LN2@SetHwCodec@17|
  00088		 |$LN4@SetHwCodec@17|

; 1457 :                 {
; 1458 :                 SetAudioI2SProfile(hTritonDriver);

  00088	eb000000	 bl          SetAudioI2SProfile

; 1459 :                 }
; 1460 :             }
; 1461 :         else

  0008c	ea000006	 b           |$LN2@SetHwCodec@17|
  00090		 |$LN7@SetHwCodec@17|

; 1462 :             {
; 1463 :             // disable output if transitioning directly from different output
; 1464 :             SetHwCodecMode_DisableOutputRouting(hTritonDriver);

  00090	eb000000	 bl          SetHwCodecMode_DisableOutputRouting

; 1465 :             SetHwCodecMode_DisableOutputGain(hTritonDriver);

  00094	e1a00004	 mov         r0, r4
  00098	eb000000	 bl          SetHwCodecMode_DisableOutputGain

; 1466 : 
; 1467 :             // disable input if transitioning directly from different input
; 1468 :             SetHwCodecMode_DisableInputRouting(hTritonDriver);

  0009c	e1a00004	 mov         r0, r4
  000a0	eb000000	 bl          SetHwCodecMode_DisableInputRouting

; 1469 :             SetHwCodecMode_DisableInputGain(hTritonDriver);

  000a4	e1a00004	 mov         r0, r4
  000a8	eb000000	 bl          SetHwCodecMode_DisableInputGain
  000ac		 |$LN2@SetHwCodec@17|

; 1470 :             }
; 1471 : 
; 1472 :         // enable output
; 1473 :         SetHwCodecMode_EnableOutputRouting(hTritonDriver, kAudioModeHeadset);

  000ac	e3a01005	 mov         r1, #5
  000b0	e1a00004	 mov         r0, r4
  000b4	eb000000	 bl          SetHwCodecMode_EnableOutputRouting

; 1474 :         SetHwCodecMode_EnableOutputGain(hTritonDriver, kAudioModeHeadset);

  000b8	e3a01005	 mov         r1, #5
  000bc	e1a00004	 mov         r0, r4
  000c0	eb000000	 bl          SetHwCodecMode_EnableOutputGain

; 1475 : 
; 1476 :         // enable input
; 1477 :         SetHwCodecMode_EnableInputRouting(hTritonDriver, kAudioModeMicHeadset);

  000c4	e3a01007	 mov         r1, #7
  000c8	e1a00004	 mov         r0, r4
  000cc	eb000000	 bl          SetHwCodecMode_EnableInputRouting

; 1478 :         SetHwCodecMode_EnableInputGain(hTritonDriver, kAudioModeMicHeadset);

  000d0	e5952004	 ldr         r2, [r5, #4]
  000d4	e3a06801	 mov         r6, #1, 16
  000d8	e3a03001	 mov         r3, #1
  000dc	e5920014	 ldr         r0, [r2, #0x14]
  000e0	e28d2000	 add         r2, sp, #0
  000e4	e3861048	 orr         r1, r6, #0x48
  000e8	e5cd0000	 strb        r0, [sp]
  000ec	e1a00004	 mov         r0, r4
  000f0	eb000000	 bl          TWLWriteRegs
  000f4	e5951004	 ldr         r1, [r5, #4]
  000f8	e3a03001	 mov         r3, #1
  000fc	e28d2000	 add         r2, sp, #0
  00100	e591e008	 ldr         lr, [r1, #8]
  00104	e386100a	 orr         r1, r6, #0xA
  00108	e1a00004	 mov         r0, r4
  0010c	e5cde000	 strb        lr, [sp]
  00110	eb000000	 bl          TWLWriteRegs

; 1479 : 
; 1480 :         s_currentAudioMode = kAudioModeMicHeadset;

  00114	e3a03007	 mov         r3, #7
  00118	e5853000	 str         r3, [r5]
  0011c		 |$code_exit$36285|

; 1481 :         //RETAILMSG(1, (L"WAV:%S\r\n",__FUNCTION__));
; 1482 : #ifdef DUMP_TRITON_AUDIO_REGS
; 1483 :         DumpTritonAudioRegs(hTritonDriver);
; 1484 : #endif
; 1485 :         }
; 1486 :     else
; 1487 :         {
; 1488 :         DEBUGMSG(ZONE_TPS659XX, (L"WAV:%S - hTritonDriver is NULL!!!\r\n",
; 1489 :             __FUNCTION__
; 1490 :             ));
; 1491 :         }
; 1492 : code_exit:
; 1493 :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-%S\r\n",__FUNCTION__));
; 1494 : }

  0011c	e28dd004	 add         sp, sp, #4
  00120	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00124	e12fff1e	 bx          lr
  00128		 |$LN32@SetHwCodec@17|
  00128		 |$LN33@SetHwCodec@17|
  00128	00000000	 DCD         |s_currentAudioMode|
  0012c		 |$M36719|

			 ENDP  ; |SetHwCodecMode_MicHeadset|

	EXPORT	|SetHwCodecMode_Headset|

  00000			 AREA	 |.pdata|, PDATA
|$T36738| DCD	|$LN21@SetHwCodec@18|
	DCD	0x40003502
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetHwCodecMode_Headset| PROC

; 1510 : {

  00000		 |$LN21@SetHwCodec@18|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M36735|
  00008	e1a06001	 mov         r6, r1
  0000c	e1a04000	 mov         r4, r0

; 1511 :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+%S\r\n",__FUNCTION__));
; 1512 : 
; 1513 :     if ((s_currentAudioMode == kAudioModeHeadset) ||
; 1514 :         (s_currentAudioMode == kAudioModeMicHeadset))

  00010	e59f50b8	 ldr         r5, [pc, #0xB8]
  00014	e5953000	 ldr         r3, [r5]
  00018	e3530005	 cmp         r3, #5
  0001c	0a000028	 beq         |$code_exit$36305|
  00020	e3530007	 cmp         r3, #7
  00024	0a000026	 beq         |$code_exit$36305|

; 1515 :         {
; 1516 :         goto code_exit;
; 1517 :         }
; 1518 : 
; 1519 :     if (hTritonDriver)

  00028	e3540000	 cmp         r4, #0
  0002c	0a000024	 beq         |$code_exit$36305|

; 1520 :         {
; 1521 :         if (s_currentAudioMode == kAudioModeClockOnly)

  00030	e3530008	 cmp         r3, #8
  00034	1a000001	 bne         |$LN8@SetHwCodec@18|

; 1522 :             {
; 1523 :             SetHwCodecMode_Disabled(hTritonDriver);

  00038	eb000000	 bl          SetHwCodecMode_Disabled
  0003c	e5953000	 ldr         r3, [r5]
  00040		 |$LN8@SetHwCodec@18|

; 1524 :             }
; 1525 : 
; 1526 :         if (s_currentAudioMode == kAudioModeDisabled)

  00040	e3530000	 cmp         r3, #0

; 1527 :             {
; 1528 :             // init
; 1529 :             SetHwCodecMode_EnableCodecPower(hTritonDriver);

  00044	e1a00004	 mov         r0, r4
  00048	1a000012	 bne         |$LN7@SetHwCodec@18|
  0004c	e3a03801	 mov         r3, #1, 16
  00050	e3831001	 orr         r1, r3, #1
  00054	e3a0e002	 mov         lr, #2
  00058	e3a03001	 mov         r3, #1
  0005c	e28d2000	 add         r2, sp, #0
  00060	e5cde000	 strb        lr, [sp]
  00064	eb000000	 bl          TWLWriteRegs

; 1530 :             SetHwCodecMode_EnableCodec(hTritonDriver, kSampleRate_44_1KHz);

  00068	e3a01009	 mov         r1, #9
  0006c	e1a00004	 mov         r0, r4
  00070	eb000000	 bl          SetHwCodecMode_EnableCodec

; 1531 : 
; 1532 :             if (audioProfile == kAudioI2SProfile)

  00074	e3560000	 cmp         r6, #0

; 1533 :                 {
; 1534 :                 SetAudioI2SProfile(hTritonDriver);

  00078	e1a00004	 mov         r0, r4
  0007c	0a000003	 beq         |$LN4@SetHwCodec@18|

; 1535 :                 }
; 1536 :             else if (audioProfile == kAudioTDMProfile)

  00080	e3560001	 cmp         r6, #1
  00084	1a000001	 bne         |$LN4@SetHwCodec@18|

; 1537 :                 {
; 1538 :                 SetAudioTDMProfile(hTritonDriver);

  00088	eb000000	 bl          SetAudioTDMProfile

; 1539 :                 }
; 1540 :             else

  0008c	ea000004	 b           |$LN2@SetHwCodec@18|
  00090		 |$LN4@SetHwCodec@18|

; 1541 :                 {
; 1542 :                 SetAudioI2SProfile(hTritonDriver);

  00090	eb000000	 bl          SetAudioI2SProfile

; 1543 :                 }
; 1544 :             }
; 1545 :         else

  00094	ea000002	 b           |$LN2@SetHwCodec@18|
  00098		 |$LN7@SetHwCodec@18|

; 1546 :             {
; 1547 :             // disable output if transitioning directly from different output
; 1548 :             SetHwCodecMode_DisableOutputRouting(hTritonDriver);

  00098	eb000000	 bl          SetHwCodecMode_DisableOutputRouting

; 1549 :             SetHwCodecMode_DisableOutputGain(hTritonDriver);

  0009c	e1a00004	 mov         r0, r4
  000a0	eb000000	 bl          SetHwCodecMode_DisableOutputGain
  000a4		 |$LN2@SetHwCodec@18|

; 1550 :             }
; 1551 : 
; 1552 :         // enable output
; 1553 :         SetHwCodecMode_EnableOutputRouting(hTritonDriver, kAudioModeHeadset);

  000a4	e3a01005	 mov         r1, #5
  000a8	e1a00004	 mov         r0, r4
  000ac	eb000000	 bl          SetHwCodecMode_EnableOutputRouting

; 1554 :         SetHwCodecMode_EnableOutputGain(hTritonDriver, kAudioModeHeadset);

  000b0	e3a01005	 mov         r1, #5
  000b4	e1a00004	 mov         r0, r4
  000b8	eb000000	 bl          SetHwCodecMode_EnableOutputGain

; 1555 : 
; 1556 :         s_currentAudioMode = kAudioModeHeadset;

  000bc	e3a03005	 mov         r3, #5
  000c0	e5853000	 str         r3, [r5]
  000c4		 |$code_exit$36305|

; 1557 :         //RETAILMSG(ZONE_FUNCTION, (L"WAV:%S\r\n",__FUNCTION__));
; 1558 : #ifdef DUMP_TRITON_AUDIO_REGS
; 1559 :         DumpTritonAudioRegs(hTritonDriver);
; 1560 : #endif
; 1561 :         }
; 1562 :     else
; 1563 :         {
; 1564 :         DEBUGMSG(ZONE_TPS659XX, (L"WAV:%S - hTritonDriver is NULL!!!\r\n",
; 1565 :             __FUNCTION__
; 1566 :             ));
; 1567 :         }
; 1568 : code_exit:
; 1569 :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-%S\r\n",__FUNCTION__));
; 1570 : }

  000c4	e28dd004	 add         sp, sp, #4
  000c8	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000cc	e12fff1e	 bx          lr
  000d0		 |$LN22@SetHwCodec@18|
  000d0		 |$LN23@SetHwCodec@18|
  000d0	00000000	 DCD         |s_currentAudioMode|
  000d4		 |$M36736|

			 ENDP  ; |SetHwCodecMode_Headset|

	EXPORT	|SetHwCodecMode_AuxHeadset|

  00000			 AREA	 |.pdata|, PDATA
|$T36755| DCD	|$LN20@SetHwCodec@19|
	DCD	0x40003d02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetHwCodecMode_AuxHeadset| PROC

; 1586 : {

  00000		 |$LN20@SetHwCodec@19|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M36752|
  00008	e1a06001	 mov         r6, r1
  0000c	e1a04000	 mov         r4, r0

; 1587 :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+%S\r\n",__FUNCTION__));
; 1588 : 
; 1589 :     if (s_currentAudioMode == kAudioModeAuxHeadset)

  00010	e59f50d8	 ldr         r5, [pc, #0xD8]
  00014	e5953000	 ldr         r3, [r5]
  00018	e3530006	 cmp         r3, #6
  0001c	0a000030	 beq         |$code_exit$36324|

; 1590 :         {
; 1591 :         goto code_exit;
; 1592 :         }
; 1593 : 
; 1594 :     if (hTritonDriver)

  00020	e3540000	 cmp         r4, #0
  00024	0a00002e	 beq         |$code_exit$36324|

; 1595 :         {
; 1596 : 
; 1597 :         if (s_currentAudioMode == kAudioModeClockOnly)

  00028	e3530008	 cmp         r3, #8
  0002c	1a000001	 bne         |$LN8@SetHwCodec@19|

; 1598 :             {
; 1599 :             SetHwCodecMode_Disabled(hTritonDriver);

  00030	eb000000	 bl          SetHwCodecMode_Disabled
  00034	e5953000	 ldr         r3, [r5]
  00038		 |$LN8@SetHwCodec@19|

; 1600 :             }
; 1601 : 
; 1602 :         if (s_currentAudioMode == kAudioModeDisabled)

  00038	e3530000	 cmp         r3, #0

; 1603 :             {
; 1604 :             // init
; 1605 :             SetHwCodecMode_EnableCodecPower(hTritonDriver);

  0003c	e1a00004	 mov         r0, r4
  00040	1a000012	 bne         |$LN7@SetHwCodec@19|
  00044	e3a03801	 mov         r3, #1, 16
  00048	e3831001	 orr         r1, r3, #1
  0004c	e3a0e002	 mov         lr, #2
  00050	e3a03001	 mov         r3, #1
  00054	e28d2000	 add         r2, sp, #0
  00058	e5cde000	 strb        lr, [sp]
  0005c	eb000000	 bl          TWLWriteRegs

; 1606 :             SetHwCodecMode_EnableCodec(hTritonDriver, kSampleRate_44_1KHz);

  00060	e3a01009	 mov         r1, #9
  00064	e1a00004	 mov         r0, r4
  00068	eb000000	 bl          SetHwCodecMode_EnableCodec

; 1607 : 
; 1608 :             if (audioProfile == kAudioI2SProfile)

  0006c	e3560000	 cmp         r6, #0

; 1609 :                 {
; 1610 :                 SetAudioI2SProfile(hTritonDriver);

  00070	e1a00004	 mov         r0, r4
  00074	0a000003	 beq         |$LN4@SetHwCodec@19|

; 1611 :                 }
; 1612 :             else if (audioProfile == kAudioTDMProfile)

  00078	e3560001	 cmp         r6, #1
  0007c	1a000001	 bne         |$LN4@SetHwCodec@19|

; 1613 :                 {
; 1614 :                 SetAudioTDMProfile(hTritonDriver);

  00080	eb000000	 bl          SetAudioTDMProfile

; 1615 :                 }
; 1616 :             else

  00084	ea000008	 b           |$LN2@SetHwCodec@19|
  00088		 |$LN4@SetHwCodec@19|

; 1617 :                 {
; 1618 :                 SetAudioI2SProfile(hTritonDriver);

  00088	eb000000	 bl          SetAudioI2SProfile

; 1619 :                 }
; 1620 :             }
; 1621 :         else

  0008c	ea000006	 b           |$LN2@SetHwCodec@19|
  00090		 |$LN7@SetHwCodec@19|

; 1622 :             {
; 1623 :             // disable output if transitioning directly from different output
; 1624 :             SetHwCodecMode_DisableOutputRouting(hTritonDriver);

  00090	eb000000	 bl          SetHwCodecMode_DisableOutputRouting

; 1625 :             SetHwCodecMode_DisableOutputGain(hTritonDriver);

  00094	e1a00004	 mov         r0, r4
  00098	eb000000	 bl          SetHwCodecMode_DisableOutputGain

; 1626 : 
; 1627 :             // disable input if transitioning directly from different input
; 1628 :             SetHwCodecMode_DisableInputRouting(hTritonDriver);

  0009c	e1a00004	 mov         r0, r4
  000a0	eb000000	 bl          SetHwCodecMode_DisableInputRouting

; 1629 :             SetHwCodecMode_DisableInputGain(hTritonDriver);

  000a4	e1a00004	 mov         r0, r4
  000a8	eb000000	 bl          SetHwCodecMode_DisableInputGain
  000ac		 |$LN2@SetHwCodec@19|

; 1630 :             }
; 1631 : 
; 1632 :         // enable output
; 1633 :         SetHwCodecMode_EnableOutputRouting(hTritonDriver, kAudioModeStereoHeadset);

  000ac	e3a01003	 mov         r1, #3
  000b0	e1a00004	 mov         r0, r4
  000b4	eb000000	 bl          SetHwCodecMode_EnableOutputRouting

; 1634 :         SetHwCodecMode_EnableOutputGain(hTritonDriver, kAudioModeStereoHeadset);

  000b8	e3a01003	 mov         r1, #3
  000bc	e1a00004	 mov         r0, r4
  000c0	eb000000	 bl          SetHwCodecMode_EnableOutputGain

; 1635 : 
; 1636 :         // enable input
; 1637 :         SetHwCodecMode_EnableInputRouting(hTritonDriver, kAudioModeAuxHeadset);

  000c4	e3a01006	 mov         r1, #6
  000c8	e1a00004	 mov         r0, r4
  000cc	eb000000	 bl          SetHwCodecMode_EnableInputRouting

; 1638 :         SetHwCodecMode_EnableInputGain(hTritonDriver, kAudioModeAuxHeadset);

  000d0	e3a01006	 mov         r1, #6
  000d4	e1a00004	 mov         r0, r4
  000d8	eb000000	 bl          SetHwCodecMode_EnableInputGain

; 1639 : 
; 1640 :         s_currentAudioMode = kAudioModeAuxHeadset;

  000dc	e3a03006	 mov         r3, #6
  000e0	e5853000	 str         r3, [r5]
  000e4		 |$code_exit$36324|

; 1641 :         //RETAILMSG(1, (L"WAV:%S\r\n",__FUNCTION__));
; 1642 : #ifdef DUMP_TRITON_AUDIO_REGS
; 1643 :         DumpTritonAudioRegs(hTritonDriver);
; 1644 : #endif
; 1645 :         }
; 1646 :     else
; 1647 :         {
; 1648 :         DEBUGMSG(ZONE_TPS659XX, (L"WAV:%S - hTritonDriver is NULL!!!\r\n",
; 1649 :             __FUNCTION__
; 1650 :             ));
; 1651 :         }
; 1652 : code_exit:
; 1653 :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-%S\r\n",__FUNCTION__));
; 1654 : }

  000e4	e28dd004	 add         sp, sp, #4
  000e8	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000ec	e12fff1e	 bx          lr
  000f0		 |$LN21@SetHwCodec@19|
  000f0		 |$LN22@SetHwCodec@19|
  000f0	00000000	 DCD         |s_currentAudioMode|
  000f4		 |$M36753|

			 ENDP  ; |SetHwCodecMode_AuxHeadset|

	EXPORT	|SetHwCodecMode_StereoHeadset|

  00000			 AREA	 |.pdata|, PDATA
|$T36772| DCD	|$LN20@SetHwCodec@20|
	DCD	0x40003702
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetHwCodecMode_StereoHeadset| PROC

; 1671 : {

  00000		 |$LN20@SetHwCodec@20|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M36769|
  00008	e1a06001	 mov         r6, r1
  0000c	e1a04000	 mov         r4, r0

; 1672 :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+%S\r\n",__FUNCTION__));
; 1673 : 
; 1674 :     if (s_currentAudioMode == kAudioModeStereoHeadset)

  00010	e59f50c0	 ldr         r5, [pc, #0xC0]
  00014	e5953000	 ldr         r3, [r5]
  00018	e3530003	 cmp         r3, #3
  0001c	0a00002a	 beq         |$code_exit$36343|

; 1675 :         {
; 1676 :         goto code_exit;
; 1677 :         }
; 1678 : 
; 1679 :     if (hTritonDriver)

  00020	e3540000	 cmp         r4, #0
  00024	0a000028	 beq         |$code_exit$36343|

; 1680 :         {
; 1681 : 
; 1682 :         if (s_currentAudioMode == kAudioModeClockOnly)

  00028	e3530008	 cmp         r3, #8
  0002c	1a000001	 bne         |$LN8@SetHwCodec@20|

; 1683 :             {
; 1684 :             SetHwCodecMode_Disabled(hTritonDriver);

  00030	eb000000	 bl          SetHwCodecMode_Disabled
  00034	e5953000	 ldr         r3, [r5]
  00038		 |$LN8@SetHwCodec@20|

; 1685 :             }
; 1686 : 
; 1687 :         if (s_currentAudioMode == kAudioModeDisabled)

  00038	e3530000	 cmp         r3, #0

; 1688 :             {
; 1689 :             // init
; 1690 :             SetHwCodecMode_EnableCodecPower(hTritonDriver);

  0003c	e1a00004	 mov         r0, r4
  00040	1a000012	 bne         |$LN7@SetHwCodec@20|
  00044	e3a03801	 mov         r3, #1, 16
  00048	e3831001	 orr         r1, r3, #1
  0004c	e3a0e002	 mov         lr, #2
  00050	e3a03001	 mov         r3, #1
  00054	e28d2000	 add         r2, sp, #0
  00058	e5cde000	 strb        lr, [sp]
  0005c	eb000000	 bl          TWLWriteRegs

; 1691 :             SetHwCodecMode_EnableCodec(hTritonDriver, kSampleRate_44_1KHz);

  00060	e3a01009	 mov         r1, #9
  00064	e1a00004	 mov         r0, r4
  00068	eb000000	 bl          SetHwCodecMode_EnableCodec

; 1692 : 
; 1693 :             if (audioProfile == kAudioI2SProfile)

  0006c	e3560000	 cmp         r6, #0

; 1694 :                 {
; 1695 :                 SetAudioI2SProfile(hTritonDriver);

  00070	e1a00004	 mov         r0, r4
  00074	0a000003	 beq         |$LN4@SetHwCodec@20|

; 1696 :                 }
; 1697 :             else if (audioProfile == kAudioTDMProfile)

  00078	e3560001	 cmp         r6, #1
  0007c	1a000001	 bne         |$LN4@SetHwCodec@20|

; 1698 :                 {
; 1699 :                 SetAudioTDMProfile(hTritonDriver);

  00080	eb000000	 bl          SetAudioTDMProfile

; 1700 :                 }
; 1701 :             else

  00084	ea000008	 b           |$LN2@SetHwCodec@20|
  00088		 |$LN4@SetHwCodec@20|

; 1702 :                 {
; 1703 :                 SetAudioI2SProfile(hTritonDriver);

  00088	eb000000	 bl          SetAudioI2SProfile

; 1704 :                 }
; 1705 :             }
; 1706 :         else

  0008c	ea000006	 b           |$LN2@SetHwCodec@20|
  00090		 |$LN7@SetHwCodec@20|

; 1707 :             {
; 1708 :             // disable output if transitioning directly from different output
; 1709 :             SetHwCodecMode_DisableOutputRouting(hTritonDriver);

  00090	eb000000	 bl          SetHwCodecMode_DisableOutputRouting

; 1710 :             SetHwCodecMode_DisableOutputGain(hTritonDriver);

  00094	e1a00004	 mov         r0, r4
  00098	eb000000	 bl          SetHwCodecMode_DisableOutputGain

; 1711 : 
; 1712 :             // disable input if transitioning directly from different input
; 1713 :             SetHwCodecMode_DisableInputRouting(hTritonDriver);

  0009c	e1a00004	 mov         r0, r4
  000a0	eb000000	 bl          SetHwCodecMode_DisableInputRouting

; 1714 :             SetHwCodecMode_DisableInputGain(hTritonDriver);

  000a4	e1a00004	 mov         r0, r4
  000a8	eb000000	 bl          SetHwCodecMode_DisableInputGain
  000ac		 |$LN2@SetHwCodec@20|

; 1715 :             }
; 1716 : 
; 1717 :         // enable output
; 1718 :         SetHwCodecMode_EnableOutputRouting(hTritonDriver, kAudioModeStereoHeadset);

  000ac	e3a01003	 mov         r1, #3
  000b0	e1a00004	 mov         r0, r4
  000b4	eb000000	 bl          SetHwCodecMode_EnableOutputRouting

; 1719 :         SetHwCodecMode_EnableOutputGain(hTritonDriver, kAudioModeStereoHeadset);

  000b8	e3a01003	 mov         r1, #3
  000bc	e1a00004	 mov         r0, r4
  000c0	eb000000	 bl          SetHwCodecMode_EnableOutputGain

; 1720 : 
; 1721 :         s_currentAudioMode = kAudioModeStereoHeadset;

  000c4	e3a03003	 mov         r3, #3
  000c8	e5853000	 str         r3, [r5]
  000cc		 |$code_exit$36343|

; 1722 :         //RETAILMSG(1, (L"WAV:%S\r\n",__FUNCTION__));
; 1723 : #ifdef DUMP_TRITON_AUDIO_REGS
; 1724 :         DumpTritonAudioRegs(hTritonDriver);
; 1725 : #endif
; 1726 :         }
; 1727 :     else
; 1728 :         {
; 1729 :         DEBUGMSG(ZONE_TPS659XX, (L"WAV:%S - hTritonDriver is NULL!!!\r\n",
; 1730 :             __FUNCTION__
; 1731 :             ));
; 1732 :         }
; 1733 : code_exit:
; 1734 :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-%S\r\n",__FUNCTION__));
; 1735 : }

  000cc	e28dd004	 add         sp, sp, #4
  000d0	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000d4	e12fff1e	 bx          lr
  000d8		 |$LN21@SetHwCodec@20|
  000d8		 |$LN22@SetHwCodec@20|
  000d8	00000000	 DCD         |s_currentAudioMode|
  000dc		 |$M36770|

			 ENDP  ; |SetHwCodecMode_StereoHeadset|

	EXPORT	|SetHwCodecMode_Gain|

  00000			 AREA	 |.pdata|, PDATA
|$T36786| DCD	|$LN7@SetHwCodec@21|
	DCD	0x40000600
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetHwCodecMode_Gain| PROC

; 1751 : {

  00000		 |$LN7@SetHwCodec@21|
  00000		 |$M36783|

; 1752 :     BOOL returnValue = TRUE;
; 1753 : 
; 1754 :     UNREFERENCED_PARAMETER(hTritonDriver);
; 1755 : 
; 1756 :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+%S\r\n",__FUNCTION__));
; 1757 : 
; 1758 :     // if gain levels are identical then nothing needs to be done
; 1759 :     if (*pdwGlobalGain == dwGain)

  00000	e5923000	 ldr         r3, [r2]
  00004	e3a00001	 mov         r0, #1
  00008	e1530001	 cmp         r3, r1

; 1760 :         {
; 1761 :         returnValue = FALSE;

  0000c	03a00000	 moveq       r0, #0

; 1762 :         }
; 1763 :     else
; 1764 :         {
; 1765 :         *pdwGlobalGain = dwGain;

  00010	15821000	 strne       r1, [r2]

; 1766 :         }
; 1767 : 
; 1768 :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-%S\r\n",__FUNCTION__));
; 1769 :     return returnValue;
; 1770 : }

  00014	e12fff1e	 bx          lr
  00018		 |$M36784|

			 ENDP  ; |SetHwCodecMode_Gain|

	END
