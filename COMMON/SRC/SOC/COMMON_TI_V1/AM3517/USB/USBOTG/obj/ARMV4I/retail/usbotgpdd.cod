; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\AM3517\USB\USBOTG\usbotgpdd.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_1BM@HMKOMOIP@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAb?$AA_?$AAh?$AAo?$AAs?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@GIBBLIFM@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAb?$AA_?$AAw?$AAa?$AAi?$AAt?$AA_?$AAa?$AAc?$AAo?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@KIMGJPDD@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAb?$AA_?$AAp?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@DODPDAG@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAb?$AA_?$AAs?$AAr?$AAp?$AA_?$AAi?$AAn?$AAi?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@NECDDJFD@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAb?$AA_?$AAi?$AAd?$AAl?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@NFCDLKIG@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAa?$AA_?$AAv?$AAb?$AAu?$AAs?$AA_?$AAe?$AAr?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@JGPIJILK@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAa?$AA_?$AAw?$AAa?$AAi?$AAt?$AA_?$AAv?$AAf?$AAa?$AAl?$AAl?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@FKJBHCML@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAa?$AA_?$AAp?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@PJBGLBHA@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAa?$AA_?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@MPOLFE@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAa?$AA_?$AAh?$AAo?$AAs?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@NLDIKKHH@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAa?$AA_?$AAw?$AAa?$AAi?$AAt?$AA_?$AAb?$AAc?$AAo?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@OENAFNFJ@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAa?$AA_?$AAw?$AAa?$AAi?$AAt?$AA_?$AAv?$AAr?$AAi?$AAs?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@KIECBMII@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAa?$AA_?$AAi?$AAd?$AAl?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@MEEFJFCC@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAs?$AAt?$AAa?$AAt?$AAe?$AAs?$AA_?$AAu?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|?g_cppOtgStateString@@3PAPBGA| [ DATA ] ; g_cppOtgStateString

  00000			 AREA	 |.data|, DATA
|?g_cppOtgStateString@@3PAPBGA| DCD |??_C@_1CM@MEEFJFCC@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAs?$AAt?$AAa?$AAt?$AAe?$AAs?$AA_?$AAu?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| ; g_cppOtgStateString
	DCD	|??_C@_1BM@KIECBMII@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAa?$AA_?$AAi?$AAd?$AAl?$AAe?$AA?$AA@|
	DCD	|??_C@_1CI@OENAFNFJ@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAa?$AA_?$AAw?$AAa?$AAi?$AAt?$AA_?$AAv?$AAr?$AAi?$AAs?$AAe?$AA?$AA@|
	DCD	|??_C@_1CG@NLDIKKHH@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAa?$AA_?$AAw?$AAa?$AAi?$AAt?$AA_?$AAb?$AAc?$AAo?$AAn?$AA?$AA@|
	DCD	|??_C@_1BM@MPOLFE@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAa?$AA_?$AAh?$AAo?$AAs?$AAt?$AA?$AA@|
	DCD	|??_C@_1CC@PJBGLBHA@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAa?$AA_?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@|
	DCD	|??_C@_1CI@FKJBHCML@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAa?$AA_?$AAp?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AA?$AA@|
	DCD	|??_C@_1CI@JGPIJILK@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAa?$AA_?$AAw?$AAa?$AAi?$AAt?$AA_?$AAv?$AAf?$AAa?$AAl?$AAl?$AA?$AA@|
	DCD	|??_C@_1CE@NFCDLKIG@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAa?$AA_?$AAv?$AAb?$AAu?$AAs?$AA_?$AAe?$AAr?$AAr?$AA?$AA@|
	DCD	|??_C@_1BM@NECDDJFD@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAb?$AA_?$AAi?$AAd?$AAl?$AAe?$AA?$AA@|
	DCD	|??_C@_1CE@DODPDAG@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAb?$AA_?$AAs?$AAr?$AAp?$AA_?$AAi?$AAn?$AAi?$AAt?$AA?$AA@|
	DCD	|??_C@_1CI@KIMGJPDD@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAb?$AA_?$AAp?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AA?$AA@|
	DCD	|??_C@_1CG@GIBBLIFM@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAb?$AA_?$AAw?$AAa?$AAi?$AAt?$AA_?$AAa?$AAc?$AAo?$AAn?$AA?$AA@|
	DCD	|??_C@_1BM@HMKOMOIP@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAb?$AA_?$AAh?$AAo?$AAs?$AAt?$AA?$AA@|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@HMKOMOIP@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAb?$AA_?$AAh?$AAo?$AAs?$AAt?$AA?$AA@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, "_"
	DCB	0x0, "b", 0x0, "_", 0x0, "h", 0x0, "o", 0x0, "s", 0x0, "t"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@GIBBLIFM@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAb?$AA_?$AAw?$AAa?$AAi?$AAt?$AA_?$AAa?$AAc?$AAo?$AAn?$AA?$AA@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, "_"
	DCB	0x0, "b", 0x0, "_", 0x0, "w", 0x0, "a", 0x0, "i", 0x0, "t"
	DCB	0x0, "_", 0x0, "a", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@KIMGJPDD@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAb?$AA_?$AAp?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AA?$AA@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, "_"
	DCB	0x0, "b", 0x0, "_", 0x0, "p", 0x0, "e", 0x0, "r", 0x0, "i"
	DCB	0x0, "p", 0x0, "h", 0x0, "e", 0x0, "r", 0x0, "a", 0x0, "l"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@DODPDAG@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAb?$AA_?$AAs?$AAr?$AAp?$AA_?$AAi?$AAn?$AAi?$AAt?$AA?$AA@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, "_"
	DCB	0x0, "b", 0x0, "_", 0x0, "s", 0x0, "r", 0x0, "p", 0x0, "_"
	DCB	0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@NECDDJFD@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAb?$AA_?$AAi?$AAd?$AAl?$AAe?$AA?$AA@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, "_"
	DCB	0x0, "b", 0x0, "_", 0x0, "i", 0x0, "d", 0x0, "l", 0x0, "e"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@NFCDLKIG@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAa?$AA_?$AAv?$AAb?$AAu?$AAs?$AA_?$AAe?$AAr?$AAr?$AA?$AA@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, "_"
	DCB	0x0, "a", 0x0, "_", 0x0, "v", 0x0, "b", 0x0, "u", 0x0, "s"
	DCB	0x0, "_", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@JGPIJILK@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAa?$AA_?$AAw?$AAa?$AAi?$AAt?$AA_?$AAv?$AAf?$AAa?$AAl?$AAl?$AA?$AA@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, "_"
	DCB	0x0, "a", 0x0, "_", 0x0, "w", 0x0, "a", 0x0, "i", 0x0, "t"
	DCB	0x0, "_", 0x0, "v", 0x0, "f", 0x0, "a", 0x0, "l", 0x0, "l"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@FKJBHCML@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAa?$AA_?$AAp?$AAe?$AAr?$AAi?$AAp?$AAh?$AAe?$AAr?$AAa?$AAl?$AA?$AA@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, "_"
	DCB	0x0, "a", 0x0, "_", 0x0, "p", 0x0, "e", 0x0, "r", 0x0, "i"
	DCB	0x0, "p", 0x0, "h", 0x0, "e", 0x0, "r", 0x0, "a", 0x0, "l"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@PJBGLBHA@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAa?$AA_?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, "_"
	DCB	0x0, "a", 0x0, "_", 0x0, "s", 0x0, "u", 0x0, "s", 0x0, "p"
	DCB	0x0, "e", 0x0, "n", 0x0, "d", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@MPOLFE@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAa?$AA_?$AAh?$AAo?$AAs?$AAt?$AA?$AA@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, "_"
	DCB	0x0, "a", 0x0, "_", 0x0, "h", 0x0, "o", 0x0, "s", 0x0, "t"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@NLDIKKHH@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAa?$AA_?$AAw?$AAa?$AAi?$AAt?$AA_?$AAb?$AAc?$AAo?$AAn?$AA?$AA@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, "_"
	DCB	0x0, "a", 0x0, "_", 0x0, "w", 0x0, "a", 0x0, "i", 0x0, "t"
	DCB	0x0, "_", 0x0, "b", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@OENAFNFJ@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAa?$AA_?$AAw?$AAa?$AAi?$AAt?$AA_?$AAv?$AAr?$AAi?$AAs?$AAe?$AA?$AA@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, "_"
	DCB	0x0, "a", 0x0, "_", 0x0, "w", 0x0, "a", 0x0, "i", 0x0, "t"
	DCB	0x0, "_", 0x0, "v", 0x0, "r", 0x0, "i", 0x0, "s", 0x0, "e"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@KIECBMII@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAa?$AA_?$AAi?$AAd?$AAl?$AAe?$AA?$AA@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, "_"
	DCB	0x0, "a", 0x0, "_", 0x0, "i", 0x0, "d", 0x0, "l", 0x0, "e"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@MEEFJFCC@?$AAU?$AAS?$AAB?$AAO?$AAT?$AAG?$AA_?$AAs?$AAt?$AAa?$AAt?$AAe?$AAs?$AA_?$AAu?$AAn?$AAk?$AAn?$AAo?$AAw?$AAn?$AA?$AA@| DCB "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, "_"
	DCB	0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "s"
	DCB	0x0, "_", 0x0, "u", 0x0, "n", 0x0, "k", 0x0, "n", 0x0, "o"
	DCB	0x0, "w", 0x0, "n", 0x0, 0x0, 0x0	; `string'
	EXPORT	|SetEvent|
	IMPORT	|EventModify|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T40461| DCD	|$LN5@SetEvent|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetEvent| PROC

; 235  : _inline BOOL SetEvent(HANDLE h) {

  00000		 |$LN5@SetEvent|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M40458|

; 236  : 	return EventModify(h,EVENT_SET);

  00004	e3a01003	 mov         r1, #3
  00008	eb000000	 bl          EventModify

; 237  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M40459|

			 ENDP  ; |SetEvent|

	EXPORT	|?RegQueryValueExW@CRegistryEdit@@QAAHPBGPAKPAE1@Z| ; CRegistryEdit::RegQueryValueExW
	IMPORT	|RegQueryValueExW|
; File c:\wince600\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.pdata|, PDATA
|$T40476| DCD	|$LN7@RegQueryVa|
	DCD	0x40001002
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RegQueryValueExW@CRegistryEdit@@QAAHPBGPAKPAE1@Z| PROC ; CRegistryEdit::RegQueryValueExW

; 145  :     {

  00000		 |$LN7@RegQueryVa|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M40473|
  00008	e1a04003	 mov         r4, r3
  0000c	e1a03002	 mov         r3, r2

; 146  :         LONG status = ::RegQueryValueEx( m_hDevKey,
; 147  :                                            lpcName,
; 148  :                                            NULL,
; 149  :                                            pdwType,
; 150  :                                            lpData,
; 151  :                                            pdwDataLen );

  00010	e59de010	 ldr         lr, [sp, #0x10]
  00014	e5900000	 ldr         r0, [r0]
  00018	e3a02000	 mov         r2, #0
  0001c	e58de004	 str         lr, [sp, #4]
  00020	e58d4000	 str         r4, [sp]
  00024	eb000000	 bl          RegQueryValueExW
  00028	e3500000	 cmp         r0, #0

; 152  :         return ( status == ERROR_SUCCESS );

  0002c	03a00001	 moveq       r0, #1
  00030	13a00000	 movne       r0, #0

; 153  :     };

  00034	e28dd008	 add         sp, sp, #8
  00038	e8bd4010	 ldmia       sp!, {r4, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$M40474|

			 ENDP  ; |?RegQueryValueExW@CRegistryEdit@@QAAHPBGPAKPAE1@Z|, CRegistryEdit::RegQueryValueExW

	EXPORT	|?IOControl@DefaultBusDriver@@UAAHKPAEK0KPAK@Z| ; DefaultBusDriver::IOControl
; File c:\wince600\public\common\oak\inc\defbus.h

  00000			 AREA	 |.pdata|, PDATA
|$T40489| DCD	|$LN5@IOControl|
	DCD	0x40001102
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IOControl@DefaultBusDriver@@UAAHKPAEK0KPAK@Z| PROC ; DefaultBusDriver::IOControl

; 152  :               PDWORD pdwActualOut) {

  00000		 |$LN5@IOControl|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004	e24dd010	 sub         sp, sp, #0x10
  00008		 |$M40486|

; 153  :         return FastIOControl(dwCode,pBufIn,dwLenIn, pBufOut, dwLenOut, pdwActualOut, NULL) ;

  00008	e590e000	 ldr         lr, [r0]
  0000c	e59d4030	 ldr         r4, [sp, #0x30]
  00010	e59d502c	 ldr         r5, [sp, #0x2C]
  00014	e59d6028	 ldr         r6, [sp, #0x28]
  00018	e59e7058	 ldr         r7, [lr, #0x58]
  0001c	e3a08000	 mov         r8, #0
  00020	e58d4008	 str         r4, [sp, #8]
  00024	e58d5004	 str         r5, [sp, #4]
  00028	e58d6000	 str         r6, [sp]
  0002c	e58d800c	 str         r8, [sp, #0xC]
  00030	e1a0e00f	 mov         lr, pc
  00034	e12fff17	 bx          r7

; 154  :     }

  00038	e28dd010	 add         sp, sp, #0x10
  0003c	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M40487|

			 ENDP  ; |?IOControl@DefaultBusDriver@@UAAHKPAEK0KPAK@Z|, DefaultBusDriver::IOControl

	EXPORT	|?ChipCfgLock@CAM35xOTG@@IAAXH@Z|	; CAM35xOTG::ChipCfgLock
; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbotg\usbotgpdd.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T40496| DCD	|$LN5@ChipCfgLoc|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ChipCfgLock@CAM35xOTG@@IAAXH@Z| PROC	; CAM35xOTG::ChipCfgLock

; 54   : {

  00000		 |$LN5@ChipCfgLoc|
  00000		 |$M40493|

; 55   : 	UNREFERENCED_PARAMETER(lock);
; 56   : 
; 57   : 	// Not available on AM3517
; 58   : }

  00000	e12fff1e	 bx          lr
  00004		 |$M40494|

			 ENDP  ; |?ChipCfgLock@CAM35xOTG@@IAAXH@Z|, CAM35xOTG::ChipCfgLock

	EXPORT	|?StartUSBModule@CAM35xOTG@@QAAXXZ|	; CAM35xOTG::StartUSBModule
	IMPORT	|Sleep|

  00000			 AREA	 |.pdata|, PDATA
|$T40516| DCD	|$LN15@StartUSBMo|
	DCD	0x40002b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?StartUSBModule@CAM35xOTG@@QAAXXZ| PROC ; CAM35xOTG::StartUSBModule

; 61   : {

  00000		 |$LN15@StartUSBMo|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M40513|
  00004	e1a05000	 mov         r5, r0

; 62   :     DWORD nPhyCtl = 0;
; 63   : 
; 64   :     DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("+CAM35xOTG::StartUSBModule()\r\n")));
; 65   : 
; 66   :     nPhyCtl = m_pSysConfRegs->CONTROL_DEVCONF2;

  00008	e59520e8	 ldr         r2, [r5, #0xE8]

; 67   :         
; 68   : 	// Global Reset 
; 69   : 	SETREG32(&m_pSysConfRegs->CONTROL_IP_SW_RESET, USB20OTGSS_SW_RST);
; 70   : 	Sleep(10);

  0000c	e3a0000a	 mov         r0, #0xA
  00010	e5924310	 ldr         r4, [r2, #0x310]
  00014	e5923328	 ldr         r3, [r2, #0x328]
  00018	e3833001	 orr         r3, r3, #1
  0001c	e5823328	 str         r3, [r2, #0x328]
  00020	eb000000	 bl          Sleep

; 71   : 	CLRREG32(&m_pSysConfRegs->CONTROL_IP_SW_RESET, USB20OTGSS_SW_RST);

  00024	e59520e8	 ldr         r2, [r5, #0xE8]

; 72   : 
; 73   : 	// Reset the controller
; 74   : 	SETREG32(&m_pUsbRegs->CTRLR, OTG_CONTROL_RESET);
; 75   : 
; 76   : 	Sleep(10);

  00028	e3a0000a	 mov         r0, #0xA
  0002c	e5923328	 ldr         r3, [r2, #0x328]
  00030	e3c33001	 bic         r3, r3, #1
  00034	e5823328	 str         r3, [r2, #0x328]
  00038	e59520ec	 ldr         r2, [r5, #0xEC]
  0003c	e5923004	 ldr         r3, [r2, #4]
  00040	e3833001	 orr         r3, r3, #1
  00044	e5823004	 str         r3, [r2, #4]
  00048	eb000000	 bl          Sleep

; 77   : 
; 78   :     // Unlock USBPHY_CTL reg
; 79   :     ChipCfgLock(FALSE);
; 80   : 
; 81   :     // Take Phy out of reset
; 82   :     nPhyCtl &= ~(DEVCONF2_USBOTG_PHY_RESET);
; 83   :     m_pSysConfRegs->CONTROL_DEVCONF2 = nPhyCtl;

  0004c	e59530e8	 ldr         r3, [r5, #0xE8]
  00050	e3c42010	 bic         r2, r4, #0x10

; 84   : 
; 85   :     // configure normal USB operation
; 86   :     nPhyCtl &= ~(DEVCONF2_USBOTG_OTGMODE);
; 87   :         
; 88   :     // Start on-chip PHY and PLL's
; 89   :     nPhyCtl |= (DEVCONF2_USBOTG_PHY_PLLON    |
; 90   : 				DEVCONF2_USBOTG_SESSENDEN    |
; 91   : 				DEVCONF2_USBOTG_VBUSDETECTEN |
; 92   : 				DEVCONF2_USBOTG_DATAPOLARITY ) ;
; 93   : 
; 94   :     nPhyCtl &= ~(DEVCONF2_USBOTG_PHY_PD		 |
; 95   : 				 DEVCONF2_USBOTG_POWERDOWNOTG);
; 96   : 
; 97   :     m_pSysConfRegs->CONTROL_DEVCONF2 = nPhyCtl;

  00054	e3a00a03	 mov         r0, #3, 20
  00058	e5832310	 str         r2, [r3, #0x310]
  0005c	e3e03903	 mvn         r3, #3, 18
  00060	e223300c	 eor         r3, r3, #0xC
  00064	e59510e8	 ldr         r1, [r5, #0xE8]
  00068	e0022003	 and         r2, r2, r3
  0006c	e3803022	 orr         r3, r0, #0x22
  00070	e1823003	 orr         r3, r2, r3
  00074	e5813310	 str         r3, [r1, #0x310]

; 98   :     Sleep(1);

  00078	e3a00001	 mov         r0, #1

; 99   : 
; 100  :     // wait until ready
; 101  :     while ((m_pSysConfRegs->CONTROL_DEVCONF2 & DEVCONF2_USBOTG_PWR_CLKGOOD) != DEVCONF2_USBOTG_PWR_CLKGOOD)

  0007c	ea000000	 b           |$LN12@StartUSBMo|
  00080		 |$LL2@StartUSBMo|

; 102  :         Sleep(5);

  00080	e3a00005	 mov         r0, #5
  00084		 |$LN12@StartUSBMo|
  00084	eb000000	 bl          Sleep
  00088	e59530e8	 ldr         r3, [r5, #0xE8]
  0008c	e5933310	 ldr         r3, [r3, #0x310]
  00090	e2033080	 and         r3, r3, #0x80
  00094	e3530080	 cmp         r3, #0x80
  00098	1afffff8	 bne         |$LL2@StartUSBMo|

; 103  : 
; 104  :     // Lock USBPHY_CTL reg
; 105  :     ChipCfgLock(TRUE);
; 106  : 
; 107  :     // Enable USB state polling
; 108  :     m_bEnablePolling = TRUE;

  0009c	e3a03001	 mov         r3, #1
  000a0	e58530fc	 str         r3, [r5, #0xFC]

; 109  : 
; 110  :     DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("-CAM35xOTG::StartUSBModule()\r\n")));
; 111  : }

  000a4	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000a8	e12fff1e	 bx          lr
  000ac		 |$M40514|

			 ENDP  ; |?StartUSBModule@CAM35xOTG@@QAAXXZ|, CAM35xOTG::StartUSBModule

	EXPORT	|??0CAM35xOTG@@QAA@PBG@Z|		; CAM35xOTG::CAM35xOTG
	EXPORT	|??_7CAM35xOTG@@6B@| [ DATA ]		; CAM35xOTG::`vftable'
	EXPORT	|?Init@CAM35xOTG@@UAAHXZ|		; CAM35xOTG::Init
	EXPORT	|?PostInit@CAM35xOTG@@UAAHXZ|		; CAM35xOTG::PostInit
	EXPORT	|?PowerUp@CAM35xOTG@@UAAHXZ|		; CAM35xOTG::PowerUp
	EXPORT	|?PowerDown@CAM35xOTG@@UAAHXZ|		; CAM35xOTG::PowerDown
	EXPORT	|?Open@USBOTG@@UAAHKK@Z|		; USBOTG::Open
	EXPORT	|?Close@DefaultBusDriver@@UAAHXZ|	; DefaultBusDriver::Close
	EXPORT	|?IOControl@CAM35xOTG@@UAAHKPAEK0KPAK@Z| ; CAM35xOTG::IOControl
	EXPORT	|?IsChildRemoved@DefaultBusDriver@@UAAHPBG@Z| ; DefaultBusDriver::IsChildRemoved
	EXPORT	|?CreateFunctionDeviceFolder@USBOTG@@UAAPAVDeviceFolder@@PBG0KKKKPAXK0@Z| ; USBOTG::CreateFunctionDeviceFolder
	EXPORT	|?CreateHostDeviceFolder@USBOTG@@UAAPAVDeviceFolder@@PBG0KKKKPAXK0@Z| ; USBOTG::CreateHostDeviceFolder
	EXPORT	|?UsbOtgConfigure@CAM35xOTG@@UAA?AW4USBOTG_MODE@@W42@@Z| ; CAM35xOTG::UsbOtgConfigure
	EXPORT	|?NewStateAction@CAM35xOTG@@UAAHW4USBOTG_STATES@@T_USBOTG_OUTPUT@@@Z| ; CAM35xOTG::NewStateAction
	EXPORT	|?UpdateInput@CAM35xOTG@@UAAHXZ|	; CAM35xOTG::UpdateInput
	EXPORT	|?SessionRequest@CAM35xOTG@@UAAHHH@Z|	; CAM35xOTG::SessionRequest
	EXPORT	|?DischargVBus@CAM35xOTG@@UAAHXZ|	; CAM35xOTG::DischargVBus
	EXPORT	|?IsSE0@CAM35xOTG@@UAAHXZ|		; CAM35xOTG::IsSE0
	EXPORT	|?GetOtgAConnectEvent@USBOTG@@UAAPAXXZ|	; USBOTG::GetOtgAConnectEvent
	EXPORT	|?SetChildDevicePowerState@USBOTG@@UAAHPAU_CE_BUS_POWER_STATE@@@Z| ; USBOTG::SetChildDevicePowerState
	EXPORT	|?GetChildDevicePowerState@USBOTG@@UAAHPAU_CE_BUS_POWER_STATE@@@Z| ; USBOTG::GetChildDevicePowerState
	EXPORT	|?UpdatePowerState@CAM35xOTG@@UAAHXZ|	; CAM35xOTG::UpdatePowerState
	EXPORT	|?GetPowerCapabilities@USBOTG@@UAA?AU_POWER_CAPABILITIES@@XZ| ; USBOTG::GetPowerCapabilities
	IMPORT	|StringCchCopyW|
	IMPORT	|??2@YAPAXI@Z|				; operator new
	IMPORT	|CreateEventW|
	IMPORT	|CreateBusAccessHandle|
	IMPORT	|??0USBOTG@@QAA@PBG@Z|			; USBOTG::USBOTG
	IMPORT	|wcslen|
	IMPORT	|??_ECAM35xOTG@@UAAPAXI@Z|, WEAK |??_GCAM35xOTG@@UAAPAXI@Z| ; CAM35xOTG::`vector deleting destructor', CAM35xOTG::`scalar deleting destructor'
	IMPORT	|?TranslateChildBusAddr@DefaultBusDriver@@UAAHPAU_CE_BUS_TRANSLATE_BUS_ADDR@@@Z| ; DefaultBusDriver::TranslateChildBusAddr
	IMPORT	|?TranslateChildSystemAddr@DefaultBusDriver@@UAAHPAU_CE_BUS_TRANSLATE_SYSTEM_ADDR@@@Z| ; DefaultBusDriver::TranslateChildSystemAddr
	IMPORT	|?SetChildDevicePowerState@DefaultBusDriver@@UAAHPAU_CE_BUS_POWER_STATE@@PAPAVDeviceFolder@@@Z| ; DefaultBusDriver::SetChildDevicePowerState
	IMPORT	|?GetChildDevicePowerState@DefaultBusDriver@@UAAHPAU_CE_BUS_POWER_STATE@@PAPAVDeviceFolder@@@Z| ; DefaultBusDriver::GetChildDevicePowerState
	IMPORT	|?SetChildDeviceConfigurationData@DefaultBusDriver@@UAAHPAU_CE_BUS_DEVICE_CONFIGURATION_DATA@@PAPAVDeviceFolder@@@Z| ; DefaultBusDriver::SetChildDeviceConfigurationData
	IMPORT	|?GetChildDeviceConfigurationData@DefaultBusDriver@@UAAHPAU_CE_BUS_DEVICE_CONFIGURATION_DATA@@PAPAVDeviceFolder@@@Z| ; DefaultBusDriver::GetChildDeviceConfigurationData
	IMPORT	|?ActivateChild@DefaultBusDriver@@UAAHPBG@Z| ; DefaultBusDriver::ActivateChild
	IMPORT	|?DeactivateChild@DefaultBusDriver@@UAAHPBG@Z| ; DefaultBusDriver::DeactivateChild
	IMPORT	|?GetChildByName@DefaultBusDriver@@UAAPAVDeviceFolder@@PBGPAPAV2@@Z| ; DefaultBusDriver::GetChildByName
	IMPORT	|?InsertChild@DefaultBusDriver@@UAAHPAVDeviceFolder@@@Z| ; DefaultBusDriver::InsertChild
	IMPORT	|?RemoveChildByName@DefaultBusDriver@@UAAHPBG@Z| ; DefaultBusDriver::RemoveChildByName
	IMPORT	|?RemoveChildByFolder@DefaultBusDriver@@UAAHPAVDeviceFolder@@@Z| ; DefaultBusDriver::RemoveChildByFolder
	IMPORT	|?GetBusNamePrefix@USBOTG@@UAAKPAGK@Z|	; USBOTG::GetBusNamePrefix
	IMPORT	|?FastIOControl@DefaultBusDriver@@UAAHKPAEK0KPAKPAPAVDeviceFolder@@@Z| ; DefaultBusDriver::FastIOControl
	IMPORT	|?ActivateAllChildDrivers@USBOTG@@UAAHXZ| ; USBOTG::ActivateAllChildDrivers
	IMPORT	|?LoadUnloadHCD@USBOTG@@UAAHH@Z|	; USBOTG::LoadUnloadHCD
	IMPORT	|?LoadUnloadUSBFN@USBOTG@@UAAHH@Z|	; USBOTG::LoadUnloadUSBFN
	IMPORT	|?EventNotification@USBOTG@@UAAHXZ|	; USBOTG::EventNotification
	IMPORT	|?TimeOut@USBOTG@@UAAHW4USBOTG_WATCHITEM@@@Z| ; USBOTG::TimeOut
	IMPORT	|?GetOTGEnableBit@USBOTG@@UAAEPBG@Z|	; USBOTG::GetOTGEnableBit
	IMPORT	|?OtgRequestBus@USBOTG@@UAAHH@Z|	; USBOTG::OtgRequestBus
	IMPORT	|?OtgDropBus@USBOTG@@UAAHH@Z|		; USBOTG::OtgDropBus
	IMPORT	|?OtgSuspendBus@USBOTG@@UAAHPBGH@Z|	; USBOTG::OtgSuspendBus
	IMPORT	|?OtgEnableHNP@USBOTG@@UAAHPBGH@Z|	; USBOTG::OtgEnableHNP
	IMPORT	|?OTGNotifyDetach@USBOTG@@UAAHPBG@Z|	; USBOTG::OTGNotifyDetach
	IMPORT	|?OTGUSBFNNotfyActive@USBOTG@@UAAHPBGH@Z| ; USBOTG::OTGUSBFNNotfyActive
	IMPORT	|?OTGHCDNotfyAccept@USBOTG@@UAAHPBGH@Z|	; USBOTG::OTGHCDNotfyAccept
	IMPORT	|?EnterState@USBOTG@@MAAHW4USBOTG_STATES@@@Z| ; USBOTG::EnterState
	IMPORT	|?StateChange@USBOTG@@MAA?AW4USBOTG_STATES@@W42@@Z| ; USBOTG::StateChange

  00000			 AREA	 |.pdata|, PDATA
|$T40532| DCD	|$LN9@CAM35xOTG|
	DCD	0x40002901

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CAM35xOTG@@6B@| DCD |?Init@CAM35xOTG@@UAAHXZ|	; CAM35xOTG::`vftable'
	DCD	|?PostInit@CAM35xOTG@@UAAHXZ|
	DCD	|??_ECAM35xOTG@@UAAPAXI@Z|
	DCD	|?TranslateChildBusAddr@DefaultBusDriver@@UAAHPAU_CE_BUS_TRANSLATE_BUS_ADDR@@@Z|
	DCD	|?TranslateChildSystemAddr@DefaultBusDriver@@UAAHPAU_CE_BUS_TRANSLATE_SYSTEM_ADDR@@@Z|
	DCD	|?SetChildDevicePowerState@DefaultBusDriver@@UAAHPAU_CE_BUS_POWER_STATE@@PAPAVDeviceFolder@@@Z|
	DCD	|?GetChildDevicePowerState@DefaultBusDriver@@UAAHPAU_CE_BUS_POWER_STATE@@PAPAVDeviceFolder@@@Z|
	DCD	|?SetChildDeviceConfigurationData@DefaultBusDriver@@UAAHPAU_CE_BUS_DEVICE_CONFIGURATION_DATA@@PAPAVDeviceFolder@@@Z|
	DCD	|?GetChildDeviceConfigurationData@DefaultBusDriver@@UAAHPAU_CE_BUS_DEVICE_CONFIGURATION_DATA@@PAPAVDeviceFolder@@@Z|
	DCD	|?ActivateChild@DefaultBusDriver@@UAAHPBG@Z|
	DCD	|?DeactivateChild@DefaultBusDriver@@UAAHPBG@Z|
	DCD	|?PowerUp@CAM35xOTG@@UAAHXZ|
	DCD	|?PowerDown@CAM35xOTG@@UAAHXZ|
	DCD	|?Open@USBOTG@@UAAHKK@Z|
	DCD	|?Close@DefaultBusDriver@@UAAHXZ|
	DCD	|?IOControl@CAM35xOTG@@UAAHKPAEK0KPAK@Z|
	DCD	|?GetChildByName@DefaultBusDriver@@UAAPAVDeviceFolder@@PBGPAPAV2@@Z|
	DCD	|?InsertChild@DefaultBusDriver@@UAAHPAVDeviceFolder@@@Z|
	DCD	|?RemoveChildByName@DefaultBusDriver@@UAAHPBG@Z|
	DCD	|?RemoveChildByFolder@DefaultBusDriver@@UAAHPAVDeviceFolder@@@Z|
	DCD	|?IsChildRemoved@DefaultBusDriver@@UAAHPBG@Z|
	DCD	|?GetBusNamePrefix@USBOTG@@UAAKPAGK@Z|
	DCD	|?FastIOControl@DefaultBusDriver@@UAAHKPAEK0KPAKPAPAVDeviceFolder@@@Z|
	DCD	|?CreateFunctionDeviceFolder@USBOTG@@UAAPAVDeviceFolder@@PBG0KKKKPAXK0@Z|
	DCD	|?CreateHostDeviceFolder@USBOTG@@UAAPAVDeviceFolder@@PBG0KKKKPAXK0@Z|
	DCD	|?ActivateAllChildDrivers@USBOTG@@UAAHXZ|
	DCD	|?LoadUnloadHCD@USBOTG@@UAAHH@Z|
	DCD	|?LoadUnloadUSBFN@USBOTG@@UAAHH@Z|
	DCD	|?UsbOtgConfigure@CAM35xOTG@@UAA?AW4USBOTG_MODE@@W42@@Z|
	DCD	|?EventNotification@USBOTG@@UAAHXZ|
	DCD	|?TimeOut@USBOTG@@UAAHW4USBOTG_WATCHITEM@@@Z|
	DCD	|?NewStateAction@CAM35xOTG@@UAAHW4USBOTG_STATES@@T_USBOTG_OUTPUT@@@Z|
	DCD	|?UpdateInput@CAM35xOTG@@UAAHXZ|
	DCD	|?SessionRequest@CAM35xOTG@@UAAHHH@Z|
	DCD	|?DischargVBus@CAM35xOTG@@UAAHXZ|
	DCD	|?IsSE0@CAM35xOTG@@UAAHXZ|
	DCD	|?GetOTGEnableBit@USBOTG@@UAAEPBG@Z|
	DCD	|?OtgRequestBus@USBOTG@@UAAHH@Z|
	DCD	|?OtgDropBus@USBOTG@@UAAHH@Z|
	DCD	|?OtgSuspendBus@USBOTG@@UAAHPBGH@Z|
	DCD	|?OtgEnableHNP@USBOTG@@UAAHPBGH@Z|
	DCD	|?OTGNotifyDetach@USBOTG@@UAAHPBG@Z|
	DCD	|?OTGUSBFNNotfyActive@USBOTG@@UAAHPBGH@Z|
	DCD	|?OTGHCDNotfyAccept@USBOTG@@UAAHPBGH@Z|
	DCD	|?GetOtgAConnectEvent@USBOTG@@UAAPAXXZ|
	DCD	|?SetChildDevicePowerState@USBOTG@@UAAHPAU_CE_BUS_POWER_STATE@@@Z|
	DCD	|?GetChildDevicePowerState@USBOTG@@UAAHPAU_CE_BUS_POWER_STATE@@@Z|
	DCD	|?UpdatePowerState@CAM35xOTG@@UAAHXZ|
	DCD	|?GetPowerCapabilities@USBOTG@@UAA?AU_POWER_CAPABILITIES@@XZ|
	DCD	|?EnterState@USBOTG@@MAAHW4USBOTG_STATES@@@Z|
	DCD	|?StateChange@USBOTG@@MAA?AW4USBOTG_STATES@@W42@@Z|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CAM35xOTG@@QAA@PBG@Z| PROC		; CAM35xOTG::CAM35xOTG

; 115  : {

  00000		 |$LN9@CAM35xOTG|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M40529|
  00004	e1a07001	 mov         r7, r1
  00008	e1a05000	 mov         r5, r0
  0000c	eb000000	 bl          |??0USBOTG@@QAA@PBG@Z|
  00010	e59f3088	 ldr         r3, [pc, #0x88]

; 116  :     DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("+CAM35xOTG::CAM35xOTG()\r\n")));
; 117  : 
; 118  :     m_hParent = CreateBusAccessHandle(lpActivePath);

  00014	e1a00007	 mov         r0, r7
  00018	e5853000	 str         r3, [r5]
  0001c	eb000000	 bl          CreateBusAccessHandle
  00020	e1a03000	 mov         r3, r0

; 119  : 
; 120  :     // Initialize hardware register pointers
; 121  :     m_pUsbRegs = NULL;
; 122  :     m_pSysConfRegs = NULL;
; 123  : 	m_bFunctionMode = FALSE;
; 124  : 	m_bHostMode = FALSE;
; 125  : 
; 126  :     // Initialize polling parameters
; 127  :     m_hPollThreadExitEvent = CreateEvent( NULL, TRUE, FALSE, NULL);

  00024	e58530dc	 str         r3, [r5, #0xDC]
  00028	e3a0e000	 mov         lr, #0
  0002c	e3a03000	 mov         r3, #0
  00030	e3a00000	 mov         r0, #0
  00034	e3a02000	 mov         r2, #0
  00038	e3a01001	 mov         r1, #1
  0003c	e585e0ec	 str         lr, [r5, #0xEC]
  00040	e585e0e8	 str         lr, [r5, #0xE8]
  00044	e585e100	 str         lr, [r5, #0x100]
  00048	e585e108	 str         lr, [r5, #0x108]
  0004c	eb000000	 bl          CreateEventW

; 128  :     m_PollTimeout = INFINITE; // Initialise poll period to safe value

  00050	e3e06000	 mvn         r6, #0
  00054	e58560f4	 str         r6, [r5, #0xF4]
  00058	e58500f0	 str         r0, [r5, #0xF0]

; 129  : 
; 130  :     if (lpActivePath) 

  0005c	e3570000	 cmp         r7, #0
  00060	0a00000b	 beq         |$LN1@CAM35xOTG|

; 131  :     {
; 132  :         DWORD dwLength = _tcslen(lpActivePath) + 1;

  00064	e1a00007	 mov         r0, r7
  00068	eb000000	 bl          wcslen
  0006c	e2804001	 add         r4, r0, #1

; 133  :         m_ActiveKeyPath = new TCHAR [ dwLength ] ;

  00070	e3740106	 cmn         r4, #6, 2
  00074	91a06084	 movls       r6, r4, lsl #1
  00078	e1a00006	 mov         r0, r6
  0007c	eb000000	 bl          |??2@YAPAXI@Z|
  00080	e3500000	 cmp         r0, #0

; 134  :         if (m_ActiveKeyPath)
; 135  :             StringCchCopy( m_ActiveKeyPath, dwLength, lpActivePath );

  00084	11a02007	 movne       r2, r7
  00088	11a01004	 movne       r1, r4
  0008c	e58500e0	 str         r0, [r5, #0xE0]
  00090	1b000000	 blne        StringCchCopyW
  00094		 |$LN1@CAM35xOTG|

; 136  :     }
; 137  : 
; 138  :     DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("-CAM35xOTG::CAM35xOTG()\r\n")));
; 139  : }

  00094	e1a00005	 mov         r0, r5
  00098	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  0009c	e12fff1e	 bx          lr
  000a0		 |$LN10@CAM35xOTG|
  000a0		 |$LN11@CAM35xOTG|
  000a0	00000000	 DCD         |??_7CAM35xOTG@@6B@|
  000a4		 |$M40530|

			 ENDP  ; |??0CAM35xOTG@@QAA@PBG@Z|, CAM35xOTG::CAM35xOTG

; File c:\wince600\public\common\oak\inc\defbus.h

  00000			 AREA	 |.pdata|, PDATA
|$T40543| DCD	|$LN5@Close|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Close@DefaultBusDriver@@UAAHXZ| PROC	; DefaultBusDriver::Close

; 150  :     virtual BOOL  Close() { return TRUE; };

  00000		 |$LN5@Close|
  00000		 |$M40540|
  00000	e3a00001	 mov         r0, #1
  00004	e12fff1e	 bx          lr
  00008		 |$M40541|

			 ENDP  ; |?Close@DefaultBusDriver@@UAAHXZ|, DefaultBusDriver::Close


  00000			 AREA	 |.pdata|, PDATA
|$T40552| DCD	|$LN5@IsChildRem|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsChildRemoved@DefaultBusDriver@@UAAHPBG@Z| PROC ; DefaultBusDriver::IsChildRemoved

; 162  :     virtual BOOL IsChildRemoved(LPCTSTR lpChildName) { return FALSE; }; // Can not be removed for default driver.

  00000		 |$LN5@IsChildRem|
  00000		 |$M40549|
  00000	e3a00000	 mov         r0, #0
  00004	e12fff1e	 bx          lr
  00008		 |$M40550|

			 ENDP  ; |?IsChildRemoved@DefaultBusDriver@@UAAHPBG@Z|, DefaultBusDriver::IsChildRemoved

	IMPORT	|??0DeviceFolder@@QAA@PBG0KKKKPAXK0@Z|	; DeviceFolder::DeviceFolder
; File c:\wince600\public\common\oak\inc\usbotg.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T40568| DCD	|$LN7@CreateFunc|
	DCD	0x40001e02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CreateFunctionDeviceFolder@USBOTG@@UAAPAVDeviceFolder@@PBG0KKKKPAXK0@Z| PROC ; USBOTG::CreateFunctionDeviceFolder

; 173  :     virtual DeviceFolder * CreateFunctionDeviceFolder(LPCTSTR lpBusName,LPCTSTR lpTemplateRegPath,DWORD dwBusType, DWORD BusNumber,DWORD DeviceNumber,DWORD FunctionNumber,HANDLE hParent,DWORD dwMaxInitReg=MAX_INIT_REG,LPCTSTR lpDeviceBusName = NULL) {

  00000		 |$LN7@CreateFunc|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd018	 sub         sp, sp, #0x18
  00008		 |$M40565|
  00008	e1a09003	 mov         r9, r3
  0000c	e1a0a002	 mov         r10, r2
  00010	e1a0b001	 mov         r11, r1

; 174  :         return new DeviceFolder(lpBusName,lpTemplateRegPath,dwBusType,BusNumber,DeviceNumber,FunctionNumber,hParent,dwMaxInitReg,lpDeviceBusName);

  00014	e3a00060	 mov         r0, #0x60
  00018	eb000000	 bl          |??2@YAPAXI@Z|
  0001c	e3500000	 cmp         r0, #0
  00020	0a000010	 beq         |$LN3@CreateFunc|
  00024	e59de050	 ldr         lr, [sp, #0x50]
  00028	e59d404c	 ldr         r4, [sp, #0x4C]
  0002c	e59d5048	 ldr         r5, [sp, #0x48]
  00030	e59d6044	 ldr         r6, [sp, #0x44]
  00034	e59d7040	 ldr         r7, [sp, #0x40]
  00038	e59d803c	 ldr         r8, [sp, #0x3C]
  0003c	e1a03009	 mov         r3, r9
  00040	e1a0200a	 mov         r2, r10
  00044	e1a0100b	 mov         r1, r11
  00048	e58de014	 str         lr, [sp, #0x14]
  0004c	e58d4010	 str         r4, [sp, #0x10]
  00050	e58d500c	 str         r5, [sp, #0xC]
  00054	e58d6008	 str         r6, [sp, #8]
  00058	e58d7004	 str         r7, [sp, #4]
  0005c	e58d8000	 str         r8, [sp]
  00060	eb000000	 bl          |??0DeviceFolder@@QAA@PBG0KKKKPAXK0@Z|
  00064	ea000000	 b           |$LN4@CreateFunc|
  00068		 |$LN3@CreateFunc|
  00068	e3a00000	 mov         r0, #0
  0006c		 |$LN4@CreateFunc|

; 175  :     }

  0006c	e28dd018	 add         sp, sp, #0x18
  00070	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00074	e12fff1e	 bx          lr
  00078		 |$M40566|

			 ENDP  ; |?CreateFunctionDeviceFolder@USBOTG@@UAAPAVDeviceFolder@@PBG0KKKKPAXK0@Z|, USBOTG::CreateFunctionDeviceFolder


  00000			 AREA	 |.pdata|, PDATA
|$T40584| DCD	|$LN7@CreateHost|
	DCD	0x40001e02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CreateHostDeviceFolder@USBOTG@@UAAPAVDeviceFolder@@PBG0KKKKPAXK0@Z| PROC ; USBOTG::CreateHostDeviceFolder

; 176  :     virtual DeviceFolder * CreateHostDeviceFolder(LPCTSTR lpBusName,LPCTSTR lpTemplateRegPath,DWORD dwBusType, DWORD BusNumber,DWORD DeviceNumber,DWORD FunctionNumber,HANDLE hParent,DWORD dwMaxInitReg=MAX_INIT_REG,LPCTSTR lpDeviceBusName = NULL) {

  00000		 |$LN7@CreateHost|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd018	 sub         sp, sp, #0x18
  00008		 |$M40581|
  00008	e1a09003	 mov         r9, r3
  0000c	e1a0a002	 mov         r10, r2
  00010	e1a0b001	 mov         r11, r1

; 177  :         return new DeviceFolder(lpBusName,lpTemplateRegPath,dwBusType,BusNumber,DeviceNumber,FunctionNumber,hParent,dwMaxInitReg,lpDeviceBusName);

  00014	e3a00060	 mov         r0, #0x60
  00018	eb000000	 bl          |??2@YAPAXI@Z|
  0001c	e3500000	 cmp         r0, #0
  00020	0a000010	 beq         |$LN3@CreateHost|
  00024	e59de050	 ldr         lr, [sp, #0x50]
  00028	e59d404c	 ldr         r4, [sp, #0x4C]
  0002c	e59d5048	 ldr         r5, [sp, #0x48]
  00030	e59d6044	 ldr         r6, [sp, #0x44]
  00034	e59d7040	 ldr         r7, [sp, #0x40]
  00038	e59d803c	 ldr         r8, [sp, #0x3C]
  0003c	e1a03009	 mov         r3, r9
  00040	e1a0200a	 mov         r2, r10
  00044	e1a0100b	 mov         r1, r11
  00048	e58de014	 str         lr, [sp, #0x14]
  0004c	e58d4010	 str         r4, [sp, #0x10]
  00050	e58d500c	 str         r5, [sp, #0xC]
  00054	e58d6008	 str         r6, [sp, #8]
  00058	e58d7004	 str         r7, [sp, #4]
  0005c	e58d8000	 str         r8, [sp]
  00060	eb000000	 bl          |??0DeviceFolder@@QAA@PBG0KKKKPAXK0@Z|
  00064	ea000000	 b           |$LN4@CreateHost|
  00068		 |$LN3@CreateHost|
  00068	e3a00000	 mov         r0, #0
  0006c		 |$LN4@CreateHost|

; 178  :     }

  0006c	e28dd018	 add         sp, sp, #0x18
  00070	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00074	e12fff1e	 bx          lr
  00078		 |$M40582|

			 ENDP  ; |?CreateHostDeviceFolder@USBOTG@@UAAPAVDeviceFolder@@PBG0KKKKPAXK0@Z|, USBOTG::CreateHostDeviceFolder


  00000			 AREA	 |.pdata|, PDATA
|$T40593| DCD	|$LN5@Open|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Open@USBOTG@@UAAHKK@Z| PROC		; USBOTG::Open

; 185  :     virtual BOOL  Open( DWORD   AccessCode,   DWORD   Share) { return TRUE; };

  00000		 |$LN5@Open|
  00000		 |$M40590|
  00000	e3a00001	 mov         r0, #1
  00004	e12fff1e	 bx          lr
  00008		 |$M40591|

			 ENDP  ; |?Open@USBOTG@@UAAHKK@Z|, USBOTG::Open


  00000			 AREA	 |.pdata|, PDATA
|$T40603| DCD	|$LN5@GetOtgACon|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetOtgAConnectEvent@USBOTG@@UAAPAXXZ| PROC ; USBOTG::GetOtgAConnectEvent

; 208  :     virtual HANDLE GetOtgAConnectEvent() { return m_hAConnectEvent; };

  00000		 |$LN5@GetOtgACon|
  00000		 |$M40600|
  00000	e590009c	 ldr         r0, [r0, #0x9C]
  00004	e12fff1e	 bx          lr
  00008		 |$M40601|

			 ENDP  ; |?GetOtgAConnectEvent@USBOTG@@UAAPAXXZ|, USBOTG::GetOtgAConnectEvent


  00000			 AREA	 |.pdata|, PDATA
|$T40612| DCD	|$LN5@SetChildDe|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetChildDevicePowerState@USBOTG@@UAAHPAU_CE_BUS_POWER_STATE@@@Z| PROC ; USBOTG::SetChildDevicePowerState

; 210  :     virtual BOOL SetChildDevicePowerState(PCE_BUS_POWER_STATE ) { return FALSE; };

  00000		 |$LN5@SetChildDe|
  00000		 |$M40609|
  00000	e3a00000	 mov         r0, #0
  00004	e12fff1e	 bx          lr
  00008		 |$M40610|

			 ENDP  ; |?SetChildDevicePowerState@USBOTG@@UAAHPAU_CE_BUS_POWER_STATE@@@Z|, USBOTG::SetChildDevicePowerState


  00000			 AREA	 |.pdata|, PDATA
|$T40621| DCD	|$LN5@GetChildDe|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetChildDevicePowerState@USBOTG@@UAAHPAU_CE_BUS_POWER_STATE@@@Z| PROC ; USBOTG::GetChildDevicePowerState

; 211  :     virtual BOOL GetChildDevicePowerState(PCE_BUS_POWER_STATE) { return FALSE; };

  00000		 |$LN5@GetChildDe|
  00000		 |$M40618|
  00000	e3a00000	 mov         r0, #0
  00004	e12fff1e	 bx          lr
  00008		 |$M40619|

			 ENDP  ; |?GetChildDevicePowerState@USBOTG@@UAAHPAU_CE_BUS_POWER_STATE@@@Z|, USBOTG::GetChildDevicePowerState

	IMPORT	|memcpy|

  00000			 AREA	 |.pdata|, PDATA
|$T40633| DCD	|$LN5@GetPowerCa|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPowerCapabilities@USBOTG@@UAA?AU_POWER_CAPABILITIES@@XZ| PROC ; USBOTG::GetPowerCapabilities

; 215  :     virtual POWER_CAPABILITIES GetPowerCapabilities() { return m_PowerCapabilities; };

  00000		 |$LN5@GetPowerCa|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M40630|
  00004	e1a04001	 mov         r4, r1
  00008	e28010a0	 add         r1, r0, #0xA0
  0000c	e1a00004	 mov         r0, r4
  00010	e3a02030	 mov         r2, #0x30
  00014	eb000000	 bl          memcpy
  00018	e1a00004	 mov         r0, r4
  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$M40631|

			 ENDP  ; |?GetPowerCapabilities@USBOTG@@UAA?AU_POWER_CAPABILITIES@@XZ|, USBOTG::GetPowerCapabilities

; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbotg\usbotgpdd.h

  00000			 AREA	 |.pdata|, PDATA
|$T40642| DCD	|$LN5@DischargVB|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DischargVBus@CAM35xOTG@@UAAHXZ| PROC	; CAM35xOTG::DischargVBus

; 32   :     BOOL    DischargVBus()  { return TRUE; };

  00000		 |$LN5@DischargVB|
  00000		 |$M40639|
  00000	e3a00001	 mov         r0, #1
  00004	e12fff1e	 bx          lr
  00008		 |$M40640|

			 ENDP  ; |?DischargVBus@CAM35xOTG@@UAAHXZ|, CAM35xOTG::DischargVBus


  00000			 AREA	 |.pdata|, PDATA
|$T40652| DCD	|$LN5@UsbOtgConf|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UsbOtgConfigure@CAM35xOTG@@UAA?AW4USBOTG_MODE@@W42@@Z| PROC ; CAM35xOTG::UsbOtgConfigure

; 37   :     USBOTG_MODE UsbOtgConfigure(USBOTG_MODE usbOtgMode ) { return usbOtgMode; };

  00000		 |$LN5@UsbOtgConf|
  00000		 |$M40649|
  00000	e1a00001	 mov         r0, r1
  00004	e12fff1e	 bx          lr
  00008		 |$M40650|

			 ENDP  ; |?UsbOtgConfigure@CAM35xOTG@@UAA?AW4USBOTG_MODE@@W42@@Z|, CAM35xOTG::UsbOtgConfigure

	IMPORT	|?PostInit@USBOTG@@UAAHXZ|		; USBOTG::PostInit
; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbotg\usbotgpdd.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T40662| DCD	|$LN5@PostInit|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PostInit@CAM35xOTG@@UAAHXZ| PROC	; CAM35xOTG::PostInit

; 205  : {

  00000		 |$LN5@PostInit|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M40659|
  00004	e1a02000	 mov         r2, r0

; 206  :     BOOL rc = FALSE;
; 207  :     DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("+CAM35xOTG::PostInit()\r\n")));
; 208  : 
; 209  :     // Default setting to be client mode
; 210  :     m_UsbOtgState = USBOTG_b_idle;
; 211  :     m_UsbOtgInput.bit.id = 1;

  00008	e592304c	 ldr         r3, [r2, #0x4C]
  0000c	e3a01009	 mov         r1, #9

; 212  :     rc = USBOTG::PostInit();

  00010	e5821070	 str         r1, [r2, #0x70]
  00014	e3833902	 orr         r3, r3, #2, 18
  00018	e582304c	 str         r3, [r2, #0x4C]
  0001c	eb000000	 bl          |?PostInit@USBOTG@@UAAHXZ|

; 213  : 
; 214  :     DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("-CAM35xOTG::PostInit(%d)\r\n"), rc));
; 215  :     return rc;
; 216  : }

  00020	e49de004	 ldr         lr, [sp], #4
  00024	e12fff1e	 bx          lr
  00028		 |$M40660|

			 ENDP  ; |?PostInit@CAM35xOTG@@UAAHXZ|, CAM35xOTG::PostInit

	EXPORT	|??1CAM35xOTG@@UAA@XZ|			; CAM35xOTG::~CAM35xOTG
	IMPORT	|??1USBOTG@@UAA@XZ|			; USBOTG::~USBOTG
	IMPORT	|MmUnmapIoSpace|
	IMPORT	|CloseHandle|
	IMPORT	|TerminateThread|
	IMPORT	|WaitForSingleObject|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T40674| DCD	|$LN10@CAM35xOTG@2|
	DCD	0x40002401
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbotg\usbotgpdd.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CAM35xOTG@@UAA@XZ| PROC		; CAM35xOTG::~CAM35xOTG

; 219  : {

  00000		 |$LN10@CAM35xOTG@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M40671|
  00004	e1a04000	 mov         r4, r0
  00008	e59f307c	 ldr         r3, [pc, #0x7C]

; 220  :     DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("+CAM35xOTG::~CAM35xOTG()\r\n")));
; 221  : 
; 222  :     // Terminate polling thread
; 223  :     SetEvent(m_hPollThreadExitEvent);

  0000c	e59400f0	 ldr         r0, [r4, #0xF0]
  00010	e3a01003	 mov         r1, #3
  00014	e5843000	 str         r3, [r4]
  00018	eb000000	 bl          EventModify

; 224  :     if(WaitForSingleObject(m_hPollThread, m_PollTimeout) == WAIT_TIMEOUT)

  0001c	e59410f4	 ldr         r1, [r4, #0xF4]
  00020	e59400e4	 ldr         r0, [r4, #0xE4]
  00024	eb000000	 bl          WaitForSingleObject
  00028	e3a03c01	 mov         r3, #1, 24
  0002c	e3833002	 orr         r3, r3, #2
  00030	e1500003	 cmp         r0, r3

; 225  :     {
; 226  :         // force thread termination
; 227  :         DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("CAM35xOTG::~CAM35xOTG(): terminating poll thread...\r\n")));
; 228  : #pragma warning(push)
; 229  : #pragma warning(disable: 6258)
; 230  :         TerminateThread(m_hPollThread, 0);

  00034	059400e4	 ldreq       r0, [r4, #0xE4]
  00038	03a01000	 moveq       r1, #0
  0003c	0b000000	 bleq        TerminateThread

; 231  : #pragma warning(push)
; 232  :     }
; 233  : 
; 234  :     // Clean up event handle
; 235  :     CloseHandle(m_hPollThreadExitEvent);

  00040	e59400f0	 ldr         r0, [r4, #0xF0]
  00044	eb000000	 bl          CloseHandle

; 236  :     CloseHandle(m_hPollThread);

  00048	e59400e4	 ldr         r0, [r4, #0xE4]
  0004c	eb000000	 bl          CloseHandle

; 237  : 
; 238  :     // Deallocate hardware register pointers
; 239  :     if (m_pUsbRegs)

  00050	e59430ec	 ldr         r3, [r4, #0xEC]
  00054	e3530000	 cmp         r3, #0
  00058	13a02b02	 movne       r2, #2, 22

; 240  :         MmUnmapIoSpace(m_pUsbRegs, sizeof(CSL_UsbRegs));

  0005c	13821018	 orrne       r1, r2, #0x18
  00060	11a00003	 movne       r0, r3
  00064	1b000000	 blne        MmUnmapIoSpace

; 241  :     if (m_pSysConfRegs)

  00068	e59430e8	 ldr         r3, [r4, #0xE8]
  0006c	e3530000	 cmp         r3, #0

; 242  :         MmUnmapIoSpace(m_pSysConfRegs, sizeof(OMAP_SYSC_GENERAL_REGS));

  00070	13a01ea6	 movne       r1, #0xA6, 28
  00074	11a00003	 movne       r0, r3
  00078	1b000000	 blne        MmUnmapIoSpace

; 243  : 
; 244  :     DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("-CAM35xOTG::~CAM35xOTG()\r\n")));
; 245  : }

  0007c	e1a00004	 mov         r0, r4
  00080	eb000000	 bl          |??1USBOTG@@UAA@XZ|
  00084	e8bd4010	 ldmia       sp!, {r4, lr}
  00088	e12fff1e	 bx          lr
  0008c		 |$LN11@CAM35xOTG@2|
  0008c		 |$LN12@CAM35xOTG@2|
  0008c	00000000	 DCD         |??_7CAM35xOTG@@6B@|
  00090		 |$M40672|

			 ENDP  ; |??1CAM35xOTG@@UAA@XZ|, CAM35xOTG::~CAM35xOTG


  00000			 AREA	 |.pdata|, PDATA
|$T40685| DCD	|$LN5@PowerUp|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PowerUp@CAM35xOTG@@UAAHXZ| PROC	; CAM35xOTG::PowerUp

; 248  : {

  00000		 |$LN5@PowerUp|
  00000		 |$M40682|

; 249  :     DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("+CAM35xOTG::PowerUp()\r\n")));
; 250  : 
; 251  : 	DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("-CAM35xOTG::PowerUp()\r\n")));
; 252  :     return TRUE;

  00000	e3a00001	 mov         r0, #1

; 253  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M40683|

			 ENDP  ; |?PowerUp@CAM35xOTG@@UAAHXZ|, CAM35xOTG::PowerUp


  00000			 AREA	 |.pdata|, PDATA
|$T40694| DCD	|$LN5@PowerDown|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PowerDown@CAM35xOTG@@UAAHXZ| PROC	; CAM35xOTG::PowerDown

; 256  : {

  00000		 |$LN5@PowerDown|
  00000		 |$M40691|

; 257  :     DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("+CAM35xOTG::PowerDown()\r\n")));
; 258  : 	
; 259  : 	DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("-CAM35xOTG::PowerDown()\r\n")));
; 260  :     return TRUE;

  00000	e3a00001	 mov         r0, #1

; 261  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M40692|

			 ENDP  ; |?PowerDown@CAM35xOTG@@UAAHXZ|, CAM35xOTG::PowerDown

	IMPORT	|SetLastError|
	IMPORT	|?IOControl@USBOTG@@UAAHKPAEK0KPAK@Z|	; USBOTG::IOControl
; File c:\wince600\public\common\oak\inc\defbus.h

  00000			 AREA	 |.pdata|, PDATA
|$T40718| DCD	|$LN25@IOControl@2|
	DCD	0x40005b02
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbotg\usbotgpdd.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IOControl@CAM35xOTG@@UAAHKPAEK0KPAK@Z| PROC ; CAM35xOTG::IOControl

; 402  : {

  00000		 |$LN25@IOControl@2|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004	e24dd018	 sub         sp, sp, #0x18
  00008		 |$M40715|
  00008	e1a08000	 mov         r8, r0

; 403  :     BOOL bReturn = FALSE;
; 404  : 
; 405  :     DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("+CAM35xOTG::IoControl(%d)\r\n"), dwCode));
; 406  : 
; 407  :     switch (dwCode) 

  0000c	e3a0082a	 mov         r0, #0x2A, 16
  00010	e380e010	 orr         lr, r0, #0x10
  00014	e151000e	 cmp         r1, lr
  00018	0a000031	 beq         |$LN5@IOControl@2|
  0001c	e59fe144	 ldr         lr, [pc, #0x144]
  00020	e151000e	 cmp         r1, lr
  00024	0a000020	 beq         |$LN10@IOControl@2|
  00028	e59fe134	 ldr         lr, [pc, #0x134]
  0002c	e151000e	 cmp         r1, lr
  00030	0a000008	 beq         |$LN15@IOControl@2|

; 460  : 			}
; 461  : 
; 462  : 			break;
; 463  :         default:    
; 464  :             bReturn = USBOTG::IOControl(dwCode,pBufIn,dwLenIn,pBufOut,dwLenOut,pdwActualOut);

  00034	e59de040	 ldr         lr, [sp, #0x40]
  00038	e59d403c	 ldr         r4, [sp, #0x3C]
  0003c	e59d5038	 ldr         r5, [sp, #0x38]
  00040	e1a00008	 mov         r0, r8
  00044	e58de008	 str         lr, [sp, #8]
  00048	e58d4004	 str         r4, [sp, #4]
  0004c	e58d5000	 str         r5, [sp]
  00050	eb000000	 bl          |?IOControl@USBOTG@@UAAHKPAEK0KPAK@Z|

; 465  :             break;

  00054	ea00003f	 b           |$LN2@IOControl@2|
  00058		 |$LN15@IOControl@2|

; 408  :     {
; 409  :         // Reimplemented IOCTL_POWER_SET in PDD layer, as the code
; 410  :         // in the MDD has a bug (it always returns FALSE!)
; 411  :         case IOCTL_POWER_SET:
; 412  :             DEBUGMSG(ZONE_OTG_STATE,(TEXT("CAM35xOTG::IOControl: IOCTL_POWER_SET\r\n")));
; 413  :             if (!pBufOut || dwLenOut < sizeof(CEDEVICE_POWER_STATE)) {

  00058	e59d2038	 ldr         r2, [sp, #0x38]
  0005c	e3520000	 cmp         r2, #0
  00060	0a000039	 beq         |$LN3@IOControl@2|
  00064	e59d303c	 ldr         r3, [sp, #0x3C]
  00068	e3530004	 cmp         r3, #4
  0006c	3a000036	 bcc         |$LN3@IOControl@2|

; 414  :                 SetLastError(ERROR_INVALID_PARAMETER);
; 415  :                 bReturn = FALSE;
; 416  :             } else {
; 417  :                 m_RequestedPowerState = *(PCEDEVICE_POWER_STATE) pBufOut;
; 418  :                 m_IsThisPowerManaged = TRUE;
; 419  :                 DEBUGMSG(ZONE_OTG_STATE, (TEXT("CAM35xOTG::IOControl:IOCTL_POWER_SET: D%d\r\n"), m_RequestedPowerState));
; 420  :                 bReturn = UpdatePowerState();

  00070	e5983000	 ldr         r3, [r8]
  00074	e5922000	 ldr         r2, [r2]
  00078	e3a01001	 mov         r1, #1
  0007c	e59330bc	 ldr         r3, [r3, #0xBC]
  00080	e58820d0	 str         r2, [r8, #0xD0]
  00084	e1a00008	 mov         r0, r8
  00088	e58810d4	 str         r1, [r8, #0xD4]
  0008c	e1a0e00f	 mov         lr, pc
  00090	e12fff13	 bx          r3

; 421  :                 // did we set the device power?
; 422  :                 if (pdwActualOut) {

  00094	e59d3040	 ldr         r3, [sp, #0x40]
  00098	e3530000	 cmp         r3, #0
  0009c	0a00002d	 beq         |$LN2@IOControl@2|

; 423  :                     *pdwActualOut = sizeof(CEDEVICE_POWER_STATE);

  000a0	e3a02004	 mov         r2, #4
  000a4	e5832000	 str         r2, [r3]

; 424  :                 }
; 425  :             }
; 426  :             break;

  000a8	ea00002a	 b           |$LN2@IOControl@2|
  000ac		 |$LN10@IOControl@2|

; 427  :         // Implemented IOCTL_POWER_GET in PDD layer, as the MDD
; 428  :         // layer does not implement this IOCTL
; 429  :         case IOCTL_POWER_GET: // gets the current device power state
; 430  :             DEBUGMSG(ZONE_OTG_STATE,(TEXT("CAM35xOTG::IOControl: IOCTL_POWER_GET\r\n")));
; 431  :             if (!pBufOut || dwLenOut < sizeof(CEDEVICE_POWER_STATE)) {

  000ac	e59d1038	 ldr         r1, [sp, #0x38]
  000b0	e3510000	 cmp         r1, #0
  000b4	0a000024	 beq         |$LN3@IOControl@2|
  000b8	e59d303c	 ldr         r3, [sp, #0x3C]
  000bc	e3530004	 cmp         r3, #4
  000c0	3a000021	 bcc         |$LN3@IOControl@2|

; 432  :                 SetLastError(ERROR_INVALID_PARAMETER);
; 433  :                 bReturn = FALSE;
; 434  :             } else {
; 435  :                 *(PCEDEVICE_POWER_STATE) pBufOut = m_RequestedPowerState;
; 436  :                 if (pdwActualOut) {

  000c4	e59d2040	 ldr         r2, [sp, #0x40]
  000c8	e59830d0	 ldr         r3, [r8, #0xD0]

; 437  :                     *pdwActualOut = sizeof(CEDEVICE_POWER_STATE);
; 438  :                 }                
; 439  :                 bReturn = TRUE;

  000cc	e3a00001	 mov         r0, #1
  000d0	e3520000	 cmp         r2, #0
  000d4	e5813000	 str         r3, [r1]
  000d8	13a03004	 movne       r3, #4
  000dc	15823000	 strne       r3, [r2]

; 440  :             }
; 441  :             break;

  000e0	ea00001c	 b           |$LN2@IOControl@2|
  000e4		 |$LN5@IOControl@2|

; 442  :         // Implemented IOCTL_BUS_SET_POWER_STATE in PDD layer, as the MDD
; 443  :         // layer uses default bus driver with wrong parameters
; 444  : 		case IOCTL_BUS_SET_POWER_STATE:
; 445  : 			DEBUGMSG(ZONE_OTG_STATE,(TEXT("CAM35xOTG::IOControl: IOCTL_BUS_SET_POWER_STATE\r\n")));
; 446  :             if ((pBufIn == NULL) || (dwLenIn < sizeof(CE_BUS_POWER_STATE))) {

  000e4	e3520000	 cmp         r2, #0
  000e8	0a000017	 beq         |$LN3@IOControl@2|
  000ec	e353000c	 cmp         r3, #0xC
  000f0	3a000015	 bcc         |$LN3@IOControl@2|

; 449  : 			} else {
; 450  : 				CE_BUS_POWER_STATE* state = (CE_BUS_POWER_STATE *)pBufIn;
; 451  : 				CEDDK_BUS_POWER_STATE ceddkPowerState;
; 452  : 
; 453  : 				ceddkPowerState.DevicePowerState = *(state->lpceDevicePowerState);

  000f4	e5923004	 ldr         r3, [r2, #4]

; 454  : 				ceddkPowerState.lpReserved = state->lpReserved;
; 455  : 
; 456  : 				bReturn = DefaultBusDriver::IOControl(IOCTL_BUS_SET_POWER_STATE, 
; 457  : 											(PBYTE)state->lpDeviceBusName, sizeof(state->lpDeviceBusName), 
; 458  : 											(PBYTE)&ceddkPowerState, sizeof(CEDDK_BUS_POWER_STATE),
; 459  : 											pdwActualOut) ;

  000f8	e5980000	 ldr         r0, [r8]
  000fc	e5925008	 ldr         r5, [r2, #8]
  00100	e5933000	 ldr         r3, [r3]
  00104	e59d6040	 ldr         r6, [sp, #0x40]
  00108	e5907058	 ldr         r7, [r0, #0x58]
  0010c	e5922000	 ldr         r2, [r2]
  00110	e3a09000	 mov         r9, #0
  00114	e3a0a008	 mov         r10, #8
  00118	e28d4010	 add         r4, sp, #0x10
  0011c	e58d3010	 str         r3, [sp, #0x10]
  00120	e3a03004	 mov         r3, #4
  00124	e1a0100e	 mov         r1, lr
  00128	e1a00008	 mov         r0, r8
  0012c	e58d5014	 str         r5, [sp, #0x14]
  00130	e58d900c	 str         r9, [sp, #0xC]
  00134	e58d6008	 str         r6, [sp, #8]
  00138	e58da004	 str         r10, [sp, #4]
  0013c	e58d4000	 str         r4, [sp]
  00140	e1a0e00f	 mov         lr, pc
  00144	e12fff17	 bx          r7
  00148	ea000002	 b           |$LN2@IOControl@2|
  0014c		 |$LN3@IOControl@2|

; 447  :                 SetLastError(ERROR_INVALID_PARAMETER);

  0014c	e3a00057	 mov         r0, #0x57
  00150	eb000000	 bl          SetLastError

; 448  :                 bReturn = FALSE;

  00154	e3a00000	 mov         r0, #0
  00158		 |$LN2@IOControl@2|

; 466  :     }
; 467  : 
; 468  :     DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("-CAM35xOTG::IoControl(%d)\r\n"), bReturn));
; 469  :     return bReturn;
; 470  : }

  00158	e28dd018	 add         sp, sp, #0x18
  0015c	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  00160	e12fff1e	 bx          lr
  00164		 |$LN26@IOControl@2|
  00164		 |$LN27@IOControl@2|
  00164	00321008	 DCD         0x321008
  00168		 |$LN28@IOControl@2|
  00168	00321004	 DCD         0x321004
  0016c		 |$M40716|

			 ENDP  ; |?IOControl@CAM35xOTG@@UAAHKPAEK0KPAK@Z|, CAM35xOTG::IOControl


  00000			 AREA	 |.pdata|, PDATA
|$T40734| DCD	|$LN9@SessionReq|
	DCD	0x40000800
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SessionRequest@CAM35xOTG@@UAAHHH@Z| PROC ; CAM35xOTG::SessionRequest

; 474  : {

  00000		 |$LN9@SessionReq|
  00000		 |$M40731|
  00000	e3510000	 cmp         r1, #0

; 475  :     DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("+CAM35xOTG::SessionRequest(%d,%d)\r\n"), fPulseLocConn, fPulseChrgVBus));
; 476  : 
; 477  :     if (fPulseLocConn || fPulseChrgVBus)
; 478  :     {
; 479  :         // Set session bit
; 480  :         m_pUsbRegs->DEVCTL = BIT0;

  00004	e59030ec	 ldr         r3, [r0, #0xEC]
  00008	03520000	 cmpeq       r2, #0

; 481  :     }
; 482  :     else
; 483  :     {
; 484  :         // Clear session bit
; 485  :         m_pUsbRegs->DEVCTL = 0;

  0000c	03a02000	 moveq       r2, #0
  00010	13a02001	 movne       r2, #1
  00014	e5c32460	 strb        r2, [r3, #0x460]

; 486  :     }
; 487  : 
; 488  :     DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("-CAM35xOTG::SessionRequest()\r\n")));
; 489  :     return TRUE;

  00018	e3a00001	 mov         r0, #1

; 490  : }

  0001c	e12fff1e	 bx          lr
  00020		 |$M40732|

			 ENDP  ; |?SessionRequest@CAM35xOTG@@UAAHHH@Z|, CAM35xOTG::SessionRequest


  00000			 AREA	 |.pdata|, PDATA
|$T40743| DCD	|$LN5@IsSE0|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsSE0@CAM35xOTG@@UAAHXZ| PROC	; CAM35xOTG::IsSE0

; 534  : {

  00000		 |$LN5@IsSE0|
  00000		 |$M40740|

; 535  :     DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("+CAM35xOTG::IsSE0()\r\n")));
; 536  :     DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("-CAM35xOTG::IsSE0()\r\n")));
; 537  :     return FALSE;

  00000	e3a00000	 mov         r0, #0

; 538  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M40741|

			 ENDP  ; |?IsSE0@CAM35xOTG@@UAAHXZ|, CAM35xOTG::IsSE0


  00000			 AREA	 |.pdata|, PDATA
|$T40755| DCD	|$LN19@UpdateInpu|
	DCD	0x40002e01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UpdateInput@CAM35xOTG@@UAAHXZ| PROC	; CAM35xOTG::UpdateInput

; 541  : {

  00000		 |$LN19@UpdateInpu|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M40752|
  00004	e1a04000	 mov         r4, r0

; 542  :     UINT8 devctl = 0;
; 543  :     UINT8 vbus = 0;
; 544  :     UINT32 cfgchip2 = 0;
; 545  :     UINT32 statr = 0;
; 546  : 
; 547  :     DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("+CAM35xOTG::UpdateInput()\r\n")));
; 548  : 
; 549  :     // read USB controller registers
; 550  :     devctl = m_pUsbRegs->DEVCTL;

  00008	e59460ec	 ldr         r6, [r4, #0xEC]

; 551  : 	cfgchip2 = m_pSysConfRegs->CONTROL_DEVCONF2;

  0000c	e59430e8	 ldr         r3, [r4, #0xE8]

; 552  :     statr = m_pUsbRegs->STATR;
; 553  :     DEBUGMSG(ZONE_OTG_FUNCTION,
; 554  :         (TEXT("DEVCTL 0x%x, CFGCHIP2 0x%x, STATR 0x%x\r\n"), devctl, cfgchip2, statr));
; 555  : 
; 556  :     // fix some bits of MDD input to ensure
; 557  :     // correct movement about the state machine
; 558  :     m_UsbOtgInput.bit.a_bus_drop = 0;
; 559  :     m_UsbOtgInput.bit.a_bus_req = 1;

  00010	e594e04c	 ldr         lr, [r4, #0x4C]
  00014	e5d65460	 ldrb        r5, [r6, #0x460]
  00018	e5931310	 ldr         r1, [r3, #0x310]
  0001c	e3ce3003	 bic         r3, lr, #3
  00020	e5962008	 ldr         r2, [r6, #8]
  00024	e3833002	 orr         r3, r3, #2
  00028	e584304c	 str         r3, [r4, #0x4C]

; 560  : 
; 561  :     // check to see if a session is active
; 562  :     if(devctl & CSL_USB_DEVCTL_SESSION_MASK)

  0002c	e3150001	 tst         r5, #1
  00030	0a00000d	 beq         |$LN13@UpdateInpu|

; 563  :     {
; 564  :         // Session valid
; 565  :         DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("    Session Valid\r\n")));
; 566  : 
; 567  :         // Determine A or B device
; 568  :         if((devctl & CSL_USB_DEVCTL_BDEVICE_MASK) == 0)

  00034	e3150080	 tst         r5, #0x80
  00038	1a000008	 bne         |$LN12@UpdateInpu|

; 569  :         {
; 570  :             // 'A' device
; 571  :             DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("    'A' device\r\n")));
; 572  :             m_UsbOtgInput.bit.id = 0;

  0003c	e3c33902	 bic         r3, r3, #2, 18

; 573  : 
; 574  :             if((devctl & CSL_USB_DEVCTL_HOSTMODE_MASK) == 0)

  00040	e3150004	 tst         r5, #4
  00044	e584304c	 str         r3, [r4, #0x4C]

; 575  :             {
; 576  :                 // The controller has dropped host mode, 
; 577  :                 // so no device is attached
; 578  :                 m_UsbOtgInput.bit.b_conn = 0;

  00048	03c33b02	 biceq       r3, r3, #2, 22

; 579  :                 DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("    host mode OFF\r\n")));
; 580  :            }
; 581  :             else
; 582  :             {
; 583  :                 // Operating as host, B device connected
; 584  :                 m_UsbOtgInput.bit.b_conn = 1;
; 585  :                 DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("    host mode ON\r\n")));
; 586  :             }
; 587  :         }
; 588  :         else
; 589  :         {
; 590  :             // 'B' device
; 591  :             DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("    'B' device\r\n")));
; 592  :             m_UsbOtgInput.bit.id = 1;

  0004c	0584304c	 streq       r3, [r4, #0x4C]
  00050	0a00000a	 beq         |$LN8@UpdateInpu|
  00054	e3833b02	 orr         r3, r3, #2, 22
  00058	e584304c	 str         r3, [r4, #0x4C]

; 593  :         }
; 594  :     }
; 595  :     else

  0005c	ea000007	 b           |$LN8@UpdateInpu|
  00060		 |$LN12@UpdateInpu|

; 579  :                 DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("    host mode OFF\r\n")));
; 580  :            }
; 581  :             else
; 582  :             {
; 583  :                 // Operating as host, B device connected
; 584  :                 m_UsbOtgInput.bit.b_conn = 1;
; 585  :                 DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("    host mode ON\r\n")));
; 586  :             }
; 587  :         }
; 588  :         else
; 589  :         {
; 590  :             // 'B' device
; 591  :             DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("    'B' device\r\n")));
; 592  :             m_UsbOtgInput.bit.id = 1;

  00060	e3833902	 orr         r3, r3, #2, 18
  00064	e584304c	 str         r3, [r4, #0x4C]

; 593  :         }
; 594  :     }
; 595  :     else

  00068	ea000004	 b           |$LN8@UpdateInpu|
  0006c		 |$LN13@UpdateInpu|

; 596  :     {
; 597  :         DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("    Session End\r\n")));
; 598  : 
; 599  :         // no session active, set the session bit 
; 600  :         // to identify USB mode
; 601  :         m_pUsbRegs->DEVCTL |= CSL_USB_DEVCTL_SESSION_MASK;

  0006c	e5d63460	 ldrb        r3, [r6, #0x460]

; 602  :         Sleep(100);

  00070	e3a00064	 mov         r0, #0x64
  00074	e3833001	 orr         r3, r3, #1
  00078	e5c63460	 strb        r3, [r6, #0x460]
  0007c	eb000000	 bl          Sleep
  00080		 |$LN8@UpdateInpu|

; 603  :     }
; 604  : 
; 605  :     // Vbus
; 606  :     m_UsbOtgInput.bit.a_vbus_vld = 0;
; 607  :     m_UsbOtgInput.bit.b_sess_vld = 0;

  00080	e594204c	 ldr         r2, [r4, #0x4C]
  00084	e3e03901	 mvn         r3, #1, 18
  00088	e2233080	 eor         r3, r3, #0x80
  0008c	e0022003	 and         r2, r2, r3

; 608  :     vbus = (devctl & CSL_USB_DEVCTL_VBUS_MASK) >> CSL_USB_DEVCTL_VBUS_SHIFT;
; 609  :     switch(vbus)

  00090	e2053018	 and         r3, r5, #0x18
  00094	e3530018	 cmp         r3, #0x18
  00098	03a03901	 moveq       r3, #1, 18

; 610  :     {
; 611  :     case 0:
; 612  :         DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("    VBus: Below Session End\r\n")));
; 613  :         break;
; 614  :     case 1:
; 615  :         DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("    VBus: Above Session End, below AValid\r\n")));
; 616  :         break;
; 617  :     case 2:
; 618  :         DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("    VBus: Above AValid, below VBusValid\r\n")));
; 619  :         break;
; 620  :     case 3:
; 621  :         DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("    VBus: Above VBusValid\r\n")));
; 622  :         // The bus voltage is good. 
; 623  :         // In 'A' mode, this means the host is driving the bus OK (Vbus valid)
; 624  :         // In 'B' mode, this means a connected device is driving the bus OK. 
; 625  :         m_UsbOtgInput.bit.a_vbus_vld = 1;
; 626  :         m_UsbOtgInput.bit.b_sess_vld = 1;

  0009c	03833080	 orreq       r3, r3, #0x80
  000a0	01823003	 orreq       r3, r2, r3
  000a4	e584204c	 str         r2, [r4, #0x4C]
  000a8	0584304c	 streq       r3, [r4, #0x4C]

; 627  :         break;
; 628  :     default:
; 629  :         DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("    VBus: ERROR, invalid state (%d)\r\n"), vbus));
; 630  :         break;
; 631  :     }
; 632  : 
; 633  :     DEBUGMSG(ZONE_OTG_FUNCTION, 
; 634  :         (L"CAM35xOTG::UpdateInput:m_UsbOtgInput.ul=%x\r\n",m_UsbOtgInput.ul));
; 635  :     DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("-CAM35xOTG::UpdateInput()\r\n")));
; 636  :     return TRUE;

  000ac	e3a00001	 mov         r0, #1

; 637  : }

  000b0	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000b4	e12fff1e	 bx          lr
  000b8		 |$M40753|

			 ENDP  ; |?UpdateInput@CAM35xOTG@@UAAHXZ|, CAM35xOTG::UpdateInput

	EXPORT	|?PollThread@CAM35xOTG@@KAKPAX@Z|	; CAM35xOTG::PollThread

  00000			 AREA	 |.pdata|, PDATA
|$T40770| DCD	|$LN20@PollThread|
	DCD	0x40001d01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PollThread@CAM35xOTG@@KAKPAX@Z| PROC	; CAM35xOTG::PollThread

; 640  : {

  00000		 |$LN20@PollThread|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M40767|
  00004	e1b04000	 movs        r4, r0

; 641  :     BOOL bTerminate = FALSE;
; 642  :     CAM35xOTG *context = (CAM35xOTG *)data;
; 643  :     DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("+CAM35xOTG::PollThread()\r\n")));
; 644  :        
; 645  :     if(context != NULL)

  00008	0a000016	 beq         |$LN17@PollThread|
  0000c	e3a03c01	 mov         r3, #1, 24
  00010	e3835002	 orr         r5, r3, #2
  00014		 |$LL9@PollThread|

; 646  :     {
; 647  :         while (!bTerminate) 
; 648  :         {
; 649  :             switch (WaitForSingleObject(context->m_hPollThreadExitEvent, context->m_PollTimeout))

  00014	e59410f4	 ldr         r1, [r4, #0xF4]
  00018	e59400f0	 ldr         r0, [r4, #0xF0]
  0001c	eb000000	 bl          WaitForSingleObject
  00020	e3500000	 cmp         r0, #0
  00024	0a00000f	 beq         |$LN17@PollThread|
  00028	e1500005	 cmp         r0, r5
  0002c	1a00000d	 bne         |$LN17@PollThread|

; 650  :             {
; 651  :             case WAIT_OBJECT_0:
; 652  :                 DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("CAM35xOTG::PollThread(): Exit event signalled\r\n")));
; 653  :                 bTerminate = TRUE;
; 654  :                 break;
; 655  :             case WAIT_TIMEOUT:
; 656  :                 DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("CAM35xOTG::PollThread(): Polling...\r\n")));
; 657  :                 // Call MDD to query system state. 
; 658  :                 // (This is turn calls UpdateInput, which 
; 659  :                 // sets the bits of m_UsbOtgInput to expose
; 660  :                 // the USB state)
; 661  :                 if(context->m_bEnablePolling)

  00030	e59430fc	 ldr         r3, [r4, #0xFC]
  00034	e3530000	 cmp         r3, #0
  00038	0afffff5	 beq         |$LL9@PollThread|

; 662  :                 {
; 663  :                     context->UpdateInput();

  0003c	e5943000	 ldr         r3, [r4]
  00040	e1a00004	 mov         r0, r4
  00044	e5933080	 ldr         r3, [r3, #0x80]
  00048	e1a0e00f	 mov         lr, pc
  0004c	e12fff13	 bx          r3

; 664  :                     context->EventNotification();

  00050	e5943000	 ldr         r3, [r4]
  00054	e1a00004	 mov         r0, r4
  00058	e5933074	 ldr         r3, [r3, #0x74]
  0005c	e1a0e00f	 mov         lr, pc
  00060	e12fff13	 bx          r3
  00064	eaffffea	 b           |$LL9@PollThread|
  00068		 |$LN17@PollThread|

; 665  :                 }
; 666  :                 break;
; 667  :             default:
; 668  :                 // error!
; 669  :                 bTerminate = TRUE;
; 670  :                 break;
; 671  :             }
; 672  :         }
; 673  :     }
; 674  :     else
; 675  :         DEBUGMSG(ZONE_OTG_ERROR,(TEXT("CAM35xOTG::PollThread(): ERROR: invalid context parameter\r\n")));
; 676  : 
; 677  :     DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("-CAM35xOTG::PollThread()\r\n")));
; 678  :     return 0;

  00068	e3a00000	 mov         r0, #0

; 679  : }

  0006c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00070	e12fff1e	 bx          lr
  00074		 |$M40768|

			 ENDP  ; |?PollThread@CAM35xOTG@@KAKPAX@Z|, CAM35xOTG::PollThread

	EXPORT	|?HostMode@CAM35xOTG@@IAAXH@Z|		; CAM35xOTG::HostMode
	EXPORT	|??_C@_1EM@OLDPLBGN@?$AAC?$AAA?$AAM?$AA3?$AA5?$AAx?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAH?$AAo?$AAs?$AAt?$AAM?$AAo?$AAd?$AAe?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAh?$AAo?$AAs?$AAt?$AA?5?$AAm@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@JGFCMEBJ@?$AAl?$AAe?$AAa?$AAv?$AAi?$AAn?$AAg?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BC@GIDDIKMK@?$AAe?$AAn?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|NKDbgPrintfW|

  00000			 AREA	 |.pdata|, PDATA
|$T40783| DCD	|$LN10@HostMode|
	DCD	0x40001701

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@OLDPLBGN@?$AAC?$AAA?$AAM?$AA3?$AA5?$AAx?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAH?$AAo?$AAs?$AAt?$AAM?$AAo?$AAd?$AAe?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAh?$AAo?$AAs?$AAt?$AA?5?$AAm@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, "3", 0x0, "5", 0x0, "x", 0x0, "O"
	DCB	0x0, "T", 0x0, "G", 0x0, ":", 0x0, ":", 0x0, "H", 0x0, "o"
	DCB	0x0, "s", 0x0, "t", 0x0, "M", 0x0, "o", 0x0, "d", 0x0, "e"
	DCB	0x0, "(", 0x0, ")", 0x0, ":", 0x0, " ", 0x0, "%", 0x0, "s"
	DCB	0x0, " ", 0x0, "h", 0x0, "o", 0x0, "s", 0x0, "t", 0x0, " "
	DCB	0x0, "m", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@JGFCMEBJ@?$AAl?$AAe?$AAa?$AAv?$AAi?$AAn?$AAg?$AA?$AA@| DCB "l", 0x0
	DCB	"e", 0x0, "a", 0x0, "v", 0x0, "i", 0x0, "n", 0x0, "g", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BC@GIDDIKMK@?$AAe?$AAn?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?$AA@| DCB "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?HostMode@CAM35xOTG@@IAAXH@Z| PROC	; CAM35xOTG::HostMode

; 682  : {

  00000		 |$LN10@HostMode|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M40780|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0

; 683  :     // only need to load/unload if required
; 684  :     // state is different from current one
; 685  :     if(m_bHostMode != start)

  0000c	e5953108	 ldr         r3, [r5, #0x108]
  00010	e1530004	 cmp         r3, r4
  00014	0a00000b	 beq         |$LN1@HostMode|

; 686  :     {
; 687  :         DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("CAM35xOTG::HostMode(): %s host mode\r\n"), start? (L"entering"):(L"leaving")));
; 688  :         RETAILMSG(TRUE,(TEXT("CAM35xOTG::HostMode(): %s host mode\r\n"), start? (L"entering"):(L"leaving")));

  00018	e3540000	 cmp         r4, #0
  0001c	159f1034	 ldrne       r1, [pc, #0x34]
  00020	059f102c	 ldreq       r1, [pc, #0x2C]
  00024	e59f0024	 ldr         r0, [pc, #0x24]
  00028	eb000000	 bl          NKDbgPrintfW

; 689  : 		m_bHostMode = start;
; 690  :         LoadUnloadHCD(start);

  0002c	e5953000	 ldr         r3, [r5]
  00030	e1a01004	 mov         r1, r4
  00034	e1a00005	 mov         r0, r5
  00038	e5933068	 ldr         r3, [r3, #0x68]
  0003c	e5854108	 str         r4, [r5, #0x108]
  00040	e1a0e00f	 mov         lr, pc
  00044	e12fff13	 bx          r3
  00048		 |$LN1@HostMode|

; 691  :     }
; 692  : }

  00048	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$LN11@HostMode|
  00050		 |$LN12@HostMode|
  00050	00000000	 DCD         |??_C@_1EM@OLDPLBGN@?$AAC?$AAA?$AAM?$AA3?$AA5?$AAx?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAH?$AAo?$AAs?$AAt?$AAM?$AAo?$AAd?$AAe?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAh?$AAo?$AAs?$AAt?$AA?5?$AAm@|
  00054		 |$LN13@HostMode|
  00054	00000000	 DCD         |??_C@_1BA@JGFCMEBJ@?$AAl?$AAe?$AAa?$AAv?$AAi?$AAn?$AAg?$AA?$AA@|
  00058		 |$LN14@HostMode|
  00058	00000000	 DCD         |??_C@_1BC@GIDDIKMK@?$AAe?$AAn?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?$AA@|
  0005c		 |$M40781|

			 ENDP  ; |?HostMode@CAM35xOTG@@IAAXH@Z|, CAM35xOTG::HostMode

	EXPORT	|?FunctionMode@CAM35xOTG@@IAAXH@Z|	; CAM35xOTG::FunctionMode
	EXPORT	|??_C@_1FM@IOICPNLH@?$AAC?$AAA?$AAM?$AA3?$AA5?$AAx?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AAM?$AAo?$AAd?$AAe?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAf?$AAu@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T40800| DCD	|$LN11@FunctionMo|
	DCD	0x40001e01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@IOICPNLH@?$AAC?$AAA?$AAM?$AA3?$AA5?$AAx?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AAM?$AAo?$AAd?$AAe?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAf?$AAu@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, "3", 0x0, "5", 0x0, "x", 0x0, "O"
	DCB	0x0, "T", 0x0, "G", 0x0, ":", 0x0, ":", 0x0, "F", 0x0, "u"
	DCB	0x0, "n", 0x0, "c", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, "M", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, "(", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " ", 0x0, "f"
	DCB	0x0, "u", 0x0, "n", 0x0, "c", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, " ", 0x0, "m", 0x0, "o", 0x0, "d", 0x0, "e"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?FunctionMode@CAM35xOTG@@IAAXH@Z| PROC ; CAM35xOTG::FunctionMode

; 695  : {    

  00000		 |$LN11@FunctionMo|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M40797|
  00004	e1a05001	 mov         r5, r1
  00008	e1a04000	 mov         r4, r0

; 696  :     if (m_InFunctionModeFn)

  0000c	e5943104	 ldr         r3, [r4, #0x104]
  00010	e3530000	 cmp         r3, #0
  00014	1a000012	 bne         |$LN3@FunctionMo|

; 697  :     {
; 698  :         DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("CAM35xOTG::FunctionMode() recursion prevented\r\n")));
; 699  :         return;
; 700  :     }
; 701  :     m_InFunctionModeFn = TRUE;
; 702  :     // only need to load/unload if required
; 703  :     // state is different from current one
; 704  :     if(m_bFunctionMode != start)

  00018	e5943100	 ldr         r3, [r4, #0x100]
  0001c	e3a02001	 mov         r2, #1
  00020	e5842104	 str         r2, [r4, #0x104]
  00024	e1530005	 cmp         r3, r5
  00028	0a00000b	 beq         |$LN1@FunctionMo|

; 705  :     {
; 706  :         DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("CAM35xOTG::FunctionMode(): %s function mode\r\n"), start? (L"entering"):(L"leaving")));
; 707  : 		RETAILMSG(TRUE,(TEXT("CAM35xOTG::FunctionMode(): %s function mode\r\n"), start? (L"entering"):(L"leaving")));

  0002c	e3550000	 cmp         r5, #0
  00030	159f103c	 ldrne       r1, [pc, #0x3C]
  00034	059f1034	 ldreq       r1, [pc, #0x34]
  00038	e59f002c	 ldr         r0, [pc, #0x2C]
  0003c	eb000000	 bl          NKDbgPrintfW

; 708  :         m_bFunctionMode = start;
; 709  :         LoadUnloadUSBFN(start);

  00040	e5943000	 ldr         r3, [r4]
  00044	e1a01005	 mov         r1, r5
  00048	e1a00004	 mov         r0, r4
  0004c	e593306c	 ldr         r3, [r3, #0x6C]
  00050	e5845100	 str         r5, [r4, #0x100]
  00054	e1a0e00f	 mov         lr, pc
  00058	e12fff13	 bx          r3
  0005c		 |$LN1@FunctionMo|

; 710  :     }
; 711  : 	m_InFunctionModeFn = FALSE;

  0005c	e3a03000	 mov         r3, #0
  00060	e5843104	 str         r3, [r4, #0x104]
  00064		 |$LN3@FunctionMo|

; 712  : }

  00064	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00068	e12fff1e	 bx          lr
  0006c		 |$LN12@FunctionMo|
  0006c		 |$LN13@FunctionMo|
  0006c	00000000	 DCD         |??_C@_1FM@IOICPNLH@?$AAC?$AAA?$AAM?$AA3?$AA5?$AAx?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AAM?$AAo?$AAd?$AAe?$AA?$CI?$AA?$CJ?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAf?$AAu@|
  00070		 |$LN14@FunctionMo|
  00070	00000000	 DCD         |??_C@_1BA@JGFCMEBJ@?$AAl?$AAe?$AAa?$AAv?$AAi?$AAn?$AAg?$AA?$AA@|
  00074		 |$LN15@FunctionMo|
  00074	00000000	 DCD         |??_C@_1BC@GIDDIKMK@?$AAe?$AAn?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?$AA@|
  00078		 |$M40798|

			 ENDP  ; |?FunctionMode@CAM35xOTG@@IAAXH@Z|, CAM35xOTG::FunctionMode

	EXPORT	|?CreateUSBOTGObject@@YAPAVUSBOTG@@PAG@Z| ; CreateUSBOTGObject

  00000			 AREA	 |.pdata|, PDATA
|$T40818| DCD	|$LN7@CreateUSBO|
	DCD	0x40000d01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CreateUSBOTGObject@@YAPAVUSBOTG@@PAG@Z| PROC ; CreateUSBOTGObject

; 716  : {

  00000		 |$LN7@CreateUSBO|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M40815|
  00004	e1a04000	 mov         r4, r0

; 717  :     return new CAM35xOTG(lpActivePath);

  00008	e3a00f43	 mov         r0, #0x43, 30
  0000c	eb000000	 bl          |??2@YAPAXI@Z|
  00010	e3500000	 cmp         r0, #0
  00014	0a000003	 beq         |$LN3@CreateUSBO|
  00018	e1a01004	 mov         r1, r4
  0001c	eb000000	 bl          |??0CAM35xOTG@@QAA@PBG@Z|

; 718  : }

  00020	e8bd4010	 ldmia       sp!, {r4, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$LN3@CreateUSBO|

; 717  :     return new CAM35xOTG(lpActivePath);

  00028	e3a00000	 mov         r0, #0

; 718  : }

  0002c	e8bd4010	 ldmia       sp!, {r4, lr}
  00030	e12fff1e	 bx          lr
  00034		 |$M40816|

			 ENDP  ; |?CreateUSBOTGObject@@YAPAVUSBOTG@@PAG@Z|, CreateUSBOTGObject

	EXPORT	|?DeleteUSBOTGObject@@YAXPAVUSBOTG@@@Z|	; DeleteUSBOTGObject

  00000			 AREA	 |.pdata|, PDATA
|$T40830| DCD	|$LN8@DeleteUSBO|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DeleteUSBOTGObject@@YAXPAVUSBOTG@@@Z| PROC ; DeleteUSBOTGObject

; 720  : {

  00000		 |$LN8@DeleteUSBO|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M40827|
  00004	e3500000	 cmp         r0, #0

; 721  :     if (pUsbOtg)
; 722  :         delete pUsbOtg;

  00008	15903000	 ldrne       r3, [r0]
  0000c	13a01001	 movne       r1, #1
  00010	15933008	 ldrne       r3, [r3, #8]
  00014	11a0e00f	 movne       lr, pc
  00018	112fff13	 bxne        r3

; 723  : }

  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M40828|

			 ENDP  ; |?DeleteUSBOTGObject@@YAXPAVUSBOTG@@@Z|, DeleteUSBOTGObject

	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$T40841| DCD	|$LN6@scalar|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GCAM35xOTG@@UAAPAXI@Z| PROC	; CAM35xOTG::`scalar deleting destructor'
  00000		 |$LN6@scalar|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M40838|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0
  0000c	eb000000	 bl          |??1CAM35xOTG@@UAA@XZ|
  00010	e3140001	 tst         r4, #1
  00014	11a00005	 movne       r0, r5
  00018	1b000000	 blne        |??3@YAXPAX@Z|
  0001c	e1a00005	 mov         r0, r5
  00020	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M40839|

			 ENDP  ; |??_GCAM35xOTG@@UAAPAXI@Z|, CAM35xOTG::`scalar deleting destructor'

	EXPORT	|??_C@_1BI@JFGLCKEJ@?$AAP?$AAo?$AAl?$AAl?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|CreateThread|
	IMPORT	|?Init@USBOTG@@UAAHXZ|			; USBOTG::Init
	IMPORT	|MmMapIoSpace|
; File c:\wince600\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.pdata|, PDATA
|$T40865| DCD	|$LN20@Init|
	DCD	0x40004102

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@JFGLCKEJ@?$AAP?$AAo?$AAl?$AAl?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "l", 0x0, "l", 0x0, "T", 0x0, "i", 0x0, "m"
	DCB	0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbotg\usbotgpdd.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Init@CAM35xOTG@@UAAHXZ| PROC		; CAM35xOTG::Init

; 142  : {

  00000		 |$LN20@Init|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd010	 sub         sp, sp, #0x10
  00008		 |$M40862|
  00008	e1a05000	 mov         r5, r0
  0000c	e3a03317	 mov         r3, #0x17, 6
  00010	e3a02b02	 mov         r2, #2, 22

; 143  :     PHYSICAL_ADDRESS PA;
; 144  :     BOOL rc = FALSE;
; 145  :     DWORD dwType, dwLength;
; 146  : 
; 147  :     DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("+CAM35xOTG::Init()\r\n")));
; 148  : 
; 149  :     // Map USB registers
; 150  :     PA.QuadPart = AM3517_USB0_REGS_PA;

  00014	e3830701	 orr         r0, r3, #1, 14

; 151  :     m_pUsbRegs = (CSL_UsbRegs *)MmMapIoSpace (PA, sizeof(CSL_UsbRegs), FALSE);

  00018	e3a03000	 mov         r3, #0
  0001c	e3822018	 orr         r2, r2, #0x18
  00020	e3a01000	 mov         r1, #0
  00024	e3a06000	 mov         r6, #0
  00028	eb000000	 bl          MmMapIoSpace
  0002c	e1a0e000	 mov         lr, r0

; 152  : 
; 153  :     // Map System Configuration registers
; 154  :     PA.QuadPart = (LONGLONG)OMAP_SYSC_GENERAL_REGS_PA;

  00030	e59f00c8	 ldr         r0, [pc, #0xC8]
  00034	e3a01000	 mov         r1, #0

; 155  :     m_pSysConfRegs = (OMAP_SYSC_GENERAL_REGS*)MmMapIoSpace(PA, sizeof(OMAP_SYSC_GENERAL_REGS), FALSE);

  00038	e3a03000	 mov         r3, #0
  0003c	e3a02ea6	 mov         r2, #0xA6, 28
  00040	e585e0ec	 str         lr, [r5, #0xEC]
  00044	eb000000	 bl          MmMapIoSpace

; 156  : 
; 157  :     // Check registers mapped OK
; 158  :     if ((m_pUsbRegs == NULL)||
; 159  :         (m_pSysConfRegs == NULL))

  00048	e59530ec	 ldr         r3, [r5, #0xEC]
  0004c	e58500e8	 str         r0, [r5, #0xE8]
  00050	e3530000	 cmp         r3, #0
  00054	0a000023	 beq         |$cleanUp$39988|
  00058	e3500000	 cmp         r0, #0
  0005c	0a000021	 beq         |$cleanUp$39988|

; 160  :     {
; 161  :         DEBUGMSG(ZONE_OTG_ERROR,(TEXT("CAM35xOTG::Init: ERROR: failed to map hardware registers\r\n")));
; 162  :         goto cleanUp;
; 163  :     }
; 164  : 
; 165  :     if ((m_ActiveKeyPath != NULL)
; 166  :       &&(USBOTG::Init()))

  00060	e59530e0	 ldr         r3, [r5, #0xE0]
  00064	e3530000	 cmp         r3, #0
  00068	0a00001e	 beq         |$cleanUp$39988|
  0006c	e1a00005	 mov         r0, r5
  00070	eb000000	 bl          |?Init@USBOTG@@UAAHXZ|
  00074	e3500000	 cmp         r0, #0
  00078	0a00001a	 beq         |$cleanUp$39988|

; 167  :     {
; 168  :         // Create thread to poll USB status
; 169  :         m_hPollThread = CreateThread(NULL, 0, PollThread, this, 0, NULL);

  0007c	e59f2078	 ldr         r2, [pc, #0x78]
  00080	e3a07000	 mov         r7, #0
  00084	e1a03005	 mov         r3, r5
  00088	e3a01000	 mov         r1, #0
  0008c	e3a00000	 mov         r0, #0
  00090	e58d7004	 str         r7, [sp, #4]
  00094	e58d7000	 str         r7, [sp]
  00098	eb000000	 bl          CreateThread
  0009c	e3500000	 cmp         r0, #0
  000a0	e58500e4	 str         r0, [r5, #0xE4]

; 170  :         if (m_hPollThread == NULL)

  000a4	0a00000f	 beq         |$cleanUp$39988|

; 171  :         {
; 172  :             DEBUGMSG(ZONE_OTG_ERROR,(TEXT("CAM35xOTG::Init: ERROR: failed to create poll thread\r\n")));
; 173  :             goto cleanUp;
; 174  :         }
; 175  : 
; 176  :         // Determine if USB 1.1 is in use
; 177  : 		m_bUSB11Enabled = FALSE; // Not available on AM3517
; 178  : 
; 179  :         // Read poll timeout from registry
; 180  :         if (!RegQueryValueEx((L"PollTimeout"),&dwType,(PBYTE)&m_PollTimeout,&dwLength)) 

  000a8	e59f1048	 ldr         r1, [pc, #0x48]
  000ac	e595002c	 ldr         r0, [r5, #0x2C]
  000b0	e28de008	 add         lr, sp, #8
  000b4	e28540f4	 add         r4, r5, #0xF4
  000b8	e28d300c	 add         r3, sp, #0xC
  000bc	e3a02000	 mov         r2, #0
  000c0	e58570f8	 str         r7, [r5, #0xF8]
  000c4	e58de004	 str         lr, [sp, #4]
  000c8	e58d4000	 str         r4, [sp]
  000cc	eb000000	 bl          RegQueryValueExW
  000d0	e3500000	 cmp         r0, #0
  000d4	1a000003	 bne         |$cleanUp$39988|

; 181  :         {
; 182  :             DEBUGMSG(ZONE_OTG_ERROR, (TEXT("CAM35xOTG::Init: Failed to read PollTimeout from registry\r\n")));
; 183  :             goto cleanUp;
; 184  :         }
; 185  :     }
; 186  :     else
; 187  :     {
; 188  :         DEBUGMSG(ZONE_OTG_ERROR,(TEXT("CAM35xOTG::Init: ERROR: NULL ActiveKeyPath or base Init() failed\r\n")));
; 189  :         goto cleanUp;
; 190  :     }
; 191  : 
; 192  : 	m_RequestedPowerState = D0;
; 193  : 
; 194  : 	// Start the USB module
; 195  :     StartUSBModule();

  000d8	e1a00005	 mov         r0, r5
  000dc	e58570d0	 str         r7, [r5, #0xD0]
  000e0	eb000000	 bl          |?StartUSBModule@CAM35xOTG@@QAAXXZ|

; 196  : 
; 197  :     rc = TRUE;

  000e4	e3a06001	 mov         r6, #1
  000e8		 |$cleanUp$39988|

; 198  : 
; 199  : cleanUp:
; 200  :     DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("-CAM35xOTG::Init(%d)\r\n"), rc));
; 201  :     return rc;
; 202  : }

  000e8	e1a00006	 mov         r0, r6
  000ec	e28dd010	 add         sp, sp, #0x10
  000f0	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  000f4	e12fff1e	 bx          lr
  000f8		 |$LN21@Init|
  000f8		 |$LN22@Init|
  000f8	00000000	 DCD         |??_C@_1BI@JFGLCKEJ@?$AAP?$AAo?$AAl?$AAl?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AA@|
  000fc		 |$LN23@Init|
  000fc	00000000	 DCD         |?PollThread@CAM35xOTG@@KAKPAX@Z|
  00100		 |$LN24@Init|
  00100	48002270	 DCD         0x48002270
  00104		 |$M40863|

			 ENDP  ; |?Init@CAM35xOTG@@UAAHXZ|, CAM35xOTG::Init

	EXPORT	|?UnloadDrivers@@YAKPAVCAM35xOTG@@@Z|	; UnloadDrivers

  00000			 AREA	 |.pdata|, PDATA
|$T40879| DCD	|$LN5@UnloadDriv|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UnloadDrivers@@YAKPAVCAM35xOTG@@@Z| PROC ; UnloadDrivers

; 263  : {

  00000		 |$LN5@UnloadDriv|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M40876|
  00004	e1a04000	 mov         r4, r0

; 264  :     pOTG->HostMode(FALSE);

  00008	e3a01000	 mov         r1, #0
  0000c	eb000000	 bl          |?HostMode@CAM35xOTG@@IAAXH@Z|

; 265  :     pOTG->FunctionMode(FALSE);

  00010	e3a01000	 mov         r1, #0
  00014	e1a00004	 mov         r0, r4
  00018	eb000000	 bl          |?FunctionMode@CAM35xOTG@@IAAXH@Z|

; 266  :     return 0;

  0001c	e3a00000	 mov         r0, #0

; 267  : }

  00020	e8bd4010	 ldmia       sp!, {r4, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M40877|

			 ENDP  ; |?UnloadDrivers@@YAKPAVCAM35xOTG@@@Z|, UnloadDrivers

	EXPORT	|??_C@_1GA@DMPHBL@?$AA?5?$AAC?$AAA?$AAM?$AA3?$AA5?$AAx?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAP?$AAo?$AAw?$AAe?$AAr?$AAU?$AAp?$AA?3?$AA?5?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAD?$AAe?$AAv?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KG@INLIEDAD@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@FMGPFEPI@?$AA?5?$AAC?$AAA?$AAM?$AA3?$AA5?$AAx?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAP?$AAo?$AAw?$AAe?$AAr?$AAD?$AAo?$AAw?$AAn?$AA?3?$AA?5?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAD?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1OC@HMIFGNBA@?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAu?$AAn?$AAl?$AAo?$AAa?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAd?$AA?5?$AAo?$AAu?$AAt?$AA?4?$AA?5?$AAm?$AAa?$AAy?$AAb@| [ DATA ] ; `string'
	IMPORT	|RequestDevicePads|
	IMPORT	|EnableDeviceClocks|
	IMPORT	|ReleaseDevicePads|

  00000			 AREA	 |.pdata|, PDATA
|$T40915| DCD	|$LN39@UpdatePowe|
	DCD	0x40008a02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@DMPHBL@?$AA?5?$AAC?$AAA?$AAM?$AA3?$AA5?$AAx?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAP?$AAo?$AAw?$AAe?$AAr?$AAU?$AAp?$AA?3?$AA?5?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAD?$AAe?$AAv?$AAi@| DCB " "
	DCB	0x0, "C", 0x0, "A", 0x0, "M", 0x0, "3", 0x0, "5", 0x0, "x"
	DCB	0x0, "O", 0x0, "T", 0x0, "G", 0x0, ":", 0x0, ":", 0x0, "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "U", 0x0, "p"
	DCB	0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, "P", 0x0, "a", 0x0, "d"
	DCB	0x0, "s", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KG@INLIEDAD@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "P"
	DCB	0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "M", 0x0, "\\", 0x0, "C", 0x0, "O", 0x0, "M", 0x0, "M"
	DCB	0x0, "O", 0x0, "N", 0x0, "\\", 0x0, "S", 0x0, "R", 0x0, "C"
	DCB	0x0, "\\", 0x0, "S", 0x0, "O", 0x0, "C", 0x0, "\\", 0x0, "C"
	DCB	0x0, "O", 0x0, "M", 0x0, "M", 0x0, "O", 0x0, "N", 0x0, "_"
	DCB	0x0, "T", 0x0, "I", 0x0, "_", 0x0, "V", 0x0, "1", 0x0, "\\"
	DCB	0x0, "A", 0x0, "M", 0x0, "3", 0x0, "5", 0x0, "1", 0x0, "7"
	DCB	0x0, "\\", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, "\\", 0x0, "U"
	DCB	0x0, "S", 0x0, "B", 0x0, "O", 0x0, "T", 0x0, "G", 0x0, "\\"
	DCB	0x0, ".", 0x0, "\\", 0x0, "u", 0x0, "s", 0x0, "b", 0x0, "o"
	DCB	0x0, "t", 0x0, "g", 0x0, "p", 0x0, "d", 0x0, "d", 0x0, "."
	DCB	0x0, "c", 0x0, "p", 0x0, "p", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ":", 0x0, " "
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@FMGPFEPI@?$AA?5?$AAC?$AAA?$AAM?$AA3?$AA5?$AAx?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAP?$AAo?$AAw?$AAe?$AAr?$AAD?$AAo?$AAw?$AAn?$AA?3?$AA?5?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAD?$AAe@| DCB " "
	DCB	0x0, "C", 0x0, "A", 0x0, "M", 0x0, "3", 0x0, "5", 0x0, "x"
	DCB	0x0, "O", 0x0, "T", 0x0, "G", 0x0, ":", 0x0, ":", 0x0, "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "D", 0x0, "o"
	DCB	0x0, "w", 0x0, "n", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "l", 0x0, "e", 0x0, "a", 0x0, "s", 0x0, "e", 0x0, "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "P"
	DCB	0x0, "a", 0x0, "d", 0x0, "s", 0x0, " ", 0x0, "f", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1OC@HMIFGNBA@?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAu?$AAn?$AAl?$AAo?$AAa?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAd?$AA?5?$AAo?$AAu?$AAt?$AA?4?$AA?5?$AAm?$AAa?$AAy?$AAb@| DCB "d"
	DCB	0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "u", 0x0, "n", 0x0, "l", 0x0, "o", 0x0, "a", 0x0, "d"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "t", 0x0, "i"
	DCB	0x0, "m", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "o", 0x0, "u"
	DCB	0x0, "t", 0x0, ".", 0x0, " ", 0x0, "m", 0x0, "a", 0x0, "y"
	DCB	0x0, "b", 0x0, "e", 0x0, " ", 0x0, "b", 0x0, "e", 0x0, "c"
	DCB	0x0, "a", 0x0, "u", 0x0, "s", 0x0, "e", 0x0, " ", 0x0, "t"
	DCB	0x0, "h", 0x0, "e", 0x0, " ", 0x0, "s", 0x0, "u", 0x0, "s"
	DCB	0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, " ", 0x0, "o"
	DCB	0x0, "r", 0x0, "d", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "c"
	DCB	0x0, "a", 0x0, "m", 0x0, "e", 0x0, " ", 0x0, "f", 0x0, "r"
	DCB	0x0, "o", 0x0, "m", 0x0, " ", 0x0, "t", 0x0, "h", 0x0, "e"
	DCB	0x0, " ", 0x0, "U", 0x0, "S", 0x0, "B", 0x0, " ", 0x0, "d"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " "
	DCB	0x0, "(", 0x0, "p", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "k", 0x0, "e", 0x0, "y", 0x0, " ", 0x0, "o"
	DCB	0x0, "f", 0x0, " ", 0x0, "a", 0x0, " ", 0x0, "k", 0x0, "e"
	DCB	0x0, "y", 0x0, "b", 0x0, "a", 0x0, "o", 0x0, "r", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UpdatePowerState@CAM35xOTG@@UAAHXZ| PROC ; CAM35xOTG::UpdatePowerState

; 270  : {

  00000		 |$LN39@UpdatePowe|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M40912|
  00008	e1a04000	 mov         r4, r0

; 271  :     BOOL rc = FALSE;
; 272  : 	UINT32 nPhyCtl = 0;
; 273  :     
; 274  : 	DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("+CAM35xOTG::UpdatePowerState()\r\n")));
; 275  : 
; 276  :     // Apply the requested power state
; 277  :     switch(m_RequestedPowerState)

  0000c	e59430d0	 ldr         r3, [r4, #0xD0]
  00010	e3a00000	 mov         r0, #0
  00014	e3530000	 cmp         r3, #0
  00018	0a000036	 beq         |$LN12@UpdatePowe|
  0001c	e2433003	 sub         r3, r3, #3
  00020	e3530001	 cmp         r3, #1
  00024	8a000075	 bhi         |$LN13@UpdatePowe|

; 336  :         break;
; 337  :     case D3:
; 338  :     case D4:
; 339  : 
; 340  :         // Disable USB state polling
; 341  :         m_bEnablePolling = FALSE;
; 342  : 
; 343  :         if (WaitForSingleObject(
; 344  :             CreateThread(NULL,0,(LPTHREAD_START_ROUTINE)UnloadDrivers,this,0,NULL)
; 345  :             ,2000) != WAIT_OBJECT_0)

  00028	e59f21f4	 ldr         r2, [pc, #0x1F4]
  0002c	e3a0e000	 mov         lr, #0
  00030	e1a03004	 mov         r3, r4
  00034	e3a01000	 mov         r1, #0
  00038	e3a00000	 mov         r0, #0
  0003c	e584e0fc	 str         lr, [r4, #0xFC]
  00040	e58de004	 str         lr, [sp, #4]
  00044	e58de000	 str         lr, [sp]
  00048	eb000000	 bl          CreateThread
  0004c	e3a01e7d	 mov         r1, #0x7D, 28
  00050	eb000000	 bl          WaitForSingleObject
  00054	e3500000	 cmp         r0, #0

; 346  :         {
; 347  :             RETAILMSG(1,(TEXT("driver unloading timed out. maybe because the suspend order came from the USB device (power key of a keybaord)\r\n")));

  00058	159f01c0	 ldrne       r0, [pc, #0x1C0]
  0005c	1b000000	 blne        NKDbgPrintfW

; 348  :         }
; 349  :         
; 350  :         nPhyCtl = INREG32(&m_pSysConfRegs->CONTROL_DEVCONF2);

  00060	e59430e8	 ldr         r3, [r4, #0xE8]

; 351  : 
; 352  :         // End the session for host        
; 353  :         m_pUsbRegs->DEVCTL &= ~CSL_USB_DEVCTL_SESSION_MASK;

  00064	e59420ec	 ldr         r2, [r4, #0xEC]

; 354  : 
; 355  :         // Disconnect peripheral
; 356  :         m_pUsbRegs->POWER &= ~CSL_USB_POWER_SOFTCONN_MASK;
; 357  :         
; 358  : 
; 359  :         // Unlock USBPHY_CTL reg
; 360  :         ChipCfgLock(FALSE);
; 361  : 
; 362  : 		// Only power down the USB2.0 PHY if USB1.1 PHY not in use
; 363  : 		if (!m_bUSB11Enabled)
; 364  : 		{
; 365  : 			nPhyCtl |= DEVCONF2_USBOTG_PHY_PD;
; 366  : 		}
; 367  : 
; 368  : 		// Power down the OTG
; 369  : 		nPhyCtl |= DEVCONF2_USBOTG_POWERDOWNOTG;
; 370  : 		OUTREG32(&m_pSysConfRegs->CONTROL_DEVCONF2, nPhyCtl);
; 371  : 
; 372  :         // Lock USBPHY_CTL reg
; 373  :         ChipCfgLock(TRUE);
; 374  : 
; 375  : 		// Release pads
; 376  : 		if (!ReleaseDevicePads(OMAP_DEVICE_HSOTGUSB))

  00068	e3a0004f	 mov         r0, #0x4F
  0006c	e5931310	 ldr         r1, [r3, #0x310]
  00070	e5d23460	 ldrb        r3, [r2, #0x460]
  00074	e20330fe	 and         r3, r3, #0xFE
  00078	e5c23460	 strb        r3, [r2, #0x460]
  0007c	e59430ec	 ldr         r3, [r4, #0xEC]
  00080	e2832b01	 add         r2, r3, #1, 22
  00084	e5d23001	 ldrb        r3, [r2, #1]
  00088	e20330bf	 and         r3, r3, #0xBF
  0008c	e5c23001	 strb        r3, [r2, #1]
  00090	e59430f8	 ldr         r3, [r4, #0xF8]
  00094	e59420e8	 ldr         r2, [r4, #0xE8]
  00098	e3530000	 cmp         r3, #0
  0009c	03811008	 orreq       r1, r1, #8
  000a0	e3813004	 orr         r3, r1, #4
  000a4	e5823310	 str         r3, [r2, #0x310]
  000a8	eb000000	 bl          ReleaseDevicePads
  000ac	e3500000	 cmp         r0, #0
  000b0	1a000006	 bne         |$LN22@UpdatePowe|

; 377  : 		{
; 378  : 			ERRORMSG(ZONE_ERROR,
; 379  : 				(L" CAM35xOTG::PowerDown: ReleaseDevicePads failed\r\n"));

  000b4	e59f115c	 ldr         r1, [pc, #0x15C]
  000b8	e59f0154	 ldr         r0, [pc, #0x154]
  000bc	e3a03c01	 mov         r3, #1, 24
  000c0	e383207b	 orr         r2, r3, #0x7B
  000c4	eb000000	 bl          NKDbgPrintfW
  000c8	e59f014c	 ldr         r0, [pc, #0x14C]
  000cc	eb000000	 bl          NKDbgPrintfW
  000d0		 |$LN22@UpdatePowe|

; 380  : 		}
; 381  : 
; 382  :         // Clocks off (leave enabled if USB1.1 in use)
; 383  :         if (!m_bUSB11Enabled)

  000d0	e59430f8	 ldr         r3, [r4, #0xF8]

; 384  : 			EnableDeviceClocks(OMAP_DEVICE_HSOTGUSB, FALSE);

  000d4	e3a0004f	 mov         r0, #0x4F
  000d8	e3530000	 cmp         r3, #0
  000dc	1a000002	 bne         |$LN3@UpdatePowe|
  000e0	e3a01000	 mov         r1, #0

; 385  :         else
; 386  : 			EnableDeviceClocks(OMAP_DEVICE_HSOTGUSB, TRUE);

  000e4	eb000000	 bl          EnableDeviceClocks

; 387  : 
; 388  : 
; 389  :         rc = TRUE;    
; 390  :         break;

  000e8	ea000043	 b           |$LN34@UpdatePowe|
  000ec		 |$LN3@UpdatePowe|

; 385  :         else
; 386  : 			EnableDeviceClocks(OMAP_DEVICE_HSOTGUSB, TRUE);

  000ec	e3a01001	 mov         r1, #1
  000f0	eb000000	 bl          EnableDeviceClocks

; 387  : 
; 388  : 
; 389  :         rc = TRUE;    
; 390  :         break;

  000f4	ea000040	 b           |$LN34@UpdatePowe|
  000f8		 |$LN12@UpdatePowe|

; 278  :     {
; 279  :     case D0:
; 280  : 
; 281  : 	    // Global Reset 
; 282  : 		SETREG32(&m_pSysConfRegs->CONTROL_IP_SW_RESET, USB20OTGSS_SW_RST);

  000f8	e59420e8	 ldr         r2, [r4, #0xE8]

; 283  : 		Sleep(10);

  000fc	e3a0000a	 mov         r0, #0xA
  00100	e5923328	 ldr         r3, [r2, #0x328]
  00104	e3833001	 orr         r3, r3, #1
  00108	e5823328	 str         r3, [r2, #0x328]
  0010c	eb000000	 bl          Sleep

; 284  : 		CLRREG32(&m_pSysConfRegs->CONTROL_IP_SW_RESET, USB20OTGSS_SW_RST);

  00110	e59420e8	 ldr         r2, [r4, #0xE8]

; 285  :      	
; 286  : 		// Enable Clocks
; 287  : 		EnableDeviceClocks(OMAP_DEVICE_HSOTGUSB, TRUE);

  00114	e3a01001	 mov         r1, #1
  00118	e3a0004f	 mov         r0, #0x4F
  0011c	e5923328	 ldr         r3, [r2, #0x328]
  00120	e3c33001	 bic         r3, r3, #1
  00124	e5823328	 str         r3, [r2, #0x328]
  00128	eb000000	 bl          EnableDeviceClocks

; 288  : 
; 289  : 		// Request pads
; 290  : 		if (!RequestDevicePads(OMAP_DEVICE_HSOTGUSB))

  0012c	e3a0004f	 mov         r0, #0x4F
  00130	eb000000	 bl          RequestDevicePads
  00134	e3500000	 cmp         r0, #0
  00138	1a000006	 bne         |$LN18@UpdatePowe|

; 291  : 		{
; 292  : 			ERRORMSG(ZONE_ERROR,
; 293  : 				(L" CAM35xOTG::PowerUp: RequestDevicePads failed\r\n"));

  0013c	e59f10d4	 ldr         r1, [pc, #0xD4]
  00140	e59f00cc	 ldr         r0, [pc, #0xCC]
  00144	e3a03c01	 mov         r3, #1, 24
  00148	e3832025	 orr         r2, r3, #0x25
  0014c	eb000000	 bl          NKDbgPrintfW
  00150	e59f00b8	 ldr         r0, [pc, #0xB8]
  00154	eb000000	 bl          NKDbgPrintfW
  00158		 |$LN18@UpdatePowe|

; 294  : 		}
; 295  : 
; 296  : 	    // Reset the controller
; 297  : 		SETREG32(&m_pUsbRegs->CTRLR, OTG_CONTROL_RESET);

  00158	e59420ec	 ldr         r2, [r4, #0xEC]

; 298  : 
; 299  :         Sleep(10);

  0015c	e3a0000a	 mov         r0, #0xA
  00160	e5923004	 ldr         r3, [r2, #4]
  00164	e3833001	 orr         r3, r3, #1
  00168	e5823004	 str         r3, [r2, #4]
  0016c	eb000000	 bl          Sleep

; 300  : 
; 301  :         // Unlock USBPHY_CTL reg
; 302  :         ChipCfgLock(FALSE);
; 303  : 
; 304  : 		MASKREG32(&m_pSysConfRegs->CONTROL_DEVCONF2, DEVCONF2_USBOTG_REFFREQ, DEVCONF2_USBOTG_REFFREQ_13MHZ);

  00170	e59420e8	 ldr         r2, [r4, #0xE8]
  00174	e3a01c36	 mov         r1, #0x36, 24

; 305  : 
; 306  : 		SETREG32(&m_pSysConfRegs->CONTROL_DEVCONF2, DEVCONF2_USBOTG_PHY_PLLON		|
; 307  : 													DEVCONF2_USBOTG_SESSENDEN		|
; 308  : 													DEVCONF2_USBOTG_VBUSDETECTEN	|
; 309  : 													DEVCONF2_USBOTG_REFFREQ_13MHZ	|
; 310  : 													DEVCONF2_USBOTG_DATAPOLARITY	);

  00178	e3811022	 orr         r1, r1, #0x22
  0017c	e5923310	 ldr         r3, [r2, #0x310]

; 311  : 
; 312  : 		CLRREG32(&m_pSysConfRegs->CONTROL_DEVCONF2, DEVCONF2_USBOTG_PHY_RESET		|
; 313  : 													DEVCONF2_USBOTG_OTGMODE			|
; 314  : 													DEVCONF2_USBOTG_POWERDOWNOTG	|
; 315  : 													DEVCONF2_USBPHY_GPIO_MODE		|
; 316  : 													DEVCONF2_USBOTG_PHY_PD			);

  00180	e59fe084	 ldr         lr, [pc, #0x84]

; 317  : 		Sleep(1);

  00184	e3a00001	 mov         r0, #1
  00188	e3c33c0f	 bic         r3, r3, #0xF, 24
  0018c	e3833c06	 orr         r3, r3, #6, 24
  00190	e5823310	 str         r3, [r2, #0x310]
  00194	e59420e8	 ldr         r2, [r4, #0xE8]
  00198	e5923310	 ldr         r3, [r2, #0x310]
  0019c	e1833001	 orr         r3, r3, r1
  001a0	e5823310	 str         r3, [r2, #0x310]
  001a4	e59420e8	 ldr         r2, [r4, #0xE8]
  001a8	e5923310	 ldr         r3, [r2, #0x310]
  001ac	e003300e	 and         r3, r3, lr
  001b0	e5823310	 str         r3, [r2, #0x310]

; 318  : 
; 319  :         // wait until ready
; 320  :         while ((m_pSysConfRegs->CONTROL_DEVCONF2 & DEVCONF2_USBOTG_PWR_CLKGOOD) != DEVCONF2_USBOTG_PWR_CLKGOOD)

  001b4	ea000000	 b           |$LN36@UpdatePowe|
  001b8		 |$LL10@UpdatePowe|

; 321  :             Sleep(5);

  001b8	e3a00005	 mov         r0, #5
  001bc		 |$LN36@UpdatePowe|
  001bc	eb000000	 bl          Sleep
  001c0	e59430e8	 ldr         r3, [r4, #0xE8]
  001c4	e5933310	 ldr         r3, [r3, #0x310]
  001c8	e2033080	 and         r3, r3, #0x80
  001cc	e3530080	 cmp         r3, #0x80
  001d0	1afffff8	 bne         |$LL10@UpdatePowe|

; 322  : 
; 323  :         // Lock USBPHY_CTL reg
; 324  :         ChipCfgLock(TRUE);
; 325  : 
; 326  :         if(m_bFunctionMode && (m_pUsbRegs->DEVCTL & CSL_USB_DEVCTL_BDEVICE_MASK))

  001d4	e5943100	 ldr         r3, [r4, #0x100]
  001d8	e3530000	 cmp         r3, #0
  001dc	159420ec	 ldrne       r2, [r4, #0xEC]
  001e0	15d23460	 ldrneb      r3, [r2, #0x460]
  001e4	13130080	 tstne       r3, #0x80

; 327  :         {
; 328  :             //SOFTCONN
; 329  :             m_pUsbRegs->POWER |= CSL_USB_POWER_SOFTCONN_MASK;

  001e8	15d23401	 ldrneb      r3, [r2, #0x401]
  001ec	13833040	 orrne       r3, r3, #0x40
  001f0	15c23401	 strneb      r3, [r2, #0x401]

; 330  :         }
; 331  : 
; 332  :         // Enable USB state polling
; 333  :         m_bEnablePolling = TRUE;

  001f4	e3a03001	 mov         r3, #1
  001f8	e58430fc	 str         r3, [r4, #0xFC]
  001fc		 |$LN34@UpdatePowe|

; 334  : 
; 335  :         rc = TRUE;

  001fc	e3a00001	 mov         r0, #1
  00200		 |$LN13@UpdatePowe|

; 391  :     default:
; 392  :         DEBUGMSG(ZONE_OTG_ERROR,(TEXT("COMAPL13xOTG::UpdatePowerState: do not support power state %d\r\n"), m_RequestedPowerState));
; 393  :         break;
; 394  :     }
; 395  : 
; 396  :     DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("-COMAPL13xOTG::UpdatePowerState(%d)\r\n"), rc));
; 397  : 
; 398  :     return rc;
; 399  : }

  00200	e28dd008	 add         sp, sp, #8
  00204	e8bd4010	 ldmia       sp!, {r4, lr}
  00208	e12fff1e	 bx          lr
  0020c		 |$LN40@UpdatePowe|
  0020c		 |$LN41@UpdatePowe|
  0020c	ff7f3fe3	 DCD         0xff7f3fe3
  00210		 |$LN42@UpdatePowe|
  00210	00000000	 DCD         |??_C@_1GA@DMPHBL@?$AA?5?$AAC?$AAA?$AAM?$AA3?$AA5?$AAx?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAP?$AAo?$AAw?$AAe?$AAr?$AAU?$AAp?$AA?3?$AA?5?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAD?$AAe?$AAv?$AAi@|
  00214		 |$LN43@UpdatePowe|
  00214	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  00218		 |$LN44@UpdatePowe|
  00218	00000000	 DCD         |??_C@_1KG@INLIEDAD@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAC?$AAO?$AAM?$AAM?$AAO?$AAN?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  0021c		 |$LN45@UpdatePowe|
  0021c	00000000	 DCD         |??_C@_1GE@FMGPFEPI@?$AA?5?$AAC?$AAA?$AAM?$AA3?$AA5?$AAx?$AAO?$AAT?$AAG?$AA?3?$AA?3?$AAP?$AAo?$AAw?$AAe?$AAr?$AAD?$AAo?$AAw?$AAn?$AA?3?$AA?5?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAD?$AAe@|
  00220		 |$LN46@UpdatePowe|
  00220	00000000	 DCD         |??_C@_1OC@HMIFGNBA@?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAu?$AAn?$AAl?$AAo?$AAa?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAd?$AA?5?$AAo?$AAu?$AAt?$AA?4?$AA?5?$AAm?$AAa?$AAy?$AAb@|
  00224		 |$LN47@UpdatePowe|
  00224	00000000	 DCD         |?UnloadDrivers@@YAKPAVCAM35xOTG@@@Z|
  00228		 |$M40913|

			 ENDP  ; |?UpdatePowerState@CAM35xOTG@@UAAHXZ|, CAM35xOTG::UpdatePowerState


  00000			 AREA	 |.pdata|, PDATA
|$T40935| DCD	|$LN13@NewStateAc|
	DCD	0x40001d01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?NewStateAction@CAM35xOTG@@UAAHW4USBOTG_STATES@@T_USBOTG_OUTPUT@@@Z| PROC ; CAM35xOTG::NewStateAction

; 493  : {

  00000		 |$LN13@NewStateAc|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M40932|
  00004	e1a04000	 mov         r4, r0

; 494  : 	UNREFERENCED_PARAMETER(usbOtgOutput);
; 495  : 
; 496  :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("+CAM35xOTG::NewStateAction()\r\n")));
; 497  : 
; 498  :     DEBUGMSG(ZONE_OTG_FUNCTION, (TEXT("USBOTG state: %s\n\r"), g_cppOtgStateString[usbOtgState]));
; 499  : 
; 500  :     // Load correct driver for current state
; 501  :     switch(usbOtgState)

  00008	e3510004	 cmp         r1, #4
  0000c	0a000010	 beq         |$LN5@NewStateAc|
  00010	e3510007	 cmp         r1, #7
  00014	0a000005	 beq         |$LN2@NewStateAc|
  00018	e351000b	 cmp         r1, #0xB
  0001c	1a000007	 bne         |$LN1@NewStateAc|

; 508  :         }
; 509  :         break;
; 510  :     case USBOTG_b_peripheral:
; 511  :         // in function mode
; 512  :         FunctionMode(TRUE);

  00020	e3a01001	 mov         r1, #1
  00024		 |$LN10@NewStateAc|
  00024	e1a00004	 mov         r0, r4
  00028	eb000000	 bl          |?FunctionMode@CAM35xOTG@@IAAXH@Z|

; 513  :         break;

  0002c	ea00000d	 b           |$LN4@NewStateAc|
  00030		 |$LN2@NewStateAc|

; 514  :     case USBOTG_a_wait_vfall:
; 515  :         // Clear session bit
; 516  :         m_pUsbRegs->DEVCTL &= ~CSL_USB_DEVCTL_SESSION_MASK;

  00030	e59420ec	 ldr         r2, [r4, #0xEC]
  00034	e5d23460	 ldrb        r3, [r2, #0x460]
  00038	e20330fe	 and         r3, r3, #0xFE
  0003c	e5c23460	 strb        r3, [r2, #0x460]
  00040		 |$LN1@NewStateAc|

; 517  :         // Deliberate fallthrough
; 518  :     default:
; 519  :         // In neither host nor function,
; 520  :         // unload both drivers
; 521  :         HostMode(FALSE);

  00040	e3a01000	 mov         r1, #0
  00044	e1a00004	 mov         r0, r4
  00048	eb000000	 bl          |?HostMode@CAM35xOTG@@IAAXH@Z|

; 522  :         FunctionMode(FALSE);

  0004c	e3a01000	 mov         r1, #0

; 523  :         break;

  00050	eafffff3	 b           |$LN10@NewStateAc|
  00054		 |$LN5@NewStateAc|

; 502  :     {        
; 503  :         case USBOTG_a_host:
; 504  :         // in host mode
; 505  :         if (m_UsbOtgInput.bit.b_conn != 0)

  00054	e594304c	 ldr         r3, [r4, #0x4C]
  00058	e3130b02	 tst         r3, #2, 22

; 506  :         {
; 507  :             HostMode(TRUE);            

  0005c	13a01001	 movne       r1, #1
  00060	11a00004	 movne       r0, r4
  00064	1b000000	 blne        |?HostMode@CAM35xOTG@@IAAXH@Z|
  00068		 |$LN4@NewStateAc|

; 524  :     }
; 525  : 
; 526  :     DEBUGMSG(ZONE_OTG_FUNCTION,(TEXT("-CAM35xOTG::NewStateAction()\r\n")));
; 527  : 
; 528  :     // Always returning FALSE means the MDD progresses through the USBOTG state machine 
; 529  :     // more slowly. This helps the case where a host cable is attached with no device.
; 530  :     return FALSE;

  00068	e3a00000	 mov         r0, #0

; 531  : }

  0006c	e8bd4010	 ldmia       sp!, {r4, lr}
  00070	e12fff1e	 bx          lr
  00074		 |$M40933|

			 ENDP  ; |?NewStateAction@CAM35xOTG@@UAAHW4USBOTG_STATES@@T_USBOTG_OUTPUT@@@Z|, CAM35xOTG::NewStateAction

	END
