; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\SOC\COMMON_TI_V1\AM3517\USB\USBH\desclist.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.bss|, NOINIT
|pFreeED| %	0x4
|pFreeTD| %	0x4
|EDUsage| %	0x4
|TDUsage| %	0x4
; File c:\wince600\platform\common\src\soc\common_ti_v1\am3517\usb\usbh\desclist.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T41390| DCD	|$LN13@AddElement|
	DCD	0x40000d00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AddElementToListEnd@@YAXPAUListHead@@PAPAU1@@Z| PROC ; AddElementToListEnd

; 46   : {

  00000		 |$LN13@AddElement|
  00000		 |$M41387|

; 47   :     pElement->next = NULL;

  00000	e3a03000	 mov         r3, #0
  00004	e5803000	 str         r3, [r0]

; 48   :     if(*ppQueueHead){

  00008	e5913000	 ldr         r3, [r1]
  0000c	e1b02003	 movs        r2, r3
  00010	1a000002	 bne         |$LN10@AddElement|

; 54   :     }
; 55   :     else
; 56   :         *ppQueueHead = pElement;

  00014	e5810000	 str         r0, [r1]

; 57   : }

  00018	e12fff1e	 bx          lr
  0001c		 |$LL3@AddElement|

; 49   :         ListHead *pTemp = *ppQueueHead;
; 50   :         while(pTemp->next)   /*go to end of list*/
; 51   :             pTemp = pTemp->next;

  0001c	e5922000	 ldr         r2, [r2]
  00020		 |$LN10@AddElement|
  00020	e5923000	 ldr         r3, [r2]
  00024	e3530000	 cmp         r3, #0
  00028	1afffffb	 bne         |$LL3@AddElement|

; 52   : 
; 53   :         pTemp->next = pElement;

  0002c	e5820000	 str         r0, [r2]

; 57   : }

  00030	e12fff1e	 bx          lr
  00034		 |$M41388|

			 ENDP  ; |?AddElementToListEnd@@YAXPAUListHead@@PAPAU1@@Z|, AddElementToListEnd


  00000			 AREA	 |.pdata|, PDATA
|$T41399| DCD	|$LN5@AddElement@2|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AddElementToListStart@@YAXPAUListHead@@PAPAU1@@Z| PROC ; AddElementToListStart

; 72   : {

  00000		 |$LN5@AddElement@2|
  00000		 |$M41396|

; 73   :     pElement->next = *ppQueueHead;

  00000	e5913000	 ldr         r3, [r1]
  00004	e5803000	 str         r3, [r0]

; 74   :     *ppQueueHead = pElement;

  00008	e5810000	 str         r0, [r1]

; 75   : }

  0000c	e12fff1e	 bx          lr
  00010		 |$M41397|

			 ENDP  ; |?AddElementToListStart@@YAXPAUListHead@@PAPAU1@@Z|, AddElementToListStart

	EXPORT	|?RemoveElementFromListEnd@@YAPAUListHead@@PAPAU1@@Z| ; RemoveElementFromListEnd

  00000			 AREA	 |.pdata|, PDATA
|$T41414| DCD	|$LN14@RemoveElem|
	DCD	0x40001500
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RemoveElementFromListEnd@@YAPAUListHead@@PAPAU1@@Z| PROC ; RemoveElementFromListEnd

; 88   : {

  00000		 |$LN14@RemoveElem|
  00000		 |$M41411|

; 89   :     ListHead *pTemp;
; 90   :     ListHead *pElement;
; 91   :     if(*ppQueueHead){

  00000	e5903000	 ldr         r3, [r0]
  00004	e1b02003	 movs        r2, r3
  00008	0a00000f	 beq         |$LN6@RemoveElem|

; 92   :         pTemp = *ppQueueHead;
; 93   :         if(!pTemp->next){

  0000c	e5923000	 ldr         r3, [r2]
  00010	e3530000	 cmp         r3, #0
  00014	1a000004	 bne         |$LN9@RemoveElem|

; 94   :             /*only one element in list*/
; 95   :             *ppQueueHead = pTemp->next;

  00018	e3a03000	 mov         r3, #0
  0001c	e5803000	 str         r3, [r0]

; 96   :             return pTemp;

  00020	e1a00002	 mov         r0, r2

; 109  : }

  00024	e12fff1e	 bx          lr
  00028		 |$LL3@RemoveElem|

; 97   :         }
; 98   :         else{
; 99   :             while(pTemp->next->next)
; 100  :                 pTemp = pTemp->next;

  00028	e5922000	 ldr         r2, [r2]
  0002c		 |$LN9@RemoveElem|
  0002c	e5923000	 ldr         r3, [r2]
  00030	e5933000	 ldr         r3, [r3]
  00034	e3530000	 cmp         r3, #0
  00038	1afffffa	 bne         |$LL3@RemoveElem|

; 101  : 
; 102  :             pElement = pTemp->next;

  0003c	e5920000	 ldr         r0, [r2]

; 103  :             pTemp->next = pElement->next;

  00040	e5903000	 ldr         r3, [r0]

; 104  :             return pElement;

  00044	e5823000	 str         r3, [r2]

; 109  : }

  00048	e12fff1e	 bx          lr
  0004c		 |$LN6@RemoveElem|

; 105  :         }
; 106  :     }
; 107  :     else
; 108  :         return NULL;

  0004c	e3a00000	 mov         r0, #0

; 109  : }

  00050	e12fff1e	 bx          lr
  00054		 |$M41412|

			 ENDP  ; |?RemoveElementFromListEnd@@YAPAUListHead@@PAPAU1@@Z|, RemoveElementFromListEnd

	EXPORT	|?RemoveElementFromListStart@@YAPAUListHead@@PAPAU1@@Z| ; RemoveElementFromListStart

  00000			 AREA	 |.pdata|, PDATA
|$T41425| DCD	|$LN7@RemoveElem@2|
	DCD	0x40000900
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RemoveElementFromListStart@@YAPAUListHead@@PAPAU1@@Z| PROC ; RemoveElementFromListStart

; 122  : {

  00000		 |$LN7@RemoveElem@2|
  00000		 |$M41422|
  00000	e1a02000	 mov         r2, r0

; 123  :     ListHead *pElement;
; 124  :     if(*ppQueueHead){

  00004	e5923000	 ldr         r3, [r2]
  00008	e1b00003	 movs        r0, r3

; 125  :         pElement = *ppQueueHead;
; 126  :         *ppQueueHead = pElement->next;

  0000c	15903000	 ldrne       r3, [r0]

; 127  :         pElement->next = NULL;

  00010	13a01000	 movne       r1, #0

; 128  :         return pElement;

  00014	15823000	 strne       r3, [r2]
  00018	15801000	 strne       r1, [r0]

; 129  :     }
; 130  :     else
; 131  :         return NULL;

  0001c	03a00000	 moveq       r0, #0

; 132  : }

  00020	e12fff1e	 bx          lr
  00024		 |$M41423|

			 ENDP  ; |?RemoveElementFromListStart@@YAPAUListHead@@PAPAU1@@Z|, RemoveElementFromListStart

	EXPORT	|?RemoveElementFromList@@YAHPAPAUListHead@@PAU1@@Z| ; RemoveElementFromList

  00000			 AREA	 |.pdata|, PDATA
|$T41440| DCD	|$LN14@RemoveElem@3|
	DCD	0x40001b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RemoveElementFromList@@YAHPAPAUListHead@@PAU1@@Z| PROC ; RemoveElementFromList

; 146  : {

  00000		 |$LN14@RemoveElem@3|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M41437|
  00004	e1a0e001	 mov         lr, r1
  00008	e1a01000	 mov         r1, r0

; 147  :     ListHead *pTemp = *ppQueueHead;

  0000c	e5912000	 ldr         r2, [r1]

; 148  :     if(pTemp == pElement){

  00010	e152000e	 cmp         r2, lr

; 149  :         *ppQueueHead = pTemp->next;

  00014	05923000	 ldreq       r3, [r2]

; 150  :         return TRUE;

  00018	03a00001	 moveq       r0, #1
  0001c	05813000	 streq       r3, [r1]

; 162  :     }
; 163  : }

  00020	049de004	 ldreq       lr, [sp], #4
  00024	012fff1e	 bxeq        lr

; 151  :     }
; 152  :     else{
; 153  :         while(pTemp->next){

  00028	e5923000	 ldr         r3, [r2]
  0002c	ea000004	 b           |$LN11@RemoveElem@3|
  00030		 |$LL4@RemoveElem@3|

; 154  :             if(pTemp->next == pElement){

  00030	e5921000	 ldr         r1, [r2]
  00034	e151000e	 cmp         r1, lr
  00038	0a000006	 beq         |$LN10@RemoveElem@3|
  0003c	e5913000	 ldr         r3, [r1]

; 157  :             }
; 158  :             else
; 159  :                 pTemp = pTemp->next;

  00040	e1a02001	 mov         r2, r1
  00044		 |$LN11@RemoveElem@3|
  00044	e3530000	 cmp         r3, #0
  00048	1afffff8	 bne         |$LL4@RemoveElem@3|

; 160  :         }
; 161  :         return FALSE;

  0004c	e3a00000	 mov         r0, #0

; 162  :     }
; 163  : }

  00050	e49de004	 ldr         lr, [sp], #4
  00054	e12fff1e	 bx          lr
  00058		 |$LN10@RemoveElem@3|

; 155  :                 pTemp->next = pElement->next;

  00058	e59e3000	 ldr         r3, [lr]

; 156  :                 return TRUE;

  0005c	e3a00001	 mov         r0, #1
  00060	e5823000	 str         r3, [r2]

; 162  :     }
; 163  : }

  00064	e49de004	 ldr         lr, [sp], #4
  00068	e12fff1e	 bx          lr
  0006c		 |$M41438|

			 ENDP  ; |?RemoveElementFromList@@YAHPAPAUListHead@@PAU1@@Z|, RemoveElementFromList

	EXPORT	|?CreateDescriptors@@YAXXZ|		; CreateDescriptors

  00010			 AREA	 |.bss|, NOINIT
|EDs|	%	0x700
|TDs|	%	0x3200
|EDs|	%	0x700

  00000			 AREA	 |.pdata|, PDATA
|$T41459| DCD	|$LN19@CreateDesc|
	DCD	0x40002301
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CreateDescriptors@@YAXXZ| PROC	; CreateDescriptors

; 171  : void CreateDescriptors(void){

  00000		 |$LN19@CreateDesc|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M41456|

; 172  :     UINT32 index;
; 173  :     for(index = 0; index < NO_ED; index++)

  00004	e59f007c	 ldr         r0, [pc, #0x7C]
  00008	e59fe074	 ldr         lr, [pc, #0x74]
  0000c	e3a02020	 mov         r2, #0x20
  00010	e1a03000	 mov         r3, r0
  00014	e59e1000	 ldr         r1, [lr]
  00018		 |$LL6@CreateDesc|

; 174  :         AddElementToListStart((ListHead*)&EDs[index],(ListHead**)&pFreeED);

  00018	e5831000	 str         r1, [r3]
  0001c	e1a01003	 mov         r1, r3
  00020	e2833038	 add         r3, r3, #0x38
  00024	e2522001	 subs        r2, r2, #1
  00028	1afffffa	 bne         |$LL6@CreateDesc|

; 175  : 
; 176  :     EDUsage = 0;

  0002c	e59f304c	 ldr         r3, [pc, #0x4C]
  00030	e59f4044	 ldr         r4, [pc, #0x44]
  00034	e3a02000	 mov         r2, #0
  00038	e5832000	 str         r2, [r3]
  0003c	e5942000	 ldr         r2, [r4]
  00040	e58e1000	 str         r1, [lr]
  00044	e2803c07	 add         r3, r0, #7, 24
  00048	e3a01080	 mov         r1, #0x80
  0004c		 |$LL3@CreateDesc|

; 177  : 
; 178  :     for(index = 0; index < NO_TD; index++)
; 179  :         AddElementToListStart((ListHead*)&TDs[index],(ListHead**)&pFreeTD);

  0004c	e5832000	 str         r2, [r3]
  00050	e1a02003	 mov         r2, r3
  00054	e2833064	 add         r3, r3, #0x64
  00058	e2511001	 subs        r1, r1, #1
  0005c	1afffffa	 bne         |$LL3@CreateDesc|

; 180  : 
; 181  :     TDUsage = 0;

  00060	e59f3010	 ldr         r3, [pc, #0x10]
  00064	e3a01000	 mov         r1, #0
  00068	e5842000	 str         r2, [r4]
  0006c	e5831000	 str         r1, [r3]

; 182  : }

  00070	e8bd4010	 ldmia       sp!, {r4, lr}
  00074	e12fff1e	 bx          lr
  00078		 |$LN20@CreateDesc|
  00078		 |$LN21@CreateDesc|
  00078	00000000	 DCD         |TDUsage|
  0007c		 |$LN22@CreateDesc|
  0007c	00000000	 DCD         |pFreeTD|
  00080		 |$LN23@CreateDesc|
  00080	00000000	 DCD         |EDUsage|
  00084		 |$LN24@CreateDesc|
  00084	00000000	 DCD         |pFreeED|
  00088		 |$LN25@CreateDesc|
  00088	00000000	 DCD         |EDs|
  0008c		 |$M41457|

			 ENDP  ; |?CreateDescriptors@@YAXXZ|, CreateDescriptors

	EXPORT	|?AllocateED@@YAPAU_USBED@@XZ|		; AllocateED
	IMPORT	|memset|

  00000			 AREA	 |.pdata|, PDATA
|$T41494| DCD	|$LN14@AllocateED|
	DCD	0x40002801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AllocateED@@YAPAU_USBED@@XZ| PROC	; AllocateED

; 192  : {

  00000		 |$LN14@AllocateED|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M41491|

; 193  :     USBED *pED = NULL;
; 194  : 
; 195  :     if ((EDUsage < NO_ED) && (TDUsage < NO_TD))

  00004	e59f5090	 ldr         r5, [pc, #0x90]
  00008	e3a04000	 mov         r4, #0
  0000c	e5957008	 ldr         r7, [r5, #8]
  00010	e3570020	 cmp         r7, #0x20
  00014	2a00001d	 bcs         |$LN1@AllocateED|
  00018	e595800c	 ldr         r8, [r5, #0xC]
  0001c	e3580080	 cmp         r8, #0x80
  00020	2a00001a	 bcs         |$LN1@AllocateED|

; 196  :     {
; 197  :         pED = (USBED*)RemoveElementFromListStart((ListHead**)&pFreeED);

  00024	e5954000	 ldr         r4, [r5]
  00028	e3a02000	 mov         r2, #0

; 198  :         USBTD *pTD = (USBTD*)RemoveElementFromListStart((ListHead**)&pFreeTD);
; 199  :         memset((PUCHAR) pED, 0, sizeof(USBED));

  0002c	e3a01000	 mov         r1, #0
  00030	e3540000	 cmp         r4, #0
  00034	15943000	 ldrne       r3, [r4]
  00038	15853000	 strne       r3, [r5]
  0003c	15842000	 strne       r2, [r4]
  00040	e5956004	 ldr         r6, [r5, #4]
  00044	03a04000	 moveq       r4, #0
  00048	e1a00004	 mov         r0, r4
  0004c	e3560000	 cmp         r6, #0
  00050	15963000	 ldrne       r3, [r6]
  00054	15853004	 strne       r3, [r5, #4]
  00058	15862000	 strne       r2, [r6]
  0005c	e3a02038	 mov         r2, #0x38
  00060	03a06000	 moveq       r6, #0
  00064	eb000000	 bl          memset

; 200  :         memset((PUCHAR) pTD, 0, sizeof(USBTD));

  00068	e3a02064	 mov         r2, #0x64
  0006c	e3a01000	 mov         r1, #0
  00070	e1a00006	 mov         r0, r6
  00074	eb000000	 bl          memset

; 201  : 
; 202  :         /*allocate NULL TD*/
; 203  : 
; 204  :         pED->HeadTD = (ListHead *)pTD;
; 205  :         pED->TailTD = (ListHead *)pTD;
; 206  : 
; 207  :         EDUsage ++;

  00078	e2873001	 add         r3, r7, #1

; 208  :         TDUsage ++;

  0007c	e2882001	 add         r2, r8, #1
  00080	e5853008	 str         r3, [r5, #8]
  00084	e585200c	 str         r2, [r5, #0xC]
  00088	e5846014	 str         r6, [r4, #0x14]
  0008c	e5846018	 str         r6, [r4, #0x18]
  00090		 |$LN1@AllocateED|

; 209  :     }
; 210  : 
; 211  :     return pED;
; 212  : }

  00090	e1a00004	 mov         r0, r4
  00094	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00098	e12fff1e	 bx          lr
  0009c		 |$LN15@AllocateED|
  0009c		 |$LN16@AllocateED|
  0009c	00000000	 DCD         |pFreeED|
  000a0		 |$M41492|

			 ENDP  ; |?AllocateED@@YAPAU_USBED@@XZ|, AllocateED

	EXPORT	|?AllocateTD@@YAPAU_USBTD@@XZ|		; AllocateTD

  00000			 AREA	 |.pdata|, PDATA
|$T41515| DCD	|$LN10@AllocateTD|
	DCD	0x40001701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AllocateTD@@YAPAU_USBTD@@XZ| PROC	; AllocateTD

; 223  : {

  00000		 |$LN10@AllocateTD|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M41512|

; 224  :     USBTD* pTD = NULL;
; 225  : 
; 226  :     if (TDUsage < NO_TD)

  00004	e59f504c	 ldr         r5, [pc, #0x4C]
  00008	e3a04000	 mov         r4, #0
  0000c	e5956008	 ldr         r6, [r5, #8]
  00010	e3560080	 cmp         r6, #0x80
  00014	2a00000c	 bcs         |$LN1@AllocateTD|

; 227  :     {
; 228  :         pTD = (USBTD*)RemoveElementFromListStart((ListHead**)&pFreeTD);

  00018	e5954000	 ldr         r4, [r5]

; 229  :         memset((PUCHAR) pTD, 0, sizeof(USBTD));

  0001c	e3a01000	 mov         r1, #0
  00020	e3540000	 cmp         r4, #0
  00024	15943000	 ldrne       r3, [r4]
  00028	13a02000	 movne       r2, #0
  0002c	15853000	 strne       r3, [r5]
  00030	15842000	 strne       r2, [r4]
  00034	03a04000	 moveq       r4, #0
  00038	e1a00004	 mov         r0, r4
  0003c	e3a02064	 mov         r2, #0x64
  00040	eb000000	 bl          memset

; 230  : 
; 231  :         TDUsage ++;

  00044	e2863001	 add         r3, r6, #1
  00048	e5853008	 str         r3, [r5, #8]
  0004c		 |$LN1@AllocateTD|

; 232  :     }
; 233  : 
; 234  :     return pTD;
; 235  : }

  0004c	e1a00004	 mov         r0, r4
  00050	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$LN11@AllocateTD|
  00058		 |$LN12@AllocateTD|
  00058	00000000	 DCD         |pFreeTD|
  0005c		 |$M41513|

			 ENDP  ; |?AllocateTD@@YAPAU_USBTD@@XZ|, AllocateTD

	EXPORT	|?FreeED@@YAXPAU_USBED@@@Z|		; FreeED

  00000			 AREA	 |.pdata|, PDATA
|$T41538| DCD	|$LN17@FreeED|
	DCD	0x40001601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?FreeED@@YAXPAU_USBED@@@Z| PROC	; FreeED

; 244  : {

  00000		 |$LN17@FreeED|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M41535|

; 245  :     if (EDUsage > 0)

  00004	e59f1048	 ldr         r1, [pc, #0x48]
  00008	e591e008	 ldr         lr, [r1, #8]
  0000c	e35e0000	 cmp         lr, #0
  00010	0a000007	 beq         |$LN2@FreeED|

; 246  :     {
; 247  :         AddElementToListEnd((ListHead*)pElement, (ListHead**)&pFreeED);

  00014	e3a03000	 mov         r3, #0
  00018	e5803000	 str         r3, [r0]
  0001c	e5912000	 ldr         r2, [r1]
  00020	e3520000	 cmp         r2, #0
  00024	1a000005	 bne         |$LN14@FreeED|
  00028	e5810000	 str         r0, [r1]
  0002c		 |$LN5@FreeED|

; 248  :         EDUsage --;

  0002c	e24e3001	 sub         r3, lr, #1
  00030	e5813008	 str         r3, [r1, #8]
  00034		 |$LN2@FreeED|

; 249  :     }
; 250  :     else
; 251  :     {
; 252  :         DEBUGCHK(FALSE);
; 253  :     }
; 254  : }

  00034	e49de004	 ldr         lr, [sp], #4
  00038	e12fff1e	 bx          lr

; 246  :     {
; 247  :         AddElementToListEnd((ListHead*)pElement, (ListHead**)&pFreeED);

  0003c		 |$LL7@FreeED|
  0003c	e5922000	 ldr         r2, [r2]
  00040		 |$LN14@FreeED|
  00040	e5923000	 ldr         r3, [r2]
  00044	e3530000	 cmp         r3, #0
  00048	1afffffb	 bne         |$LL7@FreeED|
  0004c	e5820000	 str         r0, [r2]
  00050	eafffff5	 b           |$LN5@FreeED|
  00054		 |$LN18@FreeED|
  00054		 |$LN19@FreeED|
  00054	00000000	 DCD         |pFreeED|
  00058		 |$M41536|

			 ENDP  ; |?FreeED@@YAXPAU_USBED@@@Z|, FreeED

	EXPORT	|?FreeTD@@YAXPAU_USBTD@@@Z|		; FreeTD

  00000			 AREA	 |.pdata|, PDATA
|$T41561| DCD	|$LN17@FreeTD|
	DCD	0x40001601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?FreeTD@@YAXPAU_USBTD@@@Z| PROC	; FreeTD

; 263  : {

  00000		 |$LN17@FreeTD|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M41558|

; 264  :     if (TDUsage > 0)

  00004	e59f1048	 ldr         r1, [pc, #0x48]
  00008	e591e008	 ldr         lr, [r1, #8]
  0000c	e35e0000	 cmp         lr, #0
  00010	0a000007	 beq         |$LN2@FreeTD|

; 265  :     {
; 266  :         AddElementToListEnd((ListHead*)pElement, (ListHead**)&pFreeTD);

  00014	e3a03000	 mov         r3, #0
  00018	e5803000	 str         r3, [r0]
  0001c	e5912000	 ldr         r2, [r1]
  00020	e3520000	 cmp         r2, #0
  00024	1a000005	 bne         |$LN14@FreeTD|
  00028	e5810000	 str         r0, [r1]
  0002c		 |$LN5@FreeTD|

; 267  :         TDUsage --;

  0002c	e24e3001	 sub         r3, lr, #1
  00030	e5813008	 str         r3, [r1, #8]
  00034		 |$LN2@FreeTD|

; 268  :     }
; 269  :     else
; 270  :     {
; 271  :         DEBUGCHK(FALSE);
; 272  :     }
; 273  : }

  00034	e49de004	 ldr         lr, [sp], #4
  00038	e12fff1e	 bx          lr

; 265  :     {
; 266  :         AddElementToListEnd((ListHead*)pElement, (ListHead**)&pFreeTD);

  0003c		 |$LL7@FreeTD|
  0003c	e5922000	 ldr         r2, [r2]
  00040		 |$LN14@FreeTD|
  00040	e5923000	 ldr         r3, [r2]
  00044	e3530000	 cmp         r3, #0
  00048	1afffffb	 bne         |$LL7@FreeTD|
  0004c	e5820000	 str         r0, [r2]
  00050	eafffff5	 b           |$LN5@FreeTD|
  00054		 |$LN18@FreeTD|
  00054		 |$LN19@FreeTD|
  00054	00000000	 DCD         |pFreeTD|
  00058		 |$M41559|

			 ENDP  ; |?FreeTD@@YAXPAU_USBTD@@@Z|, FreeTD

	END
