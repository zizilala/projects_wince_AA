; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\COMMON\ETHDRV\RTL8139\rtl8139.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_1EC@BJGONOOH@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAI?$AAn?$AAi?$AAt?$AAD?$AAM?$AAA?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@CMDEMLIC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAI?$AAn?$AAi?$AAt?$AAD?$AAM?$AAA?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAB?$AAu?$AAf@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@FLCJJDFI@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAI?$AAn?$AAi?$AAt?$AAD?$AAM?$AAA?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx@| [ DATA ] ; `string'
	EXPORT	|RTL8139InitDMABuffer|
	IMPORT	|OALPAtoVA|
	IMPORT	|OALVAtoPA|
	IMPORT	|OALLogSerial|
	IMPORT	|dpCurSettings|

  00000			 AREA	 |.bss|, NOINIT
|g_rtl8139| %	0x24

  00000			 AREA	 |.pdata|, PDATA
|$T41666| DCD	|$LN23@RTL8139Ini|
	DCD	0x4000a304
; File c:\wince600\platform\common\src\common\ethdrv\rtl8139\rtl8139.c

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@BJGONOOH@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAI?$AAn?$AAi?$AAt?$AAD?$AAM?$AAA?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6@| DCB "-"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "D"
	DCB	0x0, "M", 0x0, "A", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, "(", 0x0, "r", 0x0, "c", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@CMDEMLIC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAI?$AAn?$AAi?$AAt?$AAD?$AAM?$AAA?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAB?$AAu?$AAf@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "D"
	DCB	0x0, "M", 0x0, "A", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "B", 0x0, "u"
	DCB	0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, "o", 0x0, " ", 0x0, "s", 0x0, "m", 0x0, "a"
	DCB	0x0, "l", 0x0, "l", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@FLCJJDFI@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAI?$AAn?$AAi?$AAt?$AAD?$AAM?$AAA?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx@| DCB "+"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "D"
	DCB	0x0, "M", 0x0, "A", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |RTL8139InitDMABuffer| PROC

; 151  : {

  00000		 |$LN23@RTL8139Ini|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd028	 sub         sp, sp, #0x28
  00010		 |$M41663|

; 152  :     BOOL rc = FALSE;

  00010	e3a03000	 mov         r3, #0
  00014	e58d3000	 str         r3, [sp]

; 153  :     UINT32 ph;
; 154  : 
; 155  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (
; 156  :         L"+RTL8139InitDMABuffer(0x%08x, 0x%08x)\r\n", address, size
; 157  :     ));

  00018	e59f325c	 ldr         r3, [pc, #0x25C]
  0001c	e5933440	 ldr         r3, [r3, #0x440]
  00020	e3130a02	 tst         r3, #2, 20
  00024	0a00000a	 beq         |$LN13@RTL8139Ini|
  00028	e59f324c	 ldr         r3, [pc, #0x24C]
  0002c	e5933440	 ldr         r3, [r3, #0x440]
  00030	e3130004	 tst         r3, #4
  00034	0a000006	 beq         |$LN13@RTL8139Ini|
  00038	e59d2034	 ldr         r2, [sp, #0x34]
  0003c	e59d1030	 ldr         r1, [sp, #0x30]
  00040	e59f0240	 ldr         r0, [pc, #0x240]
  00044	eb000000	 bl          OALLogSerial
  00048	e3a03001	 mov         r3, #1
  0004c	e58d300c	 str         r3, [sp, #0xC]
  00050	ea000001	 b           |$LN14@RTL8139Ini|
  00054		 |$LN13@RTL8139Ini|
  00054	e3a03000	 mov         r3, #0
  00058	e58d300c	 str         r3, [sp, #0xC]
  0005c		 |$LN14@RTL8139Ini|

; 158  : 
; 159  :     ph = OALVAtoPA((VOID*)address);

  0005c	e59d0030	 ldr         r0, [sp, #0x30]
  00060	eb000000	 bl          OALVAtoPA
  00064	e58d0010	 str         r0, [sp, #0x10]
  00068	e59d3010	 ldr         r3, [sp, #0x10]
  0006c	e58d3004	 str         r3, [sp, #4]

; 160  :     if ((ph & 0x03) != 0) {

  00070	e59d3004	 ldr         r3, [sp, #4]
  00074	e3130003	 tst         r3, #3
  00078	0a00000a	 beq         |$LN10@RTL8139Ini|

; 161  :         size -= 4 - (ph & 0x03);

  0007c	e59d3004	 ldr         r3, [sp, #4]
  00080	e2033003	 and         r3, r3, #3
  00084	e2632004	 rsb         r2, r3, #4
  00088	e59d3034	 ldr         r3, [sp, #0x34]
  0008c	e0433002	 sub         r3, r3, r2
  00090	e58d3034	 str         r3, [sp, #0x34]

; 162  :         ph = (ph + 3) & ~0x03;

  00094	e59d3004	 ldr         r3, [sp, #4]
  00098	e2832003	 add         r2, r3, #3
  0009c	e3e03003	 mvn         r3, #3
  000a0	e0023003	 and         r3, r2, r3
  000a4	e58d3004	 str         r3, [sp, #4]
  000a8		 |$LN10@RTL8139Ini|

; 163  :     }
; 164  : 
; 165  :     g_rtl8139.txBuffer = (UINT32)OALPAtoUA(ph);

  000a8	e3a01000	 mov         r1, #0
  000ac	e59d0004	 ldr         r0, [sp, #4]
  000b0	eb000000	 bl          OALPAtoVA
  000b4	e58d0014	 str         r0, [sp, #0x14]
  000b8	e59d2014	 ldr         r2, [sp, #0x14]
  000bc	e59f31c0	 ldr         r3, [pc, #0x1C0]
  000c0	e5832004	 str         r2, [r3, #4]

; 166  :     g_rtl8139.txSize = MAC_TX_BUFFERS * MAC_TX_BUFFER_SIZE;

  000c4	e59f21b8	 ldr         r2, [pc, #0x1B8]
  000c8	e3a03b06	 mov         r3, #6, 22
  000cc	e5823008	 str         r3, [r2, #8]

; 167  :     if (g_rtl8139.txSize > size) {

  000d0	e59f31ac	 ldr         r3, [pc, #0x1AC]
  000d4	e5932008	 ldr         r2, [r3, #8]
  000d8	e59d3034	 ldr         r3, [sp, #0x34]
  000dc	e1520003	 cmp         r2, r3
  000e0	9a00000b	 bls         |$LN9@RTL8139Ini|

; 168  :         OALMSGS(OAL_ERROR, (
; 169  :             L"ERROR: RTL8139InitDMABuffer: Buffer too small\r\n"
; 170  :         ));

  000e4	e59f3190	 ldr         r3, [pc, #0x190]
  000e8	e5933440	 ldr         r3, [r3, #0x440]
  000ec	e3130001	 tst         r3, #1
  000f0	0a000004	 beq         |$LN15@RTL8139Ini|
  000f4	e59f0184	 ldr         r0, [pc, #0x184]
  000f8	eb000000	 bl          OALLogSerial
  000fc	e3a03001	 mov         r3, #1
  00100	e58d3018	 str         r3, [sp, #0x18]
  00104	ea000001	 b           |$LN16@RTL8139Ini|
  00108		 |$LN15@RTL8139Ini|
  00108	e3a03000	 mov         r3, #0
  0010c	e58d3018	 str         r3, [sp, #0x18]
  00110		 |$LN16@RTL8139Ini|

; 171  :         goto cleanUp;

  00110	ea000042	 b           |$cleanUp$41419|
  00114		 |$LN9@RTL8139Ini|

; 172  :     }
; 173  :     size -= g_rtl8139.txSize;

  00114	e59d2034	 ldr         r2, [sp, #0x34]
  00118	e59f3164	 ldr         r3, [pc, #0x164]
  0011c	e5933008	 ldr         r3, [r3, #8]
  00120	e0423003	 sub         r3, r2, r3
  00124	e58d3034	 str         r3, [sp, #0x34]

; 174  :     ph += g_rtl8139.txSize;

  00128	e59d2004	 ldr         r2, [sp, #4]
  0012c	e59f3150	 ldr         r3, [pc, #0x150]
  00130	e5933008	 ldr         r3, [r3, #8]
  00134	e0823003	 add         r3, r2, r3
  00138	e58d3004	 str         r3, [sp, #4]

; 175  : 
; 176  :     g_rtl8139.rxBuffer = (UINT32)OALPAtoUA(ph);

  0013c	e3a01000	 mov         r1, #0
  00140	e59d0004	 ldr         r0, [sp, #4]
  00144	eb000000	 bl          OALPAtoVA
  00148	e58d001c	 str         r0, [sp, #0x1C]
  0014c	e59d201c	 ldr         r2, [sp, #0x1C]
  00150	e59f312c	 ldr         r3, [pc, #0x12C]
  00154	e5832010	 str         r2, [r3, #0x10]

; 177  :     if (size >= (64 * 1024 + 16)) {

  00158	e59d2034	 ldr         r2, [sp, #0x34]
  0015c	e3a03801	 mov         r3, #1, 16
  00160	e3833010	 orr         r3, r3, #0x10
  00164	e1520003	 cmp         r2, r3
  00168	3a000003	 bcc         |$LN8@RTL8139Ini|

; 178  :         g_rtl8139.rxSize = 64 * 1024;

  0016c	e59f2110	 ldr         r2, [pc, #0x110]
  00170	e3a03801	 mov         r3, #1, 16
  00174	e5823014	 str         r3, [r2, #0x14]
  00178	ea000026	 b           |$LN7@RTL8139Ini|
  0017c		 |$LN8@RTL8139Ini|

; 179  :     } else if (size >= (32 * 1024 + 16)) {

  0017c	e59d2034	 ldr         r2, [sp, #0x34]
  00180	e3a03902	 mov         r3, #2, 18
  00184	e3833010	 orr         r3, r3, #0x10
  00188	e1520003	 cmp         r2, r3
  0018c	3a000003	 bcc         |$LN6@RTL8139Ini|

; 180  :         g_rtl8139.rxSize = 32 * 1024;

  00190	e59f20ec	 ldr         r2, [pc, #0xEC]
  00194	e3a03902	 mov         r3, #2, 18
  00198	e5823014	 str         r3, [r2, #0x14]
  0019c	ea00001d	 b           |$LN5@RTL8139Ini|
  001a0		 |$LN6@RTL8139Ini|

; 181  :     } else if (size >= (16 * 1024 + 16)) {

  001a0	e59d2034	 ldr         r2, [sp, #0x34]
  001a4	e3a03901	 mov         r3, #1, 18
  001a8	e3833010	 orr         r3, r3, #0x10
  001ac	e1520003	 cmp         r2, r3
  001b0	3a000003	 bcc         |$LN4@RTL8139Ini|

; 182  :         g_rtl8139.rxSize = 16 * 1024;

  001b4	e59f20c8	 ldr         r2, [pc, #0xC8]
  001b8	e3a03901	 mov         r3, #1, 18
  001bc	e5823014	 str         r3, [r2, #0x14]
  001c0	ea000014	 b           |$LN3@RTL8139Ini|
  001c4		 |$LN4@RTL8139Ini|

; 183  :     } else if (size >= (8 * 1024 + 16)) {

  001c4	e59d2034	 ldr         r2, [sp, #0x34]
  001c8	e3a03a02	 mov         r3, #2, 20
  001cc	e3833010	 orr         r3, r3, #0x10
  001d0	e1520003	 cmp         r2, r3
  001d4	3a000003	 bcc         |$LN2@RTL8139Ini|

; 184  :         g_rtl8139.rxSize = 8 * 1024;

  001d8	e59f20a4	 ldr         r2, [pc, #0xA4]
  001dc	e3a03a02	 mov         r3, #2, 20
  001e0	e5823014	 str         r3, [r2, #0x14]

; 185  :     } else {

  001e4	ea00000b	 b           |$LN1@RTL8139Ini|
  001e8		 |$LN2@RTL8139Ini|

; 186  :         OALMSGS(OAL_ERROR, (
; 187  :             L"ERROR: RTL8139InitDMABuffer: Buffer too small\r\n"
; 188  :         ));

  001e8	e59f308c	 ldr         r3, [pc, #0x8C]
  001ec	e5933440	 ldr         r3, [r3, #0x440]
  001f0	e3130001	 tst         r3, #1
  001f4	0a000004	 beq         |$LN17@RTL8139Ini|
  001f8	e59f0080	 ldr         r0, [pc, #0x80]
  001fc	eb000000	 bl          OALLogSerial
  00200	e3a03001	 mov         r3, #1
  00204	e58d3020	 str         r3, [sp, #0x20]
  00208	ea000001	 b           |$LN18@RTL8139Ini|
  0020c		 |$LN17@RTL8139Ini|
  0020c	e3a03000	 mov         r3, #0
  00210	e58d3020	 str         r3, [sp, #0x20]
  00214		 |$LN18@RTL8139Ini|

; 189  :         goto cleanUp;

  00214	ea000001	 b           |$cleanUp$41419|
  00218		 |$LN1@RTL8139Ini|
  00218		 |$LN3@RTL8139Ini|
  00218		 |$LN5@RTL8139Ini|
  00218		 |$LN7@RTL8139Ini|

; 190  :     }
; 191  : 
; 192  :     rc = TRUE;

  00218	e3a03001	 mov         r3, #1
  0021c	e58d3000	 str         r3, [sp]
  00220		 |$cleanUp$41419|

; 193  : 
; 194  : cleanUp:
; 195  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (L"-RTL8139InitDMABuffer(rc = %d)\r\n", rc));

  00220	e59f3054	 ldr         r3, [pc, #0x54]
  00224	e5933440	 ldr         r3, [r3, #0x440]
  00228	e3130a02	 tst         r3, #2, 20
  0022c	0a000009	 beq         |$LN19@RTL8139Ini|
  00230	e59f3044	 ldr         r3, [pc, #0x44]
  00234	e5933440	 ldr         r3, [r3, #0x440]
  00238	e3130004	 tst         r3, #4
  0023c	0a000005	 beq         |$LN19@RTL8139Ini|
  00240	e59d1000	 ldr         r1, [sp]
  00244	e59f002c	 ldr         r0, [pc, #0x2C]
  00248	eb000000	 bl          OALLogSerial
  0024c	e3a03001	 mov         r3, #1
  00250	e58d3024	 str         r3, [sp, #0x24]
  00254	ea000001	 b           |$LN20@RTL8139Ini|
  00258		 |$LN19@RTL8139Ini|
  00258	e3a03000	 mov         r3, #0
  0025c	e58d3024	 str         r3, [sp, #0x24]
  00260		 |$LN20@RTL8139Ini|

; 196  :     return rc;

  00260	e59d3000	 ldr         r3, [sp]
  00264	e58d3008	 str         r3, [sp, #8]

; 197  : }

  00268	e59d0008	 ldr         r0, [sp, #8]
  0026c	e28dd028	 add         sp, sp, #0x28
  00270	e89d6000	 ldmia       sp, {sp, lr}
  00274	e12fff1e	 bx          lr
  00278		 |$LN24@RTL8139Ini|
  00278		 |$LN25@RTL8139Ini|
  00278	00000000	 DCD         |??_C@_1EC@BJGONOOH@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAI?$AAn?$AAi?$AAt?$AAD?$AAM?$AAA?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6@|
  0027c		 |$LN26@RTL8139Ini|
  0027c	00000000	 DCD         |dpCurSettings|
  00280		 |$LN27@RTL8139Ini|
  00280	00000000	 DCD         |??_C@_1GA@CMDEMLIC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAI?$AAn?$AAi?$AAt?$AAD?$AAM?$AAA?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAB?$AAu?$AAf@|
  00284		 |$LN28@RTL8139Ini|
  00284	00000000	 DCD         |g_rtl8139|
  00288		 |$LN29@RTL8139Ini|
  00288	00000000	 DCD         |??_C@_1FA@FLCJJDFI@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAI?$AAn?$AAi?$AAt?$AAD?$AAM?$AAA?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx@|
  0028c		 |$M41664|

			 ENDP  ; |RTL8139InitDMABuffer|

	EXPORT	|??_C@_1DA@OOAHMHIE@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@FCPIDOII@?$AA?5?$AAL?$AAi?$AAn?$AAk?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@LFOPKDIL@?$AA?5?$AAW?$AAa?$AAi?$AAt?$AA?5?$AAt?$AAi?$AAm?$AAo?$AAu?$AAt?$AAe?$AAd?$AA?0?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@HMNGGEAC@?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAl?$AAi?$AAn?$AAk?$AA?4?$AA?4?$AA?4?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@KKKDLKNL@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|RTL8139Init|
	IMPORT	|WRITE_PORT_USHORT|
	IMPORT	|WRITE_PORT_ULONG|
	IMPORT	|READ_PORT_ULONG|
	IMPORT	|OALGetTickCount|
	IMPORT	|READ_PORT_UCHAR|
	IMPORT	|WRITE_PORT_UCHAR|

  00008			 AREA	 |.pdata|, PDATA
|$T41688| DCD	|$LN29@RTL8139Ini@2|
	DCD	0x40010d04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@OOAHMHIE@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "("
	DCB	0x0, "r", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@FCPIDOII@?$AA?5?$AAL?$AAi?$AAn?$AAk?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "L", 0x0, "i", 0x0, "n", 0x0, "k", 0x0, " ", 0x0, "d"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, "e"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@LFOPKDIL@?$AA?5?$AAW?$AAa?$AAi?$AAt?$AA?5?$AAt?$AAi?$AAm?$AAo?$AAu?$AAt?$AAe?$AAd?$AA?0?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "W", 0x0, "a", 0x0, "i", 0x0, "t", 0x0, " ", 0x0, "t"
	DCB	0x0, "i", 0x0, "m", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, "e"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "i"
	DCB	0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@HMNGGEAC@?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAl?$AAi?$AAn?$AAk?$AA?4?$AA?4?$AA?4?$AA?$AA@| DCB "R"
	DCB	0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3", 0x0, "9"
	DCB	0x0, ":", 0x0, " ", 0x0, "W", 0x0, "a", 0x0, "i", 0x0, "t"
	DCB	0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "l"
	DCB	0x0, "i", 0x0, "n", 0x0, "k", 0x0, ".", 0x0, ".", 0x0, "."
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@KKKDLKNL@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF@| DCB "+"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "("
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  0028c			 AREA	 |.text|, CODE, ARM

  0028c		 |RTL8139Init| PROC

; 204  : {

  0028c		 |$LN29@RTL8139Ini@2|
  0028c	e1a0c00d	 mov         r12, sp
  00290	e92d0007	 stmdb       sp!, {r0 - r2}
  00294	e92d5000	 stmdb       sp!, {r12, lr}
  00298	e24dd04c	 sub         sp, sp, #0x4C
  0029c		 |$M41685|

; 205  :     BOOL rc = FALSE;

  0029c	e3a03000	 mov         r3, #0
  002a0	e58d3000	 str         r3, [sp]

; 206  :     UINT32 u32, address, i, start;
; 207  :     
; 208  : 
; 209  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (
; 210  :         L"+RTL8139Init(0x%08x, 0x%08x, 0x%08x)\r\n", pAddress, offset, mac
; 211  :     ));

  002a4	e59f33fc	 ldr         r3, [pc, #0x3FC]
  002a8	e5933440	 ldr         r3, [r3, #0x440]
  002ac	e3130a02	 tst         r3, #2, 20
  002b0	0a00000b	 beq         |$LN17@RTL8139Ini@2|
  002b4	e59f33ec	 ldr         r3, [pc, #0x3EC]
  002b8	e5933440	 ldr         r3, [r3, #0x440]
  002bc	e3130004	 tst         r3, #4
  002c0	0a000007	 beq         |$LN17@RTL8139Ini@2|
  002c4	e59d305c	 ldr         r3, [sp, #0x5C]
  002c8	e59d2058	 ldr         r2, [sp, #0x58]
  002cc	e59d1054	 ldr         r1, [sp, #0x54]
  002d0	e59f03e4	 ldr         r0, [pc, #0x3E4]
  002d4	eb000000	 bl          OALLogSerial
  002d8	e3a03001	 mov         r3, #1
  002dc	e58d3018	 str         r3, [sp, #0x18]
  002e0	ea000001	 b           |$LN18@RTL8139Ini@2|
  002e4		 |$LN17@RTL8139Ini@2|
  002e4	e3a03000	 mov         r3, #0
  002e8	e58d3018	 str         r3, [sp, #0x18]
  002ec		 |$LN18@RTL8139Ini@2|

; 212  : 
; 213  :     // Get virtual uncached address
; 214  :     g_rtl8139.address = (UINT32)pAddress;

  002ec	e59d2054	 ldr         r2, [sp, #0x54]
  002f0	e59f33b4	 ldr         r3, [pc, #0x3B4]
  002f4	e5832000	 str         r2, [r3]

; 215  : 
; 216  :     // Reset card
; 217  :     OUTPORT8((UINT8*)(g_rtl8139.address + RTL_CR), CR_RST);

  002f8	e3a01010	 mov         r1, #0x10
  002fc	e59f33a8	 ldr         r3, [pc, #0x3A8]
  00300	e5933000	 ldr         r3, [r3]
  00304	e2830037	 add         r0, r3, #0x37
  00308	eb000000	 bl          WRITE_PORT_UCHAR
  0030c		 |$LN14@RTL8139Ini@2|

; 218  :     while ((INPORT8((UINT8*)(g_rtl8139.address + RTL_CR)) & CR_RST) != 0);

  0030c	e59f3398	 ldr         r3, [pc, #0x398]
  00310	e5933000	 ldr         r3, [r3]
  00314	e2830037	 add         r0, r3, #0x37
  00318	eb000000	 bl          READ_PORT_UCHAR
  0031c	e5cd001c	 strb        r0, [sp, #0x1C]
  00320	e5dd301c	 ldrb        r3, [sp, #0x1C]
  00324	e3130010	 tst         r3, #0x10
  00328	0a000000	 beq         |$LN13@RTL8139Ini@2|
  0032c	eafffff6	 b           |$LN14@RTL8139Ini@2|
  00330		 |$LN13@RTL8139Ini@2|

; 219  : 
; 220  :     // Wait for link
; 221  :     OALMSGS(OAL_WARN, (L"RTL8139: Wait for link..."));

  00330	e59f3370	 ldr         r3, [pc, #0x370]
  00334	e5933440	 ldr         r3, [r3, #0x440]
  00338	e3130002	 tst         r3, #2
  0033c	0a000004	 beq         |$LN19@RTL8139Ini@2|
  00340	e59f0370	 ldr         r0, [pc, #0x370]
  00344	eb000000	 bl          OALLogSerial
  00348	e3a03001	 mov         r3, #1
  0034c	e58d3020	 str         r3, [sp, #0x20]
  00350	ea000001	 b           |$LN20@RTL8139Ini@2|
  00354		 |$LN19@RTL8139Ini@2|
  00354	e3a03000	 mov         r3, #0
  00358	e58d3020	 str         r3, [sp, #0x20]
  0035c		 |$LN20@RTL8139Ini@2|

; 222  :     start = OALGetTickCount();

  0035c	eb000000	 bl          OALGetTickCount
  00360	e58d0024	 str         r0, [sp, #0x24]
  00364	e59d3024	 ldr         r3, [sp, #0x24]
  00368	e58d3008	 str         r3, [sp, #8]
  0036c		 |$LN12@RTL8139Ini@2|

; 223  :     while ((INPORT8((UINT8*)(g_rtl8139.address + RTL_MSR)) & MSR_LINKB) != 0) {

  0036c	e59f3338	 ldr         r3, [pc, #0x338]
  00370	e5933000	 ldr         r3, [r3]
  00374	e2830058	 add         r0, r3, #0x58
  00378	eb000000	 bl          READ_PORT_UCHAR
  0037c	e5cd0028	 strb        r0, [sp, #0x28]
  00380	e5dd3028	 ldrb        r3, [sp, #0x28]
  00384	e3130004	 tst         r3, #4
  00388	0a000015	 beq         |$LN11@RTL8139Ini@2|

; 224  :         if ((OALGetTickCount() - start) > 5000) {

  0038c	eb000000	 bl          OALGetTickCount
  00390	e58d002c	 str         r0, [sp, #0x2C]
  00394	e59d202c	 ldr         r2, [sp, #0x2C]
  00398	e59d3008	 ldr         r3, [sp, #8]
  0039c	e0422003	 sub         r2, r2, r3
  003a0	e3a03c13	 mov         r3, #0x13, 24
  003a4	e3833088	 orr         r3, r3, #0x88
  003a8	e1520003	 cmp         r2, r3
  003ac	9a00000b	 bls         |$LN10@RTL8139Ini@2|

; 225  :             OALMSGS(OAL_WARN, (L" Wait timouted, exiting\r\n"));

  003b0	e59f32f0	 ldr         r3, [pc, #0x2F0]
  003b4	e5933440	 ldr         r3, [r3, #0x440]
  003b8	e3130002	 tst         r3, #2
  003bc	0a000004	 beq         |$LN21@RTL8139Ini@2|
  003c0	e59f02ec	 ldr         r0, [pc, #0x2EC]
  003c4	eb000000	 bl          OALLogSerial
  003c8	e3a03001	 mov         r3, #1
  003cc	e58d3030	 str         r3, [sp, #0x30]
  003d0	ea000001	 b           |$LN22@RTL8139Ini@2|
  003d4		 |$LN21@RTL8139Ini@2|
  003d4	e3a03000	 mov         r3, #0
  003d8	e58d3030	 str         r3, [sp, #0x30]
  003dc		 |$LN22@RTL8139Ini@2|

; 226  :             goto clean;

  003dc	ea00009a	 b           |$clean$41463|
  003e0		 |$LN10@RTL8139Ini@2|

; 227  :         }            
; 228  :     }        

  003e0	eaffffe1	 b           |$LN12@RTL8139Ini@2|
  003e4		 |$LN11@RTL8139Ini@2|

; 229  :     OALMSGS(OAL_WARN, (L" Link detected\r\n"));

  003e4	e59f32bc	 ldr         r3, [pc, #0x2BC]
  003e8	e5933440	 ldr         r3, [r3, #0x440]
  003ec	e3130002	 tst         r3, #2
  003f0	0a000004	 beq         |$LN23@RTL8139Ini@2|
  003f4	e59f02b4	 ldr         r0, [pc, #0x2B4]
  003f8	eb000000	 bl          OALLogSerial
  003fc	e3a03001	 mov         r3, #1
  00400	e58d3034	 str         r3, [sp, #0x34]
  00404	ea000001	 b           |$LN24@RTL8139Ini@2|
  00408		 |$LN23@RTL8139Ini@2|
  00408	e3a03000	 mov         r3, #0
  0040c	e58d3034	 str         r3, [sp, #0x34]
  00410		 |$LN24@RTL8139Ini@2|

; 230  : 
; 231  :     // Enable TX/RX
; 232  :     OUTPORT8((UINT8*)(g_rtl8139.address + RTL_CR), CR_TE | CR_RE);

  00410	e3a0100c	 mov         r1, #0xC
  00414	e59f3290	 ldr         r3, [pc, #0x290]
  00418	e5933000	 ldr         r3, [r3]
  0041c	e2830037	 add         r0, r3, #0x37
  00420	eb000000	 bl          WRITE_PORT_UCHAR

; 233  : 
; 234  :     // Read MAC address
; 235  :     u32 = INPORT32((UINT32*)(g_rtl8139.address + RTL_IDR0));

  00424	e59f3280	 ldr         r3, [pc, #0x280]
  00428	e5930000	 ldr         r0, [r3]
  0042c	eb000000	 bl          READ_PORT_ULONG
  00430	e58d0038	 str         r0, [sp, #0x38]
  00434	e59d3038	 ldr         r3, [sp, #0x38]
  00438	e58d300c	 str         r3, [sp, #0xC]

; 236  :     mac[0] = (UINT16)(u32);

  0043c	e59d300c	 ldr         r3, [sp, #0xC]
  00440	e1a02803	 mov         r2, r3, lsl #16
  00444	e1a02822	 mov         r2, r2, lsr #16
  00448	e59d305c	 ldr         r3, [sp, #0x5C]
  0044c	e1c320b0	 strh        r2, [r3]

; 237  :     mac[1] = (UINT16)(u32 >> 16);

  00450	e59d300c	 ldr         r3, [sp, #0xC]
  00454	e1a03823	 mov         r3, r3, lsr #16
  00458	e1a02803	 mov         r2, r3, lsl #16
  0045c	e1a02822	 mov         r2, r2, lsr #16
  00460	e59d305c	 ldr         r3, [sp, #0x5C]
  00464	e2833002	 add         r3, r3, #2
  00468	e1c320b0	 strh        r2, [r3]

; 238  :     u32 = INPORT32((UINT32*)(g_rtl8139.address + RTL_IDR4));

  0046c	e59f3238	 ldr         r3, [pc, #0x238]
  00470	e5933000	 ldr         r3, [r3]
  00474	e2830004	 add         r0, r3, #4
  00478	eb000000	 bl          READ_PORT_ULONG
  0047c	e58d003c	 str         r0, [sp, #0x3C]
  00480	e59d303c	 ldr         r3, [sp, #0x3C]
  00484	e58d300c	 str         r3, [sp, #0xC]

; 239  :     mac[2] = (UINT16)(u32);

  00488	e59d300c	 ldr         r3, [sp, #0xC]
  0048c	e1a02803	 mov         r2, r3, lsl #16
  00490	e1a02822	 mov         r2, r2, lsr #16
  00494	e59d305c	 ldr         r3, [sp, #0x5C]
  00498	e2833004	 add         r3, r3, #4
  0049c	e1c320b0	 strh        r2, [r3]

; 240  : 
; 241  :     // Set TX descriptors
; 242  :     address = OALVAtoPA((VOID*)g_rtl8139.txBuffer);

  004a0	e59f3204	 ldr         r3, [pc, #0x204]
  004a4	e5930004	 ldr         r0, [r3, #4]
  004a8	eb000000	 bl          OALVAtoPA
  004ac	e58d0040	 str         r0, [sp, #0x40]
  004b0	e59d3040	 ldr         r3, [sp, #0x40]
  004b4	e58d3010	 str         r3, [sp, #0x10]

; 243  :     offset = RTL_TSAD0;

  004b8	e3a03020	 mov         r3, #0x20
  004bc	e58d3058	 str         r3, [sp, #0x58]

; 244  :     for (i = 0; i < MAC_TX_BUFFERS; i++) {

  004c0	e3a03000	 mov         r3, #0
  004c4	e58d3004	 str         r3, [sp, #4]
  004c8	ea000002	 b           |$LN9@RTL8139Ini@2|
  004cc		 |$LN8@RTL8139Ini@2|
  004cc	e59d3004	 ldr         r3, [sp, #4]
  004d0	e2833001	 add         r3, r3, #1
  004d4	e58d3004	 str         r3, [sp, #4]
  004d8		 |$LN9@RTL8139Ini@2|
  004d8	e59d3004	 ldr         r3, [sp, #4]
  004dc	e3530004	 cmp         r3, #4
  004e0	2a00000c	 bcs         |$LN7@RTL8139Ini@2|

; 245  :         OUTPORT32((UINT32*)(g_rtl8139.address + offset), address);

  004e4	e59d1010	 ldr         r1, [sp, #0x10]
  004e8	e59f31bc	 ldr         r3, [pc, #0x1BC]
  004ec	e5932000	 ldr         r2, [r3]
  004f0	e59d3058	 ldr         r3, [sp, #0x58]
  004f4	e0820003	 add         r0, r2, r3
  004f8	eb000000	 bl          WRITE_PORT_ULONG

; 246  :         address += MAC_TX_BUFFER_SIZE;

  004fc	e59d3010	 ldr         r3, [sp, #0x10]
  00500	e2833c06	 add         r3, r3, #6, 24
  00504	e58d3010	 str         r3, [sp, #0x10]

; 247  :         offset += 4;

  00508	e59d3058	 ldr         r3, [sp, #0x58]
  0050c	e2833004	 add         r3, r3, #4
  00510	e58d3058	 str         r3, [sp, #0x58]

; 248  :     }

  00514	eaffffec	 b           |$LN8@RTL8139Ini@2|
  00518		 |$LN7@RTL8139Ini@2|

; 249  :     g_rtl8139.txPos = 0;

  00518	e59f218c	 ldr         r2, [pc, #0x18C]
  0051c	e3a03000	 mov         r3, #0
  00520	e582300c	 str         r3, [r2, #0xC]

; 250  : 
; 251  :     // Set TX DMA burst size per TX DMA burst & standard interframe gap
; 252  :     OUTPORT32((UINT32*)(g_rtl8139.address + RTL_TCR), TCR_IFG_STD|TCR_MXDMA1024);

  00524	e3a01403	 mov         r1, #3, 8
  00528	e3811c06	 orr         r1, r1, #6, 24
  0052c	e59f3178	 ldr         r3, [pc, #0x178]
  00530	e5933000	 ldr         r3, [r3]
  00534	e2830040	 add         r0, r3, #0x40
  00538	eb000000	 bl          WRITE_PORT_ULONG

; 253  : 
; 254  :     // Clear multicast hash registers
; 255  :     g_rtl8139.hash[0] = g_rtl8139.hash[1] = 0;

  0053c	e59f2168	 ldr         r2, [pc, #0x168]
  00540	e3a03000	 mov         r3, #0
  00544	e5823020	 str         r3, [r2, #0x20]
  00548	e59f315c	 ldr         r3, [pc, #0x15C]
  0054c	e5932020	 ldr         r2, [r3, #0x20]
  00550	e59f3154	 ldr         r3, [pc, #0x154]
  00554	e583201c	 str         r2, [r3, #0x1C]

; 256  :     OUTPORT32((UINT32*)(g_rtl8139.address + RTL_MAR0), 0);

  00558	e3a01000	 mov         r1, #0
  0055c	e59f3148	 ldr         r3, [pc, #0x148]
  00560	e5933000	 ldr         r3, [r3]
  00564	e2830008	 add         r0, r3, #8
  00568	eb000000	 bl          WRITE_PORT_ULONG

; 257  :     OUTPORT32((UINT32*)(g_rtl8139.address + RTL_MAR4), 0);

  0056c	e3a01000	 mov         r1, #0
  00570	e59f3134	 ldr         r3, [pc, #0x134]
  00574	e5933000	 ldr         r3, [r3]
  00578	e283000c	 add         r0, r3, #0xC
  0057c	eb000000	 bl          WRITE_PORT_ULONG

; 258  : 
; 259  :     // Configure RX
; 260  :     if (g_rtl8139.rxSize >= 64 * 1024) {

  00580	e59f3124	 ldr         r3, [pc, #0x124]
  00584	e5933014	 ldr         r3, [r3, #0x14]
  00588	e3530801	 cmp         r3, #1, 16
  0058c	3a000002	 bcc         |$LN6@RTL8139Ini@2|

; 261  :         u32 = RCR_RBLEN64;

  00590	e3a03b06	 mov         r3, #6, 22
  00594	e58d300c	 str         r3, [sp, #0xC]
  00598	ea00000f	 b           |$LN5@RTL8139Ini@2|
  0059c		 |$LN6@RTL8139Ini@2|

; 262  :     } else if (g_rtl8139.rxSize >= 32 * 1024) {

  0059c	e59f3108	 ldr         r3, [pc, #0x108]
  005a0	e5933014	 ldr         r3, [r3, #0x14]
  005a4	e3530902	 cmp         r3, #2, 18
  005a8	3a000002	 bcc         |$LN4@RTL8139Ini@2|

; 263  :         u32 = RCR_RBLEN32;

  005ac	e3a03a01	 mov         r3, #1, 20
  005b0	e58d300c	 str         r3, [sp, #0xC]
  005b4	ea000008	 b           |$LN3@RTL8139Ini@2|
  005b8		 |$LN4@RTL8139Ini@2|

; 264  :     } else if (g_rtl8139.rxSize >= 16 * 1024) {

  005b8	e59f30ec	 ldr         r3, [pc, #0xEC]
  005bc	e5933014	 ldr         r3, [r3, #0x14]
  005c0	e3530901	 cmp         r3, #1, 18
  005c4	3a000002	 bcc         |$LN2@RTL8139Ini@2|

; 265  :         u32 = RCR_RBLEN16;

  005c8	e3a03b02	 mov         r3, #2, 22
  005cc	e58d300c	 str         r3, [sp, #0xC]

; 266  :     } else {

  005d0	ea000001	 b           |$LN1@RTL8139Ini@2|
  005d4		 |$LN2@RTL8139Ini@2|

; 267  :         u32 = RCR_RBLEN8;

  005d4	e3a03000	 mov         r3, #0
  005d8	e58d300c	 str         r3, [sp, #0xC]
  005dc		 |$LN1@RTL8139Ini@2|
  005dc		 |$LN3@RTL8139Ini@2|
  005dc		 |$LN5@RTL8139Ini@2|

; 268  :     }
; 269  :     u32 |= RCR_RXFTH16 | RCR_MXDMA16 | RCR_AR | RCR_AB | RCR_APM;

  005dc	e59d300c	 ldr         r3, [sp, #0xC]
  005e0	e383301a	 orr         r3, r3, #0x1A
  005e4	e58d300c	 str         r3, [sp, #0xC]

; 270  :     OUTPORT32((UINT32*)(g_rtl8139.address + RTL_RCR),  u32);

  005e8	e59d100c	 ldr         r1, [sp, #0xC]
  005ec	e59f30b8	 ldr         r3, [pc, #0xB8]
  005f0	e5933000	 ldr         r3, [r3]
  005f4	e2830044	 add         r0, r3, #0x44
  005f8	eb000000	 bl          WRITE_PORT_ULONG

; 271  :     OUTPORT32(
; 272  :         (UINT32*)(g_rtl8139.address + RTL_RBSTART),
; 273  :         OALVAtoPA((VOID*)g_rtl8139.rxBuffer)
; 274  :     );

  005fc	e59f30a8	 ldr         r3, [pc, #0xA8]
  00600	e5930010	 ldr         r0, [r3, #0x10]
  00604	eb000000	 bl          OALVAtoPA
  00608	e58d0044	 str         r0, [sp, #0x44]
  0060c	e59d1044	 ldr         r1, [sp, #0x44]
  00610	e59f3094	 ldr         r3, [pc, #0x94]
  00614	e5933000	 ldr         r3, [r3]
  00618	e2830030	 add         r0, r3, #0x30
  0061c	eb000000	 bl          WRITE_PORT_ULONG

; 275  : 
; 276  :     // Actual filter 
; 277  :     g_rtl8139.filter = PACKET_TYPE_DIRECTED | PACKET_TYPE_BROADCAST;

  00620	e59f2084	 ldr         r2, [pc, #0x84]
  00624	e3a03009	 mov         r3, #9
  00628	e5823018	 str         r3, [r2, #0x18]

; 278  :     
; 279  :     // Clear all interrupts
; 280  :     OUTPORT16((UINT16*)(g_rtl8139.address + RTL_ISR), 0xFFFF);

  0062c	e3a01cff	 mov         r1, #0xFF, 24
  00630	e38110ff	 orr         r1, r1, #0xFF
  00634	e59f3070	 ldr         r3, [pc, #0x70]
  00638	e5933000	 ldr         r3, [r3]
  0063c	e283003e	 add         r0, r3, #0x3E
  00640	eb000000	 bl          WRITE_PORT_USHORT

; 281  : 
; 282  :     // Done
; 283  :     rc = TRUE;

  00644	e3a03001	 mov         r3, #1
  00648	e58d3000	 str         r3, [sp]
  0064c		 |$clean$41463|

; 284  : 
; 285  : clean:
; 286  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (L"-RTL8139Init(rc = %d)\r\n", rc));

  0064c	e59f3054	 ldr         r3, [pc, #0x54]
  00650	e5933440	 ldr         r3, [r3, #0x440]
  00654	e3130a02	 tst         r3, #2, 20
  00658	0a000009	 beq         |$LN25@RTL8139Ini@2|
  0065c	e59f3044	 ldr         r3, [pc, #0x44]
  00660	e5933440	 ldr         r3, [r3, #0x440]
  00664	e3130004	 tst         r3, #4
  00668	0a000005	 beq         |$LN25@RTL8139Ini@2|
  0066c	e59d1000	 ldr         r1, [sp]
  00670	e59f002c	 ldr         r0, [pc, #0x2C]
  00674	eb000000	 bl          OALLogSerial
  00678	e3a03001	 mov         r3, #1
  0067c	e58d3048	 str         r3, [sp, #0x48]
  00680	ea000001	 b           |$LN26@RTL8139Ini@2|
  00684		 |$LN25@RTL8139Ini@2|
  00684	e3a03000	 mov         r3, #0
  00688	e58d3048	 str         r3, [sp, #0x48]
  0068c		 |$LN26@RTL8139Ini@2|

; 287  :     return rc;

  0068c	e59d3000	 ldr         r3, [sp]
  00690	e58d3014	 str         r3, [sp, #0x14]

; 288  : }

  00694	e59d0014	 ldr         r0, [sp, #0x14]
  00698	e28dd04c	 add         sp, sp, #0x4C
  0069c	e89d6000	 ldmia       sp, {sp, lr}
  006a0	e12fff1e	 bx          lr
  006a4		 |$LN30@RTL8139Ini@2|
  006a4		 |$LN31@RTL8139Ini@2|
  006a4	00000000	 DCD         |??_C@_1DA@OOAHMHIE@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  006a8		 |$LN32@RTL8139Ini@2|
  006a8	00000000	 DCD         |dpCurSettings|
  006ac		 |$LN33@RTL8139Ini@2|
  006ac	00000000	 DCD         |g_rtl8139|
  006b0		 |$LN34@RTL8139Ini@2|
  006b0	00000000	 DCD         |??_C@_1CC@FCPIDOII@?$AA?5?$AAL?$AAi?$AAn?$AAk?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  006b4		 |$LN35@RTL8139Ini@2|
  006b4	00000000	 DCD         |??_C@_1DE@LFOPKDIL@?$AA?5?$AAW?$AAa?$AAi?$AAt?$AA?5?$AAt?$AAi?$AAm?$AAo?$AAu?$AAt?$AAe?$AAd?$AA?0?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@|
  006b8		 |$LN36@RTL8139Ini@2|
  006b8	00000000	 DCD         |??_C@_1DE@HMNGGEAC@?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAl?$AAi?$AAn?$AAk?$AA?4?$AA?4?$AA?4?$AA?$AA@|
  006bc		 |$LN37@RTL8139Ini@2|
  006bc	00000000	 DCD         |??_C@_1EO@KKKDLKNL@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF@|
  006c0		 |$M41686|

			 ENDP  ; |RTL8139Init|

	EXPORT	|??_C@_1DI@FILLIPNJ@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAS?$AAe?$AAn?$AAd?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA0?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@KMKHFMCO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAS?$AAe?$AAn?$AAd?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?3?$AA?5?$AAS?$AAe?$AAn?$AAd?$AA?5?$AAt?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@KFFKGBLI@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAS?$AAe?$AAn?$AAd?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|RTL8139SendFrame|
	IMPORT	|memset|
	IMPORT	|memcpy|

  00010			 AREA	 |.pdata|, PDATA
|$T41708| DCD	|$LN16@RTL8139Sen|
	DCD	0x40007e04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@FILLIPNJ@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAS?$AAe?$AAn?$AAd?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA0?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "F"
	DCB	0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "(", 0x0, "r"
	DCB	0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@KMKHFMCO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAS?$AAe?$AAn?$AAd?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?3?$AA?5?$AAS?$AAe?$AAn?$AAd?$AA?5?$AAt?$AAi@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "F"
	DCB	0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, ":", 0x0, " "
	DCB	0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@KFFKGBLI@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAS?$AAe?$AAn?$AAd?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "F"
	DCB	0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ","
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  006c0			 AREA	 |.text|, CODE, ARM

  006c0		 |RTL8139SendFrame| PROC

; 295  : {

  006c0		 |$LN16@RTL8139Sen|
  006c0	e1a0c00d	 mov         r12, sp
  006c4	e92d0003	 stmdb       sp!, {r0, r1}
  006c8	e92d5000	 stmdb       sp!, {r12, lr}
  006cc	e24dd028	 sub         sp, sp, #0x28
  006d0		 |$M41705|

; 296  :     UINT32 *pTsd;
; 297  :     UINT32 buffer, start;
; 298  :     
; 299  : 
; 300  :     OALMSGS(OAL_ETHER&&OAL_VERBOSE, (
; 301  :         L"+RTL8139SendFrame(0x%08x, %d)\r\n", pData, length
; 302  :     ));

  006d0	e59f31d0	 ldr         r3, [pc, #0x1D0]
  006d4	e5933440	 ldr         r3, [r3, #0x440]
  006d8	e3130a02	 tst         r3, #2, 20
  006dc	0a00000a	 beq         |$LN8@RTL8139Sen|
  006e0	e59f31c0	 ldr         r3, [pc, #0x1C0]
  006e4	e5933440	 ldr         r3, [r3, #0x440]
  006e8	e3130902	 tst         r3, #2, 18
  006ec	0a000006	 beq         |$LN8@RTL8139Sen|
  006f0	e59d2034	 ldr         r2, [sp, #0x34]
  006f4	e59d1030	 ldr         r1, [sp, #0x30]
  006f8	e59f01b4	 ldr         r0, [pc, #0x1B4]
  006fc	eb000000	 bl          OALLogSerial
  00700	e3a03001	 mov         r3, #1
  00704	e58d3010	 str         r3, [sp, #0x10]
  00708	ea000001	 b           |$LN9@RTL8139Sen|
  0070c		 |$LN8@RTL8139Sen|
  0070c	e3a03000	 mov         r3, #0
  00710	e58d3010	 str         r3, [sp, #0x10]
  00714		 |$LN9@RTL8139Sen|

; 303  : 
; 304  :     // Wait until buffer is released by hardware
; 305  :     pTsd = (UINT32*)(g_rtl8139.address + RTL_TSD0 + (g_rtl8139.txPos << 2));

  00714	e59f3190	 ldr         r3, [pc, #0x190]
  00718	e5933000	 ldr         r3, [r3]
  0071c	e2832010	 add         r2, r3, #0x10
  00720	e59f3184	 ldr         r3, [pc, #0x184]
  00724	e593300c	 ldr         r3, [r3, #0xC]
  00728	e1a03103	 mov         r3, r3, lsl #2
  0072c	e0823003	 add         r3, r2, r3
  00730	e58d3000	 str         r3, [sp]

; 306  :     start = OALGetTickCount();

  00734	eb000000	 bl          OALGetTickCount
  00738	e58d0014	 str         r0, [sp, #0x14]
  0073c	e59d3014	 ldr         r3, [sp, #0x14]
  00740	e58d3004	 str         r3, [sp, #4]
  00744		 |$LN5@RTL8139Sen|

; 307  :     while ((INPORT32(pTsd) & TSR_OWN) == 0) {

  00744	e59d0000	 ldr         r0, [sp]
  00748	eb000000	 bl          READ_PORT_ULONG
  0074c	e58d0018	 str         r0, [sp, #0x18]
  00750	e59d3018	 ldr         r3, [sp, #0x18]
  00754	e3130a02	 tst         r3, #2, 20
  00758	1a000015	 bne         |$LN4@RTL8139Sen|

; 308  :         if ((OALGetTickCount() - start) > 2000) {

  0075c	eb000000	 bl          OALGetTickCount
  00760	e58d001c	 str         r0, [sp, #0x1C]
  00764	e59d201c	 ldr         r2, [sp, #0x1C]
  00768	e59d3004	 ldr         r3, [sp, #4]
  0076c	e0423003	 sub         r3, r2, r3
  00770	e3530e7d	 cmp         r3, #0x7D, 28
  00774	9a00000d	 bls         |$LN3@RTL8139Sen|

; 309  :             OALMSGS(OAL_ERROR, (L"ERROR: RTL8139SendFrame: Send timeout\r\n"));

  00778	e59f3128	 ldr         r3, [pc, #0x128]
  0077c	e5933440	 ldr         r3, [r3, #0x440]
  00780	e3130001	 tst         r3, #1
  00784	0a000004	 beq         |$LN10@RTL8139Sen|
  00788	e59f0120	 ldr         r0, [pc, #0x120]
  0078c	eb000000	 bl          OALLogSerial
  00790	e3a03001	 mov         r3, #1
  00794	e58d3020	 str         r3, [sp, #0x20]
  00798	ea000001	 b           |$LN11@RTL8139Sen|
  0079c		 |$LN10@RTL8139Sen|
  0079c	e3a03000	 mov         r3, #0
  007a0	e58d3020	 str         r3, [sp, #0x20]
  007a4		 |$LN11@RTL8139Sen|

; 310  :             return 1;

  007a4	e3a03001	 mov         r3, #1
  007a8	e1cd30bc	 strh        r3, [sp, #0xC]
  007ac	ea000038	 b           |$LN6@RTL8139Sen|
  007b0		 |$LN3@RTL8139Sen|

; 311  :         }
; 312  :     }

  007b0	eaffffe3	 b           |$LN5@RTL8139Sen|
  007b4		 |$LN4@RTL8139Sen|

; 313  : 
; 314  :     // Copy data to buffer
; 315  :     buffer = g_rtl8139.txBuffer + g_rtl8139.txPos * MAC_TX_BUFFER_SIZE;

  007b4	e59f30f0	 ldr         r3, [pc, #0xF0]
  007b8	e593100c	 ldr         r1, [r3, #0xC]
  007bc	e3a03c06	 mov         r3, #6, 24
  007c0	e0020391	 mul         r2, r1, r3
  007c4	e59f30e0	 ldr         r3, [pc, #0xE0]
  007c8	e5933004	 ldr         r3, [r3, #4]
  007cc	e0833002	 add         r3, r3, r2
  007d0	e58d3008	 str         r3, [sp, #8]

; 316  :     memcpy((VOID*)buffer, pData, length);

  007d4	e59d2034	 ldr         r2, [sp, #0x34]
  007d8	e59d1030	 ldr         r1, [sp, #0x30]
  007dc	e59d0008	 ldr         r0, [sp, #8]
  007e0	eb000000	 bl          memcpy

; 317  :     if (length < 60) {

  007e4	e59d3034	 ldr         r3, [sp, #0x34]
  007e8	e353003c	 cmp         r3, #0x3C
  007ec	2a000008	 bcs         |$LN2@RTL8139Sen|

; 318  :         memset((VOID*)(buffer + length), 0, 60 - length);

  007f0	e59d3034	 ldr         r3, [sp, #0x34]
  007f4	e263203c	 rsb         r2, r3, #0x3C
  007f8	e3a01000	 mov         r1, #0
  007fc	e59d0008	 ldr         r0, [sp, #8]
  00800	e59d3034	 ldr         r3, [sp, #0x34]
  00804	e0800003	 add         r0, r0, r3
  00808	eb000000	 bl          memset

; 319  :         length = 60;

  0080c	e3a0303c	 mov         r3, #0x3C
  00810	e58d3034	 str         r3, [sp, #0x34]
  00814		 |$LN2@RTL8139Sen|

; 320  :     }
; 321  : 
; 322  :     // Write TSD register to start send
; 323  :     OUTPORT32(pTsd, length);

  00814	e59d1034	 ldr         r1, [sp, #0x34]
  00818	e59d0000	 ldr         r0, [sp]
  0081c	eb000000	 bl          WRITE_PORT_ULONG

; 324  : 
; 325  :     // Move to next position
; 326  :     if (++g_rtl8139.txPos >= MAC_TX_BUFFERS) g_rtl8139.txPos = 0;

  00820	e59f3084	 ldr         r3, [pc, #0x84]
  00824	e593300c	 ldr         r3, [r3, #0xC]
  00828	e2832001	 add         r2, r3, #1
  0082c	e59f3078	 ldr         r3, [pc, #0x78]
  00830	e583200c	 str         r2, [r3, #0xC]
  00834	e59f3070	 ldr         r3, [pc, #0x70]
  00838	e593300c	 ldr         r3, [r3, #0xC]
  0083c	e3530004	 cmp         r3, #4
  00840	3a000002	 bcc         |$LN1@RTL8139Sen|
  00844	e59f2060	 ldr         r2, [pc, #0x60]
  00848	e3a03000	 mov         r3, #0
  0084c	e582300c	 str         r3, [r2, #0xC]
  00850		 |$LN1@RTL8139Sen|

; 327  : 
; 328  :     OALMSGS(OAL_ETHER&&OAL_VERBOSE, (L"-RTL8139SendFrame(rc = 0)\r\n"));

  00850	e59f3050	 ldr         r3, [pc, #0x50]
  00854	e5933440	 ldr         r3, [r3, #0x440]
  00858	e3130a02	 tst         r3, #2, 20
  0085c	0a000008	 beq         |$LN12@RTL8139Sen|
  00860	e59f3040	 ldr         r3, [pc, #0x40]
  00864	e5933440	 ldr         r3, [r3, #0x440]
  00868	e3130902	 tst         r3, #2, 18
  0086c	0a000004	 beq         |$LN12@RTL8139Sen|
  00870	e59f002c	 ldr         r0, [pc, #0x2C]
  00874	eb000000	 bl          OALLogSerial
  00878	e3a03001	 mov         r3, #1
  0087c	e58d3024	 str         r3, [sp, #0x24]
  00880	ea000001	 b           |$LN13@RTL8139Sen|
  00884		 |$LN12@RTL8139Sen|
  00884	e3a03000	 mov         r3, #0
  00888	e58d3024	 str         r3, [sp, #0x24]
  0088c		 |$LN13@RTL8139Sen|

; 329  :     return 0;

  0088c	e3a03000	 mov         r3, #0
  00890	e1cd30bc	 strh        r3, [sp, #0xC]
  00894		 |$LN6@RTL8139Sen|

; 330  : }

  00894	e1dd00bc	 ldrh        r0, [sp, #0xC]
  00898	e28dd028	 add         sp, sp, #0x28
  0089c	e89d6000	 ldmia       sp, {sp, lr}
  008a0	e12fff1e	 bx          lr
  008a4		 |$LN17@RTL8139Sen|
  008a4		 |$LN18@RTL8139Sen|
  008a4	00000000	 DCD         |??_C@_1DI@FILLIPNJ@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAS?$AAe?$AAn?$AAd?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA0?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  008a8		 |$LN19@RTL8139Sen|
  008a8	00000000	 DCD         |dpCurSettings|
  008ac		 |$LN20@RTL8139Sen|
  008ac	00000000	 DCD         |g_rtl8139|
  008b0		 |$LN21@RTL8139Sen|
  008b0	00000000	 DCD         |??_C@_1FA@KMKHFMCO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAS?$AAe?$AAn?$AAd?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?3?$AA?5?$AAS?$AAe?$AAn?$AAd?$AA?5?$AAt?$AAi@|
  008b4		 |$LN22@RTL8139Sen|
  008b4	00000000	 DCD         |??_C@_1EA@KFFKGBLI@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAS?$AAe?$AAn?$AAd?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  008b8		 |$M41706|

			 ENDP  ; |RTL8139SendFrame|

	EXPORT	|??_C@_1EA@DBJIJBID@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAG?$AAe?$AAt?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@FPLEEJKI@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAG?$AAe?$AAt?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|RTL8139GetFrame|
	IMPORT	|READ_PORT_USHORT|

  00018			 AREA	 |.pdata|, PDATA
|$T41724| DCD	|$LN18@RTL8139Get|
	DCD	0x4000c504

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@DBJIJBID@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAG?$AAe?$AAt?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "F", 0x0, "r"
	DCB	0x0, "a", 0x0, "m", 0x0, "e", 0x0, "(", 0x0, "l", 0x0, "e"
	DCB	0x0, "n", 0x0, "g", 0x0, "t", 0x0, "h", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@FPLEEJKI@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAG?$AAe?$AAt?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "F", 0x0, "r"
	DCB	0x0, "a", 0x0, "m", 0x0, "e", 0x0, "(", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  008b8			 AREA	 |.text|, CODE, ARM

  008b8		 |RTL8139GetFrame| PROC

; 337  : {

  008b8		 |$LN18@RTL8139Get|
  008b8	e1a0c00d	 mov         r12, sp
  008bc	e92d0003	 stmdb       sp!, {r0, r1}
  008c0	e92d5000	 stmdb       sp!, {r12, lr}
  008c4	e24dd020	 sub         sp, sp, #0x20
  008c8		 |$M41721|

; 338  :     UINT16 offset, length, status, len1;
; 339  :     BOOL ok;
; 340  :     
; 341  :     OALMSGS(OAL_ETHER&&OAL_VERBOSE, (
; 342  :         L"+RTL8139GetFrame(0x%08x, %d)\r\n", pData, *pLength
; 343  :     ));

  008c8	e59f32f0	 ldr         r3, [pc, #0x2F0]
  008cc	e5933440	 ldr         r3, [r3, #0x440]
  008d0	e3130a02	 tst         r3, #2, 20
  008d4	0a00000b	 beq         |$LN12@RTL8139Get|
  008d8	e59f32e0	 ldr         r3, [pc, #0x2E0]
  008dc	e5933440	 ldr         r3, [r3, #0x440]
  008e0	e3130902	 tst         r3, #2, 18
  008e4	0a000007	 beq         |$LN12@RTL8139Get|
  008e8	e59d302c	 ldr         r3, [sp, #0x2C]
  008ec	e1d320b0	 ldrh        r2, [r3]
  008f0	e59d1028	 ldr         r1, [sp, #0x28]
  008f4	e59f02cc	 ldr         r0, [pc, #0x2CC]
  008f8	eb000000	 bl          OALLogSerial
  008fc	e3a03001	 mov         r3, #1
  00900	e58d3014	 str         r3, [sp, #0x14]
  00904	ea000001	 b           |$LN13@RTL8139Get|
  00908		 |$LN12@RTL8139Get|
  00908	e3a03000	 mov         r3, #0
  0090c	e58d3014	 str         r3, [sp, #0x14]
  00910		 |$LN13@RTL8139Get|

; 344  : 
; 345  :     length = 0;

  00910	e3a03000	 mov         r3, #0
  00914	e1cd30b0	 strh        r3, [sp]

; 346  :     ok = FALSE;

  00918	e3a03000	 mov         r3, #0
  0091c	e58d3004	 str         r3, [sp, #4]
  00920		 |$LN9@RTL8139Get|

; 347  :     while ((INPORT8((UINT8*)(g_rtl8139.address + RTL_CR)) & CR_BUFE) == 0) {

  00920	e59f329c	 ldr         r3, [pc, #0x29C]
  00924	e5933000	 ldr         r3, [r3]
  00928	e2830037	 add         r0, r3, #0x37
  0092c	eb000000	 bl          READ_PORT_UCHAR
  00930	e5cd0018	 strb        r0, [sp, #0x18]
  00934	e5dd3018	 ldrb        r3, [sp, #0x18]
  00938	e3130001	 tst         r3, #1
  0093c	1a00007c	 bne         |$LN8@RTL8139Get|

; 348  : 
; 349  :         // Get read offset
; 350  :         offset = INPORT16((UINT16*)(g_rtl8139.address + RTL_CAPR)) + 0x10;

  00940	e59f327c	 ldr         r3, [pc, #0x27C]
  00944	e5933000	 ldr         r3, [r3]
  00948	e2830038	 add         r0, r3, #0x38
  0094c	eb000000	 bl          READ_PORT_USHORT
  00950	e1a03800	 mov         r3, r0, lsl #16
  00954	e1a03823	 mov         r3, r3, lsr #16
  00958	e1cd31ba	 strh        r3, [sp, #0x1A]
  0095c	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  00960	e2833010	 add         r3, r3, #0x10
  00964	e1a03803	 mov         r3, r3, lsl #16
  00968	e1a03823	 mov         r3, r3, lsr #16
  0096c	e1cd30ba	 strh        r3, [sp, #0xA]

; 351  : 
; 352  :         // Read packet status and length
; 353  :         status = *(UINT16*)(g_rtl8139.rxBuffer + offset);

  00970	e1dd20ba	 ldrh        r2, [sp, #0xA]
  00974	e59f3248	 ldr         r3, [pc, #0x248]
  00978	e5933010	 ldr         r3, [r3, #0x10]
  0097c	e0833002	 add         r3, r3, r2
  00980	e1d330b0	 ldrh        r3, [r3]
  00984	e1cd30bc	 strh        r3, [sp, #0xC]

; 354  :         length = *(UINT16*)(g_rtl8139.rxBuffer + offset + 2) - 4;

  00988	e1dd20ba	 ldrh        r2, [sp, #0xA]
  0098c	e59f3230	 ldr         r3, [pc, #0x230]
  00990	e5933010	 ldr         r3, [r3, #0x10]
  00994	e0833002	 add         r3, r3, r2
  00998	e2833002	 add         r3, r3, #2
  0099c	e1d330b0	 ldrh        r3, [r3]
  009a0	e2433004	 sub         r3, r3, #4
  009a4	e1a03803	 mov         r3, r3, lsl #16
  009a8	e1a03823	 mov         r3, r3, lsr #16
  009ac	e1cd30b0	 strh        r3, [sp]

; 355  : 
; 356  :         offset += 4;

  009b0	e1dd30ba	 ldrh        r3, [sp, #0xA]
  009b4	e2833004	 add         r3, r3, #4
  009b8	e1a03803	 mov         r3, r3, lsl #16
  009bc	e1a03823	 mov         r3, r3, lsr #16
  009c0	e1cd30ba	 strh        r3, [sp, #0xA]

; 357  :         if (offset >= g_rtl8139.rxSize) offset = 0;

  009c4	e1dd20ba	 ldrh        r2, [sp, #0xA]
  009c8	e59f31f4	 ldr         r3, [pc, #0x1F4]
  009cc	e5933014	 ldr         r3, [r3, #0x14]
  009d0	e1520003	 cmp         r2, r3
  009d4	3a000001	 bcc         |$LN7@RTL8139Get|
  009d8	e3a03000	 mov         r3, #0
  009dc	e1cd30ba	 strh        r3, [sp, #0xA]
  009e0		 |$LN7@RTL8139Get|

; 358  : 
; 359  :         // When packet is OK copy it to buffer
; 360  :         if ((status & RSR_ROK) != 0 && length <= *pLength) {

  009e0	e1dd30bc	 ldrh        r3, [sp, #0xC]
  009e4	e3130001	 tst         r3, #1
  009e8	0a00002d	 beq         |$LN6@RTL8139Get|
  009ec	e1dd30b0	 ldrh        r3, [sp]
  009f0	e1a02003	 mov         r2, r3
  009f4	e59d302c	 ldr         r3, [sp, #0x2C]
  009f8	e1d330b0	 ldrh        r3, [r3]
  009fc	e1520003	 cmp         r2, r3
  00a00	ca000027	 bgt         |$LN6@RTL8139Get|

; 361  :             len1 = g_rtl8139.rxSize - offset;

  00a04	e1dd20ba	 ldrh        r2, [sp, #0xA]
  00a08	e59f31b4	 ldr         r3, [pc, #0x1B4]
  00a0c	e5933014	 ldr         r3, [r3, #0x14]
  00a10	e0433002	 sub         r3, r3, r2
  00a14	e1a03803	 mov         r3, r3, lsl #16
  00a18	e1a03823	 mov         r3, r3, lsr #16
  00a1c	e1cd30b8	 strh        r3, [sp, #8]

; 362  :             if (length <= len1) {

  00a20	e1dd30b0	 ldrh        r3, [sp]
  00a24	e1a02003	 mov         r2, r3
  00a28	e1dd30b8	 ldrh        r3, [sp, #8]
  00a2c	e1520003	 cmp         r2, r3
  00a30	ca000007	 bgt         |$LN5@RTL8139Get|

; 363  :                 memcpy(pData, (VOID*)(g_rtl8139.rxBuffer + offset), length);

  00a34	e1dd20b0	 ldrh        r2, [sp]
  00a38	e1dd10ba	 ldrh        r1, [sp, #0xA]
  00a3c	e59f3180	 ldr         r3, [pc, #0x180]
  00a40	e5933010	 ldr         r3, [r3, #0x10]
  00a44	e0831001	 add         r1, r3, r1
  00a48	e59d0028	 ldr         r0, [sp, #0x28]
  00a4c	eb000000	 bl          memcpy

; 364  :             } else {

  00a50	ea000011	 b           |$LN4@RTL8139Get|
  00a54		 |$LN5@RTL8139Get|

; 365  :                 memcpy(pData, (VOID*)(g_rtl8139.rxBuffer + offset), len1);

  00a54	e1dd20b8	 ldrh        r2, [sp, #8]
  00a58	e1dd10ba	 ldrh        r1, [sp, #0xA]
  00a5c	e59f3160	 ldr         r3, [pc, #0x160]
  00a60	e5933010	 ldr         r3, [r3, #0x10]
  00a64	e0831001	 add         r1, r3, r1
  00a68	e59d0028	 ldr         r0, [sp, #0x28]
  00a6c	eb000000	 bl          memcpy

; 366  :                 memcpy(pData + len1, (VOID*)g_rtl8139.rxBuffer, length - len1);

  00a70	e1dd30b0	 ldrh        r3, [sp]
  00a74	e1a02003	 mov         r2, r3
  00a78	e1dd30b8	 ldrh        r3, [sp, #8]
  00a7c	e0422003	 sub         r2, r2, r3
  00a80	e59f313c	 ldr         r3, [pc, #0x13C]
  00a84	e5931010	 ldr         r1, [r3, #0x10]
  00a88	e1dd30b8	 ldrh        r3, [sp, #8]
  00a8c	e1a00003	 mov         r0, r3
  00a90	e59d3028	 ldr         r3, [sp, #0x28]
  00a94	e0830000	 add         r0, r3, r0
  00a98	eb000000	 bl          memcpy
  00a9c		 |$LN4@RTL8139Get|

; 367  :             }
; 368  :             ok = TRUE;

  00a9c	e3a03001	 mov         r3, #1
  00aa0	e58d3004	 str         r3, [sp, #4]
  00aa4		 |$LN6@RTL8139Get|

; 369  :         }
; 370  : 
; 371  :         // Update read offset
; 372  :         offset += (length + 7) & ~3;

  00aa4	e1dd30b0	 ldrh        r3, [sp]
  00aa8	e2832007	 add         r2, r3, #7
  00aac	e3e03003	 mvn         r3, #3
  00ab0	e0022003	 and         r2, r2, r3
  00ab4	e1dd30ba	 ldrh        r3, [sp, #0xA]
  00ab8	e0833002	 add         r3, r3, r2
  00abc	e1a03803	 mov         r3, r3, lsl #16
  00ac0	e1a03823	 mov         r3, r3, lsr #16
  00ac4	e1cd30ba	 strh        r3, [sp, #0xA]

; 373  :         if (offset >= g_rtl8139.rxSize) offset -= g_rtl8139.rxSize;

  00ac8	e1dd20ba	 ldrh        r2, [sp, #0xA]
  00acc	e59f30f0	 ldr         r3, [pc, #0xF0]
  00ad0	e5933014	 ldr         r3, [r3, #0x14]
  00ad4	e1520003	 cmp         r2, r3
  00ad8	3a000006	 bcc         |$LN3@RTL8139Get|
  00adc	e1dd20ba	 ldrh        r2, [sp, #0xA]
  00ae0	e59f30dc	 ldr         r3, [pc, #0xDC]
  00ae4	e5933014	 ldr         r3, [r3, #0x14]
  00ae8	e0423003	 sub         r3, r2, r3
  00aec	e1a03803	 mov         r3, r3, lsl #16
  00af0	e1a03823	 mov         r3, r3, lsr #16
  00af4	e1cd30ba	 strh        r3, [sp, #0xA]
  00af8		 |$LN3@RTL8139Get|

; 374  :         OUTPORT16((UINT16*)(g_rtl8139.address + RTL_CAPR), offset - 0x10);

  00af8	e1dd30ba	 ldrh        r3, [sp, #0xA]
  00afc	e2433010	 sub         r3, r3, #0x10
  00b00	e1a01803	 mov         r1, r3, lsl #16
  00b04	e1a01821	 mov         r1, r1, lsr #16
  00b08	e59f30b4	 ldr         r3, [pc, #0xB4]
  00b0c	e5933000	 ldr         r3, [r3]
  00b10	e2830038	 add         r0, r3, #0x38
  00b14	eb000000	 bl          WRITE_PORT_USHORT

; 375  : 
; 376  :         // If packet is ok, we have all we need
; 377  :         if (ok) break;

  00b18	e59d3004	 ldr         r3, [sp, #4]
  00b1c	e3530000	 cmp         r3, #0
  00b20	0a000000	 beq         |$LN2@RTL8139Get|
  00b24	ea000002	 b           |$LN8@RTL8139Get|
  00b28		 |$LN2@RTL8139Get|

; 378  : 
; 379  :         length = 0;

  00b28	e3a03000	 mov         r3, #0
  00b2c	e1cd30b0	 strh        r3, [sp]

; 380  :     }

  00b30	eaffff7a	 b           |$LN9@RTL8139Get|
  00b34		 |$LN8@RTL8139Get|

; 381  : 
; 382  :     // If there isn't a packet ack the interrupt
; 383  :     if (length == 0) OUTPORT16((UINT16*)(g_rtl8139.address + RTL_ISR), 0xFFFF);

  00b34	e1dd30b0	 ldrh        r3, [sp]
  00b38	e3530000	 cmp         r3, #0
  00b3c	1a000005	 bne         |$LN1@RTL8139Get|
  00b40	e3a01cff	 mov         r1, #0xFF, 24
  00b44	e38110ff	 orr         r1, r1, #0xFF
  00b48	e59f3074	 ldr         r3, [pc, #0x74]
  00b4c	e5933000	 ldr         r3, [r3]
  00b50	e283003e	 add         r0, r3, #0x3E
  00b54	eb000000	 bl          WRITE_PORT_USHORT
  00b58		 |$LN1@RTL8139Get|

; 384  : 
; 385  :     // Return packet size
; 386  :     *pLength = length;

  00b58	e1dd20b0	 ldrh        r2, [sp]
  00b5c	e59d302c	 ldr         r3, [sp, #0x2C]
  00b60	e1c320b0	 strh        r2, [r3]

; 387  : 
; 388  :     OALMSGS(OAL_ETHER&&OAL_VERBOSE, (
; 389  :         L"-RTL8139GetFrame(length = %d)\r\n", length
; 390  :     ));

  00b64	e59f3054	 ldr         r3, [pc, #0x54]
  00b68	e5933440	 ldr         r3, [r3, #0x440]
  00b6c	e3130a02	 tst         r3, #2, 20
  00b70	0a000009	 beq         |$LN14@RTL8139Get|
  00b74	e59f3044	 ldr         r3, [pc, #0x44]
  00b78	e5933440	 ldr         r3, [r3, #0x440]
  00b7c	e3130902	 tst         r3, #2, 18
  00b80	0a000005	 beq         |$LN14@RTL8139Get|
  00b84	e1dd10b0	 ldrh        r1, [sp]
  00b88	e59f002c	 ldr         r0, [pc, #0x2C]
  00b8c	eb000000	 bl          OALLogSerial
  00b90	e3a03001	 mov         r3, #1
  00b94	e58d301c	 str         r3, [sp, #0x1C]
  00b98	ea000001	 b           |$LN15@RTL8139Get|
  00b9c		 |$LN14@RTL8139Get|
  00b9c	e3a03000	 mov         r3, #0
  00ba0	e58d301c	 str         r3, [sp, #0x1C]
  00ba4		 |$LN15@RTL8139Get|

; 391  :     return length;

  00ba4	e1dd30b0	 ldrh        r3, [sp]
  00ba8	e1cd31b0	 strh        r3, [sp, #0x10]

; 392  : }

  00bac	e1dd01b0	 ldrh        r0, [sp, #0x10]
  00bb0	e28dd020	 add         sp, sp, #0x20
  00bb4	e89d6000	 ldmia       sp, {sp, lr}
  00bb8	e12fff1e	 bx          lr
  00bbc		 |$LN19@RTL8139Get|
  00bbc		 |$LN20@RTL8139Get|
  00bbc	00000000	 DCD         |??_C@_1EA@DBJIJBID@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAG?$AAe?$AAt?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00bc0		 |$LN21@RTL8139Get|
  00bc0	00000000	 DCD         |dpCurSettings|
  00bc4		 |$LN22@RTL8139Get|
  00bc4	00000000	 DCD         |g_rtl8139|
  00bc8		 |$LN23@RTL8139Get|
  00bc8	00000000	 DCD         |??_C@_1DO@FPLEEJKI@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAG?$AAe?$AAt?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00bcc		 |$M41722|

			 ENDP  ; |RTL8139GetFrame|

	EXPORT	|??_C@_1CK@GOECEGOM@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@BODFFAAK@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|RTL8139EnableInts|

  00020			 AREA	 |.pdata|, PDATA
|$T41738| DCD	|$LN9@RTL8139Ena|
	DCD	0x40002c02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@GOECEGOM@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@BODFFAAK@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  00bcc			 AREA	 |.text|, CODE, ARM

  00bcc		 |RTL8139EnableInts| PROC

; 399  : {

  00bcc		 |$LN9@RTL8139Ena|
  00bcc	e52de004	 str         lr, [sp, #-4]!
  00bd0	e24dd008	 sub         sp, sp, #8
  00bd4		 |$M41735|

; 400  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (L"+RTL8139EnableInts\r\n"));

  00bd4	e59f3094	 ldr         r3, [pc, #0x94]
  00bd8	e5933440	 ldr         r3, [r3, #0x440]
  00bdc	e3130a02	 tst         r3, #2, 20
  00be0	0a000008	 beq         |$LN3@RTL8139Ena|
  00be4	e59f3084	 ldr         r3, [pc, #0x84]
  00be8	e5933440	 ldr         r3, [r3, #0x440]
  00bec	e3130004	 tst         r3, #4
  00bf0	0a000004	 beq         |$LN3@RTL8139Ena|
  00bf4	e59f007c	 ldr         r0, [pc, #0x7C]
  00bf8	eb000000	 bl          OALLogSerial
  00bfc	e3a03001	 mov         r3, #1
  00c00	e58d3000	 str         r3, [sp]
  00c04	ea000001	 b           |$LN4@RTL8139Ena|
  00c08		 |$LN3@RTL8139Ena|
  00c08	e3a03000	 mov         r3, #0
  00c0c	e58d3000	 str         r3, [sp]
  00c10		 |$LN4@RTL8139Ena|

; 401  :     // We are only interested in RX interrupts
; 402  :     OUTPORT16((UINT16*)(g_rtl8139.address + RTL_IMR), IR_ROK);

  00c10	e3a01001	 mov         r1, #1
  00c14	e59f3058	 ldr         r3, [pc, #0x58]
  00c18	e5933000	 ldr         r3, [r3]
  00c1c	e283003c	 add         r0, r3, #0x3C
  00c20	eb000000	 bl          WRITE_PORT_USHORT

; 403  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (L"-RTL8139EnableInts\r\n"));

  00c24	e59f3044	 ldr         r3, [pc, #0x44]
  00c28	e5933440	 ldr         r3, [r3, #0x440]
  00c2c	e3130a02	 tst         r3, #2, 20
  00c30	0a000008	 beq         |$LN5@RTL8139Ena|
  00c34	e59f3034	 ldr         r3, [pc, #0x34]
  00c38	e5933440	 ldr         r3, [r3, #0x440]
  00c3c	e3130004	 tst         r3, #4
  00c40	0a000004	 beq         |$LN5@RTL8139Ena|
  00c44	e59f0020	 ldr         r0, [pc, #0x20]
  00c48	eb000000	 bl          OALLogSerial
  00c4c	e3a03001	 mov         r3, #1
  00c50	e58d3004	 str         r3, [sp, #4]
  00c54	ea000001	 b           |$LN6@RTL8139Ena|
  00c58		 |$LN5@RTL8139Ena|
  00c58	e3a03000	 mov         r3, #0
  00c5c	e58d3004	 str         r3, [sp, #4]
  00c60		 |$LN6@RTL8139Ena|

; 404  : }

  00c60	e28dd008	 add         sp, sp, #8
  00c64	e49de004	 ldr         lr, [sp], #4
  00c68	e12fff1e	 bx          lr
  00c6c		 |$LN10@RTL8139Ena|
  00c6c		 |$LN11@RTL8139Ena|
  00c6c	00000000	 DCD         |??_C@_1CK@GOECEGOM@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00c70		 |$LN12@RTL8139Ena|
  00c70	00000000	 DCD         |dpCurSettings|
  00c74		 |$LN13@RTL8139Ena|
  00c74	00000000	 DCD         |g_rtl8139|
  00c78		 |$LN14@RTL8139Ena|
  00c78	00000000	 DCD         |??_C@_1CK@BODFFAAK@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00c7c		 |$M41736|

			 ENDP  ; |RTL8139EnableInts|

	EXPORT	|??_C@_1CM@BNPEMKPD@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@OBAEFLLP@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|RTL8139DisableInts|

  00028			 AREA	 |.pdata|, PDATA
|$T41752| DCD	|$LN9@RTL8139Dis|
	DCD	0x40002c02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@BNPEMKPD@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "D", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "s"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@OBAEFLLP@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "D", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "s"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  00c7c			 AREA	 |.text|, CODE, ARM

  00c7c		 |RTL8139DisableInts| PROC

; 412  : {

  00c7c		 |$LN9@RTL8139Dis|
  00c7c	e52de004	 str         lr, [sp, #-4]!
  00c80	e24dd008	 sub         sp, sp, #8
  00c84		 |$M41749|

; 413  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (L"+RTL8139DisableInts\r\n"));

  00c84	e59f3094	 ldr         r3, [pc, #0x94]
  00c88	e5933440	 ldr         r3, [r3, #0x440]
  00c8c	e3130a02	 tst         r3, #2, 20
  00c90	0a000008	 beq         |$LN3@RTL8139Dis|
  00c94	e59f3084	 ldr         r3, [pc, #0x84]
  00c98	e5933440	 ldr         r3, [r3, #0x440]
  00c9c	e3130004	 tst         r3, #4
  00ca0	0a000004	 beq         |$LN3@RTL8139Dis|
  00ca4	e59f007c	 ldr         r0, [pc, #0x7C]
  00ca8	eb000000	 bl          OALLogSerial
  00cac	e3a03001	 mov         r3, #1
  00cb0	e58d3000	 str         r3, [sp]
  00cb4	ea000001	 b           |$LN4@RTL8139Dis|
  00cb8		 |$LN3@RTL8139Dis|
  00cb8	e3a03000	 mov         r3, #0
  00cbc	e58d3000	 str         r3, [sp]
  00cc0		 |$LN4@RTL8139Dis|

; 414  :     OUTPORT16((UINT16*)(g_rtl8139.address + RTL_IMR), 0);

  00cc0	e3a01000	 mov         r1, #0
  00cc4	e59f3058	 ldr         r3, [pc, #0x58]
  00cc8	e5933000	 ldr         r3, [r3]
  00ccc	e283003c	 add         r0, r3, #0x3C
  00cd0	eb000000	 bl          WRITE_PORT_USHORT

; 415  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (L"-RTL8139DisableInts\r\n"));

  00cd4	e59f3044	 ldr         r3, [pc, #0x44]
  00cd8	e5933440	 ldr         r3, [r3, #0x440]
  00cdc	e3130a02	 tst         r3, #2, 20
  00ce0	0a000008	 beq         |$LN5@RTL8139Dis|
  00ce4	e59f3034	 ldr         r3, [pc, #0x34]
  00ce8	e5933440	 ldr         r3, [r3, #0x440]
  00cec	e3130004	 tst         r3, #4
  00cf0	0a000004	 beq         |$LN5@RTL8139Dis|
  00cf4	e59f0020	 ldr         r0, [pc, #0x20]
  00cf8	eb000000	 bl          OALLogSerial
  00cfc	e3a03001	 mov         r3, #1
  00d00	e58d3004	 str         r3, [sp, #4]
  00d04	ea000001	 b           |$LN6@RTL8139Dis|
  00d08		 |$LN5@RTL8139Dis|
  00d08	e3a03000	 mov         r3, #0
  00d0c	e58d3004	 str         r3, [sp, #4]
  00d10		 |$LN6@RTL8139Dis|

; 416  : }

  00d10	e28dd008	 add         sp, sp, #8
  00d14	e49de004	 ldr         lr, [sp], #4
  00d18	e12fff1e	 bx          lr
  00d1c		 |$LN10@RTL8139Dis|
  00d1c		 |$LN11@RTL8139Dis|
  00d1c	00000000	 DCD         |??_C@_1CM@BNPEMKPD@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00d20		 |$LN12@RTL8139Dis|
  00d20	00000000	 DCD         |dpCurSettings|
  00d24		 |$LN13@RTL8139Dis|
  00d24	00000000	 DCD         |g_rtl8139|
  00d28		 |$LN14@RTL8139Dis|
  00d28	00000000	 DCD         |??_C@_1CM@OBAEFLLP@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00d2c		 |$M41750|

			 ENDP  ; |RTL8139DisableInts|

	EXPORT	|??_C@_1DM@BFKGBADG@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAF?$AAi?$AAl?$AAt?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@NOGKDJNC@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAF?$AAi?$AAl?$AAt?$AAe?$AAr?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0@| [ DATA ] ; `string'
	EXPORT	|RTL8139CurrentPacketFilter|

  00030			 AREA	 |.pdata|, PDATA
|$T41766| DCD	|$LN17@RTL8139Cur|
	DCD	0x40007204

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@BFKGBADG@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAF?$AAi?$AAl?$AAt?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "P", 0x0, "a", 0x0, "c", 0x0, "k"
	DCB	0x0, "e", 0x0, "t", 0x0, "F", 0x0, "i", 0x0, "l", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@NOGKDJNC@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAF?$AAi?$AAl?$AAt?$AAe?$AAr?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0@| DCB "+"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "P", 0x0, "a", 0x0, "c", 0x0, "k"
	DCB	0x0, "e", 0x0, "t", 0x0, "F", 0x0, "i", 0x0, "l", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  00d2c			 AREA	 |.text|, CODE, ARM

  00d2c		 |RTL8139CurrentPacketFilter| PROC

; 424  : {

  00d2c		 |$LN17@RTL8139Cur|
  00d2c	e1a0c00d	 mov         r12, sp
  00d30	e92d0001	 stmdb       sp!, {r0}
  00d34	e92d5000	 stmdb       sp!, {r12, lr}
  00d38	e24dd010	 sub         sp, sp, #0x10
  00d3c		 |$M41763|

; 425  :     UINT32 ctrl;
; 426  : 
; 427  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (
; 428  :         L"+RTL8139CurrentPacketFilter(0x%08x)\r\n", filter
; 429  :     ));

  00d3c	e59f31a4	 ldr         r3, [pc, #0x1A4]
  00d40	e5933440	 ldr         r3, [r3, #0x440]
  00d44	e3130a02	 tst         r3, #2, 20
  00d48	0a000009	 beq         |$LN11@RTL8139Cur|
  00d4c	e59f3194	 ldr         r3, [pc, #0x194]
  00d50	e5933440	 ldr         r3, [r3, #0x440]
  00d54	e3130004	 tst         r3, #4
  00d58	0a000005	 beq         |$LN11@RTL8139Cur|
  00d5c	e59d1018	 ldr         r1, [sp, #0x18]
  00d60	e59f0188	 ldr         r0, [pc, #0x188]
  00d64	eb000000	 bl          OALLogSerial
  00d68	e3a03001	 mov         r3, #1
  00d6c	e58d3004	 str         r3, [sp, #4]
  00d70	ea000001	 b           |$LN12@RTL8139Cur|
  00d74		 |$LN11@RTL8139Cur|
  00d74	e3a03000	 mov         r3, #0
  00d78	e58d3004	 str         r3, [sp, #4]
  00d7c		 |$LN12@RTL8139Cur|

; 430  : 
; 431  :     ctrl = INPORT32((UINT32*)(g_rtl8139.address + RTL_RCR));

  00d7c	e59f3168	 ldr         r3, [pc, #0x168]
  00d80	e5933000	 ldr         r3, [r3]
  00d84	e2830044	 add         r0, r3, #0x44
  00d88	eb000000	 bl          READ_PORT_ULONG
  00d8c	e58d0008	 str         r0, [sp, #8]
  00d90	e59d3008	 ldr         r3, [sp, #8]
  00d94	e58d3000	 str         r3, [sp]

; 432  : 
; 433  :     // First set hash functions
; 434  :     if (
; 435  :         (filter & PACKET_TYPE_PROMISCUOUS) != 0 ||
; 436  :         (filter & PACKET_TYPE_ALL_MULTICAST) != 0
; 437  :     ) {

  00d98	e59d3018	 ldr         r3, [sp, #0x18]
  00d9c	e3130020	 tst         r3, #0x20
  00da0	1a000002	 bne         |$LN7@RTL8139Cur|
  00da4	e59d3018	 ldr         r3, [sp, #0x18]
  00da8	e3130004	 tst         r3, #4
  00dac	0a00000a	 beq         |$LN8@RTL8139Cur|
  00db0		 |$LN7@RTL8139Cur|

; 438  :         OUTPORT32((UINT32*)(g_rtl8139.address + RTL_MAR0), 0xFFFFFFFF);

  00db0	e3e01000	 mvn         r1, #0
  00db4	e59f3130	 ldr         r3, [pc, #0x130]
  00db8	e5933000	 ldr         r3, [r3]
  00dbc	e2830008	 add         r0, r3, #8
  00dc0	eb000000	 bl          WRITE_PORT_ULONG

; 439  :         OUTPORT32((UINT32*)(g_rtl8139.address + RTL_MAR4), 0xFFFFFFFF);

  00dc4	e3e01000	 mvn         r1, #0
  00dc8	e59f311c	 ldr         r3, [pc, #0x11C]
  00dcc	e5933000	 ldr         r3, [r3]
  00dd0	e283000c	 add         r0, r3, #0xC
  00dd4	eb000000	 bl          WRITE_PORT_ULONG

; 440  :     } else {

  00dd8	ea00000b	 b           |$LN6@RTL8139Cur|
  00ddc		 |$LN8@RTL8139Cur|

; 441  :         OUTPORT32((UINT32*)(g_rtl8139.address + RTL_MAR0), g_rtl8139.hash[0]);

  00ddc	e59f3108	 ldr         r3, [pc, #0x108]
  00de0	e593101c	 ldr         r1, [r3, #0x1C]
  00de4	e59f3100	 ldr         r3, [pc, #0x100]
  00de8	e5933000	 ldr         r3, [r3]
  00dec	e2830008	 add         r0, r3, #8
  00df0	eb000000	 bl          WRITE_PORT_ULONG

; 442  :         OUTPORT32((UINT32*)(g_rtl8139.address + RTL_MAR4), g_rtl8139.hash[1]);

  00df4	e59f30f0	 ldr         r3, [pc, #0xF0]
  00df8	e5931020	 ldr         r1, [r3, #0x20]
  00dfc	e59f30e8	 ldr         r3, [pc, #0xE8]
  00e00	e5933000	 ldr         r3, [r3]
  00e04	e283000c	 add         r0, r3, #0xC
  00e08	eb000000	 bl          WRITE_PORT_ULONG
  00e0c		 |$LN6@RTL8139Cur|

; 443  :     }
; 444  : 
; 445  :     // Then global 
; 446  :     if (
; 447  :         (filter & PACKET_TYPE_PROMISCUOUS) != 0 ||
; 448  :         (filter & PACKET_TYPE_ALL_MULTICAST) != 0 ||
; 449  :         (filter & PACKET_TYPE_MULTICAST) != 0
; 450  :     ) {

  00e0c	e59d3018	 ldr         r3, [sp, #0x18]
  00e10	e3130020	 tst         r3, #0x20
  00e14	1a000005	 bne         |$LN4@RTL8139Cur|
  00e18	e59d3018	 ldr         r3, [sp, #0x18]
  00e1c	e3130004	 tst         r3, #4
  00e20	1a000002	 bne         |$LN4@RTL8139Cur|
  00e24	e59d3018	 ldr         r3, [sp, #0x18]
  00e28	e3130002	 tst         r3, #2
  00e2c	0a000003	 beq         |$LN5@RTL8139Cur|
  00e30		 |$LN4@RTL8139Cur|

; 451  :         ctrl |= RCR_AM;

  00e30	e59d3000	 ldr         r3, [sp]
  00e34	e3833004	 orr         r3, r3, #4
  00e38	e58d3000	 str         r3, [sp]

; 452  :     } else {

  00e3c	ea000003	 b           |$LN3@RTL8139Cur|
  00e40		 |$LN5@RTL8139Cur|

; 453  :         ctrl &= ~RCR_AM;

  00e40	e59d2000	 ldr         r2, [sp]
  00e44	e3e03004	 mvn         r3, #4
  00e48	e0023003	 and         r3, r2, r3
  00e4c	e58d3000	 str         r3, [sp]
  00e50		 |$LN3@RTL8139Cur|

; 454  :     }
; 455  :     
; 456  :     if ((filter & PACKET_TYPE_PROMISCUOUS) != 0) {

  00e50	e59d3018	 ldr         r3, [sp, #0x18]
  00e54	e3130020	 tst         r3, #0x20
  00e58	0a000003	 beq         |$LN2@RTL8139Cur|

; 457  :         ctrl |= RCR_AAP;

  00e5c	e59d3000	 ldr         r3, [sp]
  00e60	e3833001	 orr         r3, r3, #1
  00e64	e58d3000	 str         r3, [sp]

; 458  :     } else {

  00e68	ea000003	 b           |$LN1@RTL8139Cur|
  00e6c		 |$LN2@RTL8139Cur|

; 459  :         ctrl &= ~RCR_AAP;

  00e6c	e59d2000	 ldr         r2, [sp]
  00e70	e3e03001	 mvn         r3, #1
  00e74	e0023003	 and         r3, r2, r3
  00e78	e58d3000	 str         r3, [sp]
  00e7c		 |$LN1@RTL8139Cur|

; 460  :     }
; 461  : 
; 462  :     // Set filter to hardware
; 463  :     OUTPORT32((UINT32*)(g_rtl8139.address + RTL_RCR), ctrl);

  00e7c	e59d1000	 ldr         r1, [sp]
  00e80	e59f3064	 ldr         r3, [pc, #0x64]
  00e84	e5933000	 ldr         r3, [r3]
  00e88	e2830044	 add         r0, r3, #0x44
  00e8c	eb000000	 bl          WRITE_PORT_ULONG

; 464  : 
; 465  :     // Save actual filter
; 466  :     g_rtl8139.filter = filter;

  00e90	e59d2018	 ldr         r2, [sp, #0x18]
  00e94	e59f3050	 ldr         r3, [pc, #0x50]
  00e98	e5832018	 str         r2, [r3, #0x18]

; 467  : 
; 468  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (L"-RTL8139CurrentPacketFilter\r\n"));

  00e9c	e59f3044	 ldr         r3, [pc, #0x44]
  00ea0	e5933440	 ldr         r3, [r3, #0x440]
  00ea4	e3130a02	 tst         r3, #2, 20
  00ea8	0a000008	 beq         |$LN13@RTL8139Cur|
  00eac	e59f3034	 ldr         r3, [pc, #0x34]
  00eb0	e5933440	 ldr         r3, [r3, #0x440]
  00eb4	e3130004	 tst         r3, #4
  00eb8	0a000004	 beq         |$LN13@RTL8139Cur|
  00ebc	e59f0020	 ldr         r0, [pc, #0x20]
  00ec0	eb000000	 bl          OALLogSerial
  00ec4	e3a03001	 mov         r3, #1
  00ec8	e58d300c	 str         r3, [sp, #0xC]
  00ecc	ea000001	 b           |$LN14@RTL8139Cur|
  00ed0		 |$LN13@RTL8139Cur|
  00ed0	e3a03000	 mov         r3, #0
  00ed4	e58d300c	 str         r3, [sp, #0xC]
  00ed8		 |$LN14@RTL8139Cur|

; 469  : }

  00ed8	e28dd010	 add         sp, sp, #0x10
  00edc	e89d6000	 ldmia       sp, {sp, lr}
  00ee0	e12fff1e	 bx          lr
  00ee4		 |$LN18@RTL8139Cur|
  00ee4		 |$LN19@RTL8139Cur|
  00ee4	00000000	 DCD         |??_C@_1DM@BFKGBADG@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAF?$AAi?$AAl?$AAt?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  00ee8		 |$LN20@RTL8139Cur|
  00ee8	00000000	 DCD         |dpCurSettings|
  00eec		 |$LN21@RTL8139Cur|
  00eec	00000000	 DCD         |g_rtl8139|
  00ef0		 |$LN22@RTL8139Cur|
  00ef0	00000000	 DCD         |??_C@_1EM@NOGKDJNC@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAF?$AAi?$AAl?$AAt?$AAe?$AAr?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0@|
  00ef4		 |$M41764|

			 ENDP  ; |RTL8139CurrentPacketFilter|

	EXPORT	|??_C@_1EA@ELJONDNB@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAM?$AAu?$AAl?$AAt?$AAi?$AAc?$AAa?$AAs?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA1?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@MLDMDCPO@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAM?$AAu?$AAl?$AAt?$AAi?$AAc?$AAa?$AAs?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd@| [ DATA ] ; `string'
	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|RTL8139MulticastList|
	IMPORT	|__security_cookie|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_check_cookie|

  00038			 AREA	 |.pdata|, PDATA
|$T41786| DCD	|$LN13@RTL8139Mul|
	DCD	0xc0008b04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@ELJONDNB@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAM?$AAu?$AAl?$AAt?$AAi?$AAc?$AAa?$AAs?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA1?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "M", 0x0, "u", 0x0, "l", 0x0, "t", 0x0, "i"
	DCB	0x0, "c", 0x0, "a", 0x0, "s", 0x0, "t", 0x0, "L", 0x0, "i"
	DCB	0x0, "s", 0x0, "t", 0x0, "(", 0x0, "r", 0x0, "c", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "1", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@MLDMDCPO@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAM?$AAu?$AAl?$AAt?$AAi?$AAc?$AAa?$AAs?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd@| DCB "+"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "M", 0x0, "u", 0x0, "l", 0x0, "t", 0x0, "i"
	DCB	0x0, "c", 0x0, "a", 0x0, "s", 0x0, "t", 0x0, "L", 0x0, "i"
	DCB	0x0, "s", 0x0, "t", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.xdata|, DATA
|$T41782| DCD	0xffffffdc
; Function compile flags: /Odtp

  00ef4			 AREA	 |.text|, CODE, ARM

  00ef4	00000000	 DCD         |__GSHandlerCheck|
  00ef8	00000000	 DCD         |$T41782|

  00efc		 |RTL8139MulticastList| PROC

; 476  : {

  00efc		 |$LN13@RTL8139Mul|
  00efc	e1a0c00d	 mov         r12, sp
  00f00	e92d0003	 stmdb       sp!, {r0, r1}
  00f04	e92d5000	 stmdb       sp!, {r12, lr}
  00f08	e24dd028	 sub         sp, sp, #0x28
  00f0c		 |$M41783|
  00f0c	e59f3210	 ldr         r3, [pc, #0x210]
  00f10	e5933000	 ldr         r3, [r3]
  00f14	e58d3014	 str         r3, [sp, #0x14]

; 477  :     UINT32 i, crc, bit;
; 478  :     UINT8 hash[8];
; 479  : 
; 480  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (
; 481  :         L"+RTL8139MulticastList(0x%08x, %d)\r\n", pAddresses, count
; 482  :     ));

  00f18	e59f31f8	 ldr         r3, [pc, #0x1F8]
  00f1c	e5933440	 ldr         r3, [r3, #0x440]
  00f20	e3130a02	 tst         r3, #2, 20
  00f24	0a00000a	 beq         |$LN7@RTL8139Mul|
  00f28	e59f31e8	 ldr         r3, [pc, #0x1E8]
  00f2c	e5933440	 ldr         r3, [r3, #0x440]
  00f30	e3130004	 tst         r3, #4
  00f34	0a000006	 beq         |$LN7@RTL8139Mul|
  00f38	e59d2034	 ldr         r2, [sp, #0x34]
  00f3c	e59d1030	 ldr         r1, [sp, #0x30]
  00f40	e59f01d8	 ldr         r0, [pc, #0x1D8]
  00f44	eb000000	 bl          OALLogSerial
  00f48	e3a03001	 mov         r3, #1
  00f4c	e58d301c	 str         r3, [sp, #0x1C]
  00f50	ea000001	 b           |$LN8@RTL8139Mul|
  00f54		 |$LN7@RTL8139Mul|
  00f54	e3a03000	 mov         r3, #0
  00f58	e58d301c	 str         r3, [sp, #0x1C]
  00f5c		 |$LN8@RTL8139Mul|

; 483  : 
; 484  :     memset(hash, 0, sizeof(hash));

  00f5c	e3a02008	 mov         r2, #8
  00f60	e3a01000	 mov         r1, #0
  00f64	e28d0008	 add         r0, sp, #8
  00f68	eb000000	 bl          memset

; 485  :     for (i = 0; i < count; i++) {

  00f6c	e3a03000	 mov         r3, #0
  00f70	e58d3004	 str         r3, [sp, #4]
  00f74	ea000002	 b           |$LN4@RTL8139Mul|
  00f78		 |$LN3@RTL8139Mul|
  00f78	e59d3004	 ldr         r3, [sp, #4]
  00f7c	e2833001	 add         r3, r3, #1
  00f80	e58d3004	 str         r3, [sp, #4]
  00f84		 |$LN4@RTL8139Mul|
  00f84	e59d2004	 ldr         r2, [sp, #4]
  00f88	e59d3034	 ldr         r3, [sp, #0x34]
  00f8c	e1520003	 cmp         r2, r3
  00f90	2a00001c	 bcs         |$LN2@RTL8139Mul|

; 486  :         crc = ComputeCRC(pAddresses, 6);

  00f94	e3a01006	 mov         r1, #6
  00f98	e59d0030	 ldr         r0, [sp, #0x30]
  00f9c	eb000000	 bl          ComputeCRC
  00fa0	e58d0020	 str         r0, [sp, #0x20]
  00fa4	e59d3020	 ldr         r3, [sp, #0x20]
  00fa8	e58d3000	 str         r3, [sp]

; 487  :         bit = (crc >> 26) & 0x3f;

  00fac	e59d3000	 ldr         r3, [sp]
  00fb0	e1a03d23	 mov         r3, r3, lsr #26
  00fb4	e58d3010	 str         r3, [sp, #0x10]

; 488  :         hash[bit >> 3] |= 1 << (bit & 0x07);

  00fb8	e59d3010	 ldr         r3, [sp, #0x10]
  00fbc	e1a021a3	 mov         r2, r3, lsr #3
  00fc0	e28d3008	 add         r3, sp, #8
  00fc4	e0831002	 add         r1, r3, r2
  00fc8	e59d3010	 ldr         r3, [sp, #0x10]
  00fcc	e2032007	 and         r2, r3, #7
  00fd0	e3a03001	 mov         r3, #1
  00fd4	e1a02213	 mov         r2, r3, lsl r2
  00fd8	e5d13000	 ldrb        r3, [r1]
  00fdc	e1831002	 orr         r1, r3, r2
  00fe0	e59d3010	 ldr         r3, [sp, #0x10]
  00fe4	e1a021a3	 mov         r2, r3, lsr #3
  00fe8	e28d3008	 add         r3, sp, #8
  00fec	e0832002	 add         r2, r3, r2
  00ff0	e20130ff	 and         r3, r1, #0xFF
  00ff4	e5c23000	 strb        r3, [r2]

; 489  :         pAddresses += 6;

  00ff8	e59d3030	 ldr         r3, [sp, #0x30]
  00ffc	e2833006	 add         r3, r3, #6
  01000	e58d3030	 str         r3, [sp, #0x30]

; 490  :     }

  01004	eaffffdb	 b           |$LN3@RTL8139Mul|
  01008		 |$LN2@RTL8139Mul|

; 491  :     g_rtl8139.hash[0] = (hash[3] << 24)|(hash[2] << 16)|(hash[1] << 8)|hash[0];

  01008	e5dd300b	 ldrb        r3, [sp, #0xB]
  0100c	e1a02c03	 mov         r2, r3, lsl #24
  01010	e5dd300a	 ldrb        r3, [sp, #0xA]
  01014	e1a03803	 mov         r3, r3, lsl #16
  01018	e1822003	 orr         r2, r2, r3
  0101c	e5dd3009	 ldrb        r3, [sp, #9]
  01020	e1a03403	 mov         r3, r3, lsl #8
  01024	e1822003	 orr         r2, r2, r3
  01028	e5dd3008	 ldrb        r3, [sp, #8]
  0102c	e1822003	 orr         r2, r2, r3
  01030	e59f30e4	 ldr         r3, [pc, #0xE4]
  01034	e583201c	 str         r2, [r3, #0x1C]

; 492  :     g_rtl8139.hash[1] = (hash[7] << 24)|(hash[6] << 16)|(hash[5] << 8)|hash[4];

  01038	e5dd300f	 ldrb        r3, [sp, #0xF]
  0103c	e1a02c03	 mov         r2, r3, lsl #24
  01040	e5dd300e	 ldrb        r3, [sp, #0xE]
  01044	e1a03803	 mov         r3, r3, lsl #16
  01048	e1822003	 orr         r2, r2, r3
  0104c	e5dd300d	 ldrb        r3, [sp, #0xD]
  01050	e1a03403	 mov         r3, r3, lsl #8
  01054	e1822003	 orr         r2, r2, r3
  01058	e5dd300c	 ldrb        r3, [sp, #0xC]
  0105c	e1822003	 orr         r2, r2, r3
  01060	e59f30b4	 ldr         r3, [pc, #0xB4]
  01064	e5832020	 str         r2, [r3, #0x20]

; 493  : 
; 494  :     // But update only if all multicast and promiscuous mode aren't active
; 495  :     if (
; 496  :         (g_rtl8139.filter & PACKET_TYPE_ALL_MULTICAST) == 0 &&
; 497  :         (g_rtl8139.filter & PACKET_TYPE_PROMISCUOUS) == 0
; 498  :     ) {        

  01068	e59f30ac	 ldr         r3, [pc, #0xAC]
  0106c	e5933018	 ldr         r3, [r3, #0x18]
  01070	e3130004	 tst         r3, #4
  01074	1a00000f	 bne         |$LN1@RTL8139Mul|
  01078	e59f309c	 ldr         r3, [pc, #0x9C]
  0107c	e5933018	 ldr         r3, [r3, #0x18]
  01080	e3130020	 tst         r3, #0x20
  01084	1a00000b	 bne         |$LN1@RTL8139Mul|

; 499  :         OUTPORT32((UINT32*)(g_rtl8139.address + RTL_MAR0), g_rtl8139.hash[0]);

  01088	e59f308c	 ldr         r3, [pc, #0x8C]
  0108c	e593101c	 ldr         r1, [r3, #0x1C]
  01090	e59f3084	 ldr         r3, [pc, #0x84]
  01094	e5933000	 ldr         r3, [r3]
  01098	e2830008	 add         r0, r3, #8
  0109c	eb000000	 bl          WRITE_PORT_ULONG

; 500  :         OUTPORT32((UINT32*)(g_rtl8139.address + RTL_MAR4), g_rtl8139.hash[1]);

  010a0	e59f3074	 ldr         r3, [pc, #0x74]
  010a4	e5931020	 ldr         r1, [r3, #0x20]
  010a8	e59f306c	 ldr         r3, [pc, #0x6C]
  010ac	e5933000	 ldr         r3, [r3]
  010b0	e283000c	 add         r0, r3, #0xC
  010b4	eb000000	 bl          WRITE_PORT_ULONG
  010b8		 |$LN1@RTL8139Mul|

; 501  :     }
; 502  : 
; 503  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (L"-RTL8139MulticastList(rc = 1)\r\n"));

  010b8	e59f3058	 ldr         r3, [pc, #0x58]
  010bc	e5933440	 ldr         r3, [r3, #0x440]
  010c0	e3130a02	 tst         r3, #2, 20
  010c4	0a000008	 beq         |$LN9@RTL8139Mul|
  010c8	e59f3048	 ldr         r3, [pc, #0x48]
  010cc	e5933440	 ldr         r3, [r3, #0x440]
  010d0	e3130004	 tst         r3, #4
  010d4	0a000004	 beq         |$LN9@RTL8139Mul|
  010d8	e59f0034	 ldr         r0, [pc, #0x34]
  010dc	eb000000	 bl          OALLogSerial
  010e0	e3a03001	 mov         r3, #1
  010e4	e58d3024	 str         r3, [sp, #0x24]
  010e8	ea000001	 b           |$LN10@RTL8139Mul|
  010ec		 |$LN9@RTL8139Mul|
  010ec	e3a03000	 mov         r3, #0
  010f0	e58d3024	 str         r3, [sp, #0x24]
  010f4		 |$LN10@RTL8139Mul|

; 504  :     return TRUE;

  010f4	e59d0014	 ldr         r0, [sp, #0x14]
  010f8	eb000000	 bl          __security_check_cookie
  010fc	e3a03001	 mov         r3, #1
  01100	e58d3018	 str         r3, [sp, #0x18]

; 505  : }

  01104	e59d0018	 ldr         r0, [sp, #0x18]
  01108	e28dd028	 add         sp, sp, #0x28
  0110c	e89d6000	 ldmia       sp, {sp, lr}
  01110	e12fff1e	 bx          lr
  01114		 |$LN14@RTL8139Mul|
  01114		 |$LN15@RTL8139Mul|
  01114	00000000	 DCD         |??_C@_1EA@ELJONDNB@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAM?$AAu?$AAl?$AAt?$AAi?$AAc?$AAa?$AAs?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA1?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  01118		 |$LN16@RTL8139Mul|
  01118	00000000	 DCD         |dpCurSettings|
  0111c		 |$LN17@RTL8139Mul|
  0111c	00000000	 DCD         |g_rtl8139|
  01120		 |$LN18@RTL8139Mul|
  01120	00000000	 DCD         |??_C@_1EI@MLDMDCPO@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAM?$AAu?$AAl?$AAt?$AAi?$AAc?$AAa?$AAs?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd@|
  01124		 |$LN19@RTL8139Mul|
  01124	00000000	 DCD         |__security_cookie|
  01128		 |$M41784|

			 ENDP  ; |RTL8139MulticastList|


  00040			 AREA	 |.pdata|, PDATA
|$T41800| DCD	|$LN14@ComputeCRC|
	DCD	0x40004404
; Function compile flags: /Odtp

  01128			 AREA	 |.text|, CODE, ARM

  01128		 |ComputeCRC| PROC

; 120  : {

  01128		 |$LN14@ComputeCRC|
  01128	e1a0c00d	 mov         r12, sp
  0112c	e92d0003	 stmdb       sp!, {r0, r1}
  01130	e92d5000	 stmdb       sp!, {r12, lr}
  01134	e24dd01c	 sub         sp, sp, #0x1C
  01138		 |$M41797|

; 121  :     UINT32 crc, carry, i, j;
; 122  :     UINT8 byte;
; 123  : 
; 124  :     crc = 0xffffffff;

  01138	e3e03000	 mvn         r3, #0
  0113c	e58d3000	 str         r3, [sp]

; 125  : 
; 126  :     for (i = 0; i < length; i++) {

  01140	e3a03000	 mov         r3, #0
  01144	e58d3004	 str         r3, [sp, #4]
  01148	ea000002	 b           |$LN7@ComputeCRC|
  0114c		 |$LN6@ComputeCRC|
  0114c	e59d3004	 ldr         r3, [sp, #4]
  01150	e2833001	 add         r3, r3, #1
  01154	e58d3004	 str         r3, [sp, #4]
  01158		 |$LN7@ComputeCRC|
  01158	e59d2004	 ldr         r2, [sp, #4]
  0115c	e59d3028	 ldr         r3, [sp, #0x28]
  01160	e1520003	 cmp         r2, r3
  01164	2a00002c	 bcs         |$LN5@ComputeCRC|

; 127  :         byte = pBuffer[i];

  01168	e59d2024	 ldr         r2, [sp, #0x24]
  0116c	e59d3004	 ldr         r3, [sp, #4]
  01170	e0823003	 add         r3, r2, r3
  01174	e5d33000	 ldrb        r3, [r3]
  01178	e5cd300c	 strb        r3, [sp, #0xC]

; 128  :         for (j = 0; j < 8; j++) {

  0117c	e3a03000	 mov         r3, #0
  01180	e58d3010	 str         r3, [sp, #0x10]
  01184	ea000002	 b           |$LN4@ComputeCRC|
  01188		 |$LN3@ComputeCRC|
  01188	e59d3010	 ldr         r3, [sp, #0x10]
  0118c	e2833001	 add         r3, r3, #1
  01190	e58d3010	 str         r3, [sp, #0x10]
  01194		 |$LN4@ComputeCRC|
  01194	e59d3010	 ldr         r3, [sp, #0x10]
  01198	e3530008	 cmp         r3, #8
  0119c	2a00001d	 bcs         |$LN2@ComputeCRC|

; 129  :             carry = ((crc & 0x80000000) ? 1 : 0) ^ (byte & 0x01);

  011a0	e59d3000	 ldr         r3, [sp]
  011a4	e3130102	 tst         r3, #2, 2
  011a8	0a000002	 beq         |$LN10@ComputeCRC|
  011ac	e3a03001	 mov         r3, #1
  011b0	e58d3018	 str         r3, [sp, #0x18]
  011b4	ea000001	 b           |$LN11@ComputeCRC|
  011b8		 |$LN10@ComputeCRC|
  011b8	e3a03000	 mov         r3, #0
  011bc	e58d3018	 str         r3, [sp, #0x18]
  011c0		 |$LN11@ComputeCRC|
  011c0	e5dd300c	 ldrb        r3, [sp, #0xC]
  011c4	e2032001	 and         r2, r3, #1
  011c8	e59d3018	 ldr         r3, [sp, #0x18]
  011cc	e0233002	 eor         r3, r3, r2
  011d0	e58d3008	 str         r3, [sp, #8]

; 130  :             crc <<= 1;

  011d4	e59d3000	 ldr         r3, [sp]
  011d8	e1a03083	 mov         r3, r3, lsl #1
  011dc	e58d3000	 str         r3, [sp]

; 131  :             byte >>= 1;

  011e0	e5dd300c	 ldrb        r3, [sp, #0xC]
  011e4	e1a030a3	 mov         r3, r3, lsr #1
  011e8	e20330ff	 and         r3, r3, #0xFF
  011ec	e5cd300c	 strb        r3, [sp, #0xC]

; 132  :             if (carry) crc = (crc ^ 0x04c11db6) | carry;

  011f0	e59d3008	 ldr         r3, [sp, #8]
  011f4	e3530000	 cmp         r3, #0
  011f8	0a000005	 beq         |$LN1@ComputeCRC|
  011fc	e59d2000	 ldr         r2, [sp]
  01200	e59f302c	 ldr         r3, [pc, #0x2C]
  01204	e0222003	 eor         r2, r2, r3
  01208	e59d3008	 ldr         r3, [sp, #8]
  0120c	e1823003	 orr         r3, r2, r3
  01210	e58d3000	 str         r3, [sp]
  01214		 |$LN1@ComputeCRC|

; 133  :         }

  01214	eaffffdb	 b           |$LN3@ComputeCRC|
  01218		 |$LN2@ComputeCRC|

; 134  :     }

  01218	eaffffcb	 b           |$LN6@ComputeCRC|
  0121c		 |$LN5@ComputeCRC|

; 135  :     return crc;

  0121c	e59d3000	 ldr         r3, [sp]
  01220	e58d3014	 str         r3, [sp, #0x14]

; 136  : 
; 137  : }

  01224	e59d0014	 ldr         r0, [sp, #0x14]
  01228	e28dd01c	 add         sp, sp, #0x1C
  0122c	e89d6000	 ldmia       sp, {sp, lr}
  01230	e12fff1e	 bx          lr
  01234		 |$LN15@ComputeCRC|
  01234		 |$LN16@ComputeCRC|
  01234	04c11db6	 DCD         0x4c11db6
  01238		 |$M41798|

			 ENDP  ; |ComputeCRC|

	END
