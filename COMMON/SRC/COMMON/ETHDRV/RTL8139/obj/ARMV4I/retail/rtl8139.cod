; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\COMMON\ETHDRV\RTL8139\rtl8139.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

; File c:\wince600\platform\common\src\common\ethdrv\rtl8139\rtl8139.c

  00000			 AREA	 |.pdata|, PDATA
|$T41724| DCD	|$LN18@ComputeCRC|
	DCD	0x40001b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |ComputeCRC| PROC

; 120  : {

  00000		 |$LN18@ComputeCRC|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M41721|
  00004	e1b06001	 movs        r6, r1
  00008	e1a07000	 mov         r7, r0

; 121  :     UINT32 crc, carry, i, j;
; 122  :     UINT8 byte;
; 123  : 
; 124  :     crc = 0xffffffff;

  0000c	e3e00000	 mvn         r0, #0

; 125  : 
; 126  :     for (i = 0; i < length; i++) {

  00010	e3a0e000	 mov         lr, #0
  00014	0a000011	 beq         |$LN5@ComputeCRC|
  00018	e59f8048	 ldr         r8, [pc, #0x48]
  0001c		 |$LL7@ComputeCRC|

; 127  :         byte = pBuffer[i];

  0001c	e7de2007	 ldrb        r2, [lr, +r7]
  00020	e3a05008	 mov         r5, #8
  00024		 |$LL4@ComputeCRC|

; 128  :         for (j = 0; j < 8; j++) {
; 129  :             carry = ((crc & 0x80000000) ? 1 : 0) ^ (byte & 0x01);

  00024	e3100102	 tst         r0, #2, 2
  00028	13a04001	 movne       r4, #1
  0002c	03a04000	 moveq       r4, #0
  00030	e2023001	 and         r3, r2, #1

; 130  :             crc <<= 1;
; 131  :             byte >>= 1;

  00034	e0331004	 eors        r1, r3, r4
  00038	e1a00080	 mov         r0, r0, lsl #1

; 132  :             if (carry) crc = (crc ^ 0x04c11db6) | carry;

  0003c	10203008	 eorne       r3, r0, r8
  00040	e1a020a2	 mov         r2, r2, lsr #1
  00044	11830001	 orrne       r0, r3, r1
  00048	e2555001	 subs        r5, r5, #1
  0004c	e20220ff	 and         r2, r2, #0xFF
  00050	1afffff3	 bne         |$LL4@ComputeCRC|
  00054	e28ee001	 add         lr, lr, #1
  00058	e15e0006	 cmp         lr, r6
  0005c	3affffee	 bcc         |$LL7@ComputeCRC|
  00060		 |$LN5@ComputeCRC|

; 133  :         }
; 134  :     }
; 135  :     return crc;
; 136  : 
; 137  : }

  00060	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00064	e12fff1e	 bx          lr
  00068		 |$LN19@ComputeCRC|
  00068		 |$LN20@ComputeCRC|
  00068	04c11db6	 DCD         0x4c11db6
  0006c		 |$M41722|

			 ENDP  ; |ComputeCRC|

	EXPORT	|RTL8139InitDMABuffer|
	EXPORT	|??_C@_1EC@BJGONOOH@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAI?$AAn?$AAi?$AAt?$AAD?$AAM?$AAA?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@CMDEMLIC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAI?$AAn?$AAi?$AAt?$AAD?$AAM?$AAA?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAB?$AAu?$AAf@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@FLCJJDFI@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAI?$AAn?$AAi?$AAt?$AAD?$AAM?$AAA?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx@| [ DATA ] ; `string'
	IMPORT	|OALPAtoVA|
	IMPORT	|OALVAtoPA|
	IMPORT	|OALLogSerial|
	IMPORT	|dpCurSettings|

  00000			 AREA	 |.bss|, NOINIT
|g_rtl8139| %	0x24
|g_rtl8139| %	0x24

  00000			 AREA	 |.pdata|, PDATA
|$T41750| DCD	|$LN24@RTL8139Ini|
	DCD	0x40004b01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@BJGONOOH@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAI?$AAn?$AAi?$AAt?$AAD?$AAM?$AAA?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6@| DCB "-"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "D"
	DCB	0x0, "M", 0x0, "A", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, "(", 0x0, "r", 0x0, "c", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@CMDEMLIC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAI?$AAn?$AAi?$AAt?$AAD?$AAM?$AAA?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAB?$AAu?$AAf@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "D"
	DCB	0x0, "M", 0x0, "A", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "B", 0x0, "u"
	DCB	0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, "o", 0x0, " ", 0x0, "s", 0x0, "m", 0x0, "a"
	DCB	0x0, "l", 0x0, "l", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@FLCJJDFI@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAI?$AAn?$AAi?$AAt?$AAD?$AAM?$AAA?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx@| DCB "+"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "D"
	DCB	0x0, "M", 0x0, "A", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |RTL8139InitDMABuffer| PROC

; 151  : {

  00000		 |$LN24@RTL8139Ini|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M41747|
  00004	e1a07001	 mov         r7, r1
  00008	e1a04000	 mov         r4, r0

; 152  :     BOOL rc = FALSE;
; 153  :     UINT32 ph;
; 154  : 
; 155  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (
; 156  :         L"+RTL8139InitDMABuffer(0x%08x, 0x%08x)\r\n", address, size
; 157  :     ));

  0000c	e59f5114	 ldr         r5, [pc, #0x114]
  00010	e3a06000	 mov         r6, #0
  00014	e5953440	 ldr         r3, [r5, #0x440]
  00018	e3130a02	 tst         r3, #2, 20
  0001c	13130004	 tstne       r3, #4
  00020	159f00fc	 ldrne       r0, [pc, #0xFC]
  00024	11a02007	 movne       r2, r7
  00028	11a01004	 movne       r1, r4
  0002c	1b000000	 blne        OALLogSerial

; 158  : 
; 159  :     ph = OALVAtoPA((VOID*)address);

  00030	e1a00004	 mov         r0, r4
  00034	eb000000	 bl          OALVAtoPA
  00038	e1a08000	 mov         r8, r0

; 160  :     if ((ph & 0x03) != 0) {

  0003c	e2183003	 ands        r3, r8, #3

; 161  :         size -= 4 - (ph & 0x03);
; 162  :         ph = (ph + 3) & ~0x03;

  00040	12882003	 addne       r2, r8, #3
  00044	13c28003	 bicne       r8, r2, #3
  00048	10833007	 addne       r3, r3, r7

; 163  :     }
; 164  : 
; 165  :     g_rtl8139.txBuffer = (UINT32)OALPAtoUA(ph);

  0004c	e1a00008	 mov         r0, r8
  00050	e3a01000	 mov         r1, #0
  00054	12437004	 subne       r7, r3, #4
  00058	eb000000	 bl          OALPAtoVA
  0005c	e59f40bc	 ldr         r4, [pc, #0xBC]

; 166  :     g_rtl8139.txSize = MAC_TX_BUFFERS * MAC_TX_BUFFER_SIZE;

  00060	e3a03b06	 mov         r3, #6, 22

; 167  :     if (g_rtl8139.txSize > size) {

  00064	e3570b06	 cmp         r7, #6, 22
  00068	e5840004	 str         r0, [r4, #4]
  0006c	e5843008	 str         r3, [r4, #8]

; 171  :         goto cleanUp;

  00070	3a00001b	 bcc         |$LN2@RTL8139Ini|

; 172  :     }
; 173  :     size -= g_rtl8139.txSize;
; 174  :     ph += g_rtl8139.txSize;

  00074	e2880b06	 add         r0, r8, #6, 22

; 175  : 
; 176  :     g_rtl8139.rxBuffer = (UINT32)OALPAtoUA(ph);

  00078	e3a01000	 mov         r1, #0
  0007c	e2477b06	 sub         r7, r7, #6, 22
  00080	eb000000	 bl          OALPAtoVA
  00084	e3a03801	 mov         r3, #1, 16

; 177  :     if (size >= (64 * 1024 + 16)) {

  00088	e3833010	 orr         r3, r3, #0x10
  0008c	e1570003	 cmp         r7, r3

; 178  :         g_rtl8139.rxSize = 64 * 1024;

  00090	23a03801	 movcs       r3, #1, 16
  00094	e5840010	 str         r0, [r4, #0x10]
  00098	2a00000e	 bcs         |$LN21@RTL8139Ini|
  0009c	e3a03902	 mov         r3, #2, 18

; 179  :     } else if (size >= (32 * 1024 + 16)) {

  000a0	e3833010	 orr         r3, r3, #0x10
  000a4	e1570003	 cmp         r7, r3

; 180  :         g_rtl8139.rxSize = 32 * 1024;

  000a8	23a03902	 movcs       r3, #2, 18
  000ac	2a000009	 bcs         |$LN21@RTL8139Ini|
  000b0	e3a03901	 mov         r3, #1, 18

; 181  :     } else if (size >= (16 * 1024 + 16)) {

  000b4	e3833010	 orr         r3, r3, #0x10
  000b8	e1570003	 cmp         r7, r3

; 182  :         g_rtl8139.rxSize = 16 * 1024;

  000bc	23a03901	 movcs       r3, #1, 18
  000c0	2a000004	 bcs         |$LN21@RTL8139Ini|
  000c4	e3a03a02	 mov         r3, #2, 20

; 183  :     } else if (size >= (8 * 1024 + 16)) {

  000c8	e3833010	 orr         r3, r3, #0x10
  000cc	e1570003	 cmp         r7, r3
  000d0	3a000003	 bcc         |$LN2@RTL8139Ini|

; 184  :         g_rtl8139.rxSize = 8 * 1024;

  000d4	e3a03a02	 mov         r3, #2, 20
  000d8		 |$LN21@RTL8139Ini|
  000d8	e5843014	 str         r3, [r4, #0x14]

; 189  :         goto cleanUp;
; 190  :     }
; 191  : 
; 192  :     rc = TRUE;

  000dc	e3a06001	 mov         r6, #1
  000e0	ea000003	 b           |$cleanUp$41443|
  000e4		 |$LN2@RTL8139Ini|

; 168  :         OALMSGS(OAL_ERROR, (
; 169  :             L"ERROR: RTL8139InitDMABuffer: Buffer too small\r\n"
; 170  :         ));

  000e4	e5953440	 ldr         r3, [r5, #0x440]

; 185  :     } else {
; 186  :         OALMSGS(OAL_ERROR, (
; 187  :             L"ERROR: RTL8139InitDMABuffer: Buffer too small\r\n"
; 188  :         ));

  000e8	e3130001	 tst         r3, #1
  000ec	159f0028	 ldrne       r0, [pc, #0x28]
  000f0	1b000000	 blne        OALLogSerial
  000f4		 |$cleanUp$41443|
  000f4	e5953440	 ldr         r3, [r5, #0x440]

; 193  : 
; 194  : cleanUp:
; 195  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (L"-RTL8139InitDMABuffer(rc = %d)\r\n", rc));

  000f8	e3130a02	 tst         r3, #2, 20
  000fc	13130004	 tstne       r3, #4
  00100	159f0010	 ldrne       r0, [pc, #0x10]
  00104	11a01006	 movne       r1, r6
  00108	1b000000	 blne        OALLogSerial

; 196  :     return rc;
; 197  : }

  0010c	e1a00006	 mov         r0, r6
  00110	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00114	e12fff1e	 bx          lr
  00118		 |$LN25@RTL8139Ini|
  00118		 |$LN26@RTL8139Ini|
  00118	00000000	 DCD         |??_C@_1EC@BJGONOOH@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAI?$AAn?$AAi?$AAt?$AAD?$AAM?$AAA?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6@|
  0011c		 |$LN27@RTL8139Ini|
  0011c	00000000	 DCD         |??_C@_1GA@CMDEMLIC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAI?$AAn?$AAi?$AAt?$AAD?$AAM?$AAA?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?3?$AA?5?$AAB?$AAu?$AAf@|
  00120		 |$LN28@RTL8139Ini|
  00120	00000000	 DCD         |g_rtl8139|
  00124		 |$LN29@RTL8139Ini|
  00124	00000000	 DCD         |??_C@_1FA@FLCJJDFI@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAI?$AAn?$AAi?$AAt?$AAD?$AAM?$AAA?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx@|
  00128		 |$LN30@RTL8139Ini|
  00128	00000000	 DCD         |dpCurSettings|
  0012c		 |$M41748|

			 ENDP  ; |RTL8139InitDMABuffer|

	EXPORT	|RTL8139Init|
	EXPORT	|??_C@_1DA@OOAHMHIE@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@FCPIDOII@?$AA?5?$AAL?$AAi?$AAn?$AAk?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@LFOPKDIL@?$AA?5?$AAW?$AAa?$AAi?$AAt?$AA?5?$AAt?$AAi?$AAm?$AAo?$AAu?$AAt?$AAe?$AAd?$AA?0?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@HMNGGEAC@?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAl?$AAi?$AAn?$AAk?$AA?4?$AA?4?$AA?4?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@KKKDLKNL@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF@| [ DATA ] ; `string'
	IMPORT	|WRITE_PORT_USHORT|
	IMPORT	|WRITE_PORT_ULONG|
	IMPORT	|READ_PORT_ULONG|
	IMPORT	|OALGetTickCount|
	IMPORT	|READ_PORT_UCHAR|
	IMPORT	|WRITE_PORT_UCHAR|

  00000			 AREA	 |.pdata|, PDATA
|$T41790| DCD	|$LN35@RTL8139Ini@2|
	DCD	0x40009301

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@OOAHMHIE@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "("
	DCB	0x0, "r", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@FCPIDOII@?$AA?5?$AAL?$AAi?$AAn?$AAk?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "L", 0x0, "i", 0x0, "n", 0x0, "k", 0x0, " ", 0x0, "d"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, "e"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@LFOPKDIL@?$AA?5?$AAW?$AAa?$AAi?$AAt?$AA?5?$AAt?$AAi?$AAm?$AAo?$AAu?$AAt?$AAe?$AAd?$AA?0?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "W", 0x0, "a", 0x0, "i", 0x0, "t", 0x0, " ", 0x0, "t"
	DCB	0x0, "i", 0x0, "m", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, "e"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "i"
	DCB	0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@HMNGGEAC@?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAl?$AAi?$AAn?$AAk?$AA?4?$AA?4?$AA?4?$AA?$AA@| DCB "R"
	DCB	0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3", 0x0, "9"
	DCB	0x0, ":", 0x0, " ", 0x0, "W", 0x0, "a", 0x0, "i", 0x0, "t"
	DCB	0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "l"
	DCB	0x0, "i", 0x0, "n", 0x0, "k", 0x0, ".", 0x0, ".", 0x0, "."
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@KKKDLKNL@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF@| DCB "+"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "("
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |RTL8139Init| PROC

; 204  : {

  00000		 |$LN35@RTL8139Ini@2|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004		 |$M41787|
  00004	e1a09002	 mov         r9, r2
  00008	e1a06000	 mov         r6, r0

; 205  :     BOOL rc = FALSE;
; 206  :     UINT32 u32, address, i, start;
; 207  :     
; 208  : 
; 209  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (
; 210  :         L"+RTL8139Init(0x%08x, 0x%08x, 0x%08x)\r\n", pAddress, offset, mac
; 211  :     ));

  0000c	e59f5234	 ldr         r5, [pc, #0x234]
  00010	e3a07000	 mov         r7, #0
  00014	e5953440	 ldr         r3, [r5, #0x440]
  00018	e3130a02	 tst         r3, #2, 20
  0001c	13130004	 tstne       r3, #4
  00020	159f021c	 ldrne       r0, [pc, #0x21C]
  00024	11a02001	 movne       r2, r1
  00028	11a03009	 movne       r3, r9
  0002c	11a01006	 movne       r1, r6
  00030	1b000000	 blne        OALLogSerial

; 212  : 
; 213  :     // Get virtual uncached address
; 214  :     g_rtl8139.address = (UINT32)pAddress;

  00034	e59f4204	 ldr         r4, [pc, #0x204]

; 215  : 
; 216  :     // Reset card
; 217  :     OUTPORT8((UINT8*)(g_rtl8139.address + RTL_CR), CR_RST);

  00038	e3a01010	 mov         r1, #0x10
  0003c	e2860037	 add         r0, r6, #0x37
  00040	e5846000	 str         r6, [r4]
  00044	eb000000	 bl          WRITE_PORT_UCHAR
  00048		 |$LL14@RTL8139Ini@2|

; 218  :     while ((INPORT8((UINT8*)(g_rtl8139.address + RTL_CR)) & CR_RST) != 0);

  00048	e5943000	 ldr         r3, [r4]
  0004c	e2830037	 add         r0, r3, #0x37
  00050	eb000000	 bl          READ_PORT_UCHAR
  00054	e3100010	 tst         r0, #0x10
  00058	1afffffa	 bne         |$LL14@RTL8139Ini@2|

; 219  : 
; 220  :     // Wait for link
; 221  :     OALMSGS(OAL_WARN, (L"RTL8139: Wait for link..."));

  0005c	e5953440	 ldr         r3, [r5, #0x440]
  00060	e3130002	 tst         r3, #2
  00064	159f01d0	 ldrne       r0, [pc, #0x1D0]
  00068	1b000000	 blne        OALLogSerial

; 222  :     start = OALGetTickCount();

  0006c	eb000000	 bl          OALGetTickCount

; 223  :     while ((INPORT8((UINT8*)(g_rtl8139.address + RTL_MSR)) & MSR_LINKB) != 0) {

  00070	e5943000	 ldr         r3, [r4]
  00074	e1a08000	 mov         r8, r0
  00078	e2830058	 add         r0, r3, #0x58
  0007c	eb000000	 bl          READ_PORT_UCHAR
  00080	e3100004	 tst         r0, #4
  00084	0a00000a	 beq         |$LN11@RTL8139Ini@2|
  00088	e3a03c13	 mov         r3, #0x13, 24
  0008c	e3836088	 orr         r6, r3, #0x88
  00090		 |$LL12@RTL8139Ini@2|

; 224  :         if ((OALGetTickCount() - start) > 5000) {

  00090	eb000000	 bl          OALGetTickCount
  00094	e0403008	 sub         r3, r0, r8
  00098	e1530006	 cmp         r3, r6
  0009c	8a00003c	 bhi         |$LN30@RTL8139Ini@2|
  000a0	e5943000	 ldr         r3, [r4]
  000a4	e2830058	 add         r0, r3, #0x58
  000a8	eb000000	 bl          READ_PORT_UCHAR
  000ac	e3100004	 tst         r0, #4
  000b0	1afffff6	 bne         |$LL12@RTL8139Ini@2|
  000b4		 |$LN11@RTL8139Ini@2|

; 227  :         }            
; 228  :     }        
; 229  :     OALMSGS(OAL_WARN, (L" Link detected\r\n"));

  000b4	e5953440	 ldr         r3, [r5, #0x440]
  000b8	e3130002	 tst         r3, #2
  000bc	159f0174	 ldrne       r0, [pc, #0x174]
  000c0	1b000000	 blne        OALLogSerial

; 230  : 
; 231  :     // Enable TX/RX
; 232  :     OUTPORT8((UINT8*)(g_rtl8139.address + RTL_CR), CR_TE | CR_RE);

  000c4	e5943000	 ldr         r3, [r4]
  000c8	e3a0100c	 mov         r1, #0xC
  000cc	e2830037	 add         r0, r3, #0x37
  000d0	eb000000	 bl          WRITE_PORT_UCHAR

; 233  : 
; 234  :     // Read MAC address
; 235  :     u32 = INPORT32((UINT32*)(g_rtl8139.address + RTL_IDR0));

  000d4	e5940000	 ldr         r0, [r4]
  000d8	eb000000	 bl          READ_PORT_ULONG

; 236  :     mac[0] = (UINT16)(u32);
; 237  :     mac[1] = (UINT16)(u32 >> 16);
; 238  :     u32 = INPORT32((UINT32*)(g_rtl8139.address + RTL_IDR4));

  000dc	e5942000	 ldr         r2, [r4]
  000e0	e1a01000	 mov         r1, r0
  000e4	e1a03821	 mov         r3, r1, lsr #16
  000e8	e2820004	 add         r0, r2, #4
  000ec	e1c930b2	 strh        r3, [r9, #2]
  000f0	e1c910b0	 strh        r1, [r9]
  000f4	eb000000	 bl          READ_PORT_ULONG
  000f8	e1a03000	 mov         r3, r0

; 239  :     mac[2] = (UINT16)(u32);
; 240  : 
; 241  :     // Set TX descriptors
; 242  :     address = OALVAtoPA((VOID*)g_rtl8139.txBuffer);

  000fc	e5940004	 ldr         r0, [r4, #4]
  00100	e1c930b4	 strh        r3, [r9, #4]
  00104	eb000000	 bl          OALVAtoPA
  00108	e1a06000	 mov         r6, r0

; 243  :     offset = RTL_TSAD0;

  0010c	e3a07020	 mov         r7, #0x20
  00110	e3a08004	 mov         r8, #4
  00114		 |$LL9@RTL8139Ini@2|

; 244  :     for (i = 0; i < MAC_TX_BUFFERS; i++) {
; 245  :         OUTPORT32((UINT32*)(g_rtl8139.address + offset), address);

  00114	e5943000	 ldr         r3, [r4]
  00118	e1a01006	 mov         r1, r6
  0011c	e0830007	 add         r0, r3, r7
  00120	eb000000	 bl          WRITE_PORT_ULONG

; 246  :         address += MAC_TX_BUFFER_SIZE;

  00124	e2866c06	 add         r6, r6, #6, 24

; 247  :         offset += 4;

  00128	e2877004	 add         r7, r7, #4
  0012c	e2588001	 subs        r8, r8, #1
  00130	1afffff7	 bne         |$LL9@RTL8139Ini@2|

; 248  :     }
; 249  :     g_rtl8139.txPos = 0;

  00134	e3a03000	 mov         r3, #0
  00138	e584300c	 str         r3, [r4, #0xC]

; 250  : 
; 251  :     // Set TX DMA burst size per TX DMA burst & standard interframe gap
; 252  :     OUTPORT32((UINT32*)(g_rtl8139.address + RTL_TCR), TCR_IFG_STD|TCR_MXDMA1024);

  0013c	e5943000	 ldr         r3, [r4]
  00140	e3a02403	 mov         r2, #3, 8
  00144	e3821c06	 orr         r1, r2, #6, 24
  00148	e2830040	 add         r0, r3, #0x40
  0014c	eb000000	 bl          WRITE_PORT_ULONG

; 253  : 
; 254  :     // Clear multicast hash registers
; 255  :     g_rtl8139.hash[0] = g_rtl8139.hash[1] = 0;

  00150	e3a03000	 mov         r3, #0
  00154	e5843020	 str         r3, [r4, #0x20]
  00158	e3a03000	 mov         r3, #0
  0015c	e584301c	 str         r3, [r4, #0x1C]

; 256  :     OUTPORT32((UINT32*)(g_rtl8139.address + RTL_MAR0), 0);

  00160	e5943000	 ldr         r3, [r4]
  00164	e3a01000	 mov         r1, #0
  00168	e2830008	 add         r0, r3, #8
  0016c	eb000000	 bl          WRITE_PORT_ULONG

; 257  :     OUTPORT32((UINT32*)(g_rtl8139.address + RTL_MAR4), 0);

  00170	e5943000	 ldr         r3, [r4]
  00174	e3a01000	 mov         r1, #0
  00178	e283000c	 add         r0, r3, #0xC
  0017c	eb000000	 bl          WRITE_PORT_ULONG

; 258  : 
; 259  :     // Configure RX
; 260  :     if (g_rtl8139.rxSize >= 64 * 1024) {

  00180	e5943014	 ldr         r3, [r4, #0x14]
  00184	e3530801	 cmp         r3, #1, 16
  00188	3a000007	 bcc         |$LN6@RTL8139Ini@2|

; 261  :         u32 = RCR_RBLEN64;

  0018c	e3a02b06	 mov         r2, #6, 22
  00190	ea00000b	 b           |$LN1@RTL8139Ini@2|
  00194		 |$LN30@RTL8139Ini@2|

; 225  :             OALMSGS(OAL_WARN, (L" Wait timouted, exiting\r\n"));

  00194	e5953440	 ldr         r3, [r5, #0x440]
  00198	e3130002	 tst         r3, #2
  0019c	0a00001b	 beq         |$clean$41487|
  001a0	e59f008c	 ldr         r0, [pc, #0x8C]
  001a4	eb000000	 bl          OALLogSerial

; 226  :             goto clean;

  001a8	ea000017	 b           |$LN32@RTL8139Ini@2|
  001ac		 |$LN6@RTL8139Ini@2|

; 262  :     } else if (g_rtl8139.rxSize >= 32 * 1024) {

  001ac	e3530902	 cmp         r3, #2, 18

; 263  :         u32 = RCR_RBLEN32;

  001b0	23a02a01	 movcs       r2, #1, 20
  001b4	2a000002	 bcs         |$LN1@RTL8139Ini@2|

; 264  :     } else if (g_rtl8139.rxSize >= 16 * 1024) {

  001b8	e3530901	 cmp         r3, #1, 18

; 265  :         u32 = RCR_RBLEN16;

  001bc	23a02b02	 movcs       r2, #2, 22

; 266  :     } else {
; 267  :         u32 = RCR_RBLEN8;

  001c0	33a02000	 movcc       r2, #0
  001c4		 |$LN1@RTL8139Ini@2|

; 268  :     }
; 269  :     u32 |= RCR_RXFTH16 | RCR_MXDMA16 | RCR_AR | RCR_AB | RCR_APM;
; 270  :     OUTPORT32((UINT32*)(g_rtl8139.address + RTL_RCR),  u32);

  001c4	e5943000	 ldr         r3, [r4]
  001c8	e382101a	 orr         r1, r2, #0x1A
  001cc	e2830044	 add         r0, r3, #0x44
  001d0	eb000000	 bl          WRITE_PORT_ULONG

; 271  :     OUTPORT32(
; 272  :         (UINT32*)(g_rtl8139.address + RTL_RBSTART),
; 273  :         OALVAtoPA((VOID*)g_rtl8139.rxBuffer)
; 274  :     );

  001d4	e5940010	 ldr         r0, [r4, #0x10]
  001d8	eb000000	 bl          OALVAtoPA
  001dc	e5943000	 ldr         r3, [r4]
  001e0	e1a01000	 mov         r1, r0
  001e4	e2830030	 add         r0, r3, #0x30
  001e8	eb000000	 bl          WRITE_PORT_ULONG

; 275  : 
; 276  :     // Actual filter 
; 277  :     g_rtl8139.filter = PACKET_TYPE_DIRECTED | PACKET_TYPE_BROADCAST;

  001ec	e3a03009	 mov         r3, #9
  001f0	e5843018	 str         r3, [r4, #0x18]

; 278  :     
; 279  :     // Clear all interrupts
; 280  :     OUTPORT16((UINT16*)(g_rtl8139.address + RTL_ISR), 0xFFFF);

  001f4	e5943000	 ldr         r3, [r4]
  001f8	e3a02cff	 mov         r2, #0xFF, 24
  001fc	e38210ff	 orr         r1, r2, #0xFF
  00200	e283003e	 add         r0, r3, #0x3E
  00204	eb000000	 bl          WRITE_PORT_USHORT

; 281  : 
; 282  :     // Done
; 283  :     rc = TRUE;

  00208	e3a07001	 mov         r7, #1
  0020c		 |$LN32@RTL8139Ini@2|
  0020c	e5953440	 ldr         r3, [r5, #0x440]
  00210		 |$clean$41487|

; 284  : 
; 285  : clean:
; 286  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (L"-RTL8139Init(rc = %d)\r\n", rc));

  00210	e3130a02	 tst         r3, #2, 20
  00214	13130004	 tstne       r3, #4
  00218	159f0010	 ldrne       r0, [pc, #0x10]
  0021c	11a01007	 movne       r1, r7
  00220	1b000000	 blne        OALLogSerial

; 287  :     return rc;
; 288  : }

  00224	e1a00007	 mov         r0, r7
  00228	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  0022c	e12fff1e	 bx          lr
  00230		 |$LN36@RTL8139Ini@2|
  00230		 |$LN37@RTL8139Ini@2|
  00230	00000000	 DCD         |??_C@_1DA@OOAHMHIE@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00234		 |$LN38@RTL8139Ini@2|
  00234	00000000	 DCD         |??_C@_1DE@LFOPKDIL@?$AA?5?$AAW?$AAa?$AAi?$AAt?$AA?5?$AAt?$AAi?$AAm?$AAo?$AAu?$AAt?$AAe?$AAd?$AA?0?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@|
  00238		 |$LN39@RTL8139Ini@2|
  00238	00000000	 DCD         |??_C@_1CC@FCPIDOII@?$AA?5?$AAL?$AAi?$AAn?$AAk?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0023c		 |$LN40@RTL8139Ini@2|
  0023c	00000000	 DCD         |??_C@_1DE@HMNGGEAC@?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAl?$AAi?$AAn?$AAk?$AA?4?$AA?4?$AA?4?$AA?$AA@|
  00240		 |$LN41@RTL8139Ini@2|
  00240	00000000	 DCD         |g_rtl8139|
  00244		 |$LN42@RTL8139Ini@2|
  00244	00000000	 DCD         |??_C@_1EO@KKKDLKNL@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF@|
  00248		 |$LN43@RTL8139Ini@2|
  00248	00000000	 DCD         |dpCurSettings|
  0024c		 |$M41788|

			 ENDP  ; |RTL8139Init|

	EXPORT	|RTL8139SendFrame|
	EXPORT	|??_C@_1DI@FILLIPNJ@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAS?$AAe?$AAn?$AAd?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA0?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@KMKHFMCO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAS?$AAe?$AAn?$AAd?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?3?$AA?5?$AAS?$AAe?$AAn?$AAd?$AA?5?$AAt?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@KFFKGBLI@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAS?$AAe?$AAn?$AAd?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|memset|
	IMPORT	|memcpy|

  00000			 AREA	 |.pdata|, PDATA
|$T41824| DCD	|$LN20@RTL8139Sen|
	DCD	0x40004601

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@FILLIPNJ@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAS?$AAe?$AAn?$AAd?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA0?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "F"
	DCB	0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "(", 0x0, "r"
	DCB	0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@KMKHFMCO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAS?$AAe?$AAn?$AAd?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?3?$AA?5?$AAS?$AAe?$AAn?$AAd?$AA?5?$AAt?$AAi@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "F"
	DCB	0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, ":", 0x0, " "
	DCB	0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@KFFKGBLI@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAS?$AAe?$AAn?$AAd?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "F"
	DCB	0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ","
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |RTL8139SendFrame| PROC

; 295  : {

  00000		 |$LN20@RTL8139Sen|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004		 |$M41821|
  00004	e1a04001	 mov         r4, r1
  00008	e1a07000	 mov         r7, r0

; 296  :     UINT32 *pTsd;
; 297  :     UINT32 buffer, start;
; 298  :     
; 299  : 
; 300  :     OALMSGS(OAL_ETHER&&OAL_VERBOSE, (
; 301  :         L"+RTL8139SendFrame(0x%08x, %d)\r\n", pData, length
; 302  :     ));

  0000c	e59f5100	 ldr         r5, [pc, #0x100]
  00010	e5953440	 ldr         r3, [r5, #0x440]
  00014	e3130a02	 tst         r3, #2, 20
  00018	13130902	 tstne       r3, #2, 18
  0001c	159f00ec	 ldrne       r0, [pc, #0xEC]
  00020	11a02004	 movne       r2, r4
  00024	11a01007	 movne       r1, r7
  00028	1b000000	 blne        OALLogSerial

; 303  : 
; 304  :     // Wait until buffer is released by hardware
; 305  :     pTsd = (UINT32*)(g_rtl8139.address + RTL_TSD0 + (g_rtl8139.txPos << 2));

  0002c	e59f60d8	 ldr         r6, [pc, #0xD8]
  00030	e596300c	 ldr         r3, [r6, #0xC]
  00034	e5969000	 ldr         r9, [r6]
  00038	e283a004	 add         r10, r3, #4

; 306  :     start = OALGetTickCount();

  0003c	eb000000	 bl          OALGetTickCount
  00040	e1a08000	 mov         r8, r0

; 307  :     while ((INPORT32(pTsd) & TSR_OWN) == 0) {

  00044	ea000003	 b           |$LN17@RTL8139Sen|
  00048		 |$LL5@RTL8139Sen|

; 308  :         if ((OALGetTickCount() - start) > 2000) {

  00048	eb000000	 bl          OALGetTickCount
  0004c	e0403008	 sub         r3, r0, r8
  00050	e3530e7d	 cmp         r3, #0x7D, 28
  00054	8a000023	 bhi         |$LN15@RTL8139Sen|
  00058		 |$LN17@RTL8139Sen|
  00058	e089010a	 add         r0, r9, r10, lsl #2
  0005c	eb000000	 bl          READ_PORT_ULONG
  00060	e3100a02	 tst         r0, #2, 20
  00064	0afffff7	 beq         |$LL5@RTL8139Sen|

; 311  :         }
; 312  :     }
; 313  : 
; 314  :     // Copy data to buffer
; 315  :     buffer = g_rtl8139.txBuffer + g_rtl8139.txPos * MAC_TX_BUFFER_SIZE;

  00068	e596300c	 ldr         r3, [r6, #0xC]
  0006c	e5961004	 ldr         r1, [r6, #4]

; 316  :     memcpy((VOID*)buffer, pData, length);

  00070	e1a02004	 mov         r2, r4
  00074	e0833083	 add         r3, r3, r3, lsl #1
  00078	e0818483	 add         r8, r1, r3, lsl #9
  0007c	e1a00008	 mov         r0, r8
  00080	e1a01007	 mov         r1, r7
  00084	eb000000	 bl          memcpy

; 317  :     if (length < 60) {

  00088	e354003c	 cmp         r4, #0x3C
  0008c	2a000004	 bcs         |$LN2@RTL8139Sen|

; 318  :         memset((VOID*)(buffer + length), 0, 60 - length);

  00090	e264203c	 rsb         r2, r4, #0x3C
  00094	e3a01000	 mov         r1, #0
  00098	e0880004	 add         r0, r8, r4
  0009c	eb000000	 bl          memset

; 319  :         length = 60;

  000a0	e3a0403c	 mov         r4, #0x3C
  000a4		 |$LN2@RTL8139Sen|

; 320  :     }
; 321  : 
; 322  :     // Write TSD register to start send
; 323  :     OUTPORT32(pTsd, length);

  000a4	e1a01004	 mov         r1, r4
  000a8	e089010a	 add         r0, r9, r10, lsl #2
  000ac	eb000000	 bl          WRITE_PORT_ULONG

; 324  : 
; 325  :     // Move to next position
; 326  :     if (++g_rtl8139.txPos >= MAC_TX_BUFFERS) g_rtl8139.txPos = 0;

  000b0	e596300c	 ldr         r3, [r6, #0xC]
  000b4	e2833001	 add         r3, r3, #1
  000b8	e3530004	 cmp         r3, #4
  000bc	e586300c	 str         r3, [r6, #0xC]
  000c0	23a03000	 movcs       r3, #0
  000c4	2586300c	 strcs       r3, [r6, #0xC]

; 327  : 
; 328  :     OALMSGS(OAL_ETHER&&OAL_VERBOSE, (L"-RTL8139SendFrame(rc = 0)\r\n"));

  000c8	e5953440	 ldr         r3, [r5, #0x440]
  000cc	e3130a02	 tst         r3, #2, 20
  000d0	13130902	 tstne       r3, #2, 18
  000d4	159f002c	 ldrne       r0, [pc, #0x2C]
  000d8	1b000000	 blne        OALLogSerial

; 329  :     return 0;

  000dc	e3a00000	 mov         r0, #0

; 330  : }

  000e0	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  000e4	e12fff1e	 bx          lr
  000e8		 |$LN15@RTL8139Sen|

; 309  :             OALMSGS(OAL_ERROR, (L"ERROR: RTL8139SendFrame: Send timeout\r\n"));

  000e8	e5953440	 ldr         r3, [r5, #0x440]
  000ec	e3130001	 tst         r3, #1
  000f0	159f000c	 ldrne       r0, [pc, #0xC]
  000f4	1b000000	 blne        OALLogSerial

; 310  :             return 1;

  000f8	e3a00001	 mov         r0, #1

; 330  : }

  000fc	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  00100	e12fff1e	 bx          lr
  00104		 |$LN21@RTL8139Sen|
  00104		 |$LN22@RTL8139Sen|
  00104	00000000	 DCD         |??_C@_1FA@KMKHFMCO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAS?$AAe?$AAn?$AAd?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?3?$AA?5?$AAS?$AAe?$AAn?$AAd?$AA?5?$AAt?$AAi@|
  00108		 |$LN23@RTL8139Sen|
  00108	00000000	 DCD         |??_C@_1DI@FILLIPNJ@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAS?$AAe?$AAn?$AAd?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA0?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  0010c		 |$LN24@RTL8139Sen|
  0010c	00000000	 DCD         |g_rtl8139|
  00110		 |$LN25@RTL8139Sen|
  00110	00000000	 DCD         |??_C@_1EA@KFFKGBLI@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAS?$AAe?$AAn?$AAd?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00114		 |$LN26@RTL8139Sen|
  00114	00000000	 DCD         |dpCurSettings|
  00118		 |$M41822|

			 ENDP  ; |RTL8139SendFrame|

	EXPORT	|RTL8139GetFrame|
	EXPORT	|??_C@_1EA@DBJIJBID@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAG?$AAe?$AAt?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@FPLEEJKI@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAG?$AAe?$AAt?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|READ_PORT_USHORT|

  00000			 AREA	 |.pdata|, PDATA
|$T41857| DCD	|$LN23@RTL8139Get|
	DCD	0x40006a01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@DBJIJBID@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAG?$AAe?$AAt?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "F", 0x0, "r"
	DCB	0x0, "a", 0x0, "m", 0x0, "e", 0x0, "(", 0x0, "l", 0x0, "e"
	DCB	0x0, "n", 0x0, "g", 0x0, "t", 0x0, "h", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@FPLEEJKI@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAG?$AAe?$AAt?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "F", 0x0, "r"
	DCB	0x0, "a", 0x0, "m", 0x0, "e", 0x0, "(", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |RTL8139GetFrame| PROC

; 337  : {

  00000		 |$LN23@RTL8139Get|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004		 |$M41854|
  00004	e1a09001	 mov         r9, r1
  00008	e1a08000	 mov         r8, r0

; 338  :     UINT16 offset, length, status, len1;
; 339  :     BOOL ok;
; 340  :     
; 341  :     OALMSGS(OAL_ETHER&&OAL_VERBOSE, (
; 342  :         L"+RTL8139GetFrame(0x%08x, %d)\r\n", pData, *pLength
; 343  :     ));

  0000c	e59fa188	 ldr         r10, [pc, #0x188]
  00010	e59a3440	 ldr         r3, [r10, #0x440]
  00014	e3130a02	 tst         r3, #2, 20
  00018	13130902	 tstne       r3, #2, 18
  0001c	11d920b0	 ldrneh      r2, [r9]
  00020	159f017c	 ldrne       r0, [pc, #0x17C]
  00024	11a01008	 movne       r1, r8
  00028	1b000000	 blne        OALLogSerial

; 344  : 
; 345  :     length = 0;
; 346  :     ok = FALSE;
; 347  :     while ((INPORT8((UINT8*)(g_rtl8139.address + RTL_CR)) & CR_BUFE) == 0) {

  0002c	e59f716c	 ldr         r7, [pc, #0x16C]
  00030	e3a04000	 mov         r4, #0
  00034	e3a06000	 mov         r6, #0
  00038	e5973000	 ldr         r3, [r7]
  0003c	e2830037	 add         r0, r3, #0x37
  00040	eb000000	 bl          READ_PORT_UCHAR
  00044	e3100001	 tst         r0, #1
  00048	1a000042	 bne         |$LN17@RTL8139Get|
  0004c		 |$LL9@RTL8139Get|

; 348  : 
; 349  :         // Get read offset
; 350  :         offset = INPORT16((UINT16*)(g_rtl8139.address + RTL_CAPR)) + 0x10;

  0004c	e5973000	 ldr         r3, [r7]
  00050	e2830038	 add         r0, r3, #0x38
  00054	eb000000	 bl          READ_PORT_USHORT
  00058	e2803010	 add         r3, r0, #0x10
  0005c	e1a03803	 mov         r3, r3, lsl #16

; 351  : 
; 352  :         // Read packet status and length
; 353  :         status = *(UINT16*)(g_rtl8139.rxBuffer + offset);

  00060	e597b010	 ldr         r11, [r7, #0x10]
  00064	e1a03823	 mov         r3, r3, lsr #16
  00068	e1a02003	 mov         r2, r3

; 354  :         length = *(UINT16*)(g_rtl8139.rxBuffer + offset + 2) - 4;
; 355  : 
; 356  :         offset += 4;
; 357  :         if (offset >= g_rtl8139.rxSize) offset = 0;

  0006c	e1b210bb	 ldrh        r1, [r2, +r11]!
  00070	e2833004	 add         r3, r3, #4
  00074	e1a05803	 mov         r5, r3, lsl #16
  00078	e597a014	 ldr         r10, [r7, #0x14]
  0007c	e1d230b2	 ldrh        r3, [r2, #2]
  00080	e1a05825	 mov         r5, r5, lsr #16
  00084	e155000a	 cmp         r5, r10
  00088	e2833cff	 add         r3, r3, #0xFF, 24
  0008c	e28330fc	 add         r3, r3, #0xFC
  00090	e1a04803	 mov         r4, r3, lsl #16
  00094	23a05000	 movcs       r5, #0
  00098	e1a04824	 mov         r4, r4, lsr #16

; 358  : 
; 359  :         // When packet is OK copy it to buffer
; 360  :         if ((status & RSR_ROK) != 0 && length <= *pLength) {

  0009c	e3110001	 tst         r1, #1
  000a0	0a000011	 beq         |$LN6@RTL8139Get|
  000a4	e1d930b0	 ldrh        r3, [r9]
  000a8	e1540003	 cmp         r4, r3
  000ac	8a00000e	 bhi         |$LN6@RTL8139Get|

; 361  :             len1 = g_rtl8139.rxSize - offset;

  000b0	e04a3005	 sub         r3, r10, r5
  000b4	e1a06803	 mov         r6, r3, lsl #16
  000b8	e1a06826	 mov         r6, r6, lsr #16

; 362  :             if (length <= len1) {

  000bc	e1540006	 cmp         r4, r6

; 363  :                 memcpy(pData, (VOID*)(g_rtl8139.rxBuffer + offset), length);

  000c0	91a02004	 movls       r2, r4
  000c4	e085100b	 add         r1, r5, r11
  000c8	e1a00008	 mov         r0, r8
  000cc	9a000004	 bls         |$LN20@RTL8139Get|

; 364  :             } else {
; 365  :                 memcpy(pData, (VOID*)(g_rtl8139.rxBuffer + offset), len1);

  000d0	e1a02006	 mov         r2, r6
  000d4	eb000000	 bl          memcpy

; 366  :                 memcpy(pData + len1, (VOID*)g_rtl8139.rxBuffer, length - len1);

  000d8	e0442006	 sub         r2, r4, r6
  000dc	e1a0100b	 mov         r1, r11
  000e0	e0860008	 add         r0, r6, r8
  000e4		 |$LN20@RTL8139Get|
  000e4	eb000000	 bl          memcpy

; 367  :             }
; 368  :             ok = TRUE;

  000e8	e3a06001	 mov         r6, #1
  000ec		 |$LN6@RTL8139Get|

; 369  :         }
; 370  : 
; 371  :         // Update read offset
; 372  :         offset += (length + 7) & ~3;

  000ec	e3a01cff	 mov         r1, #0xFF, 24
  000f0	e38120fc	 orr         r2, r1, #0xFC
  000f4	e2843007	 add         r3, r4, #7
  000f8	e0033002	 and         r3, r3, r2
  000fc	e0833005	 add         r3, r3, r5
  00100	e1a03803	 mov         r3, r3, lsl #16
  00104	e1a03823	 mov         r3, r3, lsr #16

; 373  :         if (offset >= g_rtl8139.rxSize) offset -= g_rtl8139.rxSize;

  00108	e153000a	 cmp         r3, r10
  0010c	2043300a	 subcs       r3, r3, r10
  00110	21a03803	 movcs       r3, r3, lsl #16
  00114	21a03823	 movcs       r3, r3, lsr #16

; 374  :         OUTPORT16((UINT16*)(g_rtl8139.address + RTL_CAPR), offset - 0x10);

  00118	e2833cff	 add         r3, r3, #0xFF, 24
  0011c	e5972000	 ldr         r2, [r7]
  00120	e28330f0	 add         r3, r3, #0xF0
  00124	e1a01803	 mov         r1, r3, lsl #16
  00128	e1a01821	 mov         r1, r1, lsr #16
  0012c	e2820038	 add         r0, r2, #0x38
  00130	eb000000	 bl          WRITE_PORT_USHORT

; 375  : 
; 376  :         // If packet is ok, we have all we need
; 377  :         if (ok) break;

  00134	e3560000	 cmp         r6, #0
  00138	1a000005	 bne         |$LN19@RTL8139Get|
  0013c	e5973000	 ldr         r3, [r7]

; 378  : 
; 379  :         length = 0;

  00140	e3a04000	 mov         r4, #0
  00144	e2830037	 add         r0, r3, #0x37
  00148	eb000000	 bl          READ_PORT_UCHAR
  0014c	e3100001	 tst         r0, #1
  00150	0affffbd	 beq         |$LL9@RTL8139Get|
  00154		 |$LN19@RTL8139Get|
  00154	e59fa040	 ldr         r10, [pc, #0x40]
  00158		 |$LN17@RTL8139Get|

; 380  :     }
; 381  : 
; 382  :     // If there isn't a packet ack the interrupt
; 383  :     if (length == 0) OUTPORT16((UINT16*)(g_rtl8139.address + RTL_ISR), 0xFFFF);

  00158	e1b05004	 movs        r5, r4
  0015c	05973000	 ldreq       r3, [r7]
  00160	03a02cff	 moveq       r2, #0xFF, 24
  00164	038210ff	 orreq       r1, r2, #0xFF
  00168	0283003e	 addeq       r0, r3, #0x3E
  0016c	0b000000	 bleq        WRITE_PORT_USHORT

; 384  : 
; 385  :     // Return packet size
; 386  :     *pLength = length;

  00170	e1c940b0	 strh        r4, [r9]

; 387  : 
; 388  :     OALMSGS(OAL_ETHER&&OAL_VERBOSE, (
; 389  :         L"-RTL8139GetFrame(length = %d)\r\n", length
; 390  :     ));

  00174	e59a3440	 ldr         r3, [r10, #0x440]
  00178	e3130a02	 tst         r3, #2, 20
  0017c	13130902	 tstne       r3, #2, 18
  00180	159f0010	 ldrne       r0, [pc, #0x10]
  00184	11a01005	 movne       r1, r5
  00188	1b000000	 blne        OALLogSerial

; 391  :     return length;
; 392  : }

  0018c	e1a00004	 mov         r0, r4
  00190	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00194	e12fff1e	 bx          lr
  00198		 |$LN24@RTL8139Get|
  00198		 |$LN25@RTL8139Get|
  00198	00000000	 DCD         |??_C@_1EA@DBJIJBID@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAG?$AAe?$AAt?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  0019c		 |$LN26@RTL8139Get|
  0019c	00000000	 DCD         |dpCurSettings|
  001a0		 |$LN27@RTL8139Get|
  001a0	00000000	 DCD         |g_rtl8139|
  001a4		 |$LN28@RTL8139Get|
  001a4	00000000	 DCD         |??_C@_1DO@FPLEEJKI@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAG?$AAe?$AAt?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  001a8		 |$M41855|

			 ENDP  ; |RTL8139GetFrame|

	EXPORT	|RTL8139EnableInts|
	EXPORT	|??_C@_1CK@GOECEGOM@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@BODFFAAK@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T41873| DCD	|$LN9@RTL8139Ena|
	DCD	0x40001701

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@GOECEGOM@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@BODFFAAK@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |RTL8139EnableInts| PROC

; 399  : {

  00000		 |$LN9@RTL8139Ena|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M41870|

; 400  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (L"+RTL8139EnableInts\r\n"));

  00004	e59f404c	 ldr         r4, [pc, #0x4C]
  00008	e5943440	 ldr         r3, [r4, #0x440]
  0000c	e3130a02	 tst         r3, #2, 20
  00010	13130004	 tstne       r3, #4
  00014	159f0038	 ldrne       r0, [pc, #0x38]
  00018	1b000000	 blne        OALLogSerial

; 401  :     // We are only interested in RX interrupts
; 402  :     OUTPORT16((UINT16*)(g_rtl8139.address + RTL_IMR), IR_ROK);

  0001c	e59f302c	 ldr         r3, [pc, #0x2C]
  00020	e3a01001	 mov         r1, #1
  00024	e5933000	 ldr         r3, [r3]
  00028	e283003c	 add         r0, r3, #0x3C
  0002c	eb000000	 bl          WRITE_PORT_USHORT

; 403  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (L"-RTL8139EnableInts\r\n"));

  00030	e5943440	 ldr         r3, [r4, #0x440]
  00034	e3130a02	 tst         r3, #2, 20
  00038	13130004	 tstne       r3, #4
  0003c	159f0008	 ldrne       r0, [pc, #8]
  00040	1b000000	 blne        OALLogSerial

; 404  : }

  00044	e8bd4010	 ldmia       sp!, {r4, lr}
  00048	e12fff1e	 bx          lr
  0004c		 |$LN10@RTL8139Ena|
  0004c		 |$LN11@RTL8139Ena|
  0004c	00000000	 DCD         |??_C@_1CK@GOECEGOM@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00050		 |$LN12@RTL8139Ena|
  00050	00000000	 DCD         |g_rtl8139|
  00054		 |$LN13@RTL8139Ena|
  00054	00000000	 DCD         |??_C@_1CK@BODFFAAK@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00058		 |$LN14@RTL8139Ena|
  00058	00000000	 DCD         |dpCurSettings|
  0005c		 |$M41871|

			 ENDP  ; |RTL8139EnableInts|

	EXPORT	|RTL8139DisableInts|
	EXPORT	|??_C@_1CM@BNPEMKPD@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@OBAEFLLP@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T41889| DCD	|$LN9@RTL8139Dis|
	DCD	0x40001701

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@BNPEMKPD@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "D", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "s"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@OBAEFLLP@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "D", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "s"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |RTL8139DisableInts| PROC

; 412  : {

  00000		 |$LN9@RTL8139Dis|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M41886|

; 413  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (L"+RTL8139DisableInts\r\n"));

  00004	e59f404c	 ldr         r4, [pc, #0x4C]
  00008	e5943440	 ldr         r3, [r4, #0x440]
  0000c	e3130a02	 tst         r3, #2, 20
  00010	13130004	 tstne       r3, #4
  00014	159f0038	 ldrne       r0, [pc, #0x38]
  00018	1b000000	 blne        OALLogSerial

; 414  :     OUTPORT16((UINT16*)(g_rtl8139.address + RTL_IMR), 0);

  0001c	e59f302c	 ldr         r3, [pc, #0x2C]
  00020	e3a01000	 mov         r1, #0
  00024	e5933000	 ldr         r3, [r3]
  00028	e283003c	 add         r0, r3, #0x3C
  0002c	eb000000	 bl          WRITE_PORT_USHORT

; 415  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (L"-RTL8139DisableInts\r\n"));

  00030	e5943440	 ldr         r3, [r4, #0x440]
  00034	e3130a02	 tst         r3, #2, 20
  00038	13130004	 tstne       r3, #4
  0003c	159f0008	 ldrne       r0, [pc, #8]
  00040	1b000000	 blne        OALLogSerial

; 416  : }

  00044	e8bd4010	 ldmia       sp!, {r4, lr}
  00048	e12fff1e	 bx          lr
  0004c		 |$LN10@RTL8139Dis|
  0004c		 |$LN11@RTL8139Dis|
  0004c	00000000	 DCD         |??_C@_1CM@BNPEMKPD@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00050		 |$LN12@RTL8139Dis|
  00050	00000000	 DCD         |g_rtl8139|
  00054		 |$LN13@RTL8139Dis|
  00054	00000000	 DCD         |??_C@_1CM@OBAEFLLP@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00058		 |$LN14@RTL8139Dis|
  00058	00000000	 DCD         |dpCurSettings|
  0005c		 |$M41887|

			 ENDP  ; |RTL8139DisableInts|

	EXPORT	|RTL8139CurrentPacketFilter|
	EXPORT	|??_C@_1DM@BFKGBADG@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAF?$AAi?$AAl?$AAt?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@NOGKDJNC@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAF?$AAi?$AAl?$AAt?$AAe?$AAr?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T41910| DCD	|$LN18@RTL8139Cur|
	DCD	0x40003901

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@BFKGBADG@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAF?$AAi?$AAl?$AAt?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "P", 0x0, "a", 0x0, "c", 0x0, "k"
	DCB	0x0, "e", 0x0, "t", 0x0, "F", 0x0, "i", 0x0, "l", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@NOGKDJNC@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAF?$AAi?$AAl?$AAt?$AAe?$AAr?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0@| DCB "+"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "P", 0x0, "a", 0x0, "c", 0x0, "k"
	DCB	0x0, "e", 0x0, "t", 0x0, "F", 0x0, "i", 0x0, "l", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |RTL8139CurrentPacketFilter| PROC

; 424  : {

  00000		 |$LN18@RTL8139Cur|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M41907|
  00004	e1a04000	 mov         r4, r0

; 425  :     UINT32 ctrl;
; 426  : 
; 427  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (
; 428  :         L"+RTL8139CurrentPacketFilter(0x%08x)\r\n", filter
; 429  :     ));

  00008	e59f80d0	 ldr         r8, [pc, #0xD0]
  0000c	e5983440	 ldr         r3, [r8, #0x440]
  00010	e3130a02	 tst         r3, #2, 20
  00014	13130004	 tstne       r3, #4
  00018	159f00bc	 ldrne       r0, [pc, #0xBC]
  0001c	11a01004	 movne       r1, r4
  00020	1b000000	 blne        OALLogSerial

; 430  : 
; 431  :     ctrl = INPORT32((UINT32*)(g_rtl8139.address + RTL_RCR));

  00024	e59f50ac	 ldr         r5, [pc, #0xAC]
  00028	e5953000	 ldr         r3, [r5]
  0002c	e2830044	 add         r0, r3, #0x44
  00030	eb000000	 bl          READ_PORT_ULONG
  00034	e1a07000	 mov         r7, r0

; 432  : 
; 433  :     // First set hash functions
; 434  :     if (
; 435  :         (filter & PACKET_TYPE_PROMISCUOUS) != 0 ||
; 436  :         (filter & PACKET_TYPE_ALL_MULTICAST) != 0
; 437  :     ) {

  00038	e2146020	 ands        r6, r4, #0x20
  0003c	1a000007	 bne         |$LN7@RTL8139Cur|
  00040	e3140004	 tst         r4, #4
  00044	1a000005	 bne         |$LN7@RTL8139Cur|

; 440  :     } else {
; 441  :         OUTPORT32((UINT32*)(g_rtl8139.address + RTL_MAR0), g_rtl8139.hash[0]);

  00048	e5953000	 ldr         r3, [r5]
  0004c	e595101c	 ldr         r1, [r5, #0x1C]
  00050	e2830008	 add         r0, r3, #8
  00054	eb000000	 bl          WRITE_PORT_ULONG

; 442  :         OUTPORT32((UINT32*)(g_rtl8139.address + RTL_MAR4), g_rtl8139.hash[1]);

  00058	e5951020	 ldr         r1, [r5, #0x20]
  0005c	ea000004	 b           |$LN15@RTL8139Cur|
  00060		 |$LN7@RTL8139Cur|

; 438  :         OUTPORT32((UINT32*)(g_rtl8139.address + RTL_MAR0), 0xFFFFFFFF);

  00060	e5953000	 ldr         r3, [r5]
  00064	e3e01000	 mvn         r1, #0
  00068	e2830008	 add         r0, r3, #8
  0006c	eb000000	 bl          WRITE_PORT_ULONG

; 439  :         OUTPORT32((UINT32*)(g_rtl8139.address + RTL_MAR4), 0xFFFFFFFF);

  00070	e3e01000	 mvn         r1, #0
  00074		 |$LN15@RTL8139Cur|
  00074	e5953000	 ldr         r3, [r5]
  00078	e283000c	 add         r0, r3, #0xC
  0007c	eb000000	 bl          WRITE_PORT_ULONG

; 443  :     }
; 444  : 
; 445  :     // Then global 
; 446  :     if (
; 447  :         (filter & PACKET_TYPE_PROMISCUOUS) != 0 ||
; 448  :         (filter & PACKET_TYPE_ALL_MULTICAST) != 0 ||
; 449  :         (filter & PACKET_TYPE_MULTICAST) != 0
; 450  :     ) {

  00080	e3560000	 cmp         r6, #0
  00084	1a000003	 bne         |$LN4@RTL8139Cur|
  00088	e3140004	 tst         r4, #4
  0008c	03140002	 tsteq       r4, #2

; 452  :     } else {
; 453  :         ctrl &= ~RCR_AM;

  00090	03c73004	 biceq       r3, r7, #4
  00094	0a000000	 beq         |$LN3@RTL8139Cur|
  00098		 |$LN4@RTL8139Cur|

; 451  :         ctrl |= RCR_AM;

  00098	e3873004	 orr         r3, r7, #4
  0009c		 |$LN3@RTL8139Cur|

; 454  :     }
; 455  :     
; 456  :     if ((filter & PACKET_TYPE_PROMISCUOUS) != 0) {

  0009c	e3560000	 cmp         r6, #0

; 457  :         ctrl |= RCR_AAP;

  000a0	13831001	 orrne       r1, r3, #1

; 458  :     } else {
; 459  :         ctrl &= ~RCR_AAP;

  000a4	03c31001	 biceq       r1, r3, #1

; 460  :     }
; 461  : 
; 462  :     // Set filter to hardware
; 463  :     OUTPORT32((UINT32*)(g_rtl8139.address + RTL_RCR), ctrl);

  000a8	e5953000	 ldr         r3, [r5]
  000ac	e2830044	 add         r0, r3, #0x44
  000b0	eb000000	 bl          WRITE_PORT_ULONG

; 464  : 
; 465  :     // Save actual filter
; 466  :     g_rtl8139.filter = filter;
; 467  : 
; 468  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (L"-RTL8139CurrentPacketFilter\r\n"));

  000b4	e5983440	 ldr         r3, [r8, #0x440]
  000b8	e5854018	 str         r4, [r5, #0x18]
  000bc	e3130a02	 tst         r3, #2, 20
  000c0	13130004	 tstne       r3, #4
  000c4	159f0008	 ldrne       r0, [pc, #8]
  000c8	1b000000	 blne        OALLogSerial

; 469  : }

  000cc	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  000d0	e12fff1e	 bx          lr
  000d4		 |$LN19@RTL8139Cur|
  000d4		 |$LN20@RTL8139Cur|
  000d4	00000000	 DCD         |??_C@_1DM@BFKGBADG@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAF?$AAi?$AAl?$AAt?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  000d8		 |$LN21@RTL8139Cur|
  000d8	00000000	 DCD         |g_rtl8139|
  000dc		 |$LN22@RTL8139Cur|
  000dc	00000000	 DCD         |??_C@_1EM@NOGKDJNC@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAF?$AAi?$AAl?$AAt?$AAe?$AAr?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0@|
  000e0		 |$LN23@RTL8139Cur|
  000e0	00000000	 DCD         |dpCurSettings|
  000e4		 |$M41908|

			 ENDP  ; |RTL8139CurrentPacketFilter|

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|RTL8139MulticastList|
	EXPORT	|??_C@_1EA@ELJONDNB@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAM?$AAu?$AAl?$AAt?$AAi?$AAc?$AAa?$AAs?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA1?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@MLDMDCPO@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAM?$AAu?$AAl?$AAt?$AAi?$AAc?$AAa?$AAs?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd@| [ DATA ] ; `string'
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_cookie|
	IMPORT	|__security_check_cookie|

  00000			 AREA	 |.pdata|, PDATA
|$T41967| DCD	|$LN30@RTL8139Mul|
	DCD	0xc0006402

  00000			 AREA	 |.xdata|, DATA
|$T41963| DCD	0xffffffdc

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@ELJONDNB@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAM?$AAu?$AAl?$AAt?$AAi?$AAc?$AAa?$AAs?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA1?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "M", 0x0, "u", 0x0, "l", 0x0, "t", 0x0, "i"
	DCB	0x0, "c", 0x0, "a", 0x0, "s", 0x0, "t", 0x0, "L", 0x0, "i"
	DCB	0x0, "s", 0x0, "t", 0x0, "(", 0x0, "r", 0x0, "c", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "1", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@MLDMDCPO@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAM?$AAu?$AAl?$AAt?$AAi?$AAc?$AAa?$AAs?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd@| DCB "+"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "M", 0x0, "u", 0x0, "l", 0x0, "t", 0x0, "i"
	DCB	0x0, "c", 0x0, "a", 0x0, "s", 0x0, "t", 0x0, "L", 0x0, "i"
	DCB	0x0, "s", 0x0, "t", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T41963|

  00008		 |RTL8139MulticastList| PROC

; 476  : {

  00008		 |$LN30@RTL8139Mul|
  00008	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M41964|
  00010	e1a04001	 mov         r4, r1
  00014	e1a05000	 mov         r5, r0
  00018	e59f3174	 ldr         r3, [pc, #0x174]
  0001c	e5933000	 ldr         r3, [r3]
  00020	e58d3008	 str         r3, [sp, #8]

; 477  :     UINT32 i, crc, bit;
; 478  :     UINT8 hash[8];
; 479  : 
; 480  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (
; 481  :         L"+RTL8139MulticastList(0x%08x, %d)\r\n", pAddresses, count
; 482  :     ));

  00024	e59f8164	 ldr         r8, [pc, #0x164]
  00028	e5986440	 ldr         r6, [r8, #0x440]
  0002c	e3160a02	 tst         r6, #2, 20
  00030	0a000006	 beq         |$LN7@RTL8139Mul|
  00034	e3160004	 tst         r6, #4
  00038	0a000004	 beq         |$LN7@RTL8139Mul|
  0003c	e59f0148	 ldr         r0, [pc, #0x148]
  00040	e1a02004	 mov         r2, r4
  00044	e1a01005	 mov         r1, r5
  00048	eb000000	 bl          OALLogSerial
  0004c	e5986440	 ldr         r6, [r8, #0x440]
  00050		 |$LN7@RTL8139Mul|

; 483  : 
; 484  :     memset(hash, 0, sizeof(hash));

  00050	e3a02008	 mov         r2, #8
  00054	e3a01000	 mov         r1, #0
  00058	e28d0000	 add         r0, sp, #0
  0005c	eb000000	 bl          memset

; 485  :     for (i = 0; i < count; i++) {

  00060	e3540000	 cmp         r4, #0
  00064	0a00001d	 beq         |$LN2@RTL8139Mul|
  00068	e59f9118	 ldr         r9, [pc, #0x118]
  0006c	e3a0a001	 mov         r10, #1
  00070		 |$LL4@RTL8139Mul|

; 486  :         crc = ComputeCRC(pAddresses, 6);

  00070	e3e00000	 mvn         r0, #0
  00074	e3a01000	 mov         r1, #0
  00078		 |$LL17@RTL8139Mul|
  00078	e7d12005	 ldrb        r2, [r1, +r5]
  0007c	e3a07008	 mov         r7, #8
  00080		 |$LL14@RTL8139Mul|
  00080	e3100102	 tst         r0, #2, 2
  00084	13a0e001	 movne       lr, #1
  00088	03a0e000	 moveq       lr, #0
  0008c	e2023001	 and         r3, r2, #1
  00090	e033e00e	 eors        lr, r3, lr
  00094	e1a00080	 mov         r0, r0, lsl #1
  00098	10203009	 eorne       r3, r0, r9
  0009c	e1a020a2	 mov         r2, r2, lsr #1
  000a0	1183000e	 orrne       r0, r3, lr
  000a4	e2577001	 subs        r7, r7, #1
  000a8	e20220ff	 and         r2, r2, #0xFF
  000ac	1afffff3	 bne         |$LL14@RTL8139Mul|
  000b0	e2811001	 add         r1, r1, #1
  000b4	e3510006	 cmp         r1, #6
  000b8	3affffee	 bcc         |$LL17@RTL8139Mul|

; 487  :         bit = (crc >> 26) & 0x3f;

  000bc	e1a03d20	 mov         r3, r0, lsr #26

; 488  :         hash[bit >> 3] |= 1 << (bit & 0x07);

  000c0	e28d1000	 add         r1, sp, #0
  000c4	e7f121a3	 ldrb        r2, [r1, +r3, lsr #3]!
  000c8	e2033007	 and         r3, r3, #7

; 489  :         pAddresses += 6;

  000cc	e2855006	 add         r5, r5, #6
  000d0	e2544001	 subs        r4, r4, #1
  000d4	e182331a	 orr         r3, r2, r10, lsl r3
  000d8	e5c13000	 strb        r3, [r1]
  000dc	1affffe3	 bne         |$LL4@RTL8139Mul|
  000e0		 |$LN2@RTL8139Mul|

; 490  :     }
; 491  :     g_rtl8139.hash[0] = (hash[3] << 24)|(hash[2] << 16)|(hash[1] << 8)|hash[0];

  000e0	e5dd1003	 ldrb        r1, [sp, #3]
  000e4	e5dd3002	 ldrb        r3, [sp, #2]

; 492  :     g_rtl8139.hash[1] = (hash[7] << 24)|(hash[6] << 16)|(hash[5] << 8)|hash[4];

  000e8	e5dd2001	 ldrb        r2, [sp, #1]
  000ec	e5dd4007	 ldrb        r4, [sp, #7]
  000f0	e5dd0006	 ldrb        r0, [sp, #6]
  000f4	e1833401	 orr         r3, r3, r1, lsl #8
  000f8	e5dd1000	 ldrb        r1, [sp]
  000fc	e5dd5005	 ldrb        r5, [sp, #5]
  00100	e5dde004	 ldrb        lr, [sp, #4]
  00104	e1823403	 orr         r3, r2, r3, lsl #8
  00108	e1802404	 orr         r2, r0, r4, lsl #8
  0010c	e59f4070	 ldr         r4, [pc, #0x70]
  00110	e1811403	 orr         r1, r1, r3, lsl #8
  00114	e1853402	 orr         r3, r5, r2, lsl #8
  00118	e18e3403	 orr         r3, lr, r3, lsl #8
  0011c	e584101c	 str         r1, [r4, #0x1C]
  00120	e5843020	 str         r3, [r4, #0x20]

; 493  : 
; 494  :     // But update only if all multicast and promiscuous mode aren't active
; 495  :     if (
; 496  :         (g_rtl8139.filter & PACKET_TYPE_ALL_MULTICAST) == 0 &&
; 497  :         (g_rtl8139.filter & PACKET_TYPE_PROMISCUOUS) == 0
; 498  :     ) {        

  00124	e5943018	 ldr         r3, [r4, #0x18]
  00128	e3130004	 tst         r3, #4
  0012c	1a000009	 bne         |$LN1@RTL8139Mul|
  00130	e3130020	 tst         r3, #0x20
  00134	1a000007	 bne         |$LN1@RTL8139Mul|

; 499  :         OUTPORT32((UINT32*)(g_rtl8139.address + RTL_MAR0), g_rtl8139.hash[0]);

  00138	e5943000	 ldr         r3, [r4]
  0013c	e2830008	 add         r0, r3, #8
  00140	eb000000	 bl          WRITE_PORT_ULONG

; 500  :         OUTPORT32((UINT32*)(g_rtl8139.address + RTL_MAR4), g_rtl8139.hash[1]);

  00144	e5943000	 ldr         r3, [r4]
  00148	e5941020	 ldr         r1, [r4, #0x20]
  0014c	e283000c	 add         r0, r3, #0xC
  00150	eb000000	 bl          WRITE_PORT_ULONG
  00154	e5986440	 ldr         r6, [r8, #0x440]
  00158		 |$LN1@RTL8139Mul|

; 501  :     }
; 502  : 
; 503  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (L"-RTL8139MulticastList(rc = 1)\r\n"));

  00158	e3160a02	 tst         r6, #2, 20
  0015c	13160004	 tstne       r6, #4
  00160	159f0018	 ldrne       r0, [pc, #0x18]
  00164	1b000000	 blne        OALLogSerial

; 504  :     return TRUE;

  00168	e59d0008	 ldr         r0, [sp, #8]
  0016c	eb000000	 bl          __security_check_cookie
  00170	e3a00001	 mov         r0, #1

; 505  : }

  00174	e28dd00c	 add         sp, sp, #0xC
  00178	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  0017c	e12fff1e	 bx          lr
  00180		 |$LN31@RTL8139Mul|
  00180		 |$LN32@RTL8139Mul|
  00180	00000000	 DCD         |??_C@_1EA@ELJONDNB@?$AA?9?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAM?$AAu?$AAl?$AAt?$AAi?$AAc?$AAa?$AAs?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA1?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00184		 |$LN33@RTL8139Mul|
  00184	00000000	 DCD         |g_rtl8139|
  00188		 |$LN34@RTL8139Mul|
  00188	04c11db6	 DCD         0x4c11db6
  0018c		 |$LN35@RTL8139Mul|
  0018c	00000000	 DCD         |??_C@_1EI@MLDMDCPO@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAM?$AAu?$AAl?$AAt?$AAi?$AAc?$AAa?$AAs?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd@|
  00190		 |$LN36@RTL8139Mul|
  00190	00000000	 DCD         |dpCurSettings|
  00194		 |$LN37@RTL8139Mul|
  00194	00000000	 DCD         |__security_cookie|
  00198		 |$M41965|

			 ENDP  ; |RTL8139MulticastList|

	END
