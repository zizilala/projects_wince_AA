; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\COMMON\ETHDRV\CS8900A\cs8900a.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	IMPORT	|READ_REGISTER_USHORT|
	IMPORT	|WRITE_REGISTER_USHORT|

  00000			 AREA	 |.bss|, NOINIT
|g_pCS8900| %	0x4
|g_pCS8900| %	0x4
; File c:\wince600\platform\common\src\common\ethdrv\cs8900a\cs8900a.c

  00000			 AREA	 |.pdata|, PDATA
|$T43257| DCD	|$LN5@ReadPacket|
	DCD	0x40000e01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |ReadPacketPage| PROC

; 413  : {

  00000		 |$LN5@ReadPacket|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M43254|
  00004	e1a01000	 mov         r1, r0

; 414  :     OUTREG16(&g_pCS8900->PAGEIX, address);

  00008	e59f4024	 ldr         r4, [pc, #0x24]
  0000c	e5943000	 ldr         r3, [r4]
  00010	e283000a	 add         r0, r3, #0xA
  00014	eb000000	 bl          WRITE_REGISTER_USHORT

; 415  :     return INREG16(&g_pCS8900->PAGE0);

  00018	e5943000	 ldr         r3, [r4]
  0001c	e283000c	 add         r0, r3, #0xC
  00020	eb000000	 bl          READ_REGISTER_USHORT
  00024	e1a00800	 mov         r0, r0, lsl #16
  00028	e1a00820	 mov         r0, r0, lsr #16

; 416  : }

  0002c	e8bd4010	 ldmia       sp!, {r4, lr}
  00030	e12fff1e	 bx          lr
  00034		 |$LN6@ReadPacket|
  00034		 |$LN7@ReadPacket|
  00034	00000000	 DCD         |g_pCS8900|
  00038		 |$M43255|

			 ENDP  ; |ReadPacketPage|


  00000			 AREA	 |.pdata|, PDATA
|$T43268| DCD	|$LN5@WritePacke|
	DCD	0x40000e01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |WritePacketPage| PROC

; 421  : {

  00000		 |$LN5@WritePacke|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M43265|
  00004	e1a05001	 mov         r5, r1
  00008	e1a01000	 mov         r1, r0

; 422  :     OUTREG16(&g_pCS8900->PAGEIX, address);

  0000c	e59f4020	 ldr         r4, [pc, #0x20]
  00010	e5943000	 ldr         r3, [r4]
  00014	e283000a	 add         r0, r3, #0xA
  00018	eb000000	 bl          WRITE_REGISTER_USHORT

; 423  :     OUTREG16(&g_pCS8900->PAGE0, data);

  0001c	e5943000	 ldr         r3, [r4]
  00020	e1a01005	 mov         r1, r5
  00024	e283000c	 add         r0, r3, #0xC
  00028	eb000000	 bl          WRITE_REGISTER_USHORT

; 424  : }

  0002c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00030	e12fff1e	 bx          lr
  00034		 |$LN6@WritePacke|
  00034		 |$LN7@WritePacke|
  00034	00000000	 DCD         |g_pCS8900|
  00038		 |$M43266|

			 ENDP  ; |WritePacketPage|


  00000			 AREA	 |.pdata|, PDATA
|$T43291| DCD	|$LN18@ComputeCRC|
	DCD	0x40001b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |ComputeCRC| PROC

; 429  : {

  00000		 |$LN18@ComputeCRC|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M43288|
  00004	e1b06001	 movs        r6, r1
  00008	e1a07000	 mov         r7, r0

; 430  :     UINT32 crc, carry, i, j;
; 431  :     UINT8 byte;
; 432  : 
; 433  :     crc = 0xffffffff;

  0000c	e3e00000	 mvn         r0, #0

; 434  :     for (i = 0; i < length; i++) {

  00010	e3a0e000	 mov         lr, #0
  00014	0a000011	 beq         |$LN5@ComputeCRC|
  00018	e59f8048	 ldr         r8, [pc, #0x48]
  0001c		 |$LL7@ComputeCRC|

; 435  :         byte = pBuffer[i];

  0001c	e7de2007	 ldrb        r2, [lr, +r7]
  00020	e3a05008	 mov         r5, #8
  00024		 |$LL4@ComputeCRC|

; 436  :         for (j = 0; j < 8; j++) {
; 437  :             carry = ((crc & 0x80000000) ? 1 : 0) ^ (byte & 0x01);

  00024	e3100102	 tst         r0, #2, 2
  00028	13a04001	 movne       r4, #1
  0002c	03a04000	 moveq       r4, #0
  00030	e2023001	 and         r3, r2, #1

; 438  :             crc <<= 1;
; 439  :             byte >>= 1;

  00034	e0331004	 eors        r1, r3, r4
  00038	e1a00080	 mov         r0, r0, lsl #1

; 440  :             if (carry) crc = (crc ^ 0x04c11db6) | carry;

  0003c	10203008	 eorne       r3, r0, r8
  00040	e1a020a2	 mov         r2, r2, lsr #1
  00044	11830001	 orrne       r0, r3, r1
  00048	e2555001	 subs        r5, r5, #1
  0004c	e20220ff	 and         r2, r2, #0xFF
  00050	1afffff3	 bne         |$LL4@ComputeCRC|
  00054	e28ee001	 add         lr, lr, #1
  00058	e15e0006	 cmp         lr, r6
  0005c	3affffee	 bcc         |$LL7@ComputeCRC|
  00060		 |$LN5@ComputeCRC|

; 441  :         }
; 442  :     }
; 443  :     return crc;
; 444  : }

  00060	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00064	e12fff1e	 bx          lr
  00068		 |$LN19@ComputeCRC|
  00068		 |$LN20@ComputeCRC|
  00068	04c11db6	 DCD         0x4c11db6
  0006c		 |$M43289|

			 ENDP  ; |ComputeCRC|

	EXPORT	|CS8900AInit|
	EXPORT	|??_C@_1DA@HPAIFLP@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@OMDFJAIK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@JGGAHGPC@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAI?$AAn?$AAi?$AAt?$AA?5?$AAc?$AAh?$AAi?$AAp?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@MDLJIMFC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@NGLAKPGN@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AA0?$AA2@| [ DATA ] ; `string'
	IMPORT	|OALLogSerial|
	IMPORT	|dpCurSettings|

  00000			 AREA	 |.pdata|, PDATA
|$T43328| DCD	|$LN34@CS8900AIni|
	DCD	0x40007602

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@HPAIFLP@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "C", 0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0"
	DCB	0x0, "A", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "("
	DCB	0x0, "r", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@OMDFJAIK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "C", 0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0"
	DCB	0x0, "A", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, " ", 0x0, "c"
	DCB	0x0, "a", 0x0, "r", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@JGGAHGPC@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAI?$AAn?$AAi?$AAt?$AA?5?$AAc?$AAh?$AAi?$AAp?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AN@| DCB "I"
	DCB	0x0, "N", 0x0, "F", 0x0, "O", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0", 0x0, "A"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, " ", 0x0, "c"
	DCB	0x0, "h", 0x0, "i", 0x0, "p", 0x0, " ", 0x0, "d", 0x0, "e"
	DCB	0x0, "t", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@MDLJIMFC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "C", 0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0"
	DCB	0x0, "A", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "t", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "h", 0x0, "i"
	DCB	0x0, "p", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@NGLAKPGN@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AA0?$AA2@| DCB "+"
	DCB	0x0, "C", 0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0"
	DCB	0x0, "A", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "("
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, ":", 0x0, "%", 0x0, "0", 0x0, "2"
	DCB	0x0, "x", 0x0, ":", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x"
	DCB	0x0, ":", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, ":"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, ":", 0x0, "%"
	DCB	0x0, "0", 0x0, "2", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |CS8900AInit| PROC

; 143  : {

  00000		 |$LN34@CS8900AIni|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd014	 sub         sp, sp, #0x14
  00008		 |$M43325|
  00008	e1a0b002	 mov         r11, r2
  0000c	e1a0a000	 mov         r10, r0

; 144  :     BOOL rc = FALSE;
; 145  :     UINT32 count;
; 146  : 
; 147  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (
; 148  :         L"+CS8900AInit(0x%08x, 0x%08x, %02x:%02x:%02x:%02x:%02x:%02x)\r\n",
; 149  :         pAddress, offset, mac[0]&0xFF, mac[0]>>8, mac[1]&0xFF, mac[1]>>8,
; 150  :         mac[2]&0xFF, mac[2]>>8
; 151  :     ));

  00010	e59f81bc	 ldr         r8, [pc, #0x1BC]
  00014	e3a09000	 mov         r9, #0
  00018	e5983440	 ldr         r3, [r8, #0x440]
  0001c	e3130a02	 tst         r3, #2, 20
  00020	0a000013	 beq         |$LN12@CS8900AIni|
  00024	e3130004	 tst         r3, #4
  00028	0a000011	 beq         |$LN12@CS8900AIni|
  0002c	e1db30b4	 ldrh        r3, [r11, #4]
  00030	e1db50b2	 ldrh        r5, [r11, #2]
  00034	e1db70b0	 ldrh        r7, [r11]
  00038	e1a0e423	 mov         lr, r3, lsr #8
  0003c	e59f018c	 ldr         r0, [pc, #0x18C]
  00040	e20330ff	 and         r3, r3, #0xFF
  00044	e1a04425	 mov         r4, r5, lsr #8
  00048	e58d300c	 str         r3, [sp, #0xC]
  0004c	e20550ff	 and         r5, r5, #0xFF
  00050	e1a06427	 mov         r6, r7, lsr #8
  00054	e1a02001	 mov         r2, r1
  00058	e20730ff	 and         r3, r7, #0xFF
  0005c	e1a0100a	 mov         r1, r10
  00060	e58de010	 str         lr, [sp, #0x10]
  00064	e58d4008	 str         r4, [sp, #8]
  00068	e58d5004	 str         r5, [sp, #4]
  0006c	e58d6000	 str         r6, [sp]
  00070	eb000000	 bl          OALLogSerial
  00074		 |$LN12@CS8900AIni|

; 152  : 
; 153  :     // Save address
; 154  :     g_pCS8900 = (CS8900A_REGS*)pAddress;

  00074	e59f3150	 ldr         r3, [pc, #0x150]

; 155  : 
; 156  :     // First check if there is chip
; 157  :     if (ReadPacketPage(EISA_NUMBER) != CS8900A_EISA_NUMBER) {

  00078	e3a00000	 mov         r0, #0
  0007c	e583a000	 str         r10, [r3]
  00080	eb000000	 bl          ReadPacketPage
  00084	e3a03c63	 mov         r3, #0x63, 24
  00088	e383300e	 orr         r3, r3, #0xE
  0008c	e1500003	 cmp         r0, r3

; 158  :         OALMSGS(OAL_ERROR, (L"ERROR: CS8900AInit: Failed detect chip\r\n"));

  00090	e5983440	 ldr         r3, [r8, #0x440]
  00094	0a000004	 beq         |$LN9@CS8900AIni|
  00098	e3130001	 tst         r3, #1
  0009c	0a00003c	 beq         |$cleanUp$43049|
  000a0	e59f0120	 ldr         r0, [pc, #0x120]
  000a4	eb000000	 bl          OALLogSerial

; 159  :         goto cleanUp;

  000a8	ea000039	 b           |$cleanUp$43049|
  000ac		 |$LN9@CS8900AIni|

; 160  :     }
; 161  : 
; 162  :     OALMSGS(OAL_INFO, (L"INFO: CS8900AInit chip detected\r\n"));

  000ac	e3130008	 tst         r3, #8
  000b0	159f010c	 ldrne       r0, [pc, #0x10C]
  000b4	1b000000	 blne        OALLogSerial

; 163  : 
; 164  :     // Reset chip
; 165  :     WritePacketPage(SELF_CTL, SELF_CTL_RESET);

  000b8	e3a01040	 mov         r1, #0x40
  000bc	e3a00f45	 mov         r0, #0x45, 30
  000c0	eb000000	 bl          WritePacketPage

; 166  :     count = RETRY_COUNT;

  000c4	e3a04601	 mov         r4, #1, 12
  000c8	e3a05c01	 mov         r5, #1, 24
  000cc		 |$LL8@CS8900AIni|

; 168  :         if ((ReadPacketPage(SELF_ST) & SELF_ST_INITD) != 0) break;

  000cc	e3850036	 orr         r0, r5, #0x36
  000d0	e2444001	 sub         r4, r4, #1
  000d4	eb000000	 bl          ReadPacketPage
  000d8	e3100080	 tst         r0, #0x80
  000dc	1a000002	 bne         |$LN7@CS8900AIni|

; 167  :     while (count-- > 0) {

  000e0	e3540000	 cmp         r4, #0
  000e4	1afffff8	 bne         |$LL8@CS8900AIni|
  000e8	e2444001	 sub         r4, r4, #1
  000ec		 |$LN7@CS8900AIni|

; 169  :     }
; 170  :     if (count == 0) {

  000ec	e3540000	 cmp         r4, #0
  000f0	1a000005	 bne         |$LN5@CS8900AIni|
  000f4		 |$LN31@CS8900AIni|
  000f4	e5983440	 ldr         r3, [r8, #0x440]

; 171  :         OALMSGS(OAL_ERROR, (L"ERROR: CS8900AInit: Failed to reset card\r\n"));

  000f8	e3130001	 tst         r3, #1
  000fc	0a000024	 beq         |$cleanUp$43049|
  00100	e59f00b8	 ldr         r0, [pc, #0xB8]
  00104	eb000000	 bl          OALLogSerial
  00108	ea000021	 b           |$cleanUp$43049|
  0010c		 |$LN5@CS8900AIni|

; 172  :         goto cleanUp;
; 173  :     }
; 174  :     count = RETRY_COUNT;

  0010c	e3a04601	 mov         r4, #1, 12
  00110		 |$LL4@CS8900AIni|

; 176  :         if ((ReadPacketPage(SELF_ST) & SELF_ST_SIBUSY) != 0) break;

  00110	e3850036	 orr         r0, r5, #0x36
  00114	e2444001	 sub         r4, r4, #1
  00118	eb000000	 bl          ReadPacketPage
  0011c	e3100c01	 tst         r0, #1, 24
  00120	1a000002	 bne         |$LN3@CS8900AIni|

; 175  :     while (count-- > 0) {

  00124	e3540000	 cmp         r4, #0
  00128	1afffff8	 bne         |$LL4@CS8900AIni|
  0012c	e2444001	 sub         r4, r4, #1
  00130		 |$LN3@CS8900AIni|

; 177  :     }
; 178  :     if (count == 0) {

  00130	e3540000	 cmp         r4, #0

; 179  :         OALMSGS(OAL_ERROR, (L"ERROR: CS8900AInit: Failed to reset card\r\n"));
; 180  :         goto cleanUp;

  00134	0affffee	 beq         |$LN31@CS8900AIni|

; 181  :     }
; 182  : 
; 183  :     // Set MAC address
; 184  :     WritePacketPage(INDIVIDUAL_ADDRESS + 0, mac[0]);

  00138	e1db10b0	 ldrh        r1, [r11]
  0013c	e3a00f56	 mov         r0, #0x56, 30
  00140	eb000000	 bl          WritePacketPage

; 185  :     WritePacketPage(INDIVIDUAL_ADDRESS + 2, mac[1]);

  00144	e1db10b2	 ldrh        r1, [r11, #2]
  00148	e3a04c01	 mov         r4, #1, 24
  0014c	e384005a	 orr         r0, r4, #0x5A
  00150	eb000000	 bl          WritePacketPage

; 186  :     WritePacketPage(INDIVIDUAL_ADDRESS + 4, mac[2]);

  00154	e1db10b4	 ldrh        r1, [r11, #4]
  00158	e3a00f57	 mov         r0, #0x57, 30
  0015c	eb000000	 bl          WritePacketPage

; 187  : 
; 188  :     // Enable receive
; 189  :     WritePacketPage(RX_CTL, RX_CTL_RX_OK|RX_CTL_INDIVIDUAL|RX_CTL_BROADCAST);

  00160	e3a01c0d	 mov         r1, #0xD, 24
  00164	e3a00f41	 mov         r0, #0x41, 30
  00168	eb000000	 bl          WritePacketPage

; 190  : 
; 191  :     // Enable interrupt on receive
; 192  :     WritePacketPage(RX_CFG, RX_CFG_RX_OK_IE);

  0016c	e3a01c01	 mov         r1, #1, 24
  00170	e3810002	 orr         r0, r1, #2
  00174	eb000000	 bl          WritePacketPage

; 193  : 
; 194  :     // Let assume that hardware is using INTRQ0
; 195  :     WritePacketPage(INTERRUPT_NUMBER, 0);

  00178	e3a01000	 mov         r1, #0
  0017c	e3a00022	 mov         r0, #0x22
  00180	eb000000	 bl          WritePacketPage

; 196  : 
; 197  :     // Enable
; 198  :     WritePacketPage(LINE_CTL, LINE_CTL_RX_ON|LINE_CTL_TX_ON);

  00184	e3a010c0	 mov         r1, #0xC0
  00188	e3840012	 orr         r0, r4, #0x12
  0018c	eb000000	 bl          WritePacketPage

; 199  : 
; 200  :     // Done
; 201  :     rc = TRUE;

  00190	e3a09001	 mov         r9, #1
  00194		 |$cleanUp$43049|
  00194	e5983440	 ldr         r3, [r8, #0x440]

; 202  : 
; 203  : cleanUp:
; 204  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (L"-CS8900AInit(rc = %d)\r\n", rc));

  00198	e3130a02	 tst         r3, #2, 20
  0019c	13130004	 tstne       r3, #4
  001a0	159f0014	 ldrne       r0, [pc, #0x14]
  001a4	11a01009	 movne       r1, r9
  001a8	1b000000	 blne        OALLogSerial

; 205  :     return rc;
; 206  : }

  001ac	e1a00009	 mov         r0, r9
  001b0	e28dd014	 add         sp, sp, #0x14
  001b4	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  001b8	e12fff1e	 bx          lr
  001bc		 |$LN35@CS8900AIni|
  001bc		 |$LN36@CS8900AIni|
  001bc	00000000	 DCD         |??_C@_1DA@HPAIFLP@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  001c0		 |$LN37@CS8900AIni|
  001c0	00000000	 DCD         |??_C@_1FG@OMDFJAIK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe@|
  001c4		 |$LN38@CS8900AIni|
  001c4	00000000	 DCD         |??_C@_1EE@JGGAHGPC@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAI?$AAn?$AAi?$AAt?$AA?5?$AAc?$AAh?$AAi?$AAp?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AN@|
  001c8		 |$LN39@CS8900AIni|
  001c8	00000000	 DCD         |??_C@_1FC@MDLJIMFC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc@|
  001cc		 |$LN40@CS8900AIni|
  001cc	00000000	 DCD         |g_pCS8900|
  001d0		 |$LN41@CS8900AIni|
  001d0	00000000	 DCD         |??_C@_1HM@NGLAKPGN@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AA0?$AA2@|
  001d4		 |$LN42@CS8900AIni|
  001d4	00000000	 DCD         |dpCurSettings|
  001d8		 |$M43326|

			 ENDP  ; |CS8900AInit|

	EXPORT	|CS8900ASendFrame|
	EXPORT	|??_C@_1DK@NOGHLOAJ@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAS?$AAe?$AAn?$AAd?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@EJDJMGMM@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAS?$AAe?$AAn?$AAd?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|WRITE_PORT_USHORT|

  00000			 AREA	 |.pdata|, PDATA
|$T43364| DCD	|$LN25@CS8900ASen|
	DCD	0x40004001

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@NOGHLOAJ@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAS?$AAe?$AAn?$AAd?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "C", 0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0"
	DCB	0x0, "A", 0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "F"
	DCB	0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "(", 0x0, "r"
	DCB	0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@EJDJMGMM@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAS?$AAe?$AAn?$AAd?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "C", 0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0"
	DCB	0x0, "A", 0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "F"
	DCB	0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ","
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |CS8900ASendFrame| PROC

; 213  : {

  00000		 |$LN25@CS8900ASen|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004		 |$M43361|
  00004	e1a07001	 mov         r7, r1
  00008	e1a06000	 mov         r6, r0

; 214  :     BOOL rc = FALSE;
; 215  :     UINT32 count;
; 216  : 
; 217  :     OALMSGS(OAL_ETHER&&OAL_VERBOSE, (
; 218  :         L"+CS8900ASendFrame(0x%08x, %d)\r\n", pData, length
; 219  :     ));

  0000c	e59f80e8	 ldr         r8, [pc, #0xE8]
  00010	e3a05000	 mov         r5, #0
  00014	e5983440	 ldr         r3, [r8, #0x440]
  00018	e3130a02	 tst         r3, #2, 20
  0001c	13130902	 tstne       r3, #2, 18
  00020	159f00d0	 ldrne       r0, [pc, #0xD0]
  00024	11a02007	 movne       r2, r7
  00028	11a01006	 movne       r1, r6
  0002c	1b000000	 blne        OALLogSerial

; 220  : 
; 221  :     // Send Command
; 222  :     OUTPORT16(&g_pCS8900->TXCMD, TX_CMD_START_ALL);

  00030	e59f90bc	 ldr         r9, [pc, #0xBC]
  00034	e3a010c0	 mov         r1, #0xC0
  00038	e5993000	 ldr         r3, [r9]
  0003c	e2830004	 add         r0, r3, #4
  00040	eb000000	 bl          WRITE_PORT_USHORT

; 223  :     OUTPORT16(&g_pCS8900->TXLENGTH, length);

  00044	e5993000	 ldr         r3, [r9]
  00048	e1a01807	 mov         r1, r7, lsl #16
  0004c	e1a01821	 mov         r1, r1, lsr #16
  00050	e2830006	 add         r0, r3, #6
  00054	eb000000	 bl          WRITE_PORT_USHORT

; 224  : 
; 225  :     count = RETRY_COUNT;

  00058	e3a04601	 mov         r4, #1, 12
  0005c		 |$LL6@CS8900ASen|

; 227  :         if ((ReadPacketPage(BUS_ST) & BUS_ST_TX_RDY) != 0) break;

  0005c	e3a00f4e	 mov         r0, #0x4E, 30
  00060	e2444001	 sub         r4, r4, #1
  00064	eb000000	 bl          ReadPacketPage
  00068	e3100c01	 tst         r0, #1, 24
  0006c	1a000002	 bne         |$LN5@CS8900ASen|

; 226  :     while (count-- > 0) {

  00070	e3540000	 cmp         r4, #0
  00074	1afffff8	 bne         |$LL6@CS8900ASen|
  00078	e2444001	 sub         r4, r4, #1
  0007c		 |$LN5@CS8900ASen|

; 228  :     }
; 229  :     if (count == 0) goto cleanUp;

  0007c	e3540000	 cmp         r4, #0
  00080	0a000009	 beq         |$cleanUp$43083|

; 230  : 
; 231  :     length = (length + 1) >> 1;

  00084	e2873001	 add         r3, r7, #1
  00088	e1b040a3	 movs        r4, r3, lsr #1

; 232  :     while (length-- > 0) {

  0008c	0a000005	 beq         |$LN21@CS8900ASen|
  00090		 |$LL2@CS8900ASen|

; 233  :         OUTPORT16(&g_pCS8900->DATA0, *(UINT16*)pData);

  00090	e0d610b2	 ldrh        r1, [r6], #2
  00094	e5990000	 ldr         r0, [r9]
  00098	e2444001	 sub         r4, r4, #1
  0009c	eb000000	 bl          WRITE_PORT_USHORT
  000a0	e3540000	 cmp         r4, #0
  000a4	1afffff9	 bne         |$LL2@CS8900ASen|
  000a8		 |$LN21@CS8900ASen|

; 234  :         pData += sizeof(UINT16);
; 235  :     }
; 236  : 
; 237  :     rc = TRUE;

  000a8	e3a05001	 mov         r5, #1
  000ac		 |$cleanUp$43083|

; 238  : 
; 239  : cleanUp:
; 240  :     OALMSGS(OAL_ETHER&&OAL_VERBOSE, (L"-CS8900ASendFrame(rc = %d)\r\n", !rc));

  000ac	e5983440	 ldr         r3, [r8, #0x440]
  000b0	e3130a02	 tst         r3, #2, 20
  000b4	0a000006	 beq         |$LN11@CS8900ASen|
  000b8	e3130902	 tst         r3, #2, 18
  000bc	0a000004	 beq         |$LN11@CS8900ASen|
  000c0	e59f0028	 ldr         r0, [pc, #0x28]
  000c4	e3550000	 cmp         r5, #0
  000c8	03a01001	 moveq       r1, #1
  000cc	13a01000	 movne       r1, #0
  000d0	eb000000	 bl          OALLogSerial
  000d4		 |$LN11@CS8900ASen|

; 241  :     return !rc;

  000d4	e3550000	 cmp         r5, #0
  000d8	03a03001	 moveq       r3, #1
  000dc	13a03000	 movne       r3, #0
  000e0	e1a00803	 mov         r0, r3, lsl #16
  000e4	e1a00820	 mov         r0, r0, lsr #16

; 242  : }

  000e8	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  000ec	e12fff1e	 bx          lr
  000f0		 |$LN26@CS8900ASen|
  000f0		 |$LN27@CS8900ASen|
  000f0	00000000	 DCD         |??_C@_1DK@NOGHLOAJ@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAS?$AAe?$AAn?$AAd?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  000f4		 |$LN28@CS8900ASen|
  000f4	00000000	 DCD         |g_pCS8900|
  000f8		 |$LN29@CS8900ASen|
  000f8	00000000	 DCD         |??_C@_1EA@EJDJMGMM@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAS?$AAe?$AAn?$AAd?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  000fc		 |$LN30@CS8900ASen|
  000fc	00000000	 DCD         |dpCurSettings|
  00100		 |$M43362|

			 ENDP  ; |CS8900ASendFrame|

	EXPORT	|CS8900AGetFrame|
	EXPORT	|??_C@_1EA@NNPLDGPH@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAG?$AAe?$AAt?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@KOGIIKI@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAG?$AAe?$AAt?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|READ_PORT_USHORT|

  00000			 AREA	 |.pdata|, PDATA
|$T43390| DCD	|$LN17@CS8900AGet|
	DCD	0x40004801

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@NNPLDGPH@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAG?$AAe?$AAt?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "C", 0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0"
	DCB	0x0, "A", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "F", 0x0, "r"
	DCB	0x0, "a", 0x0, "m", 0x0, "e", 0x0, "(", 0x0, "l", 0x0, "e"
	DCB	0x0, "n", 0x0, "g", 0x0, "t", 0x0, "h", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@KOGIIKI@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAG?$AAe?$AAt?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "C", 0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0"
	DCB	0x0, "A", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "F", 0x0, "r"
	DCB	0x0, "a", 0x0, "m", 0x0, "e", 0x0, "(", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |CS8900AGetFrame| PROC

; 249  : {

  00000		 |$LN17@CS8900AGet|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004		 |$M43387|
  00004	e1a06001	 mov         r6, r1
  00008	e1a08000	 mov         r8, r0

; 250  :     UINT16 isq, length, status, count, data;
; 251  : 
; 252  :     OALMSGS(OAL_ETHER&&OAL_VERBOSE, (
; 253  :         L"+CS8900AGetFrame(0x%08x, %d)\r\n", pData, *pLength
; 254  :     ));

  0000c	e59f9108	 ldr         r9, [pc, #0x108]
  00010	e5993440	 ldr         r3, [r9, #0x440]
  00014	e3130a02	 tst         r3, #2, 20
  00018	13130902	 tstne       r3, #2, 18
  0001c	11d620b0	 ldrneh      r2, [r6]
  00020	159f00f0	 ldrne       r0, [pc, #0xF0]
  00024	11a01008	 movne       r1, r8
  00028	1b000000	 blne        OALLogSerial

; 255  : 
; 256  :     length = 0;
; 257  :     isq = INPORT16(&g_pCS8900->ISQ);

  0002c	e59f70e0	 ldr         r7, [pc, #0xE0]
  00030	e3a04000	 mov         r4, #0
  00034	e5973000	 ldr         r3, [r7]
  00038	e2830008	 add         r0, r3, #8
  0003c	eb000000	 bl          READ_PORT_USHORT
  00040	e1a02800	 mov         r2, r0, lsl #16
  00044	e1a02822	 mov         r2, r2, lsr #16

; 258  :     if ((isq & ISQ_ID_MASK) == RX_EVENT_ID && (isq & RX_EVENT_RX_OK) != 0) {

  00048	e202303f	 and         r3, r2, #0x3F
  0004c	e3530004	 cmp         r3, #4
  00050	1a000024	 bne         |$LN1@CS8900AGet|
  00054	e3120c01	 tst         r2, #1, 24
  00058	0a000022	 beq         |$LN1@CS8900AGet|

; 259  : 
; 260  :         // Get RxStatus and length
; 261  :         status = INPORT16(&g_pCS8900->DATA0);

  0005c	e5970000	 ldr         r0, [r7]
  00060	eb000000	 bl          READ_PORT_USHORT

; 262  :         length = INPORT16(&g_pCS8900->DATA0);

  00064	e5970000	 ldr         r0, [r7]
  00068	eb000000	 bl          READ_PORT_USHORT

; 263  : 
; 264  :         if (length > *pLength) {

  0006c	e1d630b0	 ldrh        r3, [r6]
  00070	e1a04800	 mov         r4, r0, lsl #16
  00074	e1a04824	 mov         r4, r4, lsr #16
  00078	e1540003	 cmp         r4, r3
  0007c	9a000007	 bls         |$LN5@CS8900AGet|

; 265  :             // If packet doesn't fit in buffer, skip it
; 266  :             data = ReadPacketPage(RX_CFG);

  00080	e3a04c01	 mov         r4, #1, 24
  00084	e3840002	 orr         r0, r4, #2
  00088	eb000000	 bl          ReadPacketPage

; 267  :             WritePacketPage(RX_CFG, data | RX_CFG_SKIP_1);

  0008c	e3801040	 orr         r1, r0, #0x40
  00090	e3840002	 orr         r0, r4, #2
  00094	eb000000	 bl          WritePacketPage

; 268  :             length = 0;

  00098	e3a04000	 mov         r4, #0

; 269  :         } else {

  0009c	ea000011	 b           |$LN1@CS8900AGet|
  000a0		 |$LN5@CS8900AGet|

; 270  :             // Read packet data
; 271  :             count = length;

  000a0	e1a05004	 mov         r5, r4

; 272  :             while (count > 1) {

  000a4	e3540001	 cmp         r4, #1
  000a8	9a000008	 bls         |$LN2@CS8900AGet|
  000ac		 |$LL3@CS8900AGet|

; 273  :                 data = INPORT16(&g_pCS8900->DATA0);

  000ac	e5970000	 ldr         r0, [r7]
  000b0	eb000000	 bl          READ_PORT_USHORT

; 274  :                 *(UINT16*)pData = data;
; 275  :                 pData += sizeof(UINT16);
; 276  :                 count -= sizeof(UINT16);

  000b4	e2853cff	 add         r3, r5, #0xFF, 24
  000b8	e28330fe	 add         r3, r3, #0xFE
  000bc	e1a05803	 mov         r5, r3, lsl #16
  000c0	e1a05825	 mov         r5, r5, lsr #16
  000c4	e3550001	 cmp         r5, #1
  000c8	e0c800b2	 strh        r0, [r8], #2
  000cc	8afffff6	 bhi         |$LL3@CS8900AGet|
  000d0		 |$LN2@CS8900AGet|

; 277  :             }
; 278  : 
; 279  :             // Read last one byte
; 280  :             if (count > 0) {

  000d0	e3550000	 cmp         r5, #0
  000d4	0a000003	 beq         |$LN1@CS8900AGet|

; 281  :                 data = INPORT16(&g_pCS8900->DATA0);

  000d8	e5970000	 ldr         r0, [r7]
  000dc	eb000000	 bl          READ_PORT_USHORT
  000e0	e1a03000	 mov         r3, r0

; 282  :                 *pData = (UINT8)data;

  000e4	e5c83000	 strb        r3, [r8]
  000e8		 |$LN1@CS8900AGet|

; 283  :             }
; 284  :         }
; 285  :     }
; 286  : 
; 287  :     // Return packet size
; 288  :     *pLength = length;

  000e8	e1c640b0	 strh        r4, [r6]

; 289  : 
; 290  :     OALMSGS(OAL_ETHER&&OAL_VERBOSE, (
; 291  :         L"-CS8900AGetFrame(length = %d)\r\n", length
; 292  :     ));

  000ec	e5993440	 ldr         r3, [r9, #0x440]
  000f0	e3130a02	 tst         r3, #2, 20
  000f4	13130902	 tstne       r3, #2, 18
  000f8	159f0010	 ldrne       r0, [pc, #0x10]
  000fc	11a01004	 movne       r1, r4
  00100	1b000000	 blne        OALLogSerial

; 293  :     return length;
; 294  : }

  00104	e1a00004	 mov         r0, r4
  00108	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  0010c	e12fff1e	 bx          lr
  00110		 |$LN18@CS8900AGet|
  00110		 |$LN19@CS8900AGet|
  00110	00000000	 DCD         |??_C@_1EA@NNPLDGPH@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAG?$AAe?$AAt?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00114		 |$LN20@CS8900AGet|
  00114	00000000	 DCD         |g_pCS8900|
  00118		 |$LN21@CS8900AGet|
  00118	00000000	 DCD         |??_C@_1DO@KOGIIKI@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAG?$AAe?$AAt?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  0011c		 |$LN22@CS8900AGet|
  0011c	00000000	 DCD         |dpCurSettings|
  00120		 |$M43388|

			 ENDP  ; |CS8900AGetFrame|

	EXPORT	|CS8900AEnableInts|
	EXPORT	|??_C@_1CK@MHFPLOF@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@HMACONAD@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T43407| DCD	|$LN9@CS8900AEna|
	DCD	0x40001701

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@MHFPLOF@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "C", 0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0"
	DCB	0x0, "A", 0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@HMACONAD@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "C", 0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0"
	DCB	0x0, "A", 0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |CS8900AEnableInts| PROC

; 301  : {

  00000		 |$LN9@CS8900AEna|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M43404|

; 302  :     UINT16 data;
; 303  : 
; 304  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (L"+CS8900AEnableInts\r\n"));

  00004	e59f404c	 ldr         r4, [pc, #0x4C]
  00008	e5943440	 ldr         r3, [r4, #0x440]
  0000c	e3130a02	 tst         r3, #2, 20
  00010	13130004	 tstne       r3, #4
  00014	159f0038	 ldrne       r0, [pc, #0x38]
  00018	1b000000	 blne        OALLogSerial

; 305  :     data = ReadPacketPage(BUS_CTL);

  0001c	e3a05c01	 mov         r5, #1, 24
  00020	e3850016	 orr         r0, r5, #0x16
  00024	eb000000	 bl          ReadPacketPage

; 306  :     WritePacketPage(BUS_CTL, data | BUS_CTL_ENABLE_IRQ);

  00028	e3801902	 orr         r1, r0, #2, 18
  0002c	e3850016	 orr         r0, r5, #0x16
  00030	eb000000	 bl          WritePacketPage

; 307  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (L"-CS8900AEnableInts\r\n"));

  00034	e5943440	 ldr         r3, [r4, #0x440]
  00038	e3130a02	 tst         r3, #2, 20
  0003c	13130004	 tstne       r3, #4
  00040	159f0008	 ldrne       r0, [pc, #8]
  00044	1b000000	 blne        OALLogSerial

; 308  : }

  00048	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$LN10@CS8900AEna|
  00050		 |$LN11@CS8900AEna|
  00050	00000000	 DCD         |??_C@_1CK@MHFPLOF@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00054		 |$LN12@CS8900AEna|
  00054	00000000	 DCD         |??_C@_1CK@HMACONAD@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00058		 |$LN13@CS8900AEna|
  00058	00000000	 DCD         |dpCurSettings|
  0005c		 |$M43405|

			 ENDP  ; |CS8900AEnableInts|

	EXPORT	|CS8900ADisableInts|
	EXPORT	|??_C@_1CM@HJOGNMLM@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@IFBGENPA@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T43423| DCD	|$LN9@CS8900ADis|
	DCD	0x40001901

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@HJOGNMLM@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "C", 0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0"
	DCB	0x0, "A", 0x0, "D", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "s"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@IFBGENPA@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "C", 0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0"
	DCB	0x0, "A", 0x0, "D", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "s"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |CS8900ADisableInts| PROC

; 315  : {

  00000		 |$LN9@CS8900ADis|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M43420|

; 316  :     UINT16 data;
; 317  : 
; 318  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (L"+CS8900ADisableInts\r\n"));

  00004	e59f4054	 ldr         r4, [pc, #0x54]
  00008	e5943440	 ldr         r3, [r4, #0x440]
  0000c	e3130a02	 tst         r3, #2, 20
  00010	13130004	 tstne       r3, #4
  00014	159f0040	 ldrne       r0, [pc, #0x40]
  00018	1b000000	 blne        OALLogSerial

; 319  :     data = ReadPacketPage(BUS_CTL);

  0001c	e3a05c01	 mov         r5, #1, 24
  00020	e3850016	 orr         r0, r5, #0x16
  00024	eb000000	 bl          ReadPacketPage
  00028	e3a03c7f	 mov         r3, #0x7F, 24

; 320  :     WritePacketPage(BUS_CTL, data & ~BUS_CTL_ENABLE_IRQ);

  0002c	e38330ff	 orr         r3, r3, #0xFF
  00030	e0001003	 and         r1, r0, r3
  00034	e3850016	 orr         r0, r5, #0x16
  00038	eb000000	 bl          WritePacketPage

; 321  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (L"-CS8900ADisableInts\r\n"));

  0003c	e5943440	 ldr         r3, [r4, #0x440]
  00040	e3130a02	 tst         r3, #2, 20
  00044	13130004	 tstne       r3, #4
  00048	159f0008	 ldrne       r0, [pc, #8]
  0004c	1b000000	 blne        OALLogSerial

; 322  : }

  00050	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$LN10@CS8900ADis|
  00058		 |$LN11@CS8900ADis|
  00058	00000000	 DCD         |??_C@_1CM@HJOGNMLM@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  0005c		 |$LN12@CS8900ADis|
  0005c	00000000	 DCD         |??_C@_1CM@IFBGENPA@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00060		 |$LN13@CS8900ADis|
  00060	00000000	 DCD         |dpCurSettings|
  00064		 |$M43421|

			 ENDP  ; |CS8900ADisableInts|

	EXPORT	|CS8900ACurrentPacketFilter|
	EXPORT	|??_C@_1DM@JKDMICEC@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAF?$AAi?$AAl?$AAt?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@MHLCOBBO@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAF?$AAi?$AAl?$AAt?$AAe?$AAr?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0@| [ DATA ] ; `string'

  00008			 AREA	 |.bss|, NOINIT
|g_hash| %	0x8
|g_filter| %	0x4
|g_hash| %	0x8

  00000			 AREA	 |.pdata|, PDATA
|$T43443| DCD	|$LN17@CS8900ACur|
	DCD	0x40004101

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@JKDMICEC@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAF?$AAi?$AAl?$AAt?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "C", 0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0"
	DCB	0x0, "A", 0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "P", 0x0, "a", 0x0, "c", 0x0, "k"
	DCB	0x0, "e", 0x0, "t", 0x0, "F", 0x0, "i", 0x0, "l", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@MHLCOBBO@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAF?$AAi?$AAl?$AAt?$AAe?$AAr?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0@| DCB "+"
	DCB	0x0, "C", 0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0"
	DCB	0x0, "A", 0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "P", 0x0, "a", 0x0, "c", 0x0, "k"
	DCB	0x0, "e", 0x0, "t", 0x0, "F", 0x0, "i", 0x0, "l", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |CS8900ACurrentPacketFilter| PROC

; 329  : {

  00000		 |$LN17@CS8900ACur|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004		 |$M43440|
  00004	e1a04000	 mov         r4, r0

; 330  :     UINT16 rxCtl;
; 331  : 
; 332  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (
; 333  :         L"+CS8900ACurrentPacketFilter(0x%08x)\r\n", filter
; 334  :     ));

  00008	e59f60f0	 ldr         r6, [pc, #0xF0]
  0000c	e5963440	 ldr         r3, [r6, #0x440]
  00010	e3130a02	 tst         r3, #2, 20
  00014	13130004	 tstne       r3, #4
  00018	159f00dc	 ldrne       r0, [pc, #0xDC]
  0001c	11a01004	 movne       r1, r4
  00020	1b000000	 blne        OALLogSerial

; 335  : 
; 336  :     // Read current filter
; 337  :     rxCtl = ReadPacketPage(RX_CTL);

  00024	e3a00f41	 mov         r0, #0x41, 30
  00028	eb000000	 bl          ReadPacketPage

; 338  : 
; 339  :     if ((filter & PACKET_TYPE_ALL_MULTICAST) != 0) {

  0002c	e59f80c4	 ldr         r8, [pc, #0xC4]
  00030	e1a05000	 mov         r5, r0

; 340  :         WritePacketPage(LOGICAL_ADDR_FILTER_BASE + 0, 0xFFFF);

  00034	e3a00e15	 mov         r0, #0x15, 28
  00038	e2147004	 ands        r7, r4, #4
  0003c	0a00000b	 beq         |$LN7@CS8900ACur|
  00040	e3a0acff	 mov         r10, #0xFF, 24
  00044	e38a10ff	 orr         r1, r10, #0xFF
  00048	eb000000	 bl          WritePacketPage
  0004c	e3a09c01	 mov         r9, #1, 24

; 341  :         WritePacketPage(LOGICAL_ADDR_FILTER_BASE + 2, 0xFFFF);

  00050	e3890052	 orr         r0, r9, #0x52
  00054	e38a10ff	 orr         r1, r10, #0xFF
  00058	eb000000	 bl          WritePacketPage

; 342  :         WritePacketPage(LOGICAL_ADDR_FILTER_BASE + 4, 0xFFFF);

  0005c	e38a10ff	 orr         r1, r10, #0xFF
  00060	e3a00f55	 mov         r0, #0x55, 30
  00064	eb000000	 bl          WritePacketPage

; 343  :         WritePacketPage(LOGICAL_ADDR_FILTER_BASE + 6, 0xFFFF);

  00068	e38a10ff	 orr         r1, r10, #0xFF

; 344  :     } else {

  0006c	ea000009	 b           |$LN14@CS8900ACur|
  00070		 |$LN7@CS8900ACur|

; 345  :         WritePacketPage(LOGICAL_ADDR_FILTER_BASE + 0, g_hash[0]);

  00070	e1d810b0	 ldrh        r1, [r8]
  00074	eb000000	 bl          WritePacketPage

; 346  :         WritePacketPage(LOGICAL_ADDR_FILTER_BASE + 2, g_hash[1]);

  00078	e1d810b2	 ldrh        r1, [r8, #2]
  0007c	e3a09c01	 mov         r9, #1, 24
  00080	e3890052	 orr         r0, r9, #0x52
  00084	eb000000	 bl          WritePacketPage

; 347  :         WritePacketPage(LOGICAL_ADDR_FILTER_BASE + 4, g_hash[2]);

  00088	e1d810b4	 ldrh        r1, [r8, #4]
  0008c	e3a00f55	 mov         r0, #0x55, 30
  00090	eb000000	 bl          WritePacketPage

; 348  :         WritePacketPage(LOGICAL_ADDR_FILTER_BASE + 6, g_hash[3]);

  00094	e1d810b6	 ldrh        r1, [r8, #6]
  00098		 |$LN14@CS8900ACur|
  00098	e3890056	 orr         r0, r9, #0x56
  0009c	eb000000	 bl          WritePacketPage

; 349  :     }
; 350  : 
; 351  :     if (
; 352  :         (filter & PACKET_TYPE_MULTICAST) != 0 ||
; 353  :         (filter & PACKET_TYPE_ALL_MULTICAST) != 0
; 354  :     ) {

  000a0	e3140002	 tst         r4, #2
  000a4	03570000	 cmpeq       r7, #0
  000a8	03a03cfd	 moveq       r3, #0xFD, 24

; 355  :         rxCtl |= RX_CTL_MULTICAST;
; 356  :     } else {
; 357  :         rxCtl &= ~RX_CTL_MULTICAST;

  000ac	038330ff	 orreq       r3, r3, #0xFF
  000b0	00052003	 andeq       r2, r5, r3
  000b4	13852c02	 orrne       r2, r5, #2, 24

; 358  :     }
; 359  : 
; 360  :     if ((filter & PACKET_TYPE_PROMISCUOUS) != 0) {

  000b8	e3140020	 tst         r4, #0x20

; 361  :         rxCtl |= RX_CTL_PROMISCUOUS;
; 362  :     } else {

  000bc	03a03cff	 moveq       r3, #0xFF, 24

; 363  :         rxCtl &= ~RX_CTL_PROMISCUOUS;

  000c0	0383307f	 orreq       r3, r3, #0x7F
  000c4	13821080	 orrne       r1, r2, #0x80
  000c8	00021003	 andeq       r1, r2, r3

; 364  :     }
; 365  : 
; 366  :     WritePacketPage(RX_CTL, rxCtl);

  000cc	e3a00f41	 mov         r0, #0x41, 30
  000d0	eb000000	 bl          WritePacketPage

; 367  : 
; 368  :     // Save actual filter
; 369  :     g_filter = filter;
; 370  : 
; 371  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (L"-CS8900ACurrentPacketFilter\r\n"));

  000d4	e5963440	 ldr         r3, [r6, #0x440]
  000d8	e588400c	 str         r4, [r8, #0xC]
  000dc	e3130a02	 tst         r3, #2, 20
  000e0	13130004	 tstne       r3, #4
  000e4	159f0008	 ldrne       r0, [pc, #8]
  000e8	1b000000	 blne        OALLogSerial

; 372  : }

  000ec	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  000f0	e12fff1e	 bx          lr
  000f4		 |$LN18@CS8900ACur|
  000f4		 |$LN19@CS8900ACur|
  000f4	00000000	 DCD         |??_C@_1DM@JKDMICEC@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAF?$AAi?$AAl?$AAt?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  000f8		 |$LN20@CS8900ACur|
  000f8	00000000	 DCD         |g_hash|
  000fc		 |$LN21@CS8900ACur|
  000fc	00000000	 DCD         |??_C@_1EM@MHLCOBBO@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAF?$AAi?$AAl?$AAt?$AAe?$AAr?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0@|
  00100		 |$LN22@CS8900ACur|
  00100	00000000	 DCD         |dpCurSettings|
  00104		 |$M43441|

			 ENDP  ; |CS8900ACurrentPacketFilter|

	EXPORT	|CS8900AMulticastList|
	EXPORT	|??_C@_1EA@KHPNHEKF@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAM?$AAu?$AAl?$AAt?$AAi?$AAc?$AAa?$AAs?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA1?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@MLDMDCPO@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAM?$AAu?$AAl?$AAt?$AAi?$AAc?$AAa?$AAs?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T43496| DCD	|$LN35@CS8900AMul|
	DCD	0x40005b01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@KHPNHEKF@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAM?$AAu?$AAl?$AAt?$AAi?$AAc?$AAa?$AAs?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA1?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "C", 0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0"
	DCB	0x0, "A", 0x0, "M", 0x0, "u", 0x0, "l", 0x0, "t", 0x0, "i"
	DCB	0x0, "c", 0x0, "a", 0x0, "s", 0x0, "t", 0x0, "L", 0x0, "i"
	DCB	0x0, "s", 0x0, "t", 0x0, "(", 0x0, "r", 0x0, "c", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "1", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@MLDMDCPO@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAM?$AAu?$AAl?$AAt?$AAi?$AAc?$AAa?$AAs?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd@| DCB "+"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "M", 0x0, "u", 0x0, "l", 0x0, "t", 0x0, "i"
	DCB	0x0, "c", 0x0, "a", 0x0, "s", 0x0, "t", 0x0, "L", 0x0, "i"
	DCB	0x0, "s", 0x0, "t", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |CS8900AMulticastList| PROC

; 379  : {

  00000		 |$LN35@CS8900AMul|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004		 |$M43493|
  00004	e1a06001	 mov         r6, r1
  00008	e1a07000	 mov         r7, r0

; 380  :     UINT32 i, j, crc, data, bit;
; 381  : 
; 382  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (
; 383  :         L"+RTL8139MulticastList(0x%08x, %d)\r\n", pAddresses, count
; 384  :     ));

  0000c	e59f9154	 ldr         r9, [pc, #0x154]
  00010	e599e440	 ldr         lr, [r9, #0x440]
  00014	e31e0a02	 tst         lr, #2, 20
  00018	0a000006	 beq         |$LN10@CS8900AMul|
  0001c	e31e0004	 tst         lr, #4
  00020	0a000004	 beq         |$LN10@CS8900AMul|
  00024	e59f0138	 ldr         r0, [pc, #0x138]
  00028	e1a02006	 mov         r2, r6
  0002c	e1a01007	 mov         r1, r7
  00030	eb000000	 bl          OALLogSerial
  00034	e599e440	 ldr         lr, [r9, #0x440]
  00038		 |$LN10@CS8900AMul|

; 385  : 
; 386  :     g_hash[0] = g_hash[1] = g_hash[2] = g_hash[3] = 0;

  00038	e59f4120	 ldr         r4, [pc, #0x120]
  0003c	e3a03000	 mov         r3, #0
  00040	e3a02000	 mov         r2, #0
  00044	e1c430b6	 strh        r3, [r4, #6]
  00048	e3a03000	 mov         r3, #0
  0004c	e1c420b4	 strh        r2, [r4, #4]
  00050	e3a01000	 mov         r1, #0
  00054	e1c430b2	 strh        r3, [r4, #2]
  00058	e1c410b0	 strh        r1, [r4]

; 387  :     for (i = 0; i < count; i++) {

  0005c	e3560000	 cmp         r6, #0
  00060	0a000025	 beq         |$LN5@CS8900AMul|
  00064	e59fa0f0	 ldr         r10, [pc, #0xF0]
  00068	e3a0b001	 mov         r11, #1
  0006c		 |$LL7@CS8900AMul|

; 388  :         data = crc = ComputeCRC(pAddresses, 6);

  0006c	e3e01000	 mvn         r1, #0
  00070	e3a00000	 mov         r0, #0
  00074		 |$LL20@CS8900AMul|
  00074	e7d02007	 ldrb        r2, [r0, +r7]
  00078	e3a08008	 mov         r8, #8
  0007c		 |$LL17@CS8900AMul|
  0007c	e3110102	 tst         r1, #2, 2
  00080	13a05001	 movne       r5, #1
  00084	03a05000	 moveq       r5, #0
  00088	e2023001	 and         r3, r2, #1
  0008c	e0335005	 eors        r5, r3, r5
  00090	e1a01081	 mov         r1, r1, lsl #1
  00094	1021300a	 eorne       r3, r1, r10
  00098	e1a020a2	 mov         r2, r2, lsr #1
  0009c	11831005	 orrne       r1, r3, r5
  000a0	e2588001	 subs        r8, r8, #1
  000a4	e20220ff	 and         r2, r2, #0xFF
  000a8	1afffff3	 bne         |$LL17@CS8900AMul|
  000ac	e2800001	 add         r0, r0, #1
  000b0	e3500006	 cmp         r0, #6
  000b4	3affffee	 bcc         |$LL20@CS8900AMul|

; 389  :         for (j = 0, bit = 0; j < 6; j++) {

  000b8	e3a00000	 mov         r0, #0
  000bc	e3a02006	 mov         r2, #6
  000c0		 |$LL4@CS8900AMul|

; 390  :             bit <<= 1;
; 391  :             bit |= (data & 1);

  000c0	e2013001	 and         r3, r1, #1
  000c4	e1830080	 orr         r0, r3, r0, lsl #1

; 392  :             data >>= 1;

  000c8	e1a010a1	 mov         r1, r1, lsr #1
  000cc	e2522001	 subs        r2, r2, #1
  000d0	1afffffa	 bne         |$LL4@CS8900AMul|

; 393  :         }
; 394  :         g_hash[bit >> 4] |= 1 << (bit & 0x0f);

  000d4	e1a03220	 mov         r3, r0, lsr #4
  000d8	e0841083	 add         r1, r4, r3, lsl #1
  000dc	e1d120b0	 ldrh        r2, [r1]
  000e0	e200300f	 and         r3, r0, #0xF

; 395  :         pAddresses += 6;

  000e4	e2877006	 add         r7, r7, #6
  000e8	e182331b	 orr         r3, r2, r11, lsl r3
  000ec	e2566001	 subs        r6, r6, #1
  000f0	e1c130b0	 strh        r3, [r1]
  000f4	1affffdc	 bne         |$LL7@CS8900AMul|

; 387  :     for (i = 0; i < count; i++) {

  000f8	e1d410b0	 ldrh        r1, [r4]
  000fc		 |$LN5@CS8900AMul|

; 396  :     }
; 397  : 
; 398  :     // But update only if all multicast mode isn't active
; 399  :     if ((g_filter & PACKET_TYPE_ALL_MULTICAST) == 0) {        

  000fc	e594300c	 ldr         r3, [r4, #0xC]
  00100	e3130004	 tst         r3, #4
  00104	1a00000c	 bne         |$LN1@CS8900AMul|

; 400  :         WritePacketPage(LOGICAL_ADDR_FILTER_BASE + 0, g_hash[0]);

  00108	e3a00e15	 mov         r0, #0x15, 28
  0010c	eb000000	 bl          WritePacketPage

; 401  :         WritePacketPage(LOGICAL_ADDR_FILTER_BASE + 2, g_hash[1]);

  00110	e1d410b2	 ldrh        r1, [r4, #2]
  00114	e3a05c01	 mov         r5, #1, 24
  00118	e3850052	 orr         r0, r5, #0x52
  0011c	eb000000	 bl          WritePacketPage

; 402  :         WritePacketPage(LOGICAL_ADDR_FILTER_BASE + 4, g_hash[2]);

  00120	e1d410b4	 ldrh        r1, [r4, #4]
  00124	e3a00f55	 mov         r0, #0x55, 30
  00128	eb000000	 bl          WritePacketPage

; 403  :         WritePacketPage(LOGICAL_ADDR_FILTER_BASE + 6, g_hash[3]);

  0012c	e1d410b6	 ldrh        r1, [r4, #6]
  00130	e3850056	 orr         r0, r5, #0x56
  00134	eb000000	 bl          WritePacketPage
  00138	e599e440	 ldr         lr, [r9, #0x440]
  0013c		 |$LN1@CS8900AMul|

; 404  :     }
; 405  : 
; 406  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (L"-CS8900AMulticastList(rc = 1)\r\n"));

  0013c	e31e0a02	 tst         lr, #2, 20
  00140	131e0004	 tstne       lr, #4
  00144	159f000c	 ldrne       r0, [pc, #0xC]
  00148	1b000000	 blne        OALLogSerial

; 407  :     return TRUE;

  0014c	e3a00001	 mov         r0, #1

; 408  : }

  00150	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00154	e12fff1e	 bx          lr
  00158		 |$LN36@CS8900AMul|
  00158		 |$LN37@CS8900AMul|
  00158	00000000	 DCD         |??_C@_1EA@KHPNHEKF@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAM?$AAu?$AAl?$AAt?$AAi?$AAc?$AAa?$AAs?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA1?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  0015c		 |$LN38@CS8900AMul|
  0015c	04c11db6	 DCD         0x4c11db6
  00160		 |$LN39@CS8900AMul|
  00160	00000000	 DCD         |g_hash|
  00164		 |$LN40@CS8900AMul|
  00164	00000000	 DCD         |??_C@_1EI@MLDMDCPO@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAM?$AAu?$AAl?$AAt?$AAi?$AAc?$AAa?$AAs?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd@|
  00168		 |$LN41@CS8900AMul|
  00168	00000000	 DCD         |dpCurSettings|
  0016c		 |$M43494|

			 ENDP  ; |CS8900AMulticastList|

	END
