; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\COMMON\ETHDRV\CS8900A\cs8900a.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|??_C@_1DA@HPAIFLP@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@OMDFJAIK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@JGGAHGPC@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAI?$AAn?$AAi?$AAt?$AA?5?$AAc?$AAh?$AAi?$AAp?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@MDLJIMFC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@NGLAKPGN@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AA0?$AA2@| [ DATA ] ; `string'
	EXPORT	|CS8900AInit|
	IMPORT	|OALLogSerial|
	IMPORT	|dpCurSettings|

  00000			 AREA	 |.bss|, NOINIT
|g_pCS8900| %	0x4

  00000			 AREA	 |.pdata|, PDATA
|$T43216| DCD	|$LN26@CS8900AIni|
	DCD	0x4000d904
; File c:\wince600\platform\common\src\common\ethdrv\cs8900a\cs8900a.c

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@HPAIFLP@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "C", 0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0"
	DCB	0x0, "A", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "("
	DCB	0x0, "r", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@OMDFJAIK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "C", 0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0"
	DCB	0x0, "A", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, " ", 0x0, "c"
	DCB	0x0, "a", 0x0, "r", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@JGGAHGPC@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAI?$AAn?$AAi?$AAt?$AA?5?$AAc?$AAh?$AAi?$AAp?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AN@| DCB "I"
	DCB	0x0, "N", 0x0, "F", 0x0, "O", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0", 0x0, "A"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, " ", 0x0, "c"
	DCB	0x0, "h", 0x0, "i", 0x0, "p", 0x0, " ", 0x0, "d", 0x0, "e"
	DCB	0x0, "t", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@MDLJIMFC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "C", 0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0"
	DCB	0x0, "A", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "t", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "h", 0x0, "i"
	DCB	0x0, "p", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@NGLAKPGN@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AA0?$AA2@| DCB "+"
	DCB	0x0, "C", 0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0"
	DCB	0x0, "A", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "("
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, ":", 0x0, "%", 0x0, "0", 0x0, "2"
	DCB	0x0, "x", 0x0, ":", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x"
	DCB	0x0, ":", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, ":"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, ":", 0x0, "%"
	DCB	0x0, "0", 0x0, "2", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |CS8900AInit| PROC

; 143  : {

  00000		 |$LN26@CS8900AIni|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd058	 sub         sp, sp, #0x58
  00010		 |$M43213|

; 144  :     BOOL rc = FALSE;

  00010	e3a03000	 mov         r3, #0
  00014	e58d3018	 str         r3, [sp, #0x18]

; 145  :     UINT32 count;
; 146  : 
; 147  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (
; 148  :         L"+CS8900AInit(0x%08x, 0x%08x, %02x:%02x:%02x:%02x:%02x:%02x)\r\n",
; 149  :         pAddress, offset, mac[0]&0xFF, mac[0]>>8, mac[1]&0xFF, mac[1]>>8,
; 150  :         mac[2]&0xFF, mac[2]>>8
; 151  :     ));

  00018	e59f332c	 ldr         r3, [pc, #0x32C]
  0001c	e5933440	 ldr         r3, [r3, #0x440]
  00020	e3130a02	 tst         r3, #2, 20
  00024	0a000025	 beq         |$LN12@CS8900AIni|
  00028	e59f331c	 ldr         r3, [pc, #0x31C]
  0002c	e5933440	 ldr         r3, [r3, #0x440]
  00030	e3130004	 tst         r3, #4
  00034	0a000021	 beq         |$LN12@CS8900AIni|
  00038	e59d3068	 ldr         r3, [sp, #0x68]
  0003c	e2833004	 add         r3, r3, #4
  00040	e1d330b0	 ldrh        r3, [r3]
  00044	e1a03443	 mov         r3, r3, asr #8
  00048	e58d3010	 str         r3, [sp, #0x10]
  0004c	e59d3068	 ldr         r3, [sp, #0x68]
  00050	e2833004	 add         r3, r3, #4
  00054	e1d330b0	 ldrh        r3, [r3]
  00058	e20330ff	 and         r3, r3, #0xFF
  0005c	e58d300c	 str         r3, [sp, #0xC]
  00060	e59d3068	 ldr         r3, [sp, #0x68]
  00064	e2833002	 add         r3, r3, #2
  00068	e1d330b0	 ldrh        r3, [r3]
  0006c	e1a03443	 mov         r3, r3, asr #8
  00070	e58d3008	 str         r3, [sp, #8]
  00074	e59d3068	 ldr         r3, [sp, #0x68]
  00078	e2833002	 add         r3, r3, #2
  0007c	e1d330b0	 ldrh        r3, [r3]
  00080	e20330ff	 and         r3, r3, #0xFF
  00084	e58d3004	 str         r3, [sp, #4]
  00088	e59d3068	 ldr         r3, [sp, #0x68]
  0008c	e1d330b0	 ldrh        r3, [r3]
  00090	e1a03443	 mov         r3, r3, asr #8
  00094	e58d3000	 str         r3, [sp]
  00098	e59d3068	 ldr         r3, [sp, #0x68]
  0009c	e1d330b0	 ldrh        r3, [r3]
  000a0	e20330ff	 and         r3, r3, #0xFF
  000a4	e59d2064	 ldr         r2, [sp, #0x64]
  000a8	e59d1060	 ldr         r1, [sp, #0x60]
  000ac	e59f02ac	 ldr         r0, [pc, #0x2AC]
  000b0	eb000000	 bl          OALLogSerial
  000b4	e3a03001	 mov         r3, #1
  000b8	e58d3034	 str         r3, [sp, #0x34]
  000bc	ea000001	 b           |$LN13@CS8900AIni|
  000c0		 |$LN12@CS8900AIni|
  000c0	e3a03000	 mov         r3, #0
  000c4	e58d3034	 str         r3, [sp, #0x34]
  000c8		 |$LN13@CS8900AIni|

; 152  : 
; 153  :     // Save address
; 154  :     g_pCS8900 = (CS8900A_REGS*)pAddress;

  000c8	e59d2060	 ldr         r2, [sp, #0x60]
  000cc	e59f3288	 ldr         r3, [pc, #0x288]
  000d0	e5832000	 str         r2, [r3]

; 155  : 
; 156  :     // First check if there is chip
; 157  :     if (ReadPacketPage(EISA_NUMBER) != CS8900A_EISA_NUMBER) {

  000d4	e3a00000	 mov         r0, #0
  000d8	eb000000	 bl          ReadPacketPage
  000dc	e1a03800	 mov         r3, r0, lsl #16
  000e0	e1a03823	 mov         r3, r3, lsr #16
  000e4	e1cd33b8	 strh        r3, [sp, #0x38]
  000e8	e1dd33b8	 ldrh        r3, [sp, #0x38]
  000ec	e1a02003	 mov         r2, r3
  000f0	e3a03c63	 mov         r3, #0x63, 24
  000f4	e383300e	 orr         r3, r3, #0xE
  000f8	e1520003	 cmp         r2, r3
  000fc	0a00000b	 beq         |$LN9@CS8900AIni|

; 158  :         OALMSGS(OAL_ERROR, (L"ERROR: CS8900AInit: Failed detect chip\r\n"));

  00100	e59f3244	 ldr         r3, [pc, #0x244]
  00104	e5933440	 ldr         r3, [r3, #0x440]
  00108	e3130001	 tst         r3, #1
  0010c	0a000004	 beq         |$LN14@CS8900AIni|
  00110	e59f0240	 ldr         r0, [pc, #0x240]
  00114	eb000000	 bl          OALLogSerial
  00118	e3a03001	 mov         r3, #1
  0011c	e58d303c	 str         r3, [sp, #0x3C]
  00120	ea000001	 b           |$LN15@CS8900AIni|
  00124		 |$LN14@CS8900AIni|
  00124	e3a03000	 mov         r3, #0
  00128	e58d303c	 str         r3, [sp, #0x3C]
  0012c		 |$LN15@CS8900AIni|

; 159  :         goto cleanUp;

  0012c	ea00006f	 b           |$cleanUp$43025|
  00130		 |$LN9@CS8900AIni|

; 160  :     }
; 161  : 
; 162  :     OALMSGS(OAL_INFO, (L"INFO: CS8900AInit chip detected\r\n"));

  00130	e59f3214	 ldr         r3, [pc, #0x214]
  00134	e5933440	 ldr         r3, [r3, #0x440]
  00138	e3130008	 tst         r3, #8
  0013c	0a000004	 beq         |$LN16@CS8900AIni|
  00140	e59f020c	 ldr         r0, [pc, #0x20C]
  00144	eb000000	 bl          OALLogSerial
  00148	e3a03001	 mov         r3, #1
  0014c	e58d3040	 str         r3, [sp, #0x40]
  00150	ea000001	 b           |$LN17@CS8900AIni|
  00154		 |$LN16@CS8900AIni|
  00154	e3a03000	 mov         r3, #0
  00158	e58d3040	 str         r3, [sp, #0x40]
  0015c		 |$LN17@CS8900AIni|

; 163  : 
; 164  :     // Reset chip
; 165  :     WritePacketPage(SELF_CTL, SELF_CTL_RESET);

  0015c	e3a01040	 mov         r1, #0x40
  00160	e3a00f45	 mov         r0, #0x45, 30
  00164	eb000000	 bl          WritePacketPage

; 166  :     count = RETRY_COUNT;

  00168	e3a03601	 mov         r3, #1, 12
  0016c	e58d3014	 str         r3, [sp, #0x14]
  00170		 |$LN8@CS8900AIni|

; 167  :     while (count-- > 0) {

  00170	e59d3014	 ldr         r3, [sp, #0x14]
  00174	e3530000	 cmp         r3, #0
  00178	e59d3014	 ldr         r3, [sp, #0x14]
  0017c	e2433001	 sub         r3, r3, #1
  00180	e58d3014	 str         r3, [sp, #0x14]
  00184	9a00000a	 bls         |$LN7@CS8900AIni|

; 168  :         if ((ReadPacketPage(SELF_ST) & SELF_ST_INITD) != 0) break;

  00188	e3a00c01	 mov         r0, #1, 24
  0018c	e3800036	 orr         r0, r0, #0x36
  00190	eb000000	 bl          ReadPacketPage
  00194	e1a03800	 mov         r3, r0, lsl #16
  00198	e1a03823	 mov         r3, r3, lsr #16
  0019c	e1cd34b4	 strh        r3, [sp, #0x44]
  001a0	e1dd34b4	 ldrh        r3, [sp, #0x44]
  001a4	e3130080	 tst         r3, #0x80
  001a8	0a000000	 beq         |$LN6@CS8900AIni|
  001ac	ea000000	 b           |$LN7@CS8900AIni|
  001b0		 |$LN6@CS8900AIni|

; 169  :     }

  001b0	eaffffee	 b           |$LN8@CS8900AIni|
  001b4		 |$LN7@CS8900AIni|

; 170  :     if (count == 0) {

  001b4	e59d3014	 ldr         r3, [sp, #0x14]
  001b8	e3530000	 cmp         r3, #0
  001bc	1a00000b	 bne         |$LN5@CS8900AIni|

; 171  :         OALMSGS(OAL_ERROR, (L"ERROR: CS8900AInit: Failed to reset card\r\n"));

  001c0	e59f3184	 ldr         r3, [pc, #0x184]
  001c4	e5933440	 ldr         r3, [r3, #0x440]
  001c8	e3130001	 tst         r3, #1
  001cc	0a000004	 beq         |$LN18@CS8900AIni|
  001d0	e59f0178	 ldr         r0, [pc, #0x178]
  001d4	eb000000	 bl          OALLogSerial
  001d8	e3a03001	 mov         r3, #1
  001dc	e58d3048	 str         r3, [sp, #0x48]
  001e0	ea000001	 b           |$LN19@CS8900AIni|
  001e4		 |$LN18@CS8900AIni|
  001e4	e3a03000	 mov         r3, #0
  001e8	e58d3048	 str         r3, [sp, #0x48]
  001ec		 |$LN19@CS8900AIni|

; 172  :         goto cleanUp;

  001ec	ea00003f	 b           |$cleanUp$43025|
  001f0		 |$LN5@CS8900AIni|

; 173  :     }
; 174  :     count = RETRY_COUNT;

  001f0	e3a03601	 mov         r3, #1, 12
  001f4	e58d3014	 str         r3, [sp, #0x14]
  001f8		 |$LN4@CS8900AIni|

; 175  :     while (count-- > 0) {

  001f8	e59d3014	 ldr         r3, [sp, #0x14]
  001fc	e3530000	 cmp         r3, #0
  00200	e59d3014	 ldr         r3, [sp, #0x14]
  00204	e2433001	 sub         r3, r3, #1
  00208	e58d3014	 str         r3, [sp, #0x14]
  0020c	9a00000a	 bls         |$LN3@CS8900AIni|

; 176  :         if ((ReadPacketPage(SELF_ST) & SELF_ST_SIBUSY) != 0) break;

  00210	e3a00c01	 mov         r0, #1, 24
  00214	e3800036	 orr         r0, r0, #0x36
  00218	eb000000	 bl          ReadPacketPage
  0021c	e1a03800	 mov         r3, r0, lsl #16
  00220	e1a03823	 mov         r3, r3, lsr #16
  00224	e1cd34bc	 strh        r3, [sp, #0x4C]
  00228	e1dd34bc	 ldrh        r3, [sp, #0x4C]
  0022c	e3130c01	 tst         r3, #1, 24
  00230	0a000000	 beq         |$LN2@CS8900AIni|
  00234	ea000000	 b           |$LN3@CS8900AIni|
  00238		 |$LN2@CS8900AIni|

; 177  :     }

  00238	eaffffee	 b           |$LN4@CS8900AIni|
  0023c		 |$LN3@CS8900AIni|

; 178  :     if (count == 0) {

  0023c	e59d3014	 ldr         r3, [sp, #0x14]
  00240	e3530000	 cmp         r3, #0
  00244	1a00000b	 bne         |$LN1@CS8900AIni|

; 179  :         OALMSGS(OAL_ERROR, (L"ERROR: CS8900AInit: Failed to reset card\r\n"));

  00248	e59f30fc	 ldr         r3, [pc, #0xFC]
  0024c	e5933440	 ldr         r3, [r3, #0x440]
  00250	e3130001	 tst         r3, #1
  00254	0a000004	 beq         |$LN20@CS8900AIni|
  00258	e59f00f0	 ldr         r0, [pc, #0xF0]
  0025c	eb000000	 bl          OALLogSerial
  00260	e3a03001	 mov         r3, #1
  00264	e58d3050	 str         r3, [sp, #0x50]
  00268	ea000001	 b           |$LN21@CS8900AIni|
  0026c		 |$LN20@CS8900AIni|
  0026c	e3a03000	 mov         r3, #0
  00270	e58d3050	 str         r3, [sp, #0x50]
  00274		 |$LN21@CS8900AIni|

; 180  :         goto cleanUp;

  00274	ea00001d	 b           |$cleanUp$43025|
  00278		 |$LN1@CS8900AIni|

; 181  :     }
; 182  : 
; 183  :     // Set MAC address
; 184  :     WritePacketPage(INDIVIDUAL_ADDRESS + 0, mac[0]);

  00278	e59d3068	 ldr         r3, [sp, #0x68]
  0027c	e1d310b0	 ldrh        r1, [r3]
  00280	e3a00f56	 mov         r0, #0x56, 30
  00284	eb000000	 bl          WritePacketPage

; 185  :     WritePacketPage(INDIVIDUAL_ADDRESS + 2, mac[1]);

  00288	e59d3068	 ldr         r3, [sp, #0x68]
  0028c	e2833002	 add         r3, r3, #2
  00290	e1d310b0	 ldrh        r1, [r3]
  00294	e3a00c01	 mov         r0, #1, 24
  00298	e380005a	 orr         r0, r0, #0x5A
  0029c	eb000000	 bl          WritePacketPage

; 186  :     WritePacketPage(INDIVIDUAL_ADDRESS + 4, mac[2]);

  002a0	e59d3068	 ldr         r3, [sp, #0x68]
  002a4	e2833004	 add         r3, r3, #4
  002a8	e1d310b0	 ldrh        r1, [r3]
  002ac	e3a00f57	 mov         r0, #0x57, 30
  002b0	eb000000	 bl          WritePacketPage

; 187  : 
; 188  :     // Enable receive
; 189  :     WritePacketPage(RX_CTL, RX_CTL_RX_OK|RX_CTL_INDIVIDUAL|RX_CTL_BROADCAST);

  002b4	e3a01c0d	 mov         r1, #0xD, 24
  002b8	e3a00f41	 mov         r0, #0x41, 30
  002bc	eb000000	 bl          WritePacketPage

; 190  : 
; 191  :     // Enable interrupt on receive
; 192  :     WritePacketPage(RX_CFG, RX_CFG_RX_OK_IE);

  002c0	e3a01c01	 mov         r1, #1, 24
  002c4	e3810002	 orr         r0, r1, #2
  002c8	eb000000	 bl          WritePacketPage

; 193  : 
; 194  :     // Let assume that hardware is using INTRQ0
; 195  :     WritePacketPage(INTERRUPT_NUMBER, 0);

  002cc	e3a01000	 mov         r1, #0
  002d0	e3a00022	 mov         r0, #0x22
  002d4	eb000000	 bl          WritePacketPage

; 196  : 
; 197  :     // Enable
; 198  :     WritePacketPage(LINE_CTL, LINE_CTL_RX_ON|LINE_CTL_TX_ON);

  002d8	e3a010c0	 mov         r1, #0xC0
  002dc	e3a00c01	 mov         r0, #1, 24
  002e0	e3800012	 orr         r0, r0, #0x12
  002e4	eb000000	 bl          WritePacketPage

; 199  : 
; 200  :     // Done
; 201  :     rc = TRUE;

  002e8	e3a03001	 mov         r3, #1
  002ec	e58d3018	 str         r3, [sp, #0x18]
  002f0		 |$cleanUp$43025|

; 202  : 
; 203  : cleanUp:
; 204  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (L"-CS8900AInit(rc = %d)\r\n", rc));

  002f0	e59f3054	 ldr         r3, [pc, #0x54]
  002f4	e5933440	 ldr         r3, [r3, #0x440]
  002f8	e3130a02	 tst         r3, #2, 20
  002fc	0a000009	 beq         |$LN22@CS8900AIni|
  00300	e59f3044	 ldr         r3, [pc, #0x44]
  00304	e5933440	 ldr         r3, [r3, #0x440]
  00308	e3130004	 tst         r3, #4
  0030c	0a000005	 beq         |$LN22@CS8900AIni|
  00310	e59d1018	 ldr         r1, [sp, #0x18]
  00314	e59f002c	 ldr         r0, [pc, #0x2C]
  00318	eb000000	 bl          OALLogSerial
  0031c	e3a03001	 mov         r3, #1
  00320	e58d3054	 str         r3, [sp, #0x54]
  00324	ea000001	 b           |$LN23@CS8900AIni|
  00328		 |$LN22@CS8900AIni|
  00328	e3a03000	 mov         r3, #0
  0032c	e58d3054	 str         r3, [sp, #0x54]
  00330		 |$LN23@CS8900AIni|

; 205  :     return rc;

  00330	e59d3018	 ldr         r3, [sp, #0x18]
  00334	e58d3030	 str         r3, [sp, #0x30]

; 206  : }

  00338	e59d0030	 ldr         r0, [sp, #0x30]
  0033c	e28dd058	 add         sp, sp, #0x58
  00340	e89d6000	 ldmia       sp, {sp, lr}
  00344	e12fff1e	 bx          lr
  00348		 |$LN27@CS8900AIni|
  00348		 |$LN28@CS8900AIni|
  00348	00000000	 DCD         |??_C@_1DA@HPAIFLP@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  0034c		 |$LN29@CS8900AIni|
  0034c	00000000	 DCD         |dpCurSettings|
  00350		 |$LN30@CS8900AIni|
  00350	00000000	 DCD         |??_C@_1FG@OMDFJAIK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr?$AAe@|
  00354		 |$LN31@CS8900AIni|
  00354	00000000	 DCD         |??_C@_1EE@JGGAHGPC@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAI?$AAn?$AAi?$AAt?$AA?5?$AAc?$AAh?$AAi?$AAp?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?$AN@|
  00358		 |$LN32@CS8900AIni|
  00358	00000000	 DCD         |??_C@_1FC@MDLJIMFC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc@|
  0035c		 |$LN33@CS8900AIni|
  0035c	00000000	 DCD         |g_pCS8900|
  00360		 |$LN34@CS8900AIni|
  00360	00000000	 DCD         |??_C@_1HM@NGLAKPGN@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AA0?$AA2@|
  00364		 |$M43214|

			 ENDP  ; |CS8900AInit|

	EXPORT	|??_C@_1DK@NOGHLOAJ@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAS?$AAe?$AAn?$AAd?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@EJDJMGMM@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAS?$AAe?$AAn?$AAd?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|CS8900ASendFrame|
	IMPORT	|WRITE_PORT_USHORT|

  00008			 AREA	 |.pdata|, PDATA
|$T43238| DCD	|$LN19@CS8900ASen|
	DCD	0x40007a04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@NOGHLOAJ@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAS?$AAe?$AAn?$AAd?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "C", 0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0"
	DCB	0x0, "A", 0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "F"
	DCB	0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "(", 0x0, "r"
	DCB	0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@EJDJMGMM@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAS?$AAe?$AAn?$AAd?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "C", 0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0"
	DCB	0x0, "A", 0x0, "S", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "F"
	DCB	0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ","
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  00364			 AREA	 |.text|, CODE, ARM

  00364		 |CS8900ASendFrame| PROC

; 213  : {

  00364		 |$LN19@CS8900ASen|
  00364	e1a0c00d	 mov         r12, sp
  00368	e92d0003	 stmdb       sp!, {r0, r1}
  0036c	e92d5000	 stmdb       sp!, {r12, lr}
  00370	e24dd020	 sub         sp, sp, #0x20
  00374		 |$M43235|

; 214  :     BOOL rc = FALSE;

  00374	e3a03000	 mov         r3, #0
  00378	e58d3004	 str         r3, [sp, #4]

; 215  :     UINT32 count;
; 216  : 
; 217  :     OALMSGS(OAL_ETHER&&OAL_VERBOSE, (
; 218  :         L"+CS8900ASendFrame(0x%08x, %d)\r\n", pData, length
; 219  :     ));

  0037c	e59f31bc	 ldr         r3, [pc, #0x1BC]
  00380	e5933440	 ldr         r3, [r3, #0x440]
  00384	e3130a02	 tst         r3, #2, 20
  00388	0a00000a	 beq         |$LN9@CS8900ASen|
  0038c	e59f31ac	 ldr         r3, [pc, #0x1AC]
  00390	e5933440	 ldr         r3, [r3, #0x440]
  00394	e3130902	 tst         r3, #2, 18
  00398	0a000006	 beq         |$LN9@CS8900ASen|
  0039c	e59d202c	 ldr         r2, [sp, #0x2C]
  003a0	e59d1028	 ldr         r1, [sp, #0x28]
  003a4	e59f019c	 ldr         r0, [pc, #0x19C]
  003a8	eb000000	 bl          OALLogSerial
  003ac	e3a03001	 mov         r3, #1
  003b0	e58d300c	 str         r3, [sp, #0xC]
  003b4	ea000001	 b           |$LN10@CS8900ASen|
  003b8		 |$LN9@CS8900ASen|
  003b8	e3a03000	 mov         r3, #0
  003bc	e58d300c	 str         r3, [sp, #0xC]
  003c0		 |$LN10@CS8900ASen|

; 220  : 
; 221  :     // Send Command
; 222  :     OUTPORT16(&g_pCS8900->TXCMD, TX_CMD_START_ALL);

  003c0	e3a010c0	 mov         r1, #0xC0
  003c4	e59f3178	 ldr         r3, [pc, #0x178]
  003c8	e5933000	 ldr         r3, [r3]
  003cc	e2830004	 add         r0, r3, #4
  003d0	eb000000	 bl          WRITE_PORT_USHORT

; 223  :     OUTPORT16(&g_pCS8900->TXLENGTH, length);

  003d4	e59d302c	 ldr         r3, [sp, #0x2C]
  003d8	e1a01803	 mov         r1, r3, lsl #16
  003dc	e1a01821	 mov         r1, r1, lsr #16
  003e0	e59f315c	 ldr         r3, [pc, #0x15C]
  003e4	e5933000	 ldr         r3, [r3]
  003e8	e2830006	 add         r0, r3, #6
  003ec	eb000000	 bl          WRITE_PORT_USHORT

; 224  : 
; 225  :     count = RETRY_COUNT;

  003f0	e3a03601	 mov         r3, #1, 12
  003f4	e58d3000	 str         r3, [sp]
  003f8		 |$LN6@CS8900ASen|

; 226  :     while (count-- > 0) {

  003f8	e59d3000	 ldr         r3, [sp]
  003fc	e3530000	 cmp         r3, #0
  00400	e59d3000	 ldr         r3, [sp]
  00404	e2433001	 sub         r3, r3, #1
  00408	e58d3000	 str         r3, [sp]
  0040c	9a000009	 bls         |$LN5@CS8900ASen|

; 227  :         if ((ReadPacketPage(BUS_ST) & BUS_ST_TX_RDY) != 0) break;

  00410	e3a00f4e	 mov         r0, #0x4E, 30
  00414	eb000000	 bl          ReadPacketPage
  00418	e1a03800	 mov         r3, r0, lsl #16
  0041c	e1a03823	 mov         r3, r3, lsr #16
  00420	e1cd31b0	 strh        r3, [sp, #0x10]
  00424	e1dd31b0	 ldrh        r3, [sp, #0x10]
  00428	e3130c01	 tst         r3, #1, 24
  0042c	0a000000	 beq         |$LN4@CS8900ASen|
  00430	ea000000	 b           |$LN5@CS8900ASen|
  00434		 |$LN4@CS8900ASen|

; 228  :     }

  00434	eaffffef	 b           |$LN6@CS8900ASen|
  00438		 |$LN5@CS8900ASen|

; 229  :     if (count == 0) goto cleanUp;

  00438	e59d3000	 ldr         r3, [sp]
  0043c	e3530000	 cmp         r3, #0
  00440	1a000000	 bne         |$LN3@CS8900ASen|
  00444	ea000014	 b           |$cleanUp$43059|
  00448		 |$LN3@CS8900ASen|

; 230  : 
; 231  :     length = (length + 1) >> 1;

  00448	e59d302c	 ldr         r3, [sp, #0x2C]
  0044c	e2833001	 add         r3, r3, #1
  00450	e1a030a3	 mov         r3, r3, lsr #1
  00454	e58d302c	 str         r3, [sp, #0x2C]
  00458		 |$LN2@CS8900ASen|

; 232  :     while (length-- > 0) {

  00458	e59d302c	 ldr         r3, [sp, #0x2C]
  0045c	e3530000	 cmp         r3, #0
  00460	e59d302c	 ldr         r3, [sp, #0x2C]
  00464	e2433001	 sub         r3, r3, #1
  00468	e58d302c	 str         r3, [sp, #0x2C]
  0046c	9a000008	 bls         |$LN1@CS8900ASen|

; 233  :         OUTPORT16(&g_pCS8900->DATA0, *(UINT16*)pData);

  00470	e59d3028	 ldr         r3, [sp, #0x28]
  00474	e1d310b0	 ldrh        r1, [r3]
  00478	e59f30c4	 ldr         r3, [pc, #0xC4]
  0047c	e5930000	 ldr         r0, [r3]
  00480	eb000000	 bl          WRITE_PORT_USHORT

; 234  :         pData += sizeof(UINT16);

  00484	e59d3028	 ldr         r3, [sp, #0x28]
  00488	e2833002	 add         r3, r3, #2
  0048c	e58d3028	 str         r3, [sp, #0x28]

; 235  :     }

  00490	eafffff0	 b           |$LN2@CS8900ASen|
  00494		 |$LN1@CS8900ASen|

; 236  : 
; 237  :     rc = TRUE;

  00494	e3a03001	 mov         r3, #1
  00498	e58d3004	 str         r3, [sp, #4]
  0049c		 |$cleanUp$43059|

; 238  : 
; 239  : cleanUp:
; 240  :     OALMSGS(OAL_ETHER&&OAL_VERBOSE, (L"-CS8900ASendFrame(rc = %d)\r\n", !rc));

  0049c	e59f309c	 ldr         r3, [pc, #0x9C]
  004a0	e5933440	 ldr         r3, [r3, #0x440]
  004a4	e3130a02	 tst         r3, #2, 20
  004a8	0a000011	 beq         |$LN11@CS8900ASen|
  004ac	e59f308c	 ldr         r3, [pc, #0x8C]
  004b0	e5933440	 ldr         r3, [r3, #0x440]
  004b4	e3130902	 tst         r3, #2, 18
  004b8	0a00000d	 beq         |$LN11@CS8900ASen|
  004bc	e59d3004	 ldr         r3, [sp, #4]
  004c0	e3530000	 cmp         r3, #0
  004c4	1a000002	 bne         |$LN12@CS8900ASen|
  004c8	e3a03001	 mov         r3, #1
  004cc	e58d3014	 str         r3, [sp, #0x14]
  004d0	ea000001	 b           |$LN13@CS8900ASen|
  004d4		 |$LN12@CS8900ASen|
  004d4	e3a03000	 mov         r3, #0
  004d8	e58d3014	 str         r3, [sp, #0x14]
  004dc		 |$LN13@CS8900ASen|
  004dc	e59d1014	 ldr         r1, [sp, #0x14]
  004e0	e59f0054	 ldr         r0, [pc, #0x54]
  004e4	eb000000	 bl          OALLogSerial
  004e8	e3a03001	 mov         r3, #1
  004ec	e58d3018	 str         r3, [sp, #0x18]
  004f0	ea000001	 b           |$LN14@CS8900ASen|
  004f4		 |$LN11@CS8900ASen|
  004f4	e3a03000	 mov         r3, #0
  004f8	e58d3018	 str         r3, [sp, #0x18]
  004fc		 |$LN14@CS8900ASen|

; 241  :     return !rc;

  004fc	e59d3004	 ldr         r3, [sp, #4]
  00500	e3530000	 cmp         r3, #0
  00504	1a000002	 bne         |$LN15@CS8900ASen|
  00508	e3a03001	 mov         r3, #1
  0050c	e58d301c	 str         r3, [sp, #0x1C]
  00510	ea000001	 b           |$LN16@CS8900ASen|
  00514		 |$LN15@CS8900ASen|
  00514	e3a03000	 mov         r3, #0
  00518	e58d301c	 str         r3, [sp, #0x1C]
  0051c		 |$LN16@CS8900ASen|
  0051c	e59d301c	 ldr         r3, [sp, #0x1C]
  00520	e1a03803	 mov         r3, r3, lsl #16
  00524	e1a03823	 mov         r3, r3, lsr #16
  00528	e1cd30b8	 strh        r3, [sp, #8]

; 242  : }

  0052c	e1dd00b8	 ldrh        r0, [sp, #8]
  00530	e28dd020	 add         sp, sp, #0x20
  00534	e89d6000	 ldmia       sp, {sp, lr}
  00538	e12fff1e	 bx          lr
  0053c		 |$LN20@CS8900ASen|
  0053c		 |$LN21@CS8900ASen|
  0053c	00000000	 DCD         |??_C@_1DK@NOGHLOAJ@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAS?$AAe?$AAn?$AAd?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00540		 |$LN22@CS8900ASen|
  00540	00000000	 DCD         |dpCurSettings|
  00544		 |$LN23@CS8900ASen|
  00544	00000000	 DCD         |g_pCS8900|
  00548		 |$LN24@CS8900ASen|
  00548	00000000	 DCD         |??_C@_1EA@EJDJMGMM@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAS?$AAe?$AAn?$AAd?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  0054c		 |$M43236|

			 ENDP  ; |CS8900ASendFrame|

	EXPORT	|??_C@_1EA@NNPLDGPH@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAG?$AAe?$AAt?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@KOGIIKI@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAG?$AAe?$AAt?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|CS8900AGetFrame|
	IMPORT	|READ_PORT_USHORT|

  00010			 AREA	 |.pdata|, PDATA
|$T43253| DCD	|$LN15@CS8900AGet|
	DCD	0x40009504

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@NNPLDGPH@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAG?$AAe?$AAt?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "C", 0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0"
	DCB	0x0, "A", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "F", 0x0, "r"
	DCB	0x0, "a", 0x0, "m", 0x0, "e", 0x0, "(", 0x0, "l", 0x0, "e"
	DCB	0x0, "n", 0x0, "g", 0x0, "t", 0x0, "h", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@KOGIIKI@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAG?$AAe?$AAt?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "C", 0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0"
	DCB	0x0, "A", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "F", 0x0, "r"
	DCB	0x0, "a", 0x0, "m", 0x0, "e", 0x0, "(", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  0054c			 AREA	 |.text|, CODE, ARM

  0054c		 |CS8900AGetFrame| PROC

; 249  : {

  0054c		 |$LN15@CS8900AGet|
  0054c	e1a0c00d	 mov         r12, sp
  00550	e92d0003	 stmdb       sp!, {r0, r1}
  00554	e92d5000	 stmdb       sp!, {r12, lr}
  00558	e24dd024	 sub         sp, sp, #0x24
  0055c		 |$M43250|

; 250  :     UINT16 isq, length, status, count, data;
; 251  : 
; 252  :     OALMSGS(OAL_ETHER&&OAL_VERBOSE, (
; 253  :         L"+CS8900AGetFrame(0x%08x, %d)\r\n", pData, *pLength
; 254  :     ));

  0055c	e59f3230	 ldr         r3, [pc, #0x230]
  00560	e5933440	 ldr         r3, [r3, #0x440]
  00564	e3130a02	 tst         r3, #2, 20
  00568	0a00000b	 beq         |$LN9@CS8900AGet|
  0056c	e59f3220	 ldr         r3, [pc, #0x220]
  00570	e5933440	 ldr         r3, [r3, #0x440]
  00574	e3130902	 tst         r3, #2, 18
  00578	0a000007	 beq         |$LN9@CS8900AGet|
  0057c	e59d3030	 ldr         r3, [sp, #0x30]
  00580	e1d320b0	 ldrh        r2, [r3]
  00584	e59d102c	 ldr         r1, [sp, #0x2C]
  00588	e59f020c	 ldr         r0, [pc, #0x20C]
  0058c	eb000000	 bl          OALLogSerial
  00590	e3a03001	 mov         r3, #1
  00594	e58d3010	 str         r3, [sp, #0x10]
  00598	ea000001	 b           |$LN10@CS8900AGet|
  0059c		 |$LN9@CS8900AGet|
  0059c	e3a03000	 mov         r3, #0
  005a0	e58d3010	 str         r3, [sp, #0x10]
  005a4		 |$LN10@CS8900AGet|

; 255  : 
; 256  :     length = 0;

  005a4	e3a03000	 mov         r3, #0
  005a8	e1cd30b2	 strh        r3, [sp, #2]

; 257  :     isq = INPORT16(&g_pCS8900->ISQ);

  005ac	e59f31e4	 ldr         r3, [pc, #0x1E4]
  005b0	e5933000	 ldr         r3, [r3]
  005b4	e2830008	 add         r0, r3, #8
  005b8	eb000000	 bl          READ_PORT_USHORT
  005bc	e1a03800	 mov         r3, r0, lsl #16
  005c0	e1a03823	 mov         r3, r3, lsr #16
  005c4	e1cd31b4	 strh        r3, [sp, #0x14]
  005c8	e1dd31b4	 ldrh        r3, [sp, #0x14]
  005cc	e1cd30b4	 strh        r3, [sp, #4]

; 258  :     if ((isq & ISQ_ID_MASK) == RX_EVENT_ID && (isq & RX_EVENT_RX_OK) != 0) {

  005d0	e1dd30b4	 ldrh        r3, [sp, #4]
  005d4	e203303f	 and         r3, r3, #0x3F
  005d8	e3530004	 cmp         r3, #4
  005dc	1a000052	 bne         |$LN6@CS8900AGet|
  005e0	e1dd30b4	 ldrh        r3, [sp, #4]
  005e4	e3130c01	 tst         r3, #1, 24
  005e8	0a00004f	 beq         |$LN6@CS8900AGet|

; 259  : 
; 260  :         // Get RxStatus and length
; 261  :         status = INPORT16(&g_pCS8900->DATA0);

  005ec	e59f31a4	 ldr         r3, [pc, #0x1A4]
  005f0	e5930000	 ldr         r0, [r3]
  005f4	eb000000	 bl          READ_PORT_USHORT
  005f8	e1a03800	 mov         r3, r0, lsl #16
  005fc	e1a03823	 mov         r3, r3, lsr #16
  00600	e1cd31b6	 strh        r3, [sp, #0x16]
  00604	e1dd31b6	 ldrh        r3, [sp, #0x16]
  00608	e1cd30b8	 strh        r3, [sp, #8]

; 262  :         length = INPORT16(&g_pCS8900->DATA0);

  0060c	e59f3184	 ldr         r3, [pc, #0x184]
  00610	e5930000	 ldr         r0, [r3]
  00614	eb000000	 bl          READ_PORT_USHORT
  00618	e1a03800	 mov         r3, r0, lsl #16
  0061c	e1a03823	 mov         r3, r3, lsr #16
  00620	e1cd31b8	 strh        r3, [sp, #0x18]
  00624	e1dd31b8	 ldrh        r3, [sp, #0x18]
  00628	e1cd30b2	 strh        r3, [sp, #2]

; 263  : 
; 264  :         if (length > *pLength) {

  0062c	e1dd30b2	 ldrh        r3, [sp, #2]
  00630	e1a02003	 mov         r2, r3
  00634	e59d3030	 ldr         r3, [sp, #0x30]
  00638	e1d330b0	 ldrh        r3, [r3]
  0063c	e1520003	 cmp         r2, r3
  00640	da000011	 ble         |$LN5@CS8900AGet|

; 265  :             // If packet doesn't fit in buffer, skip it
; 266  :             data = ReadPacketPage(RX_CFG);

  00644	e3a00c01	 mov         r0, #1, 24
  00648	e3800002	 orr         r0, r0, #2
  0064c	eb000000	 bl          ReadPacketPage
  00650	e1a03800	 mov         r3, r0, lsl #16
  00654	e1a03823	 mov         r3, r3, lsr #16
  00658	e1cd31ba	 strh        r3, [sp, #0x1A]
  0065c	e1dd31ba	 ldrh        r3, [sp, #0x1A]
  00660	e1cd30b6	 strh        r3, [sp, #6]

; 267  :             WritePacketPage(RX_CFG, data | RX_CFG_SKIP_1);

  00664	e1dd30b6	 ldrh        r3, [sp, #6]
  00668	e3833040	 orr         r3, r3, #0x40
  0066c	e1a01803	 mov         r1, r3, lsl #16
  00670	e1a01821	 mov         r1, r1, lsr #16
  00674	e3a00c01	 mov         r0, #1, 24
  00678	e3800002	 orr         r0, r0, #2
  0067c	eb000000	 bl          WritePacketPage

; 268  :             length = 0;

  00680	e3a03000	 mov         r3, #0
  00684	e1cd30b2	 strh        r3, [sp, #2]

; 269  :         } else {

  00688	ea000027	 b           |$LN4@CS8900AGet|
  0068c		 |$LN5@CS8900AGet|

; 270  :             // Read packet data
; 271  :             count = length;

  0068c	e1dd30b2	 ldrh        r3, [sp, #2]
  00690	e1cd30b0	 strh        r3, [sp]
  00694		 |$LN3@CS8900AGet|

; 272  :             while (count > 1) {

  00694	e1dd30b0	 ldrh        r3, [sp]
  00698	e3530001	 cmp         r3, #1
  0069c	da000013	 ble         |$LN2@CS8900AGet|

; 273  :                 data = INPORT16(&g_pCS8900->DATA0);

  006a0	e59f30f0	 ldr         r3, [pc, #0xF0]
  006a4	e5930000	 ldr         r0, [r3]
  006a8	eb000000	 bl          READ_PORT_USHORT
  006ac	e1a03800	 mov         r3, r0, lsl #16
  006b0	e1a03823	 mov         r3, r3, lsr #16
  006b4	e1cd31bc	 strh        r3, [sp, #0x1C]
  006b8	e1dd31bc	 ldrh        r3, [sp, #0x1C]
  006bc	e1cd30b6	 strh        r3, [sp, #6]

; 274  :                 *(UINT16*)pData = data;

  006c0	e1dd20b6	 ldrh        r2, [sp, #6]
  006c4	e59d302c	 ldr         r3, [sp, #0x2C]
  006c8	e1c320b0	 strh        r2, [r3]

; 275  :                 pData += sizeof(UINT16);

  006cc	e59d302c	 ldr         r3, [sp, #0x2C]
  006d0	e2833002	 add         r3, r3, #2
  006d4	e58d302c	 str         r3, [sp, #0x2C]

; 276  :                 count -= sizeof(UINT16);

  006d8	e1dd30b0	 ldrh        r3, [sp]
  006dc	e2433002	 sub         r3, r3, #2
  006e0	e1a03803	 mov         r3, r3, lsl #16
  006e4	e1a03823	 mov         r3, r3, lsr #16
  006e8	e1cd30b0	 strh        r3, [sp]

; 277  :             }

  006ec	eaffffe8	 b           |$LN3@CS8900AGet|
  006f0		 |$LN2@CS8900AGet|

; 278  : 
; 279  :             // Read last one byte
; 280  :             if (count > 0) {

  006f0	e1dd30b0	 ldrh        r3, [sp]
  006f4	e3530000	 cmp         r3, #0
  006f8	da00000b	 ble         |$LN1@CS8900AGet|

; 281  :                 data = INPORT16(&g_pCS8900->DATA0);

  006fc	e59f3094	 ldr         r3, [pc, #0x94]
  00700	e5930000	 ldr         r0, [r3]
  00704	eb000000	 bl          READ_PORT_USHORT
  00708	e1a03800	 mov         r3, r0, lsl #16
  0070c	e1a03823	 mov         r3, r3, lsr #16
  00710	e1cd31be	 strh        r3, [sp, #0x1E]
  00714	e1dd31be	 ldrh        r3, [sp, #0x1E]
  00718	e1cd30b6	 strh        r3, [sp, #6]

; 282  :                 *pData = (UINT8)data;

  0071c	e1dd30b6	 ldrh        r3, [sp, #6]
  00720	e20320ff	 and         r2, r3, #0xFF
  00724	e59d302c	 ldr         r3, [sp, #0x2C]
  00728	e5c32000	 strb        r2, [r3]
  0072c		 |$LN1@CS8900AGet|
  0072c		 |$LN4@CS8900AGet|
  0072c		 |$LN6@CS8900AGet|

; 283  :             }
; 284  :         }
; 285  :     }
; 286  : 
; 287  :     // Return packet size
; 288  :     *pLength = length;

  0072c	e1dd20b2	 ldrh        r2, [sp, #2]
  00730	e59d3030	 ldr         r3, [sp, #0x30]
  00734	e1c320b0	 strh        r2, [r3]

; 289  : 
; 290  :     OALMSGS(OAL_ETHER&&OAL_VERBOSE, (
; 291  :         L"-CS8900AGetFrame(length = %d)\r\n", length
; 292  :     ));

  00738	e59f3054	 ldr         r3, [pc, #0x54]
  0073c	e5933440	 ldr         r3, [r3, #0x440]
  00740	e3130a02	 tst         r3, #2, 20
  00744	0a000009	 beq         |$LN11@CS8900AGet|
  00748	e59f3044	 ldr         r3, [pc, #0x44]
  0074c	e5933440	 ldr         r3, [r3, #0x440]
  00750	e3130902	 tst         r3, #2, 18
  00754	0a000005	 beq         |$LN11@CS8900AGet|
  00758	e1dd10b2	 ldrh        r1, [sp, #2]
  0075c	e59f002c	 ldr         r0, [pc, #0x2C]
  00760	eb000000	 bl          OALLogSerial
  00764	e3a03001	 mov         r3, #1
  00768	e58d3020	 str         r3, [sp, #0x20]
  0076c	ea000001	 b           |$LN12@CS8900AGet|
  00770		 |$LN11@CS8900AGet|
  00770	e3a03000	 mov         r3, #0
  00774	e58d3020	 str         r3, [sp, #0x20]
  00778		 |$LN12@CS8900AGet|

; 293  :     return length;

  00778	e1dd30b2	 ldrh        r3, [sp, #2]
  0077c	e1cd30bc	 strh        r3, [sp, #0xC]

; 294  : }

  00780	e1dd00bc	 ldrh        r0, [sp, #0xC]
  00784	e28dd024	 add         sp, sp, #0x24
  00788	e89d6000	 ldmia       sp, {sp, lr}
  0078c	e12fff1e	 bx          lr
  00790		 |$LN16@CS8900AGet|
  00790		 |$LN17@CS8900AGet|
  00790	00000000	 DCD         |??_C@_1EA@NNPLDGPH@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAG?$AAe?$AAt?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AAl?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00794		 |$LN18@CS8900AGet|
  00794	00000000	 DCD         |dpCurSettings|
  00798		 |$LN19@CS8900AGet|
  00798	00000000	 DCD         |g_pCS8900|
  0079c		 |$LN20@CS8900AGet|
  0079c	00000000	 DCD         |??_C@_1DO@KOGIIKI@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAG?$AAe?$AAt?$AAF?$AAr?$AAa?$AAm?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  007a0		 |$M43251|

			 ENDP  ; |CS8900AGetFrame|

	EXPORT	|??_C@_1CK@MHFPLOF@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@HMACONAD@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|CS8900AEnableInts|

  00018			 AREA	 |.pdata|, PDATA
|$T43267| DCD	|$LN9@CS8900AEna|
	DCD	0x40003502

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@MHFPLOF@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "C", 0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0"
	DCB	0x0, "A", 0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@HMACONAD@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "C", 0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0"
	DCB	0x0, "A", 0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  007a0			 AREA	 |.text|, CODE, ARM

  007a0		 |CS8900AEnableInts| PROC

; 301  : {

  007a0		 |$LN9@CS8900AEna|
  007a0	e52de004	 str         lr, [sp, #-4]!
  007a4	e24dd010	 sub         sp, sp, #0x10
  007a8		 |$M43264|

; 302  :     UINT16 data;
; 303  : 
; 304  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (L"+CS8900AEnableInts\r\n"));

  007a8	e59f30bc	 ldr         r3, [pc, #0xBC]
  007ac	e5933440	 ldr         r3, [r3, #0x440]
  007b0	e3130a02	 tst         r3, #2, 20
  007b4	0a000008	 beq         |$LN3@CS8900AEna|
  007b8	e59f30ac	 ldr         r3, [pc, #0xAC]
  007bc	e5933440	 ldr         r3, [r3, #0x440]
  007c0	e3130004	 tst         r3, #4
  007c4	0a000004	 beq         |$LN3@CS8900AEna|
  007c8	e59f00a0	 ldr         r0, [pc, #0xA0]
  007cc	eb000000	 bl          OALLogSerial
  007d0	e3a03001	 mov         r3, #1
  007d4	e58d3004	 str         r3, [sp, #4]
  007d8	ea000001	 b           |$LN4@CS8900AEna|
  007dc		 |$LN3@CS8900AEna|
  007dc	e3a03000	 mov         r3, #0
  007e0	e58d3004	 str         r3, [sp, #4]
  007e4		 |$LN4@CS8900AEna|

; 305  :     data = ReadPacketPage(BUS_CTL);

  007e4	e3a00c01	 mov         r0, #1, 24
  007e8	e3800016	 orr         r0, r0, #0x16
  007ec	eb000000	 bl          ReadPacketPage
  007f0	e1a03800	 mov         r3, r0, lsl #16
  007f4	e1a03823	 mov         r3, r3, lsr #16
  007f8	e1cd30b8	 strh        r3, [sp, #8]
  007fc	e1dd30b8	 ldrh        r3, [sp, #8]
  00800	e1cd30b0	 strh        r3, [sp]

; 306  :     WritePacketPage(BUS_CTL, data | BUS_CTL_ENABLE_IRQ);

  00804	e1dd30b0	 ldrh        r3, [sp]
  00808	e3833902	 orr         r3, r3, #2, 18
  0080c	e1a01803	 mov         r1, r3, lsl #16
  00810	e1a01821	 mov         r1, r1, lsr #16
  00814	e3a00c01	 mov         r0, #1, 24
  00818	e3800016	 orr         r0, r0, #0x16
  0081c	eb000000	 bl          WritePacketPage

; 307  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (L"-CS8900AEnableInts\r\n"));

  00820	e59f3044	 ldr         r3, [pc, #0x44]
  00824	e5933440	 ldr         r3, [r3, #0x440]
  00828	e3130a02	 tst         r3, #2, 20
  0082c	0a000008	 beq         |$LN5@CS8900AEna|
  00830	e59f3034	 ldr         r3, [pc, #0x34]
  00834	e5933440	 ldr         r3, [r3, #0x440]
  00838	e3130004	 tst         r3, #4
  0083c	0a000004	 beq         |$LN5@CS8900AEna|
  00840	e59f0020	 ldr         r0, [pc, #0x20]
  00844	eb000000	 bl          OALLogSerial
  00848	e3a03001	 mov         r3, #1
  0084c	e58d300c	 str         r3, [sp, #0xC]
  00850	ea000001	 b           |$LN6@CS8900AEna|
  00854		 |$LN5@CS8900AEna|
  00854	e3a03000	 mov         r3, #0
  00858	e58d300c	 str         r3, [sp, #0xC]
  0085c		 |$LN6@CS8900AEna|

; 308  : }

  0085c	e28dd010	 add         sp, sp, #0x10
  00860	e49de004	 ldr         lr, [sp], #4
  00864	e12fff1e	 bx          lr
  00868		 |$LN10@CS8900AEna|
  00868		 |$LN11@CS8900AEna|
  00868	00000000	 DCD         |??_C@_1CK@MHFPLOF@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  0086c		 |$LN12@CS8900AEna|
  0086c	00000000	 DCD         |dpCurSettings|
  00870		 |$LN13@CS8900AEna|
  00870	00000000	 DCD         |??_C@_1CK@HMACONAD@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00874		 |$M43265|

			 ENDP  ; |CS8900AEnableInts|

	EXPORT	|??_C@_1CM@HJOGNMLM@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@IFBGENPA@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|CS8900ADisableInts|

  00020			 AREA	 |.pdata|, PDATA
|$T43280| DCD	|$LN9@CS8900ADis|
	DCD	0x40003702

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@HJOGNMLM@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "C", 0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0"
	DCB	0x0, "A", 0x0, "D", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "s"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@IFBGENPA@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "C", 0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0"
	DCB	0x0, "A", 0x0, "D", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "s"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  00874			 AREA	 |.text|, CODE, ARM

  00874		 |CS8900ADisableInts| PROC

; 315  : {

  00874		 |$LN9@CS8900ADis|
  00874	e52de004	 str         lr, [sp, #-4]!
  00878	e24dd010	 sub         sp, sp, #0x10
  0087c		 |$M43277|

; 316  :     UINT16 data;
; 317  : 
; 318  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (L"+CS8900ADisableInts\r\n"));

  0087c	e59f30c4	 ldr         r3, [pc, #0xC4]
  00880	e5933440	 ldr         r3, [r3, #0x440]
  00884	e3130a02	 tst         r3, #2, 20
  00888	0a000008	 beq         |$LN3@CS8900ADis|
  0088c	e59f30b4	 ldr         r3, [pc, #0xB4]
  00890	e5933440	 ldr         r3, [r3, #0x440]
  00894	e3130004	 tst         r3, #4
  00898	0a000004	 beq         |$LN3@CS8900ADis|
  0089c	e59f00a8	 ldr         r0, [pc, #0xA8]
  008a0	eb000000	 bl          OALLogSerial
  008a4	e3a03001	 mov         r3, #1
  008a8	e58d3004	 str         r3, [sp, #4]
  008ac	ea000001	 b           |$LN4@CS8900ADis|
  008b0		 |$LN3@CS8900ADis|
  008b0	e3a03000	 mov         r3, #0
  008b4	e58d3004	 str         r3, [sp, #4]
  008b8		 |$LN4@CS8900ADis|

; 319  :     data = ReadPacketPage(BUS_CTL);

  008b8	e3a00c01	 mov         r0, #1, 24
  008bc	e3800016	 orr         r0, r0, #0x16
  008c0	eb000000	 bl          ReadPacketPage
  008c4	e1a03800	 mov         r3, r0, lsl #16
  008c8	e1a03823	 mov         r3, r3, lsr #16
  008cc	e1cd30b8	 strh        r3, [sp, #8]
  008d0	e1dd30b8	 ldrh        r3, [sp, #8]
  008d4	e1cd30b0	 strh        r3, [sp]

; 320  :     WritePacketPage(BUS_CTL, data & ~BUS_CTL_ENABLE_IRQ);

  008d8	e1dd30b0	 ldrh        r3, [sp]
  008dc	e1a02003	 mov         r2, r3
  008e0	e3e03902	 mvn         r3, #2, 18
  008e4	e0023003	 and         r3, r2, r3
  008e8	e1a01803	 mov         r1, r3, lsl #16
  008ec	e1a01821	 mov         r1, r1, lsr #16
  008f0	e3a00c01	 mov         r0, #1, 24
  008f4	e3800016	 orr         r0, r0, #0x16
  008f8	eb000000	 bl          WritePacketPage

; 321  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (L"-CS8900ADisableInts\r\n"));

  008fc	e59f3044	 ldr         r3, [pc, #0x44]
  00900	e5933440	 ldr         r3, [r3, #0x440]
  00904	e3130a02	 tst         r3, #2, 20
  00908	0a000008	 beq         |$LN5@CS8900ADis|
  0090c	e59f3034	 ldr         r3, [pc, #0x34]
  00910	e5933440	 ldr         r3, [r3, #0x440]
  00914	e3130004	 tst         r3, #4
  00918	0a000004	 beq         |$LN5@CS8900ADis|
  0091c	e59f0020	 ldr         r0, [pc, #0x20]
  00920	eb000000	 bl          OALLogSerial
  00924	e3a03001	 mov         r3, #1
  00928	e58d300c	 str         r3, [sp, #0xC]
  0092c	ea000001	 b           |$LN6@CS8900ADis|
  00930		 |$LN5@CS8900ADis|
  00930	e3a03000	 mov         r3, #0
  00934	e58d300c	 str         r3, [sp, #0xC]
  00938		 |$LN6@CS8900ADis|

; 322  : }

  00938	e28dd010	 add         sp, sp, #0x10
  0093c	e49de004	 ldr         lr, [sp], #4
  00940	e12fff1e	 bx          lr
  00944		 |$LN10@CS8900ADis|
  00944		 |$LN11@CS8900ADis|
  00944	00000000	 DCD         |??_C@_1CM@HJOGNMLM@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00948		 |$LN12@CS8900ADis|
  00948	00000000	 DCD         |dpCurSettings|
  0094c		 |$LN13@CS8900ADis|
  0094c	00000000	 DCD         |??_C@_1CM@IFBGENPA@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAI?$AAn?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00950		 |$M43278|

			 ENDP  ; |CS8900ADisableInts|

	EXPORT	|??_C@_1DM@JKDMICEC@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAF?$AAi?$AAl?$AAt?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@MHLCOBBO@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAF?$AAi?$AAl?$AAt?$AAe?$AAr?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0@| [ DATA ] ; `string'
	EXPORT	|CS8900ACurrentPacketFilter|

  00004			 AREA	 |.bss|, NOINIT
|g_filter| %	0x4
|g_hash| %	0x8

  00028			 AREA	 |.pdata|, PDATA
|$T43293| DCD	|$LN16@CS8900ACur|
	DCD	0x40008304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@JKDMICEC@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAF?$AAi?$AAl?$AAt?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "C", 0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0"
	DCB	0x0, "A", 0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "P", 0x0, "a", 0x0, "c", 0x0, "k"
	DCB	0x0, "e", 0x0, "t", 0x0, "F", 0x0, "i", 0x0, "l", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@MHLCOBBO@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAF?$AAi?$AAl?$AAt?$AAe?$AAr?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0@| DCB "+"
	DCB	0x0, "C", 0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0"
	DCB	0x0, "A", 0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "P", 0x0, "a", 0x0, "c", 0x0, "k"
	DCB	0x0, "e", 0x0, "t", 0x0, "F", 0x0, "i", 0x0, "l", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  00950			 AREA	 |.text|, CODE, ARM

  00950		 |CS8900ACurrentPacketFilter| PROC

; 329  : {

  00950		 |$LN16@CS8900ACur|
  00950	e1a0c00d	 mov         r12, sp
  00954	e92d0001	 stmdb       sp!, {r0}
  00958	e92d5000	 stmdb       sp!, {r12, lr}
  0095c	e24dd010	 sub         sp, sp, #0x10
  00960		 |$M43290|

; 330  :     UINT16 rxCtl;
; 331  : 
; 332  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (
; 333  :         L"+CS8900ACurrentPacketFilter(0x%08x)\r\n", filter
; 334  :     ));

  00960	e59f31e4	 ldr         r3, [pc, #0x1E4]
  00964	e5933440	 ldr         r3, [r3, #0x440]
  00968	e3130a02	 tst         r3, #2, 20
  0096c	0a000009	 beq         |$LN10@CS8900ACur|
  00970	e59f31d4	 ldr         r3, [pc, #0x1D4]
  00974	e5933440	 ldr         r3, [r3, #0x440]
  00978	e3130004	 tst         r3, #4
  0097c	0a000005	 beq         |$LN10@CS8900ACur|
  00980	e59d1018	 ldr         r1, [sp, #0x18]
  00984	e59f01cc	 ldr         r0, [pc, #0x1CC]
  00988	eb000000	 bl          OALLogSerial
  0098c	e3a03001	 mov         r3, #1
  00990	e58d3004	 str         r3, [sp, #4]
  00994	ea000001	 b           |$LN11@CS8900ACur|
  00998		 |$LN10@CS8900ACur|
  00998	e3a03000	 mov         r3, #0
  0099c	e58d3004	 str         r3, [sp, #4]
  009a0		 |$LN11@CS8900ACur|

; 335  : 
; 336  :     // Read current filter
; 337  :     rxCtl = ReadPacketPage(RX_CTL);

  009a0	e3a00f41	 mov         r0, #0x41, 30
  009a4	eb000000	 bl          ReadPacketPage
  009a8	e1a03800	 mov         r3, r0, lsl #16
  009ac	e1a03823	 mov         r3, r3, lsr #16
  009b0	e1cd30b8	 strh        r3, [sp, #8]
  009b4	e1dd30b8	 ldrh        r3, [sp, #8]
  009b8	e1cd30b0	 strh        r3, [sp]

; 338  : 
; 339  :     if ((filter & PACKET_TYPE_ALL_MULTICAST) != 0) {

  009bc	e59d3018	 ldr         r3, [sp, #0x18]
  009c0	e3130004	 tst         r3, #4
  009c4	0a000012	 beq         |$LN7@CS8900ACur|

; 340  :         WritePacketPage(LOGICAL_ADDR_FILTER_BASE + 0, 0xFFFF);

  009c8	e3a01cff	 mov         r1, #0xFF, 24
  009cc	e38110ff	 orr         r1, r1, #0xFF
  009d0	e3a00e15	 mov         r0, #0x15, 28
  009d4	eb000000	 bl          WritePacketPage

; 341  :         WritePacketPage(LOGICAL_ADDR_FILTER_BASE + 2, 0xFFFF);

  009d8	e3a01cff	 mov         r1, #0xFF, 24
  009dc	e38110ff	 orr         r1, r1, #0xFF
  009e0	e3a00c01	 mov         r0, #1, 24
  009e4	e3800052	 orr         r0, r0, #0x52
  009e8	eb000000	 bl          WritePacketPage

; 342  :         WritePacketPage(LOGICAL_ADDR_FILTER_BASE + 4, 0xFFFF);

  009ec	e3a01cff	 mov         r1, #0xFF, 24
  009f0	e38110ff	 orr         r1, r1, #0xFF
  009f4	e3a00f55	 mov         r0, #0x55, 30
  009f8	eb000000	 bl          WritePacketPage

; 343  :         WritePacketPage(LOGICAL_ADDR_FILTER_BASE + 6, 0xFFFF);

  009fc	e3a01cff	 mov         r1, #0xFF, 24
  00a00	e38110ff	 orr         r1, r1, #0xFF
  00a04	e3a00c01	 mov         r0, #1, 24
  00a08	e3800056	 orr         r0, r0, #0x56
  00a0c	eb000000	 bl          WritePacketPage

; 344  :     } else {

  00a10	ea000011	 b           |$LN6@CS8900ACur|
  00a14		 |$LN7@CS8900ACur|

; 345  :         WritePacketPage(LOGICAL_ADDR_FILTER_BASE + 0, g_hash[0]);

  00a14	e59f3138	 ldr         r3, [pc, #0x138]
  00a18	e1d310b0	 ldrh        r1, [r3]
  00a1c	e3a00e15	 mov         r0, #0x15, 28
  00a20	eb000000	 bl          WritePacketPage

; 346  :         WritePacketPage(LOGICAL_ADDR_FILTER_BASE + 2, g_hash[1]);

  00a24	e59f3128	 ldr         r3, [pc, #0x128]
  00a28	e1d310b2	 ldrh        r1, [r3, #2]
  00a2c	e3a00c01	 mov         r0, #1, 24
  00a30	e3800052	 orr         r0, r0, #0x52
  00a34	eb000000	 bl          WritePacketPage

; 347  :         WritePacketPage(LOGICAL_ADDR_FILTER_BASE + 4, g_hash[2]);

  00a38	e59f3114	 ldr         r3, [pc, #0x114]
  00a3c	e1d310b4	 ldrh        r1, [r3, #4]
  00a40	e3a00f55	 mov         r0, #0x55, 30
  00a44	eb000000	 bl          WritePacketPage

; 348  :         WritePacketPage(LOGICAL_ADDR_FILTER_BASE + 6, g_hash[3]);

  00a48	e59f3104	 ldr         r3, [pc, #0x104]
  00a4c	e1d310b6	 ldrh        r1, [r3, #6]
  00a50	e3a00c01	 mov         r0, #1, 24
  00a54	e3800056	 orr         r0, r0, #0x56
  00a58	eb000000	 bl          WritePacketPage
  00a5c		 |$LN6@CS8900ACur|

; 349  :     }
; 350  : 
; 351  :     if (
; 352  :         (filter & PACKET_TYPE_MULTICAST) != 0 ||
; 353  :         (filter & PACKET_TYPE_ALL_MULTICAST) != 0
; 354  :     ) {

  00a5c	e59d3018	 ldr         r3, [sp, #0x18]
  00a60	e3130002	 tst         r3, #2
  00a64	1a000002	 bne         |$LN4@CS8900ACur|
  00a68	e59d3018	 ldr         r3, [sp, #0x18]
  00a6c	e3130004	 tst         r3, #4
  00a70	0a000005	 beq         |$LN5@CS8900ACur|
  00a74		 |$LN4@CS8900ACur|

; 355  :         rxCtl |= RX_CTL_MULTICAST;

  00a74	e1dd30b0	 ldrh        r3, [sp]
  00a78	e3833c02	 orr         r3, r3, #2, 24
  00a7c	e1a03803	 mov         r3, r3, lsl #16
  00a80	e1a03823	 mov         r3, r3, lsr #16
  00a84	e1cd30b0	 strh        r3, [sp]

; 356  :     } else {

  00a88	ea000006	 b           |$LN3@CS8900ACur|
  00a8c		 |$LN5@CS8900ACur|

; 357  :         rxCtl &= ~RX_CTL_MULTICAST;

  00a8c	e1dd30b0	 ldrh        r3, [sp]
  00a90	e1a02003	 mov         r2, r3
  00a94	e3e03c02	 mvn         r3, #2, 24
  00a98	e0023003	 and         r3, r2, r3
  00a9c	e1a03803	 mov         r3, r3, lsl #16
  00aa0	e1a03823	 mov         r3, r3, lsr #16
  00aa4	e1cd30b0	 strh        r3, [sp]
  00aa8		 |$LN3@CS8900ACur|

; 358  :     }
; 359  : 
; 360  :     if ((filter & PACKET_TYPE_PROMISCUOUS) != 0) {

  00aa8	e59d3018	 ldr         r3, [sp, #0x18]
  00aac	e3130020	 tst         r3, #0x20
  00ab0	0a000005	 beq         |$LN2@CS8900ACur|

; 361  :         rxCtl |= RX_CTL_PROMISCUOUS;

  00ab4	e1dd30b0	 ldrh        r3, [sp]
  00ab8	e3833080	 orr         r3, r3, #0x80
  00abc	e1a03803	 mov         r3, r3, lsl #16
  00ac0	e1a03823	 mov         r3, r3, lsr #16
  00ac4	e1cd30b0	 strh        r3, [sp]

; 362  :     } else {

  00ac8	ea000006	 b           |$LN1@CS8900ACur|
  00acc		 |$LN2@CS8900ACur|

; 363  :         rxCtl &= ~RX_CTL_PROMISCUOUS;

  00acc	e1dd30b0	 ldrh        r3, [sp]
  00ad0	e1a02003	 mov         r2, r3
  00ad4	e3e03080	 mvn         r3, #0x80
  00ad8	e0023003	 and         r3, r2, r3
  00adc	e1a03803	 mov         r3, r3, lsl #16
  00ae0	e1a03823	 mov         r3, r3, lsr #16
  00ae4	e1cd30b0	 strh        r3, [sp]
  00ae8		 |$LN1@CS8900ACur|

; 364  :     }
; 365  : 
; 366  :     WritePacketPage(RX_CTL, rxCtl);

  00ae8	e1dd10b0	 ldrh        r1, [sp]
  00aec	e3a00f41	 mov         r0, #0x41, 30
  00af0	eb000000	 bl          WritePacketPage

; 367  : 
; 368  :     // Save actual filter
; 369  :     g_filter = filter;

  00af4	e59d2018	 ldr         r2, [sp, #0x18]
  00af8	e59f3050	 ldr         r3, [pc, #0x50]
  00afc	e5832000	 str         r2, [r3]

; 370  : 
; 371  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (L"-CS8900ACurrentPacketFilter\r\n"));

  00b00	e59f3044	 ldr         r3, [pc, #0x44]
  00b04	e5933440	 ldr         r3, [r3, #0x440]
  00b08	e3130a02	 tst         r3, #2, 20
  00b0c	0a000008	 beq         |$LN12@CS8900ACur|
  00b10	e59f3034	 ldr         r3, [pc, #0x34]
  00b14	e5933440	 ldr         r3, [r3, #0x440]
  00b18	e3130004	 tst         r3, #4
  00b1c	0a000004	 beq         |$LN12@CS8900ACur|
  00b20	e59f0020	 ldr         r0, [pc, #0x20]
  00b24	eb000000	 bl          OALLogSerial
  00b28	e3a03001	 mov         r3, #1
  00b2c	e58d300c	 str         r3, [sp, #0xC]
  00b30	ea000001	 b           |$LN13@CS8900ACur|
  00b34		 |$LN12@CS8900ACur|
  00b34	e3a03000	 mov         r3, #0
  00b38	e58d300c	 str         r3, [sp, #0xC]
  00b3c		 |$LN13@CS8900ACur|

; 372  : }

  00b3c	e28dd010	 add         sp, sp, #0x10
  00b40	e89d6000	 ldmia       sp, {sp, lr}
  00b44	e12fff1e	 bx          lr
  00b48		 |$LN17@CS8900ACur|
  00b48		 |$LN18@CS8900ACur|
  00b48	00000000	 DCD         |??_C@_1DM@JKDMICEC@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAF?$AAi?$AAl?$AAt?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  00b4c		 |$LN19@CS8900ACur|
  00b4c	00000000	 DCD         |dpCurSettings|
  00b50		 |$LN20@CS8900ACur|
  00b50	00000000	 DCD         |g_filter|
  00b54		 |$LN21@CS8900ACur|
  00b54	00000000	 DCD         |g_hash|
  00b58		 |$LN22@CS8900ACur|
  00b58	00000000	 DCD         |??_C@_1EM@MHLCOBBO@?$AA?$CL?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAP?$AAa?$AAc?$AAk?$AAe?$AAt?$AAF?$AAi?$AAl?$AAt?$AAe?$AAr?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0@|
  00b5c		 |$M43291|

			 ENDP  ; |CS8900ACurrentPacketFilter|

	EXPORT	|??_C@_1EA@KHPNHEKF@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAM?$AAu?$AAl?$AAt?$AAi?$AAc?$AAa?$AAs?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA1?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@MLDMDCPO@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAM?$AAu?$AAl?$AAt?$AAi?$AAc?$AAa?$AAs?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd@| [ DATA ] ; `string'
	EXPORT	|CS8900AMulticastList|

  00030			 AREA	 |.pdata|, PDATA
|$T43309| DCD	|$LN16@CS8900AMul|
	DCD	0x40009604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@KHPNHEKF@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAM?$AAu?$AAl?$AAt?$AAi?$AAc?$AAa?$AAs?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA1?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "C", 0x0, "S", 0x0, "8", 0x0, "9", 0x0, "0", 0x0, "0"
	DCB	0x0, "A", 0x0, "M", 0x0, "u", 0x0, "l", 0x0, "t", 0x0, "i"
	DCB	0x0, "c", 0x0, "a", 0x0, "s", 0x0, "t", 0x0, "L", 0x0, "i"
	DCB	0x0, "s", 0x0, "t", 0x0, "(", 0x0, "r", 0x0, "c", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "1", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@MLDMDCPO@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAM?$AAu?$AAl?$AAt?$AAi?$AAc?$AAa?$AAs?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd@| DCB "+"
	DCB	0x0, "R", 0x0, "T", 0x0, "L", 0x0, "8", 0x0, "1", 0x0, "3"
	DCB	0x0, "9", 0x0, "M", 0x0, "u", 0x0, "l", 0x0, "t", 0x0, "i"
	DCB	0x0, "c", 0x0, "a", 0x0, "s", 0x0, "t", 0x0, "L", 0x0, "i"
	DCB	0x0, "s", 0x0, "t", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00b5c			 AREA	 |.text|, CODE, ARM

  00b5c		 |CS8900AMulticastList| PROC

; 379  : {

  00b5c		 |$LN16@CS8900AMul|
  00b5c	e1a0c00d	 mov         r12, sp
  00b60	e92d0003	 stmdb       sp!, {r0, r1}
  00b64	e92d5000	 stmdb       sp!, {r12, lr}
  00b68	e24dd024	 sub         sp, sp, #0x24
  00b6c		 |$M43306|

; 380  :     UINT32 i, j, crc, data, bit;
; 381  : 
; 382  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (
; 383  :         L"+RTL8139MulticastList(0x%08x, %d)\r\n", pAddresses, count
; 384  :     ));

  00b6c	e59f3230	 ldr         r3, [pc, #0x230]
  00b70	e5933440	 ldr         r3, [r3, #0x440]
  00b74	e3130a02	 tst         r3, #2, 20
  00b78	0a00000a	 beq         |$LN10@CS8900AMul|
  00b7c	e59f3220	 ldr         r3, [pc, #0x220]
  00b80	e5933440	 ldr         r3, [r3, #0x440]
  00b84	e3130004	 tst         r3, #4
  00b88	0a000006	 beq         |$LN10@CS8900AMul|
  00b8c	e59d2030	 ldr         r2, [sp, #0x30]
  00b90	e59d102c	 ldr         r1, [sp, #0x2C]
  00b94	e59f0214	 ldr         r0, [pc, #0x214]
  00b98	eb000000	 bl          OALLogSerial
  00b9c	e3a03001	 mov         r3, #1
  00ba0	e58d3018	 str         r3, [sp, #0x18]
  00ba4	ea000001	 b           |$LN11@CS8900AMul|
  00ba8		 |$LN10@CS8900AMul|
  00ba8	e3a03000	 mov         r3, #0
  00bac	e58d3018	 str         r3, [sp, #0x18]
  00bb0		 |$LN11@CS8900AMul|

; 385  : 
; 386  :     g_hash[0] = g_hash[1] = g_hash[2] = g_hash[3] = 0;

  00bb0	e59f21f0	 ldr         r2, [pc, #0x1F0]
  00bb4	e3a03000	 mov         r3, #0
  00bb8	e1c230b6	 strh        r3, [r2, #6]
  00bbc	e59f31e4	 ldr         r3, [pc, #0x1E4]
  00bc0	e1d320b6	 ldrh        r2, [r3, #6]
  00bc4	e59f31dc	 ldr         r3, [pc, #0x1DC]
  00bc8	e1c320b4	 strh        r2, [r3, #4]
  00bcc	e59f31d4	 ldr         r3, [pc, #0x1D4]
  00bd0	e1d320b4	 ldrh        r2, [r3, #4]
  00bd4	e59f31cc	 ldr         r3, [pc, #0x1CC]
  00bd8	e1c320b2	 strh        r2, [r3, #2]
  00bdc	e59f31c4	 ldr         r3, [pc, #0x1C4]
  00be0	e1d320b2	 ldrh        r2, [r3, #2]
  00be4	e59f31bc	 ldr         r3, [pc, #0x1BC]
  00be8	e1c320b0	 strh        r2, [r3]

; 387  :     for (i = 0; i < count; i++) {

  00bec	e3a03000	 mov         r3, #0
  00bf0	e58d3004	 str         r3, [sp, #4]
  00bf4	ea000002	 b           |$LN7@CS8900AMul|
  00bf8		 |$LN6@CS8900AMul|
  00bf8	e59d3004	 ldr         r3, [sp, #4]
  00bfc	e2833001	 add         r3, r3, #1
  00c00	e58d3004	 str         r3, [sp, #4]
  00c04		 |$LN7@CS8900AMul|
  00c04	e59d2004	 ldr         r2, [sp, #4]
  00c08	e59d3030	 ldr         r3, [sp, #0x30]
  00c0c	e1520003	 cmp         r2, r3
  00c10	2a000037	 bcs         |$LN5@CS8900AMul|

; 388  :         data = crc = ComputeCRC(pAddresses, 6);

  00c14	e3a01006	 mov         r1, #6
  00c18	e59d002c	 ldr         r0, [sp, #0x2C]
  00c1c	eb000000	 bl          ComputeCRC
  00c20	e58d001c	 str         r0, [sp, #0x1C]
  00c24	e59d301c	 ldr         r3, [sp, #0x1C]
  00c28	e58d3000	 str         r3, [sp]
  00c2c	e59d3000	 ldr         r3, [sp]
  00c30	e58d3008	 str         r3, [sp, #8]

; 389  :         for (j = 0, bit = 0; j < 6; j++) {

  00c34	e3a03000	 mov         r3, #0
  00c38	e58d3010	 str         r3, [sp, #0x10]
  00c3c	e3a03000	 mov         r3, #0
  00c40	e58d300c	 str         r3, [sp, #0xC]
  00c44	ea000002	 b           |$LN4@CS8900AMul|
  00c48		 |$LN3@CS8900AMul|
  00c48	e59d3010	 ldr         r3, [sp, #0x10]
  00c4c	e2833001	 add         r3, r3, #1
  00c50	e58d3010	 str         r3, [sp, #0x10]
  00c54		 |$LN4@CS8900AMul|
  00c54	e59d3010	 ldr         r3, [sp, #0x10]
  00c58	e3530006	 cmp         r3, #6
  00c5c	2a00000b	 bcs         |$LN2@CS8900AMul|

; 390  :             bit <<= 1;

  00c60	e59d300c	 ldr         r3, [sp, #0xC]
  00c64	e1a03083	 mov         r3, r3, lsl #1
  00c68	e58d300c	 str         r3, [sp, #0xC]

; 391  :             bit |= (data & 1);

  00c6c	e59d3008	 ldr         r3, [sp, #8]
  00c70	e2032001	 and         r2, r3, #1
  00c74	e59d300c	 ldr         r3, [sp, #0xC]
  00c78	e1833002	 orr         r3, r3, r2
  00c7c	e58d300c	 str         r3, [sp, #0xC]

; 392  :             data >>= 1;

  00c80	e59d3008	 ldr         r3, [sp, #8]
  00c84	e1a030a3	 mov         r3, r3, lsr #1
  00c88	e58d3008	 str         r3, [sp, #8]

; 393  :         }

  00c8c	eaffffed	 b           |$LN3@CS8900AMul|
  00c90		 |$LN2@CS8900AMul|

; 394  :         g_hash[bit >> 4] |= 1 << (bit & 0x0f);

  00c90	e59d300c	 ldr         r3, [sp, #0xC]
  00c94	e1a01223	 mov         r1, r3, lsr #4
  00c98	e3a03002	 mov         r3, #2
  00c9c	e0020391	 mul         r2, r1, r3
  00ca0	e59f3100	 ldr         r3, [pc, #0x100]
  00ca4	e0831002	 add         r1, r3, r2
  00ca8	e59d300c	 ldr         r3, [sp, #0xC]
  00cac	e203200f	 and         r2, r3, #0xF
  00cb0	e3a03001	 mov         r3, #1
  00cb4	e1a02213	 mov         r2, r3, lsl r2
  00cb8	e1d130b0	 ldrh        r3, [r1]
  00cbc	e1830002	 orr         r0, r3, r2
  00cc0	e59d300c	 ldr         r3, [sp, #0xC]
  00cc4	e1a01223	 mov         r1, r3, lsr #4
  00cc8	e3a03002	 mov         r3, #2
  00ccc	e0020391	 mul         r2, r1, r3
  00cd0	e59f30d0	 ldr         r3, [pc, #0xD0]
  00cd4	e0832002	 add         r2, r3, r2
  00cd8	e1a03800	 mov         r3, r0, lsl #16
  00cdc	e1a03823	 mov         r3, r3, lsr #16
  00ce0	e1c230b0	 strh        r3, [r2]

; 395  :         pAddresses += 6;

  00ce4	e59d302c	 ldr         r3, [sp, #0x2C]
  00ce8	e2833006	 add         r3, r3, #6
  00cec	e58d302c	 str         r3, [sp, #0x2C]

; 396  :     }

  00cf0	eaffffc0	 b           |$LN6@CS8900AMul|
  00cf4		 |$LN5@CS8900AMul|

; 397  : 
; 398  :     // But update only if all multicast mode isn't active
; 399  :     if ((g_filter & PACKET_TYPE_ALL_MULTICAST) == 0) {        

  00cf4	e59f30b0	 ldr         r3, [pc, #0xB0]
  00cf8	e5933000	 ldr         r3, [r3]
  00cfc	e3130004	 tst         r3, #4
  00d00	1a000011	 bne         |$LN1@CS8900AMul|

; 400  :         WritePacketPage(LOGICAL_ADDR_FILTER_BASE + 0, g_hash[0]);

  00d04	e59f309c	 ldr         r3, [pc, #0x9C]
  00d08	e1d310b0	 ldrh        r1, [r3]
  00d0c	e3a00e15	 mov         r0, #0x15, 28
  00d10	eb000000	 bl          WritePacketPage

; 401  :         WritePacketPage(LOGICAL_ADDR_FILTER_BASE + 2, g_hash[1]);

  00d14	e59f308c	 ldr         r3, [pc, #0x8C]
  00d18	e1d310b2	 ldrh        r1, [r3, #2]
  00d1c	e3a00c01	 mov         r0, #1, 24
  00d20	e3800052	 orr         r0, r0, #0x52
  00d24	eb000000	 bl          WritePacketPage

; 402  :         WritePacketPage(LOGICAL_ADDR_FILTER_BASE + 4, g_hash[2]);

  00d28	e59f3078	 ldr         r3, [pc, #0x78]
  00d2c	e1d310b4	 ldrh        r1, [r3, #4]
  00d30	e3a00f55	 mov         r0, #0x55, 30
  00d34	eb000000	 bl          WritePacketPage

; 403  :         WritePacketPage(LOGICAL_ADDR_FILTER_BASE + 6, g_hash[3]);

  00d38	e59f3068	 ldr         r3, [pc, #0x68]
  00d3c	e1d310b6	 ldrh        r1, [r3, #6]
  00d40	e3a00c01	 mov         r0, #1, 24
  00d44	e3800056	 orr         r0, r0, #0x56
  00d48	eb000000	 bl          WritePacketPage
  00d4c		 |$LN1@CS8900AMul|

; 404  :     }
; 405  : 
; 406  :     OALMSGS(OAL_ETHER&&OAL_FUNC, (L"-CS8900AMulticastList(rc = 1)\r\n"));

  00d4c	e59f3050	 ldr         r3, [pc, #0x50]
  00d50	e5933440	 ldr         r3, [r3, #0x440]
  00d54	e3130a02	 tst         r3, #2, 20
  00d58	0a000008	 beq         |$LN12@CS8900AMul|
  00d5c	e59f3040	 ldr         r3, [pc, #0x40]
  00d60	e5933440	 ldr         r3, [r3, #0x440]
  00d64	e3130004	 tst         r3, #4
  00d68	0a000004	 beq         |$LN12@CS8900AMul|
  00d6c	e59f002c	 ldr         r0, [pc, #0x2C]
  00d70	eb000000	 bl          OALLogSerial
  00d74	e3a03001	 mov         r3, #1
  00d78	e58d3020	 str         r3, [sp, #0x20]
  00d7c	ea000001	 b           |$LN13@CS8900AMul|
  00d80		 |$LN12@CS8900AMul|
  00d80	e3a03000	 mov         r3, #0
  00d84	e58d3020	 str         r3, [sp, #0x20]
  00d88		 |$LN13@CS8900AMul|

; 407  :     return TRUE;

  00d88	e3a03001	 mov         r3, #1
  00d8c	e58d3014	 str         r3, [sp, #0x14]

; 408  : }

  00d90	e59d0014	 ldr         r0, [sp, #0x14]
  00d94	e28dd024	 add         sp, sp, #0x24
  00d98	e89d6000	 ldmia       sp, {sp, lr}
  00d9c	e12fff1e	 bx          lr
  00da0		 |$LN17@CS8900AMul|
  00da0		 |$LN18@CS8900AMul|
  00da0	00000000	 DCD         |??_C@_1EA@KHPNHEKF@?$AA?9?$AAC?$AAS?$AA8?$AA9?$AA0?$AA0?$AAA?$AAM?$AAu?$AAl?$AAt?$AAi?$AAc?$AAa?$AAs?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA1?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00da4		 |$LN19@CS8900AMul|
  00da4	00000000	 DCD         |dpCurSettings|
  00da8		 |$LN20@CS8900AMul|
  00da8	00000000	 DCD         |g_hash|
  00dac		 |$LN21@CS8900AMul|
  00dac	00000000	 DCD         |g_filter|
  00db0		 |$LN22@CS8900AMul|
  00db0	00000000	 DCD         |??_C@_1EI@MLDMDCPO@?$AA?$CL?$AAR?$AAT?$AAL?$AA8?$AA1?$AA3?$AA9?$AAM?$AAu?$AAl?$AAt?$AAi?$AAc?$AAa?$AAs?$AAt?$AAL?$AAi?$AAs?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd@|
  00db4		 |$M43307|

			 ENDP  ; |CS8900AMulticastList|

	IMPORT	|READ_REGISTER_USHORT|
	IMPORT	|WRITE_REGISTER_USHORT|

  00038			 AREA	 |.pdata|, PDATA
|$T43321| DCD	|$LN5@ReadPacket|
	DCD	0x40001704
; Function compile flags: /Odtp

  00db4			 AREA	 |.text|, CODE, ARM

  00db4		 |ReadPacketPage| PROC

; 413  : {

  00db4		 |$LN5@ReadPacket|
  00db4	e1a0c00d	 mov         r12, sp
  00db8	e92d0001	 stmdb       sp!, {r0}
  00dbc	e92d5000	 stmdb       sp!, {r12, lr}
  00dc0	e24dd008	 sub         sp, sp, #8
  00dc4		 |$M43318|

; 414  :     OUTREG16(&g_pCS8900->PAGEIX, address);

  00dc4	e1dd11b0	 ldrh        r1, [sp, #0x10]
  00dc8	e59f303c	 ldr         r3, [pc, #0x3C]
  00dcc	e5933000	 ldr         r3, [r3]
  00dd0	e283000a	 add         r0, r3, #0xA
  00dd4	eb000000	 bl          WRITE_REGISTER_USHORT

; 415  :     return INREG16(&g_pCS8900->PAGE0);

  00dd8	e59f302c	 ldr         r3, [pc, #0x2C]
  00ddc	e5933000	 ldr         r3, [r3]
  00de0	e283000c	 add         r0, r3, #0xC
  00de4	eb000000	 bl          READ_REGISTER_USHORT
  00de8	e1a03800	 mov         r3, r0, lsl #16
  00dec	e1a03823	 mov         r3, r3, lsr #16
  00df0	e1cd30b4	 strh        r3, [sp, #4]
  00df4	e1dd30b4	 ldrh        r3, [sp, #4]
  00df8	e1cd30b0	 strh        r3, [sp]

; 416  : }

  00dfc	e1dd00b0	 ldrh        r0, [sp]
  00e00	e28dd008	 add         sp, sp, #8
  00e04	e89d6000	 ldmia       sp, {sp, lr}
  00e08	e12fff1e	 bx          lr
  00e0c		 |$LN6@ReadPacket|
  00e0c		 |$LN7@ReadPacket|
  00e0c	00000000	 DCD         |g_pCS8900|
  00e10		 |$M43319|

			 ENDP  ; |ReadPacketPage|


  00040			 AREA	 |.pdata|, PDATA
|$T43328| DCD	|$LN5@WritePacke|
	DCD	0x40001003
; Function compile flags: /Odtp

  00e10			 AREA	 |.text|, CODE, ARM

  00e10		 |WritePacketPage| PROC

; 421  : {

  00e10		 |$LN5@WritePacke|
  00e10	e1a0c00d	 mov         r12, sp
  00e14	e92d0003	 stmdb       sp!, {r0, r1}
  00e18	e92d5000	 stmdb       sp!, {r12, lr}
  00e1c		 |$M43325|

; 422  :     OUTREG16(&g_pCS8900->PAGEIX, address);

  00e1c	e1dd10b8	 ldrh        r1, [sp, #8]
  00e20	e59f3024	 ldr         r3, [pc, #0x24]
  00e24	e5933000	 ldr         r3, [r3]
  00e28	e283000a	 add         r0, r3, #0xA
  00e2c	eb000000	 bl          WRITE_REGISTER_USHORT

; 423  :     OUTREG16(&g_pCS8900->PAGE0, data);

  00e30	e1dd10bc	 ldrh        r1, [sp, #0xC]
  00e34	e59f3010	 ldr         r3, [pc, #0x10]
  00e38	e5933000	 ldr         r3, [r3]
  00e3c	e283000c	 add         r0, r3, #0xC
  00e40	eb000000	 bl          WRITE_REGISTER_USHORT

; 424  : }

  00e44	e89d6000	 ldmia       sp, {sp, lr}
  00e48	e12fff1e	 bx          lr
  00e4c		 |$LN6@WritePacke|
  00e4c		 |$LN7@WritePacke|
  00e4c	00000000	 DCD         |g_pCS8900|
  00e50		 |$M43326|

			 ENDP  ; |WritePacketPage|


  00048			 AREA	 |.pdata|, PDATA
|$T43338| DCD	|$LN14@ComputeCRC|
	DCD	0x40004404
; Function compile flags: /Odtp

  00e50			 AREA	 |.text|, CODE, ARM

  00e50		 |ComputeCRC| PROC

; 429  : {

  00e50		 |$LN14@ComputeCRC|
  00e50	e1a0c00d	 mov         r12, sp
  00e54	e92d0003	 stmdb       sp!, {r0, r1}
  00e58	e92d5000	 stmdb       sp!, {r12, lr}
  00e5c	e24dd01c	 sub         sp, sp, #0x1C
  00e60		 |$M43335|

; 430  :     UINT32 crc, carry, i, j;
; 431  :     UINT8 byte;
; 432  : 
; 433  :     crc = 0xffffffff;

  00e60	e3e03000	 mvn         r3, #0
  00e64	e58d3000	 str         r3, [sp]

; 434  :     for (i = 0; i < length; i++) {

  00e68	e3a03000	 mov         r3, #0
  00e6c	e58d3004	 str         r3, [sp, #4]
  00e70	ea000002	 b           |$LN7@ComputeCRC|
  00e74		 |$LN6@ComputeCRC|
  00e74	e59d3004	 ldr         r3, [sp, #4]
  00e78	e2833001	 add         r3, r3, #1
  00e7c	e58d3004	 str         r3, [sp, #4]
  00e80		 |$LN7@ComputeCRC|
  00e80	e59d2004	 ldr         r2, [sp, #4]
  00e84	e59d3028	 ldr         r3, [sp, #0x28]
  00e88	e1520003	 cmp         r2, r3
  00e8c	2a00002c	 bcs         |$LN5@ComputeCRC|

; 435  :         byte = pBuffer[i];

  00e90	e59d2024	 ldr         r2, [sp, #0x24]
  00e94	e59d3004	 ldr         r3, [sp, #4]
  00e98	e0823003	 add         r3, r2, r3
  00e9c	e5d33000	 ldrb        r3, [r3]
  00ea0	e5cd300c	 strb        r3, [sp, #0xC]

; 436  :         for (j = 0; j < 8; j++) {

  00ea4	e3a03000	 mov         r3, #0
  00ea8	e58d3010	 str         r3, [sp, #0x10]
  00eac	ea000002	 b           |$LN4@ComputeCRC|
  00eb0		 |$LN3@ComputeCRC|
  00eb0	e59d3010	 ldr         r3, [sp, #0x10]
  00eb4	e2833001	 add         r3, r3, #1
  00eb8	e58d3010	 str         r3, [sp, #0x10]
  00ebc		 |$LN4@ComputeCRC|
  00ebc	e59d3010	 ldr         r3, [sp, #0x10]
  00ec0	e3530008	 cmp         r3, #8
  00ec4	2a00001d	 bcs         |$LN2@ComputeCRC|

; 437  :             carry = ((crc & 0x80000000) ? 1 : 0) ^ (byte & 0x01);

  00ec8	e59d3000	 ldr         r3, [sp]
  00ecc	e3130102	 tst         r3, #2, 2
  00ed0	0a000002	 beq         |$LN10@ComputeCRC|
  00ed4	e3a03001	 mov         r3, #1
  00ed8	e58d3018	 str         r3, [sp, #0x18]
  00edc	ea000001	 b           |$LN11@ComputeCRC|
  00ee0		 |$LN10@ComputeCRC|
  00ee0	e3a03000	 mov         r3, #0
  00ee4	e58d3018	 str         r3, [sp, #0x18]
  00ee8		 |$LN11@ComputeCRC|
  00ee8	e5dd300c	 ldrb        r3, [sp, #0xC]
  00eec	e2032001	 and         r2, r3, #1
  00ef0	e59d3018	 ldr         r3, [sp, #0x18]
  00ef4	e0233002	 eor         r3, r3, r2
  00ef8	e58d3008	 str         r3, [sp, #8]

; 438  :             crc <<= 1;

  00efc	e59d3000	 ldr         r3, [sp]
  00f00	e1a03083	 mov         r3, r3, lsl #1
  00f04	e58d3000	 str         r3, [sp]

; 439  :             byte >>= 1;

  00f08	e5dd300c	 ldrb        r3, [sp, #0xC]
  00f0c	e1a030a3	 mov         r3, r3, lsr #1
  00f10	e20330ff	 and         r3, r3, #0xFF
  00f14	e5cd300c	 strb        r3, [sp, #0xC]

; 440  :             if (carry) crc = (crc ^ 0x04c11db6) | carry;

  00f18	e59d3008	 ldr         r3, [sp, #8]
  00f1c	e3530000	 cmp         r3, #0
  00f20	0a000005	 beq         |$LN1@ComputeCRC|
  00f24	e59d2000	 ldr         r2, [sp]
  00f28	e59f302c	 ldr         r3, [pc, #0x2C]
  00f2c	e0222003	 eor         r2, r2, r3
  00f30	e59d3008	 ldr         r3, [sp, #8]
  00f34	e1823003	 orr         r3, r2, r3
  00f38	e58d3000	 str         r3, [sp]
  00f3c		 |$LN1@ComputeCRC|

; 441  :         }

  00f3c	eaffffdb	 b           |$LN3@ComputeCRC|
  00f40		 |$LN2@ComputeCRC|

; 442  :     }

  00f40	eaffffcb	 b           |$LN6@ComputeCRC|
  00f44		 |$LN5@ComputeCRC|

; 443  :     return crc;

  00f44	e59d3000	 ldr         r3, [sp]
  00f48	e58d3014	 str         r3, [sp, #0x14]

; 444  : }

  00f4c	e59d0014	 ldr         r0, [sp, #0x14]
  00f50	e28dd01c	 add         sp, sp, #0x1C
  00f54	e89d6000	 ldmia       sp, {sp, lr}
  00f58	e12fff1e	 bx          lr
  00f5c		 |$LN15@ComputeCRC|
  00f5c		 |$LN16@ComputeCRC|
  00f5c	04c11db6	 DCD         0x4c11db6
  00f60		 |$M43336|

			 ENDP  ; |ComputeCRC|

	END
