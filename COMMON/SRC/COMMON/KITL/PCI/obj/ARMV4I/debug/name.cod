; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\COMMON\KITL\name.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|??_C@_0CG@IHIMJOIA@?9OALKitlCreateName?$CIpBuffer?5?$DN?5?8?$CFh@| [ DATA ] ; `string'
	EXPORT	|??_C@_0CM@BCMDHFLI@?$CLOALKitlCreateName?$CI?8?$CFhs?8?0?50x?$CF04x@| [ DATA ] ; `string'
	EXPORT	|OALKitlCreateName|
	IMPORT	|KITLOutputDebugString|
	IMPORT	|dpCurSettings|
	IMPORT	|__rt_sdiv|

  00000			 AREA	 |.pdata|, PDATA
|$T43028| DCD	|$LN17@OALKitlCre|
	DCD	0x40008e04
; File c:\wince600\platform\common\src\common\kitl\name.c

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0CG@IHIMJOIA@?9OALKitlCreateName?$CIpBuffer?5?$DN?5?8?$CFh@| DCB "-"
	DCB	"OALKitlCreateName(pBuffer = '%hs')", 0xd, 0xa, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0CM@BCMDHFLI@?$CLOALKitlCreateName?$CI?8?$CFhs?8?0?50x?$CF04x@| DCB "+"
	DCB	"OALKitlCreateName('%hs', 0x%04x, 0x%08x)", 0xd, 0xa, 0x0 ; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALKitlCreateName| PROC

; 28   : {

  00000		 |$LN17@OALKitlCre|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd010	 sub         sp, sp, #0x10
  00010		 |$M43025|

; 29   :     UINT32 count;
; 30   :     UINT16 base, code;
; 31   : 
; 32   :     KITL_RETAILMSG(ZONE_KITL_OAL, (
; 33   :         "+OALKitlCreateName('%hs', 0x%04x, 0x%08x)\r\n", pPrefix, mac, pBuffer
; 34   :     ));

  00010	e59f3218	 ldr         r3, [pc, #0x218]
  00014	e5933440	 ldr         r3, [r3, #0x440]
  00018	e3130a01	 tst         r3, #1, 20
  0001c	0a000007	 beq         |$LN11@OALKitlCre|
  00020	e59d3020	 ldr         r3, [sp, #0x20]
  00024	e59d201c	 ldr         r2, [sp, #0x1C]
  00028	e59d1018	 ldr         r1, [sp, #0x18]
  0002c	e59f0200	 ldr         r0, [pc, #0x200]
  00030	eb000000	 bl          KITLOutputDebugString
  00034	e3a03001	 mov         r3, #1
  00038	e58d3008	 str         r3, [sp, #8]
  0003c	ea000001	 b           |$LN12@OALKitlCre|
  00040		 |$LN11@OALKitlCre|
  00040	e3a03000	 mov         r3, #0
  00044	e58d3008	 str         r3, [sp, #8]
  00048		 |$LN12@OALKitlCre|

; 35   :     
; 36   :     count = 0;

  00048	e3a03000	 mov         r3, #0
  0004c	e58d3000	 str         r3, [sp]

; 37   :     code = (mac[2] >> 8) | ((mac[2] & 0x00ff) << 8);

  00050	e59d301c	 ldr         r3, [sp, #0x1C]
  00054	e2833004	 add         r3, r3, #4
  00058	e1d330b0	 ldrh        r3, [r3]
  0005c	e1a02443	 mov         r2, r3, asr #8
  00060	e59d301c	 ldr         r3, [sp, #0x1C]
  00064	e2833004	 add         r3, r3, #4
  00068	e1d330b0	 ldrh        r3, [r3]
  0006c	e20330ff	 and         r3, r3, #0xFF
  00070	e1a03403	 mov         r3, r3, lsl #8
  00074	e1823003	 orr         r3, r2, r3
  00078	e1a03803	 mov         r3, r3, lsl #16
  0007c	e1a03823	 mov         r3, r3, lsr #16
  00080	e1cd30b6	 strh        r3, [sp, #6]
  00084		 |$LN8@OALKitlCre|

; 38   :     while (count < OAL_KITL_ID_SIZE - 6 && pPrefix[count] != '\0') {

  00084	e59d3000	 ldr         r3, [sp]
  00088	e353000a	 cmp         r3, #0xA
  0008c	2a000011	 bcs         |$LN7@OALKitlCre|
  00090	e59d2018	 ldr         r2, [sp, #0x18]
  00094	e59d3000	 ldr         r3, [sp]
  00098	e0823003	 add         r3, r2, r3
  0009c	e1d330d0	 ldrsb       r3, [r3]
  000a0	e3530000	 cmp         r3, #0
  000a4	0a00000b	 beq         |$LN7@OALKitlCre|

; 39   :         pBuffer[count] = pPrefix[count];

  000a8	e59d2018	 ldr         r2, [sp, #0x18]
  000ac	e59d3000	 ldr         r3, [sp]
  000b0	e0821003	 add         r1, r2, r3
  000b4	e59d2020	 ldr         r2, [sp, #0x20]
  000b8	e59d3000	 ldr         r3, [sp]
  000bc	e0822003	 add         r2, r2, r3
  000c0	e1d130d0	 ldrsb       r3, [r1]
  000c4	e5c23000	 strb        r3, [r2]

; 40   :         count++;

  000c8	e59d3000	 ldr         r3, [sp]
  000cc	e2833001	 add         r3, r3, #1
  000d0	e58d3000	 str         r3, [sp]

; 41   :     }        

  000d4	eaffffea	 b           |$LN8@OALKitlCre|
  000d8		 |$LN7@OALKitlCre|

; 42   :     base = 10000;

  000d8	e3a03c27	 mov         r3, #0x27, 24
  000dc	e3833010	 orr         r3, r3, #0x10
  000e0	e1cd30b4	 strh        r3, [sp, #4]
  000e4		 |$LN6@OALKitlCre|

; 43   :     while (base > code && base != 0) base /= 10;

  000e4	e1dd30b4	 ldrh        r3, [sp, #4]
  000e8	e1a02003	 mov         r2, r3
  000ec	e1dd30b6	 ldrh        r3, [sp, #6]
  000f0	e1520003	 cmp         r2, r3
  000f4	da00000a	 ble         |$LN5@OALKitlCre|
  000f8	e1dd30b4	 ldrh        r3, [sp, #4]
  000fc	e3530000	 cmp         r3, #0
  00100	0a000007	 beq         |$LN5@OALKitlCre|
  00104	e1dd30b4	 ldrh        r3, [sp, #4]
  00108	e1a01003	 mov         r1, r3
  0010c	e3a0000a	 mov         r0, #0xA
  00110	eb000000	 bl          __rt_sdiv
  00114	e1a03800	 mov         r3, r0, lsl #16
  00118	e1a03823	 mov         r3, r3, lsr #16
  0011c	e1cd30b4	 strh        r3, [sp, #4]
  00120	eaffffef	 b           |$LN6@OALKitlCre|
  00124		 |$LN5@OALKitlCre|

; 44   :     if (base == 0) { 

  00124	e1dd30b4	 ldrh        r3, [sp, #4]
  00128	e3530000	 cmp         r3, #0
  0012c	1a000008	 bne         |$LN4@OALKitlCre|

; 45   :         pBuffer[count++] = '0';

  00130	e59d2020	 ldr         r2, [sp, #0x20]
  00134	e59d3000	 ldr         r3, [sp]
  00138	e0822003	 add         r2, r2, r3
  0013c	e3a03030	 mov         r3, #0x30
  00140	e5c23000	 strb        r3, [r2]
  00144	e59d3000	 ldr         r3, [sp]
  00148	e2833001	 add         r3, r3, #1
  0014c	e58d3000	 str         r3, [sp]

; 46   :     } else {

  00150	ea000021	 b           |$LN3@OALKitlCre|
  00154		 |$LN4@OALKitlCre|
  00154		 |$LN2@OALKitlCre|

; 47   :         while (base > 0) {

  00154	e1dd30b4	 ldrh        r3, [sp, #4]
  00158	e3530000	 cmp         r3, #0
  0015c	da00001e	 ble         |$LN1@OALKitlCre|

; 48   :             pBuffer[count++] = code/base + '0';

  00160	e1dd30b6	 ldrh        r3, [sp, #6]
  00164	e1a01003	 mov         r1, r3
  00168	e1dd30b4	 ldrh        r3, [sp, #4]
  0016c	e1a00003	 mov         r0, r3
  00170	eb000000	 bl          __rt_sdiv
  00174	e2801030	 add         r1, r0, #0x30
  00178	e59d2020	 ldr         r2, [sp, #0x20]
  0017c	e59d3000	 ldr         r3, [sp]
  00180	e0822003	 add         r2, r2, r3
  00184	e1a03c01	 mov         r3, r1, lsl #24
  00188	e1a03c43	 mov         r3, r3, asr #24
  0018c	e5c23000	 strb        r3, [r2]
  00190	e59d3000	 ldr         r3, [sp]
  00194	e2833001	 add         r3, r3, #1
  00198	e58d3000	 str         r3, [sp]

; 49   :             code %= base;

  0019c	e1dd30b4	 ldrh        r3, [sp, #4]
  001a0	e1a00003	 mov         r0, r3
  001a4	e1dd30b6	 ldrh        r3, [sp, #6]
  001a8	e1a01003	 mov         r1, r3
  001ac	eb000000	 bl          __rt_sdiv
  001b0	e1a03801	 mov         r3, r1, lsl #16
  001b4	e1a03823	 mov         r3, r3, lsr #16
  001b8	e1cd30b6	 strh        r3, [sp, #6]

; 50   :             base /= 10;

  001bc	e1dd30b4	 ldrh        r3, [sp, #4]
  001c0	e1a01003	 mov         r1, r3
  001c4	e3a0000a	 mov         r0, #0xA
  001c8	eb000000	 bl          __rt_sdiv
  001cc	e1a03800	 mov         r3, r0, lsl #16
  001d0	e1a03823	 mov         r3, r3, lsr #16
  001d4	e1cd30b4	 strh        r3, [sp, #4]

; 51   :         }

  001d8	eaffffdd	 b           |$LN2@OALKitlCre|
  001dc		 |$LN1@OALKitlCre|
  001dc		 |$LN3@OALKitlCre|

; 52   :     }        
; 53   :     pBuffer[count] = '\0';

  001dc	e59d2020	 ldr         r2, [sp, #0x20]
  001e0	e59d3000	 ldr         r3, [sp]
  001e4	e0822003	 add         r2, r2, r3
  001e8	e3a03000	 mov         r3, #0
  001ec	e5c23000	 strb        r3, [r2]

; 54   : 
; 55   :     KITL_RETAILMSG(ZONE_KITL_OAL, (
; 56   :         "-OALKitlCreateName(pBuffer = '%hs')\r\n", pBuffer
; 57   :     ));

  001f0	e59f3038	 ldr         r3, [pc, #0x38]
  001f4	e5933440	 ldr         r3, [r3, #0x440]
  001f8	e3130a01	 tst         r3, #1, 20
  001fc	0a000005	 beq         |$LN13@OALKitlCre|
  00200	e59d1020	 ldr         r1, [sp, #0x20]
  00204	e59f0020	 ldr         r0, [pc, #0x20]
  00208	eb000000	 bl          KITLOutputDebugString
  0020c	e3a03001	 mov         r3, #1
  00210	e58d300c	 str         r3, [sp, #0xC]
  00214	ea000001	 b           |$LN14@OALKitlCre|
  00218		 |$LN13@OALKitlCre|
  00218	e3a03000	 mov         r3, #0
  0021c	e58d300c	 str         r3, [sp, #0xC]
  00220		 |$LN14@OALKitlCre|

; 58   : }

  00220	e28dd010	 add         sp, sp, #0x10
  00224	e89d6000	 ldmia       sp, {sp, lr}
  00228	e12fff1e	 bx          lr
  0022c		 |$LN18@OALKitlCre|
  0022c		 |$LN19@OALKitlCre|
  0022c	00000000	 DCD         |??_C@_0CG@IHIMJOIA@?9OALKitlCreateName?$CIpBuffer?5?$DN?5?8?$CFh@|
  00230		 |$LN20@OALKitlCre|
  00230	00000000	 DCD         |dpCurSettings|
  00234		 |$LN21@OALKitlCre|
  00234	00000000	 DCD         |??_C@_0CM@BCMDHFLI@?$CLOALKitlCreateName?$CI?8?$CFhs?8?0?50x?$CF04x@|
  00238		 |$M43026|

			 ENDP  ; |OALKitlCreateName|

	END
