; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\COMMON\BOOT\BLMENU\menu.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|OALBLMenuShow|
	EXPORT	|OALBLMenuReadKey|
	EXPORT	|??_C@_1FM@KKEGFMMC@?$AAH?$AAi?$AAt?$AA?5?$AAs?$AAp?$AAa?$AAc?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAe?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn@| [ DATA ] ; `string'
	EXPORT	|OALBLMenuActivate|
	IMPORT	|OALGetTickCount|
	IMPORT	|NKDbgPrintfW|

  00000			 AREA	 |.pdata|, PDATA
|$T43410| DCD	|$LN11@OALBLMenuA|
	DCD	0x40003304
; File c:\wince600\platform\common\src\common\boot\blmenu\menu.c

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@KKEGFMMC@?$AAH?$AAi?$AAt?$AA?5?$AAs?$AAp?$AAa?$AAc?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAe?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn@| DCB "H"
	DCB	0x0, "i", 0x0, "t", 0x0, " ", 0x0, "s", 0x0, "p", 0x0, "a"
	DCB	0x0, "c", 0x0, "e", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "e", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "c", 0x0, "o", 0x0, "n", 0x0, "f", 0x0, "i", 0x0, "g"
	DCB	0x0, "u", 0x0, "r", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, " ", 0x0, "m", 0x0, "e", 0x0, "n", 0x0, "u"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ".", 0x0, ".", 0x0, "."
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALBLMenuActivate| PROC

; 35   : {

  00000		 |$LN11@OALBLMenuA|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd014	 sub         sp, sp, #0x14
  00010		 |$M43407|

; 36   :     UINT32 time;
; 37   :     WCHAR key = 0;

  00010	e3a03000	 mov         r3, #0
  00014	e1cd30b0	 strh        r3, [sp]
  00018		 |$LN6@OALBLMenuA|

; 38   :     
; 39   :     // First let user break to menu
; 40   :     while (delay > 0 && key != L' ') {

  00018	e59d301c	 ldr         r3, [sp, #0x1C]
  0001c	e3530000	 cmp         r3, #0
  00020	9a000020	 bls         |$LN5@OALBLMenuA|
  00024	e1dd30b0	 ldrh        r3, [sp]
  00028	e3530020	 cmp         r3, #0x20
  0002c	0a00001d	 beq         |$LN5@OALBLMenuA|

; 41   :        OALLog(L"Hit space to enter configuration menu %d...\r\n", delay);

  00030	e59d101c	 ldr         r1, [sp, #0x1C]
  00034	e59f008c	 ldr         r0, [pc, #0x8C]
  00038	eb000000	 bl          NKDbgPrintfW

; 42   :        time = OALGetTickCount();

  0003c	eb000000	 bl          OALGetTickCount
  00040	e58d0008	 str         r0, [sp, #8]
  00044	e59d3008	 ldr         r3, [sp, #8]
  00048	e58d3004	 str         r3, [sp, #4]
  0004c		 |$LN4@OALBLMenuA|

; 43   :        while ((OALGetTickCount() - time) < 1000) {

  0004c	eb000000	 bl          OALGetTickCount
  00050	e58d000c	 str         r0, [sp, #0xC]
  00054	e59d200c	 ldr         r2, [sp, #0xC]
  00058	e59d3004	 ldr         r3, [sp, #4]
  0005c	e0423003	 sub         r3, r2, r3
  00060	e3530ffa	 cmp         r3, #0xFA, 30
  00064	2a00000b	 bcs         |$LN3@OALBLMenuA|

; 44   :           if ((key = OALBLMenuReadKey(FALSE)) == L' ') break;

  00068	e3a00000	 mov         r0, #0
  0006c	eb000000	 bl          OALBLMenuReadKey
  00070	e1a03800	 mov         r3, r0, lsl #16
  00074	e1a03823	 mov         r3, r3, lsr #16
  00078	e1cd31b0	 strh        r3, [sp, #0x10]
  0007c	e1dd31b0	 ldrh        r3, [sp, #0x10]
  00080	e1cd30b0	 strh        r3, [sp]
  00084	e1dd30b0	 ldrh        r3, [sp]
  00088	e3530020	 cmp         r3, #0x20
  0008c	1a000000	 bne         |$LN2@OALBLMenuA|
  00090	ea000000	 b           |$LN3@OALBLMenuA|
  00094		 |$LN2@OALBLMenuA|

; 45   :        }

  00094	eaffffec	 b           |$LN4@OALBLMenuA|
  00098		 |$LN3@OALBLMenuA|

; 46   :        delay--;

  00098	e59d301c	 ldr         r3, [sp, #0x1C]
  0009c	e2433001	 sub         r3, r3, #1
  000a0	e58d301c	 str         r3, [sp, #0x1C]

; 47   :     }

  000a4	eaffffdb	 b           |$LN6@OALBLMenuA|
  000a8		 |$LN5@OALBLMenuA|

; 48   :     
; 49   :     if (key == L' ') {

  000a8	e1dd30b0	 ldrh        r3, [sp]
  000ac	e3530020	 cmp         r3, #0x20
  000b0	1a000001	 bne         |$LN1@OALBLMenuA|

; 50   : #ifdef OAL_BLMENU_PCI
; 51   :         OALPCIConfig(0, 0, 0, 0, 0, 0, NULL);
; 52   : #endif
; 53   :         OALBLMenuShow(pMenu);

  000b4	e59d0020	 ldr         r0, [sp, #0x20]
  000b8	eb000000	 bl          OALBLMenuShow
  000bc		 |$LN1@OALBLMenuA|

; 54   :     }        
; 55   : }

  000bc	e28dd014	 add         sp, sp, #0x14
  000c0	e89d6000	 ldmia       sp, {sp, lr}
  000c4	e12fff1e	 bx          lr
  000c8		 |$LN12@OALBLMenuA|
  000c8		 |$LN13@OALBLMenuA|
  000c8	00000000	 DCD         |??_C@_1FM@KKEGFMMC@?$AAH?$AAi?$AAt?$AA?5?$AAs?$AAp?$AAa?$AAc?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAe?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAc?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAa?$AAt?$AAi?$AAo?$AAn@|
  000cc		 |$M43408|

			 ENDP  ; |OALBLMenuActivate|

	EXPORT	|??_C@_17HBLJBP@?$AA?$AN?$AA?6?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_13IMODFHAA@?$AA?9?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_15JNBOKNOG@?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|OALBLMenuHeader|
	IMPORT	|NKvDbgPrintfW|

  00008			 AREA	 |.pdata|, PDATA
|$T43417| DCD	|$LN11@OALBLMenuH|
	DCD	0x40003004

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17HBLJBP@?$AA?$AN?$AA?6?$AA?5?$AA?$AA@| DCB 0xd, 0x0, 0xa, 0x0, " "
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_13IMODFHAA@?$AA?9?$AA?$AA@| DCB "-", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_15JNBOKNOG@?$AA?$AN?$AA?6?$AA?$AA@| DCB 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  000cc			 AREA	 |.text|, CODE, ARM

  000cc		 |OALBLMenuHeader| PROC

; 60   : {

  000cc		 |$LN11@OALBLMenuH|
  000cc	e1a0c00d	 mov         r12, sp
  000d0	e92d000f	 stmdb       sp!, {r0 - r3}
  000d4	e92d5000	 stmdb       sp!, {r12, lr}
  000d8	e24dd008	 sub         sp, sp, #8
  000dc		 |$M43414|

; 61   :     va_list pArgList;
; 62   :     UINT32 i;
; 63   : 
; 64   :     va_start(pArgList, format);

  000dc	e28d3010	 add         r3, sp, #0x10
  000e0	e2833004	 add         r3, r3, #4
  000e4	e58d3004	 str         r3, [sp, #4]

; 65   : 
; 66   :     OALLog(L"\r\n");

  000e8	e59f0090	 ldr         r0, [pc, #0x90]
  000ec	eb000000	 bl          NKDbgPrintfW

; 67   :     for (i = 0; i < 80; i++) OALLog(L"-");

  000f0	e3a03000	 mov         r3, #0
  000f4	e58d3000	 str         r3, [sp]
  000f8	ea000002	 b           |$LN6@OALBLMenuH|
  000fc		 |$LN5@OALBLMenuH|
  000fc	e59d3000	 ldr         r3, [sp]
  00100	e2833001	 add         r3, r3, #1
  00104	e58d3000	 str         r3, [sp]
  00108		 |$LN6@OALBLMenuH|
  00108	e59d3000	 ldr         r3, [sp]
  0010c	e3530050	 cmp         r3, #0x50
  00110	2a000002	 bcs         |$LN4@OALBLMenuH|
  00114	e59f0068	 ldr         r0, [pc, #0x68]
  00118	eb000000	 bl          NKDbgPrintfW
  0011c	eafffff6	 b           |$LN5@OALBLMenuH|
  00120		 |$LN4@OALBLMenuH|

; 68   :     OALLog(L"\r\n ");

  00120	e59f0060	 ldr         r0, [pc, #0x60]
  00124	eb000000	 bl          NKDbgPrintfW

; 69   :     OALLogV(format, pArgList);

  00128	e59d1004	 ldr         r1, [sp, #4]
  0012c	e59d0010	 ldr         r0, [sp, #0x10]
  00130	eb000000	 bl          NKvDbgPrintfW

; 70   :     OALLog(L"\r\n");

  00134	e59f0044	 ldr         r0, [pc, #0x44]
  00138	eb000000	 bl          NKDbgPrintfW

; 71   :     for (i = 0; i < 80; i++) OALLog(L"-");

  0013c	e3a03000	 mov         r3, #0
  00140	e58d3000	 str         r3, [sp]
  00144	ea000002	 b           |$LN3@OALBLMenuH|
  00148		 |$LN2@OALBLMenuH|
  00148	e59d3000	 ldr         r3, [sp]
  0014c	e2833001	 add         r3, r3, #1
  00150	e58d3000	 str         r3, [sp]
  00154		 |$LN3@OALBLMenuH|
  00154	e59d3000	 ldr         r3, [sp]
  00158	e3530050	 cmp         r3, #0x50
  0015c	2a000002	 bcs         |$LN1@OALBLMenuH|
  00160	e59f001c	 ldr         r0, [pc, #0x1C]
  00164	eb000000	 bl          NKDbgPrintfW
  00168	eafffff6	 b           |$LN2@OALBLMenuH|
  0016c		 |$LN1@OALBLMenuH|

; 72   :     OALLog(L"\r\n");

  0016c	e59f000c	 ldr         r0, [pc, #0xC]
  00170	eb000000	 bl          NKDbgPrintfW

; 73   : }

  00174	e28dd008	 add         sp, sp, #8
  00178	e89d6000	 ldmia       sp, {sp, lr}
  0017c	e12fff1e	 bx          lr
  00180		 |$LN12@OALBLMenuH|
  00180		 |$LN13@OALBLMenuH|
  00180	00000000	 DCD         |??_C@_15JNBOKNOG@?$AA?$AN?$AA?6?$AA?$AA@|
  00184		 |$LN14@OALBLMenuH|
  00184	00000000	 DCD         |??_C@_13IMODFHAA@?$AA?9?$AA?$AA@|
  00188		 |$LN15@OALBLMenuH|
  00188	00000000	 DCD         |??_C@_17HBLJBP@?$AA?$AN?$AA?6?$AA?5?$AA?$AA@|
  0018c		 |$M43415|

			 ENDP  ; |OALBLMenuHeader|

	EXPORT	|??_C@_19DIEGALPP@?$AA?$CF?$AAc?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@MKGCCJBG@?$AA?$AN?$AA?6?$AA?5?$AAS?$AAe?$AAl?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@EBHIGBFG@?$AA?5?$AA?$FL?$AA?$CF?$AAc?$AA?$FN?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@| [ DATA ] ; `string'

  00010			 AREA	 |.pdata|, PDATA
|$T43426| DCD	|$LN18@OALBLMenuS|
	DCD	0x40005904

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_19DIEGALPP@?$AA?$CF?$AAc?$AA?$AN?$AA?6?$AA?$AA@| DCB "%", 0x0, "c", 0x0
	DCB	0xd, 0x0, 0xa, 0x0, 0x0, 0x0		; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@MKGCCJBG@?$AA?$AN?$AA?6?$AA?5?$AAS?$AAe?$AAl?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AA?$AA@| DCB 0xd
	DCB	0x0, 0xa, 0x0, " ", 0x0, "S", 0x0, "e", 0x0, "l", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, ":"
	DCB	0x0, " ", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@EBHIGBFG@?$AA?5?$AA?$FL?$AA?$CF?$AAc?$AA?$FN?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "[", 0x0, "%", 0x0, "c", 0x0, "]", 0x0, " ", 0x0, "%"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@| DCB "%", 0x0, "s", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  0018c			 AREA	 |.text|, CODE, ARM

  0018c		 |OALBLMenuShow| PROC

; 78   : {

  0018c		 |$LN18@OALBLMenuS|
  0018c	e1a0c00d	 mov         r12, sp
  00190	e92d0001	 stmdb       sp!, {r0}
  00194	e92d5000	 stmdb       sp!, {r12, lr}
  00198	e24dd014	 sub         sp, sp, #0x14
  0019c		 |$M43423|

; 79   :     LPCWSTR title = pMenu->pParam1;

  0019c	e59d301c	 ldr         r3, [sp, #0x1C]
  001a0	e283300c	 add         r3, r3, #0xC
  001a4	e5933000	 ldr         r3, [r3]
  001a8	e58d3000	 str         r3, [sp]

; 80   :     OAL_BLMENU_ITEM *aMenu = pMenu->pParam2, *pItem;

  001ac	e59d301c	 ldr         r3, [sp, #0x1C]
  001b0	e2833010	 add         r3, r3, #0x10
  001b4	e5933000	 ldr         r3, [r3]
  001b8	e58d3004	 str         r3, [sp, #4]
  001bc		 |$LN13@OALBLMenuS|

; 81   :     WCHAR key;
; 82   : 
; 83   :     while (TRUE) {
; 84   :         
; 85   :         OALBLMenuHeader(L"%s", title);

  001bc	e59d1000	 ldr         r1, [sp]
  001c0	e59f0124	 ldr         r0, [pc, #0x124]
  001c4	eb000000	 bl          OALBLMenuHeader

; 86   : 
; 87   :         // Print menu items
; 88   :         for (pItem = aMenu; pItem->key != 0; pItem++) {

  001c8	e59d3004	 ldr         r3, [sp, #4]
  001cc	e58d300c	 str         r3, [sp, #0xC]
  001d0	ea000002	 b           |$LN11@OALBLMenuS|
  001d4		 |$LN10@OALBLMenuS|
  001d4	e59d300c	 ldr         r3, [sp, #0xC]
  001d8	e2833018	 add         r3, r3, #0x18
  001dc	e58d300c	 str         r3, [sp, #0xC]
  001e0		 |$LN11@OALBLMenuS|
  001e0	e59d300c	 ldr         r3, [sp, #0xC]
  001e4	e1d330b0	 ldrh        r3, [r3]
  001e8	e3530000	 cmp         r3, #0
  001ec	0a000007	 beq         |$LN9@OALBLMenuS|

; 89   :             OALLog(L" [%c] %s\r\n", pItem->key, pItem->text);

  001f0	e59d300c	 ldr         r3, [sp, #0xC]
  001f4	e2833004	 add         r3, r3, #4
  001f8	e5932000	 ldr         r2, [r3]
  001fc	e59d300c	 ldr         r3, [sp, #0xC]
  00200	e1d310b0	 ldrh        r1, [r3]
  00204	e59f00dc	 ldr         r0, [pc, #0xDC]
  00208	eb000000	 bl          NKDbgPrintfW

; 90   :         }

  0020c	eafffff0	 b           |$LN10@OALBLMenuS|
  00210		 |$LN9@OALBLMenuS|

; 91   :         OALLog(L"\r\n Selection: ");

  00210	e59f00cc	 ldr         r0, [pc, #0xCC]
  00214	eb000000	 bl          NKDbgPrintfW
  00218		 |$LN8@OALBLMenuS|

; 92   : 
; 93   :         while (TRUE) {
; 94   :             // Get key
; 95   :             key = OALBLMenuReadKey(TRUE);

  00218	e3a00001	 mov         r0, #1
  0021c	eb000000	 bl          OALBLMenuReadKey
  00220	e1a03800	 mov         r3, r0, lsl #16
  00224	e1a03823	 mov         r3, r3, lsr #16
  00228	e1cd31b0	 strh        r3, [sp, #0x10]
  0022c	e1dd31b0	 ldrh        r3, [sp, #0x10]
  00230	e1cd30b8	 strh        r3, [sp, #8]

; 96   :             // Look for key in menu
; 97   :             for (pItem = aMenu; pItem->key != 0; pItem++) {

  00234	e59d3004	 ldr         r3, [sp, #4]
  00238	e58d300c	 str         r3, [sp, #0xC]
  0023c	ea000002	 b           |$LN6@OALBLMenuS|
  00240		 |$LN5@OALBLMenuS|
  00240	e59d300c	 ldr         r3, [sp, #0xC]
  00244	e2833018	 add         r3, r3, #0x18
  00248	e58d300c	 str         r3, [sp, #0xC]
  0024c		 |$LN6@OALBLMenuS|
  0024c	e59d300c	 ldr         r3, [sp, #0xC]
  00250	e1d330b0	 ldrh        r3, [r3]
  00254	e3530000	 cmp         r3, #0
  00258	0a000007	 beq         |$LN4@OALBLMenuS|

; 98   :                 if (pItem->key == key) break;

  0025c	e59d300c	 ldr         r3, [sp, #0xC]
  00260	e1d330b0	 ldrh        r3, [r3]
  00264	e1a02003	 mov         r2, r3
  00268	e1dd30b8	 ldrh        r3, [sp, #8]
  0026c	e1520003	 cmp         r2, r3
  00270	1a000000	 bne         |$LN3@OALBLMenuS|
  00274	ea000000	 b           |$LN4@OALBLMenuS|
  00278		 |$LN3@OALBLMenuS|

; 99   :             }

  00278	eafffff0	 b           |$LN5@OALBLMenuS|
  0027c		 |$LN4@OALBLMenuS|

; 100  :             // If we find it, break loop
; 101  :             if (pItem->key != 0) break;

  0027c	e59d300c	 ldr         r3, [sp, #0xC]
  00280	e1d330b0	 ldrh        r3, [r3]
  00284	e3530000	 cmp         r3, #0
  00288	0a000000	 beq         |$LN2@OALBLMenuS|
  0028c	ea000000	 b           |$LN7@OALBLMenuS|
  00290		 |$LN2@OALBLMenuS|

; 102  :         }

  00290	eaffffe0	 b           |$LN8@OALBLMenuS|
  00294		 |$LN7@OALBLMenuS|

; 103  : 
; 104  :         // Print out selection character
; 105  :         OALLog(L"%c\r\n", key);

  00294	e1dd10b8	 ldrh        r1, [sp, #8]
  00298	e59f0040	 ldr         r0, [pc, #0x40]
  0029c	eb000000	 bl          NKDbgPrintfW

; 106  :         
; 107  :         // When action is NULL return back to parent menu
; 108  :         if (pItem->pfnAction == NULL) break;

  002a0	e59d300c	 ldr         r3, [sp, #0xC]
  002a4	e2833008	 add         r3, r3, #8
  002a8	e5933000	 ldr         r3, [r3]
  002ac	e3530000	 cmp         r3, #0
  002b0	1a000000	 bne         |$LN1@OALBLMenuS|
  002b4	ea000006	 b           |$LN12@OALBLMenuS|
  002b8		 |$LN1@OALBLMenuS|

; 109  :         
; 110  :         // Else call menu action
; 111  :         pItem->pfnAction(pItem);

  002b8	e59d000c	 ldr         r0, [sp, #0xC]
  002bc	e59d300c	 ldr         r3, [sp, #0xC]
  002c0	e2833008	 add         r3, r3, #8
  002c4	e5933000	 ldr         r3, [r3]
  002c8	e1a0e00f	 mov         lr, pc
  002cc	e12fff13	 bx          r3

; 112  : 
; 113  :     } 

  002d0	eaffffb9	 b           |$LN13@OALBLMenuS|
  002d4		 |$LN12@OALBLMenuS|

; 114  : 
; 115  : }

  002d4	e28dd014	 add         sp, sp, #0x14
  002d8	e89d6000	 ldmia       sp, {sp, lr}
  002dc	e12fff1e	 bx          lr
  002e0		 |$LN19@OALBLMenuS|
  002e0		 |$LN20@OALBLMenuS|
  002e0	00000000	 DCD         |??_C@_19DIEGALPP@?$AA?$CF?$AAc?$AA?$AN?$AA?6?$AA?$AA@|
  002e4		 |$LN21@OALBLMenuS|
  002e4	00000000	 DCD         |??_C@_1BO@MKGCCJBG@?$AA?$AN?$AA?6?$AA?5?$AAS?$AAe?$AAl?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AA?$AA@|
  002e8		 |$LN22@OALBLMenuS|
  002e8	00000000	 DCD         |??_C@_1BG@EBHIGBFG@?$AA?5?$AA?$FL?$AA?$CF?$AAc?$AA?$FN?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  002ec		 |$LN23@OALBLMenuS|
  002ec	00000000	 DCD         |??_C@_15GANGMFKL@?$AA?$CF?$AAs?$AA?$AA@|
  002f0		 |$M43424|

			 ENDP  ; |OALBLMenuShow|

	EXPORT	|??_C@_1BO@ENGAEJMG@?$AA?5?$AA?$CF?$AAs?$AA?5?$AAs?$AAt?$AAa?$AAy?$AAs?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BC@HOHDMONC@?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@PCLKELEH@?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$CI?$AAa?$AAc?$AAt?$AAu?$AAa?$AAl?$AAl?$AAy?$AA?5?$AA?$CF?$AAs?$AA?$CJ?$AA?5?$AA?$FL?$AAy?$AA?1?$AA?9?$AA?$FN?$AA?3?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@PFBIKACK@?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@EHHBCNCC@?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BC@LGPIFEA@?$AAd?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAd?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@BKMGIBPB@?$AAe?$AAn?$AAa?$AAb?$AAl?$AAe?$AAd?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@GPDBNHB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAB?$AAL?$AAM?$AAe?$AAn?$AAu?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@| [ DATA ] ; `string'
	EXPORT	|OALBLMenuEnable|
	IMPORT	|dpCurSettings|

  00018			 AREA	 |.pdata|, PDATA
|$T43450| DCD	|$LN27@OALBLMenuE|
	DCD	0x40009a04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@ENGAEJMG@?$AA?5?$AA?$CF?$AAs?$AA?5?$AAs?$AAt?$AAa?$AAy?$AAs?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a"
	DCB	0x0, "y", 0x0, "s", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BC@HOHDMONC@?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@PCLKELEH@?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$CI?$AAa?$AAc?$AAt?$AAu?$AAa?$AAl?$AAl?$AAy?$AA?5?$AA?$CF?$AAs?$AA?$CJ?$AA?5?$AA?$FL?$AAy?$AA?1?$AA?9?$AA?$FN?$AA?3?$AA?5?$AA?$AA@| DCB " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " "
	DCB	0x0, "(", 0x0, "a", 0x0, "c", 0x0, "t", 0x0, "u", 0x0, "a"
	DCB	0x0, "l", 0x0, "l", 0x0, "y", 0x0, " ", 0x0, "%", 0x0, "s"
	DCB	0x0, ")", 0x0, " ", 0x0, "[", 0x0, "y", 0x0, "/", 0x0, "-"
	DCB	0x0, "]", 0x0, ":", 0x0, " ", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@PFBIKACK@?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?$AA@| DCB "E", 0x0, "n"
	DCB	0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@EHHBCNCC@?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AA?$AA@| DCB "D", 0x0
	DCB	"i", 0x0, "s", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BC@LGPIFEA@?$AAd?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAd?$AA?$AA@| DCB "d"
	DCB	0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@BKMGIBPB@?$AAe?$AAn?$AAa?$AAb?$AAl?$AAe?$AAd?$AA?$AA@| DCB "e", 0x0
	DCB	"n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e", 0x0, "d", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@GPDBNHB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAB?$AAL?$AAM?$AAe?$AAn?$AAu?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "B", 0x0, "L", 0x0, "M"
	DCB	0x0, "e", 0x0, "n", 0x0, "u", 0x0, "E", 0x0, "n", 0x0, "a"
	DCB	0x0, "b", 0x0, "l", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  002f0			 AREA	 |.text|, CODE, ARM

  002f0		 |OALBLMenuEnable| PROC

; 120  : {

  002f0		 |$LN27@OALBLMenuE|
  002f0	e1a0c00d	 mov         r12, sp
  002f4	e92d0001	 stmdb       sp!, {r0}
  002f8	e92d5000	 stmdb       sp!, {r12, lr}
  002fc	e24dd034	 sub         sp, sp, #0x34
  00300		 |$M43447|

; 121  :     LPCWSTR title = pMenu->pParam1;

  00300	e59d303c	 ldr         r3, [sp, #0x3C]
  00304	e283300c	 add         r3, r3, #0xC
  00308	e5933000	 ldr         r3, [r3]
  0030c	e58d3000	 str         r3, [sp]

; 122  :     UINT32 *pFlags = pMenu->pParam2;

  00310	e59d303c	 ldr         r3, [sp, #0x3C]
  00314	e2833010	 add         r3, r3, #0x10
  00318	e5933000	 ldr         r3, [r3]
  0031c	e58d3008	 str         r3, [sp, #8]

; 123  :     UINT32 mask = (UINT32)pMenu->pParam3;

  00320	e59d303c	 ldr         r3, [sp, #0x3C]
  00324	e2833014	 add         r3, r3, #0x14
  00328	e5933000	 ldr         r3, [r3]
  0032c	e58d3004	 str         r3, [sp, #4]

; 124  :     BOOL flag;
; 125  :     WCHAR key;
; 126  : 
; 127  :     // First check input parameter   
; 128  :     if (title == NULL || pFlags == NULL) {

  00330	e59d3000	 ldr         r3, [sp]
  00334	e3530000	 cmp         r3, #0
  00338	0a000002	 beq         |$LN7@OALBLMenuE|
  0033c	e59d3008	 ldr         r3, [sp, #8]
  00340	e3530000	 cmp         r3, #0
  00344	1a00000b	 bne         |$LN8@OALBLMenuE|
  00348		 |$LN7@OALBLMenuE|

; 129  :         OALMSG(OAL_ERROR, (L"ERROR: OALBLMenuEnable: Invalid parameter\r\n"));

  00348	e59f3204	 ldr         r3, [pc, #0x204]
  0034c	e5933440	 ldr         r3, [r3, #0x440]
  00350	e3130001	 tst         r3, #1
  00354	0a000004	 beq         |$LN11@OALBLMenuE|
  00358	e59f01f0	 ldr         r0, [pc, #0x1F0]
  0035c	eb000000	 bl          NKDbgPrintfW
  00360	e3a03001	 mov         r3, #1
  00364	e58d3014	 str         r3, [sp, #0x14]
  00368	ea000001	 b           |$LN12@OALBLMenuE|
  0036c		 |$LN11@OALBLMenuE|
  0036c	e3a03000	 mov         r3, #0
  00370	e58d3014	 str         r3, [sp, #0x14]
  00374		 |$LN12@OALBLMenuE|

; 130  :         goto cleanUp;

  00374	ea00006a	 b           |$cleanUp$43204|
  00378		 |$LN8@OALBLMenuE|

; 131  :     }
; 132  :     if (mask == 0) mask = 0xFFFF;

  00378	e59d3004	 ldr         r3, [sp, #4]
  0037c	e3530000	 cmp         r3, #0
  00380	1a000002	 bne         |$LN6@OALBLMenuE|
  00384	e3a03cff	 mov         r3, #0xFF, 24
  00388	e38330ff	 orr         r3, r3, #0xFF
  0038c	e58d3004	 str         r3, [sp, #4]
  00390		 |$LN6@OALBLMenuE|

; 133  : 
; 134  :     flag = (*pFlags & mask) != 0;

  00390	e59d3008	 ldr         r3, [sp, #8]
  00394	e5932000	 ldr         r2, [r3]
  00398	e59d3004	 ldr         r3, [sp, #4]
  0039c	e1120003	 tst         r2, r3
  003a0	0a000002	 beq         |$LN13@OALBLMenuE|
  003a4	e3a03001	 mov         r3, #1
  003a8	e58d3018	 str         r3, [sp, #0x18]
  003ac	ea000001	 b           |$LN14@OALBLMenuE|
  003b0		 |$LN13@OALBLMenuE|
  003b0	e3a03000	 mov         r3, #0
  003b4	e58d3018	 str         r3, [sp, #0x18]
  003b8		 |$LN14@OALBLMenuE|
  003b8	e59d3018	 ldr         r3, [sp, #0x18]
  003bc	e58d3010	 str         r3, [sp, #0x10]

; 135  :     
; 136  :     OALLog(
; 137  :         L" %s %s (actually %s) [y/-]: ", flag ? L"Disable" : L"Enable",
; 138  :         title, flag ? L"enabled" : L"disabled"
; 139  :     );

  003c0	e59d3010	 ldr         r3, [sp, #0x10]
  003c4	e3530000	 cmp         r3, #0
  003c8	0a000002	 beq         |$LN15@OALBLMenuE|
  003cc	e59f3164	 ldr         r3, [pc, #0x164]
  003d0	e58d301c	 str         r3, [sp, #0x1C]
  003d4	ea000001	 b           |$LN16@OALBLMenuE|
  003d8		 |$LN15@OALBLMenuE|
  003d8	e59f3154	 ldr         r3, [pc, #0x154]
  003dc	e58d301c	 str         r3, [sp, #0x1C]
  003e0		 |$LN16@OALBLMenuE|
  003e0	e59d3010	 ldr         r3, [sp, #0x10]
  003e4	e3530000	 cmp         r3, #0
  003e8	0a000002	 beq         |$LN17@OALBLMenuE|
  003ec	e59f3158	 ldr         r3, [pc, #0x158]
  003f0	e58d3020	 str         r3, [sp, #0x20]
  003f4	ea000001	 b           |$LN18@OALBLMenuE|
  003f8		 |$LN17@OALBLMenuE|
  003f8	e59f3148	 ldr         r3, [pc, #0x148]
  003fc	e58d3020	 str         r3, [sp, #0x20]
  00400		 |$LN18@OALBLMenuE|
  00400	e59d301c	 ldr         r3, [sp, #0x1C]
  00404	e59d2000	 ldr         r2, [sp]
  00408	e59d1020	 ldr         r1, [sp, #0x20]
  0040c	e59f0130	 ldr         r0, [pc, #0x130]
  00410	eb000000	 bl          NKDbgPrintfW

; 140  : 
; 141  :     // Get key
; 142  :     key = OALBLMenuReadKey(TRUE);

  00414	e3a00001	 mov         r0, #1
  00418	eb000000	 bl          OALBLMenuReadKey
  0041c	e1a03800	 mov         r3, r0, lsl #16
  00420	e1a03823	 mov         r3, r3, lsr #16
  00424	e1cd32b4	 strh        r3, [sp, #0x24]
  00428	e1dd32b4	 ldrh        r3, [sp, #0x24]
  0042c	e1cd30bc	 strh        r3, [sp, #0xC]

; 143  :     OALLog(L"%c\r\n", key);

  00430	e1dd10bc	 ldrh        r1, [sp, #0xC]
  00434	e59f0104	 ldr         r0, [pc, #0x104]
  00438	eb000000	 bl          NKDbgPrintfW

; 144  : 
; 145  :     if (key == L'y' || key == L'Y') {

  0043c	e1dd30bc	 ldrh        r3, [sp, #0xC]
  00440	e3530079	 cmp         r3, #0x79
  00444	0a000002	 beq         |$LN4@OALBLMenuE|
  00448	e1dd30bc	 ldrh        r3, [sp, #0xC]
  0044c	e3530059	 cmp         r3, #0x59
  00450	1a000016	 bne         |$LN5@OALBLMenuE|
  00454		 |$LN4@OALBLMenuE|

; 146  :         flag = !flag;

  00454	e59d3010	 ldr         r3, [sp, #0x10]
  00458	e3530000	 cmp         r3, #0
  0045c	1a000002	 bne         |$LN19@OALBLMenuE|
  00460	e3a03001	 mov         r3, #1
  00464	e58d3028	 str         r3, [sp, #0x28]
  00468	ea000001	 b           |$LN20@OALBLMenuE|
  0046c		 |$LN19@OALBLMenuE|
  0046c	e3a03000	 mov         r3, #0
  00470	e58d3028	 str         r3, [sp, #0x28]
  00474		 |$LN20@OALBLMenuE|
  00474	e59d3028	 ldr         r3, [sp, #0x28]
  00478	e58d3010	 str         r3, [sp, #0x10]

; 147  :         OALLog(L" %s %s\r\n", title, flag ? L"enabled" : L"disabled");

  0047c	e59d3010	 ldr         r3, [sp, #0x10]
  00480	e3530000	 cmp         r3, #0
  00484	0a000002	 beq         |$LN21@OALBLMenuE|
  00488	e59f30a8	 ldr         r3, [pc, #0xA8]
  0048c	e58d302c	 str         r3, [sp, #0x2C]
  00490	ea000001	 b           |$LN22@OALBLMenuE|
  00494		 |$LN21@OALBLMenuE|
  00494	e59f3098	 ldr         r3, [pc, #0x98]
  00498	e58d302c	 str         r3, [sp, #0x2C]
  0049c		 |$LN22@OALBLMenuE|
  0049c	e59d202c	 ldr         r2, [sp, #0x2C]
  004a0	e59d1000	 ldr         r1, [sp]
  004a4	e59f0090	 ldr         r0, [pc, #0x90]
  004a8	eb000000	 bl          NKDbgPrintfW

; 148  :     } else {

  004ac	ea00000b	 b           |$LN3@OALBLMenuE|
  004b0		 |$LN5@OALBLMenuE|

; 149  :         OALLog(
; 150  :             L" %s stays %s\r\n", title, flag ? L"enabled" : L"disabled"
; 151  :         );

  004b0	e59d3010	 ldr         r3, [sp, #0x10]
  004b4	e3530000	 cmp         r3, #0
  004b8	0a000002	 beq         |$LN23@OALBLMenuE|
  004bc	e59f3074	 ldr         r3, [pc, #0x74]
  004c0	e58d3030	 str         r3, [sp, #0x30]
  004c4	ea000001	 b           |$LN24@OALBLMenuE|
  004c8		 |$LN23@OALBLMenuE|
  004c8	e59f3064	 ldr         r3, [pc, #0x64]
  004cc	e58d3030	 str         r3, [sp, #0x30]
  004d0		 |$LN24@OALBLMenuE|
  004d0	e59d2030	 ldr         r2, [sp, #0x30]
  004d4	e59d1000	 ldr         r1, [sp]
  004d8	e59f0050	 ldr         r0, [pc, #0x50]
  004dc	eb000000	 bl          NKDbgPrintfW
  004e0		 |$LN3@OALBLMenuE|

; 152  :     }
; 153  : 
; 154  :     // Save value
; 155  :     if (flag) {

  004e0	e59d3010	 ldr         r3, [sp, #0x10]
  004e4	e3530000	 cmp         r3, #0
  004e8	0a000006	 beq         |$LN2@OALBLMenuE|

; 156  :         *pFlags |= mask;

  004ec	e59d3008	 ldr         r3, [sp, #8]
  004f0	e5932000	 ldr         r2, [r3]
  004f4	e59d3004	 ldr         r3, [sp, #4]
  004f8	e1822003	 orr         r2, r2, r3
  004fc	e59d3008	 ldr         r3, [sp, #8]
  00500	e5832000	 str         r2, [r3]

; 157  :     } else {

  00504	ea000006	 b           |$LN1@OALBLMenuE|
  00508		 |$LN2@OALBLMenuE|

; 158  :         *pFlags &= ~mask;

  00508	e59d3004	 ldr         r3, [sp, #4]
  0050c	e1e02003	 mvn         r2, r3
  00510	e59d3008	 ldr         r3, [sp, #8]
  00514	e5933000	 ldr         r3, [r3]
  00518	e0032002	 and         r2, r3, r2
  0051c	e59d3008	 ldr         r3, [sp, #8]
  00520	e5832000	 str         r2, [r3]
  00524		 |$LN1@OALBLMenuE|
  00524		 |$cleanUp$43204|

; 159  :     }
; 160  : 
; 161  : cleanUp:;
; 162  : }

  00524	e28dd034	 add         sp, sp, #0x34
  00528	e89d6000	 ldmia       sp, {sp, lr}
  0052c	e12fff1e	 bx          lr
  00530		 |$LN28@OALBLMenuE|
  00530		 |$LN29@OALBLMenuE|
  00530	00000000	 DCD         |??_C@_1BO@ENGAEJMG@?$AA?5?$AA?$CF?$AAs?$AA?5?$AAs?$AAt?$AAa?$AAy?$AAs?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00534		 |$LN30@OALBLMenuE|
  00534	00000000	 DCD         |??_C@_1BC@LGPIFEA@?$AAd?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAd?$AA?$AA@|
  00538		 |$LN31@OALBLMenuE|
  00538	00000000	 DCD         |??_C@_1BA@BKMGIBPB@?$AAe?$AAn?$AAa?$AAb?$AAl?$AAe?$AAd?$AA?$AA@|
  0053c		 |$LN32@OALBLMenuE|
  0053c	00000000	 DCD         |??_C@_1BC@HOHDMONC@?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00540		 |$LN33@OALBLMenuE|
  00540	00000000	 DCD         |??_C@_19DIEGALPP@?$AA?$CF?$AAc?$AA?$AN?$AA?6?$AA?$AA@|
  00544		 |$LN34@OALBLMenuE|
  00544	00000000	 DCD         |??_C@_1DK@PCLKELEH@?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$CI?$AAa?$AAc?$AAt?$AAu?$AAa?$AAl?$AAl?$AAy?$AA?5?$AA?$CF?$AAs?$AA?$CJ?$AA?5?$AA?$FL?$AAy?$AA?1?$AA?9?$AA?$FN?$AA?3?$AA?5?$AA?$AA@|
  00548		 |$LN35@OALBLMenuE|
  00548	00000000	 DCD         |??_C@_1O@PFBIKACK@?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?$AA@|
  0054c		 |$LN36@OALBLMenuE|
  0054c	00000000	 DCD         |??_C@_1BA@EHHBCNCC@?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AA?$AA@|
  00550		 |$LN37@OALBLMenuE|
  00550	00000000	 DCD         |??_C@_1FI@GPDBNHB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAB?$AAL?$AAM?$AAe?$AAn?$AAu?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@|
  00554		 |$LN38@OALBLMenuE|
  00554	00000000	 DCD         |dpCurSettings|
  00558		 |$M43448|

			 ENDP  ; |OALBLMenuEnable|

	EXPORT	|??_C@_1DI@EBJOBKJO@?$AA?5?$AA?$CF?$AAs?$AA?5?$AAM?$AAA?$AAC?$AA?5?$AAa?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@HMINENJO@?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAi?$AAs?$AAn?$AA?8?$AAt?$AA?5?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAM?$AAA?$AAC?$AA?5?$AAa?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|OALBLMenuReadLine|
	EXPORT	|??_C@_1EI@KGHANMNL@?$AA?5?$AAE?$AAn?$AAt?$AAe?$AAr?$AA?5?$AA?$CF?$AAs?$AA?5?$AAM?$AAA?$AAC?$AA?5?$AAa?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?5?$AA?$CI?$AAa?$AAc?$AAt?$AAu?$AAa?$AAl?$AA?5?$AA?$CF?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@KAOMNNAE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAB?$AAL?$AAM?$AAe?$AAn?$AAu?$AAS?$AAe?$AAt?$AAM?$AAa?$AAc?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?3?$AA?5?$AAI@| [ DATA ] ; `string'
	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|OALBLMenuSetMacAddress|
	IMPORT	|OALKitlStringToMAC|
	IMPORT	|OALKitlMACtoString|
	IMPORT	|__security_cookie|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_check_cookie|

  00020			 AREA	 |.pdata|, PDATA
|$T43473| DCD	|$LN11@OALBLMenuS@2|
	DCD	0xc0006304

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@EBJOBKJO@?$AA?5?$AA?$CF?$AAs?$AA?5?$AAM?$AAA?$AAC?$AA?5?$AAa?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "M", 0x0, "A", 0x0, "C"
	DCB	0x0, " ", 0x0, "a", 0x0, "d", 0x0, "d", 0x0, "r", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, " ", 0x0, "s", 0x0, "e", 0x0, "t"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "%", 0x0, "s"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@HMINENJO@?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAi?$AAs?$AAn?$AA?8?$AAt?$AA?5?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAM?$AAA?$AAC?$AA?5?$AAa?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'", 0x0, " ", 0x0, "i"
	DCB	0x0, "s", 0x0, "n", 0x0, "'", 0x0, "t", 0x0, " ", 0x0, "v"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "M"
	DCB	0x0, "A", 0x0, "C", 0x0, " ", 0x0, "a", 0x0, "d", 0x0, "d"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@KGHANMNL@?$AA?5?$AAE?$AAn?$AAt?$AAe?$AAr?$AA?5?$AA?$CF?$AAs?$AA?5?$AAM?$AAA?$AAC?$AA?5?$AAa?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?5?$AA?$CI?$AAa?$AAc?$AAt?$AAu?$AAa?$AAl?$AA?5?$AA?$CF?$AAs@| DCB " "
	DCB	0x0, "E", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "M", 0x0, "A", 0x0, "C"
	DCB	0x0, " ", 0x0, "a", 0x0, "d", 0x0, "d", 0x0, "r", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, " ", 0x0, "(", 0x0, "a", 0x0, "c"
	DCB	0x0, "t", 0x0, "u", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "%"
	DCB	0x0, "s", 0x0, ")", 0x0, ":", 0x0, " ", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@KAOMNNAE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAB?$AAL?$AAM?$AAe?$AAn?$AAu?$AAS?$AAe?$AAt?$AAM?$AAa?$AAc?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?3?$AA?5?$AAI@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "B", 0x0, "L", 0x0, "M"
	DCB	0x0, "e", 0x0, "n", 0x0, "u", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, "M", 0x0, "a", 0x0, "c", 0x0, "A", 0x0, "d", 0x0, "d"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a"
	DCB	0x0, "m", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.xdata|, DATA
|$T43469| DCD	0xffffffdc
; Function compile flags: /Odtp

  00558			 AREA	 |.text|, CODE, ARM

  00558	00000000	 DCD         |__GSHandlerCheck|
  0055c	00000000	 DCD         |$T43469|

  00560		 |OALBLMenuSetMacAddress| PROC

; 167  : {

  00560		 |$LN11@OALBLMenuS@2|
  00560	e1a0c00d	 mov         r12, sp
  00564	e92d0001	 stmdb       sp!, {r0}
  00568	e92d5000	 stmdb       sp!, {r12, lr}
  0056c	e24dd04c	 sub         sp, sp, #0x4C
  00570		 |$M43470|
  00570	e59f3170	 ldr         r3, [pc, #0x170]
  00574	e5933000	 ldr         r3, [r3]
  00578	e58d3034	 str         r3, [sp, #0x34]

; 168  :     LPCWSTR title = pMenu->pParam1;

  0057c	e59d3054	 ldr         r3, [sp, #0x54]
  00580	e283300c	 add         r3, r3, #0xC
  00584	e5933000	 ldr         r3, [r3]
  00588	e58d3000	 str         r3, [sp]

; 169  :     UINT16 *pMac = pMenu->pParam2;

  0058c	e59d3054	 ldr         r3, [sp, #0x54]
  00590	e2833010	 add         r3, r3, #0x10
  00594	e5933000	 ldr         r3, [r3]
  00598	e58d3004	 str         r3, [sp, #4]

; 170  :     UINT16 mac[3];
; 171  :     WCHAR buffer[18];
; 172  : 
; 173  :     // First check input parameters    
; 174  :     if (title == NULL || pMac == NULL) {

  0059c	e59d3000	 ldr         r3, [sp]
  005a0	e3530000	 cmp         r3, #0
  005a4	0a000002	 beq         |$LN3@OALBLMenuS@2|
  005a8	e59d3004	 ldr         r3, [sp, #4]
  005ac	e3530000	 cmp         r3, #0
  005b0	1a00000b	 bne         |$LN4@OALBLMenuS@2|
  005b4		 |$LN3@OALBLMenuS@2|

; 175  :         OALMSG(OAL_ERROR, (
; 176  :             L"ERROR: OALBLMenuSetMacAddress: Invalid parameter\r\n"
; 177  :         ));

  005b4	e59f3128	 ldr         r3, [pc, #0x128]
  005b8	e5933440	 ldr         r3, [r3, #0x440]
  005bc	e3130001	 tst         r3, #1
  005c0	0a000004	 beq         |$LN7@OALBLMenuS@2|
  005c4	e59f0114	 ldr         r0, [pc, #0x114]
  005c8	eb000000	 bl          NKDbgPrintfW
  005cc	e3a03001	 mov         r3, #1
  005d0	e58d3038	 str         r3, [sp, #0x38]
  005d4	ea000001	 b           |$LN8@OALBLMenuS@2|
  005d8		 |$LN7@OALBLMenuS@2|
  005d8	e3a03000	 mov         r3, #0
  005dc	e58d3038	 str         r3, [sp, #0x38]
  005e0		 |$LN8@OALBLMenuS@2|

; 178  :         goto cleanUp;

  005e0	ea000036	 b           |$cleanUp$43231|
  005e4		 |$LN4@OALBLMenuS@2|

; 179  :     }
; 180  : 
; 181  :     // Get actual setting
; 182  :     mac[0] = pMac[0];

  005e4	e59d3004	 ldr         r3, [sp, #4]
  005e8	e1d330b0	 ldrh        r3, [r3]
  005ec	e1cd32bc	 strh        r3, [sp, #0x2C]

; 183  :     mac[1] = pMac[1];

  005f0	e59d3004	 ldr         r3, [sp, #4]
  005f4	e2833002	 add         r3, r3, #2
  005f8	e1d330b0	 ldrh        r3, [r3]
  005fc	e1cd32be	 strh        r3, [sp, #0x2E]

; 184  :     mac[2] = pMac[2];

  00600	e59d3004	 ldr         r3, [sp, #4]
  00604	e2833004	 add         r3, r3, #4
  00608	e1d330b0	 ldrh        r3, [r3]
  0060c	e1cd33b0	 strh        r3, [sp, #0x30]

; 185  : 
; 186  :     // Print prompt
; 187  :     OALLog(
; 188  :         L" Enter %s MAC address (actual %s): ", title, OALKitlMACtoString(mac)
; 189  :     );

  00610	e28d002c	 add         r0, sp, #0x2C
  00614	eb000000	 bl          OALKitlMACtoString
  00618	e58d003c	 str         r0, [sp, #0x3C]
  0061c	e59d203c	 ldr         r2, [sp, #0x3C]
  00620	e59d1000	 ldr         r1, [sp]
  00624	e59f00b0	 ldr         r0, [pc, #0xB0]
  00628	eb000000	 bl          NKDbgPrintfW

; 190  :     
; 191  :     // Read input line
; 192  :     if (OALBLMenuReadLine(buffer, dimof(buffer)) == 0) goto cleanUp;

  0062c	e3a01012	 mov         r1, #0x12
  00630	e28d0008	 add         r0, sp, #8
  00634	eb000000	 bl          OALBLMenuReadLine
  00638	e58d0040	 str         r0, [sp, #0x40]
  0063c	e59d3040	 ldr         r3, [sp, #0x40]
  00640	e3530000	 cmp         r3, #0
  00644	1a000000	 bne         |$LN2@OALBLMenuS@2|
  00648	ea00001c	 b           |$cleanUp$43231|
  0064c		 |$LN2@OALBLMenuS@2|

; 193  : 
; 194  :     // Convert string to MAC address
; 195  :     if (!OALKitlStringToMAC(buffer, mac)) {

  0064c	e28d102c	 add         r1, sp, #0x2C
  00650	e28d0008	 add         r0, sp, #8
  00654	eb000000	 bl          OALKitlStringToMAC
  00658	e58d0044	 str         r0, [sp, #0x44]
  0065c	e59d3044	 ldr         r3, [sp, #0x44]
  00660	e3530000	 cmp         r3, #0
  00664	1a000003	 bne         |$LN1@OALBLMenuS@2|

; 196  :         OALLog(L" '%s' isn't valid MAC address\r\n", buffer);

  00668	e28d1008	 add         r1, sp, #8
  0066c	e59f0064	 ldr         r0, [pc, #0x64]
  00670	eb000000	 bl          NKDbgPrintfW

; 197  :         goto cleanUp;

  00674	ea000011	 b           |$cleanUp$43231|
  00678		 |$LN1@OALBLMenuS@2|

; 198  :     }
; 199  : 
; 200  :     // Print final MAC address
; 201  :     OALLog(L" %s MAC address set to %s\r\n", title, OALKitlMACtoString(mac));        

  00678	e28d002c	 add         r0, sp, #0x2C
  0067c	eb000000	 bl          OALKitlMACtoString
  00680	e58d0048	 str         r0, [sp, #0x48]
  00684	e59d2048	 ldr         r2, [sp, #0x48]
  00688	e59d1000	 ldr         r1, [sp]
  0068c	e59f0040	 ldr         r0, [pc, #0x40]
  00690	eb000000	 bl          NKDbgPrintfW

; 202  : 
; 203  :     // Save new setting
; 204  :     pMac[0] = mac[0];

  00694	e1dd22bc	 ldrh        r2, [sp, #0x2C]
  00698	e59d3004	 ldr         r3, [sp, #4]
  0069c	e1c320b0	 strh        r2, [r3]

; 205  :     pMac[1] = mac[1];

  006a0	e59d3004	 ldr         r3, [sp, #4]
  006a4	e2832002	 add         r2, r3, #2
  006a8	e1dd32be	 ldrh        r3, [sp, #0x2E]
  006ac	e1c230b0	 strh        r3, [r2]

; 206  :     pMac[2] = mac[2];

  006b0	e59d3004	 ldr         r3, [sp, #4]
  006b4	e2832004	 add         r2, r3, #4
  006b8	e1dd33b0	 ldrh        r3, [sp, #0x30]
  006bc	e1c230b0	 strh        r3, [r2]
  006c0		 |$cleanUp$43231|

; 167  : {

  006c0	e59d0034	 ldr         r0, [sp, #0x34]
  006c4	eb000000	 bl          __security_check_cookie

; 207  :     
; 208  : cleanUp:;
; 209  : }

  006c8	e28dd04c	 add         sp, sp, #0x4C
  006cc	e89d6000	 ldmia       sp, {sp, lr}
  006d0	e12fff1e	 bx          lr
  006d4		 |$LN12@OALBLMenuS@2|
  006d4		 |$LN13@OALBLMenuS@2|
  006d4	00000000	 DCD         |??_C@_1DI@EBJOBKJO@?$AA?5?$AA?$CF?$AAs?$AA?5?$AAM?$AAA?$AAC?$AA?5?$AAa?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  006d8		 |$LN14@OALBLMenuS@2|
  006d8	00000000	 DCD         |??_C@_1EA@HMINENJO@?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAi?$AAs?$AAn?$AA?8?$AAt?$AA?5?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAM?$AAA?$AAC?$AA?5?$AAa?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  006dc		 |$LN15@OALBLMenuS@2|
  006dc	00000000	 DCD         |??_C@_1EI@KGHANMNL@?$AA?5?$AAE?$AAn?$AAt?$AAe?$AAr?$AA?5?$AA?$CF?$AAs?$AA?5?$AAM?$AAA?$AAC?$AA?5?$AAa?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?5?$AA?$CI?$AAa?$AAc?$AAt?$AAu?$AAa?$AAl?$AA?5?$AA?$CF?$AAs@|
  006e0		 |$LN16@OALBLMenuS@2|
  006e0	00000000	 DCD         |??_C@_1GG@KAOMNNAE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAB?$AAL?$AAM?$AAe?$AAn?$AAu?$AAS?$AAe?$AAt?$AAM?$AAa?$AAc?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?3?$AA?5?$AAI@|
  006e4		 |$LN17@OALBLMenuS@2|
  006e4	00000000	 DCD         |dpCurSettings|
  006e8		 |$LN18@OALBLMenuS@2|
  006e8	00000000	 DCD         |__security_cookie|
  006ec		 |$M43471|

			 ENDP  ; |OALBLMenuSetMacAddress|

	EXPORT	|??_C@_1DG@PKEFPJGM@?$AA?5?$AA?$CF?$AAs?$AA?5?$AAI?$AAP?$AA?5?$AAa?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@PNGPKAIC@?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAi?$AAs?$AAn?$AA?8?$AAt?$AA?5?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAI?$AAP?$AA?5?$AAa?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@NJNHINMH@?$AA?5?$AAE?$AAn?$AAt?$AAe?$AAr?$AA?5?$AA?$CF?$AAs?$AA?5?$AAI?$AAP?$AA?5?$AAa?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?5?$AA?$CI?$AAa?$AAc?$AAt?$AAu?$AAa?$AAl?$AA?5?$AA?$CF?$AAs?$AA?$CJ@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@LBBLODG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAB?$AAL?$AAM?$AAe?$AAn?$AAu?$AAS?$AAe?$AAt?$AAI?$AAp?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?3?$AA?5?$AAI?$AAn@| [ DATA ] ; `string'
	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|OALBLMenuSetIpAddress|
	IMPORT	|OALKitlStringToIP|
	IMPORT	|OALKitlIPtoString|

  00028			 AREA	 |.pdata|, PDATA
|$T43489| DCD	|$LN11@OALBLMenuS@3|
	DCD	0xc0005404

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@PKEFPJGM@?$AA?5?$AA?$CF?$AAs?$AA?5?$AAI?$AAP?$AA?5?$AAa?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "I", 0x0, "P", 0x0, " "
	DCB	0x0, "a", 0x0, "d", 0x0, "d", 0x0, "r", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, " ", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@PNGPKAIC@?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAi?$AAs?$AAn?$AA?8?$AAt?$AA?5?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAI?$AAP?$AA?5?$AAa?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'", 0x0, " ", 0x0, "i"
	DCB	0x0, "s", 0x0, "n", 0x0, "'", 0x0, "t", 0x0, " ", 0x0, "v"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "I"
	DCB	0x0, "P", 0x0, " ", 0x0, "a", 0x0, "d", 0x0, "d", 0x0, "r"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@NJNHINMH@?$AA?5?$AAE?$AAn?$AAt?$AAe?$AAr?$AA?5?$AA?$CF?$AAs?$AA?5?$AAI?$AAP?$AA?5?$AAa?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?5?$AA?$CI?$AAa?$AAc?$AAt?$AAu?$AAa?$AAl?$AA?5?$AA?$CF?$AAs?$AA?$CJ@| DCB " "
	DCB	0x0, "E", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "I", 0x0, "P", 0x0, " "
	DCB	0x0, "a", 0x0, "d", 0x0, "d", 0x0, "r", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, " ", 0x0, "(", 0x0, "a", 0x0, "c", 0x0, "t"
	DCB	0x0, "u", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "%", 0x0, "s"
	DCB	0x0, ")", 0x0, ":", 0x0, " ", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@LBBLODG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAB?$AAL?$AAM?$AAe?$AAn?$AAu?$AAS?$AAe?$AAt?$AAI?$AAp?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?3?$AA?5?$AAI?$AAn@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "B", 0x0, "L", 0x0, "M"
	DCB	0x0, "e", 0x0, "n", 0x0, "u", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, "I", 0x0, "p", 0x0, "A", 0x0, "d", 0x0, "d", 0x0, "r"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00004			 AREA	 |.xdata|, DATA
|$T43485| DCD	0xffffffdc
; Function compile flags: /Odtp

  006ec			 AREA	 |.text|, CODE, ARM

  006ec	00000000	 DCD         |__GSHandlerCheck|
  006f0	00000000	 DCD         |$T43485|

  006f4		 |OALBLMenuSetIpAddress| PROC

; 214  : {

  006f4		 |$LN11@OALBLMenuS@3|
  006f4	e1a0c00d	 mov         r12, sp
  006f8	e92d0001	 stmdb       sp!, {r0}
  006fc	e92d5000	 stmdb       sp!, {r12, lr}
  00700	e24dd044	 sub         sp, sp, #0x44
  00704		 |$M43486|
  00704	e59f3134	 ldr         r3, [pc, #0x134]
  00708	e5933000	 ldr         r3, [r3]
  0070c	e58d302c	 str         r3, [sp, #0x2C]

; 215  :     LPCWSTR title = pMenu->pParam1;

  00710	e59d304c	 ldr         r3, [sp, #0x4C]
  00714	e283300c	 add         r3, r3, #0xC
  00718	e5933000	 ldr         r3, [r3]
  0071c	e58d3000	 str         r3, [sp]

; 216  :     UINT32 *pIp = pMenu->pParam2;

  00720	e59d304c	 ldr         r3, [sp, #0x4C]
  00724	e2833010	 add         r3, r3, #0x10
  00728	e5933000	 ldr         r3, [r3]
  0072c	e58d3008	 str         r3, [sp, #8]

; 217  :     UINT32 ip;
; 218  :     WCHAR buffer[16];
; 219  : 
; 220  :     // First check input parameters    
; 221  :     if (title == NULL || pIp == NULL) {

  00730	e59d3000	 ldr         r3, [sp]
  00734	e3530000	 cmp         r3, #0
  00738	0a000002	 beq         |$LN3@OALBLMenuS@3|
  0073c	e59d3008	 ldr         r3, [sp, #8]
  00740	e3530000	 cmp         r3, #0
  00744	1a00000b	 bne         |$LN4@OALBLMenuS@3|
  00748		 |$LN3@OALBLMenuS@3|

; 222  :         OALMSG(OAL_ERROR, (
; 223  :             L"ERROR: OALBLMenuSetIpAddress: Invalid parameters\r\n"
; 224  :         ));

  00748	e59f30ec	 ldr         r3, [pc, #0xEC]
  0074c	e5933440	 ldr         r3, [r3, #0x440]
  00750	e3130001	 tst         r3, #1
  00754	0a000004	 beq         |$LN7@OALBLMenuS@3|
  00758	e59f00d8	 ldr         r0, [pc, #0xD8]
  0075c	eb000000	 bl          NKDbgPrintfW
  00760	e3a03001	 mov         r3, #1
  00764	e58d3030	 str         r3, [sp, #0x30]
  00768	ea000001	 b           |$LN8@OALBLMenuS@3|
  0076c		 |$LN7@OALBLMenuS@3|
  0076c	e3a03000	 mov         r3, #0
  00770	e58d3030	 str         r3, [sp, #0x30]
  00774		 |$LN8@OALBLMenuS@3|

; 225  :         goto cleanUp;

  00774	ea000027	 b           |$cleanUp$43250|
  00778		 |$LN4@OALBLMenuS@3|

; 226  :     }
; 227  : 
; 228  :     // Get actual value
; 229  :     ip = *pIp;

  00778	e59d3008	 ldr         r3, [sp, #8]
  0077c	e5933000	 ldr         r3, [r3]
  00780	e58d3004	 str         r3, [sp, #4]

; 230  : 
; 231  :     // Print prompt
; 232  :     OALLog(L" Enter %s IP address (actual %s): ", title, OALKitlIPtoString(ip));

  00784	e59d0004	 ldr         r0, [sp, #4]
  00788	eb000000	 bl          OALKitlIPtoString
  0078c	e58d0034	 str         r0, [sp, #0x34]
  00790	e59d2034	 ldr         r2, [sp, #0x34]
  00794	e59d1000	 ldr         r1, [sp]
  00798	e59f0094	 ldr         r0, [pc, #0x94]
  0079c	eb000000	 bl          NKDbgPrintfW

; 233  : 
; 234  :     // Read input line
; 235  :     if (OALBLMenuReadLine(buffer, dimof(buffer)) == 0) goto cleanUp;

  007a0	e3a01010	 mov         r1, #0x10
  007a4	e28d000c	 add         r0, sp, #0xC
  007a8	eb000000	 bl          OALBLMenuReadLine
  007ac	e58d0038	 str         r0, [sp, #0x38]
  007b0	e59d3038	 ldr         r3, [sp, #0x38]
  007b4	e3530000	 cmp         r3, #0
  007b8	1a000000	 bne         |$LN2@OALBLMenuS@3|
  007bc	ea000015	 b           |$cleanUp$43250|
  007c0		 |$LN2@OALBLMenuS@3|

; 236  : 
; 237  :     // Convert string to IP address
; 238  :     ip = OALKitlStringToIP(buffer);

  007c0	e28d000c	 add         r0, sp, #0xC
  007c4	eb000000	 bl          OALKitlStringToIP
  007c8	e58d003c	 str         r0, [sp, #0x3C]
  007cc	e59d303c	 ldr         r3, [sp, #0x3C]
  007d0	e58d3004	 str         r3, [sp, #4]

; 239  :     if (ip == 0) {

  007d4	e59d3004	 ldr         r3, [sp, #4]
  007d8	e3530000	 cmp         r3, #0
  007dc	1a000003	 bne         |$LN1@OALBLMenuS@3|

; 240  :         OALLog(L" '%s' isn't valid IP address\r\n", buffer);

  007e0	e28d100c	 add         r1, sp, #0xC
  007e4	e59f0044	 ldr         r0, [pc, #0x44]
  007e8	eb000000	 bl          NKDbgPrintfW

; 241  :         goto cleanUp;

  007ec	ea000009	 b           |$cleanUp$43250|
  007f0		 |$LN1@OALBLMenuS@3|

; 242  :     }
; 243  : 
; 244  :     // Print final IP address
; 245  :     OALLog(L" %s IP address set to %s\r\n", title, OALKitlIPtoString(ip));

  007f0	e59d0004	 ldr         r0, [sp, #4]
  007f4	eb000000	 bl          OALKitlIPtoString
  007f8	e58d0040	 str         r0, [sp, #0x40]
  007fc	e59d2040	 ldr         r2, [sp, #0x40]
  00800	e59d1000	 ldr         r1, [sp]
  00804	e59f0020	 ldr         r0, [pc, #0x20]
  00808	eb000000	 bl          NKDbgPrintfW

; 246  : 
; 247  :     // Save new setting
; 248  :     *pIp = ip;

  0080c	e59d2004	 ldr         r2, [sp, #4]
  00810	e59d3008	 ldr         r3, [sp, #8]
  00814	e5832000	 str         r2, [r3]
  00818		 |$cleanUp$43250|

; 214  : {

  00818	e59d002c	 ldr         r0, [sp, #0x2C]
  0081c	eb000000	 bl          __security_check_cookie

; 249  :     
; 250  : cleanUp:;
; 251  : }

  00820	e28dd044	 add         sp, sp, #0x44
  00824	e89d6000	 ldmia       sp, {sp, lr}
  00828	e12fff1e	 bx          lr
  0082c		 |$LN12@OALBLMenuS@3|
  0082c		 |$LN13@OALBLMenuS@3|
  0082c	00000000	 DCD         |??_C@_1DG@PKEFPJGM@?$AA?5?$AA?$CF?$AAs?$AA?5?$AAI?$AAP?$AA?5?$AAa?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00830		 |$LN14@OALBLMenuS@3|
  00830	00000000	 DCD         |??_C@_1DO@PNGPKAIC@?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAi?$AAs?$AAn?$AA?8?$AAt?$AA?5?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAI?$AAP?$AA?5?$AAa?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00834		 |$LN15@OALBLMenuS@3|
  00834	00000000	 DCD         |??_C@_1EG@NJNHINMH@?$AA?5?$AAE?$AAn?$AAt?$AAe?$AAr?$AA?5?$AA?$CF?$AAs?$AA?5?$AAI?$AAP?$AA?5?$AAa?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?5?$AA?$CI?$AAa?$AAc?$AAt?$AAu?$AAa?$AAl?$AA?5?$AA?$CF?$AAs?$AA?$CJ@|
  00838		 |$LN16@OALBLMenuS@3|
  00838	00000000	 DCD         |??_C@_1GG@LBBLODG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAB?$AAL?$AAM?$AAe?$AAn?$AAu?$AAS?$AAe?$AAt?$AAI?$AAp?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?3?$AA?5?$AAI?$AAn@|
  0083c		 |$LN17@OALBLMenuS@3|
  0083c	00000000	 DCD         |dpCurSettings|
  00840		 |$LN18@OALBLMenuS@3|
  00840	00000000	 DCD         |__security_cookie|
  00844		 |$M43487|

			 ENDP  ; |OALBLMenuSetIpAddress|

	EXPORT	|??_C@_1DA@MPGAFAD@?$AA?5?$AA?$CF?$AAs?$AA?5?$AAI?$AAP?$AA?5?$AAm?$AAa?$AAs?$AAk?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@NFENBBKL@?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAi?$AAs?$AAn?$AA?8?$AAt?$AA?5?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAI?$AAP?$AA?5?$AAm?$AAa?$AAs?$AAk?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@LJMJMOFH@?$AA?5?$AAE?$AAn?$AAt?$AAe?$AAr?$AA?5?$AA?$CF?$AAs?$AA?5?$AAI?$AAP?$AA?5?$AAm?$AAa?$AAs?$AAk?$AA?5?$AA?$CI?$AAa?$AAc?$AAt?$AAu?$AAa?$AAl?$AA?5?$AA?$CF?$AAs?$AA?$CJ?$AA?3?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@BNPDEIDO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAB?$AAL?$AAM?$AAe?$AAn?$AAu?$AAS?$AAe?$AAt?$AAI?$AAp?$AAM?$AAa?$AAs?$AAk?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl@| [ DATA ] ; `string'
	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|OALBLMenuSetIpMask|

  00030			 AREA	 |.pdata|, PDATA
|$T43505| DCD	|$LN11@OALBLMenuS@4|
	DCD	0xc0005404

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@MPGAFAD@?$AA?5?$AA?$CF?$AAs?$AA?5?$AAI?$AAP?$AA?5?$AAm?$AAa?$AAs?$AAk?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "I", 0x0, "P", 0x0, " "
	DCB	0x0, "m", 0x0, "a", 0x0, "s", 0x0, "k", 0x0, " ", 0x0, "s"
	DCB	0x0, "e", 0x0, "t", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@NFENBBKL@?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAi?$AAs?$AAn?$AA?8?$AAt?$AA?5?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAI?$AAP?$AA?5?$AAm?$AAa?$AAs?$AAk?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'", 0x0, " ", 0x0, "i"
	DCB	0x0, "s", 0x0, "n", 0x0, "'", 0x0, "t", 0x0, " ", 0x0, "v"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "I"
	DCB	0x0, "P", 0x0, " ", 0x0, "m", 0x0, "a", 0x0, "s", 0x0, "k"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@LJMJMOFH@?$AA?5?$AAE?$AAn?$AAt?$AAe?$AAr?$AA?5?$AA?$CF?$AAs?$AA?5?$AAI?$AAP?$AA?5?$AAm?$AAa?$AAs?$AAk?$AA?5?$AA?$CI?$AAa?$AAc?$AAt?$AAu?$AAa?$AAl?$AA?5?$AA?$CF?$AAs?$AA?$CJ?$AA?3?$AA?5?$AA?$AA@| DCB " "
	DCB	0x0, "E", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "I", 0x0, "P", 0x0, " "
	DCB	0x0, "m", 0x0, "a", 0x0, "s", 0x0, "k", 0x0, " ", 0x0, "("
	DCB	0x0, "a", 0x0, "c", 0x0, "t", 0x0, "u", 0x0, "a", 0x0, "l"
	DCB	0x0, " ", 0x0, "%", 0x0, "s", 0x0, ")", 0x0, ":", 0x0, " "
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@BNPDEIDO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAB?$AAL?$AAM?$AAe?$AAn?$AAu?$AAS?$AAe?$AAt?$AAI?$AAp?$AAM?$AAa?$AAs?$AAk?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "B", 0x0, "L", 0x0, "M"
	DCB	0x0, "e", 0x0, "n", 0x0, "u", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, "I", 0x0, "p", 0x0, "M", 0x0, "a", 0x0, "s", 0x0, "k"
	DCB	0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "p", 0x0, "a"
	DCB	0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00008			 AREA	 |.xdata|, DATA
|$T43501| DCD	0xffffffdc
; Function compile flags: /Odtp

  00844			 AREA	 |.text|, CODE, ARM

  00844	00000000	 DCD         |__GSHandlerCheck|
  00848	00000000	 DCD         |$T43501|

  0084c		 |OALBLMenuSetIpMask| PROC

; 256  : {

  0084c		 |$LN11@OALBLMenuS@4|
  0084c	e1a0c00d	 mov         r12, sp
  00850	e92d0001	 stmdb       sp!, {r0}
  00854	e92d5000	 stmdb       sp!, {r12, lr}
  00858	e24dd044	 sub         sp, sp, #0x44
  0085c		 |$M43502|
  0085c	e59f3134	 ldr         r3, [pc, #0x134]
  00860	e5933000	 ldr         r3, [r3]
  00864	e58d302c	 str         r3, [sp, #0x2C]

; 257  :     LPCWSTR title = pMenu->pParam1;

  00868	e59d304c	 ldr         r3, [sp, #0x4C]
  0086c	e283300c	 add         r3, r3, #0xC
  00870	e5933000	 ldr         r3, [r3]
  00874	e58d3000	 str         r3, [sp]

; 258  :     UINT32 *pIp = pMenu->pParam2;

  00878	e59d304c	 ldr         r3, [sp, #0x4C]
  0087c	e2833010	 add         r3, r3, #0x10
  00880	e5933000	 ldr         r3, [r3]
  00884	e58d3008	 str         r3, [sp, #8]

; 259  :     UINT32 ip;
; 260  :     WCHAR buffer[16];
; 261  : 
; 262  :     // First check input parameters    
; 263  :     if (title == NULL || pIp == NULL) {

  00888	e59d3000	 ldr         r3, [sp]
  0088c	e3530000	 cmp         r3, #0
  00890	0a000002	 beq         |$LN3@OALBLMenuS@4|
  00894	e59d3008	 ldr         r3, [sp, #8]
  00898	e3530000	 cmp         r3, #0
  0089c	1a00000b	 bne         |$LN4@OALBLMenuS@4|
  008a0		 |$LN3@OALBLMenuS@4|

; 264  :         OALMSG(OAL_ERROR, (
; 265  :             L"ERROR: OALBLMenuSetIpMask: Invalid parameters\r\n"
; 266  :         ));

  008a0	e59f30ec	 ldr         r3, [pc, #0xEC]
  008a4	e5933440	 ldr         r3, [r3, #0x440]
  008a8	e3130001	 tst         r3, #1
  008ac	0a000004	 beq         |$LN7@OALBLMenuS@4|
  008b0	e59f00d8	 ldr         r0, [pc, #0xD8]
  008b4	eb000000	 bl          NKDbgPrintfW
  008b8	e3a03001	 mov         r3, #1
  008bc	e58d3030	 str         r3, [sp, #0x30]
  008c0	ea000001	 b           |$LN8@OALBLMenuS@4|
  008c4		 |$LN7@OALBLMenuS@4|
  008c4	e3a03000	 mov         r3, #0
  008c8	e58d3030	 str         r3, [sp, #0x30]
  008cc		 |$LN8@OALBLMenuS@4|

; 267  :         goto cleanUp;

  008cc	ea000027	 b           |$cleanUp$43269|
  008d0		 |$LN4@OALBLMenuS@4|

; 268  :     }
; 269  : 
; 270  :     // Get actual value
; 271  :     ip = *pIp;

  008d0	e59d3008	 ldr         r3, [sp, #8]
  008d4	e5933000	 ldr         r3, [r3]
  008d8	e58d3004	 str         r3, [sp, #4]

; 272  : 
; 273  :     // Print prompt
; 274  :     OALLog(L" Enter %s IP mask (actual %s): ", title, OALKitlIPtoString(ip));

  008dc	e59d0004	 ldr         r0, [sp, #4]
  008e0	eb000000	 bl          OALKitlIPtoString
  008e4	e58d0034	 str         r0, [sp, #0x34]
  008e8	e59d2034	 ldr         r2, [sp, #0x34]
  008ec	e59d1000	 ldr         r1, [sp]
  008f0	e59f0094	 ldr         r0, [pc, #0x94]
  008f4	eb000000	 bl          NKDbgPrintfW

; 275  : 
; 276  :     // Read input line
; 277  :     if (OALBLMenuReadLine(buffer, dimof(buffer)) == 0) goto cleanUp;

  008f8	e3a01010	 mov         r1, #0x10
  008fc	e28d000c	 add         r0, sp, #0xC
  00900	eb000000	 bl          OALBLMenuReadLine
  00904	e58d0038	 str         r0, [sp, #0x38]
  00908	e59d3038	 ldr         r3, [sp, #0x38]
  0090c	e3530000	 cmp         r3, #0
  00910	1a000000	 bne         |$LN2@OALBLMenuS@4|
  00914	ea000015	 b           |$cleanUp$43269|
  00918		 |$LN2@OALBLMenuS@4|

; 278  : 
; 279  :     // Convert string to MAC address
; 280  :     ip = OALKitlStringToIP(buffer);

  00918	e28d000c	 add         r0, sp, #0xC
  0091c	eb000000	 bl          OALKitlStringToIP
  00920	e58d003c	 str         r0, [sp, #0x3C]
  00924	e59d303c	 ldr         r3, [sp, #0x3C]
  00928	e58d3004	 str         r3, [sp, #4]

; 281  :     if (ip == 0) {

  0092c	e59d3004	 ldr         r3, [sp, #4]
  00930	e3530000	 cmp         r3, #0
  00934	1a000003	 bne         |$LN1@OALBLMenuS@4|

; 282  :         OALLog(L" '%s' isn't valid IP mask\r\n", buffer);

  00938	e28d100c	 add         r1, sp, #0xC
  0093c	e59f0044	 ldr         r0, [pc, #0x44]
  00940	eb000000	 bl          NKDbgPrintfW

; 283  :         goto cleanUp;

  00944	ea000009	 b           |$cleanUp$43269|
  00948		 |$LN1@OALBLMenuS@4|

; 284  :     }
; 285  : 
; 286  :     // Print final IP mask
; 287  :     OALLog(L" %s IP mask set to %s\r\n", title, OALKitlIPtoString(ip));

  00948	e59d0004	 ldr         r0, [sp, #4]
  0094c	eb000000	 bl          OALKitlIPtoString
  00950	e58d0040	 str         r0, [sp, #0x40]
  00954	e59d2040	 ldr         r2, [sp, #0x40]
  00958	e59d1000	 ldr         r1, [sp]
  0095c	e59f0020	 ldr         r0, [pc, #0x20]
  00960	eb000000	 bl          NKDbgPrintfW

; 288  : 
; 289  :     // Save new setting
; 290  :     *pIp = ip;

  00964	e59d2004	 ldr         r2, [sp, #4]
  00968	e59d3008	 ldr         r3, [sp, #8]
  0096c	e5832000	 str         r2, [r3]
  00970		 |$cleanUp$43269|

; 256  : {

  00970	e59d002c	 ldr         r0, [sp, #0x2C]
  00974	eb000000	 bl          __security_check_cookie

; 291  :     
; 292  : cleanUp:;
; 293  : }

  00978	e28dd044	 add         sp, sp, #0x44
  0097c	e89d6000	 ldmia       sp, {sp, lr}
  00980	e12fff1e	 bx          lr
  00984		 |$LN12@OALBLMenuS@4|
  00984		 |$LN13@OALBLMenuS@4|
  00984	00000000	 DCD         |??_C@_1DA@MPGAFAD@?$AA?5?$AA?$CF?$AAs?$AA?5?$AAI?$AAP?$AA?5?$AAm?$AAa?$AAs?$AAk?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00988		 |$LN14@OALBLMenuS@4|
  00988	00000000	 DCD         |??_C@_1DI@NFENBBKL@?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAi?$AAs?$AAn?$AA?8?$AAt?$AA?5?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAI?$AAP?$AA?5?$AAm?$AAa?$AAs?$AAk?$AA?$AN?$AA?6?$AA?$AA@|
  0098c		 |$LN15@OALBLMenuS@4|
  0098c	00000000	 DCD         |??_C@_1EA@LJMJMOFH@?$AA?5?$AAE?$AAn?$AAt?$AAe?$AAr?$AA?5?$AA?$CF?$AAs?$AA?5?$AAI?$AAP?$AA?5?$AAm?$AAa?$AAs?$AAk?$AA?5?$AA?$CI?$AAa?$AAc?$AAt?$AAu?$AAa?$AAl?$AA?5?$AA?$CF?$AAs?$AA?$CJ?$AA?3?$AA?5?$AA?$AA@|
  00990		 |$LN16@OALBLMenuS@4|
  00990	00000000	 DCD         |??_C@_1GA@BNPDEIDO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAB?$AAL?$AAM?$AAe?$AAn?$AAu?$AAS?$AAe?$AAt?$AAI?$AAp?$AAM?$AAa?$AAs?$AAk?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl@|
  00994		 |$LN17@OALBLMenuS@4|
  00994	00000000	 DCD         |dpCurSettings|
  00998		 |$LN18@OALBLMenuS@4|
  00998	00000000	 DCD         |__security_cookie|
  0099c		 |$M43503|

			 ENDP  ; |OALBLMenuSetIpMask|

	EXPORT	|??_C@_1DC@OGIHKHPF@?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAI?$AAd?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AA?8?$AA?$CF?$AAS?$AA?8?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@JMGBGFEJ@?$AA?5?$AAE?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAI?$AAd?$AA?5?$AA?$CI?$AA?$CK?$AA?5?$AA?$DN?$AA?5?$AAa?$AAu?$AAt?$AAo?$AA?0?$AA?5?$AAa?$AAc?$AAt?$AAu@| [ DATA ] ; `string'
	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|OALBLMenuSetDeviceId|
	IMPORT	|memset|

  00038			 AREA	 |.pdata|, PDATA
|$T43519| DCD	|$LN11@OALBLMenuS@5|
	DCD	0xc0004c04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@OGIHKHPF@?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAI?$AAd?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AA?8?$AA?$CF?$AAS?$AA?8?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, " ", 0x0, "I", 0x0, "d", 0x0, " ", 0x0, "s", 0x0, "e"
	DCB	0x0, "t", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "'"
	DCB	0x0, "%", 0x0, "S", 0x0, "'", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@JMGBGFEJ@?$AA?5?$AAE?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAI?$AAd?$AA?5?$AA?$CI?$AA?$CK?$AA?5?$AA?$DN?$AA?5?$AAa?$AAu?$AAt?$AAo?$AA?0?$AA?5?$AAa?$AAc?$AAt?$AAu@| DCB " "
	DCB	0x0, "E", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, " ", 0x0, "I", 0x0, "d", 0x0, " ", 0x0, "(", 0x0, "*"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "a", 0x0, "u", 0x0, "t"
	DCB	0x0, "o", 0x0, ",", 0x0, " ", 0x0, "a", 0x0, "c", 0x0, "t"
	DCB	0x0, "u", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "'", 0x0, "%"
	DCB	0x0, "S", 0x0, "'", 0x0, ")", 0x0, ":", 0x0, " ", 0x0, 0x0
	DCB	0x0					; `string'

  0000c			 AREA	 |.xdata|, DATA
|$T43515| DCD	0xffffffe4
; Function compile flags: /Odtp

  0099c			 AREA	 |.text|, CODE, ARM

  0099c	00000000	 DCD         |__GSHandlerCheck|
  009a0	00000000	 DCD         |$T43515|

  009a4		 |OALBLMenuSetDeviceId| PROC

; 298  : {

  009a4		 |$LN11@OALBLMenuS@5|
  009a4	e1a0c00d	 mov         r12, sp
  009a8	e92d0001	 stmdb       sp!, {r0}
  009ac	e92d5000	 stmdb       sp!, {r12, lr}
  009b0	e24dd038	 sub         sp, sp, #0x38
  009b4		 |$M43516|
  009b4	e59f3114	 ldr         r3, [pc, #0x114]
  009b8	e5933000	 ldr         r3, [r3]
  009bc	e58d3028	 str         r3, [sp, #0x28]

; 299  :     WCHAR deviceId[OAL_KITL_ID_SIZE];
; 300  :     LPSTR pDeviceId = pMenu->pParam1;

  009c0	e59d3040	 ldr         r3, [sp, #0x40]
  009c4	e283300c	 add         r3, r3, #0xC
  009c8	e5933000	 ldr         r3, [r3]
  009cc	e58d3000	 str         r3, [sp]

; 301  :     UINT i;
; 302  : 
; 303  :     memset(deviceId, 0, sizeof(deviceId));

  009d0	e3a02020	 mov         r2, #0x20
  009d4	e3a01000	 mov         r1, #0
  009d8	e28d0008	 add         r0, sp, #8
  009dc	eb000000	 bl          memset

; 304  :     
; 305  :     OALLog(L" Enter Device Id (* = auto, actual '%S'): ", DeviceId(pDeviceId));

  009e0	e59d0000	 ldr         r0, [sp]
  009e4	eb000000	 bl          DeviceId
  009e8	e58d002c	 str         r0, [sp, #0x2C]
  009ec	e59d102c	 ldr         r1, [sp, #0x2C]
  009f0	e59f00d4	 ldr         r0, [pc, #0xD4]
  009f4	eb000000	 bl          NKDbgPrintfW

; 306  :     
; 307  :     // Read input line
; 308  :     if (OALBLMenuReadLine(deviceId, dimof(deviceId)) == 0) goto cleanUp;

  009f8	e3a01010	 mov         r1, #0x10
  009fc	e28d0008	 add         r0, sp, #8
  00a00	eb000000	 bl          OALBLMenuReadLine
  00a04	e58d0030	 str         r0, [sp, #0x30]
  00a08	e59d3030	 ldr         r3, [sp, #0x30]
  00a0c	e3530000	 cmp         r3, #0
  00a10	1a000000	 bne         |$LN6@OALBLMenuS@5|
  00a14	ea000026	 b           |$cleanUp$43283|
  00a18		 |$LN6@OALBLMenuS@5|

; 309  : 
; 310  :     // Convert unicode to one-byte character string
; 311  :     if (deviceId[0] == L'*' && deviceId[1] == L'\0') {

  00a18	e1dd30b8	 ldrh        r3, [sp, #8]
  00a1c	e353002a	 cmp         r3, #0x2A
  00a20	1a000007	 bne         |$LN5@OALBLMenuS@5|
  00a24	e1dd30ba	 ldrh        r3, [sp, #0xA]
  00a28	e3530000	 cmp         r3, #0
  00a2c	1a000004	 bne         |$LN5@OALBLMenuS@5|

; 312  :         memset(pDeviceId, 0, OAL_KITL_ID_SIZE);

  00a30	e3a02010	 mov         r2, #0x10
  00a34	e3a01000	 mov         r1, #0
  00a38	e59d0000	 ldr         r0, [sp]
  00a3c	eb000000	 bl          memset

; 313  :     } else {

  00a40	ea000015	 b           |$LN4@OALBLMenuS@5|
  00a44		 |$LN5@OALBLMenuS@5|

; 314  :         for (i = 0; i < OAL_KITL_ID_SIZE; i++) {

  00a44	e3a03000	 mov         r3, #0
  00a48	e58d3004	 str         r3, [sp, #4]
  00a4c	ea000002	 b           |$LN3@OALBLMenuS@5|
  00a50		 |$LN2@OALBLMenuS@5|
  00a50	e59d3004	 ldr         r3, [sp, #4]
  00a54	e2833001	 add         r3, r3, #1
  00a58	e58d3004	 str         r3, [sp, #4]
  00a5c		 |$LN3@OALBLMenuS@5|
  00a5c	e59d3004	 ldr         r3, [sp, #4]
  00a60	e3530010	 cmp         r3, #0x10
  00a64	2a00000c	 bcs         |$LN1@OALBLMenuS@5|

; 315  :             pDeviceId[i] = (UCHAR)deviceId[i];

  00a68	e59d1004	 ldr         r1, [sp, #4]
  00a6c	e3a03002	 mov         r3, #2
  00a70	e0020391	 mul         r2, r1, r3
  00a74	e28d3008	 add         r3, sp, #8
  00a78	e0831002	 add         r1, r3, r2
  00a7c	e59d2000	 ldr         r2, [sp]
  00a80	e59d3004	 ldr         r3, [sp, #4]
  00a84	e0822003	 add         r2, r2, r3
  00a88	e1d130b0	 ldrh        r3, [r1]
  00a8c	e1a03c03	 mov         r3, r3, lsl #24
  00a90	e1a03c43	 mov         r3, r3, asr #24
  00a94	e5c23000	 strb        r3, [r2]

; 316  :         }

  00a98	eaffffec	 b           |$LN2@OALBLMenuS@5|
  00a9c		 |$LN1@OALBLMenuS@5|
  00a9c		 |$LN4@OALBLMenuS@5|

; 317  :     }        
; 318  : 
; 319  :     OALLog(L" Device Id set to '%S'\r\n", DeviceId(pDeviceId));       

  00a9c	e59d0000	 ldr         r0, [sp]
  00aa0	eb000000	 bl          DeviceId
  00aa4	e58d0034	 str         r0, [sp, #0x34]
  00aa8	e59d1034	 ldr         r1, [sp, #0x34]
  00aac	e59f0014	 ldr         r0, [pc, #0x14]
  00ab0	eb000000	 bl          NKDbgPrintfW
  00ab4		 |$cleanUp$43283|

; 298  : {

  00ab4	e59d0028	 ldr         r0, [sp, #0x28]
  00ab8	eb000000	 bl          __security_check_cookie

; 320  :     
; 321  : cleanUp: ;
; 322  : }

  00abc	e28dd038	 add         sp, sp, #0x38
  00ac0	e89d6000	 ldmia       sp, {sp, lr}
  00ac4	e12fff1e	 bx          lr
  00ac8		 |$LN12@OALBLMenuS@5|
  00ac8		 |$LN13@OALBLMenuS@5|
  00ac8	00000000	 DCD         |??_C@_1DC@OGIHKHPF@?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAI?$AAd?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AA?8?$AA?$CF?$AAS?$AA?8?$AA?$AN?$AA?6?$AA?$AA@|
  00acc		 |$LN14@OALBLMenuS@5|
  00acc	00000000	 DCD         |??_C@_1FG@JMGBGFEJ@?$AA?5?$AAE?$AAn?$AAt?$AAe?$AAr?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAI?$AAd?$AA?5?$AA?$CI?$AA?$CK?$AA?5?$AA?$DN?$AA?5?$AAa?$AAu?$AAt?$AAo?$AA?0?$AA?5?$AAa?$AAc?$AAt?$AAu@|
  00ad0		 |$LN15@OALBLMenuS@5|
  00ad0	00000000	 DCD         |__security_cookie|
  00ad4		 |$M43517|

			 ENDP  ; |OALBLMenuSetDeviceId|

	EXPORT	|??_C@_1CO@MNGNNHKJ@?$AA?5?$AA?$CF?$AAs?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DG@FKDJCDHM@?$AA?$AN?$AA?6?$AA?5?$AAS?$AAe?$AAl?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$CI?$AAa?$AAc?$AAt?$AAu?$AAa?$AAl?$AA?5?$AA?$CF?$AAs?$AA?$CJ?$AA?3?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@KGICMHCL@?$AA?5?$AA?$FL?$AA0?$AA?$FN?$AA?5?$AAE?$AAx?$AAi?$AAt?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@LMIBJJCD@?$AA?5?$AA?$FL?$AA?$CF?$AAd?$AA?$FN?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@GHCHDPIM@?$AAS?$AAe?$AAl?$AAe?$AAc?$AAt?$AA?5?$AA?$CF?$AAs?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@GCPJEPA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAB?$AAL?$AAM?$AAe?$AAn?$AAu?$AAS?$AAe?$AAl?$AAe?$AAc?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?3?$AA?5?$AAI?$AAn@| [ DATA ] ; `string'
	EXPORT	|OALBLMenuSelectDevice|
	IMPORT	|memcpy|
	IMPORT	|OALKitlDeviceName|

  00040			 AREA	 |.pdata|, PDATA
|$T43531| DCD	|$LN20@OALBLMenuS@6|
	DCD	0x4000b004

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@MNGNNHKJ@?$AA?5?$AA?$CF?$AAs?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "s", 0x0, "e"
	DCB	0x0, "t", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "%"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@FKDJCDHM@?$AA?$AN?$AA?6?$AA?5?$AAS?$AAe?$AAl?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$CI?$AAa?$AAc?$AAt?$AAu?$AAa?$AAl?$AA?5?$AA?$CF?$AAs?$AA?$CJ?$AA?3?$AA?5?$AA?$AA@| DCB 0xd
	DCB	0x0, 0xa, 0x0, " ", 0x0, "S", 0x0, "e", 0x0, "l", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " "
	DCB	0x0, "(", 0x0, "a", 0x0, "c", 0x0, "t", 0x0, "u", 0x0, "a"
	DCB	0x0, "l", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, ")", 0x0, ":"
	DCB	0x0, " ", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@KGICMHCL@?$AA?5?$AA?$FL?$AA0?$AA?$FN?$AA?5?$AAE?$AAx?$AAi?$AAt?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "[", 0x0, "0", 0x0, "]", 0x0, " ", 0x0, "E", 0x0, "x"
	DCB	0x0, "i", 0x0, "t", 0x0, " ", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, " ", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "i"
	DCB	0x0, "n", 0x0, "u", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@LMIBJJCD@?$AA?5?$AA?$FL?$AA?$CF?$AAd?$AA?$FN?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB " "
	DCB	0x0, "[", 0x0, "%", 0x0, "d", 0x0, "]", 0x0, " ", 0x0, "%"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@GHCHDPIM@?$AAS?$AAe?$AAl?$AAe?$AAc?$AAt?$AA?5?$AA?$CF?$AAs?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$AA@| DCB "S"
	DCB	0x0, "e", 0x0, "l", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@GCPJEPA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAB?$AAL?$AAM?$AAe?$AAn?$AAu?$AAS?$AAe?$AAl?$AAe?$AAc?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?3?$AA?5?$AAI?$AAn@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "B", 0x0, "L", 0x0, "M"
	DCB	0x0, "e", 0x0, "n", 0x0, "u", 0x0, "S", 0x0, "e", 0x0, "l"
	DCB	0x0, "e", 0x0, "c", 0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  00ad4			 AREA	 |.text|, CODE, ARM

  00ad4		 |OALBLMenuSelectDevice| PROC

; 327  : {

  00ad4		 |$LN20@OALBLMenuS@6|
  00ad4	e1a0c00d	 mov         r12, sp
  00ad8	e92d0001	 stmdb       sp!, {r0}
  00adc	e92d5000	 stmdb       sp!, {r12, lr}
  00ae0	e24dd0cc	 sub         sp, sp, #0xCC
  00ae4		 |$M43528|

; 328  :     LPCWSTR title = pMenu->pParam1;

  00ae4	e59d30d4	 ldr         r3, [sp, #0xD4]
  00ae8	e283300c	 add         r3, r3, #0xC
  00aec	e5933000	 ldr         r3, [r3]
  00af0	e58d3004	 str         r3, [sp, #4]

; 329  :     DEVICE_LOCATION *pDevLoc = pMenu->pParam2;

  00af4	e59d30d4	 ldr         r3, [sp, #0xD4]
  00af8	e2833010	 add         r3, r3, #0x10
  00afc	e5933000	 ldr         r3, [r3]
  00b00	e58d3014	 str         r3, [sp, #0x14]

; 330  :     OAL_KITL_DEVICE *aDevices = pMenu->pParam3, *pDevice;

  00b04	e59d30d4	 ldr         r3, [sp, #0xD4]
  00b08	e2833014	 add         r3, r3, #0x14
  00b0c	e5933000	 ldr         r3, [r3]
  00b10	e58d300c	 str         r3, [sp, #0xC]

; 331  :     DEVICE_LOCATION devLoc[OAL_MENU_MAX_DEVICES];
; 332  :     UINT32 i;
; 333  :     WCHAR key;
; 334  : 
; 335  :     // First check input parameters    
; 336  :     if (title == NULL || pDevLoc == NULL || aDevices == NULL) {

  00b14	e59d3004	 ldr         r3, [sp, #4]
  00b18	e3530000	 cmp         r3, #0
  00b1c	0a000005	 beq         |$LN11@OALBLMenuS@6|
  00b20	e59d3014	 ldr         r3, [sp, #0x14]
  00b24	e3530000	 cmp         r3, #0
  00b28	0a000002	 beq         |$LN11@OALBLMenuS@6|
  00b2c	e59d300c	 ldr         r3, [sp, #0xC]
  00b30	e3530000	 cmp         r3, #0
  00b34	1a00000b	 bne         |$LN12@OALBLMenuS@6|
  00b38		 |$LN11@OALBLMenuS@6|

; 337  :         OALMSG(OAL_ERROR, (
; 338  :             L"ERROR: OALBLMenuSelectDevice: Invalid parameters\r\n"
; 339  :         ));

  00b38	e59f3250	 ldr         r3, [pc, #0x250]
  00b3c	e5933440	 ldr         r3, [r3, #0x440]
  00b40	e3130001	 tst         r3, #1
  00b44	0a000004	 beq         |$LN15@OALBLMenuS@6|
  00b48	e59f023c	 ldr         r0, [pc, #0x23C]
  00b4c	eb000000	 bl          NKDbgPrintfW
  00b50	e3a03001	 mov         r3, #1
  00b54	e58d30b8	 str         r3, [sp, #0xB8]
  00b58	ea000001	 b           |$LN16@OALBLMenuS@6|
  00b5c		 |$LN15@OALBLMenuS@6|
  00b5c	e3a03000	 mov         r3, #0
  00b60	e58d30b8	 str         r3, [sp, #0xB8]
  00b64		 |$LN16@OALBLMenuS@6|

; 340  :         goto cleanUp;

  00b64	ea00007f	 b           |$cleanUp$43308|
  00b68		 |$LN12@OALBLMenuS@6|

; 341  :     }
; 342  : 
; 343  :     OALBLMenuHeader(L"Select %s Device", title);

  00b68	e59d1004	 ldr         r1, [sp, #4]
  00b6c	e59f0214	 ldr         r0, [pc, #0x214]
  00b70	eb000000	 bl          OALBLMenuHeader

; 344  : 
; 345  :     i = 0;

  00b74	e3a03000	 mov         r3, #0
  00b78	e58d3008	 str         r3, [sp, #8]

; 346  :     pDevice = aDevices;

  00b7c	e59d300c	 ldr         r3, [sp, #0xC]
  00b80	e58d3000	 str         r3, [sp]
  00b84		 |$LN10@OALBLMenuS@6|

; 347  :     while (pDevice->name != NULL && i < OAL_MENU_MAX_DEVICES) {

  00b84	e59d3000	 ldr         r3, [sp]
  00b88	e5933000	 ldr         r3, [r3]
  00b8c	e3530000	 cmp         r3, #0
  00b90	0a000043	 beq         |$LN9@OALBLMenuS@6|
  00b94	e59d3008	 ldr         r3, [sp, #8]
  00b98	e3530008	 cmp         r3, #8
  00b9c	2a000040	 bcs         |$LN9@OALBLMenuS@6|

; 348  :         switch (pDevice->ifcType) {

  00ba0	e59d3000	 ldr         r3, [sp]
  00ba4	e2833004	 add         r3, r3, #4
  00ba8	e5933000	 ldr         r3, [r3]
  00bac	e3530000	 cmp         r3, #0
  00bb0	0a000000	 beq         |$LN6@OALBLMenuS@6|
  00bb4	ea000036	 b           |$LN5@OALBLMenuS@6|
  00bb8		 |$LN6@OALBLMenuS@6|

; 349  :         case Internal:
; 350  :             devLoc[i].IfcType = pDevice->ifcType;

  00bb8	e59d3000	 ldr         r3, [sp]
  00bbc	e2830004	 add         r0, r3, #4
  00bc0	e59d1008	 ldr         r1, [sp, #8]
  00bc4	e3a03014	 mov         r3, #0x14
  00bc8	e0020391	 mul         r2, r1, r3
  00bcc	e28d3018	 add         r3, sp, #0x18
  00bd0	e0832002	 add         r2, r3, r2
  00bd4	e5903000	 ldr         r3, [r0]
  00bd8	e5823000	 str         r3, [r2]

; 351  :             devLoc[i].BusNumber = 0;

  00bdc	e59d1008	 ldr         r1, [sp, #8]
  00be0	e3a03014	 mov         r3, #0x14
  00be4	e0020391	 mul         r2, r1, r3
  00be8	e28d3018	 add         r3, sp, #0x18
  00bec	e0833002	 add         r3, r3, r2
  00bf0	e2832004	 add         r2, r3, #4
  00bf4	e3a03000	 mov         r3, #0
  00bf8	e5823000	 str         r3, [r2]

; 352  :             devLoc[i].LogicalLoc = pDevice->id;

  00bfc	e59d3000	 ldr         r3, [sp]
  00c00	e2830008	 add         r0, r3, #8
  00c04	e59d1008	 ldr         r1, [sp, #8]
  00c08	e3a03014	 mov         r3, #0x14
  00c0c	e0020391	 mul         r2, r1, r3
  00c10	e28d3018	 add         r3, sp, #0x18
  00c14	e0833002	 add         r3, r3, r2
  00c18	e2832008	 add         r2, r3, #8
  00c1c	e5903000	 ldr         r3, [r0]
  00c20	e5823000	 str         r3, [r2]

; 353  :             devLoc[i].PhysicalLoc = 0;

  00c24	e59d1008	 ldr         r1, [sp, #8]
  00c28	e3a03014	 mov         r3, #0x14
  00c2c	e0020391	 mul         r2, r1, r3
  00c30	e28d3018	 add         r3, sp, #0x18
  00c34	e0833002	 add         r3, r3, r2
  00c38	e283200c	 add         r2, r3, #0xC
  00c3c	e3a03000	 mov         r3, #0
  00c40	e5823000	 str         r3, [r2]

; 354  :             OALLog(
; 355  :                 L" [%d] %s\r\n", i + 1, OALKitlDeviceName(&devLoc[i], aDevices)
; 356  :             );

  00c44	e59d100c	 ldr         r1, [sp, #0xC]
  00c48	e59d0008	 ldr         r0, [sp, #8]
  00c4c	e3a03014	 mov         r3, #0x14
  00c50	e0020390	 mul         r2, r0, r3
  00c54	e28d3018	 add         r3, sp, #0x18
  00c58	e0830002	 add         r0, r3, r2
  00c5c	eb000000	 bl          OALKitlDeviceName
  00c60	e58d00bc	 str         r0, [sp, #0xBC]
  00c64	e59d20bc	 ldr         r2, [sp, #0xBC]
  00c68	e59d3008	 ldr         r3, [sp, #8]
  00c6c	e2831001	 add         r1, r3, #1
  00c70	e59f010c	 ldr         r0, [pc, #0x10C]
  00c74	eb000000	 bl          NKDbgPrintfW

; 357  :             i++;

  00c78	e59d3008	 ldr         r3, [sp, #8]
  00c7c	e2833001	 add         r3, r3, #1
  00c80	e58d3008	 str         r3, [sp, #8]

; 358  :             pDevice++;

  00c84	e59d3000	 ldr         r3, [sp]
  00c88	e2833018	 add         r3, r3, #0x18
  00c8c	e58d3000	 str         r3, [sp]

; 359  :             break;

  00c90	ea000002	 b           |$LN7@OALBLMenuS@6|
  00c94		 |$LN5@OALBLMenuS@6|

; 360  : #ifdef OAL_BLMENU_PCI
; 361  :         case PCIBus:
; 362  :             {
; 363  :                 OAL_PCI_LOCATION pciLoc;
; 364  : 
; 365  :                 pciLoc.logicalLoc = 0;
; 366  :                 while (i < OAL_MENU_MAX_DEVICES) {
; 367  :                     if (!OALPCIFindNextId(0, pDevice->id, &pciLoc)) break;
; 368  :                     devLoc[i].IfcType = pDevice->ifcType;
; 369  :                     devLoc[i].BusNumber = 0;
; 370  :                     devLoc[i].LogicalLoc = pciLoc.logicalLoc;
; 371  :                     devLoc[i].PhysicalLoc = 0;
; 372  :                     OALLog(
; 373  :                         L" [%d] %s\r\n", i + 1, 
; 374  :                         OALKitlDeviceName(&devLoc[i], aDevices)
; 375  :                     );
; 376  :                     i++;
; 377  :                 }
; 378  :                 pDevice++;
; 379  :             }
; 380  :             break;
; 381  : #endif
; 382  :         default:
; 383  :             pDevice++;

  00c94	e59d3000	 ldr         r3, [sp]
  00c98	e2833018	 add         r3, r3, #0x18
  00c9c	e58d3000	 str         r3, [sp]
  00ca0		 |$LN7@OALBLMenuS@6|

; 384  :             break;
; 385  :         }        
; 386  :     }    

  00ca0	eaffffb7	 b           |$LN10@OALBLMenuS@6|
  00ca4		 |$LN9@OALBLMenuS@6|

; 387  :     OALLog(L" [0] Exit and Continue\r\n");

  00ca4	e59f00d4	 ldr         r0, [pc, #0xD4]
  00ca8	eb000000	 bl          NKDbgPrintfW

; 388  : 
; 389  :     OALLog(
; 390  :         L"\r\n Selection (actual %s): ", OALKitlDeviceName(pDevLoc, aDevices)
; 391  :     );

  00cac	e59d100c	 ldr         r1, [sp, #0xC]
  00cb0	e59d0014	 ldr         r0, [sp, #0x14]
  00cb4	eb000000	 bl          OALKitlDeviceName
  00cb8	e58d00c0	 str         r0, [sp, #0xC0]
  00cbc	e59d10c0	 ldr         r1, [sp, #0xC0]
  00cc0	e59f00b4	 ldr         r0, [pc, #0xB4]
  00cc4	eb000000	 bl          NKDbgPrintfW
  00cc8		 |$LN17@OALBLMenuS@6|
  00cc8		 |$LN4@OALBLMenuS@6|

; 392  : 
; 393  :     do {
; 394  :         key = OALBLMenuReadKey(TRUE);

  00cc8	e3a00001	 mov         r0, #1
  00ccc	eb000000	 bl          OALBLMenuReadKey
  00cd0	e1a03800	 mov         r3, r0, lsl #16
  00cd4	e1a03823	 mov         r3, r3, lsr #16
  00cd8	e1cd3cb4	 strh        r3, [sp, #0xC4]
  00cdc	e1dd3cb4	 ldrh        r3, [sp, #0xC4]
  00ce0	e1cd31b0	 strh        r3, [sp, #0x10]

; 395  :     } while (key < L'0' || key > L'0' + i);

  00ce4	e1dd31b0	 ldrh        r3, [sp, #0x10]
  00ce8	e3530030	 cmp         r3, #0x30
  00cec	bafffff5	 blt         |$LN4@OALBLMenuS@6|
  00cf0	e1dd21b0	 ldrh        r2, [sp, #0x10]
  00cf4	e59d3008	 ldr         r3, [sp, #8]
  00cf8	e2833030	 add         r3, r3, #0x30
  00cfc	e1520003	 cmp         r2, r3
  00d00	8afffff0	 bhi         |$LN17@OALBLMenuS@6|

; 396  :     OALLog(L"%c\r\n", key);

  00d04	e1dd11b0	 ldrh        r1, [sp, #0x10]
  00d08	e59f0068	 ldr         r0, [pc, #0x68]
  00d0c	eb000000	 bl          NKDbgPrintfW

; 397  : 
; 398  :     // If user select exit don't change device
; 399  :     if (key == L'0') goto cleanUp;

  00d10	e1dd31b0	 ldrh        r3, [sp, #0x10]
  00d14	e3530030	 cmp         r3, #0x30
  00d18	1a000000	 bne         |$LN1@OALBLMenuS@6|
  00d1c	ea000011	 b           |$cleanUp$43308|
  00d20		 |$LN1@OALBLMenuS@6|

; 400  :     
; 401  :     memcpy(pDevLoc, &devLoc[key - L'0' - 1], sizeof(DEVICE_LOCATION));

  00d20	e3a02014	 mov         r2, #0x14
  00d24	e1dd31b0	 ldrh        r3, [sp, #0x10]
  00d28	e2433030	 sub         r3, r3, #0x30
  00d2c	e2430001	 sub         r0, r3, #1
  00d30	e3a03014	 mov         r3, #0x14
  00d34	e0010390	 mul         r1, r0, r3
  00d38	e28d3018	 add         r3, sp, #0x18
  00d3c	e0831001	 add         r1, r3, r1
  00d40	e59d0014	 ldr         r0, [sp, #0x14]
  00d44	eb000000	 bl          memcpy

; 402  :     OALLog(
; 403  :         L" %s device set to %s\r\n", title, OALKitlDeviceName(pDevLoc, aDevices)
; 404  :     );

  00d48	e59d100c	 ldr         r1, [sp, #0xC]
  00d4c	e59d0014	 ldr         r0, [sp, #0x14]
  00d50	eb000000	 bl          OALKitlDeviceName
  00d54	e58d00c8	 str         r0, [sp, #0xC8]
  00d58	e59d20c8	 ldr         r2, [sp, #0xC8]
  00d5c	e59d1004	 ldr         r1, [sp, #4]
  00d60	e59f000c	 ldr         r0, [pc, #0xC]
  00d64	eb000000	 bl          NKDbgPrintfW
  00d68		 |$cleanUp$43308|

; 405  : 
; 406  : cleanUp:;    
; 407  : }

  00d68	e28dd0cc	 add         sp, sp, #0xCC
  00d6c	e89d6000	 ldmia       sp, {sp, lr}
  00d70	e12fff1e	 bx          lr
  00d74		 |$LN21@OALBLMenuS@6|
  00d74		 |$LN22@OALBLMenuS@6|
  00d74	00000000	 DCD         |??_C@_1CO@MNGNNHKJ@?$AA?5?$AA?$CF?$AAs?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00d78		 |$LN23@OALBLMenuS@6|
  00d78	00000000	 DCD         |??_C@_19DIEGALPP@?$AA?$CF?$AAc?$AA?$AN?$AA?6?$AA?$AA@|
  00d7c		 |$LN24@OALBLMenuS@6|
  00d7c	00000000	 DCD         |??_C@_1DG@FKDJCDHM@?$AA?$AN?$AA?6?$AA?5?$AAS?$AAe?$AAl?$AAe?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?5?$AA?$CI?$AAa?$AAc?$AAt?$AAu?$AAa?$AAl?$AA?5?$AA?$CF?$AAs?$AA?$CJ?$AA?3?$AA?5?$AA?$AA@|
  00d80		 |$LN25@OALBLMenuS@6|
  00d80	00000000	 DCD         |??_C@_1DC@KGICMHCL@?$AA?5?$AA?$FL?$AA0?$AA?$FN?$AA?5?$AAE?$AAx?$AAi?$AAt?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAi?$AAn?$AAu?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  00d84		 |$LN26@OALBLMenuS@6|
  00d84	00000000	 DCD         |??_C@_1BG@LMIBJJCD@?$AA?5?$AA?$FL?$AA?$CF?$AAd?$AA?$FN?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00d88		 |$LN27@OALBLMenuS@6|
  00d88	00000000	 DCD         |??_C@_1CC@GHCHDPIM@?$AAS?$AAe?$AAl?$AAe?$AAc?$AAt?$AA?5?$AA?$CF?$AAs?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$AA@|
  00d8c		 |$LN28@OALBLMenuS@6|
  00d8c	00000000	 DCD         |??_C@_1GG@GCPJEPA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAB?$AAL?$AAM?$AAe?$AAn?$AAu?$AAS?$AAe?$AAl?$AAe?$AAc?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?3?$AA?5?$AAI?$AAn@|
  00d90		 |$LN29@OALBLMenuS@6|
  00d90	00000000	 DCD         |dpCurSettings|
  00d94		 |$M43529|

			 ENDP  ; |OALBLMenuSelectDevice|

	EXPORT	|??_C@_15DAMPJCDE@?$AA?$CF?$AAc?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_17ILCABGPK@?$AA?$AI?$AA?5?$AA?$AI?$AA?$AA@| [ DATA ] ; `string'

  00048			 AREA	 |.pdata|, PDATA
|$T43546| DCD	|$LN12@OALBLMenuR|
	DCD	0x40004f04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_15DAMPJCDE@?$AA?$CF?$AAc?$AA?$AA@| DCB "%", 0x0, "c", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17ILCABGPK@?$AA?$AI?$AA?5?$AA?$AI?$AA?$AA@| DCB 0x8, 0x0, " ", 0x0
	DCB	0x8, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  00d94			 AREA	 |.text|, CODE, ARM

  00d94		 |OALBLMenuReadLine| PROC

; 412  : {

  00d94		 |$LN12@OALBLMenuR|
  00d94	e1a0c00d	 mov         r12, sp
  00d98	e92d0003	 stmdb       sp!, {r0, r1}
  00d9c	e92d5000	 stmdb       sp!, {r12, lr}
  00da0	e24dd010	 sub         sp, sp, #0x10
  00da4		 |$M43543|

; 413  :     UINT32 count;
; 414  :     WCHAR key;
; 415  :     
; 416  :     count = 0;

  00da4	e3a03000	 mov         r3, #0
  00da8	e58d3000	 str         r3, [sp]
  00dac		 |$LN7@OALBLMenuR|

; 417  :     while (count < CharCount) {

  00dac	e59d2000	 ldr         r2, [sp]
  00db0	e59d301c	 ldr         r3, [sp, #0x1C]
  00db4	e1520003	 cmp         r2, r3
  00db8	2a000034	 bcs         |$LN6@OALBLMenuR|

; 418  :         key = OALBLMenuReadKey(TRUE);

  00dbc	e3a00001	 mov         r0, #1
  00dc0	eb000000	 bl          OALBLMenuReadKey
  00dc4	e1a03800	 mov         r3, r0, lsl #16
  00dc8	e1a03823	 mov         r3, r3, lsr #16
  00dcc	e1cd30bc	 strh        r3, [sp, #0xC]
  00dd0	e1dd30bc	 ldrh        r3, [sp, #0xC]
  00dd4	e1cd30b4	 strh        r3, [sp, #4]

; 419  :        if (key == L'\r' || key == L'\n') {

  00dd8	e1dd30b4	 ldrh        r3, [sp, #4]
  00ddc	e353000d	 cmp         r3, #0xD
  00de0	0a000002	 beq         |$LN4@OALBLMenuR|
  00de4	e1dd30b4	 ldrh        r3, [sp, #4]
  00de8	e353000a	 cmp         r3, #0xA
  00dec	1a000002	 bne         |$LN5@OALBLMenuR|
  00df0		 |$LN4@OALBLMenuR|

; 420  :           OALLog(L"\r\n");

  00df0	e59f00d4	 ldr         r0, [pc, #0xD4]
  00df4	eb000000	 bl          NKDbgPrintfW

; 421  :           break;

  00df8	ea000024	 b           |$LN6@OALBLMenuR|
  00dfc		 |$LN5@OALBLMenuR|

; 422  :        } if (key == L'\b' && count > 0) {

  00dfc	e1dd30b4	 ldrh        r3, [sp, #4]
  00e00	e3530008	 cmp         r3, #8
  00e04	1a000008	 bne         |$LN3@OALBLMenuR|
  00e08	e59d3000	 ldr         r3, [sp]
  00e0c	e3530000	 cmp         r3, #0
  00e10	9a000005	 bls         |$LN3@OALBLMenuR|

; 423  :           OALLog(L"\b \b");

  00e14	e59f00ac	 ldr         r0, [pc, #0xAC]
  00e18	eb000000	 bl          NKDbgPrintfW

; 424  :           count--;

  00e1c	e59d3000	 ldr         r3, [sp]
  00e20	e2433001	 sub         r3, r3, #1
  00e24	e58d3000	 str         r3, [sp]
  00e28	ea000017	 b           |$LN2@OALBLMenuR|
  00e2c		 |$LN3@OALBLMenuR|

; 425  :        } else if (key >= L' ' && key < 128 && count < (CharCount - 1)) {

  00e2c	e1dd30b4	 ldrh        r3, [sp, #4]
  00e30	e3530020	 cmp         r3, #0x20
  00e34	ba000014	 blt         |$LN1@OALBLMenuR|
  00e38	e1dd30b4	 ldrh        r3, [sp, #4]
  00e3c	e3530080	 cmp         r3, #0x80
  00e40	aa000011	 bge         |$LN1@OALBLMenuR|
  00e44	e59d301c	 ldr         r3, [sp, #0x1C]
  00e48	e2432001	 sub         r2, r3, #1
  00e4c	e59d3000	 ldr         r3, [sp]
  00e50	e1530002	 cmp         r3, r2
  00e54	2a00000c	 bcs         |$LN1@OALBLMenuR|

; 426  :           szBuffer[count++] = key;

  00e58	e59d1000	 ldr         r1, [sp]
  00e5c	e3a03002	 mov         r3, #2
  00e60	e0020391	 mul         r2, r1, r3
  00e64	e59d3018	 ldr         r3, [sp, #0x18]
  00e68	e0832002	 add         r2, r3, r2
  00e6c	e1dd30b4	 ldrh        r3, [sp, #4]
  00e70	e1c230b0	 strh        r3, [r2]
  00e74	e59d3000	 ldr         r3, [sp]
  00e78	e2833001	 add         r3, r3, #1
  00e7c	e58d3000	 str         r3, [sp]

; 427  :           OALLog(L"%c", key);

  00e80	e1dd10b4	 ldrh        r1, [sp, #4]
  00e84	e59f0038	 ldr         r0, [pc, #0x38]
  00e88	eb000000	 bl          NKDbgPrintfW
  00e8c		 |$LN1@OALBLMenuR|
  00e8c		 |$LN2@OALBLMenuR|

; 428  :        } 
; 429  :     }

  00e8c	eaffffc6	 b           |$LN7@OALBLMenuR|
  00e90		 |$LN6@OALBLMenuR|

; 430  :     szBuffer[count] = '\0';

  00e90	e59d1000	 ldr         r1, [sp]
  00e94	e3a03002	 mov         r3, #2
  00e98	e0020391	 mul         r2, r1, r3
  00e9c	e59d3018	 ldr         r3, [sp, #0x18]
  00ea0	e0832002	 add         r2, r3, r2
  00ea4	e3a03000	 mov         r3, #0
  00ea8	e1c230b0	 strh        r3, [r2]

; 431  :     return count;

  00eac	e59d3000	 ldr         r3, [sp]
  00eb0	e58d3008	 str         r3, [sp, #8]

; 432  :     
; 433  : }

  00eb4	e59d0008	 ldr         r0, [sp, #8]
  00eb8	e28dd010	 add         sp, sp, #0x10
  00ebc	e89d6000	 ldmia       sp, {sp, lr}
  00ec0	e12fff1e	 bx          lr
  00ec4		 |$LN13@OALBLMenuR|
  00ec4		 |$LN14@OALBLMenuR|
  00ec4	00000000	 DCD         |??_C@_15DAMPJCDE@?$AA?$CF?$AAc?$AA?$AA@|
  00ec8		 |$LN15@OALBLMenuR|
  00ec8	00000000	 DCD         |??_C@_17ILCABGPK@?$AA?$AI?$AA?5?$AA?$AI?$AA?$AA@|
  00ecc		 |$LN16@OALBLMenuR|
  00ecc	00000000	 DCD         |??_C@_15JNBOKNOG@?$AA?$AN?$AA?6?$AA?$AA@|
  00ed0		 |$M43544|

			 ENDP  ; |OALBLMenuReadLine|

	IMPORT	|OEMReadDebugByte|

  00050			 AREA	 |.pdata|, PDATA
|$T43556| DCD	|$LN8@OALBLMenuR@2|
	DCD	0x40001e04
; Function compile flags: /Odtp

  00ed0			 AREA	 |.text|, CODE, ARM

  00ed0		 |OALBLMenuReadKey| PROC

; 438  : {

  00ed0		 |$LN8@OALBLMenuR@2|
  00ed0	e1a0c00d	 mov         r12, sp
  00ed4	e92d0001	 stmdb       sp!, {r0}
  00ed8	e92d5000	 stmdb       sp!, {r12, lr}
  00edc	e24dd00c	 sub         sp, sp, #0xC
  00ee0		 |$M43553|
  00ee0		 |$LN3@OALBLMenuR@2|

; 439  :     CHAR key;
; 440  : 
; 441  :     while ((key = OEMReadDebugByte()) == OEM_DEBUG_READ_NODATA && wait);

  00ee0	eb000000	 bl          OEMReadDebugByte
  00ee4	e58d0008	 str         r0, [sp, #8]
  00ee8	e59d3008	 ldr         r3, [sp, #8]
  00eec	e1a03c03	 mov         r3, r3, lsl #24
  00ef0	e1a03c43	 mov         r3, r3, asr #24
  00ef4	e5cd3000	 strb        r3, [sp]
  00ef8	e1dd30d0	 ldrsb       r3, [sp]
  00efc	e3730001	 cmn         r3, #1
  00f00	1a000003	 bne         |$LN2@OALBLMenuR@2|
  00f04	e59d3014	 ldr         r3, [sp, #0x14]
  00f08	e3530000	 cmp         r3, #0
  00f0c	0a000000	 beq         |$LN2@OALBLMenuR@2|
  00f10	eafffff2	 b           |$LN3@OALBLMenuR@2|
  00f14		 |$LN2@OALBLMenuR@2|

; 442  :     if (key == OEM_DEBUG_READ_NODATA) key = 0;

  00f14	e1dd30d0	 ldrsb       r3, [sp]
  00f18	e3730001	 cmn         r3, #1
  00f1c	1a000001	 bne         |$LN1@OALBLMenuR@2|
  00f20	e3a03000	 mov         r3, #0
  00f24	e5cd3000	 strb        r3, [sp]
  00f28		 |$LN1@OALBLMenuR@2|

; 443  :     return (WCHAR)key;

  00f28	e1dd30d0	 ldrsb       r3, [sp]
  00f2c	e1a03803	 mov         r3, r3, lsl #16
  00f30	e1a03823	 mov         r3, r3, lsr #16
  00f34	e1cd30b4	 strh        r3, [sp, #4]

; 444  : }

  00f38	e1dd00b4	 ldrh        r0, [sp, #4]
  00f3c	e28dd00c	 add         sp, sp, #0xC
  00f40	e89d6000	 ldmia       sp, {sp, lr}
  00f44	e12fff1e	 bx          lr
  00f48		 |$M43554|

			 ENDP  ; |OALBLMenuReadKey|

	EXPORT	|??_C@_0N@LKBAFPFA@?$CK?$CK?$CK?5auto?5?$CK?$CK?$CK?$AA@| [ DATA ] ; `string'

  00058			 AREA	 |.pdata|, PDATA
|$T43564| DCD	|$LN7@DeviceId|
	DCD	0x40001404

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0N@LKBAFPFA@?$CK?$CK?$CK?5auto?5?$CK?$CK?$CK?$AA@| DCB "*** auto *"
	DCB	"**", 0x0				; `string'
; Function compile flags: /Odtp

  00f48			 AREA	 |.text|, CODE, ARM

  00f48		 |DeviceId| PROC

; 449  : {

  00f48		 |$LN7@DeviceId|
  00f48	e1a0c00d	 mov         r12, sp
  00f4c	e92d0001	 stmdb       sp!, {r0}
  00f50	e92d5000	 stmdb       sp!, {r12, lr}
  00f54	e24dd008	 sub         sp, sp, #8
  00f58		 |$M43561|

; 450  :     return deviceId[0] == '\0' ? "*** auto ***" : deviceId;

  00f58	e59d3010	 ldr         r3, [sp, #0x10]
  00f5c	e1d330d0	 ldrsb       r3, [r3]
  00f60	e3530000	 cmp         r3, #0
  00f64	1a000002	 bne         |$LN3@DeviceId|
  00f68	e59f3024	 ldr         r3, [pc, #0x24]
  00f6c	e58d3004	 str         r3, [sp, #4]
  00f70	ea000001	 b           |$LN4@DeviceId|
  00f74		 |$LN3@DeviceId|
  00f74	e59d3010	 ldr         r3, [sp, #0x10]
  00f78	e58d3004	 str         r3, [sp, #4]
  00f7c		 |$LN4@DeviceId|
  00f7c	e59d3004	 ldr         r3, [sp, #4]
  00f80	e58d3000	 str         r3, [sp]

; 451  : }

  00f84	e59d0000	 ldr         r0, [sp]
  00f88	e28dd008	 add         sp, sp, #8
  00f8c	e89d6000	 ldmia       sp, {sp, lr}
  00f90	e12fff1e	 bx          lr
  00f94		 |$LN8@DeviceId|
  00f94		 |$LN9@DeviceId|
  00f94	00000000	 DCD         |??_C@_0N@LKBAFPFA@?$CK?$CK?$CK?5auto?5?$CK?$CK?$CK?$AA@|
  00f98		 |$M43562|

			 ENDP  ; |DeviceId|

	END
