; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\COMMON\BOOT\BLCOMMON\format.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.data|, DATA
	 COMMON	|szSprintf|, 0x4

	EXPORT	|KITLOutputDebugString|

  00000			 AREA	 |.pdata|, PDATA
|$T39564| DCD	|$LN30@KITLOutput|
	DCD	0x4000b804
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\common\boot\blcommon\format.c

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |KITLOutputDebugString| PROC

; 53   : {

  00000		 |$LN30@KITLOutput|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd014	 sub         sp, sp, #0x14
  00010		 |$M39561|

; 54   :     unsigned char    c;
; 55   :     va_list         vl;
; 56   :     
; 57   :     va_start(vl, sz);

  00010	e28d301c	 add         r3, sp, #0x1C
  00014	e2833004	 add         r3, r3, #4
  00018	e58d3000	 str         r3, [sp]
  0001c		 |$LN22@KITLOutput|

; 58   :     
; 59   :     while (*sz) {

  0001c	e59d301c	 ldr         r3, [sp, #0x1C]
  00020	e1d330d0	 ldrsb       r3, [r3]
  00024	e3530000	 cmp         r3, #0
  00028	0a0000a7	 beq         |$LN21@KITLOutput|

; 60   :         c = *sz++;

  0002c	e59d301c	 ldr         r3, [sp, #0x1C]
  00030	e1d330d0	 ldrsb       r3, [r3]
  00034	e20330ff	 and         r3, r3, #0xFF
  00038	e5cd3004	 strb        r3, [sp, #4]
  0003c	e59d301c	 ldr         r3, [sp, #0x1C]
  00040	e2833001	 add         r3, r3, #1
  00044	e58d301c	 str         r3, [sp, #0x1C]

; 61   :         switch (c) {

  00048	e5dd3004	 ldrb        r3, [sp, #4]
  0004c	e58d300c	 str         r3, [sp, #0xC]
  00050	e59d300c	 ldr         r3, [sp, #0xC]
  00054	e353000a	 cmp         r3, #0xA
  00058	0a000096	 beq         |$LN2@KITLOutput|
  0005c	e59d300c	 ldr         r3, [sp, #0xC]
  00060	e353000d	 cmp         r3, #0xD
  00064	0a00008a	 beq         |$LN4@KITLOutput|
  00068	e59d300c	 ldr         r3, [sp, #0xC]
  0006c	e3530025	 cmp         r3, #0x25
  00070	0a000000	 beq         |$LN18@KITLOutput|
  00074	ea000091	 b           |$LN1@KITLOutput|
  00078		 |$LN18@KITLOutput|

; 62   :         case '%':
; 63   :             c = *sz++;

  00078	e59d301c	 ldr         r3, [sp, #0x1C]
  0007c	e1d330d0	 ldrsb       r3, [r3]
  00080	e20330ff	 and         r3, r3, #0xFF
  00084	e5cd3004	 strb        r3, [sp, #4]
  00088	e59d301c	 ldr         r3, [sp, #0x1C]
  0008c	e2833001	 add         r3, r3, #1
  00090	e58d301c	 str         r3, [sp, #0x1C]

; 64   :             switch (c) { 

  00094	e5dd3004	 ldrb        r3, [sp, #4]
  00098	e58d3010	 str         r3, [sp, #0x10]
  0009c	e59d3010	 ldr         r3, [sp, #0x10]
  000a0	e3530063	 cmp         r3, #0x63
  000a4	ca000013	 bgt         |$LN25@KITLOutput|
  000a8	e59d3010	 ldr         r3, [sp, #0x10]
  000ac	e3530063	 cmp         r3, #0x63
  000b0	0a00006a	 beq         |$LN6@KITLOutput|
  000b4	e59d3010	 ldr         r3, [sp, #0x10]
  000b8	e3530048	 cmp         r3, #0x48
  000bc	ca000009	 bgt         |$LN26@KITLOutput|
  000c0	e59d3010	 ldr         r3, [sp, #0x10]
  000c4	e3530048	 cmp         r3, #0x48
  000c8	0a00002d	 beq         |$LN13@KITLOutput|
  000cc	e59d3010	 ldr         r3, [sp, #0x10]
  000d0	e3530025	 cmp         r3, #0x25
  000d4	0a00005e	 beq         |$LN7@KITLOutput|
  000d8	e59d3010	 ldr         r3, [sp, #0x10]
  000dc	e3530042	 cmp         r3, #0x42
  000e0	0a00001e	 beq         |$LN14@KITLOutput|
  000e4	ea000067	 b           |$LN5@KITLOutput|
  000e8		 |$LN26@KITLOutput|
  000e8	e59d3010	 ldr         r3, [sp, #0x10]
  000ec	e3530058	 cmp         r3, #0x58
  000f0	0a00002c	 beq         |$LN12@KITLOutput|
  000f4	ea000063	 b           |$LN5@KITLOutput|
  000f8		 |$LN25@KITLOutput|
  000f8	e59d3010	 ldr         r3, [sp, #0x10]
  000fc	e3530075	 cmp         r3, #0x75
  00100	ca000009	 bgt         |$LN27@KITLOutput|
  00104	e59d3010	 ldr         r3, [sp, #0x10]
  00108	e3530075	 cmp         r3, #0x75
  0010c	0a000040	 beq         |$LN9@KITLOutput|
  00110	e59d3010	 ldr         r3, [sp, #0x10]
  00114	e3530064	 cmp         r3, #0x64
  00118	0a00002b	 beq         |$LN11@KITLOutput|
  0011c	e59d3010	 ldr         r3, [sp, #0x10]
  00120	e3530073	 cmp         r3, #0x73
  00124	0a000042	 beq         |$LN8@KITLOutput|
  00128	ea000056	 b           |$LN5@KITLOutput|
  0012c		 |$LN27@KITLOutput|
  0012c	e59d3010	 ldr         r3, [sp, #0x10]
  00130	e3530078	 cmp         r3, #0x78
  00134	0a000000	 beq         |$LN15@KITLOutput|
  00138	ea000052	 b           |$LN5@KITLOutput|
  0013c		 |$LN15@KITLOutput|

; 65   :             case 'x':
; 66   :                 pOutputNumHex(va_arg(vl, unsigned long), 0);

  0013c	e59d3000	 ldr         r3, [sp]
  00140	e2833004	 add         r3, r3, #4
  00144	e58d3000	 str         r3, [sp]
  00148	e3a01000	 mov         r1, #0
  0014c	e59d3000	 ldr         r3, [sp]
  00150	e2433004	 sub         r3, r3, #4
  00154	e5930000	 ldr         r0, [r3]
  00158	eb000000	 bl          pOutputNumHex

; 67   :                 break;

  0015c	ea00004b	 b           |$LN16@KITLOutput|
  00160		 |$LN14@KITLOutput|

; 68   :             case 'B':
; 69   :                 pOutputNumHex(va_arg(vl, unsigned long), 2);

  00160	e59d3000	 ldr         r3, [sp]
  00164	e2833004	 add         r3, r3, #4
  00168	e58d3000	 str         r3, [sp]
  0016c	e3a01002	 mov         r1, #2
  00170	e59d3000	 ldr         r3, [sp]
  00174	e2433004	 sub         r3, r3, #4
  00178	e5930000	 ldr         r0, [r3]
  0017c	eb000000	 bl          pOutputNumHex

; 70   :                 break;

  00180	ea000042	 b           |$LN16@KITLOutput|
  00184		 |$LN13@KITLOutput|

; 71   :             case 'H':
; 72   :                 pOutputNumHex(va_arg(vl, unsigned long), 4);

  00184	e59d3000	 ldr         r3, [sp]
  00188	e2833004	 add         r3, r3, #4
  0018c	e58d3000	 str         r3, [sp]
  00190	e3a01004	 mov         r1, #4
  00194	e59d3000	 ldr         r3, [sp]
  00198	e2433004	 sub         r3, r3, #4
  0019c	e5930000	 ldr         r0, [r3]
  001a0	eb000000	 bl          pOutputNumHex

; 73   :                 break;

  001a4	ea000039	 b           |$LN16@KITLOutput|
  001a8		 |$LN12@KITLOutput|

; 74   :             case 'X':
; 75   :                 pOutputNumHex(va_arg(vl, unsigned long), 8);

  001a8	e59d3000	 ldr         r3, [sp]
  001ac	e2833004	 add         r3, r3, #4
  001b0	e58d3000	 str         r3, [sp]
  001b4	e3a01008	 mov         r1, #8
  001b8	e59d3000	 ldr         r3, [sp]
  001bc	e2433004	 sub         r3, r3, #4
  001c0	e5930000	 ldr         r0, [r3]
  001c4	eb000000	 bl          pOutputNumHex

; 76   :                 break;

  001c8	ea000030	 b           |$LN16@KITLOutput|
  001cc		 |$LN11@KITLOutput|

; 77   :             case 'd':
; 78   :                 {
; 79   :                     long    l;
; 80   :                 
; 81   :                     l = va_arg(vl, long);

  001cc	e59d3000	 ldr         r3, [sp]
  001d0	e2833004	 add         r3, r3, #4
  001d4	e58d3000	 str         r3, [sp]
  001d8	e59d3000	 ldr         r3, [sp]
  001dc	e2433004	 sub         r3, r3, #4
  001e0	e5933000	 ldr         r3, [r3]
  001e4	e58d3008	 str         r3, [sp, #8]

; 82   :                     if (l < 0) { 

  001e8	e59d3008	 ldr         r3, [sp, #8]
  001ec	e3530000	 cmp         r3, #0
  001f0	aa000004	 bge         |$LN10@KITLOutput|

; 83   :                         pOutputByte('-');

  001f4	e3a0002d	 mov         r0, #0x2D
  001f8	eb000000	 bl          pOutputByte

; 84   :                         l = - l;

  001fc	e59d3008	 ldr         r3, [sp, #8]
  00200	e2633000	 rsb         r3, r3, #0
  00204	e58d3008	 str         r3, [sp, #8]
  00208		 |$LN10@KITLOutput|

; 85   :                     }
; 86   :                     pOutputNumDecimal((unsigned long)l);

  00208	e59d0008	 ldr         r0, [sp, #8]
  0020c	eb000000	 bl          pOutputNumDecimal

; 87   :                 }
; 88   :                 break;

  00210	ea00001e	 b           |$LN16@KITLOutput|
  00214		 |$LN9@KITLOutput|

; 89   :             case 'u':
; 90   :                 pOutputNumDecimal(va_arg(vl, unsigned long));

  00214	e59d3000	 ldr         r3, [sp]
  00218	e2833004	 add         r3, r3, #4
  0021c	e58d3000	 str         r3, [sp]
  00220	e59d3000	 ldr         r3, [sp]
  00224	e2433004	 sub         r3, r3, #4
  00228	e5930000	 ldr         r0, [r3]
  0022c	eb000000	 bl          pOutputNumDecimal

; 91   :                 break;

  00230	ea000016	 b           |$LN16@KITLOutput|
  00234		 |$LN8@KITLOutput|

; 92   :             case 's':
; 93   :                 OutputString(va_arg(vl, char *));

  00234	e59d3000	 ldr         r3, [sp]
  00238	e2833004	 add         r3, r3, #4
  0023c	e58d3000	 str         r3, [sp]
  00240	e59d3000	 ldr         r3, [sp]
  00244	e2433004	 sub         r3, r3, #4
  00248	e5930000	 ldr         r0, [r3]
  0024c	eb000000	 bl          OutputString

; 94   :                 break;

  00250	ea00000e	 b           |$LN16@KITLOutput|
  00254		 |$LN7@KITLOutput|

; 95   :             case '%':
; 96   :                 pOutputByte('%');

  00254	e3a00025	 mov         r0, #0x25
  00258	eb000000	 bl          pOutputByte

; 97   :                 break;

  0025c	ea00000b	 b           |$LN16@KITLOutput|
  00260		 |$LN6@KITLOutput|

; 98   :             case 'c':
; 99   :                 c = va_arg(vl, unsigned char);

  00260	e59d3000	 ldr         r3, [sp]
  00264	e2833004	 add         r3, r3, #4
  00268	e58d3000	 str         r3, [sp]
  0026c	e59d3000	 ldr         r3, [sp]
  00270	e2433004	 sub         r3, r3, #4
  00274	e5d33000	 ldrb        r3, [r3]
  00278	e5cd3004	 strb        r3, [sp, #4]

; 100  :                 pOutputByte(c);

  0027c	e5dd0004	 ldrb        r0, [sp, #4]
  00280	eb000000	 bl          pOutputByte

; 101  :                 break;

  00284	ea000001	 b           |$LN16@KITLOutput|
  00288		 |$LN5@KITLOutput|

; 102  :                 
; 103  :             default:
; 104  :                 pOutputByte(' ');

  00288	e3a00020	 mov         r0, #0x20
  0028c	eb000000	 bl          pOutputByte
  00290		 |$LN16@KITLOutput|

; 105  :                 break;
; 106  :             }
; 107  :             break;

  00290	ea00000c	 b           |$LN19@KITLOutput|
  00294		 |$LN4@KITLOutput|

; 108  :         case '\r':
; 109  :             if (*sz == '\n')

  00294	e59d301c	 ldr         r3, [sp, #0x1C]
  00298	e1d330d0	 ldrsb       r3, [r3]
  0029c	e353000a	 cmp         r3, #0xA
  002a0	1a000002	 bne         |$LN3@KITLOutput|

; 110  :                 sz ++;

  002a4	e59d301c	 ldr         r3, [sp, #0x1C]
  002a8	e2833001	 add         r3, r3, #1
  002ac	e58d301c	 str         r3, [sp, #0x1C]
  002b0		 |$LN3@KITLOutput|

; 111  :             c = '\n';

  002b0	e3a0300a	 mov         r3, #0xA
  002b4	e5cd3004	 strb        r3, [sp, #4]
  002b8		 |$LN2@KITLOutput|

; 112  :             // fall through
; 113  :         case '\n':
; 114  :             pOutputByte('\r');

  002b8	e3a0000d	 mov         r0, #0xD
  002bc	eb000000	 bl          pOutputByte
  002c0		 |$LN1@KITLOutput|

; 115  :             // fall through
; 116  :         default:
; 117  :             pOutputByte(c);

  002c0	e5dd0004	 ldrb        r0, [sp, #4]
  002c4	eb000000	 bl          pOutputByte
  002c8		 |$LN19@KITLOutput|

; 118  :         }
; 119  :     }

  002c8	eaffff53	 b           |$LN22@KITLOutput|
  002cc		 |$LN21@KITLOutput|

; 120  :     
; 121  :     va_end(vl);

  002cc	e3a03000	 mov         r3, #0
  002d0	e58d3000	 str         r3, [sp]

; 122  : }

  002d4	e28dd014	 add         sp, sp, #0x14
  002d8	e89d6000	 ldmia       sp, {sp, lr}
  002dc	e12fff1e	 bx          lr
  002e0		 |$M39562|

			 ENDP  ; |KITLOutputDebugString|

	EXPORT	|FormatString|

  00008			 AREA	 |.pdata|, PDATA
|$T39573| DCD	|$LN30@FormatStri|
	DCD	0x4000c804
; Function compile flags: /Odtp

  002e0			 AREA	 |.text|, CODE, ARM

  002e0		 |FormatString| PROC

; 152  : {

  002e0		 |$LN30@FormatStri|
  002e0	e1a0c00d	 mov         r12, sp
  002e4	e92d000f	 stmdb       sp!, {r0 - r3}
  002e8	e92d5000	 stmdb       sp!, {r12, lr}
  002ec	e24dd018	 sub         sp, sp, #0x18
  002f0		 |$M39570|

; 153  :     unsigned char    c;
; 154  :     va_list         vl;
; 155  :     
; 156  :     va_start(vl, sz);

  002f0	e28d3024	 add         r3, sp, #0x24
  002f4	e2833004	 add         r3, r3, #4
  002f8	e58d3000	 str         r3, [sp]

; 157  :     
; 158  :     szSprintf = pBuf;

  002fc	e59d2020	 ldr         r2, [sp, #0x20]
  00300	e59f32f4	 ldr         r3, [pc, #0x2F4]
  00304	e5832000	 str         r2, [r3]
  00308		 |$LN22@FormatStri|

; 159  :     while (*sz) {

  00308	e59d3024	 ldr         r3, [sp, #0x24]
  0030c	e5d33000	 ldrb        r3, [r3]
  00310	e3530000	 cmp         r3, #0
  00314	0a0000a5	 beq         |$LN21@FormatStri|

; 160  :         c = *sz++;

  00318	e59d3024	 ldr         r3, [sp, #0x24]
  0031c	e5d33000	 ldrb        r3, [r3]
  00320	e5cd3004	 strb        r3, [sp, #4]
  00324	e59d3024	 ldr         r3, [sp, #0x24]
  00328	e2833001	 add         r3, r3, #1
  0032c	e58d3024	 str         r3, [sp, #0x24]

; 161  :         switch (c) {

  00330	e5dd3004	 ldrb        r3, [sp, #4]
  00334	e58d3010	 str         r3, [sp, #0x10]
  00338	e59d3010	 ldr         r3, [sp, #0x10]
  0033c	e353000a	 cmp         r3, #0xA
  00340	0a000095	 beq         |$LN2@FormatStri|
  00344	e59d3010	 ldr         r3, [sp, #0x10]
  00348	e353000d	 cmp         r3, #0xD
  0034c	0a000089	 beq         |$LN4@FormatStri|
  00350	e59d3010	 ldr         r3, [sp, #0x10]
  00354	e3530025	 cmp         r3, #0x25
  00358	0a000000	 beq         |$LN18@FormatStri|
  0035c	ea000090	 b           |$LN1@FormatStri|
  00360		 |$LN18@FormatStri|

; 162  :         case '%':
; 163  :             c = *sz++;

  00360	e59d3024	 ldr         r3, [sp, #0x24]
  00364	e5d33000	 ldrb        r3, [r3]
  00368	e5cd3004	 strb        r3, [sp, #4]
  0036c	e59d3024	 ldr         r3, [sp, #0x24]
  00370	e2833001	 add         r3, r3, #1
  00374	e58d3024	 str         r3, [sp, #0x24]

; 164  :             switch (c) { 

  00378	e5dd3004	 ldrb        r3, [sp, #4]
  0037c	e58d3014	 str         r3, [sp, #0x14]
  00380	e59d3014	 ldr         r3, [sp, #0x14]
  00384	e3530063	 cmp         r3, #0x63
  00388	ca000013	 bgt         |$LN25@FormatStri|
  0038c	e59d3014	 ldr         r3, [sp, #0x14]
  00390	e3530063	 cmp         r3, #0x63
  00394	0a00006a	 beq         |$LN6@FormatStri|
  00398	e59d3014	 ldr         r3, [sp, #0x14]
  0039c	e3530048	 cmp         r3, #0x48
  003a0	ca000009	 bgt         |$LN26@FormatStri|
  003a4	e59d3014	 ldr         r3, [sp, #0x14]
  003a8	e3530048	 cmp         r3, #0x48
  003ac	0a00002d	 beq         |$LN13@FormatStri|
  003b0	e59d3014	 ldr         r3, [sp, #0x14]
  003b4	e3530025	 cmp         r3, #0x25
  003b8	0a00005e	 beq         |$LN7@FormatStri|
  003bc	e59d3014	 ldr         r3, [sp, #0x14]
  003c0	e3530042	 cmp         r3, #0x42
  003c4	0a00001e	 beq         |$LN14@FormatStri|
  003c8	ea000067	 b           |$LN5@FormatStri|
  003cc		 |$LN26@FormatStri|
  003cc	e59d3014	 ldr         r3, [sp, #0x14]
  003d0	e3530058	 cmp         r3, #0x58
  003d4	0a00002c	 beq         |$LN12@FormatStri|
  003d8	ea000063	 b           |$LN5@FormatStri|
  003dc		 |$LN25@FormatStri|
  003dc	e59d3014	 ldr         r3, [sp, #0x14]
  003e0	e3530075	 cmp         r3, #0x75
  003e4	ca000009	 bgt         |$LN27@FormatStri|
  003e8	e59d3014	 ldr         r3, [sp, #0x14]
  003ec	e3530075	 cmp         r3, #0x75
  003f0	0a000040	 beq         |$LN9@FormatStri|
  003f4	e59d3014	 ldr         r3, [sp, #0x14]
  003f8	e3530064	 cmp         r3, #0x64
  003fc	0a00002b	 beq         |$LN11@FormatStri|
  00400	e59d3014	 ldr         r3, [sp, #0x14]
  00404	e3530073	 cmp         r3, #0x73
  00408	0a000042	 beq         |$LN8@FormatStri|
  0040c	ea000056	 b           |$LN5@FormatStri|
  00410		 |$LN27@FormatStri|
  00410	e59d3014	 ldr         r3, [sp, #0x14]
  00414	e3530078	 cmp         r3, #0x78
  00418	0a000000	 beq         |$LN15@FormatStri|
  0041c	ea000052	 b           |$LN5@FormatStri|
  00420		 |$LN15@FormatStri|

; 165  :             case 'x':
; 166  :                 pOutputNumHex(va_arg(vl, unsigned long), 0);

  00420	e59d3000	 ldr         r3, [sp]
  00424	e2833004	 add         r3, r3, #4
  00428	e58d3000	 str         r3, [sp]
  0042c	e3a01000	 mov         r1, #0
  00430	e59d3000	 ldr         r3, [sp]
  00434	e2433004	 sub         r3, r3, #4
  00438	e5930000	 ldr         r0, [r3]
  0043c	eb000000	 bl          pOutputNumHex

; 167  :                 break;

  00440	ea00004b	 b           |$LN16@FormatStri|
  00444		 |$LN14@FormatStri|

; 168  :             case 'B':
; 169  :                 pOutputNumHex(va_arg(vl, unsigned long), 2);

  00444	e59d3000	 ldr         r3, [sp]
  00448	e2833004	 add         r3, r3, #4
  0044c	e58d3000	 str         r3, [sp]
  00450	e3a01002	 mov         r1, #2
  00454	e59d3000	 ldr         r3, [sp]
  00458	e2433004	 sub         r3, r3, #4
  0045c	e5930000	 ldr         r0, [r3]
  00460	eb000000	 bl          pOutputNumHex

; 170  :                 break;

  00464	ea000042	 b           |$LN16@FormatStri|
  00468		 |$LN13@FormatStri|

; 171  :             case 'H':
; 172  :                 pOutputNumHex(va_arg(vl, unsigned long), 4);

  00468	e59d3000	 ldr         r3, [sp]
  0046c	e2833004	 add         r3, r3, #4
  00470	e58d3000	 str         r3, [sp]
  00474	e3a01004	 mov         r1, #4
  00478	e59d3000	 ldr         r3, [sp]
  0047c	e2433004	 sub         r3, r3, #4
  00480	e5930000	 ldr         r0, [r3]
  00484	eb000000	 bl          pOutputNumHex

; 173  :                 break;

  00488	ea000039	 b           |$LN16@FormatStri|
  0048c		 |$LN12@FormatStri|

; 174  :             case 'X':
; 175  :                 pOutputNumHex(va_arg(vl, unsigned long), 8);

  0048c	e59d3000	 ldr         r3, [sp]
  00490	e2833004	 add         r3, r3, #4
  00494	e58d3000	 str         r3, [sp]
  00498	e3a01008	 mov         r1, #8
  0049c	e59d3000	 ldr         r3, [sp]
  004a0	e2433004	 sub         r3, r3, #4
  004a4	e5930000	 ldr         r0, [r3]
  004a8	eb000000	 bl          pOutputNumHex

; 176  :                 break;

  004ac	ea000030	 b           |$LN16@FormatStri|
  004b0		 |$LN11@FormatStri|

; 177  :             case 'd':
; 178  :                 {
; 179  :                     long    l;
; 180  :                 
; 181  :                     l = va_arg(vl, long);

  004b0	e59d3000	 ldr         r3, [sp]
  004b4	e2833004	 add         r3, r3, #4
  004b8	e58d3000	 str         r3, [sp]
  004bc	e59d3000	 ldr         r3, [sp]
  004c0	e2433004	 sub         r3, r3, #4
  004c4	e5933000	 ldr         r3, [r3]
  004c8	e58d3008	 str         r3, [sp, #8]

; 182  :                     if (l < 0) { 

  004cc	e59d3008	 ldr         r3, [sp, #8]
  004d0	e3530000	 cmp         r3, #0
  004d4	aa000004	 bge         |$LN10@FormatStri|

; 183  :                         pOutputByte('-');

  004d8	e3a0002d	 mov         r0, #0x2D
  004dc	eb000000	 bl          pOutputByte

; 184  :                         l = - l;

  004e0	e59d3008	 ldr         r3, [sp, #8]
  004e4	e2633000	 rsb         r3, r3, #0
  004e8	e58d3008	 str         r3, [sp, #8]
  004ec		 |$LN10@FormatStri|

; 185  :                     }
; 186  :                     pOutputNumDecimal((unsigned long)l);

  004ec	e59d0008	 ldr         r0, [sp, #8]
  004f0	eb000000	 bl          pOutputNumDecimal

; 187  :                 }
; 188  :                 break;

  004f4	ea00001e	 b           |$LN16@FormatStri|
  004f8		 |$LN9@FormatStri|

; 189  :             case 'u':
; 190  :                 pOutputNumDecimal(va_arg(vl, unsigned long));

  004f8	e59d3000	 ldr         r3, [sp]
  004fc	e2833004	 add         r3, r3, #4
  00500	e58d3000	 str         r3, [sp]
  00504	e59d3000	 ldr         r3, [sp]
  00508	e2433004	 sub         r3, r3, #4
  0050c	e5930000	 ldr         r0, [r3]
  00510	eb000000	 bl          pOutputNumDecimal

; 191  :                 break;

  00514	ea000016	 b           |$LN16@FormatStri|
  00518		 |$LN8@FormatStri|

; 192  :             case 's':
; 193  :                 OutputString(va_arg(vl, char *));

  00518	e59d3000	 ldr         r3, [sp]
  0051c	e2833004	 add         r3, r3, #4
  00520	e58d3000	 str         r3, [sp]
  00524	e59d3000	 ldr         r3, [sp]
  00528	e2433004	 sub         r3, r3, #4
  0052c	e5930000	 ldr         r0, [r3]
  00530	eb000000	 bl          OutputString

; 194  :                 break;

  00534	ea00000e	 b           |$LN16@FormatStri|
  00538		 |$LN7@FormatStri|

; 195  :             case '%':
; 196  :                 pOutputByte('%');

  00538	e3a00025	 mov         r0, #0x25
  0053c	eb000000	 bl          pOutputByte

; 197  :                 break;

  00540	ea00000b	 b           |$LN16@FormatStri|
  00544		 |$LN6@FormatStri|

; 198  :             case 'c':
; 199  :                 c = va_arg(vl, unsigned char);

  00544	e59d3000	 ldr         r3, [sp]
  00548	e2833004	 add         r3, r3, #4
  0054c	e58d3000	 str         r3, [sp]
  00550	e59d3000	 ldr         r3, [sp]
  00554	e2433004	 sub         r3, r3, #4
  00558	e5d33000	 ldrb        r3, [r3]
  0055c	e5cd3004	 strb        r3, [sp, #4]

; 200  :                 pOutputByte(c);

  00560	e5dd0004	 ldrb        r0, [sp, #4]
  00564	eb000000	 bl          pOutputByte

; 201  :                 break;

  00568	ea000001	 b           |$LN16@FormatStri|
  0056c		 |$LN5@FormatStri|

; 202  :                 
; 203  :             default:
; 204  :                 pOutputByte(' ');

  0056c	e3a00020	 mov         r0, #0x20
  00570	eb000000	 bl          pOutputByte
  00574		 |$LN16@FormatStri|

; 205  :                 break;
; 206  :             }
; 207  :             break;

  00574	ea00000c	 b           |$LN19@FormatStri|
  00578		 |$LN4@FormatStri|

; 208  :         case '\r':
; 209  :             if (*sz == '\n')

  00578	e59d3024	 ldr         r3, [sp, #0x24]
  0057c	e5d33000	 ldrb        r3, [r3]
  00580	e353000a	 cmp         r3, #0xA
  00584	1a000002	 bne         |$LN3@FormatStri|

; 210  :                 sz ++;

  00588	e59d3024	 ldr         r3, [sp, #0x24]
  0058c	e2833001	 add         r3, r3, #1
  00590	e58d3024	 str         r3, [sp, #0x24]
  00594		 |$LN3@FormatStri|

; 211  :             c = '\n';

  00594	e3a0300a	 mov         r3, #0xA
  00598	e5cd3004	 strb        r3, [sp, #4]
  0059c		 |$LN2@FormatStri|

; 212  :             // fall through
; 213  :         case '\n':
; 214  :             pOutputByte('\r');

  0059c	e3a0000d	 mov         r0, #0xD
  005a0	eb000000	 bl          pOutputByte
  005a4		 |$LN1@FormatStri|

; 215  :             // fall through
; 216  :         default:
; 217  :             pOutputByte(c);

  005a4	e5dd0004	 ldrb        r0, [sp, #4]
  005a8	eb000000	 bl          pOutputByte
  005ac		 |$LN19@FormatStri|

; 218  :         }
; 219  :     }

  005ac	eaffff55	 b           |$LN22@FormatStri|
  005b0		 |$LN21@FormatStri|

; 220  :     pOutputByte(0);

  005b0	e3a00000	 mov         r0, #0
  005b4	eb000000	 bl          pOutputByte

; 221  :     c = szSprintf - pBuf;

  005b8	e59f303c	 ldr         r3, [pc, #0x3C]
  005bc	e5932000	 ldr         r2, [r3]
  005c0	e59d3020	 ldr         r3, [sp, #0x20]
  005c4	e0423003	 sub         r3, r2, r3
  005c8	e20330ff	 and         r3, r3, #0xFF
  005cc	e5cd3004	 strb        r3, [sp, #4]

; 222  :     szSprintf = 0;

  005d0	e59f2024	 ldr         r2, [pc, #0x24]
  005d4	e3a03000	 mov         r3, #0
  005d8	e5823000	 str         r3, [r2]

; 223  :     va_end(vl);

  005dc	e3a03000	 mov         r3, #0
  005e0	e58d3000	 str         r3, [sp]

; 224  :     return (c);

  005e4	e5dd3004	 ldrb        r3, [sp, #4]
  005e8	e58d300c	 str         r3, [sp, #0xC]

; 225  : }

  005ec	e59d000c	 ldr         r0, [sp, #0xC]
  005f0	e28dd018	 add         sp, sp, #0x18
  005f4	e89d6000	 ldmia       sp, {sp, lr}
  005f8	e12fff1e	 bx          lr
  005fc		 |$LN31@FormatStri|
  005fc		 |$LN32@FormatStri|
  005fc	00000000	 DCD         |szSprintf|
  00600		 |$M39571|

			 ENDP  ; |FormatString|

	IMPORT	|OEMWriteDebugByte|

  00010			 AREA	 |.pdata|, PDATA
|$T39580| DCD	|$LN7@pOutputByt|
	DCD	0x40001803
; Function compile flags: /Odtp

  00600			 AREA	 |.text|, CODE, ARM

  00600		 |pOutputByte| PROC

; 242  : {

  00600		 |$LN7@pOutputByt|
  00600	e1a0c00d	 mov         r12, sp
  00604	e92d0001	 stmdb       sp!, {r0}
  00608	e92d5000	 stmdb       sp!, {r12, lr}
  0060c		 |$M39577|

; 243  :     if (szSprintf)

  0060c	e59f3048	 ldr         r3, [pc, #0x48]
  00610	e5933000	 ldr         r3, [r3]
  00614	e3530000	 cmp         r3, #0
  00618	0a00000b	 beq         |$LN2@pOutputByt|

; 244  :         *szSprintf++ = c;

  0061c	e5dd3008	 ldrb        r3, [sp, #8]
  00620	e1a02c03	 mov         r2, r3, lsl #24
  00624	e1a02c42	 mov         r2, r2, asr #24
  00628	e59f302c	 ldr         r3, [pc, #0x2C]
  0062c	e5933000	 ldr         r3, [r3]
  00630	e5c32000	 strb        r2, [r3]
  00634	e59f3020	 ldr         r3, [pc, #0x20]
  00638	e5933000	 ldr         r3, [r3]
  0063c	e2832001	 add         r2, r3, #1
  00640	e59f3014	 ldr         r3, [pc, #0x14]
  00644	e5832000	 str         r2, [r3]

; 245  :     else

  00648	ea000001	 b           |$LN1@pOutputByt|
  0064c		 |$LN2@pOutputByt|

; 246  :         OEMWriteDebugByte(c);

  0064c	e5dd0008	 ldrb        r0, [sp, #8]
  00650	eb000000	 bl          OEMWriteDebugByte
  00654		 |$LN1@pOutputByt|

; 247  : }

  00654	e89d6000	 ldmia       sp, {sp, lr}
  00658	e12fff1e	 bx          lr
  0065c		 |$LN8@pOutputByt|
  0065c		 |$LN9@pOutputByt|
  0065c	00000000	 DCD         |szSprintf|
  00660		 |$M39578|

			 ENDP  ; |pOutputByte|


  00018			 AREA	 |.pdata|, PDATA
|$T39587| DCD	|$LN10@pOutputNum|
	DCD	0x40002603
; Function compile flags: /Odtp

  00660			 AREA	 |.text|, CODE, ARM

  00660		 |pOutputNumHex| PROC

; 265  : {

  00660		 |$LN10@pOutputNum|
  00660	e1a0c00d	 mov         r12, sp
  00664	e92d0003	 stmdb       sp!, {r0, r1}
  00668	e92d5000	 stmdb       sp!, {r12, lr}
  0066c		 |$M39584|

; 266  :     if (depth) {

  0066c	e59d300c	 ldr         r3, [sp, #0xC]
  00670	e3530000	 cmp         r3, #0
  00674	0a000002	 beq         |$LN5@pOutputNum|

; 267  :         depth--;

  00678	e59d300c	 ldr         r3, [sp, #0xC]
  0067c	e2433001	 sub         r3, r3, #1
  00680	e58d300c	 str         r3, [sp, #0xC]
  00684		 |$LN5@pOutputNum|

; 268  :     }
; 269  :     
; 270  :     if ((n & ~0xf) || depth) {

  00684	e59d2008	 ldr         r2, [sp, #8]
  00688	e3e0300f	 mvn         r3, #0xF
  0068c	e1120003	 tst         r2, r3
  00690	1a000002	 bne         |$LN3@pOutputNum|
  00694	e59d300c	 ldr         r3, [sp, #0xC]
  00698	e3530000	 cmp         r3, #0
  0069c	0a000006	 beq         |$LN4@pOutputNum|
  006a0		 |$LN3@pOutputNum|

; 271  :         pOutputNumHex(n >> 4, depth);

  006a0	e59d100c	 ldr         r1, [sp, #0xC]
  006a4	e59d3008	 ldr         r3, [sp, #8]
  006a8	e1a00223	 mov         r0, r3, lsr #4
  006ac	eb000000	 bl          pOutputNumHex

; 272  :         n &= 0xf;

  006b0	e59d3008	 ldr         r3, [sp, #8]
  006b4	e203300f	 and         r3, r3, #0xF
  006b8	e58d3008	 str         r3, [sp, #8]
  006bc		 |$LN4@pOutputNum|

; 273  :     }
; 274  :     
; 275  :     if (n < 10) {

  006bc	e59d3008	 ldr         r3, [sp, #8]
  006c0	e353000a	 cmp         r3, #0xA
  006c4	2a000004	 bcs         |$LN2@pOutputNum|

; 276  :         pOutputByte((unsigned char)(n + '0'));

  006c8	e59d3008	 ldr         r3, [sp, #8]
  006cc	e2833030	 add         r3, r3, #0x30
  006d0	e20300ff	 and         r0, r3, #0xFF
  006d4	eb000000	 bl          pOutputByte

; 277  :     } else { 

  006d8	ea000004	 b           |$LN1@pOutputNum|
  006dc		 |$LN2@pOutputNum|

; 278  :     pOutputByte((unsigned char)(n - 10 + 'A'));

  006dc	e59d3008	 ldr         r3, [sp, #8]
  006e0	e243300a	 sub         r3, r3, #0xA
  006e4	e2833041	 add         r3, r3, #0x41
  006e8	e20300ff	 and         r0, r3, #0xFF
  006ec	eb000000	 bl          pOutputByte
  006f0		 |$LN1@pOutputNum|

; 279  : }
; 280  : }

  006f0	e89d6000	 ldmia       sp, {sp, lr}
  006f4	e12fff1e	 bx          lr
  006f8		 |$M39585|

			 ENDP  ; |pOutputNumHex|

	IMPORT	|__rt_udiv|

  00020			 AREA	 |.pdata|, PDATA
|$T39593| DCD	|$LN6@pOutputNum@2|
	DCD	0x40001403
; Function compile flags: /Odtp

  006f8			 AREA	 |.text|, CODE, ARM

  006f8		 |pOutputNumDecimal| PROC

; 295  : {

  006f8		 |$LN6@pOutputNum@2|
  006f8	e1a0c00d	 mov         r12, sp
  006fc	e92d0001	 stmdb       sp!, {r0}
  00700	e92d5000	 stmdb       sp!, {r12, lr}
  00704		 |$M39590|

; 296  :     if (n >= 10) {

  00704	e59d3008	 ldr         r3, [sp, #8]
  00708	e353000a	 cmp         r3, #0xA
  0070c	3a000007	 bcc         |$LN1@pOutputNum@2|

; 297  :         pOutputNumDecimal(n / 10);

  00710	e59d1008	 ldr         r1, [sp, #8]
  00714	e3a0000a	 mov         r0, #0xA
  00718	eb000000	 bl          __rt_udiv
  0071c	eb000000	 bl          pOutputNumDecimal

; 298  :         n %= 10;

  00720	e59d1008	 ldr         r1, [sp, #8]
  00724	e3a0000a	 mov         r0, #0xA
  00728	eb000000	 bl          __rt_udiv
  0072c	e58d1008	 str         r1, [sp, #8]
  00730		 |$LN1@pOutputNum@2|

; 299  :     }
; 300  :     pOutputByte((unsigned char)(n + '0'));

  00730	e59d3008	 ldr         r3, [sp, #8]
  00734	e2833030	 add         r3, r3, #0x30
  00738	e20300ff	 and         r0, r3, #0xFF
  0073c	eb000000	 bl          pOutputByte

; 301  : }

  00740	e89d6000	 ldmia       sp, {sp, lr}
  00744	e12fff1e	 bx          lr
  00748		 |$M39591|

			 ENDP  ; |pOutputNumDecimal|


  00028			 AREA	 |.pdata|, PDATA
|$T39598| DCD	|$LN8@OutputStri|
	DCD	0x40001a04
; Function compile flags: /Odtp

  00748			 AREA	 |.text|, CODE, ARM

  00748		 |OutputString| PROC

; 317  : {

  00748		 |$LN8@OutputStri|
  00748	e1a0c00d	 mov         r12, sp
  0074c	e92d0001	 stmdb       sp!, {r0}
  00750	e92d5000	 stmdb       sp!, {r12, lr}
  00754	e24dd004	 sub         sp, sp, #4
  00758		 |$M39595|
  00758		 |$LN3@OutputStri|

; 318  :     while (*s) {        

  00758	e59d300c	 ldr         r3, [sp, #0xC]
  0075c	e5d33000	 ldrb        r3, [r3]
  00760	e3530000	 cmp         r3, #0
  00764	0a00000e	 beq         |$LN2@OutputStri|

; 319  :         if (*s == '\n') {

  00768	e59d300c	 ldr         r3, [sp, #0xC]
  0076c	e5d33000	 ldrb        r3, [r3]
  00770	e353000a	 cmp         r3, #0xA
  00774	1a000001	 bne         |$LN1@OutputStri|

; 320  :             OEMWriteDebugByte('\r');

  00778	e3a0000d	 mov         r0, #0xD
  0077c	eb000000	 bl          OEMWriteDebugByte
  00780		 |$LN1@OutputStri|

; 321  :         }
; 322  :         OEMWriteDebugByte(*s++);

  00780	e59d300c	 ldr         r3, [sp, #0xC]
  00784	e5d33000	 ldrb        r3, [r3]
  00788	e5cd3000	 strb        r3, [sp]
  0078c	e5dd0000	 ldrb        r0, [sp]
  00790	eb000000	 bl          OEMWriteDebugByte
  00794	e59d300c	 ldr         r3, [sp, #0xC]
  00798	e2833001	 add         r3, r3, #1
  0079c	e58d300c	 str         r3, [sp, #0xC]

; 323  :     }

  007a0	eaffffec	 b           |$LN3@OutputStri|
  007a4		 |$LN2@OutputStri|

; 324  : }

  007a4	e28dd004	 add         sp, sp, #4
  007a8	e89d6000	 ldmia       sp, {sp, lr}
  007ac	e12fff1e	 bx          lr
  007b0		 |$M39596|

			 ENDP  ; |OutputString|

	EXPORT	|??_C@_0M@CDHNGIPM@?$CFu?4?$CFu?4?$CFu?4?$CFu?$AA@| [ DATA ] ; `string'
	EXPORT	|inet_ntoa|

  00000			 AREA	 |.bss|, NOINIT
|?szDottedD@?1??inet_ntoa@@9@9| % 0x10			; `inet_ntoa'::`2'::szDottedD

  00030			 AREA	 |.pdata|, PDATA
|$T39606| DCD	|$LN5@inet_ntoa|
	DCD	0x40001c04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0M@CDHNGIPM@?$CFu?4?$CFu?4?$CFu?4?$CFu?$AA@| DCB "%u.%u.%u.%u", 0x0 ; `string'
; Function compile flags: /Odtp

  007b0			 AREA	 |.text|, CODE, ARM

  007b0		 |inet_ntoa| PROC

; 327  : char *inet_ntoa( DWORD dwIP ) {

  007b0		 |$LN5@inet_ntoa|
  007b0	e1a0c00d	 mov         r12, sp
  007b4	e92d0001	 stmdb       sp!, {r0}
  007b8	e92d5000	 stmdb       sp!, {r12, lr}
  007bc	e24dd014	 sub         sp, sp, #0x14
  007c0		 |$M39603|

; 328  : 
; 329  :     static char szDottedD[16];
; 330  : 
; 331  :     FormatString( szDottedD, "%u.%u.%u.%u",
; 332  :         (BYTE)dwIP, (BYTE)(dwIP >> 8), (BYTE)(dwIP >> 16), (BYTE)(dwIP >> 24) );

  007c0	e59d301c	 ldr         r3, [sp, #0x1C]
  007c4	e1a03c23	 mov         r3, r3, lsr #24
  007c8	e20330ff	 and         r3, r3, #0xFF
  007cc	e58d3004	 str         r3, [sp, #4]
  007d0	e59d301c	 ldr         r3, [sp, #0x1C]
  007d4	e1a03823	 mov         r3, r3, lsr #16
  007d8	e20330ff	 and         r3, r3, #0xFF
  007dc	e58d3000	 str         r3, [sp]
  007e0	e59d301c	 ldr         r3, [sp, #0x1C]
  007e4	e1a03423	 mov         r3, r3, lsr #8
  007e8	e20330ff	 and         r3, r3, #0xFF
  007ec	e59d201c	 ldr         r2, [sp, #0x1C]
  007f0	e20220ff	 and         r2, r2, #0xFF
  007f4	e59f1020	 ldr         r1, [pc, #0x20]
  007f8	e59f0018	 ldr         r0, [pc, #0x18]
  007fc	eb000000	 bl          FormatString

; 333  : 
; 334  :     return szDottedD;

  00800	e59f3010	 ldr         r3, [pc, #0x10]
  00804	e58d3010	 str         r3, [sp, #0x10]

; 335  : 
; 336  : } // inet_ntoa()

  00808	e59d0010	 ldr         r0, [sp, #0x10]
  0080c	e28dd014	 add         sp, sp, #0x14
  00810	e89d6000	 ldmia       sp, {sp, lr}
  00814	e12fff1e	 bx          lr
  00818		 |$LN6@inet_ntoa|
  00818		 |$LN7@inet_ntoa|
  00818	00000000	 DCD         |?szDottedD@?1??inet_ntoa@@9@9|
  0081c		 |$LN8@inet_ntoa|
  0081c	00000000	 DCD         |??_C@_0M@CDHNGIPM@?$CFu?4?$CFu?4?$CFu?4?$CFu?$AA@|
  00820		 |$M39604|

			 ENDP  ; |inet_ntoa|

	EXPORT	|inet_addr|
	IMPORT	|atoi|

  00038			 AREA	 |.pdata|, PDATA
|$T39615| DCD	|$LN11@inet_addr|
	DCD	0x40004104
; Function compile flags: /Odtp

  00820			 AREA	 |.text|, CODE, ARM

  00820		 |inet_addr| PROC

; 339  : DWORD inet_addr( char *pszDottedD ) {

  00820		 |$LN11@inet_addr|
  00820	e1a0c00d	 mov         r12, sp
  00824	e92d0001	 stmdb       sp!, {r0}
  00828	e92d5000	 stmdb       sp!, {r12, lr}
  0082c	e24dd014	 sub         sp, sp, #0x14
  00830		 |$M39612|

; 340  : 
; 341  :     DWORD dwIP = 0;

  00830	e3a03000	 mov         r3, #0
  00834	e58d3004	 str         r3, [sp, #4]

; 342  :     DWORD cBytes;
; 343  :     char *pszLastNum;
; 344  :     int atoi (const char *s);
; 345  :     
; 346  :     // Replace the dots with NULL terminators
; 347  :     pszLastNum = pszDottedD;

  00838	e59d301c	 ldr         r3, [sp, #0x1C]
  0083c	e58d3000	 str         r3, [sp]

; 348  :     for( cBytes = 0; cBytes < 4; cBytes++ ) {

  00840	e3a03000	 mov         r3, #0
  00844	e58d3008	 str         r3, [sp, #8]
  00848	ea000002	 b           |$LN6@inet_addr|
  0084c		 |$LN5@inet_addr|
  0084c	e59d3008	 ldr         r3, [sp, #8]
  00850	e2833001	 add         r3, r3, #1
  00854	e58d3008	 str         r3, [sp, #8]
  00858		 |$LN6@inet_addr|
  00858	e59d3008	 ldr         r3, [sp, #8]
  0085c	e3530004	 cmp         r3, #4
  00860	2a000029	 bcs         |$LN4@inet_addr|
  00864		 |$LN3@inet_addr|

; 349  :         while(*pszDottedD != '.' && *pszDottedD != '\0')

  00864	e59d301c	 ldr         r3, [sp, #0x1C]
  00868	e1d330d0	 ldrsb       r3, [r3]
  0086c	e353002e	 cmp         r3, #0x2E
  00870	0a000007	 beq         |$LN2@inet_addr|
  00874	e59d301c	 ldr         r3, [sp, #0x1C]
  00878	e1d330d0	 ldrsb       r3, [r3]
  0087c	e3530000	 cmp         r3, #0
  00880	0a000003	 beq         |$LN2@inet_addr|

; 350  :             pszDottedD++;

  00884	e59d301c	 ldr         r3, [sp, #0x1C]
  00888	e2833001	 add         r3, r3, #1
  0088c	e58d301c	 str         r3, [sp, #0x1C]
  00890	eafffff3	 b           |$LN3@inet_addr|
  00894		 |$LN2@inet_addr|

; 351  :         if (pszDottedD == '\0' && cBytes != 3)

  00894	e59d301c	 ldr         r3, [sp, #0x1C]
  00898	e3530000	 cmp         r3, #0
  0089c	1a000005	 bne         |$LN1@inet_addr|
  008a0	e59d3008	 ldr         r3, [sp, #8]
  008a4	e3530003	 cmp         r3, #3
  008a8	0a000002	 beq         |$LN1@inet_addr|

; 352  :             return 0;

  008ac	e3a03000	 mov         r3, #0
  008b0	e58d300c	 str         r3, [sp, #0xC]
  008b4	ea000016	 b           |$LN7@inet_addr|
  008b8		 |$LN1@inet_addr|

; 353  :         *pszDottedD = '\0';

  008b8	e59d201c	 ldr         r2, [sp, #0x1C]
  008bc	e3a03000	 mov         r3, #0
  008c0	e5c23000	 strb        r3, [r2]

; 354  :         dwIP |= (atoi(pszLastNum) & 0xFF) << (8*cBytes);

  008c4	e59d0000	 ldr         r0, [sp]
  008c8	eb000000	 bl          atoi
  008cc	e58d0010	 str         r0, [sp, #0x10]
  008d0	e59d3010	 ldr         r3, [sp, #0x10]
  008d4	e20310ff	 and         r1, r3, #0xFF
  008d8	e59d2008	 ldr         r2, [sp, #8]
  008dc	e3a03008	 mov         r3, #8
  008e0	e0030392	 mul         r3, r2, r3
  008e4	e1a02311	 mov         r2, r1, lsl r3
  008e8	e59d3004	 ldr         r3, [sp, #4]
  008ec	e1833002	 orr         r3, r3, r2
  008f0	e58d3004	 str         r3, [sp, #4]

; 355  :         pszLastNum = ++pszDottedD;

  008f4	e59d301c	 ldr         r3, [sp, #0x1C]
  008f8	e2833001	 add         r3, r3, #1
  008fc	e58d301c	 str         r3, [sp, #0x1C]
  00900	e59d301c	 ldr         r3, [sp, #0x1C]
  00904	e58d3000	 str         r3, [sp]

; 356  :     }

  00908	eaffffcf	 b           |$LN5@inet_addr|
  0090c		 |$LN4@inet_addr|

; 357  : 
; 358  :     return dwIP;

  0090c	e59d3004	 ldr         r3, [sp, #4]
  00910	e58d300c	 str         r3, [sp, #0xC]
  00914		 |$LN7@inet_addr|

; 359  : 
; 360  : } // inet_ntoa()

  00914	e59d000c	 ldr         r0, [sp, #0xC]
  00918	e28dd014	 add         sp, sp, #0x14
  0091c	e89d6000	 ldmia       sp, {sp, lr}
  00920	e12fff1e	 bx          lr
  00924		 |$M39613|

			 ENDP  ; |inet_addr|

	END
