; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\COMMON\RTC\TIMER\rtc.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|g_oalRTCTicks| [ DATA ]
	EXPORT	|g_pOALRTCTicks| [ DATA ]
	EXPORT	|g_oalRTCAlarm| [ DATA ]

  00000			 AREA	 |.bss|, NOINIT
|g_pOALRTCTicks| % 0x4
|g_oalRTCAlarm| % 0x8

  00000			 AREA	 |.data|, DATA
|g_oalRTCTicks| DCD 0xaa532200, 0xb89			;  = 0x00000b89aa532200

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|OEMGetRealTime|
	EXPORT	|??_C@_1GE@HKLPDJGK@?$AA?9?$AAO?$AAE?$AAM?$AAG?$AAe?$AAt?$AAR?$AAe?$AAa?$AAl?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CF?$AAd?$AA?1?$AA?$CF?$AAd?$AA?1?$AA?$CF?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@MMIOOJN@?$AA?$CL?$AAO?$AAE?$AAM?$AAG?$AAe?$AAt?$AAR?$AAe?$AAa?$AAl?$AAT?$AAi?$AAm?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|NKFileTimeToSystemTime|
	IMPORT	|g_oalTimer|
	IMPORT	|OALTimerCountsSinceSysTick|
	IMPORT	|INTERRUPTS_ENABLE|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|
	IMPORT	|__rt_udiv|
; File c:\wince600\platform\common\src\common\rtc\timer\rtc.c

  00000			 AREA	 |.pdata|, PDATA
|$T43231| DCD	|$LN12@OEMGetReal|
	DCD	0x40004702

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@HKLPDJGK@?$AA?9?$AAO?$AAE?$AAM?$AAG?$AAe?$AAt?$AAR?$AAe?$AAa?$AAl?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CF?$AAd?$AA?1?$AA?$CF?$AAd?$AA?1?$AA?$CF?$AAd@| DCB "-"
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "G", 0x0, "e", 0x0, "t"
	DCB	0x0, "R", 0x0, "e", 0x0, "a", 0x0, "l", 0x0, "T", 0x0, "i"
	DCB	0x0, "m", 0x0, "e", 0x0, "(", 0x0, "r", 0x0, "c", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, "/", 0x0, "%", 0x0, "d", 0x0, "/", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ":", 0x0, "%"
	DCB	0x0, "d", 0x0, ":", 0x0, "%", 0x0, "d", 0x0, ".", 0x0, "%"
	DCB	0x0, "0", 0x0, "3", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@MMIOOJN@?$AA?$CL?$AAO?$AAE?$AAM?$AAG?$AAe?$AAt?$AAR?$AAe?$AAa?$AAl?$AAT?$AAi?$AAm?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "G", 0x0, "e", 0x0, "t"
	DCB	0x0, "R", 0x0, "e", 0x0, "a", 0x0, "l", 0x0, "T", 0x0, "i"
	DCB	0x0, "m", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMGetRealTime| PROC

; 97   : {

  00000		 |$LN12@OEMGetReal|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004	e24dd01c	 sub         sp, sp, #0x1C
  00008		 |$M43228|
  00008	e1a07000	 mov         r7, r0

; 98   :     BOOL rc = FALSE;
; 99   :     ULARGE_INTEGER time;
; 100  :     FILETIME fileTime;
; 101  :     UINT64 ticks;
; 102  :     BOOL enabled;
; 103  :     INT32 tickCorrection;
; 104  : 
; 105  :     OALMSG(OAL_RTC&&OAL_FUNC, (L"+OEMGetRealTime\r\n"));

  0000c	e59f5104	 ldr         r5, [pc, #0x104]
  00010	e3a08000	 mov         r8, #0
  00014	e5953440	 ldr         r3, [r5, #0x440]
  00018	e3130040	 tst         r3, #0x40
  0001c	13130004	 tstne       r3, #4
  00020	159f00ec	 ldrne       r0, [pc, #0xEC]
  00024	1b000000	 blne        NKDbgPrintfW

; 106  : 
; 107  :     if(!pTime) goto cleanUp;

  00028	e3570000	 cmp         r7, #0
  0002c	0a000031	 beq         |$cleanUp$43147|

; 108  : 
; 109  :     enabled = INTERRUPTS_ENABLE(FALSE);

  00030	e3a00000	 mov         r0, #0
  00034	eb000000	 bl          INTERRUPTS_ENABLE

; 110  :     ticks = *g_pOALRTCTicks;

  00038	e59f30d0	 ldr         r3, [pc, #0xD0]
  0003c	e1a04000	 mov         r4, r0
  00040	e5933000	 ldr         r3, [r3]
  00044	e5936000	 ldr         r6, [r3]
  00048	e5938004	 ldr         r8, [r3, #4]

; 111  :     tickCorrection = OALTimerCountsSinceSysTick();

  0004c	eb000000	 bl          OALTimerCountsSinceSysTick
  00050	e1a09000	 mov         r9, r0

; 112  :     INTERRUPTS_ENABLE(enabled);

  00054	e1a00004	 mov         r0, r4
  00058	eb000000	 bl          INTERRUPTS_ENABLE

; 113  : 
; 114  :     // With variable tick timing, the RTC tick value might not be incremented
; 115  :     // on a "normal" tick interval.  This means that the RTC may jump forward
; 116  :     // in time depending on the tick variation.  To smooth this out, we need
; 117  :     // to sample the timer to see how far we've made it past the last match
; 118  :     // event, then convert that into milliseconds and adjust the derived value.
; 119  :     //
; 120  :     if (tickCorrection >= (INT32)g_oalTimer.countsPerMSec)

  0005c	e59f30a8	 ldr         r3, [pc, #0xA8]
  00060	e5930000	 ldr         r0, [r3]
  00064	e1590000	 cmp         r9, r0
  00068	ba000003	 blt         |$LN2@OEMGetReal|

; 121  :     {
; 122  :         ticks += (tickCorrection / g_oalTimer.countsPerMSec);

  0006c	e1a01009	 mov         r1, r9
  00070	eb000000	 bl          __rt_udiv
  00074	e0966000	 adds        r6, r6, r0
  00078	e2a88000	 adc         r8, r8, #0
  0007c		 |$LN2@OEMGetReal|

; 123  :     }
; 124  : 
; 125  :     // Convert time to appropriate format
; 126  :     time.QuadPart = ticks * 10000;

  0007c	e3a03c27	 mov         r3, #0x27, 24
  00080	e3832010	 orr         r2, r3, #0x10
  00084	e083e296	 umull       lr, r3, r6, r2

; 127  :     fileTime.dwLowDateTime = time.LowPart;
; 128  :     fileTime.dwHighDateTime = time.HighPart;
; 129  : 
; 130  :     if((rc = NKFileTimeToSystemTime(&fileTime, pTime)))

  00088	e1a01007	 mov         r1, r7
  0008c	e0233298	 mla         r3, r8, r2, r3
  00090	e28d0014	 add         r0, sp, #0x14
  00094	e58de014	 str         lr, [sp, #0x14]
  00098	e58d3018	 str         r3, [sp, #0x18]
  0009c	eb000000	 bl          NKFileTimeToSystemTime
  000a0	e1b08000	 movs        r8, r0
  000a4	0a000013	 beq         |$cleanUp$43147|

; 131  :     {
; 132  :         OALMSG(OAL_RTC&&OAL_FUNC, (
; 133  :             L"-OEMGetRealTime(rc = %d %d/%d/%d %d:%d:%d.%03d)\r\n", rc, 
; 134  :             pTime->wYear, pTime->wMonth, pTime->wDay, pTime->wHour, pTime->wMinute,
; 135  :             pTime->wSecond, pTime->wMilliseconds
; 136  :         ));

  000a8	e5953440	 ldr         r3, [r5, #0x440]
  000ac	e3130040	 tst         r3, #0x40
  000b0	0a000010	 beq         |$cleanUp$43147|
  000b4	e3130004	 tst         r3, #4
  000b8	0a00000e	 beq         |$cleanUp$43147|
  000bc	e1d710be	 ldrh        r1, [r7, #0xE]
  000c0	e1d7e0bc	 ldrh        lr, [r7, #0xC]
  000c4	e1d740ba	 ldrh        r4, [r7, #0xA]
  000c8	e1d750b8	 ldrh        r5, [r7, #8]
  000cc	e1d760b6	 ldrh        r6, [r7, #6]
  000d0	e1d730b2	 ldrh        r3, [r7, #2]
  000d4	e1d720b0	 ldrh        r2, [r7]
  000d8	e59f0028	 ldr         r0, [pc, #0x28]
  000dc	e58d1010	 str         r1, [sp, #0x10]
  000e0	e1a01008	 mov         r1, r8
  000e4	e58de00c	 str         lr, [sp, #0xC]
  000e8	e58d4008	 str         r4, [sp, #8]
  000ec	e58d5004	 str         r5, [sp, #4]
  000f0	e58d6000	 str         r6, [sp]
  000f4	eb000000	 bl          NKDbgPrintfW
  000f8		 |$cleanUp$43147|

; 137  :     }
; 138  : 
; 139  : 
; 140  : cleanUp:
; 141  :     return rc;
; 142  : }

  000f8	e1a00008	 mov         r0, r8
  000fc	e28dd01c	 add         sp, sp, #0x1C
  00100	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  00104	e12fff1e	 bx          lr
  00108		 |$LN13@OEMGetReal|
  00108		 |$LN14@OEMGetReal|
  00108	00000000	 DCD         |??_C@_1GE@HKLPDJGK@?$AA?9?$AAO?$AAE?$AAM?$AAG?$AAe?$AAt?$AAR?$AAe?$AAa?$AAl?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CF?$AAd?$AA?1?$AA?$CF?$AAd?$AA?1?$AA?$CF?$AAd@|
  0010c		 |$LN15@OEMGetReal|
  0010c	00000000	 DCD         |g_oalTimer|
  00110		 |$LN16@OEMGetReal|
  00110	00000000	 DCD         |g_pOALRTCTicks|
  00114		 |$LN17@OEMGetReal|
  00114	00000000	 DCD         |??_C@_1CE@MMIOOJN@?$AA?$CL?$AAO?$AAE?$AAM?$AAG?$AAe?$AAt?$AAR?$AAe?$AAa?$AAl?$AAT?$AAi?$AAm?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  00118		 |$LN18@OEMGetReal|
  00118	00000000	 DCD         |dpCurSettings|
  0011c		 |$M43229|

			 ENDP  ; |OEMGetRealTime|

	EXPORT	|OEMSetRealTime|
	EXPORT	|??_C@_1DG@MOFFCBMN@?$AA?9?$AAO?$AAE?$AAM?$AAS?$AAe?$AAt?$AAR?$AAe?$AAa?$AAl?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@NLGIDKMA@?$AA?$CL?$AAO?$AAE?$AAM?$AAS?$AAe?$AAt?$AAR?$AAe?$AAa?$AAl?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AA?$CF?$AAd?$AA?1?$AA?$CF?$AAd?$AA?1?$AA?$CF?$AAd?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?$CF?$AAd?$AA?3?$AA?$CF@| [ DATA ] ; `string'
	IMPORT	|NKSystemTimeToFileTime|
	IMPORT	|__rt_udiv64by64|

  00000			 AREA	 |.pdata|, PDATA
|$T43256| DCD	|$LN11@OEMSetReal|
	DCD	0x40003e02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@MOFFCBMN@?$AA?9?$AAO?$AAE?$AAM?$AAS?$AAe?$AAt?$AAR?$AAe?$AAa?$AAl?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, "R", 0x0, "e", 0x0, "a", 0x0, "l", 0x0, "T", 0x0, "i"
	DCB	0x0, "m", 0x0, "e", 0x0, "(", 0x0, "r", 0x0, "c", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@NLGIDKMA@?$AA?$CL?$AAO?$AAE?$AAM?$AAS?$AAe?$AAt?$AAR?$AAe?$AAa?$AAl?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AA?$CF?$AAd?$AA?1?$AA?$CF?$AAd?$AA?1?$AA?$CF?$AAd?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?$CF?$AAd?$AA?3?$AA?$CF@| DCB "+"
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, "R", 0x0, "e", 0x0, "a", 0x0, "l", 0x0, "T", 0x0, "i"
	DCB	0x0, "m", 0x0, "e", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, "/"
	DCB	0x0, "%", 0x0, "d", 0x0, "/", 0x0, "%", 0x0, "d", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ":", 0x0, "%", 0x0, "d", 0x0, ":"
	DCB	0x0, "%", 0x0, "d", 0x0, ".", 0x0, "%", 0x0, "0", 0x0, "3"
	DCB	0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMSetRealTime| PROC

; 151  : {

  00000		 |$LN11@OEMSetReal|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004	e24dd018	 sub         sp, sp, #0x18
  00008		 |$M43253|
  00008	e1b07000	 movs        r7, r0

; 152  :     BOOL rc = FALSE;
; 153  :     ULARGE_INTEGER time;
; 154  :     FILETIME fileTime;
; 155  :     BOOL enabled;
; 156  : 
; 157  :     if(!pTime) goto cleanUp;

  0000c	e59f90e0	 ldr         r9, [pc, #0xE0]
  00010	e3a08000	 mov         r8, #0
  00014	0a000029	 beq         |$cleanUp$43161|

; 158  : 
; 159  :     OALMSG(OAL_RTC&&OAL_FUNC, (
; 160  :         L"+OEMSetRealTime(%d/%d/%d %d:%d:%d.%03d)\r\n", 
; 161  :         pTime->wYear, pTime->wMonth, pTime->wDay, pTime->wHour, pTime->wMinute,
; 162  :         pTime->wSecond, pTime->wMilliseconds
; 163  :     ));

  00018	e5993440	 ldr         r3, [r9, #0x440]
  0001c	e3130040	 tst         r3, #0x40
  00020	0a00000e	 beq         |$LN5@OEMSetReal|
  00024	e3130004	 tst         r3, #4
  00028	0a00000c	 beq         |$LN5@OEMSetReal|
  0002c	e1d7e0be	 ldrh        lr, [r7, #0xE]
  00030	e1d740bc	 ldrh        r4, [r7, #0xC]
  00034	e1d750ba	 ldrh        r5, [r7, #0xA]
  00038	e1d760b8	 ldrh        r6, [r7, #8]
  0003c	e1d730b6	 ldrh        r3, [r7, #6]
  00040	e1d720b2	 ldrh        r2, [r7, #2]
  00044	e1d710b0	 ldrh        r1, [r7]
  00048	e59f00a0	 ldr         r0, [pc, #0xA0]
  0004c	e58de00c	 str         lr, [sp, #0xC]
  00050	e58d4008	 str         r4, [sp, #8]
  00054	e58d5004	 str         r5, [sp, #4]
  00058	e58d6000	 str         r6, [sp]
  0005c	eb000000	 bl          NKDbgPrintfW
  00060		 |$LN5@OEMSetReal|

; 164  :     
; 165  :     if((rc = NKSystemTimeToFileTime(pTime, &fileTime)))

  00060	e28d1010	 add         r1, sp, #0x10
  00064	e1a00007	 mov         r0, r7
  00068	eb000000	 bl          NKSystemTimeToFileTime
  0006c	e1b08000	 movs        r8, r0
  00070	0a000012	 beq         |$cleanUp$43161|

; 166  :     {
; 167  :         // Convert time to miliseconds since Jan 1, 1601
; 168  :         time.LowPart = fileTime.dwLowDateTime;
; 169  :         time.HighPart = fileTime.dwHighDateTime;
; 170  :         time.QuadPart /= 10000;
; 171  : 
; 172  :         enabled = INTERRUPTS_ENABLE(FALSE);

  00074	e59d4010	 ldr         r4, [sp, #0x10]
  00078	e59d5014	 ldr         r5, [sp, #0x14]
  0007c	e3a00000	 mov         r0, #0
  00080	eb000000	 bl          INTERRUPTS_ENABLE
  00084	e3a03c27	 mov         r3, #0x27, 24
  00088	e3832010	 orr         r2, r3, #0x10
  0008c	e1a06000	 mov         r6, r0
  00090	e3a03000	 mov         r3, #0
  00094	e1a00004	 mov         r0, r4
  00098	e1a01005	 mov         r1, r5
  0009c	eb000000	 bl          __rt_udiv64by64

; 173  :         *g_pOALRTCTicks = time.QuadPart;

  000a0	e59fe044	 ldr         lr, [pc, #0x44]
  000a4	e1a02000	 mov         r2, r0

; 174  :         INTERRUPTS_ENABLE(enabled);

  000a8	e1a00006	 mov         r0, r6
  000ac	e59e3000	 ldr         r3, [lr]
  000b0	e5832000	 str         r2, [r3]
  000b4	e59e3000	 ldr         r3, [lr]
  000b8	e5831004	 str         r1, [r3, #4]
  000bc	eb000000	 bl          INTERRUPTS_ENABLE
  000c0		 |$cleanUp$43161|

; 175  :     }
; 176  :     
; 177  : cleanUp:
; 178  :     OALMSG(OAL_RTC&&OAL_FUNC, (L"-OEMSetRealTime(rc = %d)\r\n", rc));

  000c0	e5993440	 ldr         r3, [r9, #0x440]
  000c4	e3130040	 tst         r3, #0x40
  000c8	13130004	 tstne       r3, #4
  000cc	159f0014	 ldrne       r0, [pc, #0x14]
  000d0	11a01008	 movne       r1, r8
  000d4	1b000000	 blne        NKDbgPrintfW

; 179  :     return rc;
; 180  : }

  000d8	e1a00008	 mov         r0, r8
  000dc	e28dd018	 add         sp, sp, #0x18
  000e0	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  000e4	e12fff1e	 bx          lr
  000e8		 |$LN12@OEMSetReal|
  000e8		 |$LN13@OEMSetReal|
  000e8	00000000	 DCD         |??_C@_1DG@MOFFCBMN@?$AA?9?$AAO?$AAE?$AAM?$AAS?$AAe?$AAt?$AAR?$AAe?$AAa?$AAl?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  000ec		 |$LN14@OEMSetReal|
  000ec	00000000	 DCD         |g_pOALRTCTicks|
  000f0		 |$LN15@OEMSetReal|
  000f0	00000000	 DCD         |??_C@_1FE@NLGIDKMA@?$AA?$CL?$AAO?$AAE?$AAM?$AAS?$AAe?$AAt?$AAR?$AAe?$AAa?$AAl?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AA?$CF?$AAd?$AA?1?$AA?$CF?$AAd?$AA?1?$AA?$CF?$AAd?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?$CF?$AAd?$AA?3?$AA?$CF@|
  000f4		 |$LN16@OEMSetReal|
  000f4	00000000	 DCD         |dpCurSettings|
  000f8		 |$M43254|

			 ENDP  ; |OEMSetRealTime|

	EXPORT	|OEMSetAlarmTime|
	EXPORT	|??_C@_1DI@MKCLCMDC@?$AA?9?$AAO?$AAE?$AAM?$AAS?$AAe?$AAt?$AAA?$AAl?$AAa?$AAr?$AAm?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@LDBAHALN@?$AA?$CL?$AAO?$AAE?$AAM?$AAS?$AAe?$AAt?$AAA?$AAl?$AAa?$AAr?$AAm?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AA?$CF?$AAd?$AA?1?$AA?$CF?$AAd?$AA?1?$AA?$CF?$AAd?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?$CF?$AAd?$AA?3@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T43279| DCD	|$LN11@OEMSetAlar|
	DCD	0x40004002

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@MKCLCMDC@?$AA?9?$AAO?$AAE?$AAM?$AAS?$AAe?$AAt?$AAA?$AAl?$AAa?$AAr?$AAm?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, "A", 0x0, "l", 0x0, "a", 0x0, "r", 0x0, "m", 0x0, "T"
	DCB	0x0, "i", 0x0, "m", 0x0, "e", 0x0, "(", 0x0, "r", 0x0, "c"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@LDBAHALN@?$AA?$CL?$AAO?$AAE?$AAM?$AAS?$AAe?$AAt?$AAA?$AAl?$AAa?$AAr?$AAm?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AA?$CF?$AAd?$AA?1?$AA?$CF?$AAd?$AA?1?$AA?$CF?$AAd?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?$CF?$AAd?$AA?3@| DCB "+"
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, "A", 0x0, "l", 0x0, "a", 0x0, "r", 0x0, "m", 0x0, "T"
	DCB	0x0, "i", 0x0, "m", 0x0, "e", 0x0, "(", 0x0, "%", 0x0, "d"
	DCB	0x0, "/", 0x0, "%", 0x0, "d", 0x0, "/", 0x0, "%", 0x0, "d"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ":", 0x0, "%", 0x0, "d"
	DCB	0x0, ":", 0x0, "%", 0x0, "d", 0x0, ".", 0x0, "%", 0x0, "0"
	DCB	0x0, "3", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMSetAlarmTime| PROC

; 189  : {

  00000		 |$LN11@OEMSetAlar|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004	e24dd018	 sub         sp, sp, #0x18
  00008		 |$M43276|
  00008	e1b07000	 movs        r7, r0

; 190  :     BOOL rc = FALSE;
; 191  :     ULARGE_INTEGER time;
; 192  :     FILETIME fileTime;
; 193  :     BOOL enabled;
; 194  : 
; 195  :     if(!pTime) goto cleanUp;

  0000c	e59f90e8	 ldr         r9, [pc, #0xE8]
  00010	e3a08000	 mov         r8, #0
  00014	0a00002b	 beq         |$cleanUp$43175|

; 196  : 
; 197  :     OALMSG(OAL_RTC&&OAL_FUNC, (
; 198  :         L"+OEMSetAlarmTime(%d/%d/%d %d:%d:%d.%03d)\r\n", 
; 199  :         pTime->wYear, pTime->wMonth, pTime->wDay, pTime->wHour, pTime->wMinute,
; 200  :         pTime->wSecond, pTime->wMilliseconds
; 201  :     ));

  00018	e5993440	 ldr         r3, [r9, #0x440]
  0001c	e3130040	 tst         r3, #0x40
  00020	0a00000e	 beq         |$LN5@OEMSetAlar|
  00024	e3130004	 tst         r3, #4
  00028	0a00000c	 beq         |$LN5@OEMSetAlar|
  0002c	e1d7e0be	 ldrh        lr, [r7, #0xE]
  00030	e1d740bc	 ldrh        r4, [r7, #0xC]
  00034	e1d750ba	 ldrh        r5, [r7, #0xA]
  00038	e1d760b8	 ldrh        r6, [r7, #8]
  0003c	e1d730b6	 ldrh        r3, [r7, #6]
  00040	e1d720b2	 ldrh        r2, [r7, #2]
  00044	e1d710b0	 ldrh        r1, [r7]
  00048	e59f00a8	 ldr         r0, [pc, #0xA8]
  0004c	e58de00c	 str         lr, [sp, #0xC]
  00050	e58d4008	 str         r4, [sp, #8]
  00054	e58d5004	 str         r5, [sp, #4]
  00058	e58d6000	 str         r6, [sp]
  0005c	eb000000	 bl          NKDbgPrintfW
  00060		 |$LN5@OEMSetAlar|

; 202  : 
; 203  :     if((rc = NKSystemTimeToFileTime(pTime, &fileTime)))

  00060	e28d1010	 add         r1, sp, #0x10
  00064	e1a00007	 mov         r0, r7
  00068	eb000000	 bl          NKSystemTimeToFileTime
  0006c	e1b08000	 movs        r8, r0
  00070	0a000014	 beq         |$cleanUp$43175|

; 204  :     {
; 205  :         // Convert time to miliseconds since Jan 1, 1601
; 206  :         time.LowPart = fileTime.dwLowDateTime;
; 207  :         time.HighPart = fileTime.dwHighDateTime;
; 208  :         time.QuadPart /= 10000;
; 209  : 
; 210  :         enabled = INTERRUPTS_ENABLE(FALSE);

  00074	e59d4010	 ldr         r4, [sp, #0x10]
  00078	e59d5014	 ldr         r5, [sp, #0x14]
  0007c	e3a00000	 mov         r0, #0
  00080	eb000000	 bl          INTERRUPTS_ENABLE
  00084	e3a03c27	 mov         r3, #0x27, 24
  00088	e3832010	 orr         r2, r3, #0x10
  0008c	e1a06000	 mov         r6, r0
  00090	e3a03000	 mov         r3, #0
  00094	e1a00004	 mov         r0, r4
  00098	e1a01005	 mov         r1, r5
  0009c	eb000000	 bl          __rt_udiv64by64

; 211  :         g_oalRTCAlarm = time.QuadPart - *g_pOALRTCTicks;

  000a0	e59fe04c	 ldr         lr, [pc, #0x4C]
  000a4	e59e2000	 ldr         r2, [lr]
  000a8	e5923000	 ldr         r3, [r2]
  000ac	e5922004	 ldr         r2, [r2, #4]
  000b0	e0733000	 rsbs        r3, r3, r0
  000b4	e0e22001	 rsc         r2, r2, r1
  000b8	e58e3008	 str         r3, [lr, #8]

; 212  :         INTERRUPTS_ENABLE(enabled);

  000bc	e1a00006	 mov         r0, r6
  000c0	e58e200c	 str         r2, [lr, #0xC]
  000c4	eb000000	 bl          INTERRUPTS_ENABLE
  000c8		 |$cleanUp$43175|

; 213  :     }
; 214  : 
; 215  : cleanUp:
; 216  :     OALMSG(OAL_RTC&&OAL_FUNC, (L"-OEMSetAlarmTime(rc = %d)\r\n", rc));

  000c8	e5993440	 ldr         r3, [r9, #0x440]
  000cc	e3130040	 tst         r3, #0x40
  000d0	13130004	 tstne       r3, #4
  000d4	159f0014	 ldrne       r0, [pc, #0x14]
  000d8	11a01008	 movne       r1, r8
  000dc	1b000000	 blne        NKDbgPrintfW

; 217  :     return rc;
; 218  : }

  000e0	e1a00008	 mov         r0, r8
  000e4	e28dd018	 add         sp, sp, #0x18
  000e8	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  000ec	e12fff1e	 bx          lr
  000f0		 |$LN12@OEMSetAlar|
  000f0		 |$LN13@OEMSetAlar|
  000f0	00000000	 DCD         |??_C@_1DI@MKCLCMDC@?$AA?9?$AAO?$AAE?$AAM?$AAS?$AAe?$AAt?$AAA?$AAl?$AAa?$AAr?$AAm?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  000f4		 |$LN14@OEMSetAlar|
  000f4	00000000	 DCD         |g_pOALRTCTicks|
  000f8		 |$LN15@OEMSetAlar|
  000f8	00000000	 DCD         |??_C@_1FG@LDBAHALN@?$AA?$CL?$AAO?$AAE?$AAM?$AAS?$AAe?$AAt?$AAA?$AAl?$AAa?$AAr?$AAm?$AAT?$AAi?$AAm?$AAe?$AA?$CI?$AA?$CF?$AAd?$AA?1?$AA?$CF?$AAd?$AA?1?$AA?$CF?$AAd?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?$CF?$AAd?$AA?3@|
  000fc		 |$LN16@OEMSetAlar|
  000fc	00000000	 DCD         |dpCurSettings|
  00100		 |$M43277|

			 ENDP  ; |OEMSetAlarmTime|

	EXPORT	|OALIoCtlHalInitRTC|
	EXPORT	|??_C@_1DO@FGGICPPB@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@ODJLIDFO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DG@PECFOPGF@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?4?$AA?4?$AA?4?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|NKSetLastError|

  00000			 AREA	 |.pdata|, PDATA
|$T43304| DCD	|$LN15@OALIoCtlHa|
	DCD	0x40002a01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@FGGICPPB@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "R", 0x0, "T", 0x0, "C"
	DCB	0x0, "(", 0x0, "r", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@ODJLIDFO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "R", 0x0, "T", 0x0, "C"
	DCB	0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "p", 0x0, "a"
	DCB	0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@PECFOPGF@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?4?$AA?4?$AA?4?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "R", 0x0, "T", 0x0, "C"
	DCB	0x0, "(", 0x0, ".", 0x0, ".", 0x0, ".", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALIoCtlHalInitRTC| PROC

; 63   : ) {

  00000		 |$LN15@OALIoCtlHa|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M43301|
  00004	e1a07002	 mov         r7, r2
  00008	e1a06001	 mov         r6, r1

; 64   :     BOOL rc = FALSE;
; 65   :     SYSTEMTIME *pTime = (SYSTEMTIME*)pInpBuffer;
; 66   : 
; 67   :     OALMSG(OAL_IOCTL&&OAL_FUNC, (L"+OALIoCtlHalInitRTC(...)\r\n"));

  0000c	e59f5090	 ldr         r5, [pc, #0x90]
  00010	e3a04000	 mov         r4, #0
  00014	e5953440	 ldr         r3, [r5, #0x440]
  00018	e3130a01	 tst         r3, #1, 20
  0001c	13130004	 tstne       r3, #4
  00020	159f0078	 ldrne       r0, [pc, #0x78]
  00024	1b000000	 blne        NKDbgPrintfW

; 68   : 
; 69   :     if (pOutSize) {

  00028	e59d3018	 ldr         r3, [sp, #0x18]
  0002c	e3530000	 cmp         r3, #0

; 70   :         *pOutSize = 0;

  00030	13a02000	 movne       r2, #0
  00034	15832000	 strne       r2, [r3]

; 71   :     }
; 72   : 
; 73   :     // Validate inputs
; 74   :     if (pInpBuffer == NULL || inpSize < sizeof(SYSTEMTIME)) {

  00038	e3560000	 cmp         r6, #0
  0003c	0a000005	 beq         |$LN1@OALIoCtlHa|
  00040	e3570010	 cmp         r7, #0x10
  00044	3a000003	 bcc         |$LN1@OALIoCtlHa|

; 79   :         goto cleanUp;
; 80   :     }
; 81   : 
; 82   :     rc = OEMSetRealTime(pTime);

  00048	e1a00006	 mov         r0, r6
  0004c	eb000000	 bl          OEMSetRealTime
  00050	e1a04000	 mov         r4, r0
  00054	ea000006	 b           |$LN12@OALIoCtlHa|
  00058		 |$LN1@OALIoCtlHa|

; 75   :         NKSetLastError(ERROR_INVALID_PARAMETER);

  00058	e3a00057	 mov         r0, #0x57
  0005c	eb000000	 bl          NKSetLastError

; 76   :         OALMSG(OAL_ERROR, (
; 77   :             L"ERROR: OALIoCtlHalInitRTC: Invalid parameter\r\n"
; 78   :         ));

  00060	e5953440	 ldr         r3, [r5, #0x440]
  00064	e3130001	 tst         r3, #1
  00068	0a000002	 beq         |$cleanUp$43132|
  0006c	e59f0028	 ldr         r0, [pc, #0x28]
  00070	eb000000	 bl          NKDbgPrintfW
  00074		 |$LN12@OALIoCtlHa|
  00074	e5953440	 ldr         r3, [r5, #0x440]
  00078		 |$cleanUp$43132|

; 83   :     
; 84   : cleanUp:
; 85   :     OALMSG(OAL_IOCTL&&OAL_FUNC, (L"-OALIoCtlHalInitRTC(rc = %d)\r\n", rc));

  00078	e3130a01	 tst         r3, #1, 20
  0007c	13130004	 tstne       r3, #4
  00080	159f0010	 ldrne       r0, [pc, #0x10]
  00084	11a01004	 movne       r1, r4
  00088	1b000000	 blne        NKDbgPrintfW

; 86   :     return rc;
; 87   : }

  0008c	e1a00004	 mov         r0, r4
  00090	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00094	e12fff1e	 bx          lr
  00098		 |$LN16@OALIoCtlHa|
  00098		 |$LN17@OALIoCtlHa|
  00098	00000000	 DCD         |??_C@_1DO@FGGICPPB@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  0009c		 |$LN18@OALIoCtlHa|
  0009c	00000000	 DCD         |??_C@_1FO@ODJLIDFO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl@|
  000a0		 |$LN19@OALIoCtlHa|
  000a0	00000000	 DCD         |??_C@_1DG@PECFOPGF@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAI?$AAn?$AAi?$AAt?$AAR?$AAT?$AAC?$AA?$CI?$AA?4?$AA?4?$AA?4?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  000a4		 |$LN20@OALIoCtlHa|
  000a4	00000000	 DCD         |dpCurSettings|
  000a8		 |$M43302|

			 ENDP  ; |OALIoCtlHalInitRTC|

	END
