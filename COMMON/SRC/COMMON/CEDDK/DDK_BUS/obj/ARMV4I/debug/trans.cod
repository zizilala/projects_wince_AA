; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\COMMON\CEDDK\DDK_BUS\trans.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|??_C@_1HI@KDCKKOAP@?$AAH?$AAa?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAl?$AAa?$AAt?$AAe?$AAB?$AAu?$AAs?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CF?$AA0@| [ DATA ] ; `string'
	EXPORT	|HalTranslateBusAddress|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|KernelIoControl|
	IMPORT	|memset|

  00000			 AREA	 |.pdata|, PDATA
|$T43057| DCD	|$LN12@HalTransla|
	DCD	0x40005d04
; File c:\wince600\platform\common\src\common\ceddk\ddk_bus\trans.c

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@KDCKKOAP@?$AAH?$AAa?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAl?$AAa?$AAt?$AAe?$AAB?$AAu?$AAs?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CF?$AA0@| DCB "H"
	DCB	0x0, "a", 0x0, "l", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n"
	DCB	0x0, "s", 0x0, "l", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "B"
	DCB	0x0, "u", 0x0, "s", 0x0, "A", 0x0, "d", 0x0, "d", 0x0, "r"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "-"
	DCB	0x0, "-", 0x0, ">", 0x0, " ", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HalTranslateBusAddress| PROC

; 32   : ) {

  00000		 |$LN12@HalTransla|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd068	 sub         sp, sp, #0x68
  00010		 |$M43054|

; 33   :     BOOLEAN rc = FALSE;

  00010	e3a03000	 mov         r3, #0
  00014	e5cd3014	 strb        r3, [sp, #0x14]

; 34   :     OAL_DDK_PARAMS params;
; 35   :     UINT32 outSize;
; 36   : 
; 37   :     // Check input parameters
; 38   :     if (pAddressSpace == NULL || pSystemAddress == NULL) return FALSE;

  00018	e59d3080	 ldr         r3, [sp, #0x80]
  0001c	e3530000	 cmp         r3, #0
  00020	0a000002	 beq         |$LN6@HalTransla|
  00024	e59d3084	 ldr         r3, [sp, #0x84]
  00028	e3530000	 cmp         r3, #0
  0002c	1a000002	 bne         |$LN7@HalTransla|
  00030		 |$LN6@HalTransla|
  00030	e3a03000	 mov         r3, #0
  00034	e5cd3044	 strb        r3, [sp, #0x44]
  00038	ea000047	 b           |$LN8@HalTransla|
  0003c		 |$LN7@HalTransla|

; 39   : 
; 40   :     memset(&params, 0, sizeof(params));

  0003c	e3a02028	 mov         r2, #0x28
  00040	e3a01000	 mov         r1, #0
  00044	e28d0018	 add         r0, sp, #0x18
  00048	eb000000	 bl          memset

; 41   :     params.function = IOCTL_OAL_TRANSBUSADDRESS;

  0004c	e3a03005	 mov         r3, #5
  00050	e58d3018	 str         r3, [sp, #0x18]

; 42   :     params.transAddress.ifcType = ifcType;

  00054	e59d3070	 ldr         r3, [sp, #0x70]
  00058	e58d3020	 str         r3, [sp, #0x20]

; 43   :     switch (ifcType) {

  0005c	e59d3070	 ldr         r3, [sp, #0x70]
  00060	e3530005	 cmp         r3, #5
  00064	0a000000	 beq         |$LN3@HalTransla|
  00068	ea000003	 b           |$LN2@HalTransla|
  0006c		 |$LN3@HalTransla|

; 44   :     case PCIBus:
; 45   :         params.transAddress.busNumber = busNumber >> 8;

  0006c	e59d3074	 ldr         r3, [sp, #0x74]
  00070	e1a03423	 mov         r3, r3, lsr #8
  00074	e58d3024	 str         r3, [sp, #0x24]

; 46   :         break;

  00078	ea000001	 b           |$LN4@HalTransla|
  0007c		 |$LN2@HalTransla|

; 47   :     default:
; 48   :         params.transAddress.busNumber = busNumber;

  0007c	e59d3074	 ldr         r3, [sp, #0x74]
  00080	e58d3024	 str         r3, [sp, #0x24]
  00084		 |$LN4@HalTransla|

; 49   :         break;
; 50   :     }        
; 51   :     params.transAddress.space = *pAddressSpace;

  00084	e59d3080	 ldr         r3, [sp, #0x80]
  00088	e5933000	 ldr         r3, [r3]
  0008c	e58d3028	 str         r3, [sp, #0x28]

; 52   :     params.transAddress.address = busAddress.QuadPart;

  00090	e59d3078	 ldr         r3, [sp, #0x78]
  00094	e58d3030	 str         r3, [sp, #0x30]
  00098	e59d307c	 ldr         r3, [sp, #0x7C]
  0009c	e58d3034	 str         r3, [sp, #0x34]

; 53   : 
; 54   :     if (!KernelIoControl(
; 55   :         IOCTL_HAL_DDK_CALL, &params, sizeof(params), NULL, 0, &outSize
; 56   :     )) goto cleanUp;

  000a0	e28d3040	 add         r3, sp, #0x40
  000a4	e58d3004	 str         r3, [sp, #4]
  000a8	e3a03000	 mov         r3, #0
  000ac	e58d3000	 str         r3, [sp]
  000b0	e3a03000	 mov         r3, #0
  000b4	e3a02028	 mov         r2, #0x28
  000b8	e28d1018	 add         r1, sp, #0x18
  000bc	e59f00ac	 ldr         r0, [pc, #0xAC]
  000c0	eb000000	 bl          KernelIoControl
  000c4	e58d0064	 str         r0, [sp, #0x64]
  000c8	e59d3064	 ldr         r3, [sp, #0x64]
  000cc	e3530000	 cmp         r3, #0
  000d0	1a000000	 bne         |$LN1@HalTransla|
  000d4	ea00000b	 b           |$cleanUp$43010|
  000d8		 |$LN1@HalTransla|

; 57   : 
; 58   :     rc = params.rc;

  000d8	e59d301c	 ldr         r3, [sp, #0x1C]
  000dc	e20330ff	 and         r3, r3, #0xFF
  000e0	e5cd3014	 strb        r3, [sp, #0x14]

; 59   :     *pAddressSpace = params.transAddress.space;

  000e4	e59d2028	 ldr         r2, [sp, #0x28]
  000e8	e59d3080	 ldr         r3, [sp, #0x80]
  000ec	e5832000	 str         r2, [r3]

; 60   :     pSystemAddress->QuadPart = params.transAddress.address;

  000f0	e59d2030	 ldr         r2, [sp, #0x30]
  000f4	e59d3084	 ldr         r3, [sp, #0x84]
  000f8	e5832000	 str         r2, [r3]
  000fc	e59d2034	 ldr         r2, [sp, #0x34]
  00100	e59d3084	 ldr         r3, [sp, #0x84]
  00104	e5832004	 str         r2, [r3, #4]
  00108		 |$cleanUp$43010|

; 61   :     
; 62   : cleanUp:
; 63   :     DEBUGMSG(TRUE, (
; 64   :         L"HalTranslateBusAddress: %d %d %08x%08x %d --> %08x%08x %d\r\n", 
; 65   :         ifcType, busNumber, busAddress.HighPart, busAddress.LowPart,
; 66   :         *pAddressSpace, pSystemAddress->HighPart, pSystemAddress->LowPart, rc
; 67   :     ));      

  00108	e5dd3014	 ldrb        r3, [sp, #0x14]
  0010c	e58d3010	 str         r3, [sp, #0x10]
  00110	e59d3084	 ldr         r3, [sp, #0x84]
  00114	e5933000	 ldr         r3, [r3]
  00118	e58d300c	 str         r3, [sp, #0xC]
  0011c	e59d3084	 ldr         r3, [sp, #0x84]
  00120	e2833004	 add         r3, r3, #4
  00124	e5933000	 ldr         r3, [r3]
  00128	e58d3008	 str         r3, [sp, #8]
  0012c	e59d3080	 ldr         r3, [sp, #0x80]
  00130	e5933000	 ldr         r3, [r3]
  00134	e58d3004	 str         r3, [sp, #4]
  00138	e59d3078	 ldr         r3, [sp, #0x78]
  0013c	e58d3000	 str         r3, [sp]
  00140	e59d307c	 ldr         r3, [sp, #0x7C]
  00144	e59d2074	 ldr         r2, [sp, #0x74]
  00148	e59d1070	 ldr         r1, [sp, #0x70]
  0014c	e59f0018	 ldr         r0, [pc, #0x18]
  00150	eb000000	 bl          NKDbgPrintfW

; 68   :     return rc;

  00154	e5dd3014	 ldrb        r3, [sp, #0x14]
  00158	e5cd3044	 strb        r3, [sp, #0x44]
  0015c		 |$LN8@HalTransla|

; 69   : }

  0015c	e5dd0044	 ldrb        r0, [sp, #0x44]
  00160	e28dd068	 add         sp, sp, #0x68
  00164	e89d6000	 ldmia       sp, {sp, lr}
  00168	e12fff1e	 bx          lr
  0016c		 |$LN13@HalTransla|
  0016c		 |$LN14@HalTransla|
  0016c	00000000	 DCD         |??_C@_1HI@KDCKKOAP@?$AAH?$AAa?$AAl?$AAT?$AAr?$AAa?$AAn?$AAs?$AAl?$AAa?$AAt?$AAe?$AAB?$AAu?$AAs?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CF?$AA0@|
  00170		 |$LN15@HalTransla|
  00170	01010014	 DCD         0x1010014
  00174		 |$M43055|

			 ENDP  ; |HalTranslateBusAddress|

	EXPORT	|HalTranslateSystemAddress|

  00008			 AREA	 |.pdata|, PDATA
|$T43068| DCD	|$LN11@HalTransla@2|
	DCD	0x40003d04
; Function compile flags: /Odtp

  00174			 AREA	 |.text|, CODE, ARM

  00174		 |HalTranslateSystemAddress| PROC

; 82   : ) {

  00174		 |$LN11@HalTransla@2|
  00174	e1a0c00d	 mov         r12, sp
  00178	e92d000f	 stmdb       sp!, {r0 - r3}
  0017c	e92d5000	 stmdb       sp!, {r12, lr}
  00180	e24dd048	 sub         sp, sp, #0x48
  00184		 |$M43065|

; 83   :     BOOLEAN rc = FALSE;

  00184	e3a03000	 mov         r3, #0
  00188	e5cd3008	 strb        r3, [sp, #8]

; 84   :     OAL_DDK_PARAMS params;
; 85   :     UINT32 outSize;
; 86   : 
; 87   :     // Check input parameters
; 88   :     if (pBusAddress == NULL) goto cleanUp;

  0018c	e59d3060	 ldr         r3, [sp, #0x60]
  00190	e3530000	 cmp         r3, #0
  00194	1a000000	 bne         |$LN6@HalTransla@2|
  00198	ea00002b	 b           |$cleanUp$43027|
  0019c		 |$LN6@HalTransla@2|

; 89   : 
; 90   :     // Prepare input parameters for HAL call
; 91   :     memset(&params, 0, sizeof(params));

  0019c	e3a02028	 mov         r2, #0x28
  001a0	e3a01000	 mov         r1, #0
  001a4	e28d000c	 add         r0, sp, #0xC
  001a8	eb000000	 bl          memset

; 92   :     params.function = IOCTL_OAL_TRANSSYSADDRESS;

  001ac	e3a03006	 mov         r3, #6
  001b0	e58d300c	 str         r3, [sp, #0xC]

; 93   :     params.transAddress.ifcType = ifcType;

  001b4	e59d3050	 ldr         r3, [sp, #0x50]
  001b8	e58d3014	 str         r3, [sp, #0x14]

; 94   :     switch (ifcType) {

  001bc	e59d3050	 ldr         r3, [sp, #0x50]
  001c0	e3530005	 cmp         r3, #5
  001c4	0a000000	 beq         |$LN3@HalTransla@2|
  001c8	ea000003	 b           |$LN2@HalTransla@2|
  001cc		 |$LN3@HalTransla@2|

; 95   :     case PCIBus:
; 96   :         params.transAddress.busNumber = busNumber >> 8;

  001cc	e59d3054	 ldr         r3, [sp, #0x54]
  001d0	e1a03423	 mov         r3, r3, lsr #8
  001d4	e58d3018	 str         r3, [sp, #0x18]

; 97   :         break;

  001d8	ea000001	 b           |$LN4@HalTransla@2|
  001dc		 |$LN2@HalTransla@2|

; 98   :     default:
; 99   :         params.transAddress.busNumber = busNumber;

  001dc	e59d3054	 ldr         r3, [sp, #0x54]
  001e0	e58d3018	 str         r3, [sp, #0x18]
  001e4		 |$LN4@HalTransla@2|

; 100  :         break;
; 101  :     }        
; 102  :     params.transAddress.address = systemAddress.QuadPart;

  001e4	e59d3058	 ldr         r3, [sp, #0x58]
  001e8	e58d3024	 str         r3, [sp, #0x24]
  001ec	e59d305c	 ldr         r3, [sp, #0x5C]
  001f0	e58d3028	 str         r3, [sp, #0x28]

; 103  : 
; 104  :     // Call to HAL
; 105  :     if (!KernelIoControl(
; 106  :         IOCTL_HAL_DDK_CALL, &params, sizeof(params), NULL, 0, &outSize
; 107  :     )) goto cleanUp;

  001f4	e28d3034	 add         r3, sp, #0x34
  001f8	e58d3004	 str         r3, [sp, #4]
  001fc	e3a03000	 mov         r3, #0
  00200	e58d3000	 str         r3, [sp]
  00204	e3a03000	 mov         r3, #0
  00208	e3a02028	 mov         r2, #0x28
  0020c	e28d100c	 add         r1, sp, #0xC
  00210	e59f004c	 ldr         r0, [pc, #0x4C]
  00214	eb000000	 bl          KernelIoControl
  00218	e58d0044	 str         r0, [sp, #0x44]
  0021c	e59d3044	 ldr         r3, [sp, #0x44]
  00220	e3530000	 cmp         r3, #0
  00224	1a000000	 bne         |$LN1@HalTransla@2|
  00228	ea000007	 b           |$cleanUp$43027|
  0022c		 |$LN1@HalTransla@2|

; 108  : 
; 109  :     // Get output parameters from HAL call
; 110  :     pBusAddress->QuadPart = params.transAddress.address;

  0022c	e59d2024	 ldr         r2, [sp, #0x24]
  00230	e59d3060	 ldr         r3, [sp, #0x60]
  00234	e5832000	 str         r2, [r3]
  00238	e59d2028	 ldr         r2, [sp, #0x28]
  0023c	e59d3060	 ldr         r3, [sp, #0x60]
  00240	e5832004	 str         r2, [r3, #4]

; 111  : 
; 112  :     // Done
; 113  :     rc = TRUE;

  00244	e3a03001	 mov         r3, #1
  00248	e5cd3008	 strb        r3, [sp, #8]
  0024c		 |$cleanUp$43027|

; 114  :     
; 115  : cleanUp:
; 116  :     return rc;

  0024c	e5dd3008	 ldrb        r3, [sp, #8]
  00250	e5cd3040	 strb        r3, [sp, #0x40]

; 117  : }

  00254	e5dd0040	 ldrb        r0, [sp, #0x40]
  00258	e28dd048	 add         sp, sp, #0x48
  0025c	e89d6000	 ldmia       sp, {sp, lr}
  00260	e12fff1e	 bx          lr
  00264		 |$LN12@HalTransla@2|
  00264		 |$LN13@HalTransla@2|
  00264	01010014	 DCD         0x1010014
  00268		 |$M43066|

			 ENDP  ; |HalTranslateSystemAddress|

	END
