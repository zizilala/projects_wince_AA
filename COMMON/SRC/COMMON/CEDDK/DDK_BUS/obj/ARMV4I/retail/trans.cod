; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\COMMON\CEDDK\DDK_BUS\trans.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|HalTranslateBusAddress|
	IMPORT	|KernelIoControl|
	IMPORT	|memset|
; File c:\wince600\platform\common\src\common\ceddk\ddk_bus\trans.c

  00000			 AREA	 |.pdata|, PDATA
|$T43089| DCD	|$LN12@HalTransla|
	DCD	0x40003602
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HalTranslateBusAddress| PROC

; 32   : ) {

  00000		 |$LN12@HalTransla|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004	e24dd034	 sub         sp, sp, #0x34
  00008		 |$M43086|
  00008	e1a09003	 mov         r9, r3
  0000c	e1a0a002	 mov         r10, r2
  00010	e1a06001	 mov         r6, r1
  00014	e1a08000	 mov         r8, r0

; 33   :     BOOLEAN rc = FALSE;
; 34   :     OAL_DDK_PARAMS params;
; 35   :     UINT32 outSize;
; 36   : 
; 37   :     // Check input parameters
; 38   :     if (pAddressSpace == NULL || pSystemAddress == NULL) return FALSE;

  00018	e59d7054	 ldr         r7, [sp, #0x54]
  0001c	e3a04000	 mov         r4, #0
  00020	e3570000	 cmp         r7, #0
  00024	0a000025	 beq         |$LN6@HalTransla|
  00028	e59d5058	 ldr         r5, [sp, #0x58]
  0002c	e3550000	 cmp         r5, #0
  00030	0a000022	 beq         |$LN6@HalTransla|

; 39   : 
; 40   :     memset(&params, 0, sizeof(params));

  00034	e3a02028	 mov         r2, #0x28
  00038	e3a01000	 mov         r1, #0
  0003c	e28d000c	 add         r0, sp, #0xC
  00040	eb000000	 bl          memset

; 41   :     params.function = IOCTL_OAL_TRANSBUSADDRESS;

  00044	e3a03005	 mov         r3, #5

; 42   :     params.transAddress.ifcType = ifcType;
; 43   :     switch (ifcType) {

  00048	e3580005	 cmp         r8, #5
  0004c	e58d300c	 str         r3, [sp, #0xC]

; 44   :     case PCIBus:
; 45   :         params.transAddress.busNumber = busNumber >> 8;

  00050	01a03426	 moveq       r3, r6, lsr #8

; 46   :         break;
; 47   :     default:
; 48   :         params.transAddress.busNumber = busNumber;

  00054	158d6018	 strne       r6, [sp, #0x18]
  00058	058d3018	 streq       r3, [sp, #0x18]

; 49   :         break;
; 50   :     }        
; 51   :     params.transAddress.space = *pAddressSpace;

  0005c	e5973000	 ldr         r3, [r7]

; 52   :     params.transAddress.address = busAddress.QuadPart;
; 53   : 
; 54   :     if (!KernelIoControl(
; 55   :         IOCTL_HAL_DDK_CALL, &params, sizeof(params), NULL, 0, &outSize
; 56   :     )) goto cleanUp;

  00060	e59f006c	 ldr         r0, [pc, #0x6C]
  00064	e28de008	 add         lr, sp, #8
  00068	e58d301c	 str         r3, [sp, #0x1C]
  0006c	e3a06000	 mov         r6, #0
  00070	e3a03000	 mov         r3, #0
  00074	e3a02028	 mov         r2, #0x28
  00078	e28d100c	 add         r1, sp, #0xC
  0007c	e58d8014	 str         r8, [sp, #0x14]
  00080	e58da024	 str         r10, [sp, #0x24]
  00084	e58d9028	 str         r9, [sp, #0x28]
  00088	e58de004	 str         lr, [sp, #4]
  0008c	e58d6000	 str         r6, [sp]
  00090	eb000000	 bl          KernelIoControl
  00094	e3500000	 cmp         r0, #0
  00098	0a000009	 beq         |$LN8@HalTransla|

; 57   : 
; 58   :     rc = params.rc;
; 59   :     *pAddressSpace = params.transAddress.space;

  0009c	e59d101c	 ldr         r1, [sp, #0x1C]
  000a0	e59d0010	 ldr         r0, [sp, #0x10]

; 60   :     pSystemAddress->QuadPart = params.transAddress.address;

  000a4	e59d3024	 ldr         r3, [sp, #0x24]
  000a8	e59d2028	 ldr         r2, [sp, #0x28]
  000ac	e5871000	 str         r1, [r7]
  000b0	e5853000	 str         r3, [r5]
  000b4	e5852004	 str         r2, [r5, #4]
  000b8	e20040ff	 and         r4, r0, #0xFF
  000bc		 |$cleanUp$43034|

; 61   :     
; 62   : cleanUp:
; 63   :     DEBUGMSG(TRUE, (
; 64   :         L"HalTranslateBusAddress: %d %d %08x%08x %d --> %08x%08x %d\r\n", 
; 65   :         ifcType, busNumber, busAddress.HighPart, busAddress.LowPart,
; 66   :         *pAddressSpace, pSystemAddress->HighPart, pSystemAddress->LowPart, rc
; 67   :     ));      
; 68   :     return rc;

  000bc	ea000000	 b           |$LN8@HalTransla|
  000c0		 |$LN6@HalTransla|

; 33   :     BOOLEAN rc = FALSE;
; 34   :     OAL_DDK_PARAMS params;
; 35   :     UINT32 outSize;
; 36   : 
; 37   :     // Check input parameters
; 38   :     if (pAddressSpace == NULL || pSystemAddress == NULL) return FALSE;

  000c0	e3a04000	 mov         r4, #0
  000c4		 |$LN8@HalTransla|

; 69   : }

  000c4	e1a00004	 mov         r0, r4
  000c8	e28dd034	 add         sp, sp, #0x34
  000cc	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  000d0	e12fff1e	 bx          lr
  000d4		 |$LN13@HalTransla|
  000d4		 |$LN14@HalTransla|
  000d4	01010014	 DCD         0x1010014
  000d8		 |$M43087|

			 ENDP  ; |HalTranslateBusAddress|

	EXPORT	|HalTranslateSystemAddress|

  00000			 AREA	 |.pdata|, PDATA
|$T43106| DCD	|$LN11@HalTransla@2|
	DCD	0x40002b02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |HalTranslateSystemAddress| PROC

; 82   : ) {

  00000		 |$LN11@HalTransla@2|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004	e24dd034	 sub         sp, sp, #0x34
  00008		 |$M43103|
  00008	e1a08003	 mov         r8, r3
  0000c	e1a09002	 mov         r9, r2
  00010	e1a06001	 mov         r6, r1
  00014	e1a07000	 mov         r7, r0

; 83   :     BOOLEAN rc = FALSE;
; 84   :     OAL_DDK_PARAMS params;
; 85   :     UINT32 outSize;
; 86   : 
; 87   :     // Check input parameters
; 88   :     if (pBusAddress == NULL) goto cleanUp;

  00018	e59d4050	 ldr         r4, [sp, #0x50]
  0001c	e3a05000	 mov         r5, #0
  00020	e3540000	 cmp         r4, #0
  00024	0a00001b	 beq         |$cleanUp$43050|

; 89   : 
; 90   :     // Prepare input parameters for HAL call
; 91   :     memset(&params, 0, sizeof(params));

  00028	e3a02028	 mov         r2, #0x28
  0002c	e3a01000	 mov         r1, #0
  00030	e28d000c	 add         r0, sp, #0xC
  00034	eb000000	 bl          memset

; 92   :     params.function = IOCTL_OAL_TRANSSYSADDRESS;

  00038	e3a03006	 mov         r3, #6

; 93   :     params.transAddress.ifcType = ifcType;
; 94   :     switch (ifcType) {

  0003c	e3570005	 cmp         r7, #5
  00040	e58d300c	 str         r3, [sp, #0xC]

; 95   :     case PCIBus:
; 96   :         params.transAddress.busNumber = busNumber >> 8;
; 97   :         break;
; 98   :     default:
; 99   :         params.transAddress.busNumber = busNumber;
; 100  :         break;
; 101  :     }        
; 102  :     params.transAddress.address = systemAddress.QuadPart;
; 103  : 
; 104  :     // Call to HAL
; 105  :     if (!KernelIoControl(
; 106  :         IOCTL_HAL_DDK_CALL, &params, sizeof(params), NULL, 0, &outSize
; 107  :     )) goto cleanUp;

  00044	e59f005c	 ldr         r0, [pc, #0x5C]
  00048	01a03426	 moveq       r3, r6, lsr #8
  0004c	158d6018	 strne       r6, [sp, #0x18]
  00050	058d3018	 streq       r3, [sp, #0x18]
  00054	e28de008	 add         lr, sp, #8
  00058	e3a06000	 mov         r6, #0
  0005c	e3a03000	 mov         r3, #0
  00060	e3a02028	 mov         r2, #0x28
  00064	e28d100c	 add         r1, sp, #0xC
  00068	e58d7014	 str         r7, [sp, #0x14]
  0006c	e58d9024	 str         r9, [sp, #0x24]
  00070	e58d8028	 str         r8, [sp, #0x28]
  00074	e58de004	 str         lr, [sp, #4]
  00078	e58d6000	 str         r6, [sp]
  0007c	eb000000	 bl          KernelIoControl
  00080	e3500000	 cmp         r0, #0

; 108  : 
; 109  :     // Get output parameters from HAL call
; 110  :     pBusAddress->QuadPart = params.transAddress.address;

  00084	159d3024	 ldrne       r3, [sp, #0x24]
  00088	159d2028	 ldrne       r2, [sp, #0x28]

; 111  : 
; 112  :     // Done
; 113  :     rc = TRUE;

  0008c	13a05001	 movne       r5, #1
  00090	15843000	 strne       r3, [r4]
  00094	15842004	 strne       r2, [r4, #4]
  00098		 |$cleanUp$43050|

; 114  :     
; 115  : cleanUp:
; 116  :     return rc;
; 117  : }

  00098	e1a00005	 mov         r0, r5
  0009c	e28dd034	 add         sp, sp, #0x34
  000a0	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  000a4	e12fff1e	 bx          lr
  000a8		 |$LN12@HalTransla@2|
  000a8		 |$LN13@HalTransla@2|
  000a8	01010014	 DCD         0x1010014
  000ac		 |$M43104|

			 ENDP  ; |HalTranslateSystemAddress|

	END
