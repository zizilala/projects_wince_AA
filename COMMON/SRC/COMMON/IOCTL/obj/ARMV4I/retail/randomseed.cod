; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\COMMON\IOCTL\randomseed.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|OALIoCtlHalGetRandomSeed|
	EXPORT	|??_C@_1EK@CIONDGAI@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAR?$AAa?$AAn?$AAd?$AAo?$AAm?$AAS?$AAe?$AAe?$AAd?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GI@DGLGODAM@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAR?$AAa?$AAn?$AAd?$AAo?$AAm?$AAS?$AAe?$AAe?$AAd?$AA?3?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@KGKJCIAM@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAc?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAR?$AAa?$AAn?$AAd?$AAo?$AAm?$AAS?$AAe?$AAe?$AAd?$AA?$CI?$AA?4?$AA?4?$AA?4?$AA?$CJ?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	IMPORT	|OEMGetRealTime|
	IMPORT	|NKSetLastError|
	IMPORT	|g_pOemGlobal|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_cookie|
	IMPORT	|memset|
	IMPORT	|memcpy|
	IMPORT	|__security_check_cookie|
; File c:\wince600\platform\common\src\common\ioctl\randomseed.c

  00000			 AREA	 |.pdata|, PDATA
|$T43202| DCD	|$LN31@OALIoCtlHa|
	DCD	0xc0007102

  00000			 AREA	 |.xdata|, DATA
|$T43198| DCD	0xffffffd8

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@CIONDGAI@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAR?$AAa?$AAn?$AAd?$AAo?$AAm?$AAS?$AAe?$AAe?$AAd?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "R", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "o", 0x0, "m", 0x0, "S", 0x0, "e", 0x0, "e", 0x0, "d"
	DCB	0x0, "(", 0x0, "r", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@DGLGODAM@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAR?$AAa?$AAn?$AAd?$AAo?$AAm?$AAS?$AAe?$AAe?$AAd?$AA?3?$AA?5@| DCB "W"
	DCB	0x0, "A", 0x0, "R", 0x0, "N", 0x0, ":", 0x0, " ", 0x0, "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C", 0x0, "t"
	DCB	0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G", 0x0, "e"
	DCB	0x0, "t", 0x0, "R", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "o"
	DCB	0x0, "m", 0x0, "S", 0x0, "e", 0x0, "e", 0x0, "d", 0x0, ":"
	DCB	0x0, " ", 0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l"
	DCB	0x0, "i", 0x0, "d", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r"
	DCB	0x0, "a", 0x0, "m", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@KGKJCIAM@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAc?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAR?$AAa?$AAn?$AAd?$AAo?$AAm?$AAS?$AAe?$AAe?$AAd?$AA?$CI?$AA?4?$AA?4?$AA?4?$AA?$CJ?$AA?$AN?$AA?6@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "c"
	DCB	0x0, "t", 0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "R", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "o", 0x0, "m", 0x0, "S", 0x0, "e", 0x0, "e", 0x0, "d"
	DCB	0x0, "(", 0x0, ".", 0x0, ".", 0x0, ".", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T43198|

  00008		 |OALIoCtlHalGetRandomSeed| PROC

; 33   : {

  00008		 |$LN31@OALIoCtlHa|
  00008	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  0000c	e24dd034	 sub         sp, sp, #0x34
  00010		 |$M43199|
  00010	e1a09003	 mov         r9, r3
  00014	e59f21ac	 ldr         r2, [pc, #0x1AC]
  00018	e5922000	 ldr         r2, [r2]
  0001c	e58d2030	 str         r2, [sp, #0x30]

; 34   :     BOOL rc = FALSE;
; 35   :     LARGE_INTEGER perfCounterEntropy;
; 36   :     SYSTEMTIME systemTimeEntropy;
; 37   : 
; 38   :     UINT32 maxAllowedRequest = 1024;
; 39   : 
; 40   :     OALMSG(OAL_IOCTL&&OAL_FUNC, (L"+OALIoctlHalGetRandomSeed(...)\r\n"));

  00020	e59f819c	 ldr         r8, [pc, #0x19C]
  00024	e59d405c	 ldr         r4, [sp, #0x5C]
  00028	e3a05000	 mov         r5, #0
  0002c	e5982440	 ldr         r2, [r8, #0x440]
  00030	e3120a01	 tst         r2, #1, 20
  00034	13120004	 tstne       r2, #4
  00038	159f0180	 ldrne       r0, [pc, #0x180]
  0003c	1b000000	 blne        NKDbgPrintfW

; 41   :     if (lpOutBuf == NULL || nOutBufSize > maxAllowedRequest)

  00040	e3590000	 cmp         r9, #0
  00044	0a000048	 beq         |$LN16@OALIoCtlHa|
  00048	e59d6058	 ldr         r6, [sp, #0x58]
  0004c	e3560b01	 cmp         r6, #1, 22
  00050	8a000045	 bhi         |$LN16@OALIoCtlHa|

; 44   :         OALMSG(OAL_WARN, (L"WARN: OALIoCtlHalGetRandomSeed: Invalid parameter\r\n"));
; 45   :         goto cleanUp;
; 46   :     }
; 47   : 
; 48   :     if(!pQueryPerformanceCounter)

  00054	e59f3160	 ldr         r3, [pc, #0x160]
  00058	e5932000	 ldr         r2, [r3]
  0005c	e5923030	 ldr         r3, [r2, #0x30]
  00060	e3530000	 cmp         r3, #0
  00064	1a000005	 bne         |$LN15@OALIoCtlHa|

; 49   :     {   
; 50   :         //function pointer invalid - platform doesn't have a valid performance counter
; 51   :         if(lpBytesReturned)

  00068	e3540000	 cmp         r4, #0

; 52   :         {
; 53   :             *lpBytesReturned = 0;

  0006c	13a03000	 movne       r3, #0

; 54   :         }
; 55   :         NKSetLastError(ERROR_NOT_SUPPORTED);

  00070	e3a00032	 mov         r0, #0x32
  00074	15843000	 strne       r3, [r4]
  00078	eb000000	 bl          NKSetLastError

; 56   :         goto cleanUp;

  0007c	ea000040	 b           |$cleanUp$43127|
  00080		 |$LN15@OALIoCtlHa|

; 57   :     }
; 58   : 
; 59   :     if(pQueryPerformanceCounter(&perfCounterEntropy))

  00080	e5923030	 ldr         r3, [r2, #0x30]
  00084	e28d0000	 add         r0, sp, #0
  00088	e1a0e00f	 mov         lr, pc
  0008c	e12fff13	 bx          r3
  00090	e3500000	 cmp         r0, #0
  00094	0a00002d	 beq         |$LN13@OALIoCtlHa|

; 60   :     {
; 61   :         //generated random number successfully
; 62   :         BYTE entropyBuffer[sizeof(perfCounterEntropy)+sizeof(systemTimeEntropy)];
; 63   :         UINT32 numBytesToFill; //we only have a small amount of random data, so don't fill up more than that amount
; 64   :         UINT32 fillBufferSize = sizeof(perfCounterEntropy); //how many bytes of random data we have available to us
; 65   : 
; 66   :         memcpy(entropyBuffer,&perfCounterEntropy,sizeof(perfCounterEntropy)); //copy performance counter data into the buffer

  00098	e59d3000	 ldr         r3, [sp]
  0009c	e59d2004	 ldr         r2, [sp, #4]

; 67   : 
; 68   :         if(OEMGetRealTime(&systemTimeEntropy))

  000a0	e28d0008	 add         r0, sp, #8
  000a4	e58d3018	 str         r3, [sp, #0x18]
  000a8	e58d201c	 str         r2, [sp, #0x1C]
  000ac	e3a07008	 mov         r7, #8
  000b0	eb000000	 bl          OEMGetRealTime
  000b4	e3500000	 cmp         r0, #0

; 69   :         {
; 70   :             fillBufferSize += sizeof(systemTimeEntropy); //real-time clock can provide additional random data
; 71   :             memcpy(((BYTE*)entropyBuffer)+sizeof(perfCounterEntropy),&systemTimeEntropy,fillBufferSize - sizeof(perfCounterEntropy)); //copy systemtime data (if we have it) into the buffer

  000b8	128d1008	 addne       r1, sp, #8
  000bc	128d0020	 addne       r0, sp, #0x20
  000c0	13a02010	 movne       r2, #0x10
  000c4	13a07018	 movne       r7, #0x18
  000c8	1b000000	 blne        memcpy

; 72   :         }
; 73   : 
; 74   :         if(nOutBufSize < fillBufferSize)

  000cc	e1560007	 cmp         r6, r7
  000d0	2a000010	 bcs         |$LN11@OALIoCtlHa|

; 75   :         {
; 76   :             UINT32 xorLoopCounter;
; 77   :             UINT32 entropyBufferPos = 0;

  000d4	e3a00000	 mov         r0, #0

; 78   :             numBytesToFill = nOutBufSize; //the caller may want less random data than have to give, so use XOR to distribute leftover randomness

  000d8	e1a05006	 mov         r5, r6

; 79   :             for(xorLoopCounter = numBytesToFill; xorLoopCounter < fillBufferSize; xorLoopCounter++)

  000dc	e1a0e006	 mov         lr, r6
  000e0	e28da018	 add         r10, sp, #0x18
  000e4	e28db018	 add         r11, sp, #0x18
  000e8		 |$LL10@OALIoCtlHa|

; 80   :             {
; 81   :                 //XOR leftover random bytes to pack all of our randomness into the amount of bytes requested
; 82   :                 entropyBuffer[entropyBufferPos] = (entropyBuffer[entropyBufferPos] ^ entropyBuffer[xorLoopCounter]);

  000e8	e1a01000	 mov         r1, r0
  000ec	e7f1200a	 ldrb        r2, [r1, +r10]!
  000f0	e7de300b	 ldrb        r3, [lr, +r11]

; 83   :                 if(entropyBufferPos >= nOutBufSize)

  000f4	e1500006	 cmp         r0, r6

; 84   :                 {
; 85   :                    entropyBufferPos = 0;  //wrap back around to the beginning

  000f8	23a00000	 movcs       r0, #0
  000fc	e0233002	 eor         r3, r3, r2
  00100	e28ee001	 add         lr, lr, #1

; 86   :                 }
; 87   :                 else
; 88   :                 {
; 89   :                     entropyBufferPos++;

  00104	32800001	 addcc       r0, r0, #1
  00108	e5c13000	 strb        r3, [r1]
  0010c	e15e0007	 cmp         lr, r7
  00110	3afffff4	 bcc         |$LL10@OALIoCtlHa|

; 90   :                 }
; 91   :             }
; 92   :         }
; 93   :         else

  00114	ea000000	 b           |$LN5@OALIoCtlHa|
  00118		 |$LN11@OALIoCtlHa|

; 94   :         {
; 95   :             numBytesToFill = fillBufferSize; //the caller may want equal or more random data than we have to give, fill as much as we've got

  00118	e1a05007	 mov         r5, r7
  0011c		 |$LN5@OALIoCtlHa|

; 96   :         }
; 97   : 
; 98   :         memcpy(lpOutBuf,entropyBuffer,(numBytesToFill)); //copy the amount of data that we have into the caller's buffer

  0011c	e1a02005	 mov         r2, r5
  00120	e28d1018	 add         r1, sp, #0x18
  00124	e1a00009	 mov         r0, r9
  00128	eb000000	 bl          memcpy

; 99   : 
; 100  :         if(nOutBufSize > numBytesToFill)

  0012c	e1560005	 cmp         r6, r5

; 101  :         {
; 102  :             memset((void*)(((BYTE*)lpOutBuf)+((numBytesToFill))),0,nOutBufSize-numBytesToFill); //if the caller asked for more than we had, zero the remainder

  00130	80462005	 subhi       r2, r6, r5
  00134	83a01000	 movhi       r1, #0
  00138	80890005	 addhi       r0, r9, r5
  0013c	8b000000	 blhi        memset

; 103  :         }
; 104  : 
; 105  :         if(lpBytesReturned)

  00140	e3540000	 cmp         r4, #0

; 106  :         {
; 107  :             *lpBytesReturned = numBytesToFill;

  00144	15845000	 strne       r5, [r4]

; 118  :         goto cleanUp;
; 119  :     }
; 120  :     
; 121  :     // We are done
; 122  :     rc = TRUE;

  00148	e3a05001	 mov         r5, #1
  0014c	ea00000c	 b           |$cleanUp$43127|
  00150		 |$LN13@OALIoCtlHa|

; 108  :         }
; 109  :     }
; 110  :     else
; 111  :     { 
; 112  :         //failed on generating random number
; 113  :         if(lpBytesReturned)

  00150	e3540000	 cmp         r4, #0

; 114  :         {
; 115  :             *lpBytesReturned = 0;

  00154	13a03000	 movne       r3, #0
  00158	15843000	 strne       r3, [r4]
  0015c	e3a03b01	 mov         r3, #1, 22

; 116  :         }
; 117  :         NKSetLastError(ERROR_PROCESS_ABORTED);

  00160	e383002b	 orr         r0, r3, #0x2B
  00164	eb000000	 bl          NKSetLastError
  00168	ea000005	 b           |$cleanUp$43127|
  0016c		 |$LN16@OALIoCtlHa|

; 42   :     {
; 43   :         NKSetLastError(ERROR_INVALID_PARAMETER);

  0016c	e3a00057	 mov         r0, #0x57
  00170	eb000000	 bl          NKSetLastError

; 56   :         goto cleanUp;

  00174	e5983440	 ldr         r3, [r8, #0x440]
  00178	e3130002	 tst         r3, #2
  0017c	159f0034	 ldrne       r0, [pc, #0x34]
  00180	1b000000	 blne        NKDbgPrintfW
  00184		 |$cleanUp$43127|
  00184	e5983440	 ldr         r3, [r8, #0x440]

; 123  :     
; 124  : cleanUp:
; 125  :     // Indicate status
; 126  :     OALMSG(OAL_IOCTL&&OAL_FUNC, (L"-OALIoCtlHalGetRandomSeed(rc = %d)\r\n", rc));

  00188	e3130a01	 tst         r3, #1, 20
  0018c	13130004	 tstne       r3, #4
  00190	159f001c	 ldrne       r0, [pc, #0x1C]
  00194	11a01005	 movne       r1, r5
  00198	1b000000	 blne        NKDbgPrintfW

; 127  :     return rc;

  0019c	e59d0030	 ldr         r0, [sp, #0x30]
  001a0	eb000000	 bl          __security_check_cookie

; 128  : }

  001a4	e1a00005	 mov         r0, r5
  001a8	e28dd034	 add         sp, sp, #0x34
  001ac	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  001b0	e12fff1e	 bx          lr
  001b4		 |$LN32@OALIoCtlHa|
  001b4		 |$LN33@OALIoCtlHa|
  001b4	00000000	 DCD         |??_C@_1EK@CIONDGAI@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAR?$AAa?$AAn?$AAd?$AAo?$AAm?$AAS?$AAe?$AAe?$AAd?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF@|
  001b8		 |$LN34@OALIoCtlHa|
  001b8	00000000	 DCD         |??_C@_1GI@DGLGODAM@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAR?$AAa?$AAn?$AAd?$AAo?$AAm?$AAS?$AAe?$AAe?$AAd?$AA?3?$AA?5@|
  001bc		 |$LN35@OALIoCtlHa|
  001bc	00000000	 DCD         |g_pOemGlobal|
  001c0		 |$LN36@OALIoCtlHa|
  001c0	00000000	 DCD         |??_C@_1EC@KGKJCIAM@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAc?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAR?$AAa?$AAn?$AAd?$AAo?$AAm?$AAS?$AAe?$AAe?$AAd?$AA?$CI?$AA?4?$AA?4?$AA?4?$AA?$CJ?$AA?$AN?$AA?6@|
  001c4		 |$LN37@OALIoCtlHa|
  001c4	00000000	 DCD         |dpCurSettings|
  001c8		 |$LN38@OALIoCtlHa|
  001c8	00000000	 DCD         |__security_cookie|
  001cc		 |$M43200|

			 ENDP  ; |OALIoCtlHalGetRandomSeed|

	END
