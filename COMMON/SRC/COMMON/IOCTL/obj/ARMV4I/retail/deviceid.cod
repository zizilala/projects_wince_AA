; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\COMMON\IOCTL\deviceid.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|OALIoCtlHalGetDeviceId|
	EXPORT	|??_C@_1EG@HKOJPLNE@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAD?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@GPJLHAFO@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAD?$AA?3?$AA?5?$AAI?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LK@FOLPDAJB@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAD?$AA?3?$AA?5?$AAC?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LO@DFJMJCEI@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAD?$AA?3?$AA?5?$AAC?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1PC@IHJIIKFF@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAI?$AAO?$AAC?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@MLDPBFAO@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAc?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAD?$AA?$CI?$AA?4?$AA?4?$AA?4?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|NKSetLastError|
	IMPORT	|NKwcslen|
	IMPORT	|OEMIoControl|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_cookie|
	IMPORT	|memcpy|
	IMPORT	|strlen|
	IMPORT	|__security_check_cookie|
; File c:\wince600\platform\common\src\common\ioctl\deviceid.c

  00000			 AREA	 |.pdata|, PDATA
|$T43133| DCD	|$LN27@OALIoCtlHa|
	DCD	0xc0008302

  00000			 AREA	 |.xdata|, DATA
|$T43129| DCD	0xffffffe0

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@HKOJPLNE@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAD?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "I", 0x0, "D", 0x0, "(", 0x0, "r"
	DCB	0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@GPJLHAFO@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAD?$AA?3?$AA?5?$AAI?$AAn@| DCB "W"
	DCB	0x0, "A", 0x0, "R", 0x0, "N", 0x0, ":", 0x0, " ", 0x0, "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C", 0x0, "t"
	DCB	0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G", 0x0, "e"
	DCB	0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c"
	DCB	0x0, "e", 0x0, "I", 0x0, "D", 0x0, ":", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LK@FOLPDAJB@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAD?$AA?3?$AA?5?$AAC?$AAa@| DCB "W"
	DCB	0x0, "A", 0x0, "R", 0x0, "N", 0x0, ":", 0x0, " ", 0x0, "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C", 0x0, "t"
	DCB	0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G", 0x0, "e"
	DCB	0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c"
	DCB	0x0, "e", 0x0, "I", 0x0, "D", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L"
	DCB	0x0, "_", 0x0, "H", 0x0, "A", 0x0, "L", 0x0, "_", 0x0, "G"
	DCB	0x0, "E", 0x0, "T", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V"
	DCB	0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_", 0x0, "I", 0x0, "N"
	DCB	0x0, "F", 0x0, "O", 0x0, ":", 0x0, ":", 0x0, "S", 0x0, "P"
	DCB	0x0, "I", 0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "B"
	DCB	0x0, "O", 0x0, "O", 0x0, "T", 0x0, "M", 0x0, "E", 0x0, "N"
	DCB	0x0, "A", 0x0, "M", 0x0, "E", 0x0, " ", 0x0, "f", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, ".", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LO@DFJMJCEI@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAD?$AA?3?$AA?5?$AAC?$AAa@| DCB "W"
	DCB	0x0, "A", 0x0, "R", 0x0, "N", 0x0, ":", 0x0, " ", 0x0, "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C", 0x0, "t"
	DCB	0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G", 0x0, "e"
	DCB	0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c"
	DCB	0x0, "e", 0x0, "I", 0x0, "D", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L"
	DCB	0x0, "_", 0x0, "H", 0x0, "A", 0x0, "L", 0x0, "_", 0x0, "G"
	DCB	0x0, "E", 0x0, "T", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V"
	DCB	0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_", 0x0, "I", 0x0, "N"
	DCB	0x0, "F", 0x0, "O", 0x0, ":", 0x0, ":", 0x0, "S", 0x0, "P"
	DCB	0x0, "I", 0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "P"
	DCB	0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "M", 0x0, "N", 0x0, "A", 0x0, "M", 0x0, "E", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1PC@IHJIIKFF@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAI?$AAO?$AAC?$AAT@| DCB "W"
	DCB	0x0, "a", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, ":", 0x0, " ", 0x0, "y", 0x0, "o", 0x0, "u", 0x0, " "
	DCB	0x0, "a", 0x0, "r", 0x0, "e", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "T", 0x0, "L", 0x0, "_", 0x0, "H", 0x0, "A", 0x0, "L"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "I"
	DCB	0x0, "D", 0x0, ",", 0x0, " ", 0x0, "w", 0x0, "h", 0x0, "i"
	DCB	0x0, "c", 0x0, "h", 0x0, " ", 0x0, "h", 0x0, "a", 0x0, "s"
	DCB	0x0, " ", 0x0, "b", 0x0, "e", 0x0, "e", 0x0, "n", 0x0, " "
	DCB	0x0, "d", 0x0, "e", 0x0, "p", 0x0, "r", 0x0, "e", 0x0, "c"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, ".", 0x0, " "
	DCB	0x0, " ", 0x0, "U", 0x0, "s", 0x0, "e", 0x0, " ", 0x0, "I"
	DCB	0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_", 0x0, "H"
	DCB	0x0, "A", 0x0, "L", 0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T"
	DCB	0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C"
	DCB	0x0, "E", 0x0, "_", 0x0, "I", 0x0, "N", 0x0, "F", 0x0, "O"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, "s", 0x0, "t", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@MLDPBFAO@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAc?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAD?$AA?$CI?$AA?4?$AA?4?$AA?4?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "c"
	DCB	0x0, "t", 0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "I", 0x0, "D", 0x0, "(", 0x0, "."
	DCB	0x0, ".", 0x0, ".", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T43129|

  00008		 |OALIoCtlHalGetDeviceId| PROC

; 34   : ) {

  00008		 |$LN27@OALIoCtlHa|
  00008	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  0000c	e24ddf53	 sub         sp, sp, #0x53, 30
  00010		 |$M43130|
  00010	e1a05003	 mov         r5, r3
  00014	e59f21f4	 ldr         r2, [pc, #0x1F4]
  00018	e5922000	 ldr         r2, [r2]
  0001c	e58d2148	 str         r2, [sp, #0x148]

; 35   :     BOOL rc = FALSE;
; 36   :     DEVICE_ID *pId = (DEVICE_ID *)pOutBuffer;
; 37   :     UINT32 size, length1, length2, offset, i;
; 38   :     WCHAR platformName[PLATFORMNAMESIZE], bootMeNameW[OAL_KITL_ID_SIZE+1];
; 39   :     char bootMeName[OAL_KITL_ID_SIZE+1];
; 40   :     UINT32 platformNameSPICode = SPI_GETPLATFORMNAME, bootMeNameSPICode = SPI_GETBOOTMENAME;
; 41   : 
; 42   :     OALMSG(OAL_IOCTL&&OAL_FUNC, (L"+OALIoctlHalGetDeviceID(...)\r\n"));

  00020	e59f41e4	 ldr         r4, [pc, #0x1E4]
  00024	e3a02c01	 mov         r2, #1, 24
  00028	e3a01f41	 mov         r1, #0x41, 30
  0002c	e5943440	 ldr         r3, [r4, #0x440]
  00030	e3822005	 orr         r2, r2, #5
  00034	e59d916c	 ldr         r9, [sp, #0x16C]
  00038	e3130a01	 tst         r3, #1, 20
  0003c	13130004	 tstne       r3, #4
  00040	159f01c0	 ldrne       r0, [pc, #0x1C0]
  00044	e3a06000	 mov         r6, #0
  00048	e58d1008	 str         r1, [sp, #8]
  0004c	e58d200c	 str         r2, [sp, #0xC]
  00050	1b000000	 blne        NKDbgPrintfW

; 43   : 
; 44   :     RETAILMSG(1, (TEXT("Warning: you are requesting IOCTL_HAL_GET_DEVICEID, which has been deprecated.  Use IOCTL_HAL_GET_DEVICE_INFO instead.\r\n")));

  00054	e59f01a8	 ldr         r0, [pc, #0x1A8]
  00058	eb000000	 bl          NKDbgPrintfW

; 45   : 
; 46   : #if defined ( project_smartfon ) || defined ( project_wpc )  // Smartphone or PocketPC build
; 47   : 
; 48   :     // First, handle the special case where we care called with a buffer size of 16 bytes
; 49   :     if ( outSize == sizeof(UUID) )
; 50   :     {
; 51   :         return OALIoCtlHalGetUUID(IOCTL_HAL_GET_UUID, pInpBuffer, inpSize, pOutBuffer, outSize, pOutSize);
; 52   :     }
; 53   : #endif
; 54   : 
; 55   :     // Compute required size (first is unicode, second multibyte!)
; 56   :     if(!OEMIoControl(IOCTL_HAL_GET_DEVICE_INFO, &platformNameSPICode, sizeof(platformNameSPICode), platformName, sizeof(platformName), 0))

  0005c	e59f0198	 ldr         r0, [pc, #0x198]
  00060	e3a03c01	 mov         r3, #1, 24
  00064	e58d3000	 str         r3, [sp]
  00068	e3a07000	 mov         r7, #0
  0006c	e28d3048	 add         r3, sp, #0x48
  00070	e3a02004	 mov         r2, #4
  00074	e28d1008	 add         r1, sp, #8
  00078	e58d7004	 str         r7, [sp, #4]
  0007c	eb000000	 bl          OEMIoControl
  00080	e3500000	 cmp         r0, #0
  00084	1a000004	 bne         |$LN9@OALIoCtlHa|

; 57   :     {
; 58   :         OALMSG(OAL_WARN, (
; 59   :             L"WARN: OALIoCtlHalGetDeviceID: Call to IOCTL_HAL_GET_DEVICE_INFO::SPI_GETPLATFORMNAME failed.\r\n"
; 60   :         ));

  00088	e5943440	 ldr         r3, [r4, #0x440]
  0008c	e3130002	 tst         r3, #2
  00090	0a00004a	 beq         |$cleanUp$43053|
  00094	e59f0164	 ldr         r0, [pc, #0x164]

; 61   :         goto cleanUp;

  00098	ea000047	 b           |$LN24@OALIoCtlHa|
  0009c		 |$LN9@OALIoCtlHa|

; 62   :     }
; 63   :     length1 = (NKwcslen(platformName) + 1) * sizeof(WCHAR);

  0009c	e28d0048	 add         r0, sp, #0x48
  000a0	eb000000	 bl          NKwcslen
  000a4	e2803001	 add         r3, r0, #1

; 64   :     if(!OEMIoControl(IOCTL_HAL_GET_DEVICE_INFO, &bootMeNameSPICode, sizeof(bootMeNameSPICode), bootMeNameW, sizeof(bootMeNameW), 0))

  000a8	e59f014c	 ldr         r0, [pc, #0x14C]
  000ac	e1a08083	 mov         r8, r3, lsl #1
  000b0	e3a0e022	 mov         lr, #0x22
  000b4	e28d3024	 add         r3, sp, #0x24
  000b8	e3a02004	 mov         r2, #4
  000bc	e28d100c	 add         r1, sp, #0xC
  000c0	e58d7004	 str         r7, [sp, #4]
  000c4	e58de000	 str         lr, [sp]
  000c8	eb000000	 bl          OEMIoControl
  000cc	e3500000	 cmp         r0, #0
  000d0	1a000004	 bne         |$LN8@OALIoCtlHa|
  000d4	e5943440	 ldr         r3, [r4, #0x440]

; 65   :     {
; 66   :         OALMSG(OAL_WARN, (
; 67   :             L"WARN: OALIoCtlHalGetDeviceID: Call to IOCTL_HAL_GET_DEVICE_INFO::SPI_GETBOOTMENAME failed.\r\n"
; 68   :         ));

  000d8	e3130002	 tst         r3, #2
  000dc	0a000037	 beq         |$cleanUp$43053|
  000e0	e59f0110	 ldr         r0, [pc, #0x110]

; 69   :         goto cleanUp;

  000e4	ea000034	 b           |$LN24@OALIoCtlHa|
  000e8		 |$LN8@OALIoCtlHa|

; 70   :     }
; 71   :     // Convert the BOOTME name from Unicode to multibyte for BC
; 72   :     for(i = 0; (i < OAL_KITL_ID_SIZE) && (bootMeNameW[i] != 0); i++)

  000e8	e3a02000	 mov         r2, #0
  000ec	e28d3024	 add         r3, sp, #0x24
  000f0	e28d0010	 add         r0, sp, #0x10
  000f4		 |$LL7@OALIoCtlHa|
  000f4	e1d310b0	 ldrh        r1, [r3]
  000f8	e3510000	 cmp         r1, #0
  000fc	0a000004	 beq         |$LN5@OALIoCtlHa|

; 73   :     {
; 74   :         bootMeName[i] = (char)(bootMeNameW[i]);

  00100	e7c21000	 strb        r1, [r2, +r0]
  00104	e2822001	 add         r2, r2, #1
  00108	e3520010	 cmp         r2, #0x10
  0010c	e2833002	 add         r3, r3, #2
  00110	3afffff7	 bcc         |$LL7@OALIoCtlHa|
  00114		 |$LN5@OALIoCtlHa|

; 75   :     }
; 76   :     bootMeName[i] = '\0';

  00114	e28d3010	 add         r3, sp, #0x10

; 77   :     length2 = strlen(bootMeName) + 1;

  00118	e28d0010	 add         r0, sp, #0x10
  0011c	e7c27003	 strb        r7, [r2, +r3]
  00120	eb000000	 bl          strlen
  00124	e2807001	 add         r7, r0, #1

; 78   :     size = sizeof(DEVICE_ID) + length1 + length2;

  00128	e0873008	 add         r3, r7, r8
  0012c	e2833014	 add         r3, r3, #0x14

; 79   : 
; 80   :     // update size if pOutSize is specified
; 81   :     if (pOutSize) {

  00130	e3590000	 cmp         r9, #0

; 82   :         *pOutSize = size;

  00134	15893000	 strne       r3, [r9]

; 83   :     }
; 84   : 
; 85   :     // Validate inputs (do it after we can return required size)
; 86   :     if (pOutBuffer == NULL || outSize < sizeof(DEVICE_ID)) {

  00138	e3550000	 cmp         r5, #0
  0013c	0a000018	 beq         |$LN2@OALIoCtlHa|
  00140	e59d2168	 ldr         r2, [sp, #0x168]
  00144	e3520014	 cmp         r2, #0x14
  00148	3a000015	 bcc         |$LN2@OALIoCtlHa|

; 91   :         goto cleanUp;
; 92   :     }
; 93   : 
; 94   :     // Set size to DEVICE_ID structure
; 95   :     pId->dwSize = size;

  0014c	e5853000	 str         r3, [r5]

; 96   : 
; 97   :     // If the size is too small, indicate the correct size 
; 98   :     if (outSize < size) {

  00150	e1520003	 cmp         r2, r3
  00154	2a000002	 bcs         |$LN1@OALIoCtlHa|

; 99   :         NKSetLastError(ERROR_INSUFFICIENT_BUFFER);

  00158	e3a0007a	 mov         r0, #0x7A
  0015c	eb000000	 bl          NKSetLastError

; 100  :         goto cleanUp;

  00160	ea000016	 b           |$cleanUp$43053|
  00164		 |$LN1@OALIoCtlHa|

; 101  :     }
; 102  : 
; 103  :     // Fill in the Device ID type
; 104  :     offset = sizeof(DEVICE_ID);
; 105  : 
; 106  :     // Copy in PlatformType data
; 107  :     pId->dwPresetIDOffset = offset;

  00164	e3a03014	 mov         r3, #0x14

; 108  :     pId->dwPresetIDBytes = length1;
; 109  :     memcpy((UINT8*)pId + offset, platformName, length1);

  00168	e1a02008	 mov         r2, r8
  0016c	e28d1048	 add         r1, sp, #0x48
  00170	e2850014	 add         r0, r5, #0x14
  00174	e5853004	 str         r3, [r5, #4]
  00178	e5858008	 str         r8, [r5, #8]
  0017c	eb000000	 bl          memcpy

; 110  :     offset += length1;

  00180	e2883014	 add         r3, r8, #0x14

; 111  : 
; 112  :     // Copy device id data
; 113  :     pId->dwPlatformIDOffset = offset;
; 114  :     pId->dwPlatformIDBytes  = length2;
; 115  :     memcpy((UINT8*)pId + offset, bootMeName, length2);

  00184	e0850003	 add         r0, r5, r3
  00188	e1a02007	 mov         r2, r7
  0018c	e28d1010	 add         r1, sp, #0x10
  00190	e585300c	 str         r3, [r5, #0xC]
  00194	e5857010	 str         r7, [r5, #0x10]
  00198	eb000000	 bl          memcpy

; 116  : 
; 117  :     // We are done
; 118  :     rc = TRUE;

  0019c	e3a06001	 mov         r6, #1
  001a0	ea000006	 b           |$cleanUp$43053|
  001a4		 |$LN2@OALIoCtlHa|

; 87   :         NKSetLastError(ERROR_INVALID_PARAMETER);

  001a4	e3a00057	 mov         r0, #0x57
  001a8	eb000000	 bl          NKSetLastError
  001ac	e5943440	 ldr         r3, [r4, #0x440]

; 88   :         OALMSG(OAL_WARN, (
; 89   :             L"WARN: OALIoCtlHalGetDeviceID: Invalid parameter\r\n"
; 90   :         ));

  001b0	e3130002	 tst         r3, #2
  001b4	0a000001	 beq         |$cleanUp$43053|
  001b8	e59f0034	 ldr         r0, [pc, #0x34]
  001bc		 |$LN24@OALIoCtlHa|
  001bc	eb000000	 bl          NKDbgPrintfW
  001c0		 |$cleanUp$43053|
  001c0	e5943440	 ldr         r3, [r4, #0x440]

; 119  :     
; 120  : cleanUp:
; 121  :     // Indicate status
; 122  :     OALMSG(OAL_IOCTL&&OAL_FUNC, (L"-OALIoCtlHalGetDeviceID(rc = %d)\r\n", rc));

  001c4	e3130a01	 tst         r3, #1, 20
  001c8	13130004	 tstne       r3, #4
  001cc	159f001c	 ldrne       r0, [pc, #0x1C]
  001d0	11a01006	 movne       r1, r6
  001d4	1b000000	 blne        NKDbgPrintfW

; 123  :     return rc;

  001d8	e59d0148	 ldr         r0, [sp, #0x148]
  001dc	eb000000	 bl          __security_check_cookie

; 124  : }

  001e0	e1a00006	 mov         r0, r6
  001e4	e28ddf53	 add         sp, sp, #0x53, 30
  001e8	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  001ec	e12fff1e	 bx          lr
  001f0		 |$LN28@OALIoCtlHa|
  001f0		 |$LN29@OALIoCtlHa|
  001f0	00000000	 DCD         |??_C@_1EG@HKOJPLNE@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAD?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ@|
  001f4		 |$LN30@OALIoCtlHa|
  001f4	00000000	 DCD         |??_C@_1GE@GPJLHAFO@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAD?$AA?3?$AA?5?$AAI?$AAn@|
  001f8		 |$LN31@OALIoCtlHa|
  001f8	00000000	 DCD         |??_C@_1LK@FOLPDAJB@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAD?$AA?3?$AA?5?$AAC?$AAa@|
  001fc		 |$LN32@OALIoCtlHa|
  001fc	01010004	 DCD         0x1010004
  00200		 |$LN33@OALIoCtlHa|
  00200	00000000	 DCD         |??_C@_1LO@DFJMJCEI@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAD?$AA?3?$AA?5?$AAC?$AAa@|
  00204		 |$LN34@OALIoCtlHa|
  00204	00000000	 DCD         |??_C@_1PC@IHJIIKFF@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAI?$AAO?$AAC?$AAT@|
  00208		 |$LN35@OALIoCtlHa|
  00208	00000000	 DCD         |??_C@_1DO@MLDPBFAO@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAc?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAD?$AA?$CI?$AA?4?$AA?4?$AA?4?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  0020c		 |$LN36@OALIoCtlHa|
  0020c	00000000	 DCD         |dpCurSettings|
  00210		 |$LN37@OALIoCtlHa|
  00210	00000000	 DCD         |__security_cookie|
  00214		 |$M43131|

			 ENDP  ; |OALIoCtlHalGetDeviceId|

	END
