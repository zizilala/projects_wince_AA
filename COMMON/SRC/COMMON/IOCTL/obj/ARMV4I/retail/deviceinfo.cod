; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\COMMON\IOCTL\deviceinfo.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|HALPlatformVersion| DCD 0x6
	DCD	0x0
|g_oalIoCtlProjectName| DCB "C", 0x0, "E", 0x0, "B", 0x0, "a", 0x0, "s", 0x0
	DCB	"e", 0x0, 0x0, 0x0
	EXPORT	|??_C@_1CI@DNLIPKLH@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BEM@IMHNFGHE@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAI?$AAO?$AAC?$AAT@| [ DATA ] ; `string'
	IMPORT	|OEMIoControl|
	IMPORT	|NKDbgPrintfW|
; File c:\wince600\platform\common\src\common\ioctl\deviceinfo.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T35700| DCD	|$LN7@GetPlatfor|
	DCD	0x40001802

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@DNLIPKLH@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "S"
	DCB	0x0, "P", 0x0, "I", 0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T"
	DCB	0x0, "P", 0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O"
	DCB	0x0, "R", 0x0, "M", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BEM@IMHNFGHE@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAI?$AAO?$AAC?$AAT@| DCB "W"
	DCB	0x0, "a", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, ":", 0x0, " ", 0x0, "y", 0x0, "o", 0x0, "u", 0x0, " "
	DCB	0x0, "a", 0x0, "r", 0x0, "e", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "T", 0x0, "L", 0x0, "_", 0x0, "H", 0x0, "A", 0x0, "L"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "I", 0x0, "N", 0x0, "F", 0x0, "O", 0x0, ":", 0x0, ":"
	DCB	0x0, "S", 0x0, "P", 0x0, "I", 0x0, "_", 0x0, "G", 0x0, "E"
	DCB	0x0, "T", 0x0, "P", 0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F"
	DCB	0x0, "O", 0x0, "R", 0x0, "M", 0x0, "T", 0x0, "Y", 0x0, "P"
	DCB	0x0, "E", 0x0, ",", 0x0, " ", 0x0, "w", 0x0, "h", 0x0, "i"
	DCB	0x0, "c", 0x0, "h", 0x0, " ", 0x0, "h", 0x0, "a", 0x0, "s"
	DCB	0x0, " ", 0x0, "b", 0x0, "e", 0x0, "e", 0x0, "n", 0x0, " "
	DCB	0x0, "d", 0x0, "e", 0x0, "p", 0x0, "r", 0x0, "e", 0x0, "c"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, ".", 0x0, " "
	DCB	0x0, " ", 0x0, "U", 0x0, "s", 0x0, "e", 0x0, " ", 0x0, "I"
	DCB	0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_", 0x0, "H"
	DCB	0x0, "A", 0x0, "L", 0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T"
	DCB	0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C"
	DCB	0x0, "E", 0x0, "_", 0x0, "I", 0x0, "N", 0x0, "F", 0x0, "O"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "P", 0x0, "I", 0x0, "_"
	DCB	0x0, "G", 0x0, "E", 0x0, "T", 0x0, "P", 0x0, "L", 0x0, "A"
	DCB	0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R", 0x0, "M", 0x0, "N"
	DCB	0x0, "A", 0x0, "M", 0x0, "E", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "."
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPlatformType@@YAHPAXIPAIPAPBG@Z| PROC ; GetPlatformType

; 146  : ) {

  00000		 |$LN7@GetPlatfor|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M35697|
  00008	e1a05002	 mov         r5, r2
  0000c	e1a06001	 mov         r6, r1
  00010	e1a04000	 mov         r4, r0

; 147  : 
; 148  :     // Note: on PocketPC and Smartphone platforms the platform type 
; 149  :     // string may contain NULLs and is terminated with a 
; 150  :     // double NULL.
; 151  :     BOOL rc;
; 152  :     (*spiName) = L"SPI_GETPLATFORMTYPE";

  00014	e59fe040	 ldr         lr, [pc, #0x40]

; 153  : 
; 154  : #if defined( project_smartfon ) || defined( project_wpc )
; 155  :     RETAILMSG(1, (TEXT("Warning: you are requesting IOCTL_HAL_GET_DEVICE_INFO::SPI_GETPLATFORMTYPE, which has been deprecated.  Use IOCTL_HAL_GET_DEVICE_INFO::SPI_GETPROJECTNAME instead.\r\n")));
; 156  :     if(rc = (CheckBufferSize(pOutBuffer, outSize, pOutSize, sizeof(g_deprecatedIoctlProjectName), *spiName)))
; 157  :     {   
; 158  :         // Copy the double-null terminated project name to caller's buffer
; 159  :         memcpy(pOutBuffer, g_deprecatedIoctlProjectName, sizeof(g_deprecatedIoctlProjectName));
; 160  :         rc = TRUE;
; 161  :     }
; 162  : #else
; 163  :     RETAILMSG(1, (TEXT("Warning: you are requesting IOCTL_HAL_GET_DEVICE_INFO::SPI_GETPLATFORMTYPE, which has been deprecated.  Use IOCTL_HAL_GET_DEVICE_INFO::SPI_GETPLATFORMNAME instead.\r\n")));

  00018	e59f0038	 ldr         r0, [pc, #0x38]
  0001c	e583e000	 str         lr, [r3]
  00020	eb000000	 bl          NKDbgPrintfW

; 164  :     UINT32 platformNameSPICode = SPI_GETPLATFORMNAME;
; 165  :     rc = OEMIoControl(IOCTL_HAL_GET_DEVICE_INFO, static_cast<VOID*>(&platformNameSPICode), sizeof(platformNameSPICode), pOutBuffer, outSize, reinterpret_cast<DWORD*>(pOutSize));

  00024	e59f0028	 ldr         r0, [pc, #0x28]
  00028	e3a0ef41	 mov         lr, #0x41, 30
  0002c	e1a03004	 mov         r3, r4
  00030	e3a02004	 mov         r2, #4
  00034	e28d1008	 add         r1, sp, #8
  00038	e58de008	 str         lr, [sp, #8]
  0003c	e58d5004	 str         r5, [sp, #4]
  00040	e58d6000	 str         r6, [sp]
  00044	eb000000	 bl          OEMIoControl

; 166  : #endif
; 167  : 
; 168  :     return rc;
; 169  : }

  00048	e28dd00c	 add         sp, sp, #0xC
  0004c	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$LN8@GetPlatfor|
  00054		 |$LN9@GetPlatfor|
  00054	01010004	 DCD         0x1010004
  00058		 |$LN10@GetPlatfor|
  00058	00000000	 DCD         |??_C@_1BEM@IMHNFGHE@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAI?$AAO?$AAC?$AAT@|
  0005c		 |$LN11@GetPlatfor|
  0005c	00000000	 DCD         |??_C@_1CI@DNLIPKLH@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  00060		 |$M35698|

			 ENDP  ; |?GetPlatformType@@YAHPAXIPAIPAPBG@Z|, GetPlatformType

	EXPORT	|??_C@_1GO@GEFDPJAG@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAi?$AAn?$AAf?$AAo?$AA?3?$AA?3@| [ DATA ] ; `string'
	EXPORT	|??_C@_1NG@HBFOMIME@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAi?$AAn?$AAf?$AAo?$AA?3@| [ DATA ] ; `string'
	IMPORT	|dpCurSettings|
	IMPORT	|NKSetLastError|

  00000			 AREA	 |.pdata|, PDATA
|$T35722| DCD	|$LN14@CheckBuffe|
	DCD	0x40002901

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@GEFDPJAG@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAi?$AAn?$AAf?$AAo?$AA?3?$AA?3@| DCB "W"
	DCB	0x0, "A", 0x0, "R", 0x0, "N", 0x0, ":", 0x0, " ", 0x0, "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C", 0x0, "t"
	DCB	0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G", 0x0, "e"
	DCB	0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c"
	DCB	0x0, "e", 0x0, "i", 0x0, "n", 0x0, "f", 0x0, "o", 0x0, ":"
	DCB	0x0, ":", 0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "B"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, "o", 0x0, " ", 0x0, "s", 0x0, "m"
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1NG@HBFOMIME@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAi?$AAn?$AAf?$AAo?$AA?3@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "i", 0x0, "n", 0x0, "f", 0x0, "o"
	DCB	0x0, ":", 0x0, ":", 0x0, "%", 0x0, "s", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a"
	DCB	0x0, "m", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "n", 0x0, "o", 0x0, "n", 0x0, "z", 0x0, "e"
	DCB	0x0, "r", 0x0, "o", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "s", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, " ", 0x0, "s", 0x0, "u", 0x0, "p"
	DCB	0x0, "p", 0x0, "l", 0x0, "i", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "w", 0x0, "i", 0x0, "t", 0x0, "h", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CheckBufferSize@@YAHPBXABIPAI1PBG@Z| PROC ; CheckBufferSize

; 302  : ) {

  00000		 |$LN14@CheckBuffe|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M35719|
  00004	e1a04003	 mov         r4, r3
  00008	e3500000	 cmp         r0, #0

; 303  :         // If the output buffer is an invalid pointer but the caller is giving us a nonzero size, something is very wrong
; 304  :         if (pOutBuffer == NULL && availableSize > 0)

  0000c	1a00000a	 bne         |$LN4@CheckBuffe|
  00010	e591e000	 ldr         lr, [r1]
  00014	e35e0000	 cmp         lr, #0
  00018	9a000007	 bls         |$LN4@CheckBuffe|

; 305  :         {
; 306  :             NKSetLastError(ERROR_INVALID_PARAMETER);

  0001c	e3a00057	 mov         r0, #0x57
  00020	eb000000	 bl          NKSetLastError

; 307  :             OALMSG(OAL_ERROR, ((
; 308  :                 L"ERROR: OALIoCtlHalGetDeviceinfo::%s: Invalid parameter: nonzero buffer size supplied with invalid buffer\r\n"), spiName));

  00024	e59f3070	 ldr         r3, [pc, #0x70]
  00028	e5933440	 ldr         r3, [r3, #0x440]
  0002c	e3130001	 tst         r3, #1
  00030	0a000015	 beq         |$LN9@CheckBuffe|
  00034	e59f0064	 ldr         r0, [pc, #0x64]

; 309  :             return FALSE;

  00038	ea000011	 b           |$LN11@CheckBuffe|
  0003c		 |$LN4@CheckBuffe|

; 310  :         }
; 311  :         if (pRequiredSize != NULL)

  0003c	e3520000	 cmp         r2, #0

; 312  :         {
; 313  :             // indicate to caller how much data we want to return
; 314  :             *pRequiredSize = requiredSize; 

  00040	15943000	 ldrne       r3, [r4]
  00044	15823000	 strne       r3, [r2]

; 315  :         }
; 316  :         // If there isn't an output buffer or it is too small, return false.
; 317  :         // At this point, if pRequiredSize is valid it has been filled in, so the
; 318  :         // caller can call the function again with a buffer of pRequiredSize and expect success.
; 319  :         if (pOutBuffer == NULL || availableSize < requiredSize)

  00048	e3500000	 cmp         r0, #0
  0004c	0a000005	 beq         |$LN1@CheckBuffe|
  00050	e5912000	 ldr         r2, [r1]
  00054	e5943000	 ldr         r3, [r4]
  00058	e1520003	 cmp         r2, r3

; 325  :         }
; 326  :     // if we made it here then we have sufficient buffer space
; 327  :     return TRUE;

  0005c	23a00001	 movcs       r0, #1

; 328  : }

  00060	28bd4010	 ldmcsia     sp!, {r4, lr}
  00064	212fff1e	 bxcs        lr
  00068		 |$LN1@CheckBuffe|

; 320  :         {
; 321  :             NKSetLastError(ERROR_INSUFFICIENT_BUFFER);

  00068	e3a0007a	 mov         r0, #0x7A
  0006c	eb000000	 bl          NKSetLastError

; 322  :             OALMSG(OAL_WARN, ((
; 323  :                 L"WARN: OALIoCtlHalGetDeviceinfo::%s: Buffer too small\r\n"), spiName));

  00070	e59f3024	 ldr         r3, [pc, #0x24]
  00074	e5933440	 ldr         r3, [r3, #0x440]
  00078	e3130002	 tst         r3, #2
  0007c	0a000002	 beq         |$LN9@CheckBuffe|
  00080	e59f0010	 ldr         r0, [pc, #0x10]
  00084		 |$LN11@CheckBuffe|
  00084	e59d1008	 ldr         r1, [sp, #8]
  00088	eb000000	 bl          NKDbgPrintfW
  0008c		 |$LN9@CheckBuffe|

; 324  :             return FALSE;

  0008c	e3a00000	 mov         r0, #0

; 328  : }

  00090	e8bd4010	 ldmia       sp!, {r4, lr}
  00094	e12fff1e	 bx          lr
  00098		 |$LN15@CheckBuffe|
  00098		 |$LN16@CheckBuffe|
  00098	00000000	 DCD         |??_C@_1GO@GEFDPJAG@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAi?$AAn?$AAf?$AAo?$AA?3?$AA?3@|
  0009c		 |$LN17@CheckBuffe|
  0009c	00000000	 DCD         |dpCurSettings|
  000a0		 |$LN18@CheckBuffe|
  000a0	00000000	 DCD         |??_C@_1NG@HBFOMIME@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAi?$AAn?$AAf?$AAo?$AA?3@|
  000a4		 |$M35720|

			 ENDP  ; |?CheckBufferSize@@YAHPBXABIPAI1PBG@Z|, CheckBufferSize

	EXPORT	|??_C@_1LA@BNOICHNN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T35736| DCD	|$LN7@ErrorNotSu|
	DCD	0x40000e01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LA@BNOICHNN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "I", 0x0, "n", 0x0, "f", 0x0, "o"
	DCB	0x0, ":", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, " ", 0x0, "d", 0x0, "o", 0x0, "e"
	DCB	0x0, "s", 0x0, "n", 0x0, "'", 0x0, "t", 0x0, " ", 0x0, "s"
	DCB	0x0, "u", 0x0, "p", 0x0, "p", 0x0, "o", 0x0, "r", 0x0, "t"
	DCB	0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L"
	DCB	0x0, "_", 0x0, "H", 0x0, "A", 0x0, "L", 0x0, "_", 0x0, "G"
	DCB	0x0, "E", 0x0, "T", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V"
	DCB	0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_", 0x0, "I", 0x0, "N"
	DCB	0x0, "F", 0x0, "O", 0x0, ":", 0x0, ":", 0x0, "%", 0x0, "s"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ErrorNotSupported@@YAXPBG@Z| PROC	; ErrorNotSupported

; 332  : ) {

  00000		 |$LN7@ErrorNotSu|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M35733|
  00004	e1a04000	 mov         r4, r0

; 333  :     NKSetLastError(ERROR_NOT_SUPPORTED);

  00008	e3a00032	 mov         r0, #0x32
  0000c	eb000000	 bl          NKSetLastError

; 334  :     OALMSG(OAL_ERROR, 
; 335  :     ((L"ERROR: OALIoCtlHalGetDeviceInfo: Device doesn't support IOCTL_HAL_GET_DEVICE_INFO::%s\r\n"), spiName)
; 336  :     );

  00010	e59f301c	 ldr         r3, [pc, #0x1C]
  00014	e5933440	 ldr         r3, [r3, #0x440]
  00018	e3130001	 tst         r3, #1
  0001c	159f000c	 ldrne       r0, [pc, #0xC]
  00020	11a01004	 movne       r1, r4
  00024	1b000000	 blne        NKDbgPrintfW

; 337  : }

  00028	e8bd4010	 ldmia       sp!, {r4, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$LN8@ErrorNotSu|
  00030		 |$LN9@ErrorNotSu|
  00030	00000000	 DCD         |??_C@_1LA@BNOICHNN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3@|
  00034		 |$LN10@ErrorNotSu|
  00034	00000000	 DCD         |dpCurSettings|
  00038		 |$M35734|

			 ENDP  ; |?ErrorNotSupported@@YAXPBG@Z|, ErrorNotSupported

	EXPORT	|??_C@_1BO@MIPEKPNN@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAO?$AAE?$AAM?$AAI?$AAN?$AAF?$AAO?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|NKwcscpy|
	IMPORT	|NKwcslen|
	IMPORT	|g_oalIoCtlPlatformOEM|

  00000			 AREA	 |.pdata|, PDATA
|$T35753| DCD	|$LN6@GetOEMInfo|
	DCD	0x40002104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@MIPEKPNN@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAO?$AAE?$AAM?$AAI?$AAN?$AAF?$AAO?$AA?$AA@| DCB "S"
	DCB	0x0, "P", 0x0, "I", 0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T"
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "I", 0x0, "N", 0x0, "F"
	DCB	0x0, "O", 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetOEMInfo@@YAHPAXIPAIPAPBG@Z| PROC	; GetOEMInfo

; 173  : ) {

  00000		 |$LN6@GetOEMInfo|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d50f0	 stmdb       sp!, {r4 - r7, r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M35750|
  00010	e1a04003	 mov         r4, r3
  00014	e1a05002	 mov         r5, r2
  00018	e1a06000	 mov         r6, r0

; 174  :     BOOL rc;
; 175  :     (*spiName) = L"SPI_GETOEMINFO";

  0001c	e59f105c	 ldr         r1, [pc, #0x5C]

; 176  :     if(rc = (CheckBufferSize(pOutBuffer, outSize, pOutSize, (NKwcslen(g_oalIoCtlPlatformOEM)+1)*sizeof(WCHAR), *spiName)))

  00020	e59f7054	 ldr         r7, [pc, #0x54]
  00024	e5841000	 str         r1, [r4]
  00028	e5970000	 ldr         r0, [r7]
  0002c	eb000000	 bl          NKwcslen
  00030	e2801001	 add         r1, r0, #1
  00034	e594e000	 ldr         lr, [r4]
  00038	e1a03081	 mov         r3, r1, lsl #1
  0003c	e58d3004	 str         r3, [sp, #4]
  00040	e28d3004	 add         r3, sp, #4
  00044	e1a02005	 mov         r2, r5
  00048	e28d1024	 add         r1, sp, #0x24
  0004c	e1a00006	 mov         r0, r6
  00050	e58de000	 str         lr, [sp]
  00054	eb000000	 bl          |?CheckBufferSize@@YAHPBXABIPAI1PBG@Z|
  00058	e3500000	 cmp         r0, #0
  0005c	0a000003	 beq         |$LN1@GetOEMInfo|

; 177  :     {
; 178  :         // Copy OEM info to caller's buffer
; 179  :         NKwcscpy((WCHAR*)pOutBuffer, g_oalIoCtlPlatformOEM);

  00060	e5971000	 ldr         r1, [r7]
  00064	e1a00006	 mov         r0, r6
  00068	eb000000	 bl          NKwcscpy

; 180  :         rc = TRUE;

  0006c	e3a00001	 mov         r0, #1
  00070		 |$LN1@GetOEMInfo|

; 181  :     }
; 182  :     return rc;
; 183  : }

  00070	e28dd008	 add         sp, sp, #8
  00074	e89d60f0	 ldmia       sp, {r4 - r7, sp, lr}
  00078	e12fff1e	 bx          lr
  0007c		 |$LN7@GetOEMInfo|
  0007c		 |$LN8@GetOEMInfo|
  0007c	00000000	 DCD         |g_oalIoCtlPlatformOEM|
  00080		 |$LN9@GetOEMInfo|
  00080	00000000	 DCD         |??_C@_1BO@MIPEKPNN@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAO?$AAE?$AAM?$AAI?$AAN?$AAF?$AAO?$AA?$AA@|
  00084		 |$M35751|

			 ENDP  ; |?GetOEMInfo@@YAHPAXIPAIPAPBG@Z|, GetOEMInfo

	EXPORT	|??_C@_1CO@EPEFNCOE@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AAV?$AAE?$AAR?$AAS?$AAI?$AAO?$AAN?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|memcpy|

  00000			 AREA	 |.pdata|, PDATA
|$T35771| DCD	|$LN6@GetPlatfor@2|
	DCD	0x40001a04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@EPEFNCOE@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AAV?$AAE?$AAR?$AAS?$AAI?$AAO?$AAN?$AA?$AA@| DCB "S"
	DCB	0x0, "P", 0x0, "I", 0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T"
	DCB	0x0, "P", 0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O"
	DCB	0x0, "R", 0x0, "M", 0x0, "V", 0x0, "E", 0x0, "R", 0x0, "S"
	DCB	0x0, "I", 0x0, "O", 0x0, "N", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPlatformVersion@@YAHPAXIPAIPAPBG@Z| PROC ; GetPlatformVersion

; 187  : ) {

  00000		 |$LN6@GetPlatfor@2|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5030	 stmdb       sp!, {r4, r5, r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M35768|
  00010	e1a0e003	 mov         lr, r3
  00014	e1a04000	 mov         r4, r0

; 188  :     BOOL rc;
; 189  :     (*spiName) = L"SPI_GETPLATFORMVERSION";

  00018	e59f1044	 ldr         r1, [pc, #0x44]

; 190  :     if(rc = (CheckBufferSize(pOutBuffer, outSize, pOutSize, sizeof(PLATFORMVERSION), *spiName)))

  0001c	e3a05008	 mov         r5, #8
  00020	e28d3004	 add         r3, sp, #4
  00024	e58e1000	 str         r1, [lr]
  00028	e58d1000	 str         r1, [sp]
  0002c	e28d101c	 add         r1, sp, #0x1C
  00030	e58d5004	 str         r5, [sp, #4]
  00034	eb000000	 bl          |?CheckBufferSize@@YAHPBXABIPAI1PBG@Z|
  00038	e3500000	 cmp         r0, #0
  0003c	0a000004	 beq         |$LN1@GetPlatfor@2|

; 191  :     {
; 192  :         // Copy platform version to caller's buffer
; 193  :         memcpy(pOutBuffer, HALPlatformVersion, sizeof(HALPlatformVersion));

  00040	e59f1018	 ldr         r1, [pc, #0x18]
  00044	e3a02008	 mov         r2, #8
  00048	e1a00004	 mov         r0, r4
  0004c	eb000000	 bl          memcpy

; 194  :         rc = TRUE;

  00050	e3a00001	 mov         r0, #1
  00054		 |$LN1@GetPlatfor@2|

; 195  :     }
; 196  :     return rc;
; 197  : }

  00054	e28dd008	 add         sp, sp, #8
  00058	e89d6030	 ldmia       sp, {r4, r5, sp, lr}
  0005c	e12fff1e	 bx          lr
  00060		 |$LN7@GetPlatfor@2|
  00060		 |$LN8@GetPlatfor@2|
  00060	00000000	 DCD         |HALPlatformVersion|
  00064		 |$LN9@GetPlatfor@2|
  00064	00000000	 DCD         |??_C@_1CO@EPEFNCOE@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AAV?$AAE?$AAR?$AAS?$AAI?$AAO?$AAN?$AA?$AA@|
  00068		 |$M35769|

			 ENDP  ; |?GetPlatformVersion@@YAHPAXIPAIPAPBG@Z|, GetPlatformVersion

	EXPORT	|??_C@_1CG@NCDPNLLL@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAP?$AAR?$AAO?$AAJ?$AAE?$AAC?$AAT?$AAN?$AAA?$AAM?$AAE?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T35788| DCD	|$LN6@GetProject|
	DCD	0x40002004

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@NCDPNLLL@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAP?$AAR?$AAO?$AAJ?$AAE?$AAC?$AAT?$AAN?$AAA?$AAM?$AAE?$AA?$AA@| DCB "S"
	DCB	0x0, "P", 0x0, "I", 0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T"
	DCB	0x0, "P", 0x0, "R", 0x0, "O", 0x0, "J", 0x0, "E", 0x0, "C"
	DCB	0x0, "T", 0x0, "N", 0x0, "A", 0x0, "M", 0x0, "E", 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetProjectName@@YAHPAXIPAIPAPBG@Z| PROC ; GetProjectName

; 201  : ) {

  00000		 |$LN6@GetProject|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5070	 stmdb       sp!, {r4 - r6, r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M35785|
  00010	e1a04003	 mov         r4, r3
  00014	e1a05002	 mov         r5, r2
  00018	e1a06000	 mov         r6, r0

; 202  :     BOOL rc;
; 203  :     (*spiName) = L"SPI_GETPROJECTNAME";
; 204  :     if(rc = (CheckBufferSize(pOutBuffer, outSize, pOutSize, (NKwcslen(g_oalIoCtlProjectName)+1)*sizeof(WCHAR), *spiName)))

  0001c	e59fe058	 ldr         lr, [pc, #0x58]
  00020	e59f0050	 ldr         r0, [pc, #0x50]
  00024	e584e000	 str         lr, [r4]
  00028	eb000000	 bl          NKwcslen
  0002c	e280e001	 add         lr, r0, #1
  00030	e5944000	 ldr         r4, [r4]
  00034	e1a0308e	 mov         r3, lr, lsl #1
  00038	e58d3004	 str         r3, [sp, #4]
  0003c	e28d3004	 add         r3, sp, #4
  00040	e1a02005	 mov         r2, r5
  00044	e28d1020	 add         r1, sp, #0x20
  00048	e1a00006	 mov         r0, r6
  0004c	e58d4000	 str         r4, [sp]
  00050	eb000000	 bl          |?CheckBufferSize@@YAHPBXABIPAI1PBG@Z|
  00054	e3500000	 cmp         r0, #0
  00058	0a000003	 beq         |$LN1@GetProject|

; 205  :     {
; 206  :         // Copy project name to caller's buffer
; 207  :         NKwcscpy((WCHAR*)pOutBuffer, g_oalIoCtlProjectName);

  0005c	e59f1014	 ldr         r1, [pc, #0x14]
  00060	e1a00006	 mov         r0, r6
  00064	eb000000	 bl          NKwcscpy

; 208  :         rc = TRUE;

  00068	e3a00001	 mov         r0, #1
  0006c		 |$LN1@GetProject|

; 209  :     }
; 210  :     return rc;
; 211  : }

  0006c	e28dd008	 add         sp, sp, #8
  00070	e89d6070	 ldmia       sp, {r4 - r6, sp, lr}
  00074	e12fff1e	 bx          lr
  00078		 |$LN7@GetProject|
  00078		 |$LN8@GetProject|
  00078	00000000	 DCD         |g_oalIoCtlProjectName|
  0007c		 |$LN9@GetProject|
  0007c	00000000	 DCD         |??_C@_1CG@NCDPNLLL@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAP?$AAR?$AAO?$AAJ?$AAE?$AAC?$AAT?$AAN?$AAA?$AAM?$AAE?$AA?$AA@|
  00080		 |$M35786|

			 ENDP  ; |?GetProjectName@@YAHPAXIPAIPAPBG@Z|, GetProjectName

	EXPORT	|??_C@_1CI@BNCCNAEN@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AAN?$AAA?$AAM?$AAE?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|g_oalIoCtlPlatformType|

  00000			 AREA	 |.pdata|, PDATA
|$T35805| DCD	|$LN6@GetPlatfor@3|
	DCD	0x40002104

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@BNCCNAEN@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AAN?$AAA?$AAM?$AAE?$AA?$AA@| DCB "S"
	DCB	0x0, "P", 0x0, "I", 0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T"
	DCB	0x0, "P", 0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O"
	DCB	0x0, "R", 0x0, "M", 0x0, "N", 0x0, "A", 0x0, "M", 0x0, "E"
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPlatformName@@YAHPAXIPAIPAPBG@Z| PROC ; GetPlatformName

; 215  : ) {

  00000		 |$LN6@GetPlatfor@3|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d50f0	 stmdb       sp!, {r4 - r7, r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M35802|
  00010	e1a04003	 mov         r4, r3
  00014	e1a05002	 mov         r5, r2
  00018	e1a06000	 mov         r6, r0

; 216  :     BOOL rc;
; 217  :     (*spiName) = L"SPI_GETPLATFORMNAME";

  0001c	e59f105c	 ldr         r1, [pc, #0x5C]

; 218  :     if(rc = (CheckBufferSize(pOutBuffer, outSize, pOutSize, (NKwcslen(g_oalIoCtlPlatformType)+1)*sizeof(WCHAR), *spiName)))

  00020	e59f7054	 ldr         r7, [pc, #0x54]
  00024	e5841000	 str         r1, [r4]
  00028	e5970000	 ldr         r0, [r7]
  0002c	eb000000	 bl          NKwcslen
  00030	e2801001	 add         r1, r0, #1
  00034	e594e000	 ldr         lr, [r4]
  00038	e1a03081	 mov         r3, r1, lsl #1
  0003c	e58d3004	 str         r3, [sp, #4]
  00040	e28d3004	 add         r3, sp, #4
  00044	e1a02005	 mov         r2, r5
  00048	e28d1024	 add         r1, sp, #0x24
  0004c	e1a00006	 mov         r0, r6
  00050	e58de000	 str         lr, [sp]
  00054	eb000000	 bl          |?CheckBufferSize@@YAHPBXABIPAI1PBG@Z|
  00058	e3500000	 cmp         r0, #0
  0005c	0a000003	 beq         |$LN1@GetPlatfor@3|

; 219  :     {
; 220  :         // Copy platform name to caller's buffer
; 221  :         NKwcscpy((WCHAR*)pOutBuffer, g_oalIoCtlPlatformType);

  00060	e5971000	 ldr         r1, [r7]
  00064	e1a00006	 mov         r0, r6
  00068	eb000000	 bl          NKwcscpy

; 222  :         rc = TRUE;

  0006c	e3a00001	 mov         r0, #1
  00070		 |$LN1@GetPlatfor@3|

; 223  :     }
; 224  :     return rc;
; 225  : }

  00070	e28dd008	 add         sp, sp, #8
  00074	e89d60f0	 ldmia       sp, {r4 - r7, sp, lr}
  00078	e12fff1e	 bx          lr
  0007c		 |$LN7@GetPlatfor@3|
  0007c		 |$LN8@GetPlatfor@3|
  0007c	00000000	 DCD         |g_oalIoCtlPlatformType|
  00080		 |$LN9@GetPlatfor@3|
  00080	00000000	 DCD         |??_C@_1CI@BNCCNAEN@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AAN?$AAA?$AAM?$AAE?$AA?$AA@|
  00084		 |$M35803|

			 ENDP  ; |?GetPlatformName@@YAHPAXIPAIPAPBG@Z|, GetPlatformName

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|??_C@_1CE@JLAPMINP@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAB?$AAO?$AAO?$AAT?$AAM?$AAE?$AAN?$AAA?$AAM?$AAE?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|OALArgsQuery|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_cookie|
	IMPORT	|__security_check_cookie|

  00000			 AREA	 |.pdata|, PDATA
|$T35846| DCD	|$LN17@GetBootMeN|
	DCD	0xc0004304

  00000			 AREA	 |.xdata|, DATA
|$T35842| DCD	0xffffffd8

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@JLAPMINP@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAB?$AAO?$AAO?$AAT?$AAM?$AAE?$AAN?$AAA?$AAM?$AAE?$AA?$AA@| DCB "S"
	DCB	0x0, "P", 0x0, "I", 0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T"
	DCB	0x0, "B", 0x0, "O", 0x0, "O", 0x0, "T", 0x0, "M", 0x0, "E"
	DCB	0x0, "N", 0x0, "A", 0x0, "M", 0x0, "E", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T35842|

  00008		 |?GetBootMeName@@YAHPAXIPAIPAPBG@Z| PROC ; GetBootMeName

; 229  : ) {

  00008		 |$LN17@GetBootMeN|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d000f	 stmdb       sp!, {r0 - r3}
  00010	e92d5070	 stmdb       sp!, {r4 - r6, r12, lr}
  00014	e24dd030	 sub         sp, sp, #0x30
  00018		 |$M35843|
  00018	e1a04003	 mov         r4, r3
  0001c	e1a06002	 mov         r6, r2
  00020	e1a05000	 mov         r5, r0
  00024	e59f10e4	 ldr         r1, [pc, #0xE4]
  00028	e5911000	 ldr         r1, [r1]
  0002c	e58d102c	 str         r1, [sp, #0x2C]

; 230  :     BOOL rc;
; 231  :     (*spiName) = L"SPI_GETBOOTMENAME";

  00030	e59f10d4	 ldr         r1, [pc, #0xD4]

; 232  :     const char* pBootMeName = (static_cast<char*>(OALArgsQuery(OAL_ARGS_QUERY_DEVID)));

  00034	e3a00001	 mov         r0, #1
  00038	e5841000	 str         r1, [r4]
  0003c	eb000000	 bl          OALArgsQuery
  00040	e3500000	 cmp         r0, #0

; 233  :     if(!pBootMeName)

  00044	1a00000a	 bne         |$LN6@GetBootMeN|

; 234  :     {
; 235  :         ErrorNotSupported(*spiName);

  00048	e5944000	 ldr         r4, [r4]
  0004c	e3a00032	 mov         r0, #0x32
  00050	eb000000	 bl          NKSetLastError
  00054	e59f30ac	 ldr         r3, [pc, #0xAC]
  00058	e5933440	 ldr         r3, [r3, #0x440]
  0005c	e3130001	 tst         r3, #1
  00060	159f009c	 ldrne       r0, [pc, #0x9C]
  00064	11a01004	 movne       r1, r4
  00068	1b000000	 blne        NKDbgPrintfW

; 236  :         rc = FALSE;

  0006c	e3a04000	 mov         r4, #0

; 237  :     }
; 238  :     else 

  00070	ea00001d	 b           |$LN1@GetBootMeN|
  00074		 |$LN6@GetBootMeN|

; 239  :     {
; 240  :         // Convert to Unicode so we know what size we're returning to the caller
; 241  :         // MultiByteToWideChar(...) etc. may not be available at this point
; 242  :         WCHAR pWBootMeName[OAL_KITL_ID_SIZE+1];
; 243  :         UINT32 i;
; 244  :         for(i = 0; (i < OAL_KITL_ID_SIZE) && (*pBootMeName != '\0'); i++)

  00074	e3a02000	 mov         r2, #0
  00078	e28d3008	 add         r3, sp, #8
  0007c		 |$LL4@GetBootMeN|
  0007c	e1d010d0	 ldrsb       r1, [r0]
  00080	e3510000	 cmp         r1, #0
  00084	0a000004	 beq         |$LN2@GetBootMeN|
  00088	e2822001	 add         r2, r2, #1
  0008c	e3520010	 cmp         r2, #0x10

; 245  :         {
; 246  :             pWBootMeName[i] = (*(pBootMeName++));

  00090	e0c310b2	 strh        r1, [r3], #2
  00094	e2800001	 add         r0, r0, #1
  00098	3afffff7	 bcc         |$LL4@GetBootMeN|
  0009c		 |$LN2@GetBootMeN|

; 247  :         }
; 248  :         pWBootMeName[i] = 0;

  0009c	e28d3008	 add         r3, sp, #8
  000a0	e0833082	 add         r3, r3, r2, lsl #1
  000a4	e3a02000	 mov         r2, #0

; 249  :         if(rc = (CheckBufferSize(pOutBuffer, outSize, pOutSize, (NKwcslen(pWBootMeName)+1)*sizeof(WCHAR), *spiName)))

  000a8	e28d0008	 add         r0, sp, #8
  000ac	e1c320b0	 strh        r2, [r3]
  000b0	eb000000	 bl          NKwcslen
  000b4	e2803001	 add         r3, r0, #1
  000b8	e594e000	 ldr         lr, [r4]
  000bc	e1a03083	 mov         r3, r3, lsl #1
  000c0	e58d3004	 str         r3, [sp, #4]
  000c4	e28d3004	 add         r3, sp, #4
  000c8	e1a02006	 mov         r2, r6
  000cc	e28d1048	 add         r1, sp, #0x48
  000d0	e1a00005	 mov         r0, r5
  000d4	e58de000	 str         lr, [sp]
  000d8	eb000000	 bl          |?CheckBufferSize@@YAHPBXABIPAI1PBG@Z|
  000dc	e1b04000	 movs        r4, r0

; 250  :         {
; 251  :             // Copy Unicode bootme name to caller's buffer
; 252  :             NKwcscpy((static_cast<WCHAR*>(pOutBuffer)), pWBootMeName);

  000e0	128d1008	 addne       r1, sp, #8
  000e4	11a00005	 movne       r0, r5
  000e8	1b000000	 blne        NKwcscpy
  000ec		 |$LN1@GetBootMeN|

; 253  :         }
; 254  :     }
; 255  :     return rc;

  000ec	e59d002c	 ldr         r0, [sp, #0x2C]
  000f0	eb000000	 bl          __security_check_cookie

; 256  : }

  000f4	e1a00004	 mov         r0, r4
  000f8	e28dd030	 add         sp, sp, #0x30
  000fc	e89d6070	 ldmia       sp, {r4 - r6, sp, lr}
  00100	e12fff1e	 bx          lr
  00104		 |$LN18@GetBootMeN|
  00104		 |$LN19@GetBootMeN|
  00104	00000000	 DCD         |??_C@_1LA@BNOICHNN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3@|
  00108		 |$LN20@GetBootMeN|
  00108	00000000	 DCD         |dpCurSettings|
  0010c		 |$LN21@GetBootMeN|
  0010c	00000000	 DCD         |??_C@_1CE@JLAPMINP@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAB?$AAO?$AAO?$AAT?$AAM?$AAE?$AAN?$AAA?$AAM?$AAE?$AA?$AA@|
  00110		 |$LN22@GetBootMeN|
  00110	00000000	 DCD         |__security_cookie|
  00114		 |$M35844|

			 ENDP  ; |?GetBootMeName@@YAHPAXIPAIPAPBG@Z|, GetBootMeName

	EXPORT	|??_C@_1BI@MGABGHAL@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAU?$AAU?$AAI?$AAD?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T35876| DCD	|$LN12@GetUUID|
	DCD	0x40002d04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@MGABGHAL@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAU?$AAU?$AAI?$AAD?$AA?$AA@| DCB "S"
	DCB	0x0, "P", 0x0, "I", 0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T"
	DCB	0x0, "U", 0x0, "U", 0x0, "I", 0x0, "D", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetUUID@@YAHPAXIPAIPAPBG@Z| PROC	; GetUUID

; 260  : ) {

  00000		 |$LN12@GetUUID|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d50f0	 stmdb       sp!, {r4 - r7, r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M35873|
  00010	e1a04003	 mov         r4, r3
  00014	e1a07002	 mov         r7, r2
  00018	e1a05000	 mov         r5, r0

; 261  :     BOOL rc;
; 262  :     (*spiName) = L"SPI_GETUUID";

  0001c	e59f108c	 ldr         r1, [pc, #0x8C]

; 263  : 
; 264  :     GUID *pUuid;
; 265  : 
; 266  :     // Does BSP specific UUID exist?
; 267  :     pUuid = static_cast<GUID*>(OALArgsQuery(OAL_ARGS_QUERY_UUID));

  00020	e3a00003	 mov         r0, #3
  00024	e5841000	 str         r1, [r4]
  00028	eb000000	 bl          OALArgsQuery
  0002c	e1b06000	 movs        r6, r0

; 268  :     if (!pUuid)

  00030	1a00000a	 bne         |$LN3@GetUUID|

; 269  :     {
; 270  :         ErrorNotSupported(*spiName);

  00034	e5944000	 ldr         r4, [r4]
  00038	e3a00032	 mov         r0, #0x32
  0003c	eb000000	 bl          NKSetLastError
  00040	e59f3064	 ldr         r3, [pc, #0x64]
  00044	e5933440	 ldr         r3, [r3, #0x440]
  00048	e3130001	 tst         r3, #1
  0004c	159f0054	 ldrne       r0, [pc, #0x54]
  00050	11a01004	 movne       r1, r4
  00054	1b000000	 blne        NKDbgPrintfW

; 271  :         rc = FALSE;

  00058	e3a04000	 mov         r4, #0
  0005c	ea00000d	 b           |$LN1@GetUUID|
  00060		 |$LN3@GetUUID|

; 272  :     }
; 273  :     else if(rc = (CheckBufferSize(pOutBuffer, outSize, pOutSize, sizeof(GUID), *spiName)))

  00060	e5942000	 ldr         r2, [r4]
  00064	e3a0e010	 mov         lr, #0x10
  00068	e28d3004	 add         r3, sp, #4
  0006c	e58d2000	 str         r2, [sp]
  00070	e1a02007	 mov         r2, r7
  00074	e28d1024	 add         r1, sp, #0x24
  00078	e1a00005	 mov         r0, r5
  0007c	e58de004	 str         lr, [sp, #4]
  00080	eb000000	 bl          |?CheckBufferSize@@YAHPBXABIPAI1PBG@Z|
  00084	e1b04000	 movs        r4, r0

; 274  :     {            
; 275  :         // Return the UUID in the caller's allocated space
; 276  :         memcpy(pOutBuffer, pUuid, sizeof(GUID));

  00088	13a02010	 movne       r2, #0x10
  0008c	11a01006	 movne       r1, r6
  00090	11a00005	 movne       r0, r5
  00094	1b000000	 blne        memcpy
  00098		 |$LN1@GetUUID|

; 277  :     }
; 278  : 
; 279  :     return rc;
; 280  : }

  00098	e1a00004	 mov         r0, r4
  0009c	e28dd008	 add         sp, sp, #8
  000a0	e89d60f0	 ldmia       sp, {r4 - r7, sp, lr}
  000a4	e12fff1e	 bx          lr
  000a8		 |$LN13@GetUUID|
  000a8		 |$LN14@GetUUID|
  000a8	00000000	 DCD         |??_C@_1LA@BNOICHNN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3@|
  000ac		 |$LN15@GetUUID|
  000ac	00000000	 DCD         |dpCurSettings|
  000b0		 |$LN16@GetUUID|
  000b0	00000000	 DCD         |??_C@_1BI@MGABGHAL@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAU?$AAU?$AAI?$AAD?$AA?$AA@|
  000b4		 |$M35874|

			 ENDP  ; |?GetUUID@@YAHPAXIPAIPAPBG@Z|, GetUUID

	EXPORT	|??_C@_1CG@IIMMCNFM@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAG?$AAU?$AAI?$AAD?$AAP?$AAA?$AAT?$AAT?$AAE?$AAR?$AAN?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T35894| DCD	|$LN6@GetGUIDPat|
	DCD	0x40001a04

  00000			 AREA	 |.rdata|, DATA, READONLY
|?guidPattern@?1??GetGUIDPattern@@YAHPAXIPAIPAPBG@Z@4U_GUID@@B| DCD 0x600cc7d0 ; `GetGUIDPattern'::`2'::guidPattern
	DCW	0xde3a
	DCW	0x4713
	DCB	0xa5
	DCB	0xb0
	DCB	0x56
	DCB	0xe
	DCB	0x6c
	DCB	0x36
	DCB	0x4e
	DCB	0xde

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@IIMMCNFM@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAG?$AAU?$AAI?$AAD?$AAP?$AAA?$AAT?$AAT?$AAE?$AAR?$AAN?$AA?$AA@| DCB "S"
	DCB	0x0, "P", 0x0, "I", 0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T"
	DCB	0x0, "G", 0x0, "U", 0x0, "I", 0x0, "D", 0x0, "P", 0x0, "A"
	DCB	0x0, "T", 0x0, "T", 0x0, "E", 0x0, "R", 0x0, "N", 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetGUIDPattern@@YAHPAXIPAIPAPBG@Z| PROC ; GetGUIDPattern

; 284  : ) {

  00000		 |$LN6@GetGUIDPat|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5030	 stmdb       sp!, {r4, r5, r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M35891|
  00010	e1a0e003	 mov         lr, r3
  00014	e1a04000	 mov         r4, r0

; 285  :     // common GUID pattern
; 286  :     static const GUID guidPattern = {0x600cc7d0, 0xde3a, 0x4713, {
; 287  :         0xa5, 0xb0, 0x56, 0xe, 0x6c, 0x36, 0x4e, 0xde
; 288  :     }};
; 289  : 
; 290  :     BOOL rc;
; 291  :     (*spiName) = L"SPI_GETGUIDPATTERN";

  00018	e59f1044	 ldr         r1, [pc, #0x44]

; 292  : 
; 293  :     if(rc = (CheckBufferSize(pOutBuffer, outSize, pOutSize, sizeof(guidPattern), *spiName)))

  0001c	e3a05010	 mov         r5, #0x10
  00020	e28d3004	 add         r3, sp, #4
  00024	e58e1000	 str         r1, [lr]
  00028	e58d1000	 str         r1, [sp]
  0002c	e28d101c	 add         r1, sp, #0x1C
  00030	e58d5004	 str         r5, [sp, #4]
  00034	eb000000	 bl          |?CheckBufferSize@@YAHPBXABIPAI1PBG@Z|
  00038	e3500000	 cmp         r0, #0
  0003c	0a000004	 beq         |$LN1@GetGUIDPat|

; 294  :     {
; 295  :         memcpy(pOutBuffer, &guidPattern, sizeof(guidPattern));

  00040	e59f1018	 ldr         r1, [pc, #0x18]
  00044	e3a02010	 mov         r2, #0x10
  00048	e1a00004	 mov         r0, r4
  0004c	eb000000	 bl          memcpy

; 296  :         rc = TRUE;

  00050	e3a00001	 mov         r0, #1
  00054		 |$LN1@GetGUIDPat|

; 297  :     }
; 298  :     return rc;
; 299  : }

  00054	e28dd008	 add         sp, sp, #8
  00058	e89d6030	 ldmia       sp, {r4, r5, sp, lr}
  0005c	e12fff1e	 bx          lr
  00060		 |$LN7@GetGUIDPat|
  00060		 |$LN8@GetGUIDPat|
  00060	00000000	 DCD         |?guidPattern@?1??GetGUIDPattern@@YAHPAXIPAIPAPBG@Z@4U_GUID@@B|
  00064		 |$LN9@GetGUIDPat|
  00064	00000000	 DCD         |??_C@_1CG@IIMMCNFM@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAG?$AAU?$AAI?$AAD?$AAP?$AAA?$AAT?$AAT?$AAE?$AAR?$AAN?$AA?$AA@|
  00068		 |$M35892|

			 ENDP  ; |?GetGUIDPattern@@YAHPAXIPAIPAPBG@Z|, GetGUIDPattern

	EXPORT	|OALIoCtlHalGetDeviceInfo|
	EXPORT	|??_C@_1FO@DMDJMEMA@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?$CI?$AAS?$AAP?$AAI?$AA?5?$AA?$DN?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@FDHCLEBC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@BAANNGGI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@NLAFOPGI@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?$CI?$AA?4?$AA?4?$AA?4?$AA?$CJ?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_11LOCGONAA@?$AA?$AA@| [ DATA ]	; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T36006| DCD	|$LN62@OALIoCtlHa|
	DCD	0x4000f002

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@DMDJMEMA@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?$CI?$AAS?$AAP?$AAI?$AA?5?$AA?$DN?$AA?5@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "I", 0x0, "n", 0x0, "f", 0x0, "o"
	DCB	0x0, "(", 0x0, "S", 0x0, "P", 0x0, "I", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "%", 0x0, "s", 0x0, ",", 0x0, " ", 0x0, "r"
	DCB	0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@FDHCLEBC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "I", 0x0, "n", 0x0, "f", 0x0, "o"
	DCB	0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "p", 0x0, "a"
	DCB	0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@BAANNGGI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "I", 0x0, "n", 0x0, "f", 0x0, "o"
	DCB	0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@NLAFOPGI@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?$CI?$AA?4?$AA?4?$AA?4?$AA?$CJ?$AA?$AN?$AA?6@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "I", 0x0, "n", 0x0, "f", 0x0, "o"
	DCB	0x0, "(", 0x0, ".", 0x0, ".", 0x0, ".", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_11LOCGONAA@?$AA?$AA@| DCB 0x0, 0x0		; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALIoCtlHalGetDeviceInfo| PROC

; 82   : ) {

  00000		 |$LN62@OALIoCtlHa|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004	e24dd010	 sub         sp, sp, #0x10
  00008		 |$M36003|
  00008	e1a05003	 mov         r5, r3
  0000c	e1a09002	 mov         r9, r2
  00010	e1a08001	 mov         r8, r1

; 83   :     BOOL rc = FALSE;
; 84   :     
; 85   :     // This variable contains the text name of the SPI we're using - at this point we don't know
; 86   :     // value but we will fill it in later
; 87   :     const WCHAR* spiName = L"";
; 88   : 
; 89   :     OALMSG(OAL_IOCTL&&OAL_FUNC, (L"+OALIoCtlHalGetDeviceInfo(...)\r\n"));

  00014	e59f73a0	 ldr         r7, [pc, #0x3A0]
  00018	e59f6398	 ldr         r6, [pc, #0x398]
  0001c	e3a04000	 mov         r4, #0
  00020	e5973440	 ldr         r3, [r7, #0x440]
  00024	e58d6008	 str         r6, [sp, #8]
  00028	e3130a01	 tst         r3, #1, 20
  0002c	13130004	 tstne       r3, #4
  00030	159f037c	 ldrne       r0, [pc, #0x37C]
  00034	1b000000	 blne        NKDbgPrintfW

; 90   : 
; 91   :     // Validate inputs
; 92   :     if ((((DWORD)pInpBuffer) & 3) || //check for byte alignment of input buffer
; 93   :         (pInpBuffer == NULL) || (inpSize != sizeof(UINT32))) 

  00038	e3180003	 tst         r8, #3
  0003c	1a0000b9	 bne         |$LN13@OALIoCtlHa|
  00040	e3580000	 cmp         r8, #0
  00044	0a0000b7	 beq         |$LN13@OALIoCtlHa|
  00048	e3590004	 cmp         r9, #4
  0004c	1a0000b5	 bne         |$LN13@OALIoCtlHa|

; 96   :         OALMSG(OAL_ERROR, (
; 97   :             L"ERROR: OALIoCtlHalGetDeviceInfo: Invalid parameter\r\n"
; 98   :         ));
; 99   :         goto cleanUp;
; 100  :     }
; 101  : 
; 102  :     // Process according to input request
; 103  :     switch (*(static_cast<UINT32*>(pInpBuffer))) {

  00050	e5982000	 ldr         r2, [r8]
  00054	e3520f41	 cmp         r2, #0x41, 30
  00058	8a00006a	 bhi         |$LN23@OALIoCtlHa|
  0005c	0a000059	 beq         |$LN6@OALIoCtlHa|
  00060	e35200e0	 cmp         r2, #0xE0
  00064	0a000044	 beq         |$LN7@OALIoCtlHa|
  00068	e3a03c01	 mov         r3, #1, 24
  0006c	e3833001	 orr         r3, r3, #1
  00070	e1520003	 cmp         r2, r3
  00074	0a000030	 beq         |$LN9@OALIoCtlHa|
  00078	e3a03c01	 mov         r3, #1, 24
  0007c	e3833002	 orr         r3, r3, #2
  00080	e1520003	 cmp         r2, r3
  00084	0a000016	 beq         |$LN8@OALIoCtlHa|
  00088	e3a03c01	 mov         r3, #1, 24
  0008c	e3833003	 orr         r3, r3, #3
  00090	e1520003	 cmp         r2, r3
  00094	1a000065	 bne         |$LN1@OALIoCtlHa|

; 116  :     case SPI_GETPROJECTNAME:
; 117  :         rc = GetProjectName(pOutBuffer, outSize, pOutSize, &spiName);

  00098	e59f82f4	 ldr         r8, [pc, #0x2F4]
  0009c	e59d302c	 ldr         r3, [sp, #0x2C]
  000a0	e59f6308	 ldr         r6, [pc, #0x308]
  000a4	e2880008	 add         r0, r8, #8
  000a8	e58d300c	 str         r3, [sp, #0xC]
  000ac	eb000000	 bl          NKwcslen
  000b0	e2803001	 add         r3, r0, #1
  000b4	e59d2030	 ldr         r2, [sp, #0x30]
  000b8	e1a03083	 mov         r3, r3, lsl #1
  000bc	e58d3008	 str         r3, [sp, #8]
  000c0	e28d3008	 add         r3, sp, #8
  000c4	e28d100c	 add         r1, sp, #0xC
  000c8	e1a00005	 mov         r0, r5
  000cc	e58d6000	 str         r6, [sp]
  000d0	eb000000	 bl          |?CheckBufferSize@@YAHPBXABIPAI1PBG@Z|
  000d4	e1b04000	 movs        r4, r0
  000d8	0a000099	 beq         |$cleanUp$35476|
  000dc	e2881008	 add         r1, r8, #8

; 118  :         break;

  000e0	ea000011	 b           |$LN58@OALIoCtlHa|
  000e4		 |$LN8@OALIoCtlHa|

; 107  :     case SPI_GETOEMINFO:
; 108  :         rc = GetOEMInfo(pOutBuffer, outSize, pOutSize, &spiName);

  000e4	e59f82c0	 ldr         r8, [pc, #0x2C0]
  000e8	e59d302c	 ldr         r3, [sp, #0x2C]
  000ec	e59f62b4	 ldr         r6, [pc, #0x2B4]
  000f0	e5980000	 ldr         r0, [r8]
  000f4	e58d3008	 str         r3, [sp, #8]
  000f8	eb000000	 bl          NKwcslen
  000fc	e2803001	 add         r3, r0, #1
  00100	e59d2030	 ldr         r2, [sp, #0x30]
  00104	e1a03083	 mov         r3, r3, lsl #1
  00108	e58d300c	 str         r3, [sp, #0xC]
  0010c	e28d300c	 add         r3, sp, #0xC
  00110	e28d1008	 add         r1, sp, #8
  00114	e1a00005	 mov         r0, r5
  00118	e58d6000	 str         r6, [sp]
  0011c	eb000000	 bl          |?CheckBufferSize@@YAHPBXABIPAI1PBG@Z|
  00120		 |$LN57@OALIoCtlHa|
  00120	e1b04000	 movs        r4, r0
  00124	0a000086	 beq         |$cleanUp$35476|
  00128	e5981000	 ldr         r1, [r8]
  0012c		 |$LN58@OALIoCtlHa|
  0012c	e1a00005	 mov         r0, r5
  00130	eb000000	 bl          NKwcscpy
  00134	e3a04001	 mov         r4, #1

; 109  :         break;

  00138	ea000081	 b           |$cleanUp$35476|
  0013c		 |$LN9@OALIoCtlHa|

; 104  :     case SPI_GETPLATFORMTYPE:
; 105  :         rc = GetPlatformType(pOutBuffer, outSize, pOutSize, &spiName);

  0013c	e59f0260	 ldr         r0, [pc, #0x260]
  00140	e59f6258	 ldr         r6, [pc, #0x258]
  00144	eb000000	 bl          NKDbgPrintfW
  00148	e59d3030	 ldr         r3, [sp, #0x30]
  0014c	e59d202c	 ldr         r2, [sp, #0x2C]
  00150	e59f0244	 ldr         r0, [pc, #0x244]
  00154	e58d3004	 str         r3, [sp, #4]
  00158	e58d2000	 str         r2, [sp]
  0015c	e3a0ef41	 mov         lr, #0x41, 30
  00160	e1a03005	 mov         r3, r5
  00164	e3a02004	 mov         r2, #4
  00168	e28d100c	 add         r1, sp, #0xC
  0016c	e58de00c	 str         lr, [sp, #0xC]
  00170	eb000000	 bl          OEMIoControl
  00174	e1a04000	 mov         r4, r0

; 106  :         break;

  00178	ea000071	 b           |$cleanUp$35476|
  0017c		 |$LN7@OALIoCtlHa|

; 110  :     case SPI_GETPLATFORMVERSION:
; 111  :         rc = GetPlatformVersion(pOutBuffer, outSize, pOutSize, &spiName);

  0017c	e59d302c	 ldr         r3, [sp, #0x2C]
  00180	e59f6210	 ldr         r6, [pc, #0x210]
  00184	e59d2030	 ldr         r2, [sp, #0x30]
  00188	e58d300c	 str         r3, [sp, #0xC]
  0018c	e3a0e008	 mov         lr, #8
  00190	e28d3008	 add         r3, sp, #8
  00194	e28d100c	 add         r1, sp, #0xC
  00198	e1a00005	 mov         r0, r5
  0019c	e58d6000	 str         r6, [sp]
  001a0	e58de008	 str         lr, [sp, #8]
  001a4	eb000000	 bl          |?CheckBufferSize@@YAHPBXABIPAI1PBG@Z|
  001a8	e1b04000	 movs        r4, r0
  001ac	0a000064	 beq         |$cleanUp$35476|
  001b0	e59f11dc	 ldr         r1, [pc, #0x1DC]
  001b4	e3a02008	 mov         r2, #8
  001b8		 |$LN59@OALIoCtlHa|
  001b8	e1a00005	 mov         r0, r5
  001bc	eb000000	 bl          memcpy
  001c0	e3a04001	 mov         r4, #1
  001c4	ea00005e	 b           |$cleanUp$35476|
  001c8		 |$LN6@OALIoCtlHa|

; 112  :         break;
; 113  :     case SPI_GETPLATFORMNAME:
; 114  :         rc = GetPlatformName(pOutBuffer, outSize, pOutSize, &spiName);

  001c8	e59f81c0	 ldr         r8, [pc, #0x1C0]
  001cc	e59d302c	 ldr         r3, [sp, #0x2C]
  001d0	e59f61b4	 ldr         r6, [pc, #0x1B4]
  001d4	e5980000	 ldr         r0, [r8]
  001d8	e58d3008	 str         r3, [sp, #8]
  001dc	eb000000	 bl          NKwcslen
  001e0	e2803001	 add         r3, r0, #1
  001e4	e59d2030	 ldr         r2, [sp, #0x30]
  001e8	e1a03083	 mov         r3, r3, lsl #1
  001ec	e58d300c	 str         r3, [sp, #0xC]
  001f0	e28d300c	 add         r3, sp, #0xC
  001f4	e28d1008	 add         r1, sp, #8
  001f8	e1a00005	 mov         r0, r5
  001fc	e58d6000	 str         r6, [sp]
  00200	eb000000	 bl          |?CheckBufferSize@@YAHPBXABIPAI1PBG@Z|

; 115  :         break;

  00204	eaffffc5	 b           |$LN57@OALIoCtlHa|
  00208		 |$LN23@OALIoCtlHa|
  00208	e3a03c01	 mov         r3, #1, 24
  0020c	e3833005	 orr         r3, r3, #5
  00210	e1520003	 cmp         r2, r3
  00214	0a00003b	 beq         |$LN4@OALIoCtlHa|
  00218	e3a03c01	 mov         r3, #1, 24
  0021c	e3833007	 orr         r3, r3, #7
  00220	e1520003	 cmp         r2, r3
  00224	0a000018	 beq         |$LN3@OALIoCtlHa|

; 96   :         OALMSG(OAL_ERROR, (
; 97   :             L"ERROR: OALIoCtlHalGetDeviceInfo: Invalid parameter\r\n"
; 98   :         ));
; 99   :         goto cleanUp;
; 100  :     }
; 101  : 
; 102  :     // Process according to input request
; 103  :     switch (*(static_cast<UINT32*>(pInpBuffer))) {

  00228	e3520f42	 cmp         r2, #0x42, 30
  0022c	0a000006	 beq         |$LN2@OALIoCtlHa|
  00230		 |$LN1@OALIoCtlHa|

; 128  :     default:
; 129  :         NKSetLastError(ERROR_INVALID_PARAMETER);

  00230	e3a00057	 mov         r0, #0x57
  00234	eb000000	 bl          NKSetLastError
  00238	e5973440	 ldr         r3, [r7, #0x440]

; 130  :         OALMSG(OAL_ERROR, (
; 131  :             L"ERROR: OALIoCtlHalGetDeviceInfo: Invalid request\r\n"
; 132  :         ));

  0023c	e3130001	 tst         r3, #1
  00240	0a00003f	 beq         |$cleanUp$35476|
  00244	e59f013c	 ldr         r0, [pc, #0x13C]

; 133  :         break;

  00248	ea00003c	 b           |$LN55@OALIoCtlHa|
  0024c		 |$LN2@OALIoCtlHa|

; 125  :     case SPI_GETGUIDPATTERN:
; 126  :         rc = GetGUIDPattern(pOutBuffer, outSize, pOutSize, &spiName);

  0024c	e59d302c	 ldr         r3, [sp, #0x2C]
  00250	e59f612c	 ldr         r6, [pc, #0x12C]
  00254	e59d2030	 ldr         r2, [sp, #0x30]
  00258	e58d300c	 str         r3, [sp, #0xC]
  0025c	e3a0e010	 mov         lr, #0x10
  00260	e28d3008	 add         r3, sp, #8
  00264	e28d100c	 add         r1, sp, #0xC
  00268	e1a00005	 mov         r0, r5
  0026c	e58d6000	 str         r6, [sp]
  00270	e58de008	 str         lr, [sp, #8]
  00274	eb000000	 bl          |?CheckBufferSize@@YAHPBXABIPAI1PBG@Z|
  00278	e1b04000	 movs        r4, r0
  0027c	0a000030	 beq         |$cleanUp$35476|
  00280	e59f10f8	 ldr         r1, [pc, #0xF8]
  00284	e3a02010	 mov         r2, #0x10

; 127  :         break;

  00288	eaffffca	 b           |$LN59@OALIoCtlHa|
  0028c		 |$LN3@OALIoCtlHa|

; 121  :         break;
; 122  :     case SPI_GETUUID:
; 123  :         rc = GetUUID(pOutBuffer, outSize, pOutSize, &spiName);

  0028c	e59d302c	 ldr         r3, [sp, #0x2C]
  00290	e59f60e4	 ldr         r6, [pc, #0xE4]
  00294	e3a00003	 mov         r0, #3
  00298	e58d300c	 str         r3, [sp, #0xC]
  0029c	eb000000	 bl          OALArgsQuery
  002a0	e1b08000	 movs        r8, r0
  002a4	1a000008	 bne         |$LN44@OALIoCtlHa|
  002a8	e3a00032	 mov         r0, #0x32
  002ac	eb000000	 bl          NKSetLastError
  002b0	e5973440	 ldr         r3, [r7, #0x440]
  002b4	e3130001	 tst         r3, #1
  002b8	159f00b8	 ldrne       r0, [pc, #0xB8]
  002bc	11a01006	 movne       r1, r6
  002c0	1b000000	 blne        NKDbgPrintfW
  002c4	e3a04000	 mov         r4, #0
  002c8	ea00001d	 b           |$cleanUp$35476|
  002cc		 |$LN44@OALIoCtlHa|
  002cc	e59d2030	 ldr         r2, [sp, #0x30]
  002d0	e3a0e010	 mov         lr, #0x10
  002d4	e28d3008	 add         r3, sp, #8
  002d8	e28d100c	 add         r1, sp, #0xC
  002dc	e1a00005	 mov         r0, r5
  002e0	e58de008	 str         lr, [sp, #8]
  002e4	e58d6000	 str         r6, [sp]
  002e8	eb000000	 bl          |?CheckBufferSize@@YAHPBXABIPAI1PBG@Z|
  002ec	e1b04000	 movs        r4, r0
  002f0	0a000013	 beq         |$cleanUp$35476|
  002f4	e3a02010	 mov         r2, #0x10
  002f8	e1a01008	 mov         r1, r8
  002fc	e1a00005	 mov         r0, r5
  00300	eb000000	 bl          memcpy

; 124  :         break;

  00304	ea00000e	 b           |$cleanUp$35476|
  00308		 |$LN4@OALIoCtlHa|

; 119  :     case SPI_GETBOOTMENAME:
; 120  :         rc = GetBootMeName(pOutBuffer, outSize, pOutSize, &spiName);

  00308	e59d2030	 ldr         r2, [sp, #0x30]
  0030c	e59d102c	 ldr         r1, [sp, #0x2C]
  00310	e28d3008	 add         r3, sp, #8
  00314	e1a00005	 mov         r0, r5
  00318	eb000000	 bl          |?GetBootMeName@@YAHPAXIPAIPAPBG@Z|

; 134  :     }
; 135  : 
; 136  : cleanUp:

  0031c	e59d6008	 ldr         r6, [sp, #8]
  00320	e1a04000	 mov         r4, r0
  00324	ea000006	 b           |$cleanUp$35476|
  00328		 |$LN13@OALIoCtlHa|

; 94   :     {
; 95   :         NKSetLastError(ERROR_INVALID_PARAMETER);

  00328	e3a00057	 mov         r0, #0x57
  0032c	eb000000	 bl          NKSetLastError

; 118  :         break;

  00330	e5973440	 ldr         r3, [r7, #0x440]
  00334	e3130001	 tst         r3, #1
  00338	0a000001	 beq         |$cleanUp$35476|
  0033c	e59f0030	 ldr         r0, [pc, #0x30]
  00340		 |$LN55@OALIoCtlHa|
  00340	eb000000	 bl          NKDbgPrintfW
  00344		 |$cleanUp$35476|
  00344	e5973440	 ldr         r3, [r7, #0x440]

; 137  :     // Indicate status
; 138  :     OALMSG(OAL_FUNC&&OAL_IOCTL, (
; 139  :         L"-OALIoCtlHalGetDeviceInfo(SPI = %s, rc = %d)\r\n", spiName, rc
; 140  :     ));

  00348	e3130004	 tst         r3, #4
  0034c	13130a01	 tstne       r3, #1, 20
  00350	159f0018	 ldrne       r0, [pc, #0x18]
  00354	11a02004	 movne       r2, r4
  00358	11a01006	 movne       r1, r6
  0035c	1b000000	 blne        NKDbgPrintfW

; 141  :     return rc;
; 142  : }

  00360	e1a00004	 mov         r0, r4
  00364	e28dd010	 add         sp, sp, #0x10
  00368	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  0036c	e12fff1e	 bx          lr
  00370		 |$LN63@OALIoCtlHa|
  00370		 |$LN64@OALIoCtlHa|
  00370	00000000	 DCD         |??_C@_1FO@DMDJMEMA@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?$CI?$AAS?$AAP?$AAI?$AA?5?$AA?$DN?$AA?5@|
  00374		 |$LN65@OALIoCtlHa|
  00374	00000000	 DCD         |??_C@_1GK@FDHCLEBC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3@|
  00378		 |$LN66@OALIoCtlHa|
  00378	00000000	 DCD         |??_C@_1LA@BNOICHNN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3@|
  0037c		 |$LN67@OALIoCtlHa|
  0037c	00000000	 DCD         |??_C@_1BI@MGABGHAL@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAU?$AAU?$AAI?$AAD?$AA?$AA@|
  00380		 |$LN68@OALIoCtlHa|
  00380	00000000	 DCD         |?guidPattern@?1??GetGUIDPattern@@YAHPAXIPAIPAPBG@Z@4U_GUID@@B|
  00384		 |$LN69@OALIoCtlHa|
  00384	00000000	 DCD         |??_C@_1CG@IIMMCNFM@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAG?$AAU?$AAI?$AAD?$AAP?$AAA?$AAT?$AAT?$AAE?$AAR?$AAN?$AA?$AA@|
  00388		 |$LN70@OALIoCtlHa|
  00388	00000000	 DCD         |??_C@_1GG@BAANNGGI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3@|
  0038c		 |$LN71@OALIoCtlHa|
  0038c	00000000	 DCD         |??_C@_1CI@BNCCNAEN@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AAN?$AAA?$AAM?$AAE?$AA?$AA@|
  00390		 |$LN72@OALIoCtlHa|
  00390	00000000	 DCD         |g_oalIoCtlPlatformType|
  00394		 |$LN73@OALIoCtlHa|
  00394	00000000	 DCD         |HALPlatformVersion|
  00398		 |$LN74@OALIoCtlHa|
  00398	00000000	 DCD         |??_C@_1CO@EPEFNCOE@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AAV?$AAE?$AAR?$AAS?$AAI?$AAO?$AAN?$AA?$AA@|
  0039c		 |$LN75@OALIoCtlHa|
  0039c	01010004	 DCD         0x1010004
  003a0		 |$LN76@OALIoCtlHa|
  003a0	00000000	 DCD         |??_C@_1CI@DNLIPKLH@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  003a4		 |$LN77@OALIoCtlHa|
  003a4	00000000	 DCD         |??_C@_1BEM@IMHNFGHE@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAI?$AAO?$AAC?$AAT@|
  003a8		 |$LN78@OALIoCtlHa|
  003a8	00000000	 DCD         |??_C@_1BO@MIPEKPNN@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAO?$AAE?$AAM?$AAI?$AAN?$AAF?$AAO?$AA?$AA@|
  003ac		 |$LN79@OALIoCtlHa|
  003ac	00000000	 DCD         |g_oalIoCtlPlatformOEM|
  003b0		 |$LN80@OALIoCtlHa|
  003b0	00000000	 DCD         |??_C@_1CG@NCDPNLLL@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAP?$AAR?$AAO?$AAJ?$AAE?$AAC?$AAT?$AAN?$AAA?$AAM?$AAE?$AA?$AA@|
  003b4		 |$LN81@OALIoCtlHa|
  003b4	00000000	 DCD         |??_C@_1EC@NLAFOPGI@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?$CI?$AA?4?$AA?4?$AA?4?$AA?$CJ?$AA?$AN?$AA?6@|
  003b8		 |$LN82@OALIoCtlHa|
  003b8	00000000	 DCD         |??_C@_11LOCGONAA@?$AA?$AA@|
  003bc		 |$LN83@OALIoCtlHa|
  003bc	00000000	 DCD         |dpCurSettings|
  003c0		 |$M36004|

			 ENDP  ; |OALIoCtlHalGetDeviceInfo|

	END
