; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\COMMON\IOCTL\procinfo.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|??_C@_1EE@LLJFHFAM@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAo?$AAr?$AAI?$AAn?$AAf?$AAo?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GI@EFCEJCLG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAo?$AAr?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAV?$AAe?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@JPAPEENG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAo?$AAr?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAN?$AAa?$AAm@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@OFFJPJMM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAo?$AAr?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAC?$AAo?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@EACFLEMI@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAo?$AAr?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAB?$AAu?$AAf@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@MJNAOGCM@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAo?$AAr?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAI?$AAn?$AAv@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@NEACNOML@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAo?$AAr?$AAI?$AAn?$AAf?$AAo?$AA?$CI?$AA?4?$AA?4?$AA?4?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|OALIoCtlProcessorInfo|
	IMPORT	|g_oalIoCtlClockSpeed|
	IMPORT	|g_oalIoCtlInstructionSet|
	IMPORT	|memcpy|
	IMPORT	|memset|
	IMPORT	|g_oalIoCtlProcessorVendor|
	IMPORT	|g_oalIoCtlProcessorName|
	IMPORT	|NKwcslen|
	IMPORT	|g_oalIoCtlProcessorCore|
	IMPORT	|NKSetLastError|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|

  00000			 AREA	 |.pdata|, PDATA
|$T43068| DCD	|$LN26@OALIoCtlPr|
	DCD	0x4000ce04
; File c:\wince600\platform\common\src\common\ioctl\procinfo.c

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@LLJFHFAM@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAo?$AAr?$AAI?$AAn?$AAf?$AAo?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, "o", 0x0, "r", 0x0, "I"
	DCB	0x0, "n", 0x0, "f", 0x0, "o", 0x0, "(", 0x0, "r", 0x0, "c"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@EFCEJCLG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAo?$AAr?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAV?$AAe?$AAn@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C", 0x0, "t"
	DCB	0x0, "l", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "o", 0x0, "r", 0x0, "I", 0x0, "n"
	DCB	0x0, "f", 0x0, "o", 0x0, ":", 0x0, " ", 0x0, "V", 0x0, "e"
	DCB	0x0, "n", 0x0, "d", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "v"
	DCB	0x0, "a", 0x0, "l", 0x0, "u", 0x0, "e", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, "o", 0x0, " ", 0x0, "b", 0x0, "i", 0x0, "g"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@JPAPEENG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAo?$AAr?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAN?$AAa?$AAm@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C", 0x0, "t"
	DCB	0x0, "l", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "o", 0x0, "r", 0x0, "I", 0x0, "n"
	DCB	0x0, "f", 0x0, "o", 0x0, ":", 0x0, " ", 0x0, "N", 0x0, "a"
	DCB	0x0, "m", 0x0, "e", 0x0, " ", 0x0, "v", 0x0, "a", 0x0, "l"
	DCB	0x0, "u", 0x0, "e", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, "o"
	DCB	0x0, " ", 0x0, "b", 0x0, "i", 0x0, "g", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@OFFJPJMM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAo?$AAr?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAC?$AAo?$AAr@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C", 0x0, "t"
	DCB	0x0, "l", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "o", 0x0, "r", 0x0, "I", 0x0, "n"
	DCB	0x0, "f", 0x0, "o", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "o"
	DCB	0x0, "r", 0x0, "e", 0x0, " ", 0x0, "v", 0x0, "a", 0x0, "l"
	DCB	0x0, "u", 0x0, "e", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, "o"
	DCB	0x0, " ", 0x0, "b", 0x0, "i", 0x0, "g", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@EACFLEMI@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAo?$AAr?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAB?$AAu?$AAf@| DCB "W"
	DCB	0x0, "A", 0x0, "R", 0x0, "N", 0x0, ":", 0x0, " ", 0x0, "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C", 0x0, "t"
	DCB	0x0, "l", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "o", 0x0, "r", 0x0, "I", 0x0, "n"
	DCB	0x0, "f", 0x0, "o", 0x0, ":", 0x0, " ", 0x0, "B", 0x0, "u"
	DCB	0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, "o", 0x0, " ", 0x0, "s", 0x0, "m", 0x0, "a"
	DCB	0x0, "l", 0x0, "l", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@MJNAOGCM@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAo?$AAr?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAI?$AAn?$AAv@| DCB "W"
	DCB	0x0, "A", 0x0, "R", 0x0, "N", 0x0, ":", 0x0, " ", 0x0, "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C", 0x0, "t"
	DCB	0x0, "l", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "o", 0x0, "r", 0x0, "I", 0x0, "n"
	DCB	0x0, "f", 0x0, "o", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, " "
	DCB	0x0, "o", 0x0, "u", 0x0, "t", 0x0, "p", 0x0, "u", 0x0, "t"
	DCB	0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@NEACNOML@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAo?$AAr?$AAI?$AAn?$AAf?$AAo?$AA?$CI?$AA?4?$AA?4?$AA?4?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, "o", 0x0, "r", 0x0, "I"
	DCB	0x0, "n", 0x0, "f", 0x0, "o", 0x0, "(", 0x0, ".", 0x0, "."
	DCB	0x0, ".", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALIoCtlProcessorInfo| PROC

; 30   : ) {

  00000		 |$LN26@OALIoCtlPr|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd040	 sub         sp, sp, #0x40
  00010		 |$M43065|

; 31   :     BOOL rc = FALSE;

  00010	e3a03000	 mov         r3, #0
  00014	e58d3000	 str         r3, [sp]

; 32   :     PROCESSOR_INFO *pInfo = (PROCESSOR_INFO*)pOutBuffer;

  00018	e59d3054	 ldr         r3, [sp, #0x54]
  0001c	e58d3004	 str         r3, [sp, #4]

; 33   :     UINT32 length1, length2, length3;
; 34   : 
; 35   :     OALMSG(OAL_FUNC, (L"+OALIoCtlProcessorInfo(...)\r\n"));

  00020	e59f32e0	 ldr         r3, [pc, #0x2E0]
  00024	e5933440	 ldr         r3, [r3, #0x440]
  00028	e3130004	 tst         r3, #4
  0002c	0a000004	 beq         |$LN10@OALIoCtlPr|
  00030	e59f02fc	 ldr         r0, [pc, #0x2FC]
  00034	eb000000	 bl          NKDbgPrintfW
  00038	e3a03001	 mov         r3, #1
  0003c	e58d3018	 str         r3, [sp, #0x18]
  00040	ea000001	 b           |$LN11@OALIoCtlPr|
  00044		 |$LN10@OALIoCtlPr|
  00044	e3a03000	 mov         r3, #0
  00048	e58d3018	 str         r3, [sp, #0x18]
  0004c		 |$LN11@OALIoCtlPr|

; 36   : 
; 37   :     // Set required/returned size if pointer isn't NULL
; 38   :     if (pOutSize != NULL) {

  0004c	e59d305c	 ldr         r3, [sp, #0x5C]
  00050	e3530000	 cmp         r3, #0
  00054	0a000002	 beq         |$LN7@OALIoCtlPr|

; 39   :         *pOutSize = sizeof(PROCESSOR_INFO);

  00058	e59d205c	 ldr         r2, [sp, #0x5C]
  0005c	e3a03d09	 mov         r3, #9, 26
  00060	e5823000	 str         r3, [r2]
  00064		 |$LN7@OALIoCtlPr|

; 40   :     }
; 41   :     
; 42   :     // Validate inputs
; 43   :     if (pOutBuffer == NULL && outSize > 0) {

  00064	e59d3054	 ldr         r3, [sp, #0x54]
  00068	e3530000	 cmp         r3, #0
  0006c	1a000010	 bne         |$LN6@OALIoCtlPr|
  00070	e59d3058	 ldr         r3, [sp, #0x58]
  00074	e3530000	 cmp         r3, #0
  00078	9a00000d	 bls         |$LN6@OALIoCtlPr|

; 44   :         NKSetLastError(ERROR_INVALID_PARAMETER);

  0007c	e3a00057	 mov         r0, #0x57
  00080	eb000000	 bl          NKSetLastError

; 45   :         OALMSG(OAL_WARN, (
; 46   :             L"WARN: OALIoCtlProcessorInfo: Invalid output buffer\r\n"
; 47   :         ));

  00084	e59f327c	 ldr         r3, [pc, #0x27C]
  00088	e5933440	 ldr         r3, [r3, #0x440]
  0008c	e3130002	 tst         r3, #2
  00090	0a000004	 beq         |$LN12@OALIoCtlPr|
  00094	e59f0294	 ldr         r0, [pc, #0x294]
  00098	eb000000	 bl          NKDbgPrintfW
  0009c	e3a03001	 mov         r3, #1
  000a0	e58d301c	 str         r3, [sp, #0x1C]
  000a4	ea000001	 b           |$LN13@OALIoCtlPr|
  000a8		 |$LN12@OALIoCtlPr|
  000a8	e3a03000	 mov         r3, #0
  000ac	e58d301c	 str         r3, [sp, #0x1C]
  000b0		 |$LN13@OALIoCtlPr|

; 48   :         goto cleanUp;

  000b0	ea000081	 b           |$cleanUp$43012|
  000b4		 |$LN6@OALIoCtlPr|

; 49   :     }
; 50   : 
; 51   :     if (pOutBuffer == NULL || outSize < sizeof(PROCESSOR_INFO)) {

  000b4	e59d3054	 ldr         r3, [sp, #0x54]
  000b8	e3530000	 cmp         r3, #0
  000bc	0a000002	 beq         |$LN4@OALIoCtlPr|
  000c0	e59d3058	 ldr         r3, [sp, #0x58]
  000c4	e3530d09	 cmp         r3, #9, 26
  000c8	2a00000d	 bcs         |$LN5@OALIoCtlPr|
  000cc		 |$LN4@OALIoCtlPr|

; 52   :         NKSetLastError(ERROR_INSUFFICIENT_BUFFER);

  000cc	e3a0007a	 mov         r0, #0x7A
  000d0	eb000000	 bl          NKSetLastError

; 53   :         OALMSG(OAL_WARN, (
; 54   :             L"WARN: OALIoCtlProcessorInfo: Buffer too small\r\n"
; 55   :         ));

  000d4	e59f322c	 ldr         r3, [pc, #0x22C]
  000d8	e5933440	 ldr         r3, [r3, #0x440]
  000dc	e3130002	 tst         r3, #2
  000e0	0a000004	 beq         |$LN14@OALIoCtlPr|
  000e4	e59f0240	 ldr         r0, [pc, #0x240]
  000e8	eb000000	 bl          NKDbgPrintfW
  000ec	e3a03001	 mov         r3, #1
  000f0	e58d3020	 str         r3, [sp, #0x20]
  000f4	ea000001	 b           |$LN15@OALIoCtlPr|
  000f8		 |$LN14@OALIoCtlPr|
  000f8	e3a03000	 mov         r3, #0
  000fc	e58d3020	 str         r3, [sp, #0x20]
  00100		 |$LN15@OALIoCtlPr|

; 56   :         goto cleanUp;

  00100	ea00006d	 b           |$cleanUp$43012|
  00104		 |$LN5@OALIoCtlPr|

; 57   :     }
; 58   : 
; 59   :     // Verify OAL lengths
; 60   :     length1 = (NKwcslen(g_oalIoCtlProcessorCore) + 1) * sizeof(WCHAR);

  00104	e59f3210	 ldr         r3, [pc, #0x210]
  00108	e5930000	 ldr         r0, [r3]
  0010c	eb000000	 bl          NKwcslen
  00110	e58d0024	 str         r0, [sp, #0x24]
  00114	e59d3024	 ldr         r3, [sp, #0x24]
  00118	e2832001	 add         r2, r3, #1
  0011c	e3a03002	 mov         r3, #2
  00120	e0030392	 mul         r3, r2, r3
  00124	e58d3010	 str         r3, [sp, #0x10]

; 61   :     if (length1 > sizeof(pInfo->szProcessCore)) {

  00128	e59d3010	 ldr         r3, [sp, #0x10]
  0012c	e3530050	 cmp         r3, #0x50
  00130	9a00000b	 bls         |$LN3@OALIoCtlPr|

; 62   :         OALMSG(OAL_ERROR, (
; 63   :             L"ERROR:OALIoCtlProcessorInfo: Core value too big\r\n"
; 64   :         ));

  00134	e59f31cc	 ldr         r3, [pc, #0x1CC]
  00138	e5933440	 ldr         r3, [r3, #0x440]
  0013c	e3130001	 tst         r3, #1
  00140	0a000004	 beq         |$LN16@OALIoCtlPr|
  00144	e59f01dc	 ldr         r0, [pc, #0x1DC]
  00148	eb000000	 bl          NKDbgPrintfW
  0014c	e3a03001	 mov         r3, #1
  00150	e58d3028	 str         r3, [sp, #0x28]
  00154	ea000001	 b           |$LN17@OALIoCtlPr|
  00158		 |$LN16@OALIoCtlPr|
  00158	e3a03000	 mov         r3, #0
  0015c	e58d3028	 str         r3, [sp, #0x28]
  00160		 |$LN17@OALIoCtlPr|

; 65   :         goto cleanUp;

  00160	ea000055	 b           |$cleanUp$43012|
  00164		 |$LN3@OALIoCtlPr|

; 66   :     }
; 67   : 
; 68   :     length2 = (NKwcslen(g_oalIoCtlProcessorName) + 1) * sizeof(WCHAR);

  00164	e59f31ac	 ldr         r3, [pc, #0x1AC]
  00168	e5930000	 ldr         r0, [r3]
  0016c	eb000000	 bl          NKwcslen
  00170	e58d002c	 str         r0, [sp, #0x2C]
  00174	e59d302c	 ldr         r3, [sp, #0x2C]
  00178	e2832001	 add         r2, r3, #1
  0017c	e3a03002	 mov         r3, #2
  00180	e0030392	 mul         r3, r2, r3
  00184	e58d3008	 str         r3, [sp, #8]

; 69   :     if (length2 > sizeof(pInfo->szProcessorName)) {

  00188	e59d3008	 ldr         r3, [sp, #8]
  0018c	e3530050	 cmp         r3, #0x50
  00190	9a00000b	 bls         |$LN2@OALIoCtlPr|

; 70   :         OALMSG(OAL_ERROR, (
; 71   :             L"ERROR:OALIoCtlProcessorInfo: Name value too big\r\n"
; 72   :         ));

  00194	e59f316c	 ldr         r3, [pc, #0x16C]
  00198	e5933440	 ldr         r3, [r3, #0x440]
  0019c	e3130001	 tst         r3, #1
  001a0	0a000004	 beq         |$LN18@OALIoCtlPr|
  001a4	e59f0178	 ldr         r0, [pc, #0x178]
  001a8	eb000000	 bl          NKDbgPrintfW
  001ac	e3a03001	 mov         r3, #1
  001b0	e58d3030	 str         r3, [sp, #0x30]
  001b4	ea000001	 b           |$LN19@OALIoCtlPr|
  001b8		 |$LN18@OALIoCtlPr|
  001b8	e3a03000	 mov         r3, #0
  001bc	e58d3030	 str         r3, [sp, #0x30]
  001c0		 |$LN19@OALIoCtlPr|

; 73   :         goto cleanUp;

  001c0	ea00003d	 b           |$cleanUp$43012|
  001c4		 |$LN2@OALIoCtlPr|

; 74   :     }
; 75   : 
; 76   :     length3 = (NKwcslen(g_oalIoCtlProcessorVendor) + 1) * sizeof(WCHAR);

  001c4	e59f3148	 ldr         r3, [pc, #0x148]
  001c8	e5930000	 ldr         r0, [r3]
  001cc	eb000000	 bl          NKwcslen
  001d0	e58d0034	 str         r0, [sp, #0x34]
  001d4	e59d3034	 ldr         r3, [sp, #0x34]
  001d8	e2832001	 add         r2, r3, #1
  001dc	e3a03002	 mov         r3, #2
  001e0	e0030392	 mul         r3, r2, r3
  001e4	e58d300c	 str         r3, [sp, #0xC]

; 77   :     if (length3 > sizeof(pInfo->szVendor)) {

  001e8	e59d300c	 ldr         r3, [sp, #0xC]
  001ec	e35300c8	 cmp         r3, #0xC8
  001f0	9a00000b	 bls         |$LN1@OALIoCtlPr|

; 78   :         OALMSG(OAL_ERROR, (
; 79   :             L"ERROR:OALIoCtlProcessorInfo: Vendor value too big\r\n"
; 80   :         ));

  001f4	e59f310c	 ldr         r3, [pc, #0x10C]
  001f8	e5933440	 ldr         r3, [r3, #0x440]
  001fc	e3130001	 tst         r3, #1
  00200	0a000004	 beq         |$LN20@OALIoCtlPr|
  00204	e59f0114	 ldr         r0, [pc, #0x114]
  00208	eb000000	 bl          NKDbgPrintfW
  0020c	e3a03001	 mov         r3, #1
  00210	e58d3038	 str         r3, [sp, #0x38]
  00214	ea000001	 b           |$LN21@OALIoCtlPr|
  00218		 |$LN20@OALIoCtlPr|
  00218	e3a03000	 mov         r3, #0
  0021c	e58d3038	 str         r3, [sp, #0x38]
  00220		 |$LN21@OALIoCtlPr|

; 81   :         goto cleanUp;

  00220	ea000025	 b           |$cleanUp$43012|
  00224		 |$LN1@OALIoCtlPr|

; 82   :     }
; 83   : 
; 84   :     // Copy in processor information    
; 85   :     memset(pInfo, 0, sizeof(PROCESSOR_INFO));

  00224	e3a02d09	 mov         r2, #9, 26
  00228	e3a01000	 mov         r1, #0
  0022c	e59d0004	 ldr         r0, [sp, #4]
  00230	eb000000	 bl          memset

; 86   :     pInfo->wVersion = 1;

  00234	e59d2004	 ldr         r2, [sp, #4]
  00238	e3a03001	 mov         r3, #1
  0023c	e1c230b0	 strh        r3, [r2]

; 87   :     memcpy(pInfo->szProcessCore, g_oalIoCtlProcessorCore, length1);

  00240	e59d2010	 ldr         r2, [sp, #0x10]
  00244	e59f30d0	 ldr         r3, [pc, #0xD0]
  00248	e5931000	 ldr         r1, [r3]
  0024c	e59d3004	 ldr         r3, [sp, #4]
  00250	e2830002	 add         r0, r3, #2
  00254	eb000000	 bl          memcpy

; 88   :     memcpy(pInfo->szProcessorName, g_oalIoCtlProcessorName, length2);

  00258	e59d2008	 ldr         r2, [sp, #8]
  0025c	e59f30b4	 ldr         r3, [pc, #0xB4]
  00260	e5931000	 ldr         r1, [r3]
  00264	e59d3004	 ldr         r3, [sp, #4]
  00268	e2830054	 add         r0, r3, #0x54
  0026c	eb000000	 bl          memcpy

; 89   :     memcpy(pInfo->szVendor, g_oalIoCtlProcessorVendor, length3);

  00270	e59d200c	 ldr         r2, [sp, #0xC]
  00274	e59f3098	 ldr         r3, [pc, #0x98]
  00278	e5931000	 ldr         r1, [r3]
  0027c	e59d3004	 ldr         r3, [sp, #4]
  00280	e2833c01	 add         r3, r3, #1, 24
  00284	e283006e	 add         r0, r3, #0x6E
  00288	eb000000	 bl          memcpy

; 90   :     pInfo->dwInstructionSet = g_oalIoCtlInstructionSet;

  0028c	e59d3004	 ldr         r3, [sp, #4]
  00290	e2832f8e	 add         r2, r3, #0x8E, 30
  00294	e59f3074	 ldr         r3, [pc, #0x74]
  00298	e5933000	 ldr         r3, [r3]
  0029c	e5823000	 str         r3, [r2]

; 91   :     pInfo->dwClockSpeed  = g_oalIoCtlClockSpeed;

  002a0	e59d3004	 ldr         r3, [sp, #4]
  002a4	e2832f8f	 add         r2, r3, #0x8F, 30
  002a8	e59f305c	 ldr         r3, [pc, #0x5C]
  002ac	e5933000	 ldr         r3, [r3]
  002b0	e5823000	 str         r3, [r2]

; 92   : 
; 93   :     // Indicate success
; 94   :     rc = TRUE;

  002b4	e3a03001	 mov         r3, #1
  002b8	e58d3000	 str         r3, [sp]
  002bc		 |$cleanUp$43012|

; 95   : 
; 96   : cleanUp:
; 97   :     OALMSG(OAL_FUNC, (L"-OALIoCtlProcessorInfo(rc = %d)\r\n", rc));

  002bc	e59f3044	 ldr         r3, [pc, #0x44]
  002c0	e5933440	 ldr         r3, [r3, #0x440]
  002c4	e3130004	 tst         r3, #4
  002c8	0a000005	 beq         |$LN22@OALIoCtlPr|
  002cc	e59d1000	 ldr         r1, [sp]
  002d0	e59f002c	 ldr         r0, [pc, #0x2C]
  002d4	eb000000	 bl          NKDbgPrintfW
  002d8	e3a03001	 mov         r3, #1
  002dc	e58d303c	 str         r3, [sp, #0x3C]
  002e0	ea000001	 b           |$LN23@OALIoCtlPr|
  002e4		 |$LN22@OALIoCtlPr|
  002e4	e3a03000	 mov         r3, #0
  002e8	e58d303c	 str         r3, [sp, #0x3C]
  002ec		 |$LN23@OALIoCtlPr|

; 98   :     return rc;

  002ec	e59d3000	 ldr         r3, [sp]
  002f0	e58d3014	 str         r3, [sp, #0x14]

; 99   : }

  002f4	e59d0014	 ldr         r0, [sp, #0x14]
  002f8	e28dd040	 add         sp, sp, #0x40
  002fc	e89d6000	 ldmia       sp, {sp, lr}
  00300	e12fff1e	 bx          lr
  00304		 |$LN27@OALIoCtlPr|
  00304		 |$LN28@OALIoCtlPr|
  00304	00000000	 DCD         |??_C@_1EE@LLJFHFAM@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAo?$AAr?$AAI?$AAn?$AAf?$AAo?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN@|
  00308		 |$LN29@OALIoCtlPr|
  00308	00000000	 DCD         |dpCurSettings|
  0030c		 |$LN30@OALIoCtlPr|
  0030c	00000000	 DCD         |g_oalIoCtlClockSpeed|
  00310		 |$LN31@OALIoCtlPr|
  00310	00000000	 DCD         |g_oalIoCtlInstructionSet|
  00314		 |$LN32@OALIoCtlPr|
  00314	00000000	 DCD         |g_oalIoCtlProcessorVendor|
  00318		 |$LN33@OALIoCtlPr|
  00318	00000000	 DCD         |g_oalIoCtlProcessorName|
  0031c		 |$LN34@OALIoCtlPr|
  0031c	00000000	 DCD         |g_oalIoCtlProcessorCore|
  00320		 |$LN35@OALIoCtlPr|
  00320	00000000	 DCD         |??_C@_1GI@EFCEJCLG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAo?$AAr?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAV?$AAe?$AAn@|
  00324		 |$LN36@OALIoCtlPr|
  00324	00000000	 DCD         |??_C@_1GE@JPAPEENG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAo?$AAr?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAN?$AAa?$AAm@|
  00328		 |$LN37@OALIoCtlPr|
  00328	00000000	 DCD         |??_C@_1GE@OFFJPJMM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAo?$AAr?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAC?$AAo?$AAr@|
  0032c		 |$LN38@OALIoCtlPr|
  0032c	00000000	 DCD         |??_C@_1GA@EACFLEMI@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAo?$AAr?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAB?$AAu?$AAf@|
  00330		 |$LN39@OALIoCtlPr|
  00330	00000000	 DCD         |??_C@_1GK@MJNAOGCM@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAo?$AAr?$AAI?$AAn?$AAf?$AAo?$AA?3?$AA?5?$AAI?$AAn?$AAv@|
  00334		 |$LN40@OALIoCtlPr|
  00334	00000000	 DCD         |??_C@_1DM@NEACNOML@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAo?$AAr?$AAI?$AAn?$AAf?$AAo?$AA?$CI?$AA?4?$AA?4?$AA?4?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00338		 |$M43066|

			 ENDP  ; |OALIoCtlProcessorInfo|

	END
