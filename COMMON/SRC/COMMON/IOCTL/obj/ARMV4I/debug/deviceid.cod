; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\COMMON\IOCTL\deviceid.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|??_C@_1EG@HKOJPLNE@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAD?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@GPJLHAFO@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAD?$AA?3?$AA?5?$AAI?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LK@FOLPDAJB@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAD?$AA?3?$AA?5?$AAC?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LO@DFJMJCEI@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAD?$AA?3?$AA?5?$AAC?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1PC@IHJIIKFF@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAI?$AAO?$AAC?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@MLDPBFAO@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAc?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAD?$AA?$CI?$AA?4?$AA?4?$AA?4?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|OALIoCtlHalGetDeviceId|
	IMPORT	|memcpy|
	IMPORT	|NKSetLastError|
	IMPORT	|strlen|
	IMPORT	|NKwcslen|
	IMPORT	|OEMIoControl|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|
	IMPORT	|__security_cookie|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_check_cookie|

  00000			 AREA	 |.pdata|, PDATA
|$T43090| DCD	|$LN24@OALIoCtlHa|
	DCD	0xc000f204
; File c:\wince600\platform\common\src\common\ioctl\deviceid.c

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@HKOJPLNE@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAD?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "I", 0x0, "D", 0x0, "(", 0x0, "r"
	DCB	0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@GPJLHAFO@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAD?$AA?3?$AA?5?$AAI?$AAn@| DCB "W"
	DCB	0x0, "A", 0x0, "R", 0x0, "N", 0x0, ":", 0x0, " ", 0x0, "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C", 0x0, "t"
	DCB	0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G", 0x0, "e"
	DCB	0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c"
	DCB	0x0, "e", 0x0, "I", 0x0, "D", 0x0, ":", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LK@FOLPDAJB@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAD?$AA?3?$AA?5?$AAC?$AAa@| DCB "W"
	DCB	0x0, "A", 0x0, "R", 0x0, "N", 0x0, ":", 0x0, " ", 0x0, "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C", 0x0, "t"
	DCB	0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G", 0x0, "e"
	DCB	0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c"
	DCB	0x0, "e", 0x0, "I", 0x0, "D", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L"
	DCB	0x0, "_", 0x0, "H", 0x0, "A", 0x0, "L", 0x0, "_", 0x0, "G"
	DCB	0x0, "E", 0x0, "T", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V"
	DCB	0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_", 0x0, "I", 0x0, "N"
	DCB	0x0, "F", 0x0, "O", 0x0, ":", 0x0, ":", 0x0, "S", 0x0, "P"
	DCB	0x0, "I", 0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "B"
	DCB	0x0, "O", 0x0, "O", 0x0, "T", 0x0, "M", 0x0, "E", 0x0, "N"
	DCB	0x0, "A", 0x0, "M", 0x0, "E", 0x0, " ", 0x0, "f", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, ".", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LO@DFJMJCEI@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAD?$AA?3?$AA?5?$AAC?$AAa@| DCB "W"
	DCB	0x0, "A", 0x0, "R", 0x0, "N", 0x0, ":", 0x0, " ", 0x0, "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C", 0x0, "t"
	DCB	0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G", 0x0, "e"
	DCB	0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c"
	DCB	0x0, "e", 0x0, "I", 0x0, "D", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L"
	DCB	0x0, "_", 0x0, "H", 0x0, "A", 0x0, "L", 0x0, "_", 0x0, "G"
	DCB	0x0, "E", 0x0, "T", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V"
	DCB	0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_", 0x0, "I", 0x0, "N"
	DCB	0x0, "F", 0x0, "O", 0x0, ":", 0x0, ":", 0x0, "S", 0x0, "P"
	DCB	0x0, "I", 0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "P"
	DCB	0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "M", 0x0, "N", 0x0, "A", 0x0, "M", 0x0, "E", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1PC@IHJIIKFF@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAI?$AAO?$AAC?$AAT@| DCB "W"
	DCB	0x0, "a", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, ":", 0x0, " ", 0x0, "y", 0x0, "o", 0x0, "u", 0x0, " "
	DCB	0x0, "a", 0x0, "r", 0x0, "e", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "T", 0x0, "L", 0x0, "_", 0x0, "H", 0x0, "A", 0x0, "L"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "I"
	DCB	0x0, "D", 0x0, ",", 0x0, " ", 0x0, "w", 0x0, "h", 0x0, "i"
	DCB	0x0, "c", 0x0, "h", 0x0, " ", 0x0, "h", 0x0, "a", 0x0, "s"
	DCB	0x0, " ", 0x0, "b", 0x0, "e", 0x0, "e", 0x0, "n", 0x0, " "
	DCB	0x0, "d", 0x0, "e", 0x0, "p", 0x0, "r", 0x0, "e", 0x0, "c"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, ".", 0x0, " "
	DCB	0x0, " ", 0x0, "U", 0x0, "s", 0x0, "e", 0x0, " ", 0x0, "I"
	DCB	0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_", 0x0, "H"
	DCB	0x0, "A", 0x0, "L", 0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T"
	DCB	0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C"
	DCB	0x0, "E", 0x0, "_", 0x0, "I", 0x0, "N", 0x0, "F", 0x0, "O"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, "s", 0x0, "t", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@MLDPBFAO@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAc?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAD?$AA?$CI?$AA?4?$AA?4?$AA?4?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "c"
	DCB	0x0, "t", 0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "I", 0x0, "D", 0x0, "(", 0x0, "."
	DCB	0x0, ".", 0x0, ".", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.xdata|, DATA
|$T43086| DCD	0xffffffac
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T43086|

  00008		 |OALIoCtlHalGetDeviceId| PROC

; 34   : ) {

  00008		 |$LN24@OALIoCtlHa|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d000f	 stmdb       sp!, {r0 - r3}
  00010	e92d5000	 stmdb       sp!, {r12, lr}
  00014	e24dde1a	 sub         sp, sp, #0x1A, 28
  00018		 |$M43087|
  00018	e59f33ac	 ldr         r3, [pc, #0x3AC]
  0001c	e5933000	 ldr         r3, [r3]
  00020	e58d3164	 str         r3, [sp, #0x164]

; 35   :     BOOL rc = FALSE;

  00024	e3a03000	 mov         r3, #0
  00028	e58d300c	 str         r3, [sp, #0xC]

; 36   :     DEVICE_ID *pId = (DEVICE_ID *)pOutBuffer;

  0002c	e59d31b4	 ldr         r3, [sp, #0x1B4]
  00030	e58d3008	 str         r3, [sp, #8]

; 37   :     UINT32 size, length1, length2, offset, i;
; 38   :     WCHAR platformName[PLATFORMNAMESIZE], bootMeNameW[OAL_KITL_ID_SIZE+1];
; 39   :     char bootMeName[OAL_KITL_ID_SIZE+1];
; 40   :     UINT32 platformNameSPICode = SPI_GETPLATFORMNAME, bootMeNameSPICode = SPI_GETBOOTMENAME;

  00034	e3a03f41	 mov         r3, #0x41, 30
  00038	e58d3160	 str         r3, [sp, #0x160]
  0003c	e3a03c01	 mov         r3, #1, 24
  00040	e3833005	 orr         r3, r3, #5
  00044	e58d315c	 str         r3, [sp, #0x15C]

; 41   : 
; 42   :     OALMSG(OAL_IOCTL&&OAL_FUNC, (L"+OALIoctlHalGetDeviceID(...)\r\n"));

  00048	e59f3360	 ldr         r3, [pc, #0x360]
  0004c	e5933440	 ldr         r3, [r3, #0x440]
  00050	e3130a01	 tst         r3, #1, 20
  00054	0a000008	 beq         |$LN12@OALIoCtlHa|
  00058	e59f3350	 ldr         r3, [pc, #0x350]
  0005c	e5933440	 ldr         r3, [r3, #0x440]
  00060	e3130004	 tst         r3, #4
  00064	0a000004	 beq         |$LN12@OALIoCtlHa|
  00068	e59f0358	 ldr         r0, [pc, #0x358]
  0006c	eb000000	 bl          NKDbgPrintfW
  00070	e3a03001	 mov         r3, #1
  00074	e58d317c	 str         r3, [sp, #0x17C]
  00078	ea000001	 b           |$LN13@OALIoCtlHa|
  0007c		 |$LN12@OALIoCtlHa|
  0007c	e3a03000	 mov         r3, #0
  00080	e58d317c	 str         r3, [sp, #0x17C]
  00084		 |$LN13@OALIoCtlHa|

; 43   : 
; 44   :     RETAILMSG(1, (TEXT("Warning: you are requesting IOCTL_HAL_GET_DEVICEID, which has been deprecated.  Use IOCTL_HAL_GET_DEVICE_INFO instead.\r\n")));

  00084	e59f0338	 ldr         r0, [pc, #0x338]
  00088	eb000000	 bl          NKDbgPrintfW

; 45   : 
; 46   : #if defined ( project_smartfon ) || defined ( project_wpc )  // Smartphone or PocketPC build
; 47   : 
; 48   :     // First, handle the special case where we care called with a buffer size of 16 bytes
; 49   :     if ( outSize == sizeof(UUID) )
; 50   :     {
; 51   :         return OALIoCtlHalGetUUID(IOCTL_HAL_GET_UUID, pInpBuffer, inpSize, pOutBuffer, outSize, pOutSize);
; 52   :     }
; 53   : #endif
; 54   : 
; 55   :     // Compute required size (first is unicode, second multibyte!)
; 56   :     if(!OEMIoControl(IOCTL_HAL_GET_DEVICE_INFO, &platformNameSPICode, sizeof(platformNameSPICode), platformName, sizeof(platformName), 0))

  0008c	e3a03000	 mov         r3, #0
  00090	e58d3004	 str         r3, [sp, #4]
  00094	e3a03c01	 mov         r3, #1, 24
  00098	e58d3000	 str         r3, [sp]
  0009c	e28d3038	 add         r3, sp, #0x38
  000a0	e3a02004	 mov         r2, #4
  000a4	e28d1e16	 add         r1, sp, #0x16, 28
  000a8	e59f030c	 ldr         r0, [pc, #0x30C]
  000ac	eb000000	 bl          OEMIoControl
  000b0	e58d0180	 str         r0, [sp, #0x180]
  000b4	e59d3180	 ldr         r3, [sp, #0x180]
  000b8	e3530000	 cmp         r3, #0
  000bc	1a00000b	 bne         |$LN9@OALIoCtlHa|

; 57   :     {
; 58   :         OALMSG(OAL_WARN, (
; 59   :             L"WARN: OALIoCtlHalGetDeviceID: Call to IOCTL_HAL_GET_DEVICE_INFO::SPI_GETPLATFORMNAME failed.\r\n"
; 60   :         ));

  000c0	e59f32e8	 ldr         r3, [pc, #0x2E8]
  000c4	e5933440	 ldr         r3, [r3, #0x440]
  000c8	e3130002	 tst         r3, #2
  000cc	0a000004	 beq         |$LN14@OALIoCtlHa|
  000d0	e59f02e8	 ldr         r0, [pc, #0x2E8]
  000d4	eb000000	 bl          NKDbgPrintfW
  000d8	e3a03001	 mov         r3, #1
  000dc	e58d3184	 str         r3, [sp, #0x184]
  000e0	ea000001	 b           |$LN15@OALIoCtlHa|
  000e4		 |$LN14@OALIoCtlHa|
  000e4	e3a03000	 mov         r3, #0
  000e8	e58d3184	 str         r3, [sp, #0x184]
  000ec		 |$LN15@OALIoCtlHa|

; 61   :         goto cleanUp;

  000ec	ea000096	 b           |$cleanUp$43029|
  000f0		 |$LN9@OALIoCtlHa|

; 62   :     }
; 63   :     length1 = (NKwcslen(platformName) + 1) * sizeof(WCHAR);

  000f0	e28d0038	 add         r0, sp, #0x38
  000f4	eb000000	 bl          NKwcslen
  000f8	e58d0188	 str         r0, [sp, #0x188]
  000fc	e59d3188	 ldr         r3, [sp, #0x188]
  00100	e2832001	 add         r2, r3, #1
  00104	e3a03002	 mov         r3, #2
  00108	e0030392	 mul         r3, r2, r3
  0010c	e58d3158	 str         r3, [sp, #0x158]

; 64   :     if(!OEMIoControl(IOCTL_HAL_GET_DEVICE_INFO, &bootMeNameSPICode, sizeof(bootMeNameSPICode), bootMeNameW, sizeof(bootMeNameW), 0))

  00110	e3a03000	 mov         r3, #0
  00114	e58d3004	 str         r3, [sp, #4]
  00118	e3a03022	 mov         r3, #0x22
  0011c	e58d3000	 str         r3, [sp]
  00120	e28d3014	 add         r3, sp, #0x14
  00124	e3a02004	 mov         r2, #4
  00128	e28d1f57	 add         r1, sp, #0x57, 30
  0012c	e59f0288	 ldr         r0, [pc, #0x288]
  00130	eb000000	 bl          OEMIoControl
  00134	e58d018c	 str         r0, [sp, #0x18C]
  00138	e59d318c	 ldr         r3, [sp, #0x18C]
  0013c	e3530000	 cmp         r3, #0
  00140	1a00000b	 bne         |$LN8@OALIoCtlHa|

; 65   :     {
; 66   :         OALMSG(OAL_WARN, (
; 67   :             L"WARN: OALIoCtlHalGetDeviceID: Call to IOCTL_HAL_GET_DEVICE_INFO::SPI_GETBOOTMENAME failed.\r\n"
; 68   :         ));

  00144	e59f3264	 ldr         r3, [pc, #0x264]
  00148	e5933440	 ldr         r3, [r3, #0x440]
  0014c	e3130002	 tst         r3, #2
  00150	0a000004	 beq         |$LN16@OALIoCtlHa|
  00154	e59f025c	 ldr         r0, [pc, #0x25C]
  00158	eb000000	 bl          NKDbgPrintfW
  0015c	e3a03001	 mov         r3, #1
  00160	e58d3190	 str         r3, [sp, #0x190]
  00164	ea000001	 b           |$LN17@OALIoCtlHa|
  00168		 |$LN16@OALIoCtlHa|
  00168	e3a03000	 mov         r3, #0
  0016c	e58d3190	 str         r3, [sp, #0x190]
  00170		 |$LN17@OALIoCtlHa|

; 69   :         goto cleanUp;

  00170	ea000075	 b           |$cleanUp$43029|
  00174		 |$LN8@OALIoCtlHa|

; 70   :     }
; 71   :     // Convert the BOOTME name from Unicode to multibyte for BC
; 72   :     for(i = 0; (i < OAL_KITL_ID_SIZE) && (bootMeNameW[i] != 0); i++)

  00174	e3a03000	 mov         r3, #0
  00178	e58d3010	 str         r3, [sp, #0x10]
  0017c	ea000002	 b           |$LN7@OALIoCtlHa|
  00180		 |$LN6@OALIoCtlHa|
  00180	e59d3010	 ldr         r3, [sp, #0x10]
  00184	e2833001	 add         r3, r3, #1
  00188	e58d3010	 str         r3, [sp, #0x10]
  0018c		 |$LN7@OALIoCtlHa|
  0018c	e59d3010	 ldr         r3, [sp, #0x10]
  00190	e3530010	 cmp         r3, #0x10
  00194	2a000014	 bcs         |$LN5@OALIoCtlHa|
  00198	e59d1010	 ldr         r1, [sp, #0x10]
  0019c	e3a03002	 mov         r3, #2
  001a0	e0020391	 mul         r2, r1, r3
  001a4	e28d3014	 add         r3, sp, #0x14
  001a8	e0833002	 add         r3, r3, r2
  001ac	e1d330b0	 ldrh        r3, [r3]
  001b0	e3530000	 cmp         r3, #0
  001b4	0a00000c	 beq         |$LN5@OALIoCtlHa|

; 73   :     {
; 74   :         bootMeName[i] = (char)(bootMeNameW[i]);

  001b8	e59d1010	 ldr         r1, [sp, #0x10]
  001bc	e3a03002	 mov         r3, #2
  001c0	e0020391	 mul         r2, r1, r3
  001c4	e28d3014	 add         r3, sp, #0x14
  001c8	e0833002	 add         r3, r3, r2
  001cc	e1d330b0	 ldrh        r3, [r3]
  001d0	e1a01c03	 mov         r1, r3, lsl #24
  001d4	e1a01c41	 mov         r1, r1, asr #24
  001d8	e28d2f4f	 add         r2, sp, #0x4F, 30
  001dc	e59d3010	 ldr         r3, [sp, #0x10]
  001e0	e0823003	 add         r3, r2, r3
  001e4	e5c31000	 strb        r1, [r3]

; 75   :     }

  001e8	eaffffe4	 b           |$LN6@OALIoCtlHa|
  001ec		 |$LN5@OALIoCtlHa|

; 76   :     bootMeName[i] = '\0';

  001ec	e28d2f4f	 add         r2, sp, #0x4F, 30
  001f0	e59d3010	 ldr         r3, [sp, #0x10]
  001f4	e0822003	 add         r2, r2, r3
  001f8	e3a03000	 mov         r3, #0
  001fc	e5c23000	 strb        r3, [r2]

; 77   :     length2 = strlen(bootMeName) + 1;

  00200	e28d0f4f	 add         r0, sp, #0x4F, 30
  00204	eb000000	 bl          strlen
  00208	e58d0194	 str         r0, [sp, #0x194]
  0020c	e59d3194	 ldr         r3, [sp, #0x194]
  00210	e2833001	 add         r3, r3, #1
  00214	e58d3138	 str         r3, [sp, #0x138]

; 78   :     size = sizeof(DEVICE_ID) + length1 + length2;

  00218	e59d3158	 ldr         r3, [sp, #0x158]
  0021c	e2832014	 add         r2, r3, #0x14
  00220	e59d3138	 ldr         r3, [sp, #0x138]
  00224	e0823003	 add         r3, r2, r3
  00228	e58d3154	 str         r3, [sp, #0x154]

; 79   : 
; 80   :     // update size if pOutSize is specified
; 81   :     if (pOutSize) {

  0022c	e59d31bc	 ldr         r3, [sp, #0x1BC]
  00230	e3530000	 cmp         r3, #0
  00234	0a000002	 beq         |$LN4@OALIoCtlHa|

; 82   :         *pOutSize = size;

  00238	e59d2154	 ldr         r2, [sp, #0x154]
  0023c	e59d31bc	 ldr         r3, [sp, #0x1BC]
  00240	e5832000	 str         r2, [r3]
  00244		 |$LN4@OALIoCtlHa|

; 83   :     }
; 84   : 
; 85   :     // Validate inputs (do it after we can return required size)
; 86   :     if (pOutBuffer == NULL || outSize < sizeof(DEVICE_ID)) {

  00244	e59d31b4	 ldr         r3, [sp, #0x1B4]
  00248	e3530000	 cmp         r3, #0
  0024c	0a000002	 beq         |$LN2@OALIoCtlHa|
  00250	e59d31b8	 ldr         r3, [sp, #0x1B8]
  00254	e3530014	 cmp         r3, #0x14
  00258	2a00000d	 bcs         |$LN3@OALIoCtlHa|
  0025c		 |$LN2@OALIoCtlHa|

; 87   :         NKSetLastError(ERROR_INVALID_PARAMETER);

  0025c	e3a00057	 mov         r0, #0x57
  00260	eb000000	 bl          NKSetLastError

; 88   :         OALMSG(OAL_WARN, (
; 89   :             L"WARN: OALIoCtlHalGetDeviceID: Invalid parameter\r\n"
; 90   :         ));

  00264	e59f3144	 ldr         r3, [pc, #0x144]
  00268	e5933440	 ldr         r3, [r3, #0x440]
  0026c	e3130002	 tst         r3, #2
  00270	0a000004	 beq         |$LN18@OALIoCtlHa|
  00274	e59f0138	 ldr         r0, [pc, #0x138]
  00278	eb000000	 bl          NKDbgPrintfW
  0027c	e3a03001	 mov         r3, #1
  00280	e58d3198	 str         r3, [sp, #0x198]
  00284	ea000001	 b           |$LN19@OALIoCtlHa|
  00288		 |$LN18@OALIoCtlHa|
  00288	e3a03000	 mov         r3, #0
  0028c	e58d3198	 str         r3, [sp, #0x198]
  00290		 |$LN19@OALIoCtlHa|

; 91   :         goto cleanUp;

  00290	ea00002d	 b           |$cleanUp$43029|
  00294		 |$LN3@OALIoCtlHa|

; 92   :     }
; 93   : 
; 94   :     // Set size to DEVICE_ID structure
; 95   :     pId->dwSize = size;

  00294	e59d2154	 ldr         r2, [sp, #0x154]
  00298	e59d3008	 ldr         r3, [sp, #8]
  0029c	e5832000	 str         r2, [r3]

; 96   : 
; 97   :     // If the size is too small, indicate the correct size 
; 98   :     if (outSize < size) {

  002a0	e59d21b8	 ldr         r2, [sp, #0x1B8]
  002a4	e59d3154	 ldr         r3, [sp, #0x154]
  002a8	e1520003	 cmp         r2, r3
  002ac	2a000002	 bcs         |$LN1@OALIoCtlHa|

; 99   :         NKSetLastError(ERROR_INSUFFICIENT_BUFFER);

  002b0	e3a0007a	 mov         r0, #0x7A
  002b4	eb000000	 bl          NKSetLastError

; 100  :         goto cleanUp;

  002b8	ea000023	 b           |$cleanUp$43029|
  002bc		 |$LN1@OALIoCtlHa|

; 101  :     }
; 102  : 
; 103  :     // Fill in the Device ID type
; 104  :     offset = sizeof(DEVICE_ID);

  002bc	e3a03014	 mov         r3, #0x14
  002c0	e58d3150	 str         r3, [sp, #0x150]

; 105  : 
; 106  :     // Copy in PlatformType data
; 107  :     pId->dwPresetIDOffset = offset;

  002c4	e59d3008	 ldr         r3, [sp, #8]
  002c8	e2832004	 add         r2, r3, #4
  002cc	e59d3150	 ldr         r3, [sp, #0x150]
  002d0	e5823000	 str         r3, [r2]

; 108  :     pId->dwPresetIDBytes = length1;

  002d4	e59d3008	 ldr         r3, [sp, #8]
  002d8	e2832008	 add         r2, r3, #8
  002dc	e59d3158	 ldr         r3, [sp, #0x158]
  002e0	e5823000	 str         r3, [r2]

; 109  :     memcpy((UINT8*)pId + offset, platformName, length1);

  002e4	e59d2158	 ldr         r2, [sp, #0x158]
  002e8	e28d1038	 add         r1, sp, #0x38
  002ec	e59d0008	 ldr         r0, [sp, #8]
  002f0	e59d3150	 ldr         r3, [sp, #0x150]
  002f4	e0800003	 add         r0, r0, r3
  002f8	eb000000	 bl          memcpy

; 110  :     offset += length1;

  002fc	e59d2150	 ldr         r2, [sp, #0x150]
  00300	e59d3158	 ldr         r3, [sp, #0x158]
  00304	e0823003	 add         r3, r2, r3
  00308	e58d3150	 str         r3, [sp, #0x150]

; 111  : 
; 112  :     // Copy device id data
; 113  :     pId->dwPlatformIDOffset = offset;

  0030c	e59d3008	 ldr         r3, [sp, #8]
  00310	e283200c	 add         r2, r3, #0xC
  00314	e59d3150	 ldr         r3, [sp, #0x150]
  00318	e5823000	 str         r3, [r2]

; 114  :     pId->dwPlatformIDBytes  = length2;

  0031c	e59d3008	 ldr         r3, [sp, #8]
  00320	e2832010	 add         r2, r3, #0x10
  00324	e59d3138	 ldr         r3, [sp, #0x138]
  00328	e5823000	 str         r3, [r2]

; 115  :     memcpy((UINT8*)pId + offset, bootMeName, length2);

  0032c	e59d2138	 ldr         r2, [sp, #0x138]
  00330	e28d1f4f	 add         r1, sp, #0x4F, 30
  00334	e59d0008	 ldr         r0, [sp, #8]
  00338	e59d3150	 ldr         r3, [sp, #0x150]
  0033c	e0800003	 add         r0, r0, r3
  00340	eb000000	 bl          memcpy

; 116  : 
; 117  :     // We are done
; 118  :     rc = TRUE;

  00344	e3a03001	 mov         r3, #1
  00348	e58d300c	 str         r3, [sp, #0xC]
  0034c		 |$cleanUp$43029|

; 119  :     
; 120  : cleanUp:
; 121  :     // Indicate status
; 122  :     OALMSG(OAL_IOCTL&&OAL_FUNC, (L"-OALIoCtlHalGetDeviceID(rc = %d)\r\n", rc));

  0034c	e59f305c	 ldr         r3, [pc, #0x5C]
  00350	e5933440	 ldr         r3, [r3, #0x440]
  00354	e3130a01	 tst         r3, #1, 20
  00358	0a000009	 beq         |$LN20@OALIoCtlHa|
  0035c	e59f304c	 ldr         r3, [pc, #0x4C]
  00360	e5933440	 ldr         r3, [r3, #0x440]
  00364	e3130004	 tst         r3, #4
  00368	0a000005	 beq         |$LN20@OALIoCtlHa|
  0036c	e59d100c	 ldr         r1, [sp, #0xC]
  00370	e59f0034	 ldr         r0, [pc, #0x34]
  00374	eb000000	 bl          NKDbgPrintfW
  00378	e3a03001	 mov         r3, #1
  0037c	e58d319c	 str         r3, [sp, #0x19C]
  00380	ea000001	 b           |$LN21@OALIoCtlHa|
  00384		 |$LN20@OALIoCtlHa|
  00384	e3a03000	 mov         r3, #0
  00388	e58d319c	 str         r3, [sp, #0x19C]
  0038c		 |$LN21@OALIoCtlHa|

; 123  :     return rc;

  0038c	e59d0164	 ldr         r0, [sp, #0x164]
  00390	eb000000	 bl          __security_check_cookie
  00394	e59d300c	 ldr         r3, [sp, #0xC]
  00398	e58d3178	 str         r3, [sp, #0x178]

; 124  : }

  0039c	e59d0178	 ldr         r0, [sp, #0x178]
  003a0	e28dde1a	 add         sp, sp, #0x1A, 28
  003a4	e89d6000	 ldmia       sp, {sp, lr}
  003a8	e12fff1e	 bx          lr
  003ac		 |$LN25@OALIoCtlHa|
  003ac		 |$LN26@OALIoCtlHa|
  003ac	00000000	 DCD         |??_C@_1EG@HKOJPLNE@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAD?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ@|
  003b0		 |$LN27@OALIoCtlHa|
  003b0	00000000	 DCD         |dpCurSettings|
  003b4		 |$LN28@OALIoCtlHa|
  003b4	00000000	 DCD         |??_C@_1GE@GPJLHAFO@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAD?$AA?3?$AA?5?$AAI?$AAn@|
  003b8		 |$LN29@OALIoCtlHa|
  003b8	00000000	 DCD         |??_C@_1LK@FOLPDAJB@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAD?$AA?3?$AA?5?$AAC?$AAa@|
  003bc		 |$LN30@OALIoCtlHa|
  003bc	01010004	 DCD         0x1010004
  003c0		 |$LN31@OALIoCtlHa|
  003c0	00000000	 DCD         |??_C@_1LO@DFJMJCEI@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAD?$AA?3?$AA?5?$AAC?$AAa@|
  003c4		 |$LN32@OALIoCtlHa|
  003c4	00000000	 DCD         |??_C@_1PC@IHJIIKFF@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAI?$AAO?$AAC?$AAT@|
  003c8		 |$LN33@OALIoCtlHa|
  003c8	00000000	 DCD         |??_C@_1DO@MLDPBFAO@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAc?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAD?$AA?$CI?$AA?4?$AA?4?$AA?4?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  003cc		 |$LN34@OALIoCtlHa|
  003cc	00000000	 DCD         |__security_cookie|
  003d0		 |$M43088|

			 ENDP  ; |OALIoCtlHalGetDeviceId|

	END
