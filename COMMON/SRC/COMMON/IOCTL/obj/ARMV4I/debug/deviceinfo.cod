; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\COMMON\IOCTL\deviceinfo.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|HALPlatformVersion| DCD 0x6
	DCD	0x0
|g_oalIoCtlProjectName| DCB "C", 0x0, "E", 0x0, "B", 0x0, "a", 0x0, "s", 0x0
	DCB	"e", 0x0, 0x0, 0x0
	EXPORT	|??_C@_1FO@DMDJMEMA@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?$CI?$AAS?$AAP?$AAI?$AA?5?$AA?$DN?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@BAANNGGI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@FDHCLEBC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@NLAFOPGI@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?$CI?$AA?4?$AA?4?$AA?4?$AA?$CJ?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_11LOCGONAA@?$AA?$AA@| [ DATA ]	; `string'
	EXPORT	|OALIoCtlHalGetDeviceInfo|
	IMPORT	|NKSetLastError|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|

  00000			 AREA	 |.pdata|, PDATA
|$T35668| DCD	|$LN29@OALIoCtlHa|
	DCD	0x4000d104
; File c:\wince600\platform\common\src\common\ioctl\deviceinfo.cpp

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@DMDJMEMA@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?$CI?$AAS?$AAP?$AAI?$AA?5?$AA?$DN?$AA?5@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "I", 0x0, "n", 0x0, "f", 0x0, "o"
	DCB	0x0, "(", 0x0, "S", 0x0, "P", 0x0, "I", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "%", 0x0, "s", 0x0, ",", 0x0, " ", 0x0, "r"
	DCB	0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@BAANNGGI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "I", 0x0, "n", 0x0, "f", 0x0, "o"
	DCB	0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@FDHCLEBC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "I", 0x0, "n", 0x0, "f", 0x0, "o"
	DCB	0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "p", 0x0, "a"
	DCB	0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@NLAFOPGI@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?$CI?$AA?4?$AA?4?$AA?4?$AA?$CJ?$AA?$AN?$AA?6@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "I", 0x0, "n", 0x0, "f", 0x0, "o"
	DCB	0x0, "(", 0x0, ".", 0x0, ".", 0x0, ".", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_11LOCGONAA@?$AA?$AA@| DCB 0x0, 0x0		; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALIoCtlHalGetDeviceInfo| PROC

; 82   : ) {

  00000		 |$LN29@OALIoCtlHa|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd040	 sub         sp, sp, #0x40
  00010		 |$M35665|

; 83   :     BOOL rc = FALSE;

  00010	e3a03000	 mov         r3, #0
  00014	e58d3004	 str         r3, [sp, #4]

; 84   :     
; 85   :     // This variable contains the text name of the SPI we're using - at this point we don't know
; 86   :     // value but we will fill it in later
; 87   :     const WCHAR* spiName = L"";

  00018	e59f3320	 ldr         r3, [pc, #0x320]
  0001c	e58d3000	 str         r3, [sp]

; 88   : 
; 89   :     OALMSG(OAL_IOCTL&&OAL_FUNC, (L"+OALIoCtlHalGetDeviceInfo(...)\r\n"));

  00020	e59f3308	 ldr         r3, [pc, #0x308]
  00024	e5933440	 ldr         r3, [r3, #0x440]
  00028	e3130a01	 tst         r3, #1, 20
  0002c	0a000008	 beq         |$LN17@OALIoCtlHa|
  00030	e59f32f8	 ldr         r3, [pc, #0x2F8]
  00034	e5933440	 ldr         r3, [r3, #0x440]
  00038	e3130004	 tst         r3, #4
  0003c	0a000004	 beq         |$LN17@OALIoCtlHa|
  00040	e59f02f4	 ldr         r0, [pc, #0x2F4]
  00044	eb000000	 bl          NKDbgPrintfW
  00048	e3a03001	 mov         r3, #1
  0004c	e58d300c	 str         r3, [sp, #0xC]
  00050	ea000001	 b           |$LN18@OALIoCtlHa|
  00054		 |$LN17@OALIoCtlHa|
  00054	e3a03000	 mov         r3, #0
  00058	e58d300c	 str         r3, [sp, #0xC]
  0005c		 |$LN18@OALIoCtlHa|

; 90   : 
; 91   :     // Validate inputs
; 92   :     if ((((DWORD)pInpBuffer) & 3) || //check for byte alignment of input buffer
; 93   :         (pInpBuffer == NULL) || (inpSize != sizeof(UINT32))) 

  0005c	e59d304c	 ldr         r3, [sp, #0x4C]
  00060	e3130003	 tst         r3, #3
  00064	1a000005	 bne         |$LN13@OALIoCtlHa|
  00068	e59d304c	 ldr         r3, [sp, #0x4C]
  0006c	e3530000	 cmp         r3, #0
  00070	0a000002	 beq         |$LN13@OALIoCtlHa|
  00074	e59d3050	 ldr         r3, [sp, #0x50]
  00078	e3530004	 cmp         r3, #4
  0007c	0a00000e	 beq         |$LN14@OALIoCtlHa|
  00080		 |$LN13@OALIoCtlHa|

; 94   :     {
; 95   :         NKSetLastError(ERROR_INVALID_PARAMETER);

  00080	e3a00057	 mov         r0, #0x57
  00084	eb000000	 bl          NKSetLastError

; 96   :         OALMSG(OAL_ERROR, (
; 97   :             L"ERROR: OALIoCtlHalGetDeviceInfo: Invalid parameter\r\n"
; 98   :         ));

  00088	e59f32a0	 ldr         r3, [pc, #0x2A0]
  0008c	e5933440	 ldr         r3, [r3, #0x440]
  00090	e3130001	 tst         r3, #1
  00094	0a000004	 beq         |$LN19@OALIoCtlHa|
  00098	e59f0298	 ldr         r0, [pc, #0x298]
  0009c	eb000000	 bl          NKDbgPrintfW
  000a0	e3a03001	 mov         r3, #1
  000a4	e58d3010	 str         r3, [sp, #0x10]
  000a8	ea000001	 b           |$LN20@OALIoCtlHa|
  000ac		 |$LN19@OALIoCtlHa|
  000ac	e3a03000	 mov         r3, #0
  000b0	e58d3010	 str         r3, [sp, #0x10]
  000b4		 |$LN20@OALIoCtlHa|

; 99   :         goto cleanUp;

  000b4	ea000085	 b           |$LN12@OALIoCtlHa|
  000b8	ea000084	 b           |$cleanUp$35476|
  000bc		 |$LN14@OALIoCtlHa|

; 100  :     }
; 101  : 
; 102  :     // Process according to input request
; 103  :     switch (*(static_cast<UINT32*>(pInpBuffer))) {

  000bc	e59d304c	 ldr         r3, [sp, #0x4C]
  000c0	e5933000	 ldr         r3, [r3]
  000c4	e58d3014	 str         r3, [sp, #0x14]
  000c8	e59d3014	 ldr         r3, [sp, #0x14]
  000cc	e3530f41	 cmp         r3, #0x41, 30
  000d0	8a00001b	 bhi         |$LN23@OALIoCtlHa|
  000d4	e59d3014	 ldr         r3, [sp, #0x14]
  000d8	e3530f41	 cmp         r3, #0x41, 30
  000dc	0a000041	 beq         |$LN6@OALIoCtlHa|
  000e0	e59d2014	 ldr         r2, [sp, #0x14]
  000e4	e3a03c01	 mov         r3, #1, 24
  000e8	e3833002	 orr         r3, r3, #2
  000ec	e1520003	 cmp         r2, r3
  000f0	8a00000d	 bhi         |$LN24@OALIoCtlHa|
  000f4	e59d2014	 ldr         r2, [sp, #0x14]
  000f8	e3a03c01	 mov         r3, #1, 24
  000fc	e3833002	 orr         r3, r3, #2
  00100	e1520003	 cmp         r2, r3
  00104	0a000025	 beq         |$LN8@OALIoCtlHa|
  00108	e59d3014	 ldr         r3, [sp, #0x14]
  0010c	e35300e0	 cmp         r3, #0xE0
  00110	0a00002b	 beq         |$LN7@OALIoCtlHa|
  00114	e59d2014	 ldr         r2, [sp, #0x14]
  00118	e3a03c01	 mov         r3, #1, 24
  0011c	e3833001	 orr         r3, r3, #1
  00120	e1520003	 cmp         r2, r3
  00124	0a000014	 beq         |$LN9@OALIoCtlHa|
  00128	ea00005b	 b           |$LN1@OALIoCtlHa|
  0012c		 |$LN24@OALIoCtlHa|
  0012c	e59d2014	 ldr         r2, [sp, #0x14]
  00130	e3a03c01	 mov         r3, #1, 24
  00134	e3833003	 orr         r3, r3, #3
  00138	e1520003	 cmp         r2, r3
  0013c	0a000032	 beq         |$LN5@OALIoCtlHa|
  00140	ea000055	 b           |$LN1@OALIoCtlHa|
  00144		 |$LN23@OALIoCtlHa|
  00144	e59d2014	 ldr         r2, [sp, #0x14]
  00148	e3a03c01	 mov         r3, #1, 24
  0014c	e3833005	 orr         r3, r3, #5
  00150	e1520003	 cmp         r2, r3
  00154	0a000035	 beq         |$LN4@OALIoCtlHa|
  00158	e59d2014	 ldr         r2, [sp, #0x14]
  0015c	e3a03c01	 mov         r3, #1, 24
  00160	e3833007	 orr         r3, r3, #7
  00164	e1520003	 cmp         r2, r3
  00168	0a000039	 beq         |$LN3@OALIoCtlHa|
  0016c	e59d3014	 ldr         r3, [sp, #0x14]
  00170	e3530f42	 cmp         r3, #0x42, 30
  00174	0a00003f	 beq         |$LN2@OALIoCtlHa|
  00178	ea000047	 b           |$LN1@OALIoCtlHa|
  0017c		 |$LN9@OALIoCtlHa|

; 104  :     case SPI_GETPLATFORMTYPE:
; 105  :         rc = GetPlatformType(pOutBuffer, outSize, pOutSize, &spiName);

  0017c	e28d3000	 add         r3, sp, #0
  00180	e59d205c	 ldr         r2, [sp, #0x5C]
  00184	e59d1058	 ldr         r1, [sp, #0x58]
  00188	e59d0054	 ldr         r0, [sp, #0x54]
  0018c	eb000000	 bl          |?GetPlatformType@@YAHPAXIPAIPAPBG@Z|
  00190	e58d0018	 str         r0, [sp, #0x18]
  00194	e59d3018	 ldr         r3, [sp, #0x18]
  00198	e58d3004	 str         r3, [sp, #4]

; 106  :         break;

  0019c	ea00004b	 b           |$LN10@OALIoCtlHa|
  001a0		 |$LN8@OALIoCtlHa|

; 107  :     case SPI_GETOEMINFO:
; 108  :         rc = GetOEMInfo(pOutBuffer, outSize, pOutSize, &spiName);

  001a0	e28d3000	 add         r3, sp, #0
  001a4	e59d205c	 ldr         r2, [sp, #0x5C]
  001a8	e59d1058	 ldr         r1, [sp, #0x58]
  001ac	e59d0054	 ldr         r0, [sp, #0x54]
  001b0	eb000000	 bl          |?GetOEMInfo@@YAHPAXIPAIPAPBG@Z|
  001b4	e58d001c	 str         r0, [sp, #0x1C]
  001b8	e59d301c	 ldr         r3, [sp, #0x1C]
  001bc	e58d3004	 str         r3, [sp, #4]

; 109  :         break;

  001c0	ea000042	 b           |$LN10@OALIoCtlHa|
  001c4		 |$LN7@OALIoCtlHa|

; 110  :     case SPI_GETPLATFORMVERSION:
; 111  :         rc = GetPlatformVersion(pOutBuffer, outSize, pOutSize, &spiName);

  001c4	e28d3000	 add         r3, sp, #0
  001c8	e59d205c	 ldr         r2, [sp, #0x5C]
  001cc	e59d1058	 ldr         r1, [sp, #0x58]
  001d0	e59d0054	 ldr         r0, [sp, #0x54]
  001d4	eb000000	 bl          |?GetPlatformVersion@@YAHPAXIPAIPAPBG@Z|
  001d8	e58d0020	 str         r0, [sp, #0x20]
  001dc	e59d3020	 ldr         r3, [sp, #0x20]
  001e0	e58d3004	 str         r3, [sp, #4]

; 112  :         break;

  001e4	ea000039	 b           |$LN10@OALIoCtlHa|
  001e8		 |$LN6@OALIoCtlHa|

; 113  :     case SPI_GETPLATFORMNAME:
; 114  :         rc = GetPlatformName(pOutBuffer, outSize, pOutSize, &spiName);

  001e8	e28d3000	 add         r3, sp, #0
  001ec	e59d205c	 ldr         r2, [sp, #0x5C]
  001f0	e59d1058	 ldr         r1, [sp, #0x58]
  001f4	e59d0054	 ldr         r0, [sp, #0x54]
  001f8	eb000000	 bl          |?GetPlatformName@@YAHPAXIPAIPAPBG@Z|
  001fc	e58d0024	 str         r0, [sp, #0x24]
  00200	e59d3024	 ldr         r3, [sp, #0x24]
  00204	e58d3004	 str         r3, [sp, #4]

; 115  :         break;

  00208	ea000030	 b           |$LN10@OALIoCtlHa|
  0020c		 |$LN5@OALIoCtlHa|

; 116  :     case SPI_GETPROJECTNAME:
; 117  :         rc = GetProjectName(pOutBuffer, outSize, pOutSize, &spiName);

  0020c	e28d3000	 add         r3, sp, #0
  00210	e59d205c	 ldr         r2, [sp, #0x5C]
  00214	e59d1058	 ldr         r1, [sp, #0x58]
  00218	e59d0054	 ldr         r0, [sp, #0x54]
  0021c	eb000000	 bl          |?GetProjectName@@YAHPAXIPAIPAPBG@Z|
  00220	e58d0028	 str         r0, [sp, #0x28]
  00224	e59d3028	 ldr         r3, [sp, #0x28]
  00228	e58d3004	 str         r3, [sp, #4]

; 118  :         break;

  0022c	ea000027	 b           |$LN10@OALIoCtlHa|
  00230		 |$LN4@OALIoCtlHa|

; 119  :     case SPI_GETBOOTMENAME:
; 120  :         rc = GetBootMeName(pOutBuffer, outSize, pOutSize, &spiName);

  00230	e28d3000	 add         r3, sp, #0
  00234	e59d205c	 ldr         r2, [sp, #0x5C]
  00238	e59d1058	 ldr         r1, [sp, #0x58]
  0023c	e59d0054	 ldr         r0, [sp, #0x54]
  00240	eb000000	 bl          |?GetBootMeName@@YAHPAXIPAIPAPBG@Z|
  00244	e58d002c	 str         r0, [sp, #0x2C]
  00248	e59d302c	 ldr         r3, [sp, #0x2C]
  0024c	e58d3004	 str         r3, [sp, #4]

; 121  :         break;

  00250	ea00001e	 b           |$LN10@OALIoCtlHa|
  00254		 |$LN3@OALIoCtlHa|

; 122  :     case SPI_GETUUID:
; 123  :         rc = GetUUID(pOutBuffer, outSize, pOutSize, &spiName);

  00254	e28d3000	 add         r3, sp, #0
  00258	e59d205c	 ldr         r2, [sp, #0x5C]
  0025c	e59d1058	 ldr         r1, [sp, #0x58]
  00260	e59d0054	 ldr         r0, [sp, #0x54]
  00264	eb000000	 bl          |?GetUUID@@YAHPAXIPAIPAPBG@Z|
  00268	e58d0030	 str         r0, [sp, #0x30]
  0026c	e59d3030	 ldr         r3, [sp, #0x30]
  00270	e58d3004	 str         r3, [sp, #4]

; 124  :         break;

  00274	ea000015	 b           |$LN10@OALIoCtlHa|
  00278		 |$LN2@OALIoCtlHa|

; 125  :     case SPI_GETGUIDPATTERN:
; 126  :         rc = GetGUIDPattern(pOutBuffer, outSize, pOutSize, &spiName);

  00278	e28d3000	 add         r3, sp, #0
  0027c	e59d205c	 ldr         r2, [sp, #0x5C]
  00280	e59d1058	 ldr         r1, [sp, #0x58]
  00284	e59d0054	 ldr         r0, [sp, #0x54]
  00288	eb000000	 bl          |?GetGUIDPattern@@YAHPAXIPAIPAPBG@Z|
  0028c	e58d0034	 str         r0, [sp, #0x34]
  00290	e59d3034	 ldr         r3, [sp, #0x34]
  00294	e58d3004	 str         r3, [sp, #4]

; 127  :         break;

  00298	ea00000c	 b           |$LN10@OALIoCtlHa|
  0029c		 |$LN1@OALIoCtlHa|

; 128  :     default:
; 129  :         NKSetLastError(ERROR_INVALID_PARAMETER);

  0029c	e3a00057	 mov         r0, #0x57
  002a0	eb000000	 bl          NKSetLastError

; 130  :         OALMSG(OAL_ERROR, (
; 131  :             L"ERROR: OALIoCtlHalGetDeviceInfo: Invalid request\r\n"
; 132  :         ));

  002a4	e59f3084	 ldr         r3, [pc, #0x84]
  002a8	e5933440	 ldr         r3, [r3, #0x440]
  002ac	e3130001	 tst         r3, #1
  002b0	0a000004	 beq         |$LN21@OALIoCtlHa|
  002b4	e59f0078	 ldr         r0, [pc, #0x78]
  002b8	eb000000	 bl          NKDbgPrintfW
  002bc	e3a03001	 mov         r3, #1
  002c0	e58d3038	 str         r3, [sp, #0x38]
  002c4	ea000001	 b           |$LN22@OALIoCtlHa|
  002c8		 |$LN21@OALIoCtlHa|
  002c8	e3a03000	 mov         r3, #0
  002cc	e58d3038	 str         r3, [sp, #0x38]
  002d0		 |$LN22@OALIoCtlHa|
  002d0		 |$LN10@OALIoCtlHa|
  002d0		 |$LN12@OALIoCtlHa|
  002d0		 |$cleanUp$35476|

; 133  :         break;
; 134  :     }
; 135  : 
; 136  : cleanUp:
; 137  :     // Indicate status
; 138  :     OALMSG(OAL_FUNC&&OAL_IOCTL, (
; 139  :         L"-OALIoCtlHalGetDeviceInfo(SPI = %s, rc = %d)\r\n", spiName, rc
; 140  :     ));

  002d0	e59f3058	 ldr         r3, [pc, #0x58]
  002d4	e5933440	 ldr         r3, [r3, #0x440]
  002d8	e3130004	 tst         r3, #4
  002dc	0a00000a	 beq         |$LN25@OALIoCtlHa|
  002e0	e59f3048	 ldr         r3, [pc, #0x48]
  002e4	e5933440	 ldr         r3, [r3, #0x440]
  002e8	e3130a01	 tst         r3, #1, 20
  002ec	0a000006	 beq         |$LN25@OALIoCtlHa|
  002f0	e59d2004	 ldr         r2, [sp, #4]
  002f4	e59d1000	 ldr         r1, [sp]
  002f8	e59f002c	 ldr         r0, [pc, #0x2C]
  002fc	eb000000	 bl          NKDbgPrintfW
  00300	e3a03001	 mov         r3, #1
  00304	e58d303c	 str         r3, [sp, #0x3C]
  00308	ea000001	 b           |$LN26@OALIoCtlHa|
  0030c		 |$LN25@OALIoCtlHa|
  0030c	e3a03000	 mov         r3, #0
  00310	e58d303c	 str         r3, [sp, #0x3C]
  00314		 |$LN26@OALIoCtlHa|

; 141  :     return rc;

  00314	e59d3004	 ldr         r3, [sp, #4]
  00318	e58d3008	 str         r3, [sp, #8]

; 142  : }

  0031c	e59d0008	 ldr         r0, [sp, #8]
  00320	e28dd040	 add         sp, sp, #0x40
  00324	e89d6000	 ldmia       sp, {sp, lr}
  00328	e12fff1e	 bx          lr
  0032c		 |$LN30@OALIoCtlHa|
  0032c		 |$LN31@OALIoCtlHa|
  0032c	00000000	 DCD         |??_C@_1FO@DMDJMEMA@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?$CI?$AAS?$AAP?$AAI?$AA?5?$AA?$DN?$AA?5@|
  00330		 |$LN32@OALIoCtlHa|
  00330	00000000	 DCD         |dpCurSettings|
  00334		 |$LN33@OALIoCtlHa|
  00334	00000000	 DCD         |??_C@_1GG@BAANNGGI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3@|
  00338		 |$LN34@OALIoCtlHa|
  00338	00000000	 DCD         |??_C@_1GK@FDHCLEBC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3@|
  0033c		 |$LN35@OALIoCtlHa|
  0033c	00000000	 DCD         |??_C@_1EC@NLAFOPGI@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?$CI?$AA?4?$AA?4?$AA?4?$AA?$CJ?$AA?$AN?$AA?6@|
  00340		 |$LN36@OALIoCtlHa|
  00340	00000000	 DCD         |??_C@_11LOCGONAA@?$AA?$AA@|
  00344		 |$M35666|

			 ENDP  ; |OALIoCtlHalGetDeviceInfo|

	EXPORT	|??_C@_1BEM@IMHNFGHE@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAI?$AAO?$AAC?$AAT@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@DNLIPKLH@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|OEMIoControl|

  00008			 AREA	 |.pdata|, PDATA
|$T35685| DCD	|$LN7@GetPlatfor|
	DCD	0x40002504

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BEM@IMHNFGHE@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAI?$AAO?$AAC?$AAT@| DCB "W"
	DCB	0x0, "a", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, ":", 0x0, " ", 0x0, "y", 0x0, "o", 0x0, "u", 0x0, " "
	DCB	0x0, "a", 0x0, "r", 0x0, "e", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "T", 0x0, "L", 0x0, "_", 0x0, "H", 0x0, "A", 0x0, "L"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_"
	DCB	0x0, "I", 0x0, "N", 0x0, "F", 0x0, "O", 0x0, ":", 0x0, ":"
	DCB	0x0, "S", 0x0, "P", 0x0, "I", 0x0, "_", 0x0, "G", 0x0, "E"
	DCB	0x0, "T", 0x0, "P", 0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F"
	DCB	0x0, "O", 0x0, "R", 0x0, "M", 0x0, "T", 0x0, "Y", 0x0, "P"
	DCB	0x0, "E", 0x0, ",", 0x0, " ", 0x0, "w", 0x0, "h", 0x0, "i"
	DCB	0x0, "c", 0x0, "h", 0x0, " ", 0x0, "h", 0x0, "a", 0x0, "s"
	DCB	0x0, " ", 0x0, "b", 0x0, "e", 0x0, "e", 0x0, "n", 0x0, " "
	DCB	0x0, "d", 0x0, "e", 0x0, "p", 0x0, "r", 0x0, "e", 0x0, "c"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, ".", 0x0, " "
	DCB	0x0, " ", 0x0, "U", 0x0, "s", 0x0, "e", 0x0, " ", 0x0, "I"
	DCB	0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_", 0x0, "H"
	DCB	0x0, "A", 0x0, "L", 0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T"
	DCB	0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "I", 0x0, "C"
	DCB	0x0, "E", 0x0, "_", 0x0, "I", 0x0, "N", 0x0, "F", 0x0, "O"
	DCB	0x0, ":", 0x0, ":", 0x0, "S", 0x0, "P", 0x0, "I", 0x0, "_"
	DCB	0x0, "G", 0x0, "E", 0x0, "T", 0x0, "P", 0x0, "L", 0x0, "A"
	DCB	0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R", 0x0, "M", 0x0, "N"
	DCB	0x0, "A", 0x0, "M", 0x0, "E", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "."
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@DNLIPKLH@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "S"
	DCB	0x0, "P", 0x0, "I", 0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T"
	DCB	0x0, "P", 0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O"
	DCB	0x0, "R", 0x0, "M", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E"
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  00344			 AREA	 |.text|, CODE, ARM

  00344		 |?GetPlatformType@@YAHPAXIPAIPAPBG@Z| PROC ; GetPlatformType

; 146  : ) {

  00344		 |$LN7@GetPlatfor|
  00344	e1a0c00d	 mov         r12, sp
  00348	e92d000f	 stmdb       sp!, {r0 - r3}
  0034c	e92d5000	 stmdb       sp!, {r12, lr}
  00350	e24dd024	 sub         sp, sp, #0x24
  00354		 |$M35682|

; 147  : 
; 148  :     // Note: on PocketPC and Smartphone platforms the platform type 
; 149  :     // string may contain NULLs and is terminated with a 
; 150  :     // double NULL.
; 151  :     BOOL rc;
; 152  :     (*spiName) = L"SPI_GETPLATFORMTYPE";

  00354	e59f2078	 ldr         r2, [pc, #0x78]
  00358	e59d3038	 ldr         r3, [sp, #0x38]
  0035c	e5832000	 str         r2, [r3]

; 153  : 
; 154  : #if defined( project_smartfon ) || defined( project_wpc )
; 155  :     RETAILMSG(1, (TEXT("Warning: you are requesting IOCTL_HAL_GET_DEVICE_INFO::SPI_GETPLATFORMTYPE, which has been deprecated.  Use IOCTL_HAL_GET_DEVICE_INFO::SPI_GETPROJECTNAME instead.\r\n")));
; 156  :     if(rc = (CheckBufferSize(pOutBuffer, outSize, pOutSize, sizeof(g_deprecatedIoctlProjectName), *spiName)))
; 157  :     {   
; 158  :         // Copy the double-null terminated project name to caller's buffer
; 159  :         memcpy(pOutBuffer, g_deprecatedIoctlProjectName, sizeof(g_deprecatedIoctlProjectName));
; 160  :         rc = TRUE;
; 161  :     }
; 162  : #else
; 163  :     RETAILMSG(1, (TEXT("Warning: you are requesting IOCTL_HAL_GET_DEVICE_INFO::SPI_GETPLATFORMTYPE, which has been deprecated.  Use IOCTL_HAL_GET_DEVICE_INFO::SPI_GETPLATFORMNAME instead.\r\n")));

  00360	e59f0068	 ldr         r0, [pc, #0x68]
  00364	eb000000	 bl          NKDbgPrintfW
  00368	e3a03001	 mov         r3, #1
  0036c	e58d301c	 str         r3, [sp, #0x1C]
  00370	ea000001	 b           |$LN4@GetPlatfor|
  00374	e3a03000	 mov         r3, #0
  00378	e58d301c	 str         r3, [sp, #0x1C]
  0037c		 |$LN4@GetPlatfor|

; 164  :     UINT32 platformNameSPICode = SPI_GETPLATFORMNAME;

  0037c	e3a03f41	 mov         r3, #0x41, 30
  00380	e58d300c	 str         r3, [sp, #0xC]

; 165  :     rc = OEMIoControl(IOCTL_HAL_GET_DEVICE_INFO, static_cast<VOID*>(&platformNameSPICode), sizeof(platformNameSPICode), pOutBuffer, outSize, reinterpret_cast<DWORD*>(pOutSize));

  00384	e59d3034	 ldr         r3, [sp, #0x34]
  00388	e58d3004	 str         r3, [sp, #4]
  0038c	e59d3030	 ldr         r3, [sp, #0x30]
  00390	e58d3000	 str         r3, [sp]
  00394	e59d302c	 ldr         r3, [sp, #0x2C]
  00398	e3a02004	 mov         r2, #4
  0039c	e28d100c	 add         r1, sp, #0xC
  003a0	e59f0024	 ldr         r0, [pc, #0x24]
  003a4	eb000000	 bl          OEMIoControl
  003a8	e58d0020	 str         r0, [sp, #0x20]
  003ac	e59d3020	 ldr         r3, [sp, #0x20]
  003b0	e58d3008	 str         r3, [sp, #8]

; 166  : #endif
; 167  : 
; 168  :     return rc;

  003b4	e59d3008	 ldr         r3, [sp, #8]
  003b8	e58d3018	 str         r3, [sp, #0x18]

; 169  : }

  003bc	e59d0018	 ldr         r0, [sp, #0x18]
  003c0	e28dd024	 add         sp, sp, #0x24
  003c4	e89d6000	 ldmia       sp, {sp, lr}
  003c8	e12fff1e	 bx          lr
  003cc		 |$LN8@GetPlatfor|
  003cc		 |$LN9@GetPlatfor|
  003cc	01010004	 DCD         0x1010004
  003d0		 |$LN10@GetPlatfor|
  003d0	00000000	 DCD         |??_C@_1BEM@IMHNFGHE@?$AAW?$AAa?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?3?$AA?5?$AAy?$AAo?$AAu?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAI?$AAO?$AAC?$AAT@|
  003d4		 |$LN11@GetPlatfor|
  003d4	00000000	 DCD         |??_C@_1CI@DNLIPKLH@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  003d8		 |$M35683|

			 ENDP  ; |?GetPlatformType@@YAHPAXIPAIPAPBG@Z|, GetPlatformType

	EXPORT	|??_C@_1BO@MIPEKPNN@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAO?$AAE?$AAM?$AAI?$AAN?$AAF?$AAO?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|NKwcscpy|
	IMPORT	|NKwcslen|
	IMPORT	|g_oalIoCtlPlatformOEM|

  00010			 AREA	 |.pdata|, PDATA
|$T35697| DCD	|$LN6@GetOEMInfo|
	DCD	0x40002c04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@MIPEKPNN@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAO?$AAE?$AAM?$AAI?$AAN?$AAF?$AAO?$AA?$AA@| DCB "S"
	DCB	0x0, "P", 0x0, "I", 0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T"
	DCB	0x0, "O", 0x0, "E", 0x0, "M", 0x0, "I", 0x0, "N", 0x0, "F"
	DCB	0x0, "O", 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  003d8			 AREA	 |.text|, CODE, ARM

  003d8		 |?GetOEMInfo@@YAHPAXIPAIPAPBG@Z| PROC	; GetOEMInfo

; 173  : ) {

  003d8		 |$LN6@GetOEMInfo|
  003d8	e1a0c00d	 mov         r12, sp
  003dc	e92d000f	 stmdb       sp!, {r0 - r3}
  003e0	e92d5000	 stmdb       sp!, {r12, lr}
  003e4	e24dd01c	 sub         sp, sp, #0x1C
  003e8		 |$M35694|

; 174  :     BOOL rc;
; 175  :     (*spiName) = L"SPI_GETOEMINFO";

  003e8	e59f2094	 ldr         r2, [pc, #0x94]
  003ec	e59d3030	 ldr         r3, [sp, #0x30]
  003f0	e5832000	 str         r2, [r3]

; 176  :     if(rc = (CheckBufferSize(pOutBuffer, outSize, pOutSize, (NKwcslen(g_oalIoCtlPlatformOEM)+1)*sizeof(WCHAR), *spiName)))

  003f4	e59f3084	 ldr         r3, [pc, #0x84]
  003f8	e5930000	 ldr         r0, [r3]
  003fc	eb000000	 bl          NKwcslen
  00400	e58d0014	 str         r0, [sp, #0x14]
  00404	e59d3014	 ldr         r3, [sp, #0x14]
  00408	e2832001	 add         r2, r3, #1
  0040c	e3a03002	 mov         r3, #2
  00410	e0030392	 mul         r3, r2, r3
  00414	e58d3008	 str         r3, [sp, #8]
  00418	e59d3030	 ldr         r3, [sp, #0x30]
  0041c	e5933000	 ldr         r3, [r3]
  00420	e58d3000	 str         r3, [sp]
  00424	e28d3008	 add         r3, sp, #8
  00428	e59d202c	 ldr         r2, [sp, #0x2C]
  0042c	e28d1028	 add         r1, sp, #0x28
  00430	e59d0024	 ldr         r0, [sp, #0x24]
  00434	eb000000	 bl          |?CheckBufferSize@@YAHPBXABIPAI1PBG@Z|
  00438	e58d0018	 str         r0, [sp, #0x18]
  0043c	e59d3018	 ldr         r3, [sp, #0x18]
  00440	e58d3004	 str         r3, [sp, #4]
  00444	e59d3004	 ldr         r3, [sp, #4]
  00448	e3530000	 cmp         r3, #0
  0044c	0a000005	 beq         |$LN1@GetOEMInfo|

; 177  :     {
; 178  :         // Copy OEM info to caller's buffer
; 179  :         NKwcscpy((WCHAR*)pOutBuffer, g_oalIoCtlPlatformOEM);

  00450	e59f3028	 ldr         r3, [pc, #0x28]
  00454	e5931000	 ldr         r1, [r3]
  00458	e59d0024	 ldr         r0, [sp, #0x24]
  0045c	eb000000	 bl          NKwcscpy

; 180  :         rc = TRUE;

  00460	e3a03001	 mov         r3, #1
  00464	e58d3004	 str         r3, [sp, #4]
  00468		 |$LN1@GetOEMInfo|

; 181  :     }
; 182  :     return rc;

  00468	e59d3004	 ldr         r3, [sp, #4]
  0046c	e58d3010	 str         r3, [sp, #0x10]

; 183  : }

  00470	e59d0010	 ldr         r0, [sp, #0x10]
  00474	e28dd01c	 add         sp, sp, #0x1C
  00478	e89d6000	 ldmia       sp, {sp, lr}
  0047c	e12fff1e	 bx          lr
  00480		 |$LN7@GetOEMInfo|
  00480		 |$LN8@GetOEMInfo|
  00480	00000000	 DCD         |g_oalIoCtlPlatformOEM|
  00484		 |$LN9@GetOEMInfo|
  00484	00000000	 DCD         |??_C@_1BO@MIPEKPNN@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAO?$AAE?$AAM?$AAI?$AAN?$AAF?$AAO?$AA?$AA@|
  00488		 |$M35695|

			 ENDP  ; |?GetOEMInfo@@YAHPAXIPAIPAPBG@Z|, GetOEMInfo

	EXPORT	|??_C@_1CO@EPEFNCOE@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AAV?$AAE?$AAR?$AAS?$AAI?$AAO?$AAN?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|memcpy|

  00018			 AREA	 |.pdata|, PDATA
|$T35708| DCD	|$LN6@GetPlatfor@2|
	DCD	0x40002504

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@EPEFNCOE@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AAV?$AAE?$AAR?$AAS?$AAI?$AAO?$AAN?$AA?$AA@| DCB "S"
	DCB	0x0, "P", 0x0, "I", 0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T"
	DCB	0x0, "P", 0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O"
	DCB	0x0, "R", 0x0, "M", 0x0, "V", 0x0, "E", 0x0, "R", 0x0, "S"
	DCB	0x0, "I", 0x0, "O", 0x0, "N", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00488			 AREA	 |.text|, CODE, ARM

  00488		 |?GetPlatformVersion@@YAHPAXIPAIPAPBG@Z| PROC ; GetPlatformVersion

; 187  : ) {

  00488		 |$LN6@GetPlatfor@2|
  00488	e1a0c00d	 mov         r12, sp
  0048c	e92d000f	 stmdb       sp!, {r0 - r3}
  00490	e92d5000	 stmdb       sp!, {r12, lr}
  00494	e24dd018	 sub         sp, sp, #0x18
  00498		 |$M35705|

; 188  :     BOOL rc;
; 189  :     (*spiName) = L"SPI_GETPLATFORMVERSION";

  00498	e59f2078	 ldr         r2, [pc, #0x78]
  0049c	e59d302c	 ldr         r3, [sp, #0x2C]
  004a0	e5832000	 str         r2, [r3]

; 190  :     if(rc = (CheckBufferSize(pOutBuffer, outSize, pOutSize, sizeof(PLATFORMVERSION), *spiName)))

  004a4	e3a03008	 mov         r3, #8
  004a8	e58d3008	 str         r3, [sp, #8]
  004ac	e59d302c	 ldr         r3, [sp, #0x2C]
  004b0	e5933000	 ldr         r3, [r3]
  004b4	e58d3000	 str         r3, [sp]
  004b8	e28d3008	 add         r3, sp, #8
  004bc	e59d2028	 ldr         r2, [sp, #0x28]
  004c0	e28d1024	 add         r1, sp, #0x24
  004c4	e59d0020	 ldr         r0, [sp, #0x20]
  004c8	eb000000	 bl          |?CheckBufferSize@@YAHPBXABIPAI1PBG@Z|
  004cc	e58d0014	 str         r0, [sp, #0x14]
  004d0	e59d3014	 ldr         r3, [sp, #0x14]
  004d4	e58d3004	 str         r3, [sp, #4]
  004d8	e59d3004	 ldr         r3, [sp, #4]
  004dc	e3530000	 cmp         r3, #0
  004e0	0a000005	 beq         |$LN1@GetPlatfor@2|

; 191  :     {
; 192  :         // Copy platform version to caller's buffer
; 193  :         memcpy(pOutBuffer, HALPlatformVersion, sizeof(HALPlatformVersion));

  004e4	e3a02008	 mov         r2, #8
  004e8	e59f1024	 ldr         r1, [pc, #0x24]
  004ec	e59d0020	 ldr         r0, [sp, #0x20]
  004f0	eb000000	 bl          memcpy

; 194  :         rc = TRUE;

  004f4	e3a03001	 mov         r3, #1
  004f8	e58d3004	 str         r3, [sp, #4]
  004fc		 |$LN1@GetPlatfor@2|

; 195  :     }
; 196  :     return rc;

  004fc	e59d3004	 ldr         r3, [sp, #4]
  00500	e58d3010	 str         r3, [sp, #0x10]

; 197  : }

  00504	e59d0010	 ldr         r0, [sp, #0x10]
  00508	e28dd018	 add         sp, sp, #0x18
  0050c	e89d6000	 ldmia       sp, {sp, lr}
  00510	e12fff1e	 bx          lr
  00514		 |$LN7@GetPlatfor@2|
  00514		 |$LN8@GetPlatfor@2|
  00514	00000000	 DCD         |HALPlatformVersion|
  00518		 |$LN9@GetPlatfor@2|
  00518	00000000	 DCD         |??_C@_1CO@EPEFNCOE@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AAV?$AAE?$AAR?$AAS?$AAI?$AAO?$AAN?$AA?$AA@|
  0051c		 |$M35706|

			 ENDP  ; |?GetPlatformVersion@@YAHPAXIPAIPAPBG@Z|, GetPlatformVersion

	EXPORT	|??_C@_1CG@NCDPNLLL@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAP?$AAR?$AAO?$AAJ?$AAE?$AAC?$AAT?$AAN?$AAA?$AAM?$AAE?$AA?$AA@| [ DATA ] ; `string'

  00020			 AREA	 |.pdata|, PDATA
|$T35719| DCD	|$LN6@GetProject|
	DCD	0x40002a04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@NCDPNLLL@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAP?$AAR?$AAO?$AAJ?$AAE?$AAC?$AAT?$AAN?$AAA?$AAM?$AAE?$AA?$AA@| DCB "S"
	DCB	0x0, "P", 0x0, "I", 0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T"
	DCB	0x0, "P", 0x0, "R", 0x0, "O", 0x0, "J", 0x0, "E", 0x0, "C"
	DCB	0x0, "T", 0x0, "N", 0x0, "A", 0x0, "M", 0x0, "E", 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  0051c			 AREA	 |.text|, CODE, ARM

  0051c		 |?GetProjectName@@YAHPAXIPAIPAPBG@Z| PROC ; GetProjectName

; 201  : ) {

  0051c		 |$LN6@GetProject|
  0051c	e1a0c00d	 mov         r12, sp
  00520	e92d000f	 stmdb       sp!, {r0 - r3}
  00524	e92d5000	 stmdb       sp!, {r12, lr}
  00528	e24dd01c	 sub         sp, sp, #0x1C
  0052c		 |$M35716|

; 202  :     BOOL rc;
; 203  :     (*spiName) = L"SPI_GETPROJECTNAME";

  0052c	e59f208c	 ldr         r2, [pc, #0x8C]
  00530	e59d3030	 ldr         r3, [sp, #0x30]
  00534	e5832000	 str         r2, [r3]

; 204  :     if(rc = (CheckBufferSize(pOutBuffer, outSize, pOutSize, (NKwcslen(g_oalIoCtlProjectName)+1)*sizeof(WCHAR), *spiName)))

  00538	e59f007c	 ldr         r0, [pc, #0x7C]
  0053c	eb000000	 bl          NKwcslen
  00540	e58d0014	 str         r0, [sp, #0x14]
  00544	e59d3014	 ldr         r3, [sp, #0x14]
  00548	e2832001	 add         r2, r3, #1
  0054c	e3a03002	 mov         r3, #2
  00550	e0030392	 mul         r3, r2, r3
  00554	e58d3008	 str         r3, [sp, #8]
  00558	e59d3030	 ldr         r3, [sp, #0x30]
  0055c	e5933000	 ldr         r3, [r3]
  00560	e58d3000	 str         r3, [sp]
  00564	e28d3008	 add         r3, sp, #8
  00568	e59d202c	 ldr         r2, [sp, #0x2C]
  0056c	e28d1028	 add         r1, sp, #0x28
  00570	e59d0024	 ldr         r0, [sp, #0x24]
  00574	eb000000	 bl          |?CheckBufferSize@@YAHPBXABIPAI1PBG@Z|
  00578	e58d0018	 str         r0, [sp, #0x18]
  0057c	e59d3018	 ldr         r3, [sp, #0x18]
  00580	e58d3004	 str         r3, [sp, #4]
  00584	e59d3004	 ldr         r3, [sp, #4]
  00588	e3530000	 cmp         r3, #0
  0058c	0a000004	 beq         |$LN1@GetProject|

; 205  :     {
; 206  :         // Copy project name to caller's buffer
; 207  :         NKwcscpy((WCHAR*)pOutBuffer, g_oalIoCtlProjectName);

  00590	e59f1024	 ldr         r1, [pc, #0x24]
  00594	e59d0024	 ldr         r0, [sp, #0x24]
  00598	eb000000	 bl          NKwcscpy

; 208  :         rc = TRUE;

  0059c	e3a03001	 mov         r3, #1
  005a0	e58d3004	 str         r3, [sp, #4]
  005a4		 |$LN1@GetProject|

; 209  :     }
; 210  :     return rc;

  005a4	e59d3004	 ldr         r3, [sp, #4]
  005a8	e58d3010	 str         r3, [sp, #0x10]

; 211  : }

  005ac	e59d0010	 ldr         r0, [sp, #0x10]
  005b0	e28dd01c	 add         sp, sp, #0x1C
  005b4	e89d6000	 ldmia       sp, {sp, lr}
  005b8	e12fff1e	 bx          lr
  005bc		 |$LN7@GetProject|
  005bc		 |$LN8@GetProject|
  005bc	00000000	 DCD         |g_oalIoCtlProjectName|
  005c0		 |$LN9@GetProject|
  005c0	00000000	 DCD         |??_C@_1CG@NCDPNLLL@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAP?$AAR?$AAO?$AAJ?$AAE?$AAC?$AAT?$AAN?$AAA?$AAM?$AAE?$AA?$AA@|
  005c4		 |$M35717|

			 ENDP  ; |?GetProjectName@@YAHPAXIPAIPAPBG@Z|, GetProjectName

	EXPORT	|??_C@_1CI@BNCCNAEN@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AAN?$AAA?$AAM?$AAE?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|g_oalIoCtlPlatformType|

  00028			 AREA	 |.pdata|, PDATA
|$T35730| DCD	|$LN6@GetPlatfor@3|
	DCD	0x40002c04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@BNCCNAEN@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AAN?$AAA?$AAM?$AAE?$AA?$AA@| DCB "S"
	DCB	0x0, "P", 0x0, "I", 0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T"
	DCB	0x0, "P", 0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O"
	DCB	0x0, "R", 0x0, "M", 0x0, "N", 0x0, "A", 0x0, "M", 0x0, "E"
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Odtp

  005c4			 AREA	 |.text|, CODE, ARM

  005c4		 |?GetPlatformName@@YAHPAXIPAIPAPBG@Z| PROC ; GetPlatformName

; 215  : ) {

  005c4		 |$LN6@GetPlatfor@3|
  005c4	e1a0c00d	 mov         r12, sp
  005c8	e92d000f	 stmdb       sp!, {r0 - r3}
  005cc	e92d5000	 stmdb       sp!, {r12, lr}
  005d0	e24dd01c	 sub         sp, sp, #0x1C
  005d4		 |$M35727|

; 216  :     BOOL rc;
; 217  :     (*spiName) = L"SPI_GETPLATFORMNAME";

  005d4	e59f2094	 ldr         r2, [pc, #0x94]
  005d8	e59d3030	 ldr         r3, [sp, #0x30]
  005dc	e5832000	 str         r2, [r3]

; 218  :     if(rc = (CheckBufferSize(pOutBuffer, outSize, pOutSize, (NKwcslen(g_oalIoCtlPlatformType)+1)*sizeof(WCHAR), *spiName)))

  005e0	e59f3084	 ldr         r3, [pc, #0x84]
  005e4	e5930000	 ldr         r0, [r3]
  005e8	eb000000	 bl          NKwcslen
  005ec	e58d0014	 str         r0, [sp, #0x14]
  005f0	e59d3014	 ldr         r3, [sp, #0x14]
  005f4	e2832001	 add         r2, r3, #1
  005f8	e3a03002	 mov         r3, #2
  005fc	e0030392	 mul         r3, r2, r3
  00600	e58d3008	 str         r3, [sp, #8]
  00604	e59d3030	 ldr         r3, [sp, #0x30]
  00608	e5933000	 ldr         r3, [r3]
  0060c	e58d3000	 str         r3, [sp]
  00610	e28d3008	 add         r3, sp, #8
  00614	e59d202c	 ldr         r2, [sp, #0x2C]
  00618	e28d1028	 add         r1, sp, #0x28
  0061c	e59d0024	 ldr         r0, [sp, #0x24]
  00620	eb000000	 bl          |?CheckBufferSize@@YAHPBXABIPAI1PBG@Z|
  00624	e58d0018	 str         r0, [sp, #0x18]
  00628	e59d3018	 ldr         r3, [sp, #0x18]
  0062c	e58d3004	 str         r3, [sp, #4]
  00630	e59d3004	 ldr         r3, [sp, #4]
  00634	e3530000	 cmp         r3, #0
  00638	0a000005	 beq         |$LN1@GetPlatfor@3|

; 219  :     {
; 220  :         // Copy platform name to caller's buffer
; 221  :         NKwcscpy((WCHAR*)pOutBuffer, g_oalIoCtlPlatformType);

  0063c	e59f3028	 ldr         r3, [pc, #0x28]
  00640	e5931000	 ldr         r1, [r3]
  00644	e59d0024	 ldr         r0, [sp, #0x24]
  00648	eb000000	 bl          NKwcscpy

; 222  :         rc = TRUE;

  0064c	e3a03001	 mov         r3, #1
  00650	e58d3004	 str         r3, [sp, #4]
  00654		 |$LN1@GetPlatfor@3|

; 223  :     }
; 224  :     return rc;

  00654	e59d3004	 ldr         r3, [sp, #4]
  00658	e58d3010	 str         r3, [sp, #0x10]

; 225  : }

  0065c	e59d0010	 ldr         r0, [sp, #0x10]
  00660	e28dd01c	 add         sp, sp, #0x1C
  00664	e89d6000	 ldmia       sp, {sp, lr}
  00668	e12fff1e	 bx          lr
  0066c		 |$LN7@GetPlatfor@3|
  0066c		 |$LN8@GetPlatfor@3|
  0066c	00000000	 DCD         |g_oalIoCtlPlatformType|
  00670		 |$LN9@GetPlatfor@3|
  00670	00000000	 DCD         |??_C@_1CI@BNCCNAEN@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AAN?$AAA?$AAM?$AAE?$AA?$AA@|
  00674		 |$M35728|

			 ENDP  ; |?GetPlatformName@@YAHPAXIPAIPAPBG@Z|, GetPlatformName

	EXPORT	|??_C@_1CE@JLAPMINP@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAB?$AAO?$AAO?$AAT?$AAM?$AAE?$AAN?$AAA?$AAM?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|__$ArrayPad$| [ DATA ]
	IMPORT	|OALArgsQuery|
	IMPORT	|__security_cookie|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_check_cookie|

  00030			 AREA	 |.pdata|, PDATA
|$T35746| DCD	|$LN11@GetBootMeN|
	DCD	0xc0005d04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@JLAPMINP@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAB?$AAO?$AAO?$AAT?$AAM?$AAE?$AAN?$AAA?$AAM?$AAE?$AA?$AA@| DCB "S"
	DCB	0x0, "P", 0x0, "I", 0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T"
	DCB	0x0, "B", 0x0, "O", 0x0, "O", 0x0, "T", 0x0, "M", 0x0, "E"
	DCB	0x0, "N", 0x0, "A", 0x0, "M", 0x0, "E", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.xdata|, DATA
|$T35742| DCD	0xffffffd0
; Function compile flags: /Odtp

  00674			 AREA	 |.text|, CODE, ARM

  00674	00000000	 DCD         |__GSHandlerCheck|
  00678	00000000	 DCD         |$T35742|

  0067c		 |?GetBootMeName@@YAHPAXIPAIPAPBG@Z| PROC ; GetBootMeName

; 229  : ) {

  0067c		 |$LN11@GetBootMeN|
  0067c	e1a0c00d	 mov         r12, sp
  00680	e92d000f	 stmdb       sp!, {r0 - r3}
  00684	e92d5000	 stmdb       sp!, {r12, lr}
  00688	e24dd050	 sub         sp, sp, #0x50
  0068c		 |$M35743|
  0068c	e59f3158	 ldr         r3, [pc, #0x158]
  00690	e5933000	 ldr         r3, [r3]
  00694	e58d3038	 str         r3, [sp, #0x38]

; 230  :     BOOL rc;
; 231  :     (*spiName) = L"SPI_GETBOOTMENAME";

  00698	e59f2148	 ldr         r2, [pc, #0x148]
  0069c	e59d3064	 ldr         r3, [sp, #0x64]
  006a0	e5832000	 str         r2, [r3]

; 232  :     const char* pBootMeName = (static_cast<char*>(OALArgsQuery(OAL_ARGS_QUERY_DEVID)));

  006a4	e3a00001	 mov         r0, #1
  006a8	eb000000	 bl          OALArgsQuery
  006ac	e58d0044	 str         r0, [sp, #0x44]
  006b0	e59d3044	 ldr         r3, [sp, #0x44]
  006b4	e58d3008	 str         r3, [sp, #8]

; 233  :     if(!pBootMeName)

  006b8	e59d3008	 ldr         r3, [sp, #8]
  006bc	e3530000	 cmp         r3, #0
  006c0	1a000005	 bne         |$LN6@GetBootMeN|

; 234  :     {
; 235  :         ErrorNotSupported(*spiName);

  006c4	e59d3064	 ldr         r3, [sp, #0x64]
  006c8	e5930000	 ldr         r0, [r3]
  006cc	eb000000	 bl          |?ErrorNotSupported@@YAXPBG@Z|

; 236  :         rc = FALSE;

  006d0	e3a03000	 mov         r3, #0
  006d4	e58d3004	 str         r3, [sp, #4]

; 237  :     }
; 238  :     else 

  006d8	ea00003a	 b           |$LN5@GetBootMeN|
  006dc		 |$LN6@GetBootMeN|

; 239  :     {
; 240  :         // Convert to Unicode so we know what size we're returning to the caller
; 241  :         // MultiByteToWideChar(...) etc. may not be available at this point
; 242  :         WCHAR pWBootMeName[OAL_KITL_ID_SIZE+1];
; 243  :         UINT32 i;
; 244  :         for(i = 0; (i < OAL_KITL_ID_SIZE) && (*pBootMeName != '\0'); i++)

  006dc	e3a03000	 mov         r3, #0
  006e0	e58d300c	 str         r3, [sp, #0xC]
  006e4	ea000002	 b           |$LN4@GetBootMeN|
  006e8		 |$LN3@GetBootMeN|
  006e8	e59d300c	 ldr         r3, [sp, #0xC]
  006ec	e2833001	 add         r3, r3, #1
  006f0	e58d300c	 str         r3, [sp, #0xC]
  006f4		 |$LN4@GetBootMeN|
  006f4	e59d300c	 ldr         r3, [sp, #0xC]
  006f8	e3530010	 cmp         r3, #0x10
  006fc	2a000011	 bcs         |$LN2@GetBootMeN|
  00700	e59d3008	 ldr         r3, [sp, #8]
  00704	e1d330d0	 ldrsb       r3, [r3]
  00708	e3530000	 cmp         r3, #0
  0070c	0a00000d	 beq         |$LN2@GetBootMeN|

; 245  :         {
; 246  :             pWBootMeName[i] = (*(pBootMeName++));

  00710	e59d3008	 ldr         r3, [sp, #8]
  00714	e1d330d0	 ldrsb       r3, [r3]
  00718	e1a00803	 mov         r0, r3, lsl #16
  0071c	e1a00820	 mov         r0, r0, lsr #16
  00720	e59d100c	 ldr         r1, [sp, #0xC]
  00724	e3a03002	 mov         r3, #2
  00728	e0020391	 mul         r2, r1, r3
  0072c	e28d3010	 add         r3, sp, #0x10
  00730	e0833002	 add         r3, r3, r2
  00734	e1c300b0	 strh        r0, [r3]
  00738	e59d3008	 ldr         r3, [sp, #8]
  0073c	e2833001	 add         r3, r3, #1
  00740	e58d3008	 str         r3, [sp, #8]

; 247  :         }

  00744	eaffffe7	 b           |$LN3@GetBootMeN|
  00748		 |$LN2@GetBootMeN|

; 248  :         pWBootMeName[i] = 0;

  00748	e59d100c	 ldr         r1, [sp, #0xC]
  0074c	e3a03002	 mov         r3, #2
  00750	e0020391	 mul         r2, r1, r3
  00754	e28d3010	 add         r3, sp, #0x10
  00758	e0832002	 add         r2, r3, r2
  0075c	e3a03000	 mov         r3, #0
  00760	e1c230b0	 strh        r3, [r2]

; 249  :         if(rc = (CheckBufferSize(pOutBuffer, outSize, pOutSize, (NKwcslen(pWBootMeName)+1)*sizeof(WCHAR), *spiName)))

  00764	e28d0010	 add         r0, sp, #0x10
  00768	eb000000	 bl          NKwcslen
  0076c	e58d0048	 str         r0, [sp, #0x48]
  00770	e59d3048	 ldr         r3, [sp, #0x48]
  00774	e2832001	 add         r2, r3, #1
  00778	e3a03002	 mov         r3, #2
  0077c	e0030392	 mul         r3, r2, r3
  00780	e58d3034	 str         r3, [sp, #0x34]
  00784	e59d3064	 ldr         r3, [sp, #0x64]
  00788	e5933000	 ldr         r3, [r3]
  0078c	e58d3000	 str         r3, [sp]
  00790	e28d3034	 add         r3, sp, #0x34
  00794	e59d2060	 ldr         r2, [sp, #0x60]
  00798	e28d105c	 add         r1, sp, #0x5C
  0079c	e59d0058	 ldr         r0, [sp, #0x58]
  007a0	eb000000	 bl          |?CheckBufferSize@@YAHPBXABIPAI1PBG@Z|
  007a4	e58d004c	 str         r0, [sp, #0x4C]
  007a8	e59d304c	 ldr         r3, [sp, #0x4C]
  007ac	e58d3004	 str         r3, [sp, #4]
  007b0	e59d3004	 ldr         r3, [sp, #4]
  007b4	e3530000	 cmp         r3, #0
  007b8	0a000002	 beq         |$LN1@GetBootMeN|

; 250  :         {
; 251  :             // Copy Unicode bootme name to caller's buffer
; 252  :             NKwcscpy((static_cast<WCHAR*>(pOutBuffer)), pWBootMeName);

  007bc	e28d1010	 add         r1, sp, #0x10
  007c0	e59d0058	 ldr         r0, [sp, #0x58]
  007c4	eb000000	 bl          NKwcscpy
  007c8		 |$LN1@GetBootMeN|
  007c8		 |$LN5@GetBootMeN|

; 253  :         }
; 254  :     }
; 255  :     return rc;

  007c8	e59d0038	 ldr         r0, [sp, #0x38]
  007cc	eb000000	 bl          __security_check_cookie
  007d0	e59d3004	 ldr         r3, [sp, #4]
  007d4	e58d3040	 str         r3, [sp, #0x40]

; 256  : }

  007d8	e59d0040	 ldr         r0, [sp, #0x40]
  007dc	e28dd050	 add         sp, sp, #0x50
  007e0	e89d6000	 ldmia       sp, {sp, lr}
  007e4	e12fff1e	 bx          lr
  007e8		 |$LN12@GetBootMeN|
  007e8		 |$LN13@GetBootMeN|
  007e8	00000000	 DCD         |??_C@_1CE@JLAPMINP@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAB?$AAO?$AAO?$AAT?$AAM?$AAE?$AAN?$AAA?$AAM?$AAE?$AA?$AA@|
  007ec		 |$LN14@GetBootMeN|
  007ec	00000000	 DCD         |__security_cookie|
  007f0		 |$M35744|

			 ENDP  ; |?GetBootMeName@@YAHPAXIPAIPAPBG@Z|, GetBootMeName

	EXPORT	|??_C@_1BI@MGABGHAL@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAU?$AAU?$AAI?$AAD?$AA?$AA@| [ DATA ] ; `string'

  00038			 AREA	 |.pdata|, PDATA
|$T35757| DCD	|$LN8@GetUUID|
	DCD	0x40003004

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@MGABGHAL@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAU?$AAU?$AAI?$AAD?$AA?$AA@| DCB "S"
	DCB	0x0, "P", 0x0, "I", 0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T"
	DCB	0x0, "U", 0x0, "U", 0x0, "I", 0x0, "D", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  007f0			 AREA	 |.text|, CODE, ARM

  007f0		 |?GetUUID@@YAHPAXIPAIPAPBG@Z| PROC	; GetUUID

; 260  : ) {

  007f0		 |$LN8@GetUUID|
  007f0	e1a0c00d	 mov         r12, sp
  007f4	e92d000f	 stmdb       sp!, {r0 - r3}
  007f8	e92d5000	 stmdb       sp!, {r12, lr}
  007fc	e24dd020	 sub         sp, sp, #0x20
  00800		 |$M35754|

; 261  :     BOOL rc;
; 262  :     (*spiName) = L"SPI_GETUUID";

  00800	e59f20a4	 ldr         r2, [pc, #0xA4]
  00804	e59d3034	 ldr         r3, [sp, #0x34]
  00808	e5832000	 str         r2, [r3]

; 263  : 
; 264  :     GUID *pUuid;
; 265  : 
; 266  :     // Does BSP specific UUID exist?
; 267  :     pUuid = static_cast<GUID*>(OALArgsQuery(OAL_ARGS_QUERY_UUID));

  0080c	e3a00003	 mov         r0, #3
  00810	eb000000	 bl          OALArgsQuery
  00814	e58d0018	 str         r0, [sp, #0x18]
  00818	e59d3018	 ldr         r3, [sp, #0x18]
  0081c	e58d3008	 str         r3, [sp, #8]

; 268  :     if (!pUuid)

  00820	e59d3008	 ldr         r3, [sp, #8]
  00824	e3530000	 cmp         r3, #0
  00828	1a000005	 bne         |$LN3@GetUUID|

; 269  :     {
; 270  :         ErrorNotSupported(*spiName);

  0082c	e59d3034	 ldr         r3, [sp, #0x34]
  00830	e5930000	 ldr         r0, [r3]
  00834	eb000000	 bl          |?ErrorNotSupported@@YAXPBG@Z|

; 271  :         rc = FALSE;

  00838	e3a03000	 mov         r3, #0
  0083c	e58d3004	 str         r3, [sp, #4]
  00840	ea000013	 b           |$LN2@GetUUID|
  00844		 |$LN3@GetUUID|

; 272  :     }
; 273  :     else if(rc = (CheckBufferSize(pOutBuffer, outSize, pOutSize, sizeof(GUID), *spiName)))

  00844	e3a03010	 mov         r3, #0x10
  00848	e58d300c	 str         r3, [sp, #0xC]
  0084c	e59d3034	 ldr         r3, [sp, #0x34]
  00850	e5933000	 ldr         r3, [r3]
  00854	e58d3000	 str         r3, [sp]
  00858	e28d300c	 add         r3, sp, #0xC
  0085c	e59d2030	 ldr         r2, [sp, #0x30]
  00860	e28d102c	 add         r1, sp, #0x2C
  00864	e59d0028	 ldr         r0, [sp, #0x28]
  00868	eb000000	 bl          |?CheckBufferSize@@YAHPBXABIPAI1PBG@Z|
  0086c	e58d001c	 str         r0, [sp, #0x1C]
  00870	e59d301c	 ldr         r3, [sp, #0x1C]
  00874	e58d3004	 str         r3, [sp, #4]
  00878	e59d3004	 ldr         r3, [sp, #4]
  0087c	e3530000	 cmp         r3, #0
  00880	0a000003	 beq         |$LN1@GetUUID|

; 274  :     {            
; 275  :         // Return the UUID in the caller's allocated space
; 276  :         memcpy(pOutBuffer, pUuid, sizeof(GUID));

  00884	e3a02010	 mov         r2, #0x10
  00888	e59d1008	 ldr         r1, [sp, #8]
  0088c	e59d0028	 ldr         r0, [sp, #0x28]
  00890	eb000000	 bl          memcpy
  00894		 |$LN1@GetUUID|
  00894		 |$LN2@GetUUID|

; 277  :     }
; 278  : 
; 279  :     return rc;

  00894	e59d3004	 ldr         r3, [sp, #4]
  00898	e58d3014	 str         r3, [sp, #0x14]

; 280  : }

  0089c	e59d0014	 ldr         r0, [sp, #0x14]
  008a0	e28dd020	 add         sp, sp, #0x20
  008a4	e89d6000	 ldmia       sp, {sp, lr}
  008a8	e12fff1e	 bx          lr
  008ac		 |$LN9@GetUUID|
  008ac		 |$LN10@GetUUID|
  008ac	00000000	 DCD         |??_C@_1BI@MGABGHAL@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAU?$AAU?$AAI?$AAD?$AA?$AA@|
  008b0		 |$M35755|

			 ENDP  ; |?GetUUID@@YAHPAXIPAIPAPBG@Z|, GetUUID

	EXPORT	|??_C@_1CG@IIMMCNFM@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAG?$AAU?$AAI?$AAD?$AAP?$AAA?$AAT?$AAT?$AAE?$AAR?$AAN?$AA?$AA@| [ DATA ] ; `string'

  00040			 AREA	 |.pdata|, PDATA
|$T35767| DCD	|$LN6@GetGUIDPat|
	DCD	0x40002504

  00000			 AREA	 |.rdata|, DATA, READONLY
|?guidPattern@?1??GetGUIDPattern@@YAHPAXIPAIPAPBG@Z@4U_GUID@@B| DCD 0x600cc7d0 ; `GetGUIDPattern'::`2'::guidPattern
	DCW	0xde3a
	DCW	0x4713
	DCB	0xa5
	DCB	0xb0
	DCB	0x56
	DCB	0xe
	DCB	0x6c
	DCB	0x36
	DCB	0x4e
	DCB	0xde

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@IIMMCNFM@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAG?$AAU?$AAI?$AAD?$AAP?$AAA?$AAT?$AAT?$AAE?$AAR?$AAN?$AA?$AA@| DCB "S"
	DCB	0x0, "P", 0x0, "I", 0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T"
	DCB	0x0, "G", 0x0, "U", 0x0, "I", 0x0, "D", 0x0, "P", 0x0, "A"
	DCB	0x0, "T", 0x0, "T", 0x0, "E", 0x0, "R", 0x0, "N", 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Odtp

  008b0			 AREA	 |.text|, CODE, ARM

  008b0		 |?GetGUIDPattern@@YAHPAXIPAIPAPBG@Z| PROC ; GetGUIDPattern

; 284  : ) {

  008b0		 |$LN6@GetGUIDPat|
  008b0	e1a0c00d	 mov         r12, sp
  008b4	e92d000f	 stmdb       sp!, {r0 - r3}
  008b8	e92d5000	 stmdb       sp!, {r12, lr}
  008bc	e24dd018	 sub         sp, sp, #0x18
  008c0		 |$M35764|

; 285  :     // common GUID pattern
; 286  :     static const GUID guidPattern = {0x600cc7d0, 0xde3a, 0x4713, {
; 287  :         0xa5, 0xb0, 0x56, 0xe, 0x6c, 0x36, 0x4e, 0xde
; 288  :     }};
; 289  : 
; 290  :     BOOL rc;
; 291  :     (*spiName) = L"SPI_GETGUIDPATTERN";

  008c0	e59f2078	 ldr         r2, [pc, #0x78]
  008c4	e59d302c	 ldr         r3, [sp, #0x2C]
  008c8	e5832000	 str         r2, [r3]

; 292  : 
; 293  :     if(rc = (CheckBufferSize(pOutBuffer, outSize, pOutSize, sizeof(guidPattern), *spiName)))

  008cc	e3a03010	 mov         r3, #0x10
  008d0	e58d3008	 str         r3, [sp, #8]
  008d4	e59d302c	 ldr         r3, [sp, #0x2C]
  008d8	e5933000	 ldr         r3, [r3]
  008dc	e58d3000	 str         r3, [sp]
  008e0	e28d3008	 add         r3, sp, #8
  008e4	e59d2028	 ldr         r2, [sp, #0x28]
  008e8	e28d1024	 add         r1, sp, #0x24
  008ec	e59d0020	 ldr         r0, [sp, #0x20]
  008f0	eb000000	 bl          |?CheckBufferSize@@YAHPBXABIPAI1PBG@Z|
  008f4	e58d0014	 str         r0, [sp, #0x14]
  008f8	e59d3014	 ldr         r3, [sp, #0x14]
  008fc	e58d3004	 str         r3, [sp, #4]
  00900	e59d3004	 ldr         r3, [sp, #4]
  00904	e3530000	 cmp         r3, #0
  00908	0a000005	 beq         |$LN1@GetGUIDPat|

; 294  :     {
; 295  :         memcpy(pOutBuffer, &guidPattern, sizeof(guidPattern));

  0090c	e3a02010	 mov         r2, #0x10
  00910	e59f1024	 ldr         r1, [pc, #0x24]
  00914	e59d0020	 ldr         r0, [sp, #0x20]
  00918	eb000000	 bl          memcpy

; 296  :         rc = TRUE;

  0091c	e3a03001	 mov         r3, #1
  00920	e58d3004	 str         r3, [sp, #4]
  00924		 |$LN1@GetGUIDPat|

; 297  :     }
; 298  :     return rc;

  00924	e59d3004	 ldr         r3, [sp, #4]
  00928	e58d3010	 str         r3, [sp, #0x10]

; 299  : }

  0092c	e59d0010	 ldr         r0, [sp, #0x10]
  00930	e28dd018	 add         sp, sp, #0x18
  00934	e89d6000	 ldmia       sp, {sp, lr}
  00938	e12fff1e	 bx          lr
  0093c		 |$LN7@GetGUIDPat|
  0093c		 |$LN8@GetGUIDPat|
  0093c	00000000	 DCD         |?guidPattern@?1??GetGUIDPattern@@YAHPAXIPAIPAPBG@Z@4U_GUID@@B|
  00940		 |$LN9@GetGUIDPat|
  00940	00000000	 DCD         |??_C@_1CG@IIMMCNFM@?$AAS?$AAP?$AAI?$AA_?$AAG?$AAE?$AAT?$AAG?$AAU?$AAI?$AAD?$AAP?$AAA?$AAT?$AAT?$AAE?$AAR?$AAN?$AA?$AA@|
  00944		 |$M35765|

			 ENDP  ; |?GetGUIDPattern@@YAHPAXIPAIPAPBG@Z|, GetGUIDPattern

	EXPORT	|??_C@_1GO@GEFDPJAG@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAi?$AAn?$AAf?$AAo?$AA?3?$AA?3@| [ DATA ] ; `string'
	EXPORT	|??_C@_1NG@HBFOMIME@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAi?$AAn?$AAf?$AAo?$AA?3@| [ DATA ] ; `string'

  00048			 AREA	 |.pdata|, PDATA
|$T35780| DCD	|$LN13@CheckBuffe|
	DCD	0x40004604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@GEFDPJAG@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAi?$AAn?$AAf?$AAo?$AA?3?$AA?3@| DCB "W"
	DCB	0x0, "A", 0x0, "R", 0x0, "N", 0x0, ":", 0x0, " ", 0x0, "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C", 0x0, "t"
	DCB	0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G", 0x0, "e"
	DCB	0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c"
	DCB	0x0, "e", 0x0, "i", 0x0, "n", 0x0, "f", 0x0, "o", 0x0, ":"
	DCB	0x0, ":", 0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "B"
	DCB	0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, "o", 0x0, " ", 0x0, "s", 0x0, "m"
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1NG@HBFOMIME@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAi?$AAn?$AAf?$AAo?$AA?3@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "i", 0x0, "n", 0x0, "f", 0x0, "o"
	DCB	0x0, ":", 0x0, ":", 0x0, "%", 0x0, "s", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "d", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a"
	DCB	0x0, "m", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, ":"
	DCB	0x0, " ", 0x0, "n", 0x0, "o", 0x0, "n", 0x0, "z", 0x0, "e"
	DCB	0x0, "r", 0x0, "o", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "s", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, " ", 0x0, "s", 0x0, "u", 0x0, "p"
	DCB	0x0, "p", 0x0, "l", 0x0, "i", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "w", 0x0, "i", 0x0, "t", 0x0, "h", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Odtp

  00944			 AREA	 |.text|, CODE, ARM

  00944		 |?CheckBufferSize@@YAHPBXABIPAI1PBG@Z| PROC ; CheckBufferSize

; 302  : ) {

  00944		 |$LN13@CheckBuffe|
  00944	e1a0c00d	 mov         r12, sp
  00948	e92d000f	 stmdb       sp!, {r0 - r3}
  0094c	e92d5000	 stmdb       sp!, {r12, lr}
  00950	e24dd00c	 sub         sp, sp, #0xC
  00954		 |$M35777|

; 303  :         // If the output buffer is an invalid pointer but the caller is giving us a nonzero size, something is very wrong
; 304  :         if (pOutBuffer == NULL && availableSize > 0)

  00954	e59d3014	 ldr         r3, [sp, #0x14]
  00958	e3530000	 cmp         r3, #0
  0095c	1a000014	 bne         |$LN4@CheckBuffe|
  00960	e59d3018	 ldr         r3, [sp, #0x18]
  00964	e5933000	 ldr         r3, [r3]
  00968	e3530000	 cmp         r3, #0
  0096c	9a000010	 bls         |$LN4@CheckBuffe|

; 305  :         {
; 306  :             NKSetLastError(ERROR_INVALID_PARAMETER);

  00970	e3a00057	 mov         r0, #0x57
  00974	eb000000	 bl          NKSetLastError

; 307  :             OALMSG(OAL_ERROR, ((
; 308  :                 L"ERROR: OALIoCtlHalGetDeviceinfo::%s: Invalid parameter: nonzero buffer size supplied with invalid buffer\r\n"), spiName));

  00978	e59f30d4	 ldr         r3, [pc, #0xD4]
  0097c	e5933440	 ldr         r3, [r3, #0x440]
  00980	e3130001	 tst         r3, #1
  00984	0a000005	 beq         |$LN7@CheckBuffe|
  00988	e59d1024	 ldr         r1, [sp, #0x24]
  0098c	e59f00c4	 ldr         r0, [pc, #0xC4]
  00990	eb000000	 bl          NKDbgPrintfW
  00994	e3a03001	 mov         r3, #1
  00998	e58d3004	 str         r3, [sp, #4]
  0099c	ea000001	 b           |$LN8@CheckBuffe|
  009a0		 |$LN7@CheckBuffe|
  009a0	e3a03000	 mov         r3, #0
  009a4	e58d3004	 str         r3, [sp, #4]
  009a8		 |$LN8@CheckBuffe|

; 309  :             return FALSE;

  009a8	e3a03000	 mov         r3, #0
  009ac	e58d3000	 str         r3, [sp]
  009b0	ea000022	 b           |$LN5@CheckBuffe|
  009b4		 |$LN4@CheckBuffe|

; 310  :         }
; 311  :         if (pRequiredSize != NULL)

  009b4	e59d301c	 ldr         r3, [sp, #0x1C]
  009b8	e3530000	 cmp         r3, #0
  009bc	0a000003	 beq         |$LN3@CheckBuffe|

; 312  :         {
; 313  :             // indicate to caller how much data we want to return
; 314  :             *pRequiredSize = requiredSize; 

  009c0	e59d3020	 ldr         r3, [sp, #0x20]
  009c4	e5932000	 ldr         r2, [r3]
  009c8	e59d301c	 ldr         r3, [sp, #0x1C]
  009cc	e5832000	 str         r2, [r3]
  009d0		 |$LN3@CheckBuffe|

; 315  :         }
; 316  :         // If there isn't an output buffer or it is too small, return false.
; 317  :         // At this point, if pRequiredSize is valid it has been filled in, so the
; 318  :         // caller can call the function again with a buffer of pRequiredSize and expect success.
; 319  :         if (pOutBuffer == NULL || availableSize < requiredSize)

  009d0	e59d3014	 ldr         r3, [sp, #0x14]
  009d4	e3530000	 cmp         r3, #0
  009d8	0a000005	 beq         |$LN1@CheckBuffe|
  009dc	e59d3018	 ldr         r3, [sp, #0x18]
  009e0	e5932000	 ldr         r2, [r3]
  009e4	e59d3020	 ldr         r3, [sp, #0x20]
  009e8	e5933000	 ldr         r3, [r3]
  009ec	e1520003	 cmp         r2, r3
  009f0	2a000010	 bcs         |$LN2@CheckBuffe|
  009f4		 |$LN1@CheckBuffe|

; 320  :         {
; 321  :             NKSetLastError(ERROR_INSUFFICIENT_BUFFER);

  009f4	e3a0007a	 mov         r0, #0x7A
  009f8	eb000000	 bl          NKSetLastError

; 322  :             OALMSG(OAL_WARN, ((
; 323  :                 L"WARN: OALIoCtlHalGetDeviceinfo::%s: Buffer too small\r\n"), spiName));

  009fc	e59f3050	 ldr         r3, [pc, #0x50]
  00a00	e5933440	 ldr         r3, [r3, #0x440]
  00a04	e3130002	 tst         r3, #2
  00a08	0a000005	 beq         |$LN9@CheckBuffe|
  00a0c	e59d1024	 ldr         r1, [sp, #0x24]
  00a10	e59f0038	 ldr         r0, [pc, #0x38]
  00a14	eb000000	 bl          NKDbgPrintfW
  00a18	e3a03001	 mov         r3, #1
  00a1c	e58d3008	 str         r3, [sp, #8]
  00a20	ea000001	 b           |$LN10@CheckBuffe|
  00a24		 |$LN9@CheckBuffe|
  00a24	e3a03000	 mov         r3, #0
  00a28	e58d3008	 str         r3, [sp, #8]
  00a2c		 |$LN10@CheckBuffe|

; 324  :             return FALSE;

  00a2c	e3a03000	 mov         r3, #0
  00a30	e58d3000	 str         r3, [sp]
  00a34	ea000001	 b           |$LN5@CheckBuffe|
  00a38		 |$LN2@CheckBuffe|

; 325  :         }
; 326  :     // if we made it here then we have sufficient buffer space
; 327  :     return TRUE;

  00a38	e3a03001	 mov         r3, #1
  00a3c	e58d3000	 str         r3, [sp]
  00a40		 |$LN5@CheckBuffe|

; 328  : }

  00a40	e59d0000	 ldr         r0, [sp]
  00a44	e28dd00c	 add         sp, sp, #0xC
  00a48	e89d6000	 ldmia       sp, {sp, lr}
  00a4c	e12fff1e	 bx          lr
  00a50		 |$LN14@CheckBuffe|
  00a50		 |$LN15@CheckBuffe|
  00a50	00000000	 DCD         |??_C@_1GO@GEFDPJAG@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAi?$AAn?$AAf?$AAo?$AA?3?$AA?3@|
  00a54		 |$LN16@CheckBuffe|
  00a54	00000000	 DCD         |dpCurSettings|
  00a58		 |$LN17@CheckBuffe|
  00a58	00000000	 DCD         |??_C@_1NG@HBFOMIME@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAi?$AAn?$AAf?$AAo?$AA?3@|
  00a5c		 |$M35778|

			 ENDP  ; |?CheckBufferSize@@YAHPBXABIPAI1PBG@Z|, CheckBufferSize

	EXPORT	|??_C@_1LA@BNOICHNN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3@| [ DATA ] ; `string'

  00050			 AREA	 |.pdata|, PDATA
|$T35791| DCD	|$LN7@ErrorNotSu|
	DCD	0x40001704

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LA@BNOICHNN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "I", 0x0, "n", 0x0, "f", 0x0, "o"
	DCB	0x0, ":", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, " ", 0x0, "d", 0x0, "o", 0x0, "e"
	DCB	0x0, "s", 0x0, "n", 0x0, "'", 0x0, "t", 0x0, " ", 0x0, "s"
	DCB	0x0, "u", 0x0, "p", 0x0, "p", 0x0, "o", 0x0, "r", 0x0, "t"
	DCB	0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L"
	DCB	0x0, "_", 0x0, "H", 0x0, "A", 0x0, "L", 0x0, "_", 0x0, "G"
	DCB	0x0, "E", 0x0, "T", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V"
	DCB	0x0, "I", 0x0, "C", 0x0, "E", 0x0, "_", 0x0, "I", 0x0, "N"
	DCB	0x0, "F", 0x0, "O", 0x0, ":", 0x0, ":", 0x0, "%", 0x0, "s"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  00a5c			 AREA	 |.text|, CODE, ARM

  00a5c		 |?ErrorNotSupported@@YAXPBG@Z| PROC	; ErrorNotSupported

; 332  : ) {

  00a5c		 |$LN7@ErrorNotSu|
  00a5c	e1a0c00d	 mov         r12, sp
  00a60	e92d0001	 stmdb       sp!, {r0}
  00a64	e92d5000	 stmdb       sp!, {r12, lr}
  00a68	e24dd004	 sub         sp, sp, #4
  00a6c		 |$M35788|

; 333  :     NKSetLastError(ERROR_NOT_SUPPORTED);

  00a6c	e3a00032	 mov         r0, #0x32
  00a70	eb000000	 bl          NKSetLastError

; 334  :     OALMSG(OAL_ERROR, 
; 335  :     ((L"ERROR: OALIoCtlHalGetDeviceInfo: Device doesn't support IOCTL_HAL_GET_DEVICE_INFO::%s\r\n"), spiName)
; 336  :     );

  00a74	e59f3038	 ldr         r3, [pc, #0x38]
  00a78	e5933440	 ldr         r3, [r3, #0x440]
  00a7c	e3130001	 tst         r3, #1
  00a80	0a000005	 beq         |$LN3@ErrorNotSu|
  00a84	e59d100c	 ldr         r1, [sp, #0xC]
  00a88	e59f0020	 ldr         r0, [pc, #0x20]
  00a8c	eb000000	 bl          NKDbgPrintfW
  00a90	e3a03001	 mov         r3, #1
  00a94	e58d3000	 str         r3, [sp]
  00a98	ea000001	 b           |$LN4@ErrorNotSu|
  00a9c		 |$LN3@ErrorNotSu|
  00a9c	e3a03000	 mov         r3, #0
  00aa0	e58d3000	 str         r3, [sp]
  00aa4		 |$LN4@ErrorNotSu|

; 337  : }

  00aa4	e28dd004	 add         sp, sp, #4
  00aa8	e89d6000	 ldmia       sp, {sp, lr}
  00aac	e12fff1e	 bx          lr
  00ab0		 |$LN8@ErrorNotSu|
  00ab0		 |$LN9@ErrorNotSu|
  00ab0	00000000	 DCD         |??_C@_1LA@BNOICHNN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?3@|
  00ab4		 |$LN10@ErrorNotSu|
  00ab4	00000000	 DCD         |dpCurSettings|
  00ab8		 |$M35789|

			 ENDP  ; |?ErrorNotSupported@@YAXPBG@Z|, ErrorNotSupported

	END
