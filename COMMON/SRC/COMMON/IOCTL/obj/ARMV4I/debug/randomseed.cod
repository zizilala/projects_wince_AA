; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\COMMON\IOCTL\randomseed.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|??_C@_1EK@CIONDGAI@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAR?$AAa?$AAn?$AAd?$AAo?$AAm?$AAS?$AAe?$AAe?$AAd?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GI@DGLGODAM@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAR?$AAa?$AAn?$AAd?$AAo?$AAm?$AAS?$AAe?$AAe?$AAd?$AA?3?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@KGKJCIAM@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAc?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAR?$AAa?$AAn?$AAd?$AAo?$AAm?$AAS?$AAe?$AAe?$AAd?$AA?$CI?$AA?4?$AA?4?$AA?4?$AA?$CJ?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|OALIoCtlHalGetRandomSeed|
	IMPORT	|memset|
	IMPORT	|OEMGetRealTime|
	IMPORT	|memcpy|
	IMPORT	|g_pOemGlobal|
	IMPORT	|NKSetLastError|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|
	IMPORT	|__security_cookie|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_check_cookie|

  00000			 AREA	 |.pdata|, PDATA
|$T43156| DCD	|$LN28@OALIoCtlHa|
	DCD	0xc000ce04
; File c:\wince600\platform\common\src\common\ioctl\randomseed.c

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@CIONDGAI@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAR?$AAa?$AAn?$AAd?$AAo?$AAm?$AAS?$AAe?$AAe?$AAd?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "R", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "o", 0x0, "m", 0x0, "S", 0x0, "e", 0x0, "e", 0x0, "d"
	DCB	0x0, "(", 0x0, "r", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@DGLGODAM@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAR?$AAa?$AAn?$AAd?$AAo?$AAm?$AAS?$AAe?$AAe?$AAd?$AA?3?$AA?5@| DCB "W"
	DCB	0x0, "A", 0x0, "R", 0x0, "N", 0x0, ":", 0x0, " ", 0x0, "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C", 0x0, "t"
	DCB	0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G", 0x0, "e"
	DCB	0x0, "t", 0x0, "R", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "o"
	DCB	0x0, "m", 0x0, "S", 0x0, "e", 0x0, "e", 0x0, "d", 0x0, ":"
	DCB	0x0, " ", 0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l"
	DCB	0x0, "i", 0x0, "d", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r"
	DCB	0x0, "a", 0x0, "m", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@KGKJCIAM@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAc?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAR?$AAa?$AAn?$AAd?$AAo?$AAm?$AAS?$AAe?$AAe?$AAd?$AA?$CI?$AA?4?$AA?4?$AA?4?$AA?$CJ?$AA?$AN?$AA?6@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "c"
	DCB	0x0, "t", 0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "R", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "o", 0x0, "m", 0x0, "S", 0x0, "e", 0x0, "e", 0x0, "d"
	DCB	0x0, "(", 0x0, ".", 0x0, ".", 0x0, ".", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.xdata|, DATA
|$T43152| DCD	0xffffffcc
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T43152|

  00008		 |OALIoCtlHalGetRandomSeed| PROC

; 33   : {

  00008		 |$LN28@OALIoCtlHa|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d000f	 stmdb       sp!, {r0 - r3}
  00010	e92d5000	 stmdb       sp!, {r12, lr}
  00014	e24dd064	 sub         sp, sp, #0x64
  00018		 |$M43153|
  00018	e59f331c	 ldr         r3, [pc, #0x31C]
  0001c	e5933000	 ldr         r3, [r3]
  00020	e58d3048	 str         r3, [sp, #0x48]

; 34   :     BOOL rc = FALSE;

  00024	e3a03000	 mov         r3, #0
  00028	e58d3000	 str         r3, [sp]

; 35   :     LARGE_INTEGER perfCounterEntropy;
; 36   :     SYSTEMTIME systemTimeEntropy;
; 37   : 
; 38   :     UINT32 maxAllowedRequest = 1024;

  0002c	e3a03b01	 mov         r3, #1, 22
  00030	e58d3004	 str         r3, [sp, #4]

; 39   : 
; 40   :     OALMSG(OAL_IOCTL&&OAL_FUNC, (L"+OALIoctlHalGetRandomSeed(...)\r\n"));

  00034	e59f32f0	 ldr         r3, [pc, #0x2F0]
  00038	e5933440	 ldr         r3, [r3, #0x440]
  0003c	e3130a01	 tst         r3, #1, 20
  00040	0a000008	 beq         |$LN20@OALIoCtlHa|
  00044	e59f32e0	 ldr         r3, [pc, #0x2E0]
  00048	e5933440	 ldr         r3, [r3, #0x440]
  0004c	e3130004	 tst         r3, #4
  00050	0a000004	 beq         |$LN20@OALIoCtlHa|
  00054	e59f02dc	 ldr         r0, [pc, #0x2DC]
  00058	eb000000	 bl          NKDbgPrintfW
  0005c	e3a03001	 mov         r3, #1
  00060	e58d3050	 str         r3, [sp, #0x50]
  00064	ea000001	 b           |$LN21@OALIoCtlHa|
  00068		 |$LN20@OALIoCtlHa|
  00068	e3a03000	 mov         r3, #0
  0006c	e58d3050	 str         r3, [sp, #0x50]
  00070		 |$LN21@OALIoCtlHa|

; 41   :     if (lpOutBuf == NULL || nOutBufSize > maxAllowedRequest)

  00070	e59d3078	 ldr         r3, [sp, #0x78]
  00074	e3530000	 cmp         r3, #0
  00078	0a000003	 beq         |$LN16@OALIoCtlHa|
  0007c	e59d207c	 ldr         r2, [sp, #0x7C]
  00080	e59d3004	 ldr         r3, [sp, #4]
  00084	e1520003	 cmp         r2, r3
  00088	9a00000d	 bls         |$LN17@OALIoCtlHa|
  0008c		 |$LN16@OALIoCtlHa|

; 42   :     {
; 43   :         NKSetLastError(ERROR_INVALID_PARAMETER);

  0008c	e3a00057	 mov         r0, #0x57
  00090	eb000000	 bl          NKSetLastError

; 44   :         OALMSG(OAL_WARN, (L"WARN: OALIoCtlHalGetRandomSeed: Invalid parameter\r\n"));

  00094	e59f3290	 ldr         r3, [pc, #0x290]
  00098	e5933440	 ldr         r3, [r3, #0x440]
  0009c	e3130002	 tst         r3, #2
  000a0	0a000004	 beq         |$LN22@OALIoCtlHa|
  000a4	e59f0288	 ldr         r0, [pc, #0x288]
  000a8	eb000000	 bl          NKDbgPrintfW
  000ac	e3a03001	 mov         r3, #1
  000b0	e58d3054	 str         r3, [sp, #0x54]
  000b4	ea000001	 b           |$LN23@OALIoCtlHa|
  000b8		 |$LN22@OALIoCtlHa|
  000b8	e3a03000	 mov         r3, #0
  000bc	e58d3054	 str         r3, [sp, #0x54]
  000c0		 |$LN23@OALIoCtlHa|

; 45   :         goto cleanUp;

  000c0	ea000080	 b           |$cleanUp$43103|
  000c4		 |$LN17@OALIoCtlHa|

; 46   :     }
; 47   : 
; 48   :     if(!pQueryPerformanceCounter)

  000c4	e59f3264	 ldr         r3, [pc, #0x264]
  000c8	e5933000	 ldr         r3, [r3]
  000cc	e2833030	 add         r3, r3, #0x30
  000d0	e5933000	 ldr         r3, [r3]
  000d4	e3530000	 cmp         r3, #0
  000d8	1a000008	 bne         |$LN15@OALIoCtlHa|

; 49   :     {   
; 50   :         //function pointer invalid - platform doesn't have a valid performance counter
; 51   :         if(lpBytesReturned)

  000dc	e59d3080	 ldr         r3, [sp, #0x80]
  000e0	e3530000	 cmp         r3, #0
  000e4	0a000002	 beq         |$LN14@OALIoCtlHa|

; 52   :         {
; 53   :             *lpBytesReturned = 0;

  000e8	e59d2080	 ldr         r2, [sp, #0x80]
  000ec	e3a03000	 mov         r3, #0
  000f0	e5823000	 str         r3, [r2]
  000f4		 |$LN14@OALIoCtlHa|

; 54   :         }
; 55   :         NKSetLastError(ERROR_NOT_SUPPORTED);

  000f4	e3a00032	 mov         r0, #0x32
  000f8	eb000000	 bl          NKSetLastError

; 56   :         goto cleanUp;

  000fc	ea000071	 b           |$cleanUp$43103|
  00100		 |$LN15@OALIoCtlHa|

; 57   :     }
; 58   : 
; 59   :     if(pQueryPerformanceCounter(&perfCounterEntropy))

  00100	e28d0008	 add         r0, sp, #8
  00104	e59f3224	 ldr         r3, [pc, #0x224]
  00108	e5933000	 ldr         r3, [r3]
  0010c	e2833030	 add         r3, r3, #0x30
  00110	e5933000	 ldr         r3, [r3]
  00114	e1a0e00f	 mov         lr, pc
  00118	e12fff13	 bx          r3
  0011c	e58d0058	 str         r0, [sp, #0x58]
  00120	e59d3058	 ldr         r3, [sp, #0x58]
  00124	e3530000	 cmp         r3, #0
  00128	0a00005a	 beq         |$LN13@OALIoCtlHa|

; 60   :     {
; 61   :         //generated random number successfully
; 62   :         BYTE entropyBuffer[sizeof(perfCounterEntropy)+sizeof(systemTimeEntropy)];
; 63   :         UINT32 numBytesToFill; //we only have a small amount of random data, so don't fill up more than that amount
; 64   :         UINT32 fillBufferSize = sizeof(perfCounterEntropy); //how many bytes of random data we have available to us

  0012c	e3a03008	 mov         r3, #8
  00130	e58d3020	 str         r3, [sp, #0x20]

; 65   : 
; 66   :         memcpy(entropyBuffer,&perfCounterEntropy,sizeof(perfCounterEntropy)); //copy performance counter data into the buffer

  00134	e3a02008	 mov         r2, #8
  00138	e28d1008	 add         r1, sp, #8
  0013c	e28d0028	 add         r0, sp, #0x28
  00140	eb000000	 bl          memcpy

; 67   : 
; 68   :         if(OEMGetRealTime(&systemTimeEntropy))

  00144	e28d0010	 add         r0, sp, #0x10
  00148	eb000000	 bl          OEMGetRealTime
  0014c	e58d005c	 str         r0, [sp, #0x5C]
  00150	e59d305c	 ldr         r3, [sp, #0x5C]
  00154	e3530000	 cmp         r3, #0
  00158	0a000008	 beq         |$LN12@OALIoCtlHa|

; 69   :         {
; 70   :             fillBufferSize += sizeof(systemTimeEntropy); //real-time clock can provide additional random data

  0015c	e59d3020	 ldr         r3, [sp, #0x20]
  00160	e2833010	 add         r3, r3, #0x10
  00164	e58d3020	 str         r3, [sp, #0x20]

; 71   :             memcpy(((BYTE*)entropyBuffer)+sizeof(perfCounterEntropy),&systemTimeEntropy,fillBufferSize - sizeof(perfCounterEntropy)); //copy systemtime data (if we have it) into the buffer

  00168	e59d3020	 ldr         r3, [sp, #0x20]
  0016c	e2432008	 sub         r2, r3, #8
  00170	e28d1010	 add         r1, sp, #0x10
  00174	e28d3028	 add         r3, sp, #0x28
  00178	e2830008	 add         r0, r3, #8
  0017c	eb000000	 bl          memcpy
  00180		 |$LN12@OALIoCtlHa|

; 72   :         }
; 73   : 
; 74   :         if(nOutBufSize < fillBufferSize)

  00180	e59d207c	 ldr         r2, [sp, #0x7C]
  00184	e59d3020	 ldr         r3, [sp, #0x20]
  00188	e1520003	 cmp         r2, r3
  0018c	2a000028	 bcs         |$LN11@OALIoCtlHa|

; 75   :         {
; 76   :             UINT32 xorLoopCounter;
; 77   :             UINT32 entropyBufferPos = 0;

  00190	e3a03000	 mov         r3, #0
  00194	e58d3044	 str         r3, [sp, #0x44]

; 78   :             numBytesToFill = nOutBufSize; //the caller may want less random data than have to give, so use XOR to distribute leftover randomness

  00198	e59d307c	 ldr         r3, [sp, #0x7C]
  0019c	e58d3024	 str         r3, [sp, #0x24]

; 79   :             for(xorLoopCounter = numBytesToFill; xorLoopCounter < fillBufferSize; xorLoopCounter++)

  001a0	e59d3024	 ldr         r3, [sp, #0x24]
  001a4	e58d3040	 str         r3, [sp, #0x40]
  001a8	ea000002	 b           |$LN10@OALIoCtlHa|
  001ac		 |$LN9@OALIoCtlHa|
  001ac	e59d3040	 ldr         r3, [sp, #0x40]
  001b0	e2833001	 add         r3, r3, #1
  001b4	e58d3040	 str         r3, [sp, #0x40]
  001b8		 |$LN10@OALIoCtlHa|
  001b8	e59d2040	 ldr         r2, [sp, #0x40]
  001bc	e59d3020	 ldr         r3, [sp, #0x20]
  001c0	e1520003	 cmp         r2, r3
  001c4	2a000019	 bcs         |$LN8@OALIoCtlHa|

; 80   :             {
; 81   :                 //XOR leftover random bytes to pack all of our randomness into the amount of bytes requested
; 82   :                 entropyBuffer[entropyBufferPos] = (entropyBuffer[entropyBufferPos] ^ entropyBuffer[xorLoopCounter]);

  001c8	e28d2028	 add         r2, sp, #0x28
  001cc	e59d3044	 ldr         r3, [sp, #0x44]
  001d0	e0823003	 add         r3, r2, r3
  001d4	e5d33000	 ldrb        r3, [r3]
  001d8	e1a01003	 mov         r1, r3
  001dc	e28d2028	 add         r2, sp, #0x28
  001e0	e59d3040	 ldr         r3, [sp, #0x40]
  001e4	e0823003	 add         r3, r2, r3
  001e8	e5d33000	 ldrb        r3, [r3]
  001ec	e0211003	 eor         r1, r1, r3
  001f0	e28d2028	 add         r2, sp, #0x28
  001f4	e59d3044	 ldr         r3, [sp, #0x44]
  001f8	e0822003	 add         r2, r2, r3
  001fc	e20130ff	 and         r3, r1, #0xFF
  00200	e5c23000	 strb        r3, [r2]

; 83   :                 if(entropyBufferPos >= nOutBufSize)

  00204	e59d2044	 ldr         r2, [sp, #0x44]
  00208	e59d307c	 ldr         r3, [sp, #0x7C]
  0020c	e1520003	 cmp         r2, r3
  00210	3a000002	 bcc         |$LN7@OALIoCtlHa|

; 84   :                 {
; 85   :                    entropyBufferPos = 0;  //wrap back around to the beginning

  00214	e3a03000	 mov         r3, #0
  00218	e58d3044	 str         r3, [sp, #0x44]

; 86   :                 }
; 87   :                 else

  0021c	ea000002	 b           |$LN6@OALIoCtlHa|
  00220		 |$LN7@OALIoCtlHa|

; 88   :                 {
; 89   :                     entropyBufferPos++;

  00220	e59d3044	 ldr         r3, [sp, #0x44]
  00224	e2833001	 add         r3, r3, #1
  00228	e58d3044	 str         r3, [sp, #0x44]
  0022c		 |$LN6@OALIoCtlHa|

; 90   :                 }
; 91   :             }

  0022c	eaffffde	 b           |$LN9@OALIoCtlHa|
  00230		 |$LN8@OALIoCtlHa|

; 92   :         }
; 93   :         else

  00230	ea000001	 b           |$LN5@OALIoCtlHa|
  00234		 |$LN11@OALIoCtlHa|

; 94   :         {
; 95   :             numBytesToFill = fillBufferSize; //the caller may want equal or more random data than we have to give, fill as much as we've got

  00234	e59d3020	 ldr         r3, [sp, #0x20]
  00238	e58d3024	 str         r3, [sp, #0x24]
  0023c		 |$LN5@OALIoCtlHa|

; 96   :         }
; 97   : 
; 98   :         memcpy(lpOutBuf,entropyBuffer,(numBytesToFill)); //copy the amount of data that we have into the caller's buffer

  0023c	e59d2024	 ldr         r2, [sp, #0x24]
  00240	e28d1028	 add         r1, sp, #0x28
  00244	e59d0078	 ldr         r0, [sp, #0x78]
  00248	eb000000	 bl          memcpy

; 99   : 
; 100  :         if(nOutBufSize > numBytesToFill)

  0024c	e59d207c	 ldr         r2, [sp, #0x7C]
  00250	e59d3024	 ldr         r3, [sp, #0x24]
  00254	e1520003	 cmp         r2, r3
  00258	9a000007	 bls         |$LN4@OALIoCtlHa|

; 101  :         {
; 102  :             memset((void*)(((BYTE*)lpOutBuf)+((numBytesToFill))),0,nOutBufSize-numBytesToFill); //if the caller asked for more than we had, zero the remainder

  0025c	e59d207c	 ldr         r2, [sp, #0x7C]
  00260	e59d3024	 ldr         r3, [sp, #0x24]
  00264	e0422003	 sub         r2, r2, r3
  00268	e3a01000	 mov         r1, #0
  0026c	e59d0078	 ldr         r0, [sp, #0x78]
  00270	e59d3024	 ldr         r3, [sp, #0x24]
  00274	e0800003	 add         r0, r0, r3
  00278	eb000000	 bl          memset
  0027c		 |$LN4@OALIoCtlHa|

; 103  :         }
; 104  : 
; 105  :         if(lpBytesReturned)

  0027c	e59d3080	 ldr         r3, [sp, #0x80]
  00280	e3530000	 cmp         r3, #0
  00284	0a000002	 beq         |$LN3@OALIoCtlHa|

; 106  :         {
; 107  :             *lpBytesReturned = numBytesToFill;

  00288	e59d2024	 ldr         r2, [sp, #0x24]
  0028c	e59d3080	 ldr         r3, [sp, #0x80]
  00290	e5832000	 str         r2, [r3]
  00294		 |$LN3@OALIoCtlHa|

; 108  :         }
; 109  :     }
; 110  :     else

  00294	ea000009	 b           |$LN2@OALIoCtlHa|
  00298		 |$LN13@OALIoCtlHa|

; 111  :     { 
; 112  :         //failed on generating random number
; 113  :         if(lpBytesReturned)

  00298	e59d3080	 ldr         r3, [sp, #0x80]
  0029c	e3530000	 cmp         r3, #0
  002a0	0a000002	 beq         |$LN1@OALIoCtlHa|

; 114  :         {
; 115  :             *lpBytesReturned = 0;

  002a4	e59d2080	 ldr         r2, [sp, #0x80]
  002a8	e3a03000	 mov         r3, #0
  002ac	e5823000	 str         r3, [r2]
  002b0		 |$LN1@OALIoCtlHa|

; 116  :         }
; 117  :         NKSetLastError(ERROR_PROCESS_ABORTED);

  002b0	e3a00b01	 mov         r0, #1, 22
  002b4	e380002b	 orr         r0, r0, #0x2B
  002b8	eb000000	 bl          NKSetLastError

; 118  :         goto cleanUp;

  002bc	ea000001	 b           |$cleanUp$43103|
  002c0		 |$LN2@OALIoCtlHa|

; 119  :     }
; 120  :     
; 121  :     // We are done
; 122  :     rc = TRUE;

  002c0	e3a03001	 mov         r3, #1
  002c4	e58d3000	 str         r3, [sp]
  002c8		 |$cleanUp$43103|

; 123  :     
; 124  : cleanUp:
; 125  :     // Indicate status
; 126  :     OALMSG(OAL_IOCTL&&OAL_FUNC, (L"-OALIoCtlHalGetRandomSeed(rc = %d)\r\n", rc));

  002c8	e59f305c	 ldr         r3, [pc, #0x5C]
  002cc	e5933440	 ldr         r3, [r3, #0x440]
  002d0	e3130a01	 tst         r3, #1, 20
  002d4	0a000009	 beq         |$LN24@OALIoCtlHa|
  002d8	e59f304c	 ldr         r3, [pc, #0x4C]
  002dc	e5933440	 ldr         r3, [r3, #0x440]
  002e0	e3130004	 tst         r3, #4
  002e4	0a000005	 beq         |$LN24@OALIoCtlHa|
  002e8	e59d1000	 ldr         r1, [sp]
  002ec	e59f0034	 ldr         r0, [pc, #0x34]
  002f0	eb000000	 bl          NKDbgPrintfW
  002f4	e3a03001	 mov         r3, #1
  002f8	e58d3060	 str         r3, [sp, #0x60]
  002fc	ea000001	 b           |$LN25@OALIoCtlHa|
  00300		 |$LN24@OALIoCtlHa|
  00300	e3a03000	 mov         r3, #0
  00304	e58d3060	 str         r3, [sp, #0x60]
  00308		 |$LN25@OALIoCtlHa|

; 127  :     return rc;

  00308	e59d0048	 ldr         r0, [sp, #0x48]
  0030c	eb000000	 bl          __security_check_cookie
  00310	e59d3000	 ldr         r3, [sp]
  00314	e58d304c	 str         r3, [sp, #0x4C]

; 128  : }

  00318	e59d004c	 ldr         r0, [sp, #0x4C]
  0031c	e28dd064	 add         sp, sp, #0x64
  00320	e89d6000	 ldmia       sp, {sp, lr}
  00324	e12fff1e	 bx          lr
  00328		 |$LN29@OALIoCtlHa|
  00328		 |$LN30@OALIoCtlHa|
  00328	00000000	 DCD         |??_C@_1EK@CIONDGAI@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAR?$AAa?$AAn?$AAd?$AAo?$AAm?$AAS?$AAe?$AAe?$AAd?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF@|
  0032c		 |$LN31@OALIoCtlHa|
  0032c	00000000	 DCD         |dpCurSettings|
  00330		 |$LN32@OALIoCtlHa|
  00330	00000000	 DCD         |g_pOemGlobal|
  00334		 |$LN33@OALIoCtlHa|
  00334	00000000	 DCD         |??_C@_1GI@DGLGODAM@?$AAW?$AAA?$AAR?$AAN?$AA?3?$AA?5?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAR?$AAa?$AAn?$AAd?$AAo?$AAm?$AAS?$AAe?$AAe?$AAd?$AA?3?$AA?5@|
  00338		 |$LN34@OALIoCtlHa|
  00338	00000000	 DCD         |??_C@_1EC@KGKJCIAM@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAc?$AAt?$AAl?$AAH?$AAa?$AAl?$AAG?$AAe?$AAt?$AAR?$AAa?$AAn?$AAd?$AAo?$AAm?$AAS?$AAe?$AAe?$AAd?$AA?$CI?$AA?4?$AA?4?$AA?4?$AA?$CJ?$AA?$AN?$AA?6@|
  0033c		 |$LN35@OALIoCtlHa|
  0033c	00000000	 DCD         |__security_cookie|
  00340		 |$M43154|

			 ENDP  ; |OALIoCtlHalGetRandomSeed|

	END
