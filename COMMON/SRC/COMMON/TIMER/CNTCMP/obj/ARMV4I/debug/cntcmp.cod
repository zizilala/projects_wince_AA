; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\COMMON\TIMER\CNTCMP\cntcmp.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|OALTimerInitCount|
	IMPORT	|OALTimerSetCompare|
	IMPORT	|OALTimerGetCount|

  00000			 AREA	 |.bss|, NOINIT
|g_timer| %	0x8

  00000			 AREA	 |.pdata|, PDATA
|$T39027| DCD	|$LN5@OALTimerIn|
	DCD	0x40001604
; Function compile flags: /Odtp
; File c:\wince600\platform\common\src\common\timer\cntcmp\cntcmp.c

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALTimerInitCount| PROC

; 45   : {

  00000		 |$LN5@OALTimerIn|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M39024|

; 46   :     g_timer.base = OALTimerGetCount();

  00010	eb000000	 bl          OALTimerGetCount
  00014	e58d0000	 str         r0, [sp]
  00018	e59d2000	 ldr         r2, [sp]
  0001c	e59f3030	 ldr         r3, [pc, #0x30]
  00020	e5832000	 str         r2, [r3]

; 47   :     g_timer.compare = g_timer.base + period;

  00024	e59f3028	 ldr         r3, [pc, #0x28]
  00028	e5932000	 ldr         r2, [r3]
  0002c	e59d300c	 ldr         r3, [sp, #0xC]
  00030	e0822003	 add         r2, r2, r3
  00034	e59f3018	 ldr         r3, [pc, #0x18]
  00038	e5832004	 str         r2, [r3, #4]

; 48   :     OALTimerSetCompare(g_timer.compare); 

  0003c	e59f3010	 ldr         r3, [pc, #0x10]
  00040	e5930004	 ldr         r0, [r3, #4]
  00044	eb000000	 bl          OALTimerSetCompare

; 49   : }

  00048	e28dd004	 add         sp, sp, #4
  0004c	e89d6000	 ldmia       sp, {sp, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$LN6@OALTimerIn|
  00054		 |$LN7@OALTimerIn|
  00054	00000000	 DCD         |g_timer|
  00058		 |$M39025|

			 ENDP  ; |OALTimerInitCount|

	EXPORT	|OALTimerRecharge|
	IMPORT	|OALTimerGetCompare|

  00008			 AREA	 |.pdata|, PDATA
|$T39034| DCD	|$LN7@OALTimerRe|
	DCD	0x40002b04
; Function compile flags: /Odtp

  00058			 AREA	 |.text|, CODE, ARM

  00058		 |OALTimerRecharge| PROC

; 62   : {

  00058		 |$LN7@OALTimerRe|
  00058	e1a0c00d	 mov         r12, sp
  0005c	e92d0003	 stmdb       sp!, {r0, r1}
  00060	e92d5000	 stmdb       sp!, {r12, lr}
  00064	e24dd00c	 sub         sp, sp, #0xC
  00068		 |$M39031|

; 63   :     UINT32 count;
; 64   : 
; 65   :     count = OALTimerGetCount();

  00068	eb000000	 bl          OALTimerGetCount
  0006c	e58d0004	 str         r0, [sp, #4]
  00070	e59d3004	 ldr         r3, [sp, #4]
  00074	e58d3000	 str         r3, [sp]

; 66   :     // Check if recharge was called in required margin
; 67   :     if ((INT32)(count - OALTimerGetCompare() - margin) < 0) {

  00078	eb000000	 bl          OALTimerGetCompare
  0007c	e58d0008	 str         r0, [sp, #8]
  00080	e59d2000	 ldr         r2, [sp]
  00084	e59d3008	 ldr         r3, [sp, #8]
  00088	e0422003	 sub         r2, r2, r3
  0008c	e59d3018	 ldr         r3, [sp, #0x18]
  00090	e0523003	 subs        r3, r2, r3
  00094	5a00000a	 bpl         |$LN2@OALTimerRe|

; 68   :         // Yes, base new period on previous (no shift)
; 69   :         g_timer.base = g_timer.compare;

  00098	e59f3060	 ldr         r3, [pc, #0x60]
  0009c	e5932004	 ldr         r2, [r3, #4]
  000a0	e59f3058	 ldr         r3, [pc, #0x58]
  000a4	e5832000	 str         r2, [r3]

; 70   :         g_timer.compare += period;

  000a8	e59f3050	 ldr         r3, [pc, #0x50]
  000ac	e5932004	 ldr         r2, [r3, #4]
  000b0	e59d3014	 ldr         r3, [sp, #0x14]
  000b4	e0822003	 add         r2, r2, r3
  000b8	e59f3040	 ldr         r3, [pc, #0x40]
  000bc	e5832004	 str         r2, [r3, #4]

; 71   :     } else {

  000c0	ea000008	 b           |$LN1@OALTimerRe|
  000c4		 |$LN2@OALTimerRe|

; 72   :         // No, base new period on actual counter value (shift)
; 73   :         g_timer.base = count;

  000c4	e59d2000	 ldr         r2, [sp]
  000c8	e59f3030	 ldr         r3, [pc, #0x30]
  000cc	e5832000	 str         r2, [r3]

; 74   :         g_timer.compare = g_timer.base + period;

  000d0	e59f3028	 ldr         r3, [pc, #0x28]
  000d4	e5932000	 ldr         r2, [r3]
  000d8	e59d3014	 ldr         r3, [sp, #0x14]
  000dc	e0822003	 add         r2, r2, r3
  000e0	e59f3018	 ldr         r3, [pc, #0x18]
  000e4	e5832004	 str         r2, [r3, #4]
  000e8		 |$LN1@OALTimerRe|

; 75   :     }
; 76   :     OALTimerSetCompare(g_timer.compare); 

  000e8	e59f3010	 ldr         r3, [pc, #0x10]
  000ec	e5930004	 ldr         r0, [r3, #4]
  000f0	eb000000	 bl          OALTimerSetCompare

; 77   : }

  000f4	e28dd00c	 add         sp, sp, #0xC
  000f8	e89d6000	 ldmia       sp, {sp, lr}
  000fc	e12fff1e	 bx          lr
  00100		 |$LN8@OALTimerRe|
  00100		 |$LN9@OALTimerRe|
  00100	00000000	 DCD         |g_timer|
  00104		 |$M39032|

			 ENDP  ; |OALTimerRecharge|

	EXPORT	|OALTimerCountsSinceSysTick|

  00010			 AREA	 |.pdata|, PDATA
|$T39042| DCD	|$LN5@OALTimerCo|
	DCD	0x40000e02
; Function compile flags: /Odtp

  00104			 AREA	 |.text|, CODE, ARM

  00104		 |OALTimerCountsSinceSysTick| PROC

; 84   : {

  00104		 |$LN5@OALTimerCo|
  00104	e52de004	 str         lr, [sp, #-4]!
  00108	e24dd008	 sub         sp, sp, #8
  0010c		 |$M39039|

; 85   :     return OALTimerGetCount() - g_timer.base;

  0010c	eb000000	 bl          OALTimerGetCount
  00110	e58d0004	 str         r0, [sp, #4]
  00114	e59d2004	 ldr         r2, [sp, #4]
  00118	e59f3018	 ldr         r3, [pc, #0x18]
  0011c	e5933000	 ldr         r3, [r3]
  00120	e0423003	 sub         r3, r2, r3
  00124	e58d3000	 str         r3, [sp]

; 86   : }

  00128	e59d0000	 ldr         r0, [sp]
  0012c	e28dd008	 add         sp, sp, #8
  00130	e49de004	 ldr         lr, [sp], #4
  00134	e12fff1e	 bx          lr
  00138		 |$LN6@OALTimerCo|
  00138		 |$LN7@OALTimerCo|
  00138	00000000	 DCD         |g_timer|
  0013c		 |$M39040|

			 ENDP  ; |OALTimerCountsSinceSysTick|

	EXPORT	|OALTimerUpdate|
	IMPORT	|__rt_udiv|

  00018			 AREA	 |.pdata|, PDATA
|$T39051| DCD	|$LN7@OALTimerUp|
	DCD	0x40003904
; Function compile flags: /Odtp

  0013c			 AREA	 |.text|, CODE, ARM

  0013c		 |OALTimerUpdate| PROC

; 98   : {

  0013c		 |$LN7@OALTimerUp|
  0013c	e1a0c00d	 mov         r12, sp
  00140	e92d0003	 stmdb       sp!, {r0, r1}
  00144	e92d5000	 stmdb       sp!, {r12, lr}
  00148	e24dd010	 sub         sp, sp, #0x10
  0014c		 |$M39048|

; 99   :     UINT32 rc, edge;
; 100  : 
; 101  :     // Get actual count value
; 102  :     edge = OALTimerGetCount() + margin;

  0014c	eb000000	 bl          OALTimerGetCount
  00150	e58d000c	 str         r0, [sp, #0xC]
  00154	e59d200c	 ldr         r2, [sp, #0xC]
  00158	e59d301c	 ldr         r3, [sp, #0x1C]
  0015c	e0823003	 add         r3, r2, r3
  00160	e58d3004	 str         r3, [sp, #4]

; 103  :     // Are we at least edge before actual period end?
; 104  :     if ((INT32)(g_timer.compare - edge) > 0) {

  00164	e59f30b0	 ldr         r3, [pc, #0xB0]
  00168	e5932004	 ldr         r2, [r3, #4]
  0016c	e59d3004	 ldr         r3, [sp, #4]
  00170	e0423003	 sub         r3, r2, r3
  00174	e3530000	 cmp         r3, #0
  00178	da000018	 ble         |$LN2@OALTimerUp|

; 105  :         // How many new period already passed from system tick
; 106  :         rc = (edge - g_timer.base)/period;

  0017c	e59d2004	 ldr         r2, [sp, #4]
  00180	e59f3094	 ldr         r3, [pc, #0x94]
  00184	e5933000	 ldr         r3, [r3]
  00188	e0421003	 sub         r1, r2, r3
  0018c	e59d0018	 ldr         r0, [sp, #0x18]
  00190	eb000000	 bl          __rt_udiv
  00194	e58d0000	 str         r0, [sp]

; 107  :         // Shift base and new compare
; 108  :         g_timer.base += rc * period;         

  00198	e59d1000	 ldr         r1, [sp]
  0019c	e59d3018	 ldr         r3, [sp, #0x18]
  001a0	e0020391	 mul         r2, r1, r3
  001a4	e59f3070	 ldr         r3, [pc, #0x70]
  001a8	e5933000	 ldr         r3, [r3]
  001ac	e0832002	 add         r2, r3, r2
  001b0	e59f3064	 ldr         r3, [pc, #0x64]
  001b4	e5832000	 str         r2, [r3]

; 109  :         g_timer.compare = g_timer.base + period;

  001b8	e59f305c	 ldr         r3, [pc, #0x5C]
  001bc	e5932000	 ldr         r2, [r3]
  001c0	e59d3018	 ldr         r3, [sp, #0x18]
  001c4	e0822003	 add         r2, r2, r3
  001c8	e59f304c	 ldr         r3, [pc, #0x4C]
  001cc	e5832004	 str         r2, [r3, #4]

; 110  :         // Program hardware
; 111  :         OALTimerSetCompare(g_timer.compare);

  001d0	e59f3044	 ldr         r3, [pc, #0x44]
  001d4	e5930004	 ldr         r0, [r3, #4]
  001d8	eb000000	 bl          OALTimerSetCompare

; 112  :     } else {

  001dc	ea000008	 b           |$LN1@OALTimerUp|
  001e0		 |$LN2@OALTimerUp|

; 113  :         // No, we are too close - stay with original period
; 114  :         rc = (g_timer.compare - g_timer.base)/period - 1;

  001e0	e59f3034	 ldr         r3, [pc, #0x34]
  001e4	e5932004	 ldr         r2, [r3, #4]
  001e8	e59f302c	 ldr         r3, [pc, #0x2C]
  001ec	e5933000	 ldr         r3, [r3]
  001f0	e0421003	 sub         r1, r2, r3
  001f4	e59d0018	 ldr         r0, [sp, #0x18]
  001f8	eb000000	 bl          __rt_udiv
  001fc	e2403001	 sub         r3, r0, #1
  00200	e58d3000	 str         r3, [sp]
  00204		 |$LN1@OALTimerUp|

; 115  :     }    
; 116  :     return rc;

  00204	e59d3000	 ldr         r3, [sp]
  00208	e58d3008	 str         r3, [sp, #8]

; 117  : }

  0020c	e59d0008	 ldr         r0, [sp, #8]
  00210	e28dd010	 add         sp, sp, #0x10
  00214	e89d6000	 ldmia       sp, {sp, lr}
  00218	e12fff1e	 bx          lr
  0021c		 |$LN8@OALTimerUp|
  0021c		 |$LN9@OALTimerUp|
  0021c	00000000	 DCD         |g_timer|
  00220		 |$M39049|

			 ENDP  ; |OALTimerUpdate|

	END
