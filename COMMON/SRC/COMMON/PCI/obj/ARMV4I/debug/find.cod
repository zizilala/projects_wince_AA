; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\COMMON\PCI\find.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_1FC@PNDMEFLG@?$AA?9?$AAO?$AAA?$AAL?$AAP?$AAC?$AAI?$AAF?$AAi?$AAn?$AAd?$AAN?$AAe?$AAx?$AAt?$AAI?$AAd?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAl?$AAo?$AAc?$AA?5?$AA?$DN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@PHLOJJNK@?$AA?$CL?$AAO?$AAA?$AAL?$AAP?$AAC?$AAI?$AAF?$AAi?$AAn?$AAd?$AAN?$AAe?$AAx?$AAt?$AAI?$AAd?$AA?$CI?$AA?$CF?$AAd?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx@| [ DATA ] ; `string'
	EXPORT	|OALPCIFindNextId|
	IMPORT	|OALPCIGetSubBusNum|
	IMPORT	|OALPCIGetHeaderType|
	IMPORT	|OALPCIGetId|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|

  00000			 AREA	 |.pdata|, PDATA
|$T40277| DCD	|$LN31@OALPCIFind|
	DCD	0x4000e904
; File c:\wince600\platform\common\src\common\pci\find.c

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@PNDMEFLG@?$AA?9?$AAO?$AAA?$AAL?$AAP?$AAC?$AAI?$AAF?$AAi?$AAn?$AAd?$AAN?$AAe?$AAx?$AAt?$AAI?$AAd?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAl?$AAo?$AAc?$AA?5?$AA?$DN@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "P", 0x0, "C", 0x0, "I"
	DCB	0x0, "F", 0x0, "i", 0x0, "n", 0x0, "d", 0x0, "N", 0x0, "e"
	DCB	0x0, "x", 0x0, "t", 0x0, "I", 0x0, "d", 0x0, "(", 0x0, "r"
	DCB	0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@PHLOJJNK@?$AA?$CL?$AAO?$AAA?$AAL?$AAP?$AAC?$AAI?$AAF?$AAi?$AAn?$AAd?$AAN?$AAe?$AAx?$AAt?$AAI?$AAd?$AA?$CI?$AA?$CF?$AAd?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "P", 0x0, "C", 0x0, "I"
	DCB	0x0, "F", 0x0, "i", 0x0, "n", 0x0, "d", 0x0, "N", 0x0, "e"
	DCB	0x0, "x", 0x0, "t", 0x0, "I", 0x0, "d", 0x0, "(", 0x0, "%"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALPCIFindNextId| PROC

; 36   : ) {

  00000		 |$LN31@OALPCIFind|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0007	 stmdb       sp!, {r0 - r2}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd048	 sub         sp, sp, #0x48
  00010		 |$M40274|

; 37   :     BOOL rc;
; 38   :     OAL_PCI_LOCATION pciLoc;
; 39   :     UINT32 id;
; 40   :     UINT8 header, subBus, maxBus;
; 41   : 
; 42   :     OALMSG(OAL_PCI&&OAL_FUNC, (
; 43   :         L"+OALPCIFindNextId(%d, 0x%08x, 0x%08x)\r\n", busId, deviceId, *pPciLoc
; 44   :     ));

  00010	e59f3384	 ldr         r3, [pc, #0x384]
  00014	e5933440	 ldr         r3, [r3, #0x440]
  00018	e3130c01	 tst         r3, #1, 24
  0001c	0a00000e	 beq         |$LN23@OALPCIFind|
  00020	e59f3374	 ldr         r3, [pc, #0x374]
  00024	e5933440	 ldr         r3, [r3, #0x440]
  00028	e3130004	 tst         r3, #4
  0002c	0a00000a	 beq         |$LN23@OALPCIFind|
  00030	e59d3058	 ldr         r3, [sp, #0x58]
  00034	e58d301c	 str         r3, [sp, #0x1C]
  00038	e59d301c	 ldr         r3, [sp, #0x1C]
  0003c	e5933000	 ldr         r3, [r3]
  00040	e59d2054	 ldr         r2, [sp, #0x54]
  00044	e59d1050	 ldr         r1, [sp, #0x50]
  00048	e59f0350	 ldr         r0, [pc, #0x350]
  0004c	eb000000	 bl          NKDbgPrintfW
  00050	e3a03001	 mov         r3, #1
  00054	e58d3020	 str         r3, [sp, #0x20]
  00058	ea000001	 b           |$LN24@OALPCIFind|
  0005c		 |$LN23@OALPCIFind|
  0005c	e3a03000	 mov         r3, #0
  00060	e58d3020	 str         r3, [sp, #0x20]
  00064		 |$LN24@OALPCIFind|

; 45   : 
; 46   :     // First find number of buses
; 47   :     maxBus = 0;

  00064	e3a03000	 mov         r3, #0
  00068	e5cd300c	 strb        r3, [sp, #0xC]

; 48   :     pciLoc.logicalLoc = 0;

  0006c	e3a03000	 mov         r3, #0
  00070	e58d3008	 str         r3, [sp, #8]
  00074		 |$LN20@OALPCIFind|

; 49   :     while (pciLoc.dev < PCI_MAX_DEVICES) {

  00074	e5dd3009	 ldrb        r3, [sp, #9]
  00078	e3530020	 cmp         r3, #0x20
  0007c	aa000053	 bge         |$LN19@OALPCIFind|

; 50   :         pciLoc.fnc = 0;

  00080	e3a03000	 mov         r3, #0
  00084	e5cd3008	 strb        r3, [sp, #8]
  00088		 |$LN18@OALPCIFind|

; 51   :         while (pciLoc.fnc < PCI_MAX_FUNCTION) {

  00088	e5dd3008	 ldrb        r3, [sp, #8]
  0008c	e3530008	 cmp         r3, #8
  00090	aa000049	 bge         |$LN17@OALPCIFind|

; 52   :             // Get device id
; 53   :             id = OALPCIGetId(busId, pciLoc);

  00094	e59d1008	 ldr         r1, [sp, #8]
  00098	e59d0050	 ldr         r0, [sp, #0x50]
  0009c	eb000000	 bl          OALPCIGetId
  000a0	e58d0024	 str         r0, [sp, #0x24]
  000a4	e59d3024	 ldr         r3, [sp, #0x24]
  000a8	e58d3004	 str         r3, [sp, #4]

; 54   :             // If it is invalid (-1) let try next device
; 55   :             if (LOWORD(id) == PCI_INVALID_VENDORID ||
; 56   :                 HIWORD(id) == PCI_INVALID_DEVICEID
; 57   :             ) break;

  000ac	e59d3004	 ldr         r3, [sp, #4]
  000b0	e1a03803	 mov         r3, r3, lsl #16
  000b4	e1a03823	 mov         r3, r3, lsr #16
  000b8	e1a02003	 mov         r2, r3
  000bc	e3a03cff	 mov         r3, #0xFF, 24
  000c0	e38330ff	 orr         r3, r3, #0xFF
  000c4	e1520003	 cmp         r2, r3
  000c8	0a000008	 beq         |$LN15@OALPCIFind|
  000cc	e59d3004	 ldr         r3, [sp, #4]
  000d0	e1a03823	 mov         r3, r3, lsr #16
  000d4	e1a03803	 mov         r3, r3, lsl #16
  000d8	e1a03823	 mov         r3, r3, lsr #16
  000dc	e1a02003	 mov         r2, r3
  000e0	e3a03cff	 mov         r3, #0xFF, 24
  000e4	e38330ff	 orr         r3, r3, #0xFF
  000e8	e1520003	 cmp         r2, r3
  000ec	1a000000	 bne         |$LN16@OALPCIFind|
  000f0		 |$LN15@OALPCIFind|
  000f0	ea000031	 b           |$LN17@OALPCIFind|
  000f4		 |$LN16@OALPCIFind|

; 58   :             // Read header
; 59   :             header = OALPCIGetHeaderType(busId, pciLoc);

  000f4	e59d1008	 ldr         r1, [sp, #8]
  000f8	e59d0050	 ldr         r0, [sp, #0x50]
  000fc	eb000000	 bl          OALPCIGetHeaderType
  00100	e5cd0028	 strb        r0, [sp, #0x28]
  00104	e5dd3028	 ldrb        r3, [sp, #0x28]
  00108	e5cd3014	 strb        r3, [sp, #0x14]

; 60   :             if (header == 0xFF) break;

  0010c	e5dd3014	 ldrb        r3, [sp, #0x14]
  00110	e35300ff	 cmp         r3, #0xFF
  00114	1a000000	 bne         |$LN14@OALPCIFind|
  00118	ea000027	 b           |$LN17@OALPCIFind|
  0011c		 |$LN14@OALPCIFind|

; 61   :             // We are on bus 0 and device is bridge read subordinate
; 62   :             // bus number -- this give us maximal bus number on PCI bus
; 63   :             switch (header & ~PCI_MULTIFUNCTION) {

  0011c	e5dd3014	 ldrb        r3, [sp, #0x14]
  00120	e1a02003	 mov         r2, r3
  00124	e3e03080	 mvn         r3, #0x80
  00128	e0023003	 and         r3, r2, r3
  0012c	e58d302c	 str         r3, [sp, #0x2C]
  00130	e59d302c	 ldr         r3, [sp, #0x2C]
  00134	e3530000	 cmp         r3, #0
  00138	da000013	 ble         |$LN12@OALPCIFind|
  0013c	e59d302c	 ldr         r3, [sp, #0x2C]
  00140	e3530002	 cmp         r3, #2
  00144	da000000	 ble         |$LN11@OALPCIFind|
  00148	ea00000f	 b           |$LN12@OALPCIFind|
  0014c		 |$LN11@OALPCIFind|

; 64   :             case PCI_BRIDGE_TYPE:
; 65   :             case PCI_CARDBUS_TYPE:
; 66   :                 subBus = OALPCIGetSubBusNum(busId, pciLoc);

  0014c	e59d1008	 ldr         r1, [sp, #8]
  00150	e59d0050	 ldr         r0, [sp, #0x50]
  00154	eb000000	 bl          OALPCIGetSubBusNum
  00158	e5cd0030	 strb        r0, [sp, #0x30]
  0015c	e5dd3030	 ldrb        r3, [sp, #0x30]
  00160	e5cd3000	 strb        r3, [sp]

; 67   :                 if (subBus != 0xFF && subBus > maxBus) maxBus = subBus;

  00164	e5dd3000	 ldrb        r3, [sp]
  00168	e35300ff	 cmp         r3, #0xFF
  0016c	0a000006	 beq         |$LN10@OALPCIFind|
  00170	e5dd3000	 ldrb        r3, [sp]
  00174	e1a02003	 mov         r2, r3
  00178	e5dd300c	 ldrb        r3, [sp, #0xC]
  0017c	e1520003	 cmp         r2, r3
  00180	da000001	 ble         |$LN10@OALPCIFind|
  00184	e5dd3000	 ldrb        r3, [sp]
  00188	e5cd300c	 strb        r3, [sp, #0xC]
  0018c		 |$LN10@OALPCIFind|
  0018c		 |$LN12@OALPCIFind|

; 68   :                 break;
; 69   :             }                        
; 70   :             // Break loop if device isn't multifunction
; 71   :             if (pciLoc.fnc == 0 && (header & PCI_MULTIFUNCTION) == 0) break;

  0018c	e5dd3008	 ldrb        r3, [sp, #8]
  00190	e3530000	 cmp         r3, #0
  00194	1a000003	 bne         |$LN9@OALPCIFind|
  00198	e5dd3014	 ldrb        r3, [sp, #0x14]
  0019c	e3130080	 tst         r3, #0x80
  001a0	1a000000	 bne         |$LN9@OALPCIFind|
  001a4	ea000004	 b           |$LN17@OALPCIFind|
  001a8		 |$LN9@OALPCIFind|

; 72   :             // Move to next function
; 73   :             pciLoc.fnc++;

  001a8	e5dd3008	 ldrb        r3, [sp, #8]
  001ac	e2833001	 add         r3, r3, #1
  001b0	e20330ff	 and         r3, r3, #0xFF
  001b4	e5cd3008	 strb        r3, [sp, #8]

; 74   :         }

  001b8	eaffffb2	 b           |$LN18@OALPCIFind|
  001bc		 |$LN17@OALPCIFind|

; 75   :         pciLoc.dev++;

  001bc	e5dd3009	 ldrb        r3, [sp, #9]
  001c0	e2833001	 add         r3, r3, #1
  001c4	e20330ff	 and         r3, r3, #0xFF
  001c8	e5cd3009	 strb        r3, [sp, #9]

; 76   :     }

  001cc	eaffffa8	 b           |$LN20@OALPCIFind|
  001d0		 |$LN19@OALPCIFind|
  001d0		 |$LN8@OALPCIFind|

; 77   : 
; 78   :     // Now try to find device
; 79   :     do {
; 80   : 
; 81   :         // Read header on actual device
; 82   :         header = OALPCIGetHeaderType(busId, pciLoc);

  001d0	e59d1008	 ldr         r1, [sp, #8]
  001d4	e59d0050	 ldr         r0, [sp, #0x50]
  001d8	eb000000	 bl          OALPCIGetHeaderType
  001dc	e5cd0031	 strb        r0, [sp, #0x31]
  001e0	e5dd3031	 ldrb        r3, [sp, #0x31]
  001e4	e5cd3014	 strb        r3, [sp, #0x14]

; 83   : 
; 84   :         // Move to next PCI device but break if end of PCI bus was reached
; 85   :         if (pPciLoc->fnc < PCI_MAX_FUNCTION && (
; 86   :             pPciLoc->fnc > 0 ||
; 87   :             (header != 0xFF && (header & PCI_MULTIFUNCTION) != 0)
; 88   :         )) {

  001e8	e59d3058	 ldr         r3, [sp, #0x58]
  001ec	e5d33000	 ldrb        r3, [r3]
  001f0	e3530008	 cmp         r3, #8
  001f4	aa000010	 bge         |$LN5@OALPCIFind|
  001f8	e59d3058	 ldr         r3, [sp, #0x58]
  001fc	e5d33000	 ldrb        r3, [r3]
  00200	e3530000	 cmp         r3, #0
  00204	ca000005	 bgt         |$LN4@OALPCIFind|
  00208	e5dd3014	 ldrb        r3, [sp, #0x14]
  0020c	e35300ff	 cmp         r3, #0xFF
  00210	0a000009	 beq         |$LN5@OALPCIFind|
  00214	e5dd3014	 ldrb        r3, [sp, #0x14]
  00218	e3130080	 tst         r3, #0x80
  0021c	0a000006	 beq         |$LN5@OALPCIFind|
  00220		 |$LN4@OALPCIFind|

; 89   :             pPciLoc->fnc++;

  00220	e59d3058	 ldr         r3, [sp, #0x58]
  00224	e5d33000	 ldrb        r3, [r3]
  00228	e2833001	 add         r3, r3, #1
  0022c	e20320ff	 and         r2, r3, #0xFF
  00230	e59d3058	 ldr         r3, [sp, #0x58]
  00234	e5c32000	 strb        r2, [r3]

; 90   :         } else {

  00238	ea000023	 b           |$LN3@OALPCIFind|
  0023c		 |$LN5@OALPCIFind|

; 91   :             pPciLoc->fnc = 0;

  0023c	e59d2058	 ldr         r2, [sp, #0x58]
  00240	e3a03000	 mov         r3, #0
  00244	e5c23000	 strb        r3, [r2]

; 92   :             if (++pPciLoc->dev >= PCI_MAX_DEVICES) {

  00248	e59d3058	 ldr         r3, [sp, #0x58]
  0024c	e2833001	 add         r3, r3, #1
  00250	e5d33000	 ldrb        r3, [r3]
  00254	e2833001	 add         r3, r3, #1
  00258	e20320ff	 and         r2, r3, #0xFF
  0025c	e59d3058	 ldr         r3, [sp, #0x58]
  00260	e2833001	 add         r3, r3, #1
  00264	e5c32000	 strb        r2, [r3]
  00268	e59d3058	 ldr         r3, [sp, #0x58]
  0026c	e2833001	 add         r3, r3, #1
  00270	e5d33000	 ldrb        r3, [r3]
  00274	e3530020	 cmp         r3, #0x20
  00278	ba000013	 blt         |$LN2@OALPCIFind|

; 93   :                 pPciLoc->dev = 0;

  0027c	e59d3058	 ldr         r3, [sp, #0x58]
  00280	e2832001	 add         r2, r3, #1
  00284	e3a03000	 mov         r3, #0
  00288	e5c23000	 strb        r3, [r2]

; 94   :                 if (++pPciLoc->bus > maxBus) break;

  0028c	e59d3058	 ldr         r3, [sp, #0x58]
  00290	e2833002	 add         r3, r3, #2
  00294	e5d33000	 ldrb        r3, [r3]
  00298	e2833001	 add         r3, r3, #1
  0029c	e20320ff	 and         r2, r3, #0xFF
  002a0	e59d3058	 ldr         r3, [sp, #0x58]
  002a4	e2833002	 add         r3, r3, #2
  002a8	e5c32000	 strb        r2, [r3]
  002ac	e59d3058	 ldr         r3, [sp, #0x58]
  002b0	e2833002	 add         r3, r3, #2
  002b4	e5d33000	 ldrb        r3, [r3]
  002b8	e1a02003	 mov         r2, r3
  002bc	e5dd300c	 ldrb        r3, [sp, #0xC]
  002c0	e1520003	 cmp         r2, r3
  002c4	da000000	 ble         |$LN1@OALPCIFind|
  002c8	ea00000a	 b           |$LN6@OALPCIFind|
  002cc		 |$LN1@OALPCIFind|
  002cc		 |$LN2@OALPCIFind|
  002cc		 |$LN3@OALPCIFind|

; 95   :             }
; 96   :         }        
; 97   : 
; 98   :     } while (OALPCIGetId(busId, *pPciLoc) != deviceId);        

  002cc	e59d3058	 ldr         r3, [sp, #0x58]
  002d0	e58d3034	 str         r3, [sp, #0x34]
  002d4	e59d3034	 ldr         r3, [sp, #0x34]
  002d8	e5931000	 ldr         r1, [r3]
  002dc	e59d0050	 ldr         r0, [sp, #0x50]
  002e0	eb000000	 bl          OALPCIGetId
  002e4	e58d0038	 str         r0, [sp, #0x38]
  002e8	e59d2038	 ldr         r2, [sp, #0x38]
  002ec	e59d3054	 ldr         r3, [sp, #0x54]
  002f0	e1520003	 cmp         r2, r3
  002f4	1affffb5	 bne         |$LN8@OALPCIFind|
  002f8		 |$LN6@OALPCIFind|

; 99   : 
; 100  :     // Find result    
; 101  :     rc = (pPciLoc->bus <= maxBus);

  002f8	e59d3058	 ldr         r3, [sp, #0x58]
  002fc	e2833002	 add         r3, r3, #2
  00300	e5d33000	 ldrb        r3, [r3]
  00304	e1a02003	 mov         r2, r3
  00308	e5dd300c	 ldrb        r3, [sp, #0xC]
  0030c	e1520003	 cmp         r2, r3
  00310	ca000002	 bgt         |$LN25@OALPCIFind|
  00314	e3a03001	 mov         r3, #1
  00318	e58d303c	 str         r3, [sp, #0x3C]
  0031c	ea000001	 b           |$LN26@OALPCIFind|
  00320		 |$LN25@OALPCIFind|
  00320	e3a03000	 mov         r3, #0
  00324	e58d303c	 str         r3, [sp, #0x3C]
  00328		 |$LN26@OALPCIFind|
  00328	e59d303c	 ldr         r3, [sp, #0x3C]
  0032c	e58d3010	 str         r3, [sp, #0x10]

; 102  :     
; 103  :     OALMSG(OAL_PCI&&OAL_FUNC, (
; 104  :         L"-OALPCIFindNextId(rc = %d, loc = %08x)\r\n", rc, *pPciLoc
; 105  :     ));

  00330	e59f3064	 ldr         r3, [pc, #0x64]
  00334	e5933440	 ldr         r3, [r3, #0x440]
  00338	e3130c01	 tst         r3, #1, 24
  0033c	0a00000d	 beq         |$LN27@OALPCIFind|
  00340	e59f3054	 ldr         r3, [pc, #0x54]
  00344	e5933440	 ldr         r3, [r3, #0x440]
  00348	e3130004	 tst         r3, #4
  0034c	0a000009	 beq         |$LN27@OALPCIFind|
  00350	e59d3058	 ldr         r3, [sp, #0x58]
  00354	e58d3040	 str         r3, [sp, #0x40]
  00358	e59d3040	 ldr         r3, [sp, #0x40]
  0035c	e5932000	 ldr         r2, [r3]
  00360	e59d1010	 ldr         r1, [sp, #0x10]
  00364	e59f002c	 ldr         r0, [pc, #0x2C]
  00368	eb000000	 bl          NKDbgPrintfW
  0036c	e3a03001	 mov         r3, #1
  00370	e58d3044	 str         r3, [sp, #0x44]
  00374	ea000001	 b           |$LN28@OALPCIFind|
  00378		 |$LN27@OALPCIFind|
  00378	e3a03000	 mov         r3, #0
  0037c	e58d3044	 str         r3, [sp, #0x44]
  00380		 |$LN28@OALPCIFind|

; 106  :     return rc;

  00380	e59d3010	 ldr         r3, [sp, #0x10]
  00384	e58d3018	 str         r3, [sp, #0x18]

; 107  : }

  00388	e59d0018	 ldr         r0, [sp, #0x18]
  0038c	e28dd048	 add         sp, sp, #0x48
  00390	e89d6000	 ldmia       sp, {sp, lr}
  00394	e12fff1e	 bx          lr
  00398		 |$LN32@OALPCIFind|
  00398		 |$LN33@OALPCIFind|
  00398	00000000	 DCD         |??_C@_1FC@PNDMEFLG@?$AA?9?$AAO?$AAA?$AAL?$AAP?$AAC?$AAI?$AAF?$AAi?$AAn?$AAd?$AAN?$AAe?$AAx?$AAt?$AAI?$AAd?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAl?$AAo?$AAc?$AA?5?$AA?$DN@|
  0039c		 |$LN34@OALPCIFind|
  0039c	00000000	 DCD         |dpCurSettings|
  003a0		 |$LN35@OALPCIFind|
  003a0	00000000	 DCD         |??_C@_1FA@PHLOJJNK@?$AA?$CL?$AAO?$AAA?$AAL?$AAP?$AAC?$AAI?$AAF?$AAi?$AAn?$AAd?$AAN?$AAe?$AAx?$AAt?$AAI?$AAd?$AA?$CI?$AA?$CF?$AAd?$AA?0?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AA0?$AAx@|
  003a4		 |$M40275|

			 ENDP  ; |OALPCIFindNextId|

	END
