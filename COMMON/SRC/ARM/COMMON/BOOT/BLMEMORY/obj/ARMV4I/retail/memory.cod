; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\COMMON\SRC\ARM\COMMON\BOOT\BLMEMORY\memory.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|OALPAtoVA|
	EXPORT	|??_C@_1DE@DAHNLBLJ@?$AA?9?$AAO?$AAA?$AAL?$AAP?$AAA?$AAt?$AAo?$AAV?$AAA?$AA?$CI?$AAv?$AAa?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@JEIJEAKF@?$AA?$CL?$AAO?$AAA?$AAL?$AAP?$AAA?$AAt?$AAo?$AAV?$AAA?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|
	IMPORT	|g_oalAddressTable|
; File c:\wince600\platform\common\src\arm\common\boot\blmemory\memory.c

  00000			 AREA	 |.pdata|, PDATA
|$T39053| DCD	|$LN17@OALPAtoVA|
	DCD	0x40003401

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@DAHNLBLJ@?$AA?9?$AAO?$AAA?$AAL?$AAP?$AAA?$AAt?$AAo?$AAV?$AAA?$AA?$CI?$AAv?$AAa?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "P", 0x0, "A", 0x0, "t"
	DCB	0x0, "o", 0x0, "V", 0x0, "A", 0x0, "(", 0x0, "v", 0x0, "a"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@JEIJEAKF@?$AA?$CL?$AAO?$AAA?$AAL?$AAP?$AAA?$AAt?$AAo?$AAV?$AAA?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "P", 0x0, "A", 0x0, "t"
	DCB	0x0, "o", 0x0, "V", 0x0, "A", 0x0, "(", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALPAtoVA| PROC

; 31   : {

  00000		 |$LN17@OALPAtoVA|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M39050|
  00004	e1a08001	 mov         r8, r1
  00008	e1a06000	 mov         r6, r0

; 32   :     OAL_ADDRESS_TABLE *pTable = g_oalAddressTable;
; 33   :     VOID *va = NULL;
; 34   : 
; 35   :     OALMSG(OAL_MEMORY&&OAL_FUNC, (L"+OALPAtoVA(0x%x, %d)\r\n", pa, cached));

  0000c	e59f70b8	 ldr         r7, [pc, #0xB8]
  00010	e59f50b0	 ldr         r5, [pc, #0xB0]
  00014	e3a04000	 mov         r4, #0
  00018	e597e440	 ldr         lr, [r7, #0x440]
  0001c	e31e0c02	 tst         lr, #2, 24
  00020	0a000006	 beq         |$LN8@OALPAtoVA|
  00024	e31e0004	 tst         lr, #4
  00028	0a000004	 beq         |$LN8@OALPAtoVA|
  0002c	e59f0090	 ldr         r0, [pc, #0x90]
  00030	e1a02008	 mov         r2, r8
  00034	e1a01006	 mov         r1, r6
  00038	eb000000	 bl          NKDbgPrintfW
  0003c	e597e440	 ldr         lr, [r7, #0x440]
  00040		 |$LN8@OALPAtoVA|

; 36   : 
; 37   :     // Search the table for address range
; 38   :     while (pTable->size != 0) {

  00040	e5953008	 ldr         r3, [r5, #8]
  00044	e3530000	 cmp         r3, #0
  00048	0a000014	 beq         |$LN1@OALPAtoVA|
  0004c		 |$LL5@OALPAtoVA|

; 39   :         if (
; 40   :             pa >= pTable->PA && 
; 41   :             pa <= (pTable->PA + (pTable->size << 20) - 1)
; 42   :         ) break;                      // match found 

  0004c	e5952004	 ldr         r2, [r5, #4]
  00050	e1560002	 cmp         r6, r2
  00054	3a000004	 bcc         |$LN3@OALPAtoVA|
  00058	e5953008	 ldr         r3, [r5, #8]
  0005c	e0823a03	 add         r3, r2, r3, lsl #20
  00060	e2433001	 sub         r3, r3, #1
  00064	e1560003	 cmp         r6, r3
  00068	9a000003	 bls         |$LN13@OALPAtoVA|
  0006c		 |$LN3@OALPAtoVA|

; 43   :         pTable++;

  0006c	e285500c	 add         r5, r5, #0xC
  00070	e5953008	 ldr         r3, [r5, #8]
  00074	e3530000	 cmp         r3, #0
  00078	1afffff3	 bne         |$LL5@OALPAtoVA|
  0007c		 |$LN13@OALPAtoVA|

; 44   :     }
; 45   : 
; 46   :     // If address table entry is valid compute the VA
; 47   :     if (pTable->size != 0) {

  0007c	e5953008	 ldr         r3, [r5, #8]
  00080	e3530000	 cmp         r3, #0
  00084	0a000005	 beq         |$LN1@OALPAtoVA|

; 48   :         va = (VOID *)(pTable->CA + (pa - pTable->PA));

  00088	e5952000	 ldr         r2, [r5]
  0008c	e5953004	 ldr         r3, [r5, #4]

; 49   :         // If VA is uncached, set the uncached bit
; 50   :         if (!cached) (UINT32)va |= OAL_MEMORY_CACHE_BIT;

  00090	e3580000	 cmp         r8, #0
  00094	e0423003	 sub         r3, r2, r3
  00098	e0834006	 add         r4, r3, r6
  0009c	03844202	 orreq       r4, r4, #2, 4
  000a0		 |$LN1@OALPAtoVA|

; 51   :     }
; 52   : 
; 53   :     // Indicate the virtual address
; 54   :     OALMSG(OAL_MEMORY&&OAL_FUNC, (L"-OALPAtoVA(va = 0x%08x)\r\n", va));

  000a0	e31e0c02	 tst         lr, #2, 24
  000a4	131e0004	 tstne       lr, #4
  000a8	159f0010	 ldrne       r0, [pc, #0x10]
  000ac	11a01004	 movne       r1, r4
  000b0	1b000000	 blne        NKDbgPrintfW

; 55   :     return va;
; 56   : }

  000b4	e1a00004	 mov         r0, r4
  000b8	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  000bc	e12fff1e	 bx          lr
  000c0		 |$LN18@OALPAtoVA|
  000c0		 |$LN19@OALPAtoVA|
  000c0	00000000	 DCD         |??_C@_1DE@DAHNLBLJ@?$AA?9?$AAO?$AAA?$AAL?$AAP?$AAA?$AAt?$AAo?$AAV?$AAA?$AA?$CI?$AAv?$AAa?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  000c4		 |$LN20@OALPAtoVA|
  000c4	00000000	 DCD         |??_C@_1CO@JEIJEAKF@?$AA?$CL?$AAO?$AAA?$AAL?$AAP?$AAA?$AAt?$AAo?$AAV?$AAA?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?0?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  000c8		 |$LN21@OALPAtoVA|
  000c8	00000000	 DCD         |g_oalAddressTable|
  000cc		 |$LN22@OALPAtoVA|
  000cc	00000000	 DCD         |dpCurSettings|
  000d0		 |$M39051|

			 ENDP  ; |OALPAtoVA|

	EXPORT	|OALVAtoPA|
	EXPORT	|??_C@_1DA@BBOHBBNH@?$AA?9?$AAO?$AAA?$AAL?$AAV?$AAA?$AAt?$AAo?$AAP?$AAA?$AA?$CI?$AAp?$AAa?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@IPLNFFII@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AAO?$AAA?$AAL?$AAV?$AAA?$AAt?$AAo?$AAP?$AAA?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAv?$AAi?$AAr?$AAt?$AAu?$AAa?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@LKNIEAFP@?$AA?$CL?$AAO?$AAA?$AAL?$AAV?$AAA?$AAt?$AAo?$AAP?$AAA?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T39080| DCD	|$LN20@OALVAtoPA|
	DCD	0x40003d01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@BBOHBBNH@?$AA?9?$AAO?$AAA?$AAL?$AAV?$AAA?$AAt?$AAo?$AAP?$AAA?$AA?$CI?$AAp?$AAa?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "V", 0x0, "A", 0x0, "t"
	DCB	0x0, "o", 0x0, "P", 0x0, "A", 0x0, "(", 0x0, "p", 0x0, "a"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@IPLNFFII@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AAO?$AAA?$AAL?$AAV?$AAA?$AAt?$AAo?$AAP?$AAA?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAv?$AAi?$AAr?$AAt?$AAu?$AAa?$AAl@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "V", 0x0, "A", 0x0, "t", 0x0, "o"
	DCB	0x0, "P", 0x0, "A", 0x0, ":", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, " "
	DCB	0x0, "v", 0x0, "i", 0x0, "r", 0x0, "t", 0x0, "u", 0x0, "a"
	DCB	0x0, "l", 0x0, " ", 0x0, "a", 0x0, "d", 0x0, "d", 0x0, "r"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@LKNIEAFP@?$AA?$CL?$AAO?$AAA?$AAL?$AAV?$AAA?$AAt?$AAo?$AAP?$AAA?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "V", 0x0, "A", 0x0, "t"
	DCB	0x0, "o", 0x0, "P", 0x0, "A", 0x0, "(", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALVAtoPA| PROC

; 66   : {

  00000		 |$LN20@OALVAtoPA|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M39077|
  00004	e1a05000	 mov         r5, r0

; 67   :     OAL_ADDRESS_TABLE *pTable = g_oalAddressTable;
; 68   :     UINT32 va = (UINT32)pVA;
; 69   :     UINT32 pa = 0;
; 70   : 
; 71   :     OALMSG(OAL_MEMORY&&OAL_FUNC, (L"+OALVAtoPA(0x%08x)\r\n", pVA));

  00008	e59f70e0	 ldr         r7, [pc, #0xE0]
  0000c	e59f40d8	 ldr         r4, [pc, #0xD8]
  00010	e3a06000	 mov         r6, #0
  00014	e5971440	 ldr         r1, [r7, #0x440]
  00018	e3110c02	 tst         r1, #2, 24
  0001c	0a000005	 beq         |$LN9@OALVAtoPA|
  00020	e3110004	 tst         r1, #4
  00024	0a000003	 beq         |$LN9@OALVAtoPA|
  00028	e59f00b8	 ldr         r0, [pc, #0xB8]
  0002c	e1a01005	 mov         r1, r5
  00030	eb000000	 bl          NKDbgPrintfW
  00034	e5971440	 ldr         r1, [r7, #0x440]
  00038		 |$LN9@OALVAtoPA|

; 72   : 
; 73   :     // Virtual address must be in CACHED or UNCACHED regions.
; 74   :     if (va < 0x80000000 || va >= 0xC0000000) {

  00038	e3550102	 cmp         r5, #2, 2
  0003c	3a000019	 bcc         |$LN5@OALVAtoPA|
  00040	e3550103	 cmp         r5, #3, 2
  00044	2a000017	 bcs         |$LN5@OALVAtoPA|

; 78   :         goto cleanUp;
; 79   :     }
; 80   : 
; 81   :     // Address must be cached, as entries in OEMAddressTable are cached address.
; 82   :     va = va&~OAL_MEMORY_CACHE_BIT;
; 83   : 
; 84   :     // Search the table for address range
; 85   :     while (pTable->size != 0) {

  00048	e5943008	 ldr         r3, [r4, #8]
  0004c	e3c50202	 bic         r0, r5, #2, 4
  00050	e3530000	 cmp         r3, #0
  00054	0a000019	 beq         |$cleanUp$39010|
  00058		 |$LL4@OALVAtoPA|

; 86   :         if (va >= pTable->CA && va <= pTable->CA + (pTable->size << 20) - 1) {

  00058	e5942000	 ldr         r2, [r4]
  0005c	e1500002	 cmp         r0, r2
  00060	3a000004	 bcc         |$LN2@OALVAtoPA|
  00064	e5943008	 ldr         r3, [r4, #8]
  00068	e0823a03	 add         r3, r2, r3, lsl #20
  0006c	e2433001	 sub         r3, r3, #1
  00070	e1500003	 cmp         r0, r3
  00074	9a000003	 bls         |$LN16@OALVAtoPA|
  00078		 |$LN2@OALVAtoPA|

; 87   :             break;
; 88   :         }
; 89   :         pTable++;

  00078	e284400c	 add         r4, r4, #0xC
  0007c	e5943008	 ldr         r3, [r4, #8]
  00080	e3530000	 cmp         r3, #0
  00084	1afffff3	 bne         |$LL4@OALVAtoPA|
  00088		 |$LN16@OALVAtoPA|

; 90   :     }
; 91   : 
; 92   :     // If address table entry is valid compute the PA
; 93   :     if (pTable->size != 0) pa = pTable->PA + va - pTable->CA;

  00088	e5943008	 ldr         r3, [r4, #8]
  0008c	e3530000	 cmp         r3, #0
  00090	0a00000a	 beq         |$cleanUp$39010|
  00094	e5942004	 ldr         r2, [r4, #4]
  00098	e5943000	 ldr         r3, [r4]
  0009c	e0423003	 sub         r3, r2, r3
  000a0	e0836000	 add         r6, r3, r0
  000a4	ea000005	 b           |$cleanUp$39010|
  000a8		 |$LN5@OALVAtoPA|

; 75   :         OALMSG(OAL_ERROR, (
; 76   :             L"ERROR:OALVAtoPA: invalid virtual address 0x%08x\r\n", pVA
; 77   :         ));

  000a8	e3110001	 tst         r1, #1
  000ac	0a000003	 beq         |$cleanUp$39010|
  000b0	e59f002c	 ldr         r0, [pc, #0x2C]
  000b4	e1a01005	 mov         r1, r5
  000b8	eb000000	 bl          NKDbgPrintfW
  000bc	e5971440	 ldr         r1, [r7, #0x440]
  000c0		 |$cleanUp$39010|

; 94   : 
; 95   : cleanUp:
; 96   :     // Indicate physical address 
; 97   :     OALMSG(OAL_MEMORY&&OAL_FUNC, (L"-OALVAtoPA(pa = 0x%x)\r\n", pa));

  000c0	e3110c02	 tst         r1, #2, 24
  000c4	13110004	 tstne       r1, #4
  000c8	159f0010	 ldrne       r0, [pc, #0x10]
  000cc	11a01006	 movne       r1, r6
  000d0	1b000000	 blne        NKDbgPrintfW

; 98   :     return pa;
; 99   : }

  000d4	e1a00006	 mov         r0, r6
  000d8	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  000dc	e12fff1e	 bx          lr
  000e0		 |$LN21@OALVAtoPA|
  000e0		 |$LN22@OALVAtoPA|
  000e0	00000000	 DCD         |??_C@_1DA@BBOHBBNH@?$AA?9?$AAO?$AAA?$AAL?$AAV?$AAA?$AAt?$AAo?$AAP?$AAA?$AA?$CI?$AAp?$AAa?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  000e4		 |$LN23@OALVAtoPA|
  000e4	00000000	 DCD         |??_C@_1GE@IPLNFFII@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AAO?$AAA?$AAL?$AAV?$AAA?$AAt?$AAo?$AAP?$AAA?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAv?$AAi?$AAr?$AAt?$AAu?$AAa?$AAl@|
  000e8		 |$LN24@OALVAtoPA|
  000e8	00000000	 DCD         |??_C@_1CK@LKNIEAFP@?$AA?$CL?$AAO?$AAA?$AAL?$AAV?$AAA?$AAt?$AAo?$AAP?$AAA?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  000ec		 |$LN25@OALVAtoPA|
  000ec	00000000	 DCD         |g_oalAddressTable|
  000f0		 |$LN26@OALVAtoPA|
  000f0	00000000	 DCD         |dpCurSettings|
  000f4		 |$M39078|

			 ENDP  ; |OALVAtoPA|

	END
