; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\Z2170P\SRC\APP\SHELL\profile.cxx
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|?ProfileInterruptLatency@@YAHKQAPAGP6AXPAGZZ@Z| ; ProfileInterruptLatency
	EXPORT	|??_C@_13KHDBCPJB@?$AAs?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|DeviceIoControl|
	IMPORT	|?GetProxyDriverHandle@@YAPAXXZ|	; GetProxyDriverHandle
	IMPORT	|?GetOptionLong@@YAJPAHQAPAGJPBG@Z|	; GetOptionLong
; File c:\wince600\platform\z2170p\src\app\shell\profile.cxx

  00000			 AREA	 |.pdata|, PDATA
|$T38858| DCD	|$LN5@ProfileInt|
	DCD	0x40001904

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_13KHDBCPJB@?$AAs?$AA?$AA@| DCB "s", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ProfileInterruptLatency@@YAHKQAPAGP6AXPAGZZ@Z| PROC ; ProfileInterruptLatency

; 39   : {

  00000		 |$LN5@ProfileInt|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd014	 sub         sp, sp, #0x14
  00010		 |$M38855|

; 40   :     // get option parameters
; 41   :     int nTargetSamples = GetOptionLong((int*)&argc, args, 100, L"s");

  00010	e59f3048	 ldr         r3, [pc, #0x48]
  00014	e3a02064	 mov         r2, #0x64
  00018	e28d001c	 add         r0, sp, #0x1C
  0001c	eb000000	 bl          |?GetOptionLong@@YAJPAHQAPAGJPBG@Z|
  00020	e58d0010	 str         r0, [sp, #0x10]

; 42   :     
; 43   : 	UNREFERENCED_PARAMETER(pfnFmtPuts);
; 44   : 
; 45   :     DeviceIoControl(
; 46   :             GetProxyDriverHandle(), 
; 47   :             IOCTL_PROFILE_INTERRUPTLATENCY, 
; 48   :             &nTargetSamples, 
; 49   :             sizeof(int), 
; 50   :             NULL, 
; 51   :             0, 
; 52   :             NULL, 
; 53   :             NULL
; 54   :             );

  00024	eb000000	 bl          |?GetProxyDriverHandle@@YAPAXXZ|
  00028	e3a0181e	 mov         r1, #0x1E, 16
  0002c	e3a0e000	 mov         lr, #0
  00030	e3811f6a	 orr         r1, r1, #0x6A, 30
  00034	e3a03004	 mov         r3, #4
  00038	e28d2010	 add         r2, sp, #0x10
  0003c	e58de00c	 str         lr, [sp, #0xC]
  00040	e58de008	 str         lr, [sp, #8]
  00044	e58de004	 str         lr, [sp, #4]
  00048	e58de000	 str         lr, [sp]
  0004c	eb000000	 bl          DeviceIoControl

; 55   :     return TRUE;

  00050	e3a00001	 mov         r0, #1

; 56   : }

  00054	e28dd014	 add         sp, sp, #0x14
  00058	e89d6000	 ldmia       sp, {sp, lr}
  0005c	e12fff1e	 bx          lr
  00060		 |$LN6@ProfileInt|
  00060		 |$LN7@ProfileInt|
  00060	00000000	 DCD         |??_C@_13KHDBCPJB@?$AAs?$AA?$AA@|
  00064		 |$M38856|

			 ENDP  ; |?ProfileInterruptLatency@@YAHKQAPAGP6AXPAGZZ@Z|, ProfileInterruptLatency

	EXPORT	|?ProfileDvfs@@YAHKQAPAGP6AXPAGZZ@Z|	; ProfileDvfs
	EXPORT	|??_C@_13KPELGIFI@?$AAl?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_13CACJPPAP@?$AAh?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_13BPINEIPE@?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_13GKPPEALH@?$AAd?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_13DKOGBHCI@?$AAt?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|?GetOptionFlag@@YAHPAHQAPAGPBG@Z|	; GetOptionFlag

  00000			 AREA	 |.pdata|, PDATA
|$T38876| DCD	|$LN18@ProfileDvf|
	DCD	0x40004c04

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_13KPELGIFI@?$AAl?$AA?$AA@| DCB "l", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_13CACJPPAP@?$AAh?$AA?$AA@| DCB "h", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_13BPINEIPE@?$AAr?$AA?$AA@| DCB "r", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_13GKPPEALH@?$AAd?$AA?$AA@| DCB "d", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_13DKOGBHCI@?$AAt?$AA?$AA@| DCB "t", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ProfileDvfs@@YAHKQAPAGP6AXPAGZZ@Z| PROC ; ProfileDvfs

; 65   : {

  00000		 |$LN18@ProfileDvf|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5030	 stmdb       sp!, {r4, r5, r12, lr}
  0000c	e24dd028	 sub         sp, sp, #0x28
  00010		 |$M38873|
  00010	e1a04001	 mov         r4, r1

; 66   :     BOOL rc = FALSE;
; 67   :     DVFS_STRESS_TEST_PARAMETERS     stressParam;
; 68   : 
; 69   : 	UNREFERENCED_PARAMETER(pfnFmtPuts);
; 70   : 
; 71   :     // get frequency of dvfs change
; 72   :     stressParam._period = GetOptionLong((int*)&argc, args, 500, L"t");

  00014	e59f3110	 ldr         r3, [pc, #0x110]
  00018	e3a02f7d	 mov         r2, #0x7D, 30
  0001c	e28d0038	 add         r0, sp, #0x38
  00020	e3a05000	 mov         r5, #0
  00024	eb000000	 bl          |?GetOptionLong@@YAJPAHQAPAGJPBG@Z|
  00028	e3500000	 cmp         r0, #0
  0002c	e58d0010	 str         r0, [sp, #0x10]

; 73   :     if (stressParam._period == NULL) goto cleanUp;

  00030	0a000035	 beq         |$cleanUp$38783|

; 74   : 
; 75   :     // get duration of stress test
; 76   :     stressParam._duration = GetOptionLong((int*)&argc, args, 30, L"d");

  00034	e59f30ec	 ldr         r3, [pc, #0xEC]
  00038	e3a0201e	 mov         r2, #0x1E
  0003c	e1a01004	 mov         r1, r4
  00040	e28d0038	 add         r0, sp, #0x38
  00044	eb000000	 bl          |?GetOptionLong@@YAJPAHQAPAGJPBG@Z|
  00048	e3500000	 cmp         r0, #0
  0004c	e58d0014	 str         r0, [sp, #0x14]

; 77   :     if (stressParam._duration == NULL) goto cleanUp;

  00050	0a00002d	 beq         |$cleanUp$38783|

; 78   : 
; 79   :     // get test mode (random or between two operating points)
; 80   :     stressParam._random = GetOptionFlag((int*)&argc, args, L"r") == TRUE;

  00054	e59f20c8	 ldr         r2, [pc, #0xC8]
  00058	e1a01004	 mov         r1, r4
  0005c	e28d0038	 add         r0, sp, #0x38
  00060	eb000000	 bl          |?GetOptionFlag@@YAHPAHQAPAGPBG@Z|
  00064	e3500001	 cmp         r0, #1
  00068	03a03001	 moveq       r3, #1
  0006c	058d3018	 streq       r3, [sp, #0x18]
  00070	0a000015	 beq         |$LN3@ProfileDvf|

; 81   : 
; 82   :     if(stressParam._random == FALSE )
; 83   :     {
; 84   :         // identify operating points if between two modes
; 85   :         stressParam._hiopm = GetOptionLong((int*)&argc, args, 1, L"h");

  00074	e59f30a4	 ldr         r3, [pc, #0xA4]
  00078	e3a0e000	 mov         lr, #0
  0007c	e3a02001	 mov         r2, #1
  00080	e1a01004	 mov         r1, r4
  00084	e28d0038	 add         r0, sp, #0x38
  00088	e58de018	 str         lr, [sp, #0x18]
  0008c	eb000000	 bl          |?GetOptionLong@@YAJPAHQAPAGJPBG@Z|

; 86   :         if (stressParam._hiopm < 1 || stressParam._hiopm > 5) goto cleanUp;

  00090	e2403001	 sub         r3, r0, #1
  00094	e3530004	 cmp         r3, #4
  00098	e58d001c	 str         r0, [sp, #0x1C]
  0009c	8a00001a	 bhi         |$cleanUp$38783|

; 87   :     
; 88   :         stressParam._lowopm = GetOptionLong((int*)&argc, args, 0, L"l");

  000a0	e59f3074	 ldr         r3, [pc, #0x74]
  000a4	e3a02000	 mov         r2, #0
  000a8	e1a01004	 mov         r1, r4
  000ac	e28d0038	 add         r0, sp, #0x38
  000b0	eb000000	 bl          |?GetOptionLong@@YAJPAHQAPAGJPBG@Z|
  000b4	e58d0020	 str         r0, [sp, #0x20]

; 89   :         if (stressParam._lowopm < 0 || stressParam._lowopm > 4 ||
; 90   :             stressParam._lowopm >= stressParam._hiopm) 

  000b8	e3500004	 cmp         r0, #4
  000bc	8a000012	 bhi         |$cleanUp$38783|
  000c0	e59d301c	 ldr         r3, [sp, #0x1C]
  000c4	e1500003	 cmp         r0, r3

; 111  : 
; 112  : cleanUp:

  000c8	2a00000f	 bcs         |$cleanUp$38783|
  000cc		 |$LN3@ProfileDvf|

; 91   :             {
; 92   :             goto cleanUp;
; 93   :             }   
; 94   : 
; 95   :         //stressParam._hiopm--;
; 96   :         //stressParam._lowopm--;
; 97   :     }
; 98   : 
; 99   :     stressParam._duration *= 1000;  //convert seconds to mili seconds

  000cc	e59d3014	 ldr         r3, [sp, #0x14]
  000d0	e3a02ffa	 mov         r2, #0xFA, 30
  000d4	e0030392	 mul         r3, r2, r3
  000d8	e58d3014	 str         r3, [sp, #0x14]

; 100  :     
; 101  :     rc = DeviceIoControl(
; 102  :             GetProxyDriverHandle(), 
; 103  :             IOCTL_PROFILE_DVFS, 
; 104  :             &stressParam, 
; 105  :             sizeof(DVFS_STRESS_TEST_PARAMETERS), 
; 106  :             NULL, 
; 107  :             0, 
; 108  :             NULL, 
; 109  :             NULL
; 110  :             );

  000dc	eb000000	 bl          |?GetProxyDriverHandle@@YAPAXXZ|
  000e0	e3a0181e	 mov         r1, #0x1E, 16
  000e4	e3a0e000	 mov         lr, #0
  000e8	e3811f6b	 orr         r1, r1, #0x6B, 30
  000ec	e3a03018	 mov         r3, #0x18
  000f0	e28d2010	 add         r2, sp, #0x10
  000f4	e58de00c	 str         lr, [sp, #0xC]
  000f8	e58de008	 str         lr, [sp, #8]
  000fc	e58de004	 str         lr, [sp, #4]
  00100	e58de000	 str         lr, [sp]
  00104	eb000000	 bl          DeviceIoControl
  00108	e1a05000	 mov         r5, r0
  0010c		 |$cleanUp$38783|

; 113  :     
; 114  :     return rc;
; 115  : }

  0010c	e1a00005	 mov         r0, r5
  00110	e28dd028	 add         sp, sp, #0x28
  00114	e89d6030	 ldmia       sp, {r4, r5, sp, lr}
  00118	e12fff1e	 bx          lr
  0011c		 |$LN19@ProfileDvf|
  0011c		 |$LN20@ProfileDvf|
  0011c	00000000	 DCD         |??_C@_13KPELGIFI@?$AAl?$AA?$AA@|
  00120		 |$LN21@ProfileDvf|
  00120	00000000	 DCD         |??_C@_13CACJPPAP@?$AAh?$AA?$AA@|
  00124		 |$LN22@ProfileDvf|
  00124	00000000	 DCD         |??_C@_13BPINEIPE@?$AAr?$AA?$AA@|
  00128		 |$LN23@ProfileDvf|
  00128	00000000	 DCD         |??_C@_13GKPPEALH@?$AAd?$AA?$AA@|
  0012c		 |$LN24@ProfileDvf|
  0012c	00000000	 DCD         |??_C@_13DKOGBHCI@?$AAt?$AA?$AA@|
  00130		 |$M38874|

			 ENDP  ; |?ProfileDvfs@@YAHKQAPAGP6AXPAGZZ@Z|, ProfileDvfs

	EXPORT	|?ProfileSdrcStall@@YAHKQAPAGP6AXPAGZZ@Z| ; ProfileSdrcStall

  00000			 AREA	 |.pdata|, PDATA
|$T38892| DCD	|$LN5@ProfileSdr|
	DCD	0x40001904
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ProfileSdrcStall@@YAHKQAPAGP6AXPAGZZ@Z| PROC ; ProfileSdrcStall

; 124  : {

  00000		 |$LN5@ProfileSdr|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd014	 sub         sp, sp, #0x14
  00010		 |$M38889|

; 125  :     // get option parameters
; 126  :     int nTargetSamples = GetOptionLong((int*)&argc, args, 100, L"s");

  00010	e59f3048	 ldr         r3, [pc, #0x48]
  00014	e3a02064	 mov         r2, #0x64
  00018	e28d001c	 add         r0, sp, #0x1C
  0001c	eb000000	 bl          |?GetOptionLong@@YAJPAHQAPAGJPBG@Z|
  00020	e58d0010	 str         r0, [sp, #0x10]

; 127  :     
; 128  : 	UNREFERENCED_PARAMETER(pfnFmtPuts);
; 129  : 
; 130  :     DeviceIoControl(
; 131  :             GetProxyDriverHandle(), 
; 132  :             IOCTL_PROFILE_DVFS_CORE, 
; 133  :             &nTargetSamples, 
; 134  :             sizeof(int), 
; 135  :             NULL, 
; 136  :             0, 
; 137  :             NULL, 
; 138  :             NULL
; 139  :             );

  00024	eb000000	 bl          |?GetProxyDriverHandle@@YAPAXXZ|
  00028	e3a0181e	 mov         r1, #0x1E, 16
  0002c	e3a0e000	 mov         lr, #0
  00030	e3811e1a	 orr         r1, r1, #0x1A, 28
  00034	e3a03004	 mov         r3, #4
  00038	e28d2010	 add         r2, sp, #0x10
  0003c	e58de00c	 str         lr, [sp, #0xC]
  00040	e58de008	 str         lr, [sp, #8]
  00044	e58de004	 str         lr, [sp, #4]
  00048	e58de000	 str         lr, [sp]
  0004c	eb000000	 bl          DeviceIoControl

; 140  :         
; 141  :     return TRUE;

  00050	e3a00001	 mov         r0, #1

; 142  : }

  00054	e28dd014	 add         sp, sp, #0x14
  00058	e89d6000	 ldmia       sp, {sp, lr}
  0005c	e12fff1e	 bx          lr
  00060		 |$LN6@ProfileSdr|
  00060		 |$LN7@ProfileSdr|
  00060	00000000	 DCD         |??_C@_13KHDBCPJB@?$AAs?$AA?$AA@|
  00064		 |$M38890|

			 ENDP  ; |?ProfileSdrcStall@@YAHKQAPAGP6AXPAGZZ@Z|, ProfileSdrcStall

	EXPORT	|?ProfileWakeupAccuracy@@YAHKQAPAGP6AXPAGZZ@Z| ; ProfileWakeupAccuracy

  00000			 AREA	 |.pdata|, PDATA
|$T38904| DCD	|$LN5@ProfileWak|
	DCD	0x40002204
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ProfileWakeupAccuracy@@YAHKQAPAGP6AXPAGZZ@Z| PROC ; ProfileWakeupAccuracy

; 151  : {

  00000		 |$LN5@ProfileWak|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5010	 stmdb       sp!, {r4, r12, lr}
  0000c	e24dd018	 sub         sp, sp, #0x18
  00010		 |$M38901|
  00010	e1a04001	 mov         r4, r1

; 152  :     WAKEUPACCURACY_TEST_PARAMETERS    testParam;
; 153  : 
; 154  : 	UNREFERENCED_PARAMETER(pfnFmtPuts);
; 155  : 
; 156  :     // get option parameters
; 157  :     testParam._sleepPeriod = GetOptionLong((int*)&argc, args, 200, L"t");;

  00014	e59f3068	 ldr         r3, [pc, #0x68]
  00018	e3a020c8	 mov         r2, #0xC8
  0001c	e28d0024	 add         r0, sp, #0x24
  00020	eb000000	 bl          |?GetOptionLong@@YAJPAHQAPAGJPBG@Z|

; 158  :     testParam._numberOfSamples = GetOptionLong((int*)&argc, args, 100, L"s");

  00024	e59f3054	 ldr         r3, [pc, #0x54]
  00028	e1a02000	 mov         r2, r0
  0002c	e58d2014	 str         r2, [sp, #0x14]
  00030	e3a02064	 mov         r2, #0x64
  00034	e28d0024	 add         r0, sp, #0x24
  00038	e1a01004	 mov         r1, r4
  0003c	eb000000	 bl          |?GetOptionLong@@YAJPAHQAPAGJPBG@Z|
  00040	e58d0010	 str         r0, [sp, #0x10]

; 159  :         
; 160  :     DeviceIoControl(
; 161  :             GetProxyDriverHandle(), 
; 162  :             IOCTL_PROFILE_WAKEUPACCURACY, 
; 163  :             &testParam, 
; 164  :             sizeof(WAKEUPACCURACY_TEST_PARAMETERS), 
; 165  :             NULL, 
; 166  :             0, 
; 167  :             NULL, 
; 168  :             NULL
; 169  :             );

  00044	eb000000	 bl          |?GetProxyDriverHandle@@YAPAXXZ|
  00048	e3a0181e	 mov         r1, #0x1E, 16
  0004c	e3a0e000	 mov         lr, #0
  00050	e3811e1b	 orr         r1, r1, #0x1B, 28
  00054	e3a03008	 mov         r3, #8
  00058	e28d2010	 add         r2, sp, #0x10
  0005c	e58de00c	 str         lr, [sp, #0xC]
  00060	e58de008	 str         lr, [sp, #8]
  00064	e58de004	 str         lr, [sp, #4]
  00068	e58de000	 str         lr, [sp]
  0006c	eb000000	 bl          DeviceIoControl

; 170  :         
; 171  :     return TRUE;

  00070	e3a00001	 mov         r0, #1

; 172  : }

  00074	e28dd018	 add         sp, sp, #0x18
  00078	e89d6010	 ldmia       sp, {r4, sp, lr}
  0007c	e12fff1e	 bx          lr
  00080		 |$LN6@ProfileWak|
  00080		 |$LN7@ProfileWak|
  00080	00000000	 DCD         |??_C@_13KHDBCPJB@?$AAs?$AA?$AA@|
  00084		 |$LN8@ProfileWak|
  00084	00000000	 DCD         |??_C@_13DKOGBHCI@?$AAt?$AA?$AA@|
  00088		 |$M38902|

			 ENDP  ; |?ProfileWakeupAccuracy@@YAHKQAPAGP6AXPAGZZ@Z|, ProfileWakeupAccuracy

	END
