; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\platform\Z2170P\src\APP\common\utils.cxx
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|?IsOptionChar@@YAHG@Z|			; IsOptionChar
; File c:\wince600\platform\z2170p\src\app\common\utils.cxx

  00000			 AREA	 |.pdata|, PDATA
|$T32504| DCD	|$LN14@IsOptionCh|
	DCD	0x40001401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsOptionChar@@YAHG@Z| PROC		; IsOptionChar

; 20   : {

  00000		 |$LN14@IsOptionCh|
  00000	e24dd004	 sub         sp, sp, #4
  00004		 |$M32501|
  00004	e1a01000	 mov         r1, r0

; 21   :    const char acOptionChars[] = { _T('/'), _T('-') };

  00008	e3a0202d	 mov         r2, #0x2D
  0000c	e3a0302f	 mov         r3, #0x2F
  00010	e5cd2001	 strb        r2, [sp, #1]

; 22   :    const int nOptionChars = 2;
; 23   : 
; 24   :    for (int i = 0; i < nOptionChars; i++)   {

  00014	e3a02000	 mov         r2, #0
  00018	e5cd3000	 strb        r3, [sp]
  0001c	e28d0000	 add         r0, sp, #0
  00020		 |$LL4@IsOptionCh|

; 25   :       if (acOptionChars[i] == cInp) break;

  00020	e19230d0	 ldrsb       r3, [r2, +r0]
  00024	e1530001	 cmp         r3, r1
  00028	0a000002	 beq         |$LN10@IsOptionCh|
  0002c	e2822001	 add         r2, r2, #1
  00030	e3520002	 cmp         r2, #2
  00034	bafffff9	 blt         |$LL4@IsOptionCh|
  00038		 |$LN10@IsOptionCh|

; 26   :    }
; 27   :    return (i < nOptionChars);

  00038	e3520002	 cmp         r2, #2
  0003c	b3a00001	 movlt       r0, #1

; 28   : }

  00040	b28dd004	 addlt       sp, sp, #4

; 26   :    }
; 27   :    return (i < nOptionChars);

  00044	a3a00000	 movge       r0, #0

; 28   : }

  00048	a28dd004	 addge       sp, sp, #4
  0004c	e12fff1e	 bx          lr
  00050		 |$M32502|

			 ENDP  ; |?IsOptionChar@@YAHG@Z|, IsOptionChar

	EXPORT	|?GetOptionFlag@@YAHPAHQAPAGPBG@Z|	; GetOptionFlag
	IMPORT	|_wcsicmp|

  00000			 AREA	 |.pdata|, PDATA
|$T32525| DCD	|$LN19@GetOptionF|
	DCD	0x40002d01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetOptionFlag@@YAHPAHQAPAGPBG@Z| PROC ; GetOptionFlag

; 33   : {

  00000		 |$LN19@GetOptionF|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004		 |$M32522|
  00004	e1a0a002	 mov         r10, r2
  00008	e1a07001	 mov         r7, r1
  0000c	e1a04000	 mov         r4, r0

; 35   :    int i = 0;
; 36   : 
; 37   :    while (i < *pargc) {

  00010	e5943000	 ldr         r3, [r4]
  00014	e3a08000	 mov         r8, #0
  00018	e3a05000	 mov         r5, #0
  0001c	e3530000	 cmp         r3, #0
  00020	da000020	 ble         |$LN16@GetOptionF|

; 34   :    BOOL bResult = FALSE;

  00024	e1a06007	 mov         r6, r7
  00028		 |$LL8@GetOptionF|

; 38   :       if (IsOptionChar(argv[i][0])) {

  00028	e5969000	 ldr         r9, [r6]
  0002c	e1d900b0	 ldrh        r0, [r9]
  00030	eb000000	 bl          |?IsOptionChar@@YAHG@Z|
  00034	e3500000	 cmp         r0, #0
  00038	0a000004	 beq         |$LN5@GetOptionF|

; 39   :          if (_tcsicmp(&argv[i][1], szOption) == 0) {

  0003c	e1a0100a	 mov         r1, r10
  00040	e2890002	 add         r0, r9, #2
  00044	eb000000	 bl          _wcsicmp
  00048	e3500000	 cmp         r0, #0
  0004c	0a000005	 beq         |$LN13@GetOptionF|
  00050		 |$LN5@GetOptionF|

; 35   :    int i = 0;
; 36   : 
; 37   :    while (i < *pargc) {

  00050	e5943000	 ldr         r3, [r4]

; 41   :             break;
; 42   :          }
; 43   :       }
; 44   :       i++;

  00054	e2855001	 add         r5, r5, #1
  00058	e2866004	 add         r6, r6, #4
  0005c	e1550003	 cmp         r5, r3
  00060	bafffff0	 blt         |$LL8@GetOptionF|
  00064	ea00000f	 b           |$LN16@GetOptionF|
  00068		 |$LN13@GetOptionF|

; 45   :    }
; 46   : 
; 47   :    if (bResult) {
; 48   :       for (int j = i + 1; j < *pargc; j++) argv[j - 1] = argv[j];

  00068	e5943000	 ldr         r3, [r4]
  0006c	e2852001	 add         r2, r5, #1
  00070	e3a08001	 mov         r8, #1
  00074	e1520003	 cmp         r2, r3
  00078	aa000007	 bge         |$LN1@GetOptionF|

; 40   :             bResult = TRUE;

  0007c	e0871102	 add         r1, r7, r2, lsl #2
  00080		 |$LL3@GetOptionF|

; 45   :    }
; 46   : 
; 47   :    if (bResult) {
; 48   :       for (int j = i + 1; j < *pargc; j++) argv[j - 1] = argv[j];

  00080	e5913000	 ldr         r3, [r1]
  00084	e2822001	 add         r2, r2, #1
  00088	e5013004	 str         r3, [r1, #-4]
  0008c	e5943000	 ldr         r3, [r4]
  00090	e2811004	 add         r1, r1, #4
  00094	e1520003	 cmp         r2, r3
  00098	bafffff8	 blt         |$LL3@GetOptionF|
  0009c		 |$LN1@GetOptionF|

; 49   :       (*pargc)--;

  0009c	e5943000	 ldr         r3, [r4]
  000a0	e2433001	 sub         r3, r3, #1
  000a4	e5843000	 str         r3, [r4]
  000a8		 |$LN16@GetOptionF|

; 50   :    }
; 51   :    return bResult;
; 52   : }

  000a8	e1a00008	 mov         r0, r8
  000ac	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  000b0	e12fff1e	 bx          lr
  000b4		 |$M32523|

			 ENDP  ; |?GetOptionFlag@@YAHPAHQAPAGPBG@Z|, GetOptionFlag

	EXPORT	|?GetOptionString@@YAPAGPAHQAPAGPBG@Z|	; GetOptionString
	IMPORT	|_wcsnicmp|
	IMPORT	|wcslen|

  00000			 AREA	 |.pdata|, PDATA
|$T32548| DCD	|$LN20@GetOptionS|
	DCD	0x40004101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetOptionString@@YAPAGPAHQAPAGPBG@Z| PROC ; GetOptionString

; 57   : {

  00000		 |$LN20@GetOptionS|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004		 |$M32545|
  00004	e1a0b002	 mov         r11, r2
  00008	e1a09001	 mov         r9, r1
  0000c	e1a04000	 mov         r4, r0

; 59   :    int i = 0;
; 60   :    int nRemove = 1;
; 61   : 
; 62   :    while (i < *pargc) {

  00010	e5943000	 ldr         r3, [r4]
  00014	e3a06000	 mov         r6, #0
  00018	e3a05000	 mov         r5, #0
  0001c	e3530000	 cmp         r3, #0
  00020	e3a07001	 mov         r7, #1
  00024	da000033	 ble         |$LN17@GetOptionS|

; 58   :    LPTSTR szResult = NULL;

  00028	e1a08009	 mov         r8, r9
  0002c		 |$LL9@GetOptionS|

; 63   :       if (IsOptionChar(argv[i][0])) {

  0002c	e598a000	 ldr         r10, [r8]
  00030	e1da00b0	 ldrh        r0, [r10]
  00034	eb000000	 bl          |?IsOptionChar@@YAHG@Z|
  00038	e3500000	 cmp         r0, #0
  0003c	0a000007	 beq         |$LN6@GetOptionS|

; 64   :          if (_tcsnicmp(&argv[i][1], szOption, _tcslen(szOption)) == 0) {

  00040	e1a0000b	 mov         r0, r11
  00044	eb000000	 bl          wcslen
  00048	e1a02000	 mov         r2, r0
  0004c	e28a0002	 add         r0, r10, #2
  00050	e1a0100b	 mov         r1, r11
  00054	eb000000	 bl          _wcsnicmp
  00058	e3500000	 cmp         r0, #0
  0005c	0a000005	 beq         |$LN14@GetOptionS|
  00060		 |$LN6@GetOptionS|

; 59   :    int i = 0;
; 60   :    int nRemove = 1;
; 61   : 
; 62   :    while (i < *pargc) {

  00060	e5943000	 ldr         r3, [r4]

; 69   :             }
; 70   :             break;
; 71   :          }
; 72   :       }
; 73   :       i++;

  00064	e2855001	 add         r5, r5, #1
  00068	e2888004	 add         r8, r8, #4
  0006c	e1550003	 cmp         r5, r3
  00070	baffffed	 blt         |$LL9@GetOptionS|
  00074	ea00001f	 b           |$LN17@GetOptionS|
  00078		 |$LN14@GetOptionS|

; 65   :             szResult = &argv[i][_tcslen(szOption) + 1];

  00078	e1a0000b	 mov         r0, r11
  0007c	eb000000	 bl          wcslen
  00080	e1a01009	 mov         r1, r9
  00084	e7b12105	 ldr         r2, [r1, +r5, lsl #2]!
  00088	e2803001	 add         r3, r0, #1
  0008c	e0826083	 add         r6, r2, r3, lsl #1

; 66   :             if (*szResult == _T('\0') && (i + 1) < *pargc) {

  00090	e1d630b0	 ldrh        r3, [r6]
  00094	e3530000	 cmp         r3, #0
  00098	1a000004	 bne         |$LN5@GetOptionS|
  0009c	e5942000	 ldr         r2, [r4]
  000a0	e2853001	 add         r3, r5, #1
  000a4	e1530002	 cmp         r3, r2

; 67   :                szResult = argv[i + 1];

  000a8	b5916004	 ldrlt       r6, [r1, #4]

; 68   :                nRemove++;

  000ac	b3a07002	 movlt       r7, #2
  000b0		 |$LN5@GetOptionS|

; 74   :    }
; 75   : 
; 76   :    if (szResult != NULL) {

  000b0	e3560000	 cmp         r6, #0
  000b4	0a00000f	 beq         |$LN17@GetOptionS|

; 77   :       for (int j = i + nRemove; j < *pargc; j++) argv[j - nRemove] = argv[j];

  000b8	e5943000	 ldr         r3, [r4]
  000bc	e0872005	 add         r2, r7, r5
  000c0	e1520003	 cmp         r2, r3
  000c4	aa000008	 bge         |$LN1@GetOptionS|
  000c8	e0423007	 sub         r3, r2, r7
  000cc	e0891103	 add         r1, r9, r3, lsl #2
  000d0	e0890102	 add         r0, r9, r2, lsl #2
  000d4		 |$LL3@GetOptionS|
  000d4	e4903004	 ldr         r3, [r0], #4
  000d8	e2822001	 add         r2, r2, #1
  000dc	e4813004	 str         r3, [r1], #4
  000e0	e5943000	 ldr         r3, [r4]
  000e4	e1520003	 cmp         r2, r3
  000e8	bafffff9	 blt         |$LL3@GetOptionS|
  000ec		 |$LN1@GetOptionS|

; 78   :       (*pargc) -= nRemove;

  000ec	e5943000	 ldr         r3, [r4]
  000f0	e0433007	 sub         r3, r3, r7
  000f4	e5843000	 str         r3, [r4]
  000f8		 |$LN17@GetOptionS|

; 79   :    }
; 80   :    return szResult;
; 81   : }

  000f8	e1a00006	 mov         r0, r6
  000fc	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00100	e12fff1e	 bx          lr
  00104		 |$M32546|

			 ENDP  ; |?GetOptionString@@YAPAGPAHQAPAGPBG@Z|, GetOptionString

	EXPORT	|?GetOptionLong@@YAJPAHQAPAGJPBG@Z|	; GetOptionLong

  00000			 AREA	 |.pdata|, PDATA
|$T32567| DCD	|$LN24@GetOptionL|
	DCD	0x40003701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetOptionLong@@YAJPAHQAPAGJPBG@Z| PROC ; GetOptionLong

; 86   : {

  00000		 |$LN24@GetOptionL|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M32564|
  00004	e1a04002	 mov         r4, r2

; 87   :    LPTSTR szValue = NULL;
; 88   :    LONG nResult = 0;
; 89   :    INT nBase = 10;
; 90   :    BOOL bMinus = FALSE;
; 91   : 
; 92   :    szValue = GetOptionString(pargc, argv, szOption);

  00008	e1a02003	 mov         r2, r3
  0000c	e3a0500a	 mov         r5, #0xA
  00010	e3a06000	 mov         r6, #0
  00014	eb000000	 bl          |?GetOptionString@@YAPAGPAHQAPAGPBG@Z|
  00018	e3500000	 cmp         r0, #0

; 93   :    if (szValue == NULL) {
; 94   :       nResult = lDefault;

  0001c	0a00002b	 beq         |$cleanUp$32423|

; 95   :       goto cleanUp;
; 96   :    }
; 97   : 
; 98   :    // Check minus sign
; 99   :    if (*szValue == _T('-')) {

  00020	e1d030b0	 ldrh        r3, [r0]
  00024	e353002d	 cmp         r3, #0x2D

; 100  :       bMinus = TRUE;
; 101  :       szValue++;

  00028	02800002	 addeq       r0, r0, #2

; 102  :    }
; 103  : 
; 104  :    // And plus sign
; 105  :    if (*szValue == _T('+')) szValue++;

  0002c	e1d030b0	 ldrh        r3, [r0]
  00030	03a06001	 moveq       r6, #1
  00034	e353002b	 cmp         r3, #0x2B
  00038	02800002	 addeq       r0, r0, #2

; 106  : 
; 107  :    if (
; 108  :       *szValue == _T('0') && 
; 109  :       (*(szValue + 1) == _T('x') || *(szValue + 1) == _T('X'))
; 110  :    ) {

  0003c	e1d030b0	 ldrh        r3, [r0]
  00040	e3530030	 cmp         r3, #0x30
  00044	1a000006	 bne         |$LN13@GetOptionL|
  00048	e1d030b2	 ldrh        r3, [r0, #2]
  0004c	e3530078	 cmp         r3, #0x78
  00050	0a000001	 beq         |$LN12@GetOptionL|
  00054	e3530058	 cmp         r3, #0x58
  00058	1a000001	 bne         |$LN13@GetOptionL|
  0005c		 |$LN12@GetOptionL|

; 111  :       nBase = 16;

  0005c	e3a05010	 mov         r5, #0x10

; 112  :       szValue += 2;

  00060	e2800004	 add         r0, r0, #4
  00064		 |$LN13@GetOptionL|

; 113  :    }
; 114  : 
; 115  :    nResult = 0;

  00064	e3a04000	 mov         r4, #0
  00068		 |$LL11@GetOptionL|

; 116  :    for(;;) {
; 117  :       if (*szValue >= _T('0') && *szValue <= _T('9')) {

  00068	e1d030b0	 ldrh        r3, [r0]
  0006c	e3530030	 cmp         r3, #0x30
  00070	3a000004	 bcc         |$LN9@GetOptionL|
  00074	e3530039	 cmp         r3, #0x39

; 118  :          nResult = nResult * nBase + (*szValue - _T('0'));

  00078	90233495	 mlals       r3, r5, r4, r3

; 119  :          szValue++;

  0007c	92800002	 addls       r0, r0, #2
  00080	92434030	 subls       r4, r3, #0x30
  00084	9afffff7	 bls         |$LL11@GetOptionL|
  00088		 |$LN9@GetOptionL|

; 120  :       } else if (nBase == 16) {

  00088	e3550010	 cmp         r5, #0x10
  0008c	1a00000d	 bne         |$LN4@GetOptionL|

; 121  :          if (*szValue >= _T('a') && *szValue <= _T('f')) {

  00090	e3530061	 cmp         r3, #0x61
  00094	3a000004	 bcc         |$LN6@GetOptionL|
  00098	e3530066	 cmp         r3, #0x66

; 122  :             nResult = nResult * nBase + (*szValue - _T('a') + 10);

  0009c	90833204	 addls       r3, r3, r4, lsl #4
  000a0	92434057	 subls       r4, r3, #0x57

; 126  :             szValue++;

  000a4	92800002	 addls       r0, r0, #2
  000a8	9affffee	 bls         |$LL11@GetOptionL|
  000ac		 |$LN6@GetOptionL|

; 123  :             szValue++;
; 124  :          } else if (*szValue >= _T('A') && *szValue <= _T('F')) {

  000ac	e3530041	 cmp         r3, #0x41
  000b0	3a000004	 bcc         |$LN4@GetOptionL|
  000b4	e3530046	 cmp         r3, #0x46

; 125  :             nResult = nResult * nBase + (*szValue - _T('A') + 10);

  000b8	90833204	 addls       r3, r3, r4, lsl #4
  000bc	92434037	 subls       r4, r3, #0x37

; 126  :             szValue++;

  000c0	92800002	 addls       r0, r0, #2
  000c4	9affffe7	 bls         |$LL11@GetOptionL|
  000c8		 |$LN4@GetOptionL|

; 127  :          } else {
; 128  :             break;
; 129  :          }
; 130  :       } else {
; 131  :          break;
; 132  :       }
; 133  :    }
; 134  : 
; 135  :    if (bMinus) nResult = -nResult;

  000c8	e3560000	 cmp         r6, #0
  000cc	12644000	 rsbne       r4, r4, #0
  000d0		 |$cleanUp$32423|

; 136  : 
; 137  : cleanUp:
; 138  :    return nResult;
; 139  : }

  000d0	e1a00004	 mov         r0, r4
  000d4	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000d8	e12fff1e	 bx          lr
  000dc		 |$M32565|

			 ENDP  ; |?GetOptionLong@@YAJPAHQAPAGJPBG@Z|, GetOptionLong

	EXPORT	|?CommandLineToArgs@@YAXQAGPAHQAPAG@Z|	; CommandLineToArgs
	IMPORT	|iswctype|

  00000			 AREA	 |.pdata|, PDATA
|$T32593| DCD	|$LN31@CommandLin|
	DCD	0x40003e01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CommandLineToArgs@@YAXQAGPAHQAPAG@Z| PROC ; CommandLineToArgs

; 144  : {

  00000		 |$LN31@CommandLin|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004		 |$M32590|
  00004	e1a07002	 mov         r7, r2
  00008	e1a05001	 mov         r5, r1
  0000c	e1b04000	 movs        r4, r0

; 145  :    int i, nArgc = 0;

  00010	e3a09000	 mov         r9, #0

; 146  :    BOOL bInQuotes = FALSE;
; 147  :    TCHAR *p = szCommandLine;
; 148  : 
; 149  :    if (szCommandLine == NULL || argc == NULL || argv == NULL) return;

  00014	0a000035	 beq         |$LN13@CommandLin|
  00018	e3550000	 cmp         r5, #0
  0001c	0a000033	 beq         |$LN13@CommandLin|
  00020	e3570000	 cmp         r7, #0
  00024	0a000031	 beq         |$LN13@CommandLin|

; 150  : 
; 151  :    for (i = 0; i < *argc; i++) {

  00028	e5953000	 ldr         r3, [r5]
  0002c	e3a06000	 mov         r6, #0
  00030	e3530000	 cmp         r3, #0
  00034	da00002c	 ble         |$LN26@CommandLin|
  00038	e3a0a000	 mov         r10, #0
  0003c		 |$LL12@CommandLin|

; 152  :         
; 153  :       // Clear our quote flag
; 154  :       bInQuotes = FALSE;
; 155  : 
; 156  :       // Move past and zero out any leading whitespace
; 157  :       while (*p && _istspace(*p)) *(p++) = _T('\0');

  0003c	e3a08000	 mov         r8, #0
  00040	ea000005	 b           |$LN28@CommandLin|
  00044		 |$LL9@CommandLin|
  00044	e1d400b0	 ldrh        r0, [r4]
  00048	e3a01008	 mov         r1, #8
  0004c	eb000000	 bl          iswctype
  00050	e3500000	 cmp         r0, #0
  00054	0a000003	 beq         |$LN25@CommandLin|
  00058	e0c4a0b2	 strh        r10, [r4], #2
  0005c		 |$LN28@CommandLin|
  0005c	e1d430b0	 ldrh        r3, [r4]
  00060	e3530000	 cmp         r3, #0
  00064	1afffff6	 bne         |$LL9@CommandLin|
  00068		 |$LN25@CommandLin|

; 158  : 
; 159  :       // If the next character is a quote, move over it and remember it
; 160  :       if (*p == _T('\"')) {

  00068	e1d430b0	 ldrh        r3, [r4]
  0006c	e3530022	 cmp         r3, #0x22

; 161  :         *(p++) = _T('\0');

  00070	00c4a0b2	 streqh      r10, [r4], #2

; 162  :         bInQuotes = TRUE;

  00074	03a08001	 moveq       r8, #1

; 163  :       }
; 164  : 
; 165  :       // Point the current argument to our current location
; 166  :       argv[i] = p;

  00078	e5874000	 str         r4, [r7]

; 167  : 
; 168  :       // If this argument contains some text, then update our argument count
; 169  :       if (*p != _T('\0')) nArgc = i + 1;

  0007c	e1d430b0	 ldrh        r3, [r4]
  00080	e3530000	 cmp         r3, #0
  00084	12869001	 addne       r9, r6, #1

; 170  : 
; 171  :       // Move over valid text of this argument.
; 172  :       while (*p != _T('\0')) {

  00088	e3530000	 cmp         r3, #0
  0008c	0a00000e	 beq         |$LN4@CommandLin|
  00090		 |$LL5@CommandLin|

; 173  :          if (_istspace(*p) || (bInQuotes && (*p == _T('\"')))) {

  00090	e1d400b0	 ldrh        r0, [r4]
  00094	e3a01008	 mov         r1, #8
  00098	eb000000	 bl          iswctype
  0009c	e3500000	 cmp         r0, #0
  000a0	1a000008	 bne         |$LN20@CommandLin|
  000a4	e3580000	 cmp         r8, #0
  000a8	0a000002	 beq         |$LN3@CommandLin|
  000ac	e1d430b0	 ldrh        r3, [r4]
  000b0	e3530022	 cmp         r3, #0x22
  000b4	0a000003	 beq         |$LN20@CommandLin|
  000b8		 |$LN3@CommandLin|

; 170  : 
; 171  :       // Move over valid text of this argument.
; 172  :       while (*p != _T('\0')) {

  000b8	e1f430b2	 ldrh        r3, [r4, #2]!
  000bc	e3530000	 cmp         r3, #0
  000c0	1afffff2	 bne         |$LL5@CommandLin|

; 175  :             break;
; 176  :          }
; 177  :          p++;
; 178  :       }
; 179  :       
; 180  :       // If reach end of string break;
; 181  :       if (*p == _T('\0')) break;

  000c4	ea000000	 b           |$LN4@CommandLin|
  000c8		 |$LN20@CommandLin|

; 174  :             *(p++) = _T('\0');

  000c8	e0c4a0b2	 strh        r10, [r4], #2
  000cc		 |$LN4@CommandLin|

; 175  :             break;
; 176  :          }
; 177  :          p++;
; 178  :       }
; 179  :       
; 180  :       // If reach end of string break;
; 181  :       if (*p == _T('\0')) break;

  000cc	e1d430b0	 ldrh        r3, [r4]
  000d0	e3530000	 cmp         r3, #0
  000d4	0a000004	 beq         |$LN26@CommandLin|
  000d8	e5953000	 ldr         r3, [r5]
  000dc	e2866001	 add         r6, r6, #1
  000e0	e2877004	 add         r7, r7, #4
  000e4	e1560003	 cmp         r6, r3
  000e8	baffffd3	 blt         |$LL12@CommandLin|
  000ec		 |$LN26@CommandLin|

; 182  :    }
; 183  :    *argc = nArgc;

  000ec	e5859000	 str         r9, [r5]
  000f0		 |$LN13@CommandLin|

; 184  : }

  000f0	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  000f4	e12fff1e	 bx          lr
  000f8		 |$M32591|

			 ENDP  ; |?CommandLineToArgs@@YAXQAGPAHQAPAG@Z|, CommandLineToArgs

	END
