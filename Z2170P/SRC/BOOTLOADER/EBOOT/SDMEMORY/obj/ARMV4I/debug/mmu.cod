; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\Z2170P\SRC\BOOTLOADER\EBOOT\mmu.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|??_C@_1EE@KGKCAFPP@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAU?$AAn?$AAK?$AAn?$AAo?$AAw?$AAn?$AA?5?$AAC?$AAP?$AAU?$AA?5?$AAf?$AAa?$AAm?$AAi?$AAl?$AAy?$AA?3?$AA?$CF?$AAd?$AA?4?$AA?4?$AA?4?$AA?4?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|OALPAtoVA|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|g_oalAddressTable|
	IMPORT	|g_oalAddressTableHynix|
	IMPORT	|g_CPUFamily|
; File c:\wince600\platform\z2170p\src\bootloader\eboot\mmu.c

  00000			 AREA	 |.pdata|, PDATA
|$T43090| DCD	|$LN14@OALPAtoVA|
	DCD	0x40005604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@KGKCAFPP@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAU?$AAn?$AAK?$AAn?$AAo?$AAw?$AAn?$AA?5?$AAC?$AAP?$AAU?$AA?5?$AAf?$AAa?$AAm?$AAi?$AAl?$AAy?$AA?3?$AA?$CF?$AAd?$AA?4?$AA?4?$AA?4?$AA?4?$AA?$AN@| DCB "I"
	DCB	0x0, "N", 0x0, "F", 0x0, "O", 0x0, ":", 0x0, " ", 0x0, "U"
	DCB	0x0, "n", 0x0, "K", 0x0, "n", 0x0, "o", 0x0, "w", 0x0, "n"
	DCB	0x0, " ", 0x0, "C", 0x0, "P", 0x0, "U", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "m", 0x0, "i", 0x0, "l", 0x0, "y", 0x0, ":"
	DCB	0x0, "%", 0x0, "d", 0x0, ".", 0x0, ".", 0x0, ".", 0x0, "."
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALPAtoVA| PROC

; 56   : {

  00000		 |$LN14@OALPAtoVA|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M43087|

; 57   :     OAL_ADDRESS_TABLE *pTable = NULL;    

  00010	e3a03000	 mov         r3, #0
  00014	e58d3004	 str         r3, [sp, #4]

; 58   :     VOID *va = NULL;

  00018	e3a03000	 mov         r3, #0
  0001c	e58d3000	 str         r3, [sp]

; 59   : 
; 60   :     if(g_CPUFamily == CPU_FAMILY_DM37XX)

  00020	e59f3128	 ldr         r3, [pc, #0x128]
  00024	e5933000	 ldr         r3, [r3]
  00028	e3530001	 cmp         r3, #1
  0002c	1a000002	 bne         |$LN9@OALPAtoVA|

; 61   :     {
; 62   :         pTable =   g_oalAddressTableHynix; 

  00030	e59f311c	 ldr         r3, [pc, #0x11C]
  00034	e58d3004	 str         r3, [sp, #4]
  00038	ea00000c	 b           |$LN8@OALPAtoVA|
  0003c		 |$LN9@OALPAtoVA|

; 63   :     }
; 64   :     else if (g_CPUFamily == CPU_FAMILY_OMAP35XX)

  0003c	e59f310c	 ldr         r3, [pc, #0x10C]
  00040	e5933000	 ldr         r3, [r3]
  00044	e3530000	 cmp         r3, #0
  00048	1a000002	 bne         |$LN7@OALPAtoVA|

; 65   :     {
; 66   :         pTable =   g_oalAddressTable; 

  0004c	e59f30f4	 ldr         r3, [pc, #0xF4]
  00050	e58d3004	 str         r3, [sp, #4]

; 67   :     }
; 68   :     else

  00054	ea000005	 b           |$LN6@OALPAtoVA|
  00058		 |$LN7@OALPAtoVA|

; 69   :     {
; 70   :         OALLog(L"INFO: UnKnown CPU family:%d....\r\n", g_CPUFamily);

  00058	e59f30f0	 ldr         r3, [pc, #0xF0]
  0005c	e5931000	 ldr         r1, [r3]
  00060	e59f00e4	 ldr         r0, [pc, #0xE4]
  00064	eb000000	 bl          NKDbgPrintfW

; 71   :         pTable =   g_oalAddressTable; 

  00068	e59f30d8	 ldr         r3, [pc, #0xD8]
  0006c	e58d3004	 str         r3, [sp, #4]
  00070		 |$LN6@OALPAtoVA|
  00070		 |$LN8@OALPAtoVA|
  00070		 |$LN5@OALPAtoVA|

; 72   :     }
; 73   :     // Search the table for address range
; 74   :     while (pTable->size != 0) {

  00070	e59d3004	 ldr         r3, [sp, #4]
  00074	e2833008	 add         r3, r3, #8
  00078	e5933000	 ldr         r3, [r3]
  0007c	e3530000	 cmp         r3, #0
  00080	0a000016	 beq         |$LN4@OALPAtoVA|

; 75   :         if (
; 76   :             pa >= pTable->PA && 
; 77   :             pa <= (pTable->PA + (pTable->size << 20) - 1)
; 78   :         ) break;                      // match found 

  00084	e59d3004	 ldr         r3, [sp, #4]
  00088	e2833004	 add         r3, r3, #4
  0008c	e59d2014	 ldr         r2, [sp, #0x14]
  00090	e5933000	 ldr         r3, [r3]
  00094	e1520003	 cmp         r2, r3
  00098	3a00000c	 bcc         |$LN3@OALPAtoVA|
  0009c	e59d3004	 ldr         r3, [sp, #4]
  000a0	e2831004	 add         r1, r3, #4
  000a4	e59d3004	 ldr         r3, [sp, #4]
  000a8	e2833008	 add         r3, r3, #8
  000ac	e5933000	 ldr         r3, [r3]
  000b0	e1a02a03	 mov         r2, r3, lsl #20
  000b4	e5913000	 ldr         r3, [r1]
  000b8	e0833002	 add         r3, r3, r2
  000bc	e2432001	 sub         r2, r3, #1
  000c0	e59d3014	 ldr         r3, [sp, #0x14]
  000c4	e1530002	 cmp         r3, r2
  000c8	8a000000	 bhi         |$LN3@OALPAtoVA|
  000cc	ea000003	 b           |$LN4@OALPAtoVA|
  000d0		 |$LN3@OALPAtoVA|

; 79   :         pTable++;

  000d0	e59d3004	 ldr         r3, [sp, #4]
  000d4	e283300c	 add         r3, r3, #0xC
  000d8	e58d3004	 str         r3, [sp, #4]

; 80   :     }

  000dc	eaffffe3	 b           |$LN5@OALPAtoVA|
  000e0		 |$LN4@OALPAtoVA|

; 81   : 
; 82   :     // If address table entry is valid compute the VA
; 83   :     if (pTable->size != 0) {

  000e0	e59d3004	 ldr         r3, [sp, #4]
  000e4	e2833008	 add         r3, r3, #8
  000e8	e5933000	 ldr         r3, [r3]
  000ec	e3530000	 cmp         r3, #0
  000f0	0a00000e	 beq         |$LN2@OALPAtoVA|

; 84   :         va = (VOID *)(pTable->CA + (pa - pTable->PA));

  000f4	e59d3004	 ldr         r3, [sp, #4]
  000f8	e2833004	 add         r3, r3, #4
  000fc	e59d2014	 ldr         r2, [sp, #0x14]
  00100	e5933000	 ldr         r3, [r3]
  00104	e0422003	 sub         r2, r2, r3
  00108	e59d3004	 ldr         r3, [sp, #4]
  0010c	e5933000	 ldr         r3, [r3]
  00110	e0833002	 add         r3, r3, r2
  00114	e58d3000	 str         r3, [sp]

; 85   :         // If VA is uncached, set the uncached bit
; 86   :         if (!cached) va = (VOID*) ((DWORD) va | OAL_MEMORY_CACHE_BIT);

  00118	e59d3018	 ldr         r3, [sp, #0x18]
  0011c	e3530000	 cmp         r3, #0
  00120	1a000002	 bne         |$LN1@OALPAtoVA|
  00124	e59d3000	 ldr         r3, [sp]
  00128	e3833202	 orr         r3, r3, #2, 4
  0012c	e58d3000	 str         r3, [sp]
  00130		 |$LN1@OALPAtoVA|
  00130		 |$LN2@OALPAtoVA|

; 87   :     }
; 88   : 
; 89   :     return va;

  00130	e59d3000	 ldr         r3, [sp]
  00134	e58d3008	 str         r3, [sp, #8]

; 90   : }

  00138	e59d0008	 ldr         r0, [sp, #8]
  0013c	e28dd00c	 add         sp, sp, #0xC
  00140	e89d6000	 ldmia       sp, {sp, lr}
  00144	e12fff1e	 bx          lr
  00148		 |$LN15@OALPAtoVA|
  00148		 |$LN16@OALPAtoVA|
  00148	00000000	 DCD         |g_oalAddressTable|
  0014c		 |$LN17@OALPAtoVA|
  0014c	00000000	 DCD         |??_C@_1EE@KGKCAFPP@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAU?$AAn?$AAK?$AAn?$AAo?$AAw?$AAn?$AA?5?$AAC?$AAP?$AAU?$AA?5?$AAf?$AAa?$AAm?$AAi?$AAl?$AAy?$AA?3?$AA?$CF?$AAd?$AA?4?$AA?4?$AA?4?$AA?4?$AA?$AN@|
  00150		 |$LN18@OALPAtoVA|
  00150	00000000	 DCD         |g_CPUFamily|
  00154		 |$LN19@OALPAtoVA|
  00154	00000000	 DCD         |g_oalAddressTableHynix|
  00158		 |$M43088|

			 ENDP  ; |OALPAtoVA|

	EXPORT	|OALVAtoPA|

  00000			 AREA	 |.pdata|, PDATA
|$T43103| DCD	|$LN15@OALVAtoPA|
	DCD	0x40005b04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALVAtoPA| PROC

; 105  : {

  00000		 |$LN15@OALVAtoPA|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd010	 sub         sp, sp, #0x10
  00010		 |$M43100|

; 106  :     OAL_ADDRESS_TABLE *pTable = NULL;

  00010	e3a03000	 mov         r3, #0
  00014	e58d3008	 str         r3, [sp, #8]

; 107  :     UINT32 va = (UINT32)pVA;

  00018	e59d3018	 ldr         r3, [sp, #0x18]
  0001c	e58d3000	 str         r3, [sp]

; 108  :     UINT32 pa = 0;

  00020	e3a03000	 mov         r3, #0
  00024	e58d3004	 str         r3, [sp, #4]

; 109  : 
; 110  :     if(g_CPUFamily == CPU_FAMILY_DM37XX)

  00028	e59f3134	 ldr         r3, [pc, #0x134]
  0002c	e5933000	 ldr         r3, [r3]
  00030	e3530001	 cmp         r3, #1
  00034	1a000002	 bne         |$LN10@OALVAtoPA|

; 111  :     {
; 112  :         pTable =   g_oalAddressTableHynix; 

  00038	e59f3128	 ldr         r3, [pc, #0x128]
  0003c	e58d3008	 str         r3, [sp, #8]
  00040	ea00000c	 b           |$LN9@OALVAtoPA|
  00044		 |$LN10@OALVAtoPA|

; 113  :     }
; 114  :     else if (g_CPUFamily == CPU_FAMILY_OMAP35XX)

  00044	e59f3118	 ldr         r3, [pc, #0x118]
  00048	e5933000	 ldr         r3, [r3]
  0004c	e3530000	 cmp         r3, #0
  00050	1a000002	 bne         |$LN8@OALVAtoPA|

; 115  :     {
; 116  :         pTable =   g_oalAddressTable; 

  00054	e59f3100	 ldr         r3, [pc, #0x100]
  00058	e58d3008	 str         r3, [sp, #8]

; 117  :     }
; 118  :     else

  0005c	ea000005	 b           |$LN7@OALVAtoPA|
  00060		 |$LN8@OALVAtoPA|

; 119  :     {
; 120  :         OALLog(L"INFO: UnKnown CPU family:%d....\r\n", g_CPUFamily);

  00060	e59f30fc	 ldr         r3, [pc, #0xFC]
  00064	e5931000	 ldr         r1, [r3]
  00068	e59f00f0	 ldr         r0, [pc, #0xF0]
  0006c	eb000000	 bl          NKDbgPrintfW

; 121  :         pTable =   g_oalAddressTable; 

  00070	e59f30e4	 ldr         r3, [pc, #0xE4]
  00074	e58d3008	 str         r3, [sp, #8]
  00078		 |$LN7@OALVAtoPA|
  00078		 |$LN9@OALVAtoPA|

; 122  :     }
; 123  : 
; 124  :     // Virtual address must be in CACHED or UNCACHED regions.
; 125  :     if (va < 0x80000000 || va >= 0xC0000000)

  00078	e59d3000	 ldr         r3, [sp]
  0007c	e3530102	 cmp         r3, #2, 2
  00080	3a000002	 bcc         |$LN5@OALVAtoPA|
  00084	e59d3000	 ldr         r3, [sp]
  00088	e3530103	 cmp         r3, #3, 2
  0008c	3a000000	 bcc         |$LN6@OALVAtoPA|
  00090		 |$LN5@OALVAtoPA|

; 126  : 	{
; 127  :         goto cleanUp;

  00090	ea00002b	 b           |$cleanUp$43064|
  00094		 |$LN6@OALVAtoPA|

; 128  :     }
; 129  : 
; 130  :     // Address must be cached, as entries in OEMAddressTable are cached address.
; 131  :     va = va&~OAL_MEMORY_CACHE_BIT;

  00094	e59d2000	 ldr         r2, [sp]
  00098	e3e03202	 mvn         r3, #2, 4
  0009c	e0023003	 and         r3, r2, r3
  000a0	e58d3000	 str         r3, [sp]
  000a4		 |$LN4@OALVAtoPA|

; 132  : 
; 133  :     // Search the table for address range
; 134  :     while (pTable->size != 0) {

  000a4	e59d3008	 ldr         r3, [sp, #8]
  000a8	e2833008	 add         r3, r3, #8
  000ac	e5933000	 ldr         r3, [r3]
  000b0	e3530000	 cmp         r3, #0
  000b4	0a000014	 beq         |$LN3@OALVAtoPA|

; 135  :         if (va >= pTable->CA && va <= pTable->CA + (pTable->size << 20) - 1) {

  000b8	e59d2000	 ldr         r2, [sp]
  000bc	e59d3008	 ldr         r3, [sp, #8]
  000c0	e5933000	 ldr         r3, [r3]
  000c4	e1520003	 cmp         r2, r3
  000c8	3a00000b	 bcc         |$LN2@OALVAtoPA|
  000cc	e59d3008	 ldr         r3, [sp, #8]
  000d0	e2833008	 add         r3, r3, #8
  000d4	e5933000	 ldr         r3, [r3]
  000d8	e1a02a03	 mov         r2, r3, lsl #20
  000dc	e59d3008	 ldr         r3, [sp, #8]
  000e0	e5933000	 ldr         r3, [r3]
  000e4	e0833002	 add         r3, r3, r2
  000e8	e2432001	 sub         r2, r3, #1
  000ec	e59d3000	 ldr         r3, [sp]
  000f0	e1530002	 cmp         r3, r2
  000f4	8a000000	 bhi         |$LN2@OALVAtoPA|

; 136  :             break;

  000f8	ea000003	 b           |$LN3@OALVAtoPA|
  000fc		 |$LN2@OALVAtoPA|

; 137  :         }
; 138  :         pTable++;

  000fc	e59d3008	 ldr         r3, [sp, #8]
  00100	e283300c	 add         r3, r3, #0xC
  00104	e58d3008	 str         r3, [sp, #8]

; 139  :     }

  00108	eaffffe5	 b           |$LN4@OALVAtoPA|
  0010c		 |$LN3@OALVAtoPA|

; 140  : 
; 141  :     // If address table entry is valid compute the PA
; 142  :     if (pTable->size != 0) pa = pTable->PA + va - pTable->CA;

  0010c	e59d3008	 ldr         r3, [sp, #8]
  00110	e2833008	 add         r3, r3, #8
  00114	e5933000	 ldr         r3, [r3]
  00118	e3530000	 cmp         r3, #0
  0011c	0a000008	 beq         |$LN1@OALVAtoPA|
  00120	e59d3008	 ldr         r3, [sp, #8]
  00124	e2833004	 add         r3, r3, #4
  00128	e5932000	 ldr         r2, [r3]
  0012c	e59d3000	 ldr         r3, [sp]
  00130	e0822003	 add         r2, r2, r3
  00134	e59d3008	 ldr         r3, [sp, #8]
  00138	e5933000	 ldr         r3, [r3]
  0013c	e0423003	 sub         r3, r2, r3
  00140	e58d3004	 str         r3, [sp, #4]
  00144		 |$LN1@OALVAtoPA|
  00144		 |$cleanUp$43064|

; 143  : 
; 144  : cleanUp:
; 145  :     // Indicate physical address
; 146  :     return pa;

  00144	e59d3004	 ldr         r3, [sp, #4]
  00148	e58d300c	 str         r3, [sp, #0xC]

; 147  : }

  0014c	e59d000c	 ldr         r0, [sp, #0xC]
  00150	e28dd010	 add         sp, sp, #0x10
  00154	e89d6000	 ldmia       sp, {sp, lr}
  00158	e12fff1e	 bx          lr
  0015c		 |$LN16@OALVAtoPA|
  0015c		 |$LN17@OALVAtoPA|
  0015c	00000000	 DCD         |g_oalAddressTable|
  00160		 |$LN18@OALVAtoPA|
  00160	00000000	 DCD         |??_C@_1EE@KGKCAFPP@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAU?$AAn?$AAK?$AAn?$AAo?$AAw?$AAn?$AA?5?$AAC?$AAP?$AAU?$AA?5?$AAf?$AAa?$AAm?$AAi?$AAl?$AAy?$AA?3?$AA?$CF?$AAd?$AA?4?$AA?4?$AA?4?$AA?4?$AA?$AN@|
  00164		 |$LN19@OALVAtoPA|
  00164	00000000	 DCD         |g_CPUFamily|
  00168		 |$LN20@OALVAtoPA|
  00168	00000000	 DCD         |g_oalAddressTableHynix|
  0016c		 |$M43101|

			 ENDP  ; |OALVAtoPA|

	END
