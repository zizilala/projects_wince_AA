; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\Z2170P\SRC\BOOTLOADER\EBOOT\eth.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|EdbgDebugZone| [ DATA ]

  00000			 AREA	 |.bss|, NOINIT
|EdbgDebugZone| % 0x4

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|??_C@_1FK@GCLCJCHA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAE?$AAb?$AAo?$AAo?$AAt?$AAI?$AAn?$AAi?$AAt?$AAE?$AAt?$AAh?$AAe?$AAr?$AAT?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAr?$AAt?$AA?5?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@DBOGGMNK@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AA?$CK?$AA?$CK?$AA?$CK?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAN?$AAa?$AAm?$AAe?$AA?5?$AA?$CF?$AAS?$AA?5?$AA?$CK?$AA?$CK?$AA?$CK?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@FEAPGDEK@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAB?$AAo?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAu?$AAs?$AAe?$AAs?$AA?5?$AAM?$AAA?$AAC?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@FLKNKOOB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAo?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@ODLKKIGI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAo?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAD?$AAm@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HA@PBOCKLG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAo?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAd?$AAo?$AAe?$AAs?$AAn?$AA?8?$AAt?$AA?5?$AAe?$AAx?$AAi?$AAs?$AAt@| [ DATA ] ; `string'
	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|BLEthDownload|
	IMPORT	|EbootInitEtherTransport|
	IMPORT	|memset|
	IMPORT	|OALKitlCreateName|
	IMPORT	|gDevice_prefix|
	IMPORT	|OALKitlMACtoString|
	IMPORT	|memcpy|
	IMPORT	|OALVAtoPA|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|
	IMPORT	|OALKitlFindDevice|
	IMPORT	|__security_cookie|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_check_cookie|

  00004			 AREA	 |.bss|, NOINIT
|g_ethState| %	0x10010
; File c:\wince600\platform\z2170p\src\bootloader\eboot\eth.c

  00000			 AREA	 |.pdata|, PDATA
|$T46825| DCD	|$LN34@BLEthDownl|
	DCD	0xc000f604

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@GCLCJCHA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAE?$AAb?$AAo?$AAo?$AAt?$AAI?$AAn?$AAi?$AAt?$AAE?$AAt?$AAh?$AAe?$AAr?$AAT?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAr?$AAt?$AA?5?$AAc@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "E", 0x0, "b", 0x0, "o", 0x0, "o", 0x0, "t", 0x0, "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "E", 0x0, "t", 0x0, "h"
	DCB	0x0, "e", 0x0, "r", 0x0, "T", 0x0, "r", 0x0, "a", 0x0, "n"
	DCB	0x0, "s", 0x0, "p", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, " "
	DCB	0x0, "c", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@DBOGGMNK@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AA?$CK?$AA?$CK?$AA?$CK?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAN?$AAa?$AAm?$AAe?$AA?5?$AA?$CF?$AAS?$AA?5?$AA?$CK?$AA?$CK?$AA?$CK?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "N", 0x0, "F", 0x0, "O", 0x0, ":", 0x0, " ", 0x0, "*"
	DCB	0x0, "*", 0x0, "*", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "N", 0x0, "a"
	DCB	0x0, "m", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "S", 0x0, " "
	DCB	0x0, "*", 0x0, "*", 0x0, "*", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@FEAPGDEK@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAB?$AAo?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAu?$AAs?$AAe?$AAs?$AA?5?$AAM?$AAA?$AAC?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "I"
	DCB	0x0, "N", 0x0, "F", 0x0, "O", 0x0, ":", 0x0, " ", 0x0, "B"
	DCB	0x0, "o", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "d", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "u"
	DCB	0x0, "s", 0x0, "e", 0x0, "s", 0x0, " ", 0x0, "M", 0x0, "A"
	DCB	0x0, "C", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@FLKNKOOB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAo?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AAc@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "B", 0x0, "o", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "d"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " "
	DCB	0x0, "d", 0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, " "
	DCB	0x0, "c", 0x0, "a", 0x0, "l", 0x0, "l", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@ODLKKIGI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAo?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAD?$AAm@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "B", 0x0, "o", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "d"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " "
	DCB	0x0, "d", 0x0, "r", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "D"
	DCB	0x0, "m", 0x0, "a", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "l"
	DCB	0x0, "l", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@PBOCKLG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAo?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAd?$AAo?$AAe?$AAs?$AAn?$AA?8?$AAt?$AA?5?$AAe?$AAx?$AAi?$AAs?$AAt@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "B", 0x0, "o", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "d"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " "
	DCB	0x0, "d", 0x0, "o", 0x0, "e", 0x0, "s", 0x0, "n", 0x0, "'"
	DCB	0x0, "t", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, " ", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "i"
	DCB	0x0, "t", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "u"
	DCB	0x0, "n", 0x0, "s", 0x0, "u", 0x0, "p", 0x0, "p", 0x0, "o"
	DCB	0x0, "r", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.xdata|, DATA
|$T46821| DCD	0xffffff9c
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T46821|

  00008		 |BLEthDownload| PROC

; 54   : {

  00008		 |$LN34@BLEthDownl|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d0003	 stmdb       sp!, {r0, r1}
  00010	e92d5000	 stmdb       sp!, {r12, lr}
  00014	e24dd09c	 sub         sp, sp, #0x9C
  00018		 |$M46822|
  00018	e59f33bc	 ldr         r3, [pc, #0x3BC]
  0001c	e5933000	 ldr         r3, [r3]
  00020	e58d3048	 str         r3, [sp, #0x48]

; 55   :     UINT32 rc = (UINT32) BL_ERROR;

  00024	e3e03000	 mvn         r3, #0
  00028	e58d301c	 str         r3, [sp, #0x1C]

; 56   :     OAL_KITL_DEVICE *pDevice;
; 57   :     UINT32 subnetMask, *pLeaseTime, leaseTime = 0;

  0002c	e3a03000	 mov         r3, #0
  00030	e58d3024	 str         r3, [sp, #0x24]

; 58   :     UINT16 mac[3];
; 59   :     BOOL jumpToImage = FALSE;

  00034	e3a03000	 mov         r3, #0
  00038	e58d3020	 str         r3, [sp, #0x20]

; 60   :     UINT8 deviceId[OAL_KITL_ID_SIZE];
; 61   : 
; 62   : 
; 63   :     // Do any necessary initialization
; 64   :     switch (pConfig->bootDevLoc.IfcType) 
; 65   :         {
; 66   :         case Internal:
; 67   :             switch (pConfig->bootDevLoc.LogicalLoc)
; 68   :                 {
; 69   :                 case BSP_LAN9115_REGS_PA:
; 70   :                     // Nothing to do
; 71   :                     break;
; 72   :                 }
; 73   :             break;
; 74   :         }
; 75   : 
; 76   :     // Find boot/KITL device driver
; 77   :     pDevice = OALKitlFindDevice(&pConfig->bootDevLoc, pBootDevices);        

  0003c	e59d10a8	 ldr         r1, [sp, #0xA8]
  00040	e59d30a4	 ldr         r3, [sp, #0xA4]
  00044	e2830008	 add         r0, r3, #8
  00048	eb000000	 bl          OALKitlFindDevice
  0004c	e58d0068	 str         r0, [sp, #0x68]
  00050	e59d3068	 ldr         r3, [sp, #0x68]
  00054	e58d3018	 str         r3, [sp, #0x18]

; 78   :     if ((pDevice == NULL) || (pDevice->type != OAL_KITL_TYPE_ETH))

  00058	e59d3018	 ldr         r3, [sp, #0x18]
  0005c	e3530000	 cmp         r3, #0
  00060	0a000004	 beq         |$LN8@BLEthDownl|
  00064	e59d3018	 ldr         r3, [sp, #0x18]
  00068	e2833010	 add         r3, r3, #0x10
  0006c	e5933000	 ldr         r3, [r3]
  00070	e3530002	 cmp         r3, #2
  00074	0a00000b	 beq         |$LN9@BLEthDownl|
  00078		 |$LN8@BLEthDownl|

; 79   :         {
; 80   :         OALMSG(OAL_ERROR, (
; 81   :             L"ERROR: Boot device doesn't exist or it is unsupported\r\n"
; 82   :             ));

  00078	e59f3340	 ldr         r3, [pc, #0x340]
  0007c	e5933440	 ldr         r3, [r3, #0x440]
  00080	e3130001	 tst         r3, #1
  00084	0a000004	 beq         |$LN18@BLEthDownl|
  00088	e59f0348	 ldr         r0, [pc, #0x348]
  0008c	eb000000	 bl          NKDbgPrintfW
  00090	e3a03001	 mov         r3, #1
  00094	e58d306c	 str         r3, [sp, #0x6C]
  00098	ea000001	 b           |$LN19@BLEthDownl|
  0009c		 |$LN18@BLEthDownl|
  0009c	e3a03000	 mov         r3, #0
  000a0	e58d306c	 str         r3, [sp, #0x6C]
  000a4		 |$LN19@BLEthDownl|

; 83   :         goto cleanUp;

  000a4	ea0000bb	 b           |$cleanUp$46716|
  000a8		 |$LN9@BLEthDownl|

; 84   :         }
; 85   : 
; 86   :     // Get device driver
; 87   :     g_ethState.pDriver = (OAL_KITL_ETH_DRIVER*)pDevice->pDriver;

  000a8	e59d3018	 ldr         r3, [sp, #0x18]
  000ac	e2833014	 add         r3, r3, #0x14
  000b0	e5932000	 ldr         r2, [r3]
  000b4	e59f32fc	 ldr         r3, [pc, #0x2FC]
  000b8	e583200c	 str         r2, [r3, #0xC]

; 88   :     
; 89   :     // Call InitDmaBuffer if there is any
; 90   :     if (g_ethState.pDriver->pfnInitDmaBuffer != NULL)

  000bc	e59f32f4	 ldr         r3, [pc, #0x2F4]
  000c0	e593300c	 ldr         r3, [r3, #0xC]
  000c4	e2833004	 add         r3, r3, #4
  000c8	e5933000	 ldr         r3, [r3]
  000cc	e3530000	 cmp         r3, #0
  000d0	0a000018	 beq         |$LN7@BLEthDownl|

; 91   :         {
; 92   :         if (!g_ethState.pDriver->pfnInitDmaBuffer(
; 93   :                 (UINT32)g_ethState.buffer, sizeof(g_ethState.buffer)
; 94   :                 ))

  000d4	e3a01801	 mov         r1, #1, 16
  000d8	e59f32d8	 ldr         r3, [pc, #0x2D8]
  000dc	e2830010	 add         r0, r3, #0x10
  000e0	e59f32d0	 ldr         r3, [pc, #0x2D0]
  000e4	e593300c	 ldr         r3, [r3, #0xC]
  000e8	e2833004	 add         r3, r3, #4
  000ec	e5933000	 ldr         r3, [r3]
  000f0	e1a0e00f	 mov         lr, pc
  000f4	e12fff13	 bx          r3
  000f8	e58d0070	 str         r0, [sp, #0x70]
  000fc	e59d3070	 ldr         r3, [sp, #0x70]
  00100	e3530000	 cmp         r3, #0
  00104	1a00000b	 bne         |$LN6@BLEthDownl|

; 95   :             {
; 96   :             OALMSG(OAL_ERROR, (L"ERROR: "
; 97   :                 L"Boot device driver InitDmaBuffer call failed\r\n"
; 98   :                 ));

  00108	e59f32b0	 ldr         r3, [pc, #0x2B0]
  0010c	e5933440	 ldr         r3, [r3, #0x440]
  00110	e3130001	 tst         r3, #1
  00114	0a000004	 beq         |$LN20@BLEthDownl|
  00118	e59f02b4	 ldr         r0, [pc, #0x2B4]
  0011c	eb000000	 bl          NKDbgPrintfW
  00120	e3a03001	 mov         r3, #1
  00124	e58d3074	 str         r3, [sp, #0x74]
  00128	ea000001	 b           |$LN21@BLEthDownl|
  0012c		 |$LN20@BLEthDownl|
  0012c	e3a03000	 mov         r3, #0
  00130	e58d3074	 str         r3, [sp, #0x74]
  00134		 |$LN21@BLEthDownl|

; 99   :             goto cleanUp;

  00134	ea000097	 b           |$cleanUp$46716|
  00138		 |$LN6@BLEthDownl|
  00138		 |$LN7@BLEthDownl|

; 100  :             }
; 101  :         }      
; 102  : 
; 103  :     // RNDIS_MDD (public code) attempts to map devLoc.PhysicalLoc with
; 104  :     // NKCreateStaticMapping.  NKCreateStaticMapping requires a true
; 105  :     // physical address.  OALKitlFindDevice fills in devLoc.PhysicalLoc
; 106  :     // with the kernel mode virtual address which causes NKCreateStaticMapping
; 107  :     // to fail.
; 108  :     // Overwrite devLoc.PhysicalLoc with the actual physical address so 
; 109  :     // this function succeeds.  Note that all kitl transports need to 
; 110  :     // handle a true physical address in this location.
; 111  :     pConfig->bootDevLoc.PhysicalLoc = (PVOID)OALVAtoPA(pConfig->bootDevLoc.PhysicalLoc);

  00138	e59d30a4	 ldr         r3, [sp, #0xA4]
  0013c	e2833014	 add         r3, r3, #0x14
  00140	e5930000	 ldr         r0, [r3]
  00144	eb000000	 bl          OALVAtoPA
  00148	e58d0078	 str         r0, [sp, #0x78]
  0014c	e59d30a4	 ldr         r3, [sp, #0xA4]
  00150	e2832014	 add         r2, r3, #0x14
  00154	e59d3078	 ldr         r3, [sp, #0x78]
  00158	e5823000	 str         r3, [r2]

; 112  : 
; 113  :     // Call Init
; 114  : 	memcpy(mac,pConfig->mac,sizeof(mac));

  0015c	e3a02006	 mov         r2, #6
  00160	e59d30a4	 ldr         r3, [sp, #0xA4]
  00164	e2831066	 add         r1, r3, #0x66
  00168	e28d0040	 add         r0, sp, #0x40
  0016c	eb000000	 bl          memcpy

; 115  :     if (!g_ethState.pDriver->pfnInit(
; 116  :             pConfig->bootDevLoc.PhysicalLoc, pConfig->bootDevLoc.LogicalLoc, mac
; 117  :             ))

  00170	e28d2040	 add         r2, sp, #0x40
  00174	e59d30a4	 ldr         r3, [sp, #0xA4]
  00178	e2833010	 add         r3, r3, #0x10
  0017c	e5931000	 ldr         r1, [r3]
  00180	e59d30a4	 ldr         r3, [sp, #0xA4]
  00184	e2833014	 add         r3, r3, #0x14
  00188	e5930000	 ldr         r0, [r3]
  0018c	e59f3224	 ldr         r3, [pc, #0x224]
  00190	e593300c	 ldr         r3, [r3, #0xC]
  00194	e5933000	 ldr         r3, [r3]
  00198	e1a0e00f	 mov         lr, pc
  0019c	e12fff13	 bx          r3
  001a0	e58d007c	 str         r0, [sp, #0x7C]
  001a4	e59d307c	 ldr         r3, [sp, #0x7C]
  001a8	e3530000	 cmp         r3, #0
  001ac	1a00000b	 bne         |$LN5@BLEthDownl|

; 118  :         {
; 119  :         OALMSG(OAL_ERROR, (L"ERROR: "
; 120  :             L"Boot device driver Init call failed\r\n"
; 121  :             ));

  001b0	e59f3208	 ldr         r3, [pc, #0x208]
  001b4	e5933440	 ldr         r3, [r3, #0x440]
  001b8	e3130001	 tst         r3, #1
  001bc	0a000004	 beq         |$LN22@BLEthDownl|
  001c0	e59f0208	 ldr         r0, [pc, #0x208]
  001c4	eb000000	 bl          NKDbgPrintfW
  001c8	e3a03001	 mov         r3, #1
  001cc	e58d3080	 str         r3, [sp, #0x80]
  001d0	ea000001	 b           |$LN23@BLEthDownl|
  001d4		 |$LN22@BLEthDownl|
  001d4	e3a03000	 mov         r3, #0
  001d8	e58d3080	 str         r3, [sp, #0x80]
  001dc		 |$LN23@BLEthDownl|

; 122  :         goto cleanUp;

  001dc	ea00006d	 b           |$cleanUp$46716|
  001e0		 |$LN5@BLEthDownl|

; 123  :         }         
; 124  : 
; 125  :     OALMSG(OAL_INFO, (L"INFO: "
; 126  :         L"Boot device uses MAC %s\r\n", OALKitlMACtoString(mac)
; 127  :         ));

  001e0	e59f31d8	 ldr         r3, [pc, #0x1D8]
  001e4	e5933440	 ldr         r3, [r3, #0x440]
  001e8	e3130008	 tst         r3, #8
  001ec	0a000008	 beq         |$LN24@BLEthDownl|
  001f0	e28d0040	 add         r0, sp, #0x40
  001f4	eb000000	 bl          OALKitlMACtoString
  001f8	e58d0084	 str         r0, [sp, #0x84]
  001fc	e59d1084	 ldr         r1, [sp, #0x84]
  00200	e59f01c4	 ldr         r0, [pc, #0x1C4]
  00204	eb000000	 bl          NKDbgPrintfW
  00208	e3a03001	 mov         r3, #1
  0020c	e58d3088	 str         r3, [sp, #0x88]
  00210	ea000001	 b           |$LN25@BLEthDownl|
  00214		 |$LN24@BLEthDownl|
  00214	e3a03000	 mov         r3, #0
  00218	e58d3088	 str         r3, [sp, #0x88]
  0021c		 |$LN25@BLEthDownl|

; 128  : 
; 129  :     // Generate device name
; 130  :     OALKitlCreateName((CHAR *)gDevice_prefix, mac, (CHAR *)deviceId);

  0021c	e28d2030	 add         r2, sp, #0x30
  00220	e28d1040	 add         r1, sp, #0x40
  00224	e59f3198	 ldr         r3, [pc, #0x198]
  00228	e5930000	 ldr         r0, [r3]
  0022c	eb000000	 bl          OALKitlCreateName

; 131  :     OALMSG(OAL_INFO, (L"INFO: "
; 132  :         L"*** Device Name %S ***\r\n", deviceId
; 133  :         ));

  00230	e59f3188	 ldr         r3, [pc, #0x188]
  00234	e5933440	 ldr         r3, [r3, #0x440]
  00238	e3130008	 tst         r3, #8
  0023c	0a000005	 beq         |$LN26@BLEthDownl|
  00240	e28d1030	 add         r1, sp, #0x30
  00244	e59f017c	 ldr         r0, [pc, #0x17C]
  00248	eb000000	 bl          NKDbgPrintfW
  0024c	e3a03001	 mov         r3, #1
  00250	e58d308c	 str         r3, [sp, #0x8C]
  00254	ea000001	 b           |$LN27@BLEthDownl|
  00258		 |$LN26@BLEthDownl|
  00258	e3a03000	 mov         r3, #0
  0025c	e58d308c	 str         r3, [sp, #0x8C]
  00260		 |$LN27@BLEthDownl|

; 134  : 
; 135  :     // Initialize ethernet
; 136  :     memset(&g_ethState.edbgAddress, 0, sizeof(g_ethState.edbgAddress));

  00260	e3a0200c	 mov         r2, #0xC
  00264	e3a01000	 mov         r1, #0
  00268	e59f0148	 ldr         r0, [pc, #0x148]
  0026c	eb000000	 bl          memset

; 137  : 
; 138  :     // Set lease time pointer to activate DHCP or update global structure
; 139  :     if ((pConfig->kitlFlags & OAL_KITL_FLAGS_DHCP) != 0)

  00270	e59d30a4	 ldr         r3, [sp, #0xA4]
  00274	e2833030	 add         r3, r3, #0x30
  00278	e5933000	 ldr         r3, [r3]
  0027c	e3130004	 tst         r3, #4
  00280	0a000002	 beq         |$LN4@BLEthDownl|

; 140  :         {
; 141  :         pLeaseTime = &leaseTime;

  00284	e28d3024	 add         r3, sp, #0x24
  00288	e58d302c	 str         r3, [sp, #0x2C]

; 142  :         }
; 143  :     else 

  0028c	ea000006	 b           |$LN3@BLEthDownl|
  00290		 |$LN4@BLEthDownl|

; 144  :         {
; 145  :         pLeaseTime = NULL;

  00290	e3a03000	 mov         r3, #0
  00294	e58d302c	 str         r3, [sp, #0x2C]

; 146  :         g_ethState.edbgAddress.dwIP = pConfig->ipAddress;

  00298	e59d30a4	 ldr         r3, [sp, #0xA4]
  0029c	e2833038	 add         r3, r3, #0x38
  002a0	e5932000	 ldr         r2, [r3]
  002a4	e59f310c	 ldr         r3, [pc, #0x10C]
  002a8	e5832000	 str         r2, [r3]
  002ac		 |$LN3@BLEthDownl|

; 147  :         }
; 148  :     memcpy(
; 149  :         g_ethState.edbgAddress.wMAC, mac, sizeof(g_ethState.edbgAddress.wMAC)
; 150  :         );

  002ac	e3a02006	 mov         r2, #6
  002b0	e28d1040	 add         r1, sp, #0x40
  002b4	e59f30fc	 ldr         r3, [pc, #0xFC]
  002b8	e2830004	 add         r0, r3, #4
  002bc	eb000000	 bl          memcpy

; 151  :     subnetMask = 0xFFFFFF;

  002c0	e3e034ff	 mvn         r3, #0xFF, 8
  002c4	e58d3028	 str         r3, [sp, #0x28]

; 152  :        
; 153  :     // Initialize TFTP transport
; 154  :     // Note that first parameter must be pointer to global variable...
; 155  :     if (!EbootInitEtherTransport(
; 156  :             &g_ethState.edbgAddress, (LPDWORD) &subnetMask, &jumpToImage, (DWORD*) pLeaseTime,
; 157  :             EBOOT_VERSION_MAJOR, EBOOT_VERSION_MINOR, gDevice_prefix, 
; 158  :             (char*) deviceId, EDBG_CPU_TYPE_ARM|0x0F, 0
; 159  :             ))

  002c8	e3a03000	 mov         r3, #0
  002cc	e58d3014	 str         r3, [sp, #0x14]
  002d0	e3a0304f	 mov         r3, #0x4F
  002d4	e58d3010	 str         r3, [sp, #0x10]
  002d8	e28d3030	 add         r3, sp, #0x30
  002dc	e58d300c	 str         r3, [sp, #0xC]
  002e0	e59f30dc	 ldr         r3, [pc, #0xDC]
  002e4	e5933000	 ldr         r3, [r3]
  002e8	e58d3008	 str         r3, [sp, #8]
  002ec	e3a03000	 mov         r3, #0
  002f0	e58d3004	 str         r3, [sp, #4]
  002f4	e3a03001	 mov         r3, #1
  002f8	e58d3000	 str         r3, [sp]
  002fc	e59d302c	 ldr         r3, [sp, #0x2C]
  00300	e28d2020	 add         r2, sp, #0x20
  00304	e28d1028	 add         r1, sp, #0x28
  00308	e59f00a8	 ldr         r0, [pc, #0xA8]
  0030c	eb000000	 bl          EbootInitEtherTransport
  00310	e58d0090	 str         r0, [sp, #0x90]
  00314	e59d3090	 ldr         r3, [sp, #0x90]
  00318	e3530000	 cmp         r3, #0
  0031c	1a00000b	 bne         |$LN2@BLEthDownl|

; 160  :         {
; 161  :         OALMSG(OAL_ERROR, (L"ERROR: EbootInitEtherTransport call failed\r\n"));

  00320	e59f3098	 ldr         r3, [pc, #0x98]
  00324	e5933440	 ldr         r3, [r3, #0x440]
  00328	e3130001	 tst         r3, #1
  0032c	0a000004	 beq         |$LN28@BLEthDownl|
  00330	e59f0084	 ldr         r0, [pc, #0x84]
  00334	eb000000	 bl          NKDbgPrintfW
  00338	e3a03001	 mov         r3, #1
  0033c	e58d3094	 str         r3, [sp, #0x94]
  00340	ea000001	 b           |$LN29@BLEthDownl|
  00344		 |$LN28@BLEthDownl|
  00344	e3a03000	 mov         r3, #0
  00348	e58d3094	 str         r3, [sp, #0x94]
  0034c		 |$LN29@BLEthDownl|

; 162  :         goto cleanUp;

  0034c	ea000011	 b           |$cleanUp$46716|
  00350		 |$LN2@BLEthDownl|

; 163  :         }
; 164  : 
; 165  :     // If DHCP was used update lease time and address
; 166  :     if (pLeaseTime != NULL) pConfig->ipAddress = g_ethState.edbgAddress.dwIP;

  00350	e59d302c	 ldr         r3, [sp, #0x2C]
  00354	e3530000	 cmp         r3, #0
  00358	0a000004	 beq         |$LN1@BLEthDownl|
  0035c	e59d30a4	 ldr         r3, [sp, #0xA4]
  00360	e2832038	 add         r2, r3, #0x38
  00364	e59f304c	 ldr         r3, [pc, #0x4C]
  00368	e5933000	 ldr         r3, [r3]
  0036c	e5823000	 str         r3, [r2]
  00370		 |$LN1@BLEthDownl|

; 167  : 
; 168  :     // Depending on what we get from TFTP
; 169  :     rc = jumpToImage ? BL_JUMP : BL_DOWNLOAD;

  00370	e59d3020	 ldr         r3, [sp, #0x20]
  00374	e3530000	 cmp         r3, #0
  00378	0a000002	 beq         |$LN30@BLEthDownl|
  0037c	e3a03001	 mov         r3, #1
  00380	e58d3098	 str         r3, [sp, #0x98]
  00384	ea000001	 b           |$LN31@BLEthDownl|
  00388		 |$LN30@BLEthDownl|
  00388	e3a03000	 mov         r3, #0
  0038c	e58d3098	 str         r3, [sp, #0x98]
  00390		 |$LN31@BLEthDownl|
  00390	e59d3098	 ldr         r3, [sp, #0x98]
  00394	e58d301c	 str         r3, [sp, #0x1C]
  00398		 |$cleanUp$46716|

; 170  : 
; 171  : cleanUp:
; 172  :     return rc;

  00398	e59d0048	 ldr         r0, [sp, #0x48]
  0039c	eb000000	 bl          __security_check_cookie
  003a0	e59d301c	 ldr         r3, [sp, #0x1C]
  003a4	e58d3064	 str         r3, [sp, #0x64]

; 173  : }

  003a8	e59d0064	 ldr         r0, [sp, #0x64]
  003ac	e28dd09c	 add         sp, sp, #0x9C
  003b0	e89d6000	 ldmia       sp, {sp, lr}
  003b4	e12fff1e	 bx          lr
  003b8		 |$LN35@BLEthDownl|
  003b8		 |$LN36@BLEthDownl|
  003b8	00000000	 DCD         |g_ethState|
  003bc		 |$LN37@BLEthDownl|
  003bc	00000000	 DCD         |??_C@_1FK@GCLCJCHA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAE?$AAb?$AAo?$AAo?$AAt?$AAI?$AAn?$AAi?$AAt?$AAE?$AAt?$AAh?$AAe?$AAr?$AAT?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAr?$AAt?$AA?5?$AAc@|
  003c0		 |$LN38@BLEthDownl|
  003c0	00000000	 DCD         |dpCurSettings|
  003c4		 |$LN39@BLEthDownl|
  003c4	00000000	 DCD         |gDevice_prefix|
  003c8		 |$LN40@BLEthDownl|
  003c8	00000000	 DCD         |??_C@_1DO@DBOGGMNK@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AA?$CK?$AA?$CK?$AA?$CK?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAN?$AAa?$AAm?$AAe?$AA?5?$AA?$CF?$AAS?$AA?5?$AA?$CK?$AA?$CK?$AA?$CK?$AA?$AN?$AA?6?$AA?$AA@|
  003cc		 |$LN41@BLEthDownl|
  003cc	00000000	 DCD         |??_C@_1EA@FEAPGDEK@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AA?5?$AAB?$AAo?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAu?$AAs?$AAe?$AAs?$AA?5?$AAM?$AAA?$AAC?$AA?5?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  003d0		 |$LN42@BLEthDownl|
  003d0	00000000	 DCD         |??_C@_1FK@FLKNKOOB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAo?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAI?$AAn?$AAi?$AAt?$AA?5?$AAc@|
  003d4		 |$LN43@BLEthDownl|
  003d4	00000000	 DCD         |??_C@_1GM@ODLKKIGI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAo?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAd?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAD?$AAm@|
  003d8		 |$LN44@BLEthDownl|
  003d8	00000000	 DCD         |??_C@_1HA@PBOCKLG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAB?$AAo?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAd?$AAo?$AAe?$AAs?$AAn?$AA?8?$AAt?$AA?5?$AAe?$AAx?$AAi?$AAs?$AAt@|
  003dc		 |$LN45@BLEthDownl|
  003dc	00000000	 DCD         |__security_cookie|
  003e0		 |$M46823|

			 ENDP  ; |BLEthDownload|

	EXPORT	|BLEthConfig|
	IMPORT	|EbootWaitForHostConnect|

  00000			 AREA	 |.pdata|, PDATA
|$T46844| DCD	|$LN6@BLEthConfi|
	DCD	0x40002204
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BLEthConfig| PROC

; 187  : {

  00000		 |$LN6@BLEthConfi|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0001	 stmdb       sp!, {r0}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M46841|

; 188  :     EDBG_OS_CONFIG_DATA *pConfig;
; 189  : 
; 190  :     // Get host connect info
; 191  :     pConfig = EbootWaitForHostConnect(&g_ethState.edbgAddress, NULL);

  00010	e3a01000	 mov         r1, #0
  00014	e59f0068	 ldr         r0, [pc, #0x68]
  00018	eb000000	 bl          EbootWaitForHostConnect
  0001c	e58d0004	 str         r0, [sp, #4]
  00020	e59d3004	 ldr         r3, [sp, #4]
  00024	e58d3000	 str         r3, [sp]

; 192  : 
; 193  :     pArgs->kitl.flags &= ~OAL_KITL_FLAGS_PASSIVE;

  00028	e59d3010	 ldr         r3, [sp, #0x10]
  0002c	e2833018	 add         r3, r3, #0x18
  00030	e5932000	 ldr         r2, [r3]
  00034	e3e03002	 mvn         r3, #2
  00038	e0022003	 and         r2, r2, r3
  0003c	e59d3010	 ldr         r3, [sp, #0x10]
  00040	e2833018	 add         r3, r3, #0x18
  00044	e5832000	 str         r2, [r3]

; 194  :     if ((pConfig->KitlTransport & KTS_PASSIVE_MODE) != 0)

  00048	e59d3000	 ldr         r3, [sp]
  0004c	e2833001	 add         r3, r3, #1
  00050	e5d33000	 ldrb        r3, [r3]
  00054	e3130040	 tst         r3, #0x40
  00058	0a000006	 beq         |$LN1@BLEthConfi|

; 195  :         {
; 196  :         pArgs->kitl.flags |= OAL_KITL_FLAGS_PASSIVE;

  0005c	e59d3010	 ldr         r3, [sp, #0x10]
  00060	e2833018	 add         r3, r3, #0x18
  00064	e5933000	 ldr         r3, [r3]
  00068	e3832002	 orr         r2, r3, #2
  0006c	e59d3010	 ldr         r3, [sp, #0x10]
  00070	e2833018	 add         r3, r3, #0x18
  00074	e5832000	 str         r2, [r3]
  00078		 |$LN1@BLEthConfi|

; 197  :         }        
; 198  : }

  00078	e28dd008	 add         sp, sp, #8
  0007c	e89d6000	 ldmia       sp, {sp, lr}
  00080	e12fff1e	 bx          lr
  00084		 |$LN7@BLEthConfi|
  00084		 |$LN8@BLEthConfi|
  00084	00000000	 DCD         |g_ethState|
  00088		 |$M46842|

			 ENDP  ; |BLEthConfig|

	EXPORT	|OEMEthGetFrame|

  00000			 AREA	 |.pdata|, PDATA
|$T46856| DCD	|$LN7@OEMEthGetF|
	DCD	0x40001e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMEthGetFrame| PROC

; 213  : {

  00000		 |$LN7@OEMEthGetF|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M46853|

; 214  :     return g_ethState.pDriver->pfnGetFrame(pData, pLength) > 0;

  00010	e59d1018	 ldr         r1, [sp, #0x18]
  00014	e59d0014	 ldr         r0, [sp, #0x14]
  00018	e59f3054	 ldr         r3, [pc, #0x54]
  0001c	e593300c	 ldr         r3, [r3, #0xC]
  00020	e2833010	 add         r3, r3, #0x10
  00024	e5933000	 ldr         r3, [r3]
  00028	e1a0e00f	 mov         lr, pc
  0002c	e12fff13	 bx          r3
  00030	e1a03800	 mov         r3, r0, lsl #16
  00034	e1a03823	 mov         r3, r3, lsr #16
  00038	e1cd30b4	 strh        r3, [sp, #4]
  0003c	e1dd30b4	 ldrh        r3, [sp, #4]
  00040	e3530000	 cmp         r3, #0
  00044	da000002	 ble         |$LN3@OEMEthGetF|
  00048	e3a03001	 mov         r3, #1
  0004c	e58d3008	 str         r3, [sp, #8]
  00050	ea000001	 b           |$LN4@OEMEthGetF|
  00054		 |$LN3@OEMEthGetF|
  00054	e3a03000	 mov         r3, #0
  00058	e58d3008	 str         r3, [sp, #8]
  0005c		 |$LN4@OEMEthGetF|
  0005c	e59d3008	 ldr         r3, [sp, #8]
  00060	e58d3000	 str         r3, [sp]

; 215  : }

  00064	e59d0000	 ldr         r0, [sp]
  00068	e28dd00c	 add         sp, sp, #0xC
  0006c	e89d6000	 ldmia       sp, {sp, lr}
  00070	e12fff1e	 bx          lr
  00074		 |$LN8@OEMEthGetF|
  00074		 |$LN9@OEMEthGetF|
  00074	00000000	 DCD         |g_ethState|
  00078		 |$M46854|

			 ENDP  ; |OEMEthGetFrame|

	EXPORT	|OEMEthSendFrame|

  00000			 AREA	 |.pdata|, PDATA
|$T46868| DCD	|$LN7@OEMEthSend|
	DCD	0x40001e04
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMEthSendFrame| PROC

; 228  : {

  00000		 |$LN7@OEMEthSend|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M46865|

; 229  :     return g_ethState.pDriver->pfnSendFrame(pData, length) == 0;

  00010	e59d1018	 ldr         r1, [sp, #0x18]
  00014	e59d0014	 ldr         r0, [sp, #0x14]
  00018	e59f3054	 ldr         r3, [pc, #0x54]
  0001c	e593300c	 ldr         r3, [r3, #0xC]
  00020	e283300c	 add         r3, r3, #0xC
  00024	e5933000	 ldr         r3, [r3]
  00028	e1a0e00f	 mov         lr, pc
  0002c	e12fff13	 bx          r3
  00030	e1a03800	 mov         r3, r0, lsl #16
  00034	e1a03823	 mov         r3, r3, lsr #16
  00038	e1cd30b4	 strh        r3, [sp, #4]
  0003c	e1dd30b4	 ldrh        r3, [sp, #4]
  00040	e3530000	 cmp         r3, #0
  00044	1a000002	 bne         |$LN3@OEMEthSend|
  00048	e3a03001	 mov         r3, #1
  0004c	e58d3008	 str         r3, [sp, #8]
  00050	ea000001	 b           |$LN4@OEMEthSend|
  00054		 |$LN3@OEMEthSend|
  00054	e3a03000	 mov         r3, #0
  00058	e58d3008	 str         r3, [sp, #8]
  0005c		 |$LN4@OEMEthSend|
  0005c	e59d3008	 ldr         r3, [sp, #8]
  00060	e58d3000	 str         r3, [sp]

; 230  : }

  00064	e59d0000	 ldr         r0, [sp]
  00068	e28dd00c	 add         sp, sp, #0xC
  0006c	e89d6000	 ldmia       sp, {sp, lr}
  00070	e12fff1e	 bx          lr
  00074		 |$LN8@OEMEthSend|
  00074		 |$LN9@OEMEthSend|
  00074	00000000	 DCD         |g_ethState|
  00078		 |$M46866|

			 ENDP  ; |OEMEthSendFrame|

	EXPORT	|BLEthReadData|
	IMPORT	|EbootEtherReadData|
	IMPORT	|g_eboot|

  00000			 AREA	 |.pdata|, PDATA
|$T46878| DCD	|$LN5@BLEthReadD|
	DCD	0x40001504
; Function compile flags: /Odtp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BLEthReadData| PROC

; 244  : {

  00000		 |$LN5@BLEthReadD|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d0003	 stmdb       sp!, {r0, r1}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c	e24dd008	 sub         sp, sp, #8
  00010		 |$M46875|

; 245  :     // Save read data size and location. It is used in workaround
; 246  :     // for download BIN DIO images larger than RAM.
; 247  :     g_eboot.readSize = size;

  00010	e59d2010	 ldr         r2, [sp, #0x10]
  00014	e59f3034	 ldr         r3, [pc, #0x34]
  00018	e5832144	 str         r2, [r3, #0x144]

; 248  :     g_eboot.pReadBuffer = pData;

  0001c	e59d2014	 ldr         r2, [sp, #0x14]
  00020	e59f3028	 ldr         r3, [pc, #0x28]
  00024	e5832140	 str         r2, [r3, #0x140]

; 249  :     return EbootEtherReadData(size, pData);

  00028	e59d1014	 ldr         r1, [sp, #0x14]
  0002c	e59d0010	 ldr         r0, [sp, #0x10]
  00030	eb000000	 bl          EbootEtherReadData
  00034	e58d0004	 str         r0, [sp, #4]
  00038	e59d3004	 ldr         r3, [sp, #4]
  0003c	e58d3000	 str         r3, [sp]

; 250  : }

  00040	e59d0000	 ldr         r0, [sp]
  00044	e28dd008	 add         sp, sp, #8
  00048	e89d6000	 ldmia       sp, {sp, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$LN6@BLEthReadD|
  00050		 |$LN7@BLEthReadD|
  00050	00000000	 DCD         |g_eboot|
  00054		 |$M46876|

			 ENDP  ; |BLEthReadData|

	END
