; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\Z2170P\SRC\DRIVERS\PM\DLL\pmdevice.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|__$ArrayPad$| [ DATA ]
	IMPORT	|CeLogData|
	IMPORT	|StringCchLengthW|
	IMPORT	|StringCchVPrintfW|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_cookie|
	IMPORT	|__security_check_cookie|
; File c:\wince600\public\common\sdk\inc\celog.h

  00000			 AREA	 |.pdata|, PDATA
|$T34104| DCD	|$LN7@CeLogMsg|
	DCD	0xc0002a04

  00000			 AREA	 |.xdata|, DATA
|$T34100| DCD	0xffffffe0
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T34100|

  00008		 |CeLogMsg| PROC

; 1015 : {

  00008		 |$LN7@CeLogMsg|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d000f	 stmdb       sp!, {r0 - r3}
  00010	e92d5010	 stmdb       sp!, {r4, r12, lr}
  00014	e24dde22	 sub         sp, sp, #0x22, 28
  00018		 |$M34101|
  00018	e58d022c	 str         r0, [sp, #0x22C]
  0001c	e59f3088	 ldr         r3, [pc, #0x88]
  00020	e5933000	 ldr         r3, [r3]
  00024	e58d321c	 str         r3, [sp, #0x21C]

; 1016 :     va_list arglist;
; 1017 :     WCHAR   szTemp[MAX_PATH];
; 1018 :     size_t  cchLen;
; 1019 :     HRESULT hr;
; 1020 : 
; 1021 :     // Compose a single string using the input args
; 1022 :     va_start(arglist, szFormat);
; 1023 :     hr = StringCchVPrintfW(szTemp, MAX_PATH, szFormat, arglist);

  00028	e1a02000	 mov         r2, r0
  0002c	e28d0014	 add         r0, sp, #0x14
  00030	e28d3e23	 add         r3, sp, #0x23, 28
  00034	e3a01f41	 mov         r1, #0x41, 30
  00038	eb000000	 bl          StringCchVPrintfW
  0003c	e3500000	 cmp         r0, #0

; 1024 :     if (SUCCEEDED(hr)) {

  00040	4a000014	 bmi         |$LN1@CeLogMsg|

; 1025 :         hr = StringCchLengthW(szTemp, MAX_PATH, &cchLen);

  00044	e28d2010	 add         r2, sp, #0x10
  00048	e3a01f41	 mov         r1, #0x41, 30
  0004c	e28d0014	 add         r0, sp, #0x14
  00050	eb000000	 bl          StringCchLengthW
  00054	e3500000	 cmp         r0, #0

; 1026 :         if (SUCCEEDED(hr)) {

  00058	4a00000e	 bmi         |$LN1@CeLogMsg|

; 1027 :             CeLogData(TRUE, CELID_RAW_WCHAR, szTemp, (WORD)((cchLen + 1) * sizeof(WCHAR)),
; 1028 :                       0, CELZONE_ALWAYSON, 0, FALSE);

  0005c	e59d3010	 ldr         r3, [sp, #0x10]
  00060	e3a04101	 mov         r4, #1, 2
  00064	e3a0e000	 mov         lr, #0
  00068	e2833001	 add         r3, r3, #1
  0006c	e1a03083	 mov         r3, r3, lsl #1
  00070	e1a03803	 mov         r3, r3, lsl #16
  00074	e1a03823	 mov         r3, r3, lsr #16
  00078	e28d2014	 add         r2, sp, #0x14
  0007c	e3a0104a	 mov         r1, #0x4A
  00080	e3a00001	 mov         r0, #1
  00084	e58de00c	 str         lr, [sp, #0xC]
  00088	e58de008	 str         lr, [sp, #8]
  0008c	e58d4004	 str         r4, [sp, #4]
  00090	e58de000	 str         lr, [sp]
  00094	eb000000	 bl          CeLogData
  00098		 |$LN1@CeLogMsg|
  00098	e59d021c	 ldr         r0, [sp, #0x21C]
  0009c	eb000000	 bl          __security_check_cookie

; 1029 :         }
; 1030 :     }
; 1031 : }

  000a0	e28dde22	 add         sp, sp, #0x22, 28
  000a4	e89d6010	 ldmia       sp, {r4, sp, lr}
  000a8	e12fff1e	 bx          lr
  000ac		 |$LN8@CeLogMsg|
  000ac		 |$LN9@CeLogMsg|
  000ac	00000000	 DCD         |__security_cookie|
  000b0		 |$M34102|

			 ENDP  ; |CeLogMsg|

	EXPORT	|?MapDevicePowerState@@YA?AW4_CEDEVICE_POWER_STATE@@W41@E@Z| ; MapDevicePowerState
	EXPORT	|??_C@_1CI@EKDAOMCN@?$AAM?$AAa?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@CFFCEDAO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAm?$AAa?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?5?$AAD?$AA?$CF?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAD?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|dpCurSettings|
; File c:\wince600\platform\z2170p\src\drivers\pm\dll\pmdevice.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T34121| DCD	|$LN13@MapDeviceP|
	DCD	0x40002401

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@EKDAOMCN@?$AAM?$AAa?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@| DCB "M"
	DCB	0x0, "a", 0x0, "p", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e"
	DCB	0x0, "r", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@CFFCEDAO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAm?$AAa?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?5?$AAD?$AA?$CF?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAD?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "m", 0x0, "a", 0x0, "p"
	DCB	0x0, "p", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "D"
	DCB	0x0, "%", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "D", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?MapDevicePowerState@@YA?AW4_CEDEVICE_POWER_STATE@@W41@E@Z| PROC ; MapDevicePowerState

; 30   : {

  00000		 |$LN13@MapDeviceP|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M34118|
  00004	e1a02000	 mov         r2, r0

; 31   :     CEDEVICE_POWER_STATE reqDx;
; 32   : 
; 33   : #ifndef SHIP_BUILD
; 34   :     SETFNAME(_T("MapDevicePowerState"));
; 35   : #endif
; 36   : 
; 37   :     DEBUGCHK(newDx >= D0 && newDx <= D4);
; 38   : 
; 39   :     // map the power level to whatever the device actually supports.  All devices
; 40   :     // are required to support D0 so we won't even check for it.
; 41   :     reqDx = newDx;

  00008	e1a04002	 mov         r4, r2

; 42   :     if(reqDx == D3 && (ucSupportedDx & (1 << reqDx)) == 0) reqDx = D4;

  0000c	e3520003	 cmp         r2, #3
  00010	1a000002	 bne         |$LN6@MapDeviceP|
  00014	e3110008	 tst         r1, #8
  00018	1a00000f	 bne         |$LN1@MapDeviceP|
  0001c	e3a04004	 mov         r4, #4
  00020		 |$LN6@MapDeviceP|

; 43   :     if(reqDx == D4) {

  00020	e3540004	 cmp         r4, #4
  00024	1a000004	 bne         |$LN3@MapDeviceP|

; 44   :         if((ucSupportedDx & (1 << reqDx)) == 0) reqDx = D3;

  00028	e3110010	 tst         r1, #0x10
  0002c	03a04003	 moveq       r4, #3

; 45   :         if((ucSupportedDx & (1 << reqDx)) == 0) reqDx = D2;

  00030	e3a03001	 mov         r3, #1
  00034	e1110413	 tst         r1, r3, lsl r4
  00038	03a04002	 moveq       r4, #2
  0003c		 |$LN3@MapDeviceP|

; 46   :     }
; 47   :     if(reqDx == D2 && (ucSupportedDx & (1 << reqDx)) == 0) reqDx = D1;

  0003c	e3540002	 cmp         r4, #2
  00040	1a000002	 bne         |$LN2@MapDeviceP|
  00044	e3110004	 tst         r1, #4
  00048	1a000003	 bne         |$LN1@MapDeviceP|
  0004c	e3a04001	 mov         r4, #1
  00050		 |$LN2@MapDeviceP|

; 48   :     if(reqDx == D1 && (ucSupportedDx & (1 << reqDx)) == 0) reqDx = D0;

  00050	e3540001	 cmp         r4, #1
  00054	03110002	 tsteq       r1, #2
  00058	03a04000	 moveq       r4, #0
  0005c		 |$LN1@MapDeviceP|

; 49   : 
; 50   :     PMLOGMSG(ZONE_DEVICE, (_T("%s: mapping D%d to D%d\r\n"), pszFname, newDx, reqDx));

  0005c	e59f3028	 ldr         r3, [pc, #0x28]
  00060	e5933440	 ldr         r3, [r3, #0x440]
  00064	e3130010	 tst         r3, #0x10
  00068	159f1018	 ldrne       r1, [pc, #0x18]
  0006c	159f0010	 ldrne       r0, [pc, #0x10]
  00070	11a03004	 movne       r3, r4
  00074	1b000000	 blne        CeLogMsg

; 51   :     return reqDx;
; 52   : }

  00078	e1a00004	 mov         r0, r4
  0007c	e8bd4010	 ldmia       sp!, {r4, lr}
  00080	e12fff1e	 bx          lr
  00084		 |$LN14@MapDeviceP|
  00084		 |$LN15@MapDeviceP|
  00084	00000000	 DCD         |??_C@_1DC@CFFCEDAO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAm?$AAa?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?5?$AAD?$AA?$CF?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAD?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00088		 |$LN16@MapDeviceP|
  00088	00000000	 DCD         |??_C@_1CI@EKDAOMCN@?$AAM?$AAa?$AAp?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
  0008c		 |$LN17@MapDeviceP|
  0008c	00000000	 DCD         |dpCurSettings|
  00090		 |$M34119|

			 ENDP  ; |?MapDevicePowerState@@YA?AW4_CEDEVICE_POWER_STATE@@W41@E@Z|, MapDevicePowerState

	EXPORT	|?SetDevicePower@@YAKPAU_DeviceState_tag@@W4_CEDEVICE_POWER_STATE@@H@Z| ; SetDevicePower
	EXPORT	|??_C@_1GI@CAFGDGCP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAE?$AAT?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@MKDGLGMP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAa?$AAc?$AAe?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAo?$AAn?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?0?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IA@NEEPNPJA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAr?$AAo?$AAn?$AAg?$AA?5?$AAR?$AAe?$AAt?$AAu?$AAr?$AAn?$AA?5?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@NDCGFHLP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@KOLEMAMB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAi?$AAs?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@JJNMPAOB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAi?$AAs?$AA?5?$AAa?$AAl?$AAr?$AAe?$AAa?$AAd?$AAy?$AA?5?$AAa?$AAt?$AA?5?$AAD?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@GNENFOGN@?$AAS?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@JFGNKFEM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAt?$AAo?$AA?5?$AAD?$AA?$CF?$AAd?$AA?5?$AA?$CI?$AAm?$AAa?$AAp?$AAp?$AAe?$AAd?$AA?5@| [ DATA ] ; `string'
	IMPORT	|GetLastError|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|PmUnlock|
	IMPORT	|PmLock|

  00000			 AREA	 |.bss|, NOINIT
|?dwStaticRefCount@?1??SetDevicePower@@YAKPAU_DeviceState_tag@@W4_CEDEVICE_POWER_STATE@@H@Z@4KA| % 0x4 ; `SetDevicePower'::`2'::dwStaticRefCount

  00000			 AREA	 |.pdata|, PDATA
|$T34165| DCD	|$LN44@SetDeviceP|
	DCD	0x4000d602

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@CAFGDGCP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAE?$AAT?$AA?5@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s"
	DCB	0x0, "'", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "T", 0x0, "L", 0x0, "_", 0x0, "P", 0x0, "O", 0x0, "W"
	DCB	0x0, "E", 0x0, "R", 0x0, "_", 0x0, "S", 0x0, "E", 0x0, "T"
	DCB	0x0, " ", 0x0, "D", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s"
	DCB	0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@MKDGLGMP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAa?$AAc?$AAe?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAo?$AAn?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?0?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "a", 0x0, "c"
	DCB	0x0, "e", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "t", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "o"
	DCB	0x0, "n", 0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'"
	DCB	0x0, ",", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t", 0x0, "u"
	DCB	0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "E", 0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, "_"
	DCB	0x0, "R", 0x0, "E", 0x0, "T", 0x0, "R", 0x0, "Y", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IA@NEEPNPJA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAr?$AAo?$AAn?$AAg?$AA?5?$AAR?$AAe?$AAt?$AAu?$AAr?$AAn?$AA?5?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "W", 0x0, "r", 0x0, "o"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "t"
	DCB	0x0, "u", 0x0, "r", 0x0, "n", 0x0, " ", 0x0, "V", 0x0, "a"
	DCB	0x0, "l", 0x0, "u", 0x0, "e", 0x0, " ", 0x0, "f", 0x0, "r"
	DCB	0x0, "o", 0x0, "m", 0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s"
	DCB	0x0, "'", 0x0, ",", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t"
	DCB	0x0, "u", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "E", 0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R"
	DCB	0x0, "_", 0x0, "G", 0x0, "E", 0x0, "N", 0x0, "_", 0x0, "F"
	DCB	0x0, "A", 0x0, "I", 0x0, "L", 0x0, "U", 0x0, "R", 0x0, "E"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@NDCGFHLP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "u"
	DCB	0x0, "l", 0x0, "d", 0x0, "n", 0x0, "'", 0x0, "t", 0x0, " "
	DCB	0x0, "o", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, " ", 0x0, "'"
	DCB	0x0, "%", 0x0, "s", 0x0, "'", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@KOLEMAMB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAi?$AAs?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r"
	DCB	0x0, "e", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "o", 0x0, "f"
	DCB	0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'", 0x0, " "
	DCB	0x0, "i", 0x0, "s", 0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s"
	DCB	0x0, "'", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@JJNMPAOB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAi?$AAs?$AA?5?$AAa?$AAl?$AAr?$AAe?$AAa?$AAd?$AAy?$AA?5?$AAa?$AAt?$AA?5?$AAD?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "i", 0x0, "s"
	DCB	0x0, " ", 0x0, "a", 0x0, "l", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "y", 0x0, " ", 0x0, "a", 0x0, "t", 0x0, " "
	DCB	0x0, "D", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@GNENFOGN@?$AAS?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$AA@| DCB "S"
	DCB	0x0, "e", 0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e"
	DCB	0x0, "r", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@JFGNKFEM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAt?$AAo?$AA?5?$AAD?$AA?$CF?$AAd?$AA?5?$AA?$CI?$AAm?$AAa?$AAp?$AAp?$AAe?$AAd?$AA?5@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "e", 0x0, "t"
	DCB	0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "'"
	DCB	0x0, "%", 0x0, "s", 0x0, "'", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "D", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "("
	DCB	0x0, "m", 0x0, "a", 0x0, "p", 0x0, "p", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "D", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, ",", 0x0, " ", 0x0, "f", 0x0, "F"
	DCB	0x0, "o", 0x0, "r", 0x0, "c", 0x0, "e", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetDevicePower@@YAKPAU_DeviceState_tag@@W4_CEDEVICE_POWER_STATE@@H@Z| PROC ; SetDevicePower

; 62   : {

  00000		 |$LN44@SetDeviceP|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd038	 sub         sp, sp, #0x38
  00008		 |$M34162|
  00008	e1a0a001	 mov         r10, r1
  0000c	e58da01c	 str         r10, [sp, #0x1C]
  00010	e1a04002	 mov         r4, r2
  00014	e1a07000	 mov         r7, r0

; 63   :     DWORD dwStatus = ERROR_SUCCESS;
; 64   :     static DWORD dwStaticRefCount = 0; 
; 65   :     DWORD dwCurRefCount = 0;
; 66   :     CEDEVICE_POWER_STATE reqDx = PwrDeviceUnspecified;
; 67   :     CEDEVICE_POWER_STATE oldActualDx = PwrDeviceUnspecified; 
; 68   : 	CEDEVICE_POWER_STATE oldCurDx = PwrDeviceUnspecified;
; 69   :     POWER_RELATIONSHIP pr;
; 70   :     PPOWER_RELATIONSHIP ppr = NULL;
; 71   :     BOOL fDoSet;
; 72   :     BOOL fOpenDevice = FALSE;
; 73   :     HANDLE hDevice = INVALID_HANDLE_VALUE;
; 74   : 
; 75   : #ifndef SHIP_BUILD
; 76   :     SETFNAME(_T("SetDevicePower"));
; 77   : #endif
; 78   : 
; 79   :     PREFAST_DEBUGCHK(pds != NULL);
; 80   :     DEBUGCHK( newDx >= D0 && newDx <= D4);
; 81   :     DEBUGCHK(pds->pInterface != NULL);
; 82   : 
; 83   :     // map the power level to whatever the device actually supports
; 84   :     reqDx = MapDevicePowerState(newDx, pds->caps.DeviceDx);

  00018	e5d71028	 ldrb        r1, [r7, #0x28]
  0001c	e3e02000	 mvn         r2, #0
  00020	e1a05002	 mov         r5, r2
  00024	e3a03000	 mov         r3, #0
  00028	e3a06000	 mov         r6, #0
  0002c	e1a0000a	 mov         r0, r10
  00030	e58d5010	 str         r5, [sp, #0x10]
  00034	e3a08000	 mov         r8, #0
  00038	e58d3018	 str         r3, [sp, #0x18]
  0003c	e58d200c	 str         r2, [sp, #0xC]
  00040	e58d2020	 str         r2, [sp, #0x20]
  00044	e58d2024	 str         r2, [sp, #0x24]
  00048	e58d6014	 str         r6, [sp, #0x14]
  0004c	e3a0b000	 mov         r11, #0
  00050	eb000000	 bl          |?MapDevicePowerState@@YA?AW4_CEDEVICE_POWER_STATE@@W41@E@Z|

; 85   :     PMLOGMSG(ZONE_DEVICE, (_T("%s: setting '%s' to D%d (mapped to D%d), fForceSet is %d\r\n"), 
; 86   :         pszFname, pds->pszName, newDx, reqDx, fForceSet));

  00054	e59f92f8	 ldr         r9, [pc, #0x2F8]
  00058	e1a0e000	 mov         lr, r0
  0005c	e58de00c	 str         lr, [sp, #0xC]
  00060	e5993440	 ldr         r3, [r9, #0x440]
  00064	e3130010	 tst         r3, #0x10
  00068	15972000	 ldrne       r2, [r7]
  0006c	159f02dc	 ldrne       r0, [pc, #0x2DC]
  00070	159f12b4	 ldrne       r1, [pc, #0x2B4]
  00074	11a0300a	 movne       r3, r10
  00078	158d4004	 strne       r4, [sp, #4]
  0007c	158de000	 strne       lr, [sp]
  00080	1b000000	 blne        CeLogMsg

; 87   : 
; 88   :     // make a last check to see if we really need to send the device an update
; 89   :     PMLOCK();

  00084	eb000000	 bl          PmLock

; 90   :     DEBUGCHK(pds->dwNumPending == 0 || pds->pendingDx != PwrDeviceUnspecified);
; 91   :     DEBUGCHK(pds->dwNumPending != 0 || pds->pendingDx == PwrDeviceUnspecified);
; 92   :     if(reqDx != pds->actualDx || pds->dwNumPending != 0 || fForceSet) {

  00088	e5971018	 ldr         r1, [r7, #0x18]
  0008c	e59d000c	 ldr         r0, [sp, #0xC]
  00090	e59fa2b4	 ldr         r10, [pc, #0x2B4]
  00094	e1500001	 cmp         r0, r1
  00098	1a000004	 bne         |$LN21@SetDeviceP|
  0009c	e5973020	 ldr         r3, [r7, #0x20]
  000a0	e3530000	 cmp         r3, #0
  000a4	03540000	 cmpeq       r4, #0

; 111  :         }
; 112  :     } else {
; 113  :         fDoSet = FALSE;

  000a8	03a04000	 moveq       r4, #0
  000ac	0a000011	 beq         |$LN19@SetDeviceP|
  000b0		 |$LN21@SetDeviceP|

; 93   :         fDoSet = TRUE;
; 94   : 
; 95   :         // record what we're trying to set, visible to other threads
; 96   :         pds->pendingDx = reqDx;
; 97   :         pds->dwNumPending++;

  000b0	e5973020	 ldr         r3, [r7, #0x20]

; 98   :         // Re-Enter Checking Count.
; 99   :         dwStaticRefCount ++ ;
; 100  :         dwCurRefCount = dwStaticRefCount;
; 101  :         // remember what we're trying to set in this thread
; 102  :         oldCurDx = pds->curDx;
; 103  :         oldActualDx = pds->actualDx;
; 104  : 
; 105  :         // get a handle to the device to make the request
; 106  :         hDevice = pds->hDevice;

  000b4	e597505c	 ldr         r5, [r7, #0x5C]
  000b8	e59a2000	 ldr         r2, [r10]
  000bc	e2833001	 add         r3, r3, #1
  000c0	e5873020	 str         r3, [r7, #0x20]
  000c4	e5973004	 ldr         r3, [r7, #4]

; 107  :         if(hDevice != INVALID_HANDLE_VALUE) {

  000c8	e3750001	 cmn         r5, #1
  000cc	e2822001	 add         r2, r2, #1
  000d0	e58d3024	 str         r3, [sp, #0x24]
  000d4	e1a03001	 mov         r3, r1

; 108  :             fOpenDevice = FALSE;    // already have a handle

  000d8	13a0b000	 movne       r11, #0
  000dc	e58d3020	 str         r3, [sp, #0x20]
  000e0	e58d5010	 str         r5, [sp, #0x10]
  000e4	e58d2018	 str         r2, [sp, #0x18]
  000e8	e58a2000	 str         r2, [r10]
  000ec	e3a04001	 mov         r4, #1
  000f0	e587001c	 str         r0, [r7, #0x1C]

; 109  :         } else {
; 110  :             fOpenDevice = TRUE;     // need to open a handle

  000f4	03a0b001	 moveq       r11, #1
  000f8		 |$LN19@SetDeviceP|

; 114  :     }
; 115  :     PMUNLOCK();

  000f8	eb000000	 bl          PmUnlock

; 116  : 
; 117  :     // are we doing an update?
; 118  :     if(!fDoSet) {

  000fc	e3540000	 cmp         r4, #0
  00100	1a000007	 bne         |$LN17@SetDeviceP|

; 119  :         PMLOGMSG(ZONE_DEVICE, (_T("%s: device is already at D%d\r\n"), pszFname, reqDx));

  00104	e5993440	 ldr         r3, [r9, #0x440]
  00108	e3130010	 tst         r3, #0x10
  0010c	0a000082	 beq         |$LN16@SetDeviceP|
  00110	e59d200c	 ldr         r2, [sp, #0xC]
  00114	e59f022c	 ldr         r0, [pc, #0x22C]
  00118	e59f120c	 ldr         r1, [pc, #0x20C]
  0011c	eb000000	 bl          CeLogMsg

; 120  :     } else {

  00120	ea00007d	 b           |$LN16@SetDeviceP|
  00124		 |$LN17@SetDeviceP|

; 121  :         // initialize parameters
; 122  :         memset(&pr, 0, sizeof(pr));
; 123  :         if(pds->pParent != NULL) {

  00124	e5973024	 ldr         r3, [r7, #0x24]
  00128	e3a02000	 mov         r2, #0
  0012c	e58d2028	 str         r2, [sp, #0x28]
  00130	e58d202c	 str         r2, [sp, #0x2C]
  00134	e58d2030	 str         r2, [sp, #0x30]
  00138	e58d2034	 str         r2, [sp, #0x34]
  0013c	e1b02003	 movs        r2, r3
  00140	0a00000f	 beq         |$LN41@SetDeviceP|

; 124  :             PMLOGMSG(ZONE_DEVICE, (_T("%s: parent of '%s' is '%s'\r\n"), 
; 125  :                 pszFname, pds->pszName, pds->pParent->pszName));

  00144	e5993440	 ldr         r3, [r9, #0x440]
  00148	e3130010	 tst         r3, #0x10
  0014c	15923000	 ldrne       r3, [r2]
  00150	15972000	 ldrne       r2, [r7]
  00154	159f01e8	 ldrne       r0, [pc, #0x1E8]
  00158	159f11cc	 ldrne       r1, [pc, #0x1CC]
  0015c	1b000000	 blne        CeLogMsg

; 126  :             pr.hParent = (HANDLE) pds->pParent;

  00160	e5973024	 ldr         r3, [r7, #0x24]

; 127  :             pr.pwsParent = pds->pParent->pszName;
; 128  :             pr.hChild = (HANDLE) pds;
; 129  :             pr.pwsChild = pds->pszName;

  00164	e5972000	 ldr         r2, [r7]

; 130  :             ppr = &pr;

  00168	e28d6028	 add         r6, sp, #0x28
  0016c	e58d3028	 str         r3, [sp, #0x28]
  00170	e5933000	 ldr         r3, [r3]
  00174	e58d6014	 str         r6, [sp, #0x14]
  00178	e58d7030	 str         r7, [sp, #0x30]
  0017c	e58d302c	 str         r3, [sp, #0x2C]
  00180	e58d2034	 str         r2, [sp, #0x34]
  00184		 |$LN41@SetDeviceP|

; 131  :         }
; 132  :         
; 133  :         // get a handle to the device
; 134  :         if(fOpenDevice) {

  00184	e35b0000	 cmp         r11, #0
  00188	0a000006	 beq         |$LN14@SetDeviceP|

; 135  :             DEBUGCHK(pds->pInterface->pfnOpenDevice != NULL);
; 136  :             hDevice = pds->pInterface->pfnOpenDevice(pds);

  0018c	e5973060	 ldr         r3, [r7, #0x60]
  00190	e1a00007	 mov         r0, r7
  00194	e5933004	 ldr         r3, [r3, #4]
  00198	e1a0e00f	 mov         lr, pc
  0019c	e12fff13	 bx          r3
  001a0	e1a05000	 mov         r5, r0
  001a4	e58d5010	 str         r5, [sp, #0x10]
  001a8		 |$LN14@SetDeviceP|

; 137  :         }
; 138  : 
; 139  :         // did we get a handle?
; 140  :         if(hDevice == INVALID_HANDLE_VALUE) {

  001a8	e3750001	 cmn         r5, #1
  001ac	1a000007	 bne         |$LN13@SetDeviceP|
  001b0	e5993440	 ldr         r3, [r9, #0x440]

; 141  :             PMLOGMSG(ZONE_WARN, (_T("%s: couldn't open '%s'\r\n"), pszFname,
; 142  :                 pds->pszName));

  001b4	e3130002	 tst         r3, #2
  001b8	15972000	 ldrne       r2, [r7]
  001bc	159f017c	 ldrne       r0, [pc, #0x17C]
  001c0	159f1164	 ldrne       r1, [pc, #0x164]
  001c4	1b000000	 blne        CeLogMsg

; 143  :             dwStatus = ERROR_INVALID_HANDLE;

  001c8	e3a08006	 mov         r8, #6

; 144  :         } else {

  001cc	ea00004b	 b           |$LN2@SetDeviceP|
  001d0		 |$LN13@SetDeviceP|

; 145  :             DWORD dwBytesReturned;
; 146  :             DEBUGCHK(pds->pInterface->pfnRequestDevice != NULL);
; 147  : 
; 148  :             BOOL fOk = pds->pInterface->pfnRequestDevice(hDevice, IOCTL_POWER_SET, ppr, 
; 149  :                 ppr == NULL ? 0 : sizeof(*ppr), &reqDx, sizeof(reqDx), 
; 150  :                 &dwBytesReturned);
; 151  : 
; 152  :             if(fOk) {

  001d0	e5970060	 ldr         r0, [r7, #0x60]
  001d4	e28d5014	 add         r5, sp, #0x14
  001d8	e58d5008	 str         r5, [sp, #8]
  001dc	e3560000	 cmp         r6, #0
  001e0	e590600c	 ldr         r6, [r0, #0xC]
  001e4	e59d0010	 ldr         r0, [sp, #0x10]
  001e8	e3a05004	 mov         r5, #4
  001ec	e59f1148	 ldr         r1, [pc, #0x148]
  001f0	e28d400c	 add         r4, sp, #0xC
  001f4	e59d2014	 ldr         r2, [sp, #0x14]
  001f8	03a03000	 moveq       r3, #0
  001fc	e58d5004	 str         r5, [sp, #4]
  00200	13a03010	 movne       r3, #0x10
  00204	e58d4000	 str         r4, [sp]
  00208	e1a0e00f	 mov         lr, pc
  0020c	e12fff16	 bx          r6
  00210	e3500000	 cmp         r0, #0
  00214	0a000020	 beq         |$LN11@SetDeviceP|

; 153  :                 // Check for races to update the driver -- it is possible for the device to call
; 154  :                 // DevicePowerNotify() when another thread is calling SetDevicePower(), 
; 155  :                 // SetSystemPowerState(), or Set(/Release)PowerRequirement().
; 156  :                 PMLOCK();

  00218	eb000000	 bl          PmLock

; 157  :                 if(pds->pendingDx == reqDx) {

  0021c	e597301c	 ldr         r3, [r7, #0x1C]
  00220	e59d200c	 ldr         r2, [sp, #0xC]
  00224	e1530002	 cmp         r3, r2

; 158  :                     // record the new values
; 159  :                     pds->curDx = newDx;

  00228	059d301c	 ldreq       r3, [sp, #0x1C]

; 160  :                     pds->actualDx = reqDx;

  0022c	05872018	 streq       r2, [r7, #0x18]
  00230	05873004	 streq       r3, [r7, #4]
  00234	0a000014	 beq         |$LN6@SetDeviceP|
  00238	e59a3000	 ldr         r3, [r10]

; 161  :                 } 
; 162  :                 else if (dwCurRefCount != dwStaticRefCount || pds->dwNumPending > 1 ) {

  0023c	e59d2018	 ldr         r2, [sp, #0x18]
  00240	e1520003	 cmp         r2, r3
  00244	1a000008	 bne         |$LN7@SetDeviceP|
  00248	e5973020	 ldr         r3, [r7, #0x20]
  0024c	e3530001	 cmp         r3, #1
  00250	8a000005	 bhi         |$LN7@SetDeviceP|

; 166  :                 }
; 167  :                 else { // This condition indicate no SetDevicePower called by others. It must be wrong value return from device driver
; 168  :                     RETAILMSG(1, (_T("%s: Wrong Return Value from '%s', returning ERROR_GEN_FAILURE\r\n"),
; 169  :                         pszFname, pds->pszName));

  00254	e5972000	 ldr         r2, [r7]
  00258	e59f00d8	 ldr         r0, [pc, #0xD8]
  0025c	e59f10c8	 ldr         r1, [pc, #0xC8]
  00260	eb000000	 bl          NKDbgPrintfW

; 170  :                     ASSERT(FALSE);
; 171  :                     dwStatus = ERROR_GEN_FAILURE;

  00264	e3a0801f	 mov         r8, #0x1F
  00268	ea000007	 b           |$LN6@SetDeviceP|
  0026c		 |$LN7@SetDeviceP|

; 163  :                     PMLOGMSG(ZONE_DEVICE, (_T("%s: race detected on '%s', returning ERROR_RETRY\r\n"),
; 164  :                         pszFname, pds->pszName));

  0026c	e5993440	 ldr         r3, [r9, #0x440]
  00270	e3130010	 tst         r3, #0x10
  00274	15972000	 ldrne       r2, [r7]
  00278	159f00b4	 ldrne       r0, [pc, #0xB4]
  0027c	159f10a8	 ldrne       r1, [pc, #0xA8]
  00280	1b000000	 blne        CeLogMsg
  00284	e3a03b01	 mov         r3, #1, 22

; 165  :                     dwStatus = ERROR_RETRY;

  00288	e38380d5	 orr         r8, r3, #0xD5
  0028c		 |$LN6@SetDeviceP|
  0028c	e59a3000	 ldr         r3, [r10]

; 172  :                 }
; 173  :                 dwStaticRefCount ++ ;

  00290	e2833001	 add         r3, r3, #1
  00294	e58a3000	 str         r3, [r10]

; 174  :                 PMUNLOCK();
; 175  :             } else {

  00298	ea000011	 b           |$LN3@SetDeviceP|
  0029c		 |$LN11@SetDeviceP|

; 176  :                 dwStatus = GetLastError();

  0029c	eb000000	 bl          GetLastError

; 177  :                 if(dwStatus == ERROR_SUCCESS) {
; 178  :                     dwStatus = ERROR_GEN_FAILURE;
; 179  :                 }
; 180  :                 PMLOGMSG(ZONE_WARN, (_T("%s: '%s' failed IOCTL_POWER_SET D%d, status is %d\r\n"),
; 181  :                     pszFname, pds->pszName, newDx, dwStatus));

  002a0	e5993440	 ldr         r3, [r9, #0x440]
  002a4	e1b08000	 movs        r8, r0
  002a8	03a0801f	 moveq       r8, #0x1F
  002ac	e3130002	 tst         r3, #2
  002b0	15972000	 ldrne       r2, [r7]
  002b4	159f0074	 ldrne       r0, [pc, #0x74]
  002b8	159d301c	 ldrne       r3, [sp, #0x1C]
  002bc	159f1068	 ldrne       r1, [pc, #0x68]
  002c0	158d8000	 strne       r8, [sp]
  002c4	1b000000	 blne        CeLogMsg

; 182  :                 
; 183  :                 PMLOCK();

  002c8	eb000000	 bl          PmLock

; 184  :                 // the set operation failed -- if the device power state appears unchanged,
; 185  :                 // restore our state variables.  In general, devices should never fail a
; 186  :                 // set request.
; 187  :                 if(reqDx == oldActualDx) {

  002cc	e59d300c	 ldr         r3, [sp, #0xC]
  002d0	e59d2020	 ldr         r2, [sp, #0x20]
  002d4	e1530002	 cmp         r3, r2

; 188  :                     pds->curDx = oldCurDx;

  002d8	059d3024	 ldreq       r3, [sp, #0x24]

; 189  :                     pds->actualDx = oldActualDx;

  002dc	05872018	 streq       r2, [r7, #0x18]
  002e0	05873004	 streq       r3, [r7, #4]
  002e4		 |$LN3@SetDeviceP|

; 190  :                 }
; 191  :                 PMUNLOCK();

  002e4	eb000000	 bl          PmUnlock

; 192  :             }
; 193  :             
; 194  :             // close the device handle if we opened it in this routine
; 195  :             if(fOpenDevice) {

  002e8	e35b0000	 cmp         r11, #0

; 196  :                 DEBUGCHK(pds->pInterface->pfnCloseDevice != NULL);
; 197  :                 pds->pInterface->pfnCloseDevice(hDevice);

  002ec	15973060	 ldrne       r3, [r7, #0x60]
  002f0	159d0010	 ldrne       r0, [sp, #0x10]
  002f4	15933008	 ldrne       r3, [r3, #8]
  002f8	11a0e00f	 movne       lr, pc
  002fc	112fff13	 bxne        r3
  00300		 |$LN2@SetDeviceP|

; 198  :             }
; 199  :         }
; 200  : 
; 201  :         // update reference counts
; 202  :         PMLOCK();

  00300	eb000000	 bl          PmLock

; 203  :         DEBUGCHK(pds->dwNumPending != 0);
; 204  :         DEBUGCHK(pds->pendingDx != PwrDeviceUnspecified);
; 205  :         pds->dwNumPending--;

  00304	e5973020	 ldr         r3, [r7, #0x20]
  00308	e2533001	 subs        r3, r3, #1
  0030c	e5873020	 str         r3, [r7, #0x20]

; 206  :         if(pds->dwNumPending == 0) {
; 207  :             pds->pendingDx = PwrDeviceUnspecified;

  00310	03e03000	 mvneq       r3, #0
  00314	0587301c	 streq       r3, [r7, #0x1C]

; 208  :         }
; 209  :         PMUNLOCK();

  00318	eb000000	 bl          PmUnlock
  0031c		 |$LN16@SetDeviceP|

; 210  :     }
; 211  : 
; 212  :     return dwStatus;
; 213  : }

  0031c	e1a00008	 mov         r0, r8
  00320	e28dd038	 add         sp, sp, #0x38
  00324	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00328	e12fff1e	 bx          lr
  0032c		 |$LN45@SetDeviceP|
  0032c		 |$LN46@SetDeviceP|
  0032c	00000000	 DCD         |??_C@_1BO@GNENFOGN@?$AAS?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$AA@|
  00330		 |$LN47@SetDeviceP|
  00330	00000000	 DCD         |??_C@_1GI@CAFGDGCP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAE?$AAT?$AA?5@|
  00334		 |$LN48@SetDeviceP|
  00334	00000000	 DCD         |??_C@_1GG@MKDGLGMP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAa?$AAc?$AAe?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAo?$AAn?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?0?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr@|
  00338		 |$LN49@SetDeviceP|
  00338	00000000	 DCD         |??_C@_1IA@NEEPNPJA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAr?$AAo?$AAn?$AAg?$AA?5?$AAR?$AAe?$AAt?$AAu?$AAr?$AAn?$AA?5?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8@|
  0033c		 |$LN50@SetDeviceP|
  0033c	00321008	 DCD         0x321008
  00340		 |$LN51@SetDeviceP|
  00340	00000000	 DCD         |??_C@_1DC@NDCGFHLP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN?$AA?6?$AA?$AA@|
  00344		 |$LN52@SetDeviceP|
  00344	00000000	 DCD         |??_C@_1DK@KOLEMAMB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAi?$AAs?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN?$AA?6?$AA?$AA@|
  00348		 |$LN53@SetDeviceP|
  00348	00000000	 DCD         |??_C@_1DO@JJNMPAOB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAi?$AAs?$AA?5?$AAa?$AAl?$AAr?$AAe?$AAa?$AAd?$AAy?$AA?5?$AAa?$AAt?$AA?5?$AAD?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0034c		 |$LN54@SetDeviceP|
  0034c	00000000	 DCD         |?dwStaticRefCount@?1??SetDevicePower@@YAKPAU_DeviceState_tag@@W4_CEDEVICE_POWER_STATE@@H@Z@4KA|
  00350		 |$LN55@SetDeviceP|
  00350	00000000	 DCD         |??_C@_1HG@JFGNKFEM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAt?$AAo?$AA?5?$AAD?$AA?$CF?$AAd?$AA?5?$AA?$CI?$AAm?$AAa?$AAp?$AAp?$AAe?$AAd?$AA?5@|
  00354		 |$LN56@SetDeviceP|
  00354	00000000	 DCD         |dpCurSettings|
  00358		 |$M34163|

			 ENDP  ; |?SetDevicePower@@YAKPAU_DeviceState_tag@@W4_CEDEVICE_POWER_STATE@@H@Z|, SetDevicePower

	EXPORT	|?GetDevicePower@@YAKPAU_DeviceState_tag@@PAW4_CEDEVICE_POWER_STATE@@@Z| ; GetDevicePower
	EXPORT	|??_C@_1GA@IIJMLOP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAG?$AAE?$AAT?$AA?0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@HFOAPAGC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAG?$AAE?$AAT?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@OMCCOOEP@?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T34206| DCD	|$LN26@GetDeviceP|
	DCD	0x40007302

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@IIJMLOP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAG?$AAE?$AAT?$AA?0@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s"
	DCB	0x0, "'", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "T", 0x0, "L", 0x0, "_", 0x0, "P", 0x0, "O", 0x0, "W"
	DCB	0x0, "E", 0x0, "R", 0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T"
	DCB	0x0, ",", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "u", 0x0, "s", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@HFOAPAGC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAG?$AAE?$AAT?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s"
	DCB	0x0, "'", 0x0, " ", 0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T"
	DCB	0x0, "L", 0x0, "_", 0x0, "P", 0x0, "O", 0x0, "W", 0x0, "E"
	DCB	0x0, "R", 0x0, "_", 0x0, "G", 0x0, "E", 0x0, "T", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "v"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "s"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "%"
	DCB	0x0, "u", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@OMCCOOEP@?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$AA@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e"
	DCB	0x0, "r", 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetDevicePower@@YAKPAU_DeviceState_tag@@PAW4_CEDEVICE_POWER_STATE@@@Z| PROC ; GetDevicePower

; 220  : {

  00000		 |$LN26@GetDeviceP|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd028	 sub         sp, sp, #0x28
  00008		 |$M34203|
  00008	e58d1010	 str         r1, [sp, #0x10]
  0000c	e1a07000	 mov         r7, r0

; 221  :     DWORD dwStatus = ERROR_GEN_FAILURE;
; 222  :     POWER_RELATIONSHIP pr;
; 223  :     PPOWER_RELATIONSHIP ppr = NULL;
; 224  :     BOOL fOpenDevice;
; 225  :     HANDLE hDevice;
; 226  : 
; 227  : #ifndef SHIP_BUILD
; 228  :     SETFNAME(_T("GetDevicePower"));
; 229  : #endif
; 230  : 
; 231  :     PREFAST_DEBUGCHK(pds != NULL );
; 232  :     PREFAST_DEBUGCHK(pCurDx != NULL);
; 233  :     PREFAST_DEBUGCHK(pds->pInterface != NULL);
; 234  : 
; 235  :     // initialize parameters
; 236  :     memset(&pr, 0, sizeof(pr));
; 237  :     if(pds->pParent != NULL) {

  00010	e5973024	 ldr         r3, [r7, #0x24]
  00014	e3a02000	 mov         r2, #0
  00018	e59f91a8	 ldr         r9, [pc, #0x1A8]
  0001c	e58d2018	 str         r2, [sp, #0x18]
  00020	e58d201c	 str         r2, [sp, #0x1C]
  00024	e58d2020	 str         r2, [sp, #0x20]
  00028	e58d2024	 str         r2, [sp, #0x24]
  0002c	e1b02003	 movs        r2, r3
  00030	e3a0401f	 mov         r4, #0x1F
  00034	e3a0a000	 mov         r10, #0
  00038	0a00000e	 beq         |$LN23@GetDeviceP|

; 238  :         PMLOGMSG(ZONE_DEVICE, (_T("%s: parent of '%s' is '%s'\r\n"), 
; 239  :             pszFname, pds->pszName, pds->pParent->pszName));

  0003c	e5993440	 ldr         r3, [r9, #0x440]
  00040	e3130010	 tst         r3, #0x10
  00044	15923000	 ldrne       r3, [r2]
  00048	15972000	 ldrne       r2, [r7]
  0004c	159f0170	 ldrne       r0, [pc, #0x170]
  00050	159f115c	 ldrne       r1, [pc, #0x15C]
  00054	1b000000	 blne        CeLogMsg

; 240  :         pr.hParent = (HANDLE) pds->pParent;

  00058	e5973024	 ldr         r3, [r7, #0x24]

; 241  :         pr.pwsParent = pds->pParent->pszName;
; 242  :         pr.hChild = (HANDLE) pds;
; 243  :         pr.pwsChild = pds->pszName;

  0005c	e5972000	 ldr         r2, [r7]

; 244  :         ppr = &pr;

  00060	e28da018	 add         r10, sp, #0x18
  00064	e58d3018	 str         r3, [sp, #0x18]
  00068	e5933000	 ldr         r3, [r3]
  0006c	e58d7020	 str         r7, [sp, #0x20]
  00070	e58d2024	 str         r2, [sp, #0x24]
  00074	e58d301c	 str         r3, [sp, #0x1C]
  00078		 |$LN23@GetDeviceP|

; 245  :     }
; 246  :     
; 247  :     // get a handle to the device
; 248  :     hDevice = pds->hDevice;

  00078	e597805c	 ldr         r8, [r7, #0x5C]

; 249  :     if(hDevice != INVALID_HANDLE_VALUE) {

  0007c	e3780001	 cmn         r8, #1

; 250  :         fOpenDevice = FALSE;    // already have a handle

  00080	13a0b000	 movne       r11, #0
  00084	1a000006	 bne         |$LN8@GetDeviceP|

; 251  :     } else {
; 252  :         fOpenDevice = TRUE;     // need to open a handle
; 253  :         DEBUGCHK(pds->pInterface->pfnOpenDevice != NULL);
; 254  :         hDevice = pds->pInterface->pfnOpenDevice(pds);

  00088	e5973060	 ldr         r3, [r7, #0x60]
  0008c	e1a00007	 mov         r0, r7
  00090	e3a0b001	 mov         r11, #1
  00094	e5933004	 ldr         r3, [r3, #4]
  00098	e1a0e00f	 mov         lr, pc
  0009c	e12fff13	 bx          r3
  000a0	e1a08000	 mov         r8, r0
  000a4		 |$LN8@GetDeviceP|

; 255  :     }
; 256  : 
; 257  :     // did we get a handle?
; 258  :     if(hDevice == INVALID_HANDLE_VALUE) {

  000a4	e3780001	 cmn         r8, #1
  000a8	1a000007	 bne         |$LN7@GetDeviceP|
  000ac	e5993440	 ldr         r3, [r9, #0x440]

; 259  :         PMLOGMSG(ZONE_WARN, (_T("%s: couldn't open '%s'\r\n"), pszFname,
; 260  :             pds->pszName));

  000b0	e3130002	 tst         r3, #2
  000b4	0a000039	 beq         |$LN1@GetDeviceP|
  000b8	e5972000	 ldr         r2, [r7]
  000bc	e59f00fc	 ldr         r0, [pc, #0xFC]
  000c0	e59f10ec	 ldr         r1, [pc, #0xEC]
  000c4	eb000000	 bl          CeLogMsg

; 261  :     } else {

  000c8	ea000034	 b           |$LN1@GetDeviceP|
  000cc		 |$LN7@GetDeviceP|

; 262  :         CEDEVICE_POWER_STATE tmpDx = PwrDeviceUnspecified;
; 263  :         DWORD dwBytesReturned;
; 264  :         DEBUGCHK(pds->pInterface->pfnRequestDevice != NULL);
; 265  :         BOOL fOk = pds->pInterface->pfnRequestDevice(hDevice, IOCTL_POWER_GET, ppr, 
; 266  :             ppr == NULL ? 0 : sizeof(*ppr), &tmpDx, sizeof(tmpDx), 
; 267  :             &dwBytesReturned);

  000cc	e5970060	 ldr         r0, [r7, #0x60]
  000d0	e28d5014	 add         r5, sp, #0x14
  000d4	e3e03000	 mvn         r3, #0
  000d8	e58d5008	 str         r5, [sp, #8]
  000dc	e35a0000	 cmp         r10, #0
  000e0	e3a05004	 mov         r5, #4
  000e4	e58d300c	 str         r3, [sp, #0xC]
  000e8	e590600c	 ldr         r6, [r0, #0xC]
  000ec	e59f10c8	 ldr         r1, [pc, #0xC8]
  000f0	e28d400c	 add         r4, sp, #0xC
  000f4	03a03000	 moveq       r3, #0
  000f8	e1a00008	 mov         r0, r8
  000fc	e58d5004	 str         r5, [sp, #4]
  00100	13a03010	 movne       r3, #0x10
  00104	e1a0200a	 mov         r2, r10
  00108	e58d4000	 str         r4, [sp]
  0010c	e1a0e00f	 mov         lr, pc
  00110	e12fff16	 bx          r6
  00114	e1b05000	 movs        r5, r0

; 268  :         
; 269  :         // update variables and clear the requestor thread ID
; 270  :         if(fOk) {

  00118	0a00000d	 beq         |$LN5@GetDeviceP|

; 271  :             if(VALID_DX(tmpDx)) {

  0011c	e59d300c	 ldr         r3, [sp, #0xC]
  00120	e3530004	 cmp         r3, #4

; 272  :                 *pCurDx = tmpDx;

  00124	959d2010	 ldrls       r2, [sp, #0x10]

; 273  :                 dwStatus = ERROR_SUCCESS;

  00128	93a04000	 movls       r4, #0
  0012c	95823000	 strls       r3, [r2]
  00130	9a000009	 bls         |$LN2@GetDeviceP|

; 274  :             } else {

  00134	e5992440	 ldr         r2, [r9, #0x440]

; 275  :                 PMLOGMSG(ZONE_WARN, 
; 276  :                     (_T("%s: '%s' IOCTL_POWER_GET returned invalid state %u\r\n"),
; 277  :                     pszFname, pds->pszName, tmpDx));

  00138	e3120002	 tst         r2, #2
  0013c	15972000	 ldrne       r2, [r7]
  00140	159f0070	 ldrne       r0, [pc, #0x70]
  00144	159f1068	 ldrne       r1, [pc, #0x68]
  00148	1b000000	 blne        CeLogMsg

; 278  :                 dwStatus = ERROR_INVALID_DATA;

  0014c	e3a0400d	 mov         r4, #0xD

; 279  :             }
; 280  :         } else {

  00150	ea000001	 b           |$LN2@GetDeviceP|
  00154		 |$LN5@GetDeviceP|

; 281  :             dwStatus = GetLastError();

  00154	eb000000	 bl          GetLastError
  00158	e1a04000	 mov         r4, r0
  0015c		 |$LN2@GetDeviceP|

; 282  :         }
; 283  :         
; 284  :         PMLOGMSG(!fOk && ZONE_WARN, 
; 285  :             (_T("%s: '%s' failed IOCTL_POWER_GET, status is %d\r\n"),
; 286  :             pszFname, pds->pszName, GetLastError()));

  0015c	e3550000	 cmp         r5, #0
  00160	1a000008	 bne         |$LN21@GetDeviceP|
  00164	e5993440	 ldr         r3, [r9, #0x440]
  00168	e3130002	 tst         r3, #2
  0016c	0a000005	 beq         |$LN21@GetDeviceP|
  00170	eb000000	 bl          GetLastError
  00174	e5972000	 ldr         r2, [r7]
  00178	e59f1034	 ldr         r1, [pc, #0x34]
  0017c	e1a03000	 mov         r3, r0
  00180	e59f0028	 ldr         r0, [pc, #0x28]
  00184	eb000000	 bl          CeLogMsg
  00188		 |$LN21@GetDeviceP|

; 287  :         
; 288  :         // close the device handle if we opened it in this routine
; 289  :         if(fOpenDevice) {

  00188	e35b0000	 cmp         r11, #0

; 290  :             DEBUGCHK(pds->pInterface->pfnCloseDevice != NULL);
; 291  :             pds->pInterface->pfnCloseDevice(hDevice);

  0018c	15973060	 ldrne       r3, [r7, #0x60]
  00190	11a00008	 movne       r0, r8
  00194	15933008	 ldrne       r3, [r3, #8]
  00198	11a0e00f	 movne       lr, pc
  0019c	112fff13	 bxne        r3
  001a0		 |$LN1@GetDeviceP|

; 292  :         }
; 293  :     }
; 294  : 
; 295  :     return dwStatus;
; 296  : }

  001a0	e1a00004	 mov         r0, r4
  001a4	e28dd028	 add         sp, sp, #0x28
  001a8	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  001ac	e12fff1e	 bx          lr
  001b0		 |$LN27@GetDeviceP|
  001b0		 |$LN28@GetDeviceP|
  001b0	00000000	 DCD         |??_C@_1GA@IIJMLOP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAG?$AAE?$AAT?$AA?0@|
  001b4		 |$LN29@GetDeviceP|
  001b4	00000000	 DCD         |??_C@_1BO@OMCCOOEP@?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$AA@|
  001b8		 |$LN30@GetDeviceP|
  001b8	00000000	 DCD         |??_C@_1GK@HFOAPAGC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAG?$AAE?$AAT?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe@|
  001bc		 |$LN31@GetDeviceP|
  001bc	00321004	 DCD         0x321004
  001c0		 |$LN32@GetDeviceP|
  001c0	00000000	 DCD         |??_C@_1DC@NDCGFHLP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN?$AA?6?$AA?$AA@|
  001c4		 |$LN33@GetDeviceP|
  001c4	00000000	 DCD         |??_C@_1DK@KOLEMAMB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAi?$AAs?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN?$AA?6?$AA?$AA@|
  001c8		 |$LN34@GetDeviceP|
  001c8	00000000	 DCD         |dpCurSettings|
  001cc		 |$M34204|

			 ENDP  ; |?GetDevicePower@@YAKPAU_DeviceState_tag@@PAW4_CEDEVICE_POWER_STATE@@@Z|, GetDevicePower

	EXPORT	|?GetNewDeviceDx@@YA?AW4_CEDEVICE_POWER_STATE@@W41@0000@Z| ; GetNewDeviceDx

  00000			 AREA	 |.pdata|, PDATA
|$T34229| DCD	|$LN12@GetNewDevi|
	DCD	0x40001401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetNewDeviceDx@@YA?AW4_CEDEVICE_POWER_STATE@@W41@0000@Z| PROC ; GetNewDeviceDx

; 310  : {

  00000		 |$LN12@GetNewDevi|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M34226|
  00004	e1a0e001	 mov         lr, r1

; 311  :     CEDEVICE_POWER_STATE newDx = reqDx;
; 312  : 
; 313  :     DEBUGCHK(reqDx != PwrDeviceUnspecified);
; 314  :     DEBUGCHK(VALID_DX(reqDx));
; 315  : 
; 316  :     // determine which power state state to put the device into as a result
; 317  :     // of this update.  The device may already be in a valid state, in which
; 318  :     // case we don't need to do anything.
; 319  :     if(setDx != PwrDeviceUnspecified) {

  00008	e3720001	 cmn         r2, #1

; 320  :         newDx = setDx;
; 321  :     } else {

  0000c	1a000005	 bne         |$LN4@GetNewDevi|

; 322  :         // no explicitly set power level, compare current values against
; 323  :         // boundaries
; 324  :         newDx = reqDx;                  // assume this setting is ok
; 325  :         if(newDx < ceilingDx) {

  00010	e59d1004	 ldr         r1, [sp, #4]
  00014	e1a02000	 mov         r2, r0
  00018	e1500001	 cmp         r0, r1

; 326  :             // lower power to the level of the ceiling
; 327  :             newDx = ceilingDx;

  0001c	b1a02001	 movlt       r2, r1

; 328  :         }
; 329  :         if(floorDx < newDx) {

  00020	e1530002	 cmp         r3, r2

; 330  :             // raise power to the level of the floor
; 331  :             newDx = floorDx;

  00024	b1a02003	 movlt       r2, r3
  00028		 |$LN4@GetNewDevi|

; 332  :         }
; 333  :     }
; 334  : 
; 335  :     // return no change if the new state is unchanged or is invalid
; 336  :     // (for example, if DevicePowerNotify() while processing 
; 337  :     // IOCTL_POWER_CAPABILITIES)
; 338  :     if(curDx == newDx || ! VALID_DX(newDx)) {

  00028	e15e0002	 cmp         lr, r2
  0002c	0a000003	 beq         |$LN1@GetNewDevi|
  00030	e3720001	 cmn         r2, #1
  00034	da000001	 ble         |$LN1@GetNewDevi|
  00038	e3520005	 cmp         r2, #5
  0003c	ba000000	 blt         |$LN3@GetNewDevi|
  00040		 |$LN1@GetNewDevi|

; 339  :         newDx = PwrDeviceUnspecified;

  00040	e3e02000	 mvn         r2, #0
  00044		 |$LN3@GetNewDevi|

; 340  :     }
; 341  : 
; 342  :     return newDx;
; 343  : }

  00044	e1a00002	 mov         r0, r2
  00048	e49de004	 ldr         lr, [sp], #4
  0004c	e12fff1e	 bx          lr
  00050		 |$M34227|

			 ENDP  ; |?GetNewDeviceDx@@YA?AW4_CEDEVICE_POWER_STATE@@W41@0000@Z|, GetNewDeviceDx

	EXPORT	|?GetNewDeviceStateInfo@@YAHPAW4_CEDEVICE_POWER_STATE@@0PAU_DeviceState_tag@@PAU_SystemPowerState_tag@@PAU_DevicePowerRestriction_tag@@3@Z| ; GetNewDeviceStateInfo
	IMPORT	|PowerRestrictionFindList|

  00000			 AREA	 |.pdata|, PDATA
|$T34274| DCD	|$LN44@GetNewDevi@2|
	DCD	0x40007302
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetNewDeviceStateInfo@@YAHPAW4_CEDEVICE_POWER_STATE@@0PAU_DeviceState_tag@@PAU_SystemPowerState_tag@@PAU_DevicePowerRestriction_tag@@3@Z| PROC ; GetNewDeviceStateInfo

; 358  : {

  00000		 |$LN44@GetNewDevi@2|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M34271|
  00008	e1a06003	 mov         r6, r3
  0000c	e1a08002	 mov         r8, r2
  00010	e1a09001	 mov         r9, r1
  00014	e1a0a000	 mov         r10, r0

; 359  :     BOOL fOk = TRUE;
; 360  :     DEVICEID devId;
; 361  :     PDEVICE_POWER_RESTRICTION pdpr;
; 362  :     CEDEVICE_POWER_STATE newFloorDx, newCeilingDx;
; 363  : 
; 364  : #ifndef SHIP_BUILD
; 365  : 	SETFNAME(_T("GetNewDeviceStateInfo"));
; 366  : 	UNREFERENCED_PARAMETER(pszFname);
; 367  : #endif
; 368  : 
; 369  :     PREFAST_DEBUGCHK(psps != NULL);
; 370  :     PREFAST_DEBUGCHK(pNewFloorDx != NULL);
; 371  :     PREFAST_DEBUGCHK(pNewCeilingDx != NULL);
; 372  : 
; 373  :     // Assume the default ceiling state.  Since power ceilings are defined in
; 374  :     // the registry, there should be at most one that matches the device's 
; 375  :     // class and one that matches the device exactly.
; 376  :     newCeilingDx = psps->defaultCeilingDx;
; 377  : 
; 378  :     // look for power restrictions that match this device's class
; 379  :     devId.pGuid = pds->pListHead->pGuid;

  00018	e598e064	 ldr         lr, [r8, #0x64]

; 380  :     devId.pszName = NULL;
; 381  :     if((pdpr = PowerRestrictionFindList(pCeilingDxList, &devId, NULL)) != NULL) {

  0001c	e59d002c	 ldr         r0, [sp, #0x2C]
  00020	e3a03000	 mov         r3, #0
  00024	e59ee000	 ldr         lr, [lr]
  00028	e5967004	 ldr         r7, [r6, #4]
  0002c	e3a02000	 mov         r2, #0
  00030	e28d1000	 add         r1, sp, #0
  00034	e58de000	 str         lr, [sp]
  00038	e58d3004	 str         r3, [sp, #4]
  0003c	eb000000	 bl          PowerRestrictionFindList
  00040	e3500000	 cmp         r0, #0

; 382  :         newCeilingDx = pdpr->devDx;

  00044	15907008	 ldrne       r7, [r0, #8]

; 383  :     }
; 384  : 
; 385  :     // look for power restrictions that match this device exactly
; 386  :     devId.pszName = pds->pszName;

  00048	e598e000	 ldr         lr, [r8]

; 387  :     if((pdpr = PowerRestrictionFindList(pCeilingDxList, &devId, NULL)) != NULL) {

  0004c	e59d002c	 ldr         r0, [sp, #0x2C]
  00050	e3a02000	 mov         r2, #0
  00054	e28d1000	 add         r1, sp, #0
  00058	e58de004	 str         lr, [sp, #4]
  0005c	eb000000	 bl          PowerRestrictionFindList

; 388  :         newCeilingDx = pdpr->devDx;
; 389  :     }
; 390  : 
; 391  :     // Assume the default floor (device turned off).  There may be multiple
; 392  :     // power floors specified in the registry so we will have to look for
; 393  :     // matches of several different types.
; 394  :     newFloorDx = D4;
; 395  : 
; 396  :     // are we ignoring application requirements in this system power state?
; 397  :     if((psps->dwFlags & (POWER_STATE_CRITICAL | POWER_STATE_OFF)) == 0) {

  00060	e5963008	 ldr         r3, [r6, #8]
  00064	e3500000	 cmp         r0, #0
  00068	15907008	 ldrne       r7, [r0, #8]
  0006c	e3130806	 tst         r3, #6, 16
  00070	e3a04004	 mov         r4, #4
  00074	1a00004e	 bne         |$LN4@GetNewDevi@2|

; 398  :         BOOL fNeedForce;
; 399  : 
; 400  :         // is the default for this power state to ignore application requirements?
; 401  :         if((psps->dwFlags & POWER_STATE_SUSPEND) != 0) {

  00078	e3130602	 tst         r3, #2, 12

; 402  :             fNeedForce = TRUE;
; 403  :         } else {
; 404  :             fNeedForce = FALSE;
; 405  :         }
; 406  : 
; 407  :         // no, look for the least restricted floor based on device class for any
; 408  :         // system power state
; 409  :         devId.pszName = NULL;
; 410  :         pdpr = pFloorDxList;
; 411  :         while((pdpr = PowerRestrictionFindList(pdpr, &devId, NULL)) != NULL) {

  0007c	e3a03000	 mov         r3, #0
  00080	e59d0028	 ldr         r0, [sp, #0x28]
  00084	13a05001	 movne       r5, #1
  00088	03a05000	 moveq       r5, #0
  0008c	e58d3004	 str         r3, [sp, #4]
  00090	ea000009	 b           |$LN35@GetNewDevi@2|
  00094		 |$LL17@GetNewDevi@2|

; 412  :             if(pdpr->devDx < newFloorDx
; 413  :             && (fNeedForce == FALSE || (pdpr->dwFlags & POWER_FORCE) != 0)) {

  00094	e5902008	 ldr         r2, [r0, #8]
  00098	e1520004	 cmp         r2, r4
  0009c	aa000005	 bge         |$LN15@GetNewDevi@2|
  000a0	e3550000	 cmp         r5, #0
  000a4	0a000002	 beq         |$LN14@GetNewDevi@2|
  000a8	e5903010	 ldr         r3, [r0, #0x10]
  000ac	e3130a01	 tst         r3, #1, 20
  000b0	0a000000	 beq         |$LN15@GetNewDevi@2|
  000b4		 |$LN14@GetNewDevi@2|

; 414  :                 newFloorDx = pdpr->devDx;

  000b4	e1a04002	 mov         r4, r2
  000b8		 |$LN15@GetNewDevi@2|

; 415  :             }
; 416  :             pdpr = pdpr->pNext;

  000b8	e5900014	 ldr         r0, [r0, #0x14]
  000bc		 |$LN35@GetNewDevi@2|
  000bc	e3a02000	 mov         r2, #0
  000c0	e28d1000	 add         r1, sp, #0
  000c4	eb000000	 bl          PowerRestrictionFindList
  000c8	e3500000	 cmp         r0, #0
  000cc	1afffff0	 bne         |$LL17@GetNewDevi@2|

; 417  :         }
; 418  :         
; 419  :         // look for the least restricted floor based on device class for
; 420  :         // this system power state
; 421  :         devId.pszName = NULL;
; 422  :         pdpr = pFloorDxList;
; 423  :         while((pdpr = PowerRestrictionFindList(pdpr, &devId, psps->pszName)) 
; 424  :             != NULL) {

  000d0	e3a03000	 mov         r3, #0
  000d4	e59d0028	 ldr         r0, [sp, #0x28]
  000d8	e58d3004	 str         r3, [sp, #4]
  000dc	ea000009	 b           |$LN37@GetNewDevi@2|
  000e0		 |$LL13@GetNewDevi@2|

; 425  :             if(pdpr->devDx < newFloorDx
; 426  :             && (fNeedForce == FALSE || (pdpr->dwFlags & POWER_FORCE) != 0)) {

  000e0	e5902008	 ldr         r2, [r0, #8]
  000e4	e1520004	 cmp         r2, r4
  000e8	aa000005	 bge         |$LN11@GetNewDevi@2|
  000ec	e3550000	 cmp         r5, #0
  000f0	0a000002	 beq         |$LN10@GetNewDevi@2|
  000f4	e5903010	 ldr         r3, [r0, #0x10]
  000f8	e3130a01	 tst         r3, #1, 20
  000fc	0a000000	 beq         |$LN11@GetNewDevi@2|
  00100		 |$LN10@GetNewDevi@2|

; 427  :                 newFloorDx = pdpr->devDx;

  00100	e1a04002	 mov         r4, r2
  00104		 |$LN11@GetNewDevi@2|

; 428  :             }
; 429  :             pdpr = pdpr->pNext;

  00104	e5900014	 ldr         r0, [r0, #0x14]
  00108		 |$LN37@GetNewDevi@2|
  00108	e5962000	 ldr         r2, [r6]
  0010c	e28d1000	 add         r1, sp, #0
  00110	eb000000	 bl          PowerRestrictionFindList
  00114	e3500000	 cmp         r0, #0
  00118	1afffff0	 bne         |$LL13@GetNewDevi@2|

; 430  :         }
; 431  :         
; 432  :         // look for the least restricted floor based on an exact 
; 433  :         // match with this device for any system power state
; 434  :         devId.pszName = pds->pszName;

  0011c	e5983000	 ldr         r3, [r8]

; 435  :         pdpr = pFloorDxList;
; 436  :         while((pdpr = PowerRestrictionFindList(pdpr, &devId, NULL)) != NULL) {

  00120	e59d0028	 ldr         r0, [sp, #0x28]
  00124	e58d3004	 str         r3, [sp, #4]
  00128	ea000009	 b           |$LN39@GetNewDevi@2|
  0012c		 |$LL9@GetNewDevi@2|

; 437  :             if(pdpr->devDx < newFloorDx
; 438  :             && (fNeedForce == FALSE || (pdpr->dwFlags & POWER_FORCE) != 0)) {

  0012c	e5902008	 ldr         r2, [r0, #8]
  00130	e1520004	 cmp         r2, r4
  00134	aa000005	 bge         |$LN7@GetNewDevi@2|
  00138	e3550000	 cmp         r5, #0
  0013c	0a000002	 beq         |$LN6@GetNewDevi@2|
  00140	e5903010	 ldr         r3, [r0, #0x10]
  00144	e3130a01	 tst         r3, #1, 20
  00148	0a000000	 beq         |$LN7@GetNewDevi@2|
  0014c		 |$LN6@GetNewDevi@2|

; 439  :                 newFloorDx = pdpr->devDx;

  0014c	e1a04002	 mov         r4, r2
  00150		 |$LN7@GetNewDevi@2|

; 440  :             }
; 441  :             pdpr = pdpr->pNext;

  00150	e5900014	 ldr         r0, [r0, #0x14]
  00154		 |$LN39@GetNewDevi@2|
  00154	e3a02000	 mov         r2, #0
  00158	e28d1000	 add         r1, sp, #0
  0015c	eb000000	 bl          PowerRestrictionFindList
  00160	e3500000	 cmp         r0, #0
  00164	1afffff0	 bne         |$LL9@GetNewDevi@2|

; 442  :         }
; 443  :         
; 444  :         // look for the least restricted floor based on an exact 
; 445  :         // match with this device for this system power state
; 446  :         devId.pszName = pds->pszName;

  00168	e5983000	 ldr         r3, [r8]

; 447  :         pdpr = pFloorDxList;
; 448  :         while((pdpr = PowerRestrictionFindList(pdpr, &devId, psps->pszName)) 
; 449  :             != NULL) {

  0016c	e59d0028	 ldr         r0, [sp, #0x28]
  00170	e58d3004	 str         r3, [sp, #4]
  00174	ea000009	 b           |$LN41@GetNewDevi@2|
  00178		 |$LL5@GetNewDevi@2|

; 450  :             if(pdpr->devDx < newFloorDx
; 451  :             && (fNeedForce == FALSE || (pdpr->dwFlags & POWER_FORCE) != 0)) {

  00178	e5902008	 ldr         r2, [r0, #8]
  0017c	e1520004	 cmp         r2, r4
  00180	aa000005	 bge         |$LN3@GetNewDevi@2|
  00184	e3550000	 cmp         r5, #0
  00188	0a000002	 beq         |$LN2@GetNewDevi@2|
  0018c	e5903010	 ldr         r3, [r0, #0x10]
  00190	e3130a01	 tst         r3, #1, 20
  00194	0a000000	 beq         |$LN3@GetNewDevi@2|
  00198		 |$LN2@GetNewDevi@2|

; 452  :                 newFloorDx = pdpr->devDx;

  00198	e1a04002	 mov         r4, r2
  0019c		 |$LN3@GetNewDevi@2|

; 453  :             }
; 454  :             pdpr = pdpr->pNext;

  0019c	e5900014	 ldr         r0, [r0, #0x14]
  001a0		 |$LN41@GetNewDevi@2|
  001a0	e5962000	 ldr         r2, [r6]
  001a4	e28d1000	 add         r1, sp, #0
  001a8	eb000000	 bl          PowerRestrictionFindList
  001ac	e3500000	 cmp         r0, #0
  001b0	1afffff0	 bne         |$LL5@GetNewDevi@2|
  001b4		 |$LN4@GetNewDevi@2|

; 455  :         }
; 456  :     }
; 457  : 
; 458  :     // pass back values
; 459  :     if(fOk) {
; 460  :         *pNewCeilingDx = newCeilingDx;

  001b4	e5897000	 str         r7, [r9]

; 461  :         *pNewFloorDx = newFloorDx;

  001b8	e58a4000	 str         r4, [r10]

; 462  :     }
; 463  : 
; 464  :     return fOk;

  001bc	e3a00001	 mov         r0, #1

; 465  : }

  001c0	e28dd008	 add         sp, sp, #8
  001c4	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  001c8	e12fff1e	 bx          lr
  001cc		 |$M34272|

			 ENDP  ; |?GetNewDeviceStateInfo@@YAHPAW4_CEDEVICE_POWER_STATE@@0PAU_DeviceState_tag@@PAU_SystemPowerState_tag@@PAU_DevicePowerRestriction_tag@@3@Z|, GetNewDeviceStateInfo

	EXPORT	|UpdateDeviceState|
	EXPORT	|??_C@_1FE@DBFKJONC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?0?$AA?5?$AAD?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAf?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@CAIOEKPL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAr?$AAy?$AAi?$AAn?$AAg?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAS?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$CI@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GC@MFOGLPNF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAa?$AAc?$AAe?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAo?$AAn?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?0?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LI@ONJFAOHO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAu?$AAp?$AAd?$AAa?$AAt?$AAe?$AAd?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAi?$AAs?$AA?5?$AAc?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1LK@HNNJIBGA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAe?$AAw?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAi?$AAs?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CI?$AAc?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@BHDGPEPL@?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@CIFKLECB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAe?$AAn?$AAt?$AAr?$AAa?$AAn?$AAt?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?0?$AA?5?$AAs?$AAe?$AAt?$AAt@| [ DATA ] ; `string'
	IMPORT	|gpSystemPowerState|
	IMPORT	|gpFloorDx|
	IMPORT	|gpCeilingDx|

  00000			 AREA	 |.pdata|, PDATA
|$T34304| DCD	|$LN32@UpdateDevi|
	DCD	0x4000a602

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@DBFKJONC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?0?$AA?5?$AAD?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAf?$AAa@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "("
	DCB	0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'", 0x0, ",", 0x0, " "
	DCB	0x0, "D", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@CAIOEKPL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAr?$AAy?$AAi?$AAn?$AAg?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAS?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$CI@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t"
	DCB	0x0, "r", 0x0, "y", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, "("
	DCB	0x0, "%", 0x0, "d", 0x0, ")", 0x0, " ", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c"
	DCB	0x0, "e", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r"
	DCB	0x0, "(", 0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'", 0x0, ","
	DCB	0x0, " ", 0x0, "D", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@MFOGLPNF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAa?$AAc?$AAe?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAo?$AAn?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?0?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "a", 0x0, "c"
	DCB	0x0, "e", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "t", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "o"
	DCB	0x0, "n", 0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'"
	DCB	0x0, ",", 0x0, " ", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "E", 0x0, "R"
	DCB	0x0, "R", 0x0, "O", 0x0, "R", 0x0, "_", 0x0, "R", 0x0, "E"
	DCB	0x0, "T", 0x0, "R", 0x0, "Y", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LI@ONJFAOHO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAu?$AAp?$AAd?$AAa?$AAt?$AAe?$AAd?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAi?$AAs?$AA?5?$AAc?$AAu@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "u", 0x0, "p", 0x0, "d"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "s"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "f"
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s"
	DCB	0x0, "'", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "c"
	DCB	0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "n", 0x0, "t"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "q", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "f", 0x0, "l", 0x0, "o"
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "l", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "a", 0x0, "c", 0x0, "t", 0x0, "u", 0x0, "a"
	DCB	0x0, "l", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1LK@HNNJIBGA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAe?$AAw?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAi?$AAs?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CI?$AAc?$AAu@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "n", 0x0, "e", 0x0, "w"
	DCB	0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "'"
	DCB	0x0, "%", 0x0, "s", 0x0, "'", 0x0, " ", 0x0, "i", 0x0, "s"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "(", 0x0, "c"
	DCB	0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "n", 0x0, "t"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "q", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ",", 0x0, " ", 0x0, "f", 0x0, "l", 0x0, "o"
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "l", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "a", 0x0, "c", 0x0, "t", 0x0, "u", 0x0, "a"
	DCB	0x0, "l", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@BHDGPEPL@?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@| DCB "U"
	DCB	0x0, "p", 0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@CIFKLECB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAe?$AAn?$AAt?$AAr?$AAa?$AAn?$AAt?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?0?$AA?5?$AAs?$AAe?$AAt?$AAt@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "t"
	DCB	0x0, " ", 0x0, "s", 0x0, "e", 0x0, "t", 0x0, " ", 0x0, "f"
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s"
	DCB	0x0, "'", 0x0, ",", 0x0, " ", 0x0, "s", 0x0, "e", 0x0, "t"
	DCB	0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |UpdateDeviceState| PROC

; 471  : {

  00000		 |$LN32@UpdateDevi|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd020	 sub         sp, sp, #0x20
  00008		 |$M34301|
  00008	e1a07000	 mov         r7, r0

; 472  :     BOOL fOk = TRUE;
; 473  :     DWORD dwStatus = ERROR_SUCCESS;
; 474  :     DWORD dwRetryCount = 0;

  0000c	e3a03000	 mov         r3, #0
  00010	e58d301c	 str         r3, [sp, #0x1C]
  00014	e3a03b01	 mov         r3, #1, 22
  00018	e38350d5	 orr         r5, r3, #0xD5
  0001c	e59f4258	 ldr         r4, [pc, #0x258]
  00020	e58d5018	 str         r5, [sp, #0x18]
  00024	e3a08000	 mov         r8, #0
  00028		 |$LL13@UpdateDevi|

; 475  : 
; 476  : #ifndef SHIP_BUILD
; 477  :     SETFNAME(_T("UpdateDeviceState"));
; 478  : #endif
; 479  : 
; 480  :     do {
; 481  :         CEDEVICE_POWER_STATE newDx = PwrDeviceUnspecified;

  00028	e3e09000	 mvn         r9, #0

; 482  :         CEDEVICE_POWER_STATE oldLastReqDx = PwrDeviceUnspecified;

  0002c	e3e0a000	 mvn         r10, #0

; 483  :         BOOL fForce = FALSE;

  00030	e3a06000	 mov         r6, #0

; 484  :         
; 485  :         PMLOCK();

  00034	eb000000	 bl          PmLock

; 486  :         // get the new device power state (based on the last device power state
; 487  :         // the device wanted -- this value is initialized to D0 in case the 
; 488  :         // device never makes any power requests on its own.
; 489  :         fOk = GetNewDeviceStateInfo(&pds->floorDx, &pds->ceilingDx,
; 490  :             pds, gpSystemPowerState, gpFloorDx, gpCeilingDx);

  00038	e59f3254	 ldr         r3, [pc, #0x254]
  0003c	e2870008	 add         r0, r7, #8
  00040	e5931000	 ldr         r1, [r3]
  00044	e59f3244	 ldr         r3, [pc, #0x244]
  00048	e58d1004	 str         r1, [sp, #4]
  0004c	e5932000	 ldr         r2, [r3]
  00050	e59f3234	 ldr         r3, [pc, #0x234]
  00054	e287100c	 add         r1, r7, #0xC
  00058	e58d2000	 str         r2, [sp]
  0005c	e5933000	 ldr         r3, [r3]
  00060	e1a02007	 mov         r2, r7
  00064	eb000000	 bl          |?GetNewDeviceStateInfo@@YAHPAW4_CEDEVICE_POWER_STATE@@0PAU_DeviceState_tag@@PAU_SystemPowerState_tag@@PAU_DevicePowerRestriction_tag@@3@Z|
  00068	e1b0b000	 movs        r11, r0

; 491  :         if(fOk) {

  0006c	0a000031	 beq         |$LN10@UpdateDevi|

; 492  :             // We have to monitor changes to pds->lastReqDx, since multiple threads can be 
; 493  :             // in the PM at once calling DevicePowerNotify().
; 494  :             newDx = GetNewDeviceDx(pds->lastReqDx, pds->curDx, pds->setDx, pds->floorDx, pds->ceilingDx);

  00070	e5975004	 ldr         r5, [r7, #4]
  00074	e597e00c	 ldr         lr, [r7, #0xC]
  00078	e5973008	 ldr         r3, [r7, #8]
  0007c	e5972010	 ldr         r2, [r7, #0x10]
  00080	e5970014	 ldr         r0, [r7, #0x14]
  00084	e1a01005	 mov         r1, r5
  00088	e58de000	 str         lr, [sp]
  0008c	eb000000	 bl          |?GetNewDeviceDx@@YA?AW4_CEDEVICE_POWER_STATE@@W41@0000@Z|
  00090	e1a09000	 mov         r9, r0

; 495  :             if(newDx == PwrDeviceUnspecified && (pds->dwNumPending != 0 || dwStatus == ERROR_RETRY)) {

  00094	e3790001	 cmn         r9, #1
  00098	1a00000f	 bne         |$LN29@UpdateDevi|
  0009c	e5972020	 ldr         r2, [r7, #0x20]
  000a0	e3520000	 cmp         r2, #0
  000a4	1a000002	 bne         |$LN8@UpdateDevi|
  000a8	e59d3018	 ldr         r3, [sp, #0x18]
  000ac	e1580003	 cmp         r8, r3
  000b0	1a000009	 bne         |$LN29@UpdateDevi|
  000b4		 |$LN8@UpdateDevi|

; 496  :                 PMLOGMSG(ZONE_DEVICE, 
; 497  :                     (_T("%s: reentrant set for '%s', setting %d\r\n"), pszFname, pds->pszName, pds->curDx));

  000b4	e5942440	 ldr         r2, [r4, #0x440]
  000b8	e3120010	 tst         r2, #0x10
  000bc	15972000	 ldrne       r2, [r7]
  000c0	159f11a8	 ldrne       r1, [pc, #0x1A8]
  000c4	159f01bc	 ldrne       r0, [pc, #0x1BC]
  000c8	11a03005	 movne       r3, r5
  000cc	1b000000	 blne        CeLogMsg

; 498  :                 newDx = pds->curDx;

  000d0	e5975004	 ldr         r5, [r7, #4]

; 499  :                 fForce = TRUE;

  000d4	e3a06001	 mov         r6, #1
  000d8	e1a09005	 mov         r9, r5
  000dc		 |$LN29@UpdateDevi|
  000dc	e5943440	 ldr         r3, [r4, #0x440]

; 500  :             }
; 501  :             PMLOGMSG(ZONE_DEVICE, 
; 502  :                 (_T("%s: new state for '%s' is %d (current %d, req %d, set %d, floor %d, ceiling %d, actual %d)\r\n"),
; 503  :                 pszFname, pds->pszName, newDx, pds->curDx, pds->lastReqDx, pds->setDx, pds->floorDx, pds->ceilingDx, pds->actualDx));

  000e0	e3130010	 tst         r3, #0x10
  000e4	0a000010	 beq         |$LN18@UpdateDevi|
  000e8	e597100c	 ldr         r1, [r7, #0xC]
  000ec	e5970008	 ldr         r0, [r7, #8]
  000f0	e5973018	 ldr         r3, [r7, #0x18]
  000f4	e597e010	 ldr         lr, [r7, #0x10]
  000f8	e5974014	 ldr         r4, [r7, #0x14]
  000fc	e5972000	 ldr         r2, [r7]
  00100	e58d1010	 str         r1, [sp, #0x10]
  00104	e59f1164	 ldr         r1, [pc, #0x164]
  00108	e58d000c	 str         r0, [sp, #0xC]
  0010c	e59f0170	 ldr         r0, [pc, #0x170]
  00110	e58d3014	 str         r3, [sp, #0x14]
  00114	e1a03009	 mov         r3, r9
  00118	e58de008	 str         lr, [sp, #8]
  0011c	e58d4004	 str         r4, [sp, #4]
  00120	e58d5000	 str         r5, [sp]
  00124	eb000000	 bl          CeLogMsg
  00128	e59f414c	 ldr         r4, [pc, #0x14C]
  0012c		 |$LN18@UpdateDevi|

; 504  :             oldLastReqDx = pds->lastReqDx;

  0012c	e597a014	 ldr         r10, [r7, #0x14]
  00130	e59d5018	 ldr         r5, [sp, #0x18]

; 505  :             dwStatus = ERROR_SUCCESS;

  00134	e3a08000	 mov         r8, #0
  00138		 |$LN10@UpdateDevi|

; 506  :         }
; 507  :         PMUNLOCK();

  00138	eb000000	 bl          PmUnlock

; 508  : 
; 509  :         // do we need to update the device?
; 510  :         if(fOk && newDx != PwrDeviceUnspecified) {

  0013c	e35b0000	 cmp         r11, #0
  00140	0a000045	 beq         |$LN1@UpdateDevi|
  00144	e3790001	 cmn         r9, #1
  00148	0a00003f	 beq         |$LN12@UpdateDevi|

; 511  :             // yes, set its power state to the new value
; 512  :             dwStatus = SetDevicePower(pds, newDx, fForce);

  0014c	e1a02006	 mov         r2, r6
  00150	e1a01009	 mov         r1, r9
  00154	e1a00007	 mov         r0, r7
  00158	eb000000	 bl          |?SetDevicePower@@YAKPAU_DeviceState_tag@@W4_CEDEVICE_POWER_STATE@@H@Z|
  0015c	e1b08000	 movs        r8, r0

; 513  :             if(dwStatus == ERROR_SUCCESS) {

  00160	1a000020	 bne         |$LN6@UpdateDevi|

; 514  :                 PMLOCK();

  00164	eb000000	 bl          PmLock

; 515  :                 PMLOGMSG(ZONE_DEVICE, 
; 516  :                     (_T("%s: updated state for '%s' is current %d, req %d, set %d, floor %d, ceiling %d, actual %d\r\n"),
; 517  :                     pszFname, pds->pszName, pds->curDx, pds->lastReqDx, pds->setDx, pds->floorDx, pds->ceilingDx, pds->actualDx));

  00168	e5942440	 ldr         r2, [r4, #0x440]
  0016c	e3120010	 tst         r2, #0x10
  00170	0a000010	 beq         |$LN20@UpdateDevi|
  00174	e5971018	 ldr         r1, [r7, #0x18]
  00178	e597e00c	 ldr         lr, [r7, #0xC]
  0017c	e5974008	 ldr         r4, [r7, #8]
  00180	e5975010	 ldr         r5, [r7, #0x10]
  00184	e5976014	 ldr         r6, [r7, #0x14]
  00188	e5973004	 ldr         r3, [r7, #4]
  0018c	e5972000	 ldr         r2, [r7]
  00190	e59f00e8	 ldr         r0, [pc, #0xE8]
  00194	e58d1010	 str         r1, [sp, #0x10]
  00198	e59f10d0	 ldr         r1, [pc, #0xD0]
  0019c	e58de00c	 str         lr, [sp, #0xC]
  001a0	e58d4008	 str         r4, [sp, #8]
  001a4	e58d5004	 str         r5, [sp, #4]
  001a8	e58d6000	 str         r6, [sp]
  001ac	eb000000	 bl          CeLogMsg
  001b0	e59f40c4	 ldr         r4, [pc, #0xC4]
  001b4	e5942440	 ldr         r2, [r4, #0x440]
  001b8		 |$LN20@UpdateDevi|

; 518  :                 if(pds->lastReqDx != oldLastReqDx) {

  001b8	e5973014	 ldr         r3, [r7, #0x14]
  001bc	e153000a	 cmp         r3, r10
  001c0	0a000006	 beq         |$LN5@UpdateDevi|

; 519  :                     PMLOGMSG(ZONE_DEVICE, (_T("%s: race detected on '%s', setting ERROR_RETRY\r\n"),
; 520  :                         pszFname, pds->pszName));

  001c4	e3120010	 tst         r2, #0x10
  001c8	15972000	 ldrne       r2, [r7]
  001cc	159f109c	 ldrne       r1, [pc, #0x9C]
  001d0	159f00a0	 ldrne       r0, [pc, #0xA0]
  001d4	1b000000	 blne        CeLogMsg

; 521  :                     dwStatus = ERROR_RETRY;

  001d8	e59d3018	 ldr         r3, [sp, #0x18]
  001dc	e1a08003	 mov         r8, r3
  001e0		 |$LN5@UpdateDevi|

; 522  :                 }
; 523  :                 PMUNLOCK();

  001e0	eb000000	 bl          PmUnlock
  001e4	e59d5018	 ldr         r5, [sp, #0x18]
  001e8		 |$LN6@UpdateDevi|

; 524  :             }
; 525  :             
; 526  :             if(dwStatus == ERROR_RETRY) {

  001e8	e1580005	 cmp         r8, r5
  001ec	1a00000b	 bne         |$LN4@UpdateDevi|

; 527  :                 dwRetryCount++;
; 528  :                 PMLOGMSG(ZONE_DEVICE, (_T("%s: retrying(%d) SetDevicePower('%s', D%d)\r\n"), 
; 529  :                     pszFname,dwRetryCount, pds->pszName, newDx));

  001f0	e59d201c	 ldr         r2, [sp, #0x1C]
  001f4	e5943440	 ldr         r3, [r4, #0x440]
  001f8	e2822001	 add         r2, r2, #1
  001fc	e58d201c	 str         r2, [sp, #0x1C]
  00200	e3130010	 tst         r3, #0x10
  00204	0a000010	 beq         |$LN12@UpdateDevi|
  00208	e5973000	 ldr         r3, [r7]
  0020c	e59f105c	 ldr         r1, [pc, #0x5C]
  00210	e59f005c	 ldr         r0, [pc, #0x5C]
  00214	e58d9000	 str         r9, [sp]
  00218	eb000000	 bl          CeLogMsg

; 530  :             } else if(dwStatus != ERROR_SUCCESS) {

  0021c	ea00000a	 b           |$LN12@UpdateDevi|
  00220		 |$LN4@UpdateDevi|
  00220	e3580000	 cmp         r8, #0
  00224	0a000008	 beq         |$LN12@UpdateDevi|

; 531  :                 PMLOGMSG(ZONE_DEVICE, (_T("%s: SetDevicePower('%s', D%d) failed %d\r\n"), 
; 532  :                     pszFname, pds->pszName, newDx, dwStatus));

  00228	e5943440	 ldr         r3, [r4, #0x440]
  0022c	e3130010	 tst         r3, #0x10
  00230	15972000	 ldrne       r2, [r7]
  00234	159f1034	 ldrne       r1, [pc, #0x34]
  00238	159f002c	 ldrne       r0, [pc, #0x2C]
  0023c	11a03009	 movne       r3, r9
  00240	158d8000	 strne       r8, [sp]
  00244	1b000000	 blne        CeLogMsg

; 533  :                 fOk = FALSE;

  00248	e3a0b000	 mov         r11, #0
  0024c		 |$LN12@UpdateDevi|

; 534  :             }
; 535  :         }
; 536  :     } while(fOk && dwStatus == ERROR_RETRY);

  0024c	e35b0000	 cmp         r11, #0
  00250	0a000001	 beq         |$LN1@UpdateDevi|
  00254	e1580005	 cmp         r8, r5
  00258	0affff72	 beq         |$LL13@UpdateDevi|
  0025c		 |$LN1@UpdateDevi|

; 537  : 
; 538  :     return fOk;
; 539  : }

  0025c	e1a0000b	 mov         r0, r11
  00260	e28dd020	 add         sp, sp, #0x20
  00264	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00268	e12fff1e	 bx          lr
  0026c		 |$LN33@UpdateDevi|
  0026c		 |$LN34@UpdateDevi|
  0026c	00000000	 DCD         |??_C@_1FE@DBFKJONC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?0?$AA?5?$AAD?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAf?$AAa@|
  00270		 |$LN35@UpdateDevi|
  00270	00000000	 DCD         |??_C@_1CE@BHDGPEPL@?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
  00274		 |$LN36@UpdateDevi|
  00274	00000000	 DCD         |??_C@_1FK@CAIOEKPL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAr?$AAy?$AAi?$AAn?$AAg?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAS?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$CI@|
  00278		 |$LN37@UpdateDevi|
  00278	00000000	 DCD         |??_C@_1GC@MFOGLPNF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAa?$AAc?$AAe?$AA?5?$AAd?$AAe?$AAt?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAo?$AAn?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?0?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi@|
  0027c		 |$LN38@UpdateDevi|
  0027c	00000000	 DCD         |dpCurSettings|
  00280		 |$LN39@UpdateDevi|
  00280	00000000	 DCD         |??_C@_1LI@ONJFAOHO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAu?$AAp?$AAd?$AAa?$AAt?$AAe?$AAd?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAi?$AAs?$AA?5?$AAc?$AAu@|
  00284		 |$LN40@UpdateDevi|
  00284	00000000	 DCD         |??_C@_1LK@HNNJIBGA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAe?$AAw?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAi?$AAs?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CI?$AAc?$AAu@|
  00288		 |$LN41@UpdateDevi|
  00288	00000000	 DCD         |??_C@_1FC@CIFKLECB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAe?$AAn?$AAt?$AAr?$AAa?$AAn?$AAt?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?0?$AA?5?$AAs?$AAe?$AAt?$AAt@|
  0028c		 |$LN42@UpdateDevi|
  0028c	00000000	 DCD         |gpSystemPowerState|
  00290		 |$LN43@UpdateDevi|
  00290	00000000	 DCD         |gpFloorDx|
  00294		 |$LN44@UpdateDevi|
  00294	00000000	 DCD         |gpCeilingDx|
  00298		 |$M34302|

			 ENDP  ; |UpdateDeviceState|

	EXPORT	|UpdateClassDeviceStates|
	EXPORT	|??_C@_1DA@MGDEIOCP@?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAC?$AAl?$AAa?$AAs?$AAs?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@BLKCCPJO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAm?$AAo?$AAv?$AAe?$AAd?$AA?5?$AAd?$AAu?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAu@| [ DATA ] ; `string'
	IMPORT	|DeviceStateDecRef|
	IMPORT	|DeviceStateAddRef|

  00000			 AREA	 |.pdata|, PDATA
|$T34336| DCD	|$LN22@UpdateClas|
	DCD	0x40002a01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@MGDEIOCP@?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAC?$AAl?$AAa?$AAs?$AAs?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AAs?$AA?$AA@| DCB "U"
	DCB	0x0, "p", 0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "C"
	DCB	0x0, "l", 0x0, "a", 0x0, "s", 0x0, "s", 0x0, "D", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "s", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@BLKCCPJO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAm?$AAo?$AAv?$AAe?$AAd?$AA?5?$AAd?$AAu?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAu@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "'", 0x0, "%"
	DCB	0x0, "s", 0x0, "'", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "m"
	DCB	0x0, "o", 0x0, "v", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "d"
	DCB	0x0, "u", 0x0, "r", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "u", 0x0, "p", 0x0, "d", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |UpdateClassDeviceStates| PROC

; 787  : {

  00000		 |$LN22@UpdateClas|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M34333|
  00004	e1a07000	 mov         r7, r0

; 788  :     BOOL fDeviceRemoved;
; 789  :     PDEVICE_STATE pds;
; 790  : 
; 791  : #ifndef SHIP_BUILD
; 792  :     SETFNAME(_T("UpdateClassDeviceStates"));
; 793  : #endif
; 794  : 
; 795  :     PREFAST_DEBUGCHK(pdl != NULL);
; 796  : 
; 797  :     PMLOCK();

  00008	eb000000	 bl          PmLock
  0000c	e59f8090	 ldr         r8, [pc, #0x90]
  00010		 |$LL8@UpdateClas|

; 798  : 
; 799  :     // Since it's possible that the device list may be modified
; 800  :     // while we are not holding the PM critical section we need
; 801  :     // to watch out for the device we are working on getting removed.
; 802  :     // We increment the reference count to keep the device data 
; 803  :     // structure from being deallocated out from under us.  Once
; 804  :     // the device update is complete and we have the critical section
; 805  :     // again, we check to see if it's still part of the device list.
; 806  :     // If it's not, we start again at the top of the list.  This should
; 807  :     // be harmless since devices that are at the right power state
; 808  :     // already won't be updated.
; 809  :     do {
; 810  :         fDeviceRemoved = FALSE;
; 811  :         pds = pdl->pList;

  00010	e5974004	 ldr         r4, [r7, #4]
  00014	e3a05000	 mov         r5, #0
  00018		 |$LL5@UpdateClas|

; 812  :         while(!fDeviceRemoved && pds != NULL) {

  00018	e3540000	 cmp         r4, #0
  0001c	0a00001b	 beq         |$LN17@UpdateClas|

; 813  :             PDEVICE_STATE pdsNext = NULL;
; 814  :             DeviceStateAddRef(pds);     // keep the device pointer alive

  00020	e1a00004	 mov         r0, r4
  00024	e3a06000	 mov         r6, #0
  00028	eb000000	 bl          DeviceStateAddRef

; 815  :             
; 816  :             PMUNLOCK();

  0002c	eb000000	 bl          PmUnlock

; 817  :             UpdateDeviceState(pds);

  00030	e1a00004	 mov         r0, r4
  00034	eb000000	 bl          UpdateDeviceState

; 818  :             PMLOCK();

  00038	eb000000	 bl          PmLock

; 819  :             
; 820  :             // is the device still on the list?
; 821  :             if(pds->pListHead == NULL) {

  0003c	e5943064	 ldr         r3, [r4, #0x64]
  00040	e3530000	 cmp         r3, #0
  00044	1a00000a	 bne         |$LN3@UpdateClas|

; 822  :                 // device disappeared while we were accessing it
; 823  :                 PMLOGMSG(ZONE_WARN || ZONE_DEVICE, 
; 824  :                     (_T("%s: device '%s' removed during update\r\n"), pszFname,
; 825  :                     pds->pszName));

  00048	e5983440	 ldr         r3, [r8, #0x440]
  0004c	e3130002	 tst         r3, #2
  00050	1a000001	 bne         |$LN11@UpdateClas|
  00054	e3130010	 tst         r3, #0x10
  00058	0a000003	 beq         |$LN12@UpdateClas|
  0005c		 |$LN11@UpdateClas|
  0005c	e5942000	 ldr         r2, [r4]
  00060	e59f1038	 ldr         r1, [pc, #0x38]
  00064	e59f0030	 ldr         r0, [pc, #0x30]
  00068	eb000000	 bl          CeLogMsg
  0006c		 |$LN12@UpdateClas|

; 826  :                 fDeviceRemoved = TRUE;

  0006c	e3a05001	 mov         r5, #1

; 827  :             } else {

  00070	ea000000	 b           |$LN2@UpdateClas|
  00074		 |$LN3@UpdateClas|

; 828  :                 // save the next pointer so we don't try to
; 829  :                 // dereference pds after decrementing its use count.
; 830  :                 pdsNext = pds->pNext;

  00074	e5946068	 ldr         r6, [r4, #0x68]
  00078		 |$LN2@UpdateClas|

; 831  :             }
; 832  :             DeviceStateDecRef(pds);     // done with the device pointer

  00078	e1a00004	 mov         r0, r4
  0007c	eb000000	 bl          DeviceStateDecRef

; 833  :             if(!fDeviceRemoved) pds = pdsNext;  // on to the next

  00080	e3550000	 cmp         r5, #0
  00084	1affffe1	 bne         |$LL8@UpdateClas|
  00088	e1a04006	 mov         r4, r6

; 812  :         while(!fDeviceRemoved && pds != NULL) {

  0008c	eaffffe1	 b           |$LL5@UpdateClas|
  00090		 |$LN17@UpdateClas|

; 834  :         }
; 835  :     } while(fDeviceRemoved || pds != NULL);
; 836  : 
; 837  :     PMUNLOCK();

  00090	eb000000	 bl          PmUnlock

; 838  : }

  00094	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00098	e12fff1e	 bx          lr
  0009c		 |$LN23@UpdateClas|
  0009c		 |$LN24@UpdateClas|
  0009c	00000000	 DCD         |??_C@_1FA@BLKCCPJO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAm?$AAo?$AAv?$AAe?$AAd?$AA?5?$AAd?$AAu?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAu@|
  000a0		 |$LN25@UpdateClas|
  000a0	00000000	 DCD         |??_C@_1DA@MGDEIOCP@?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAC?$AAl?$AAa?$AAs?$AAs?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AAs?$AA?$AA@|
  000a4		 |$LN26@UpdateClas|
  000a4	00000000	 DCD         |dpCurSettings|
  000a8		 |$M34334|

			 ENDP  ; |UpdateClassDeviceStates|

	EXPORT	|UpdateAllDeviceStates|
	IMPORT	|gpDeviceLists|

  00000			 AREA	 |.pdata|, PDATA
|$T34351| DCD	|$LN11@UpdateAllD|
	DCD	0x40000c01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |UpdateAllDeviceStates| PROC

; 845  : {

  00000		 |$LN11@UpdateAllD|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M34348|

; 846  :     PDEVICE_LIST pdl;
; 847  : 
; 848  :     // update all devices of all classes
; 849  :     for(pdl = gpDeviceLists; pdl != NULL; pdl = pdl->pNext) {

  00004	e59f3020	 ldr         r3, [pc, #0x20]
  00008	e5933000	 ldr         r3, [r3]
  0000c	ea000002	 b           |$LN8@UpdateAllD|
  00010		 |$LL3@UpdateAllD|

; 850  :         UpdateClassDeviceStates(pdl);

  00010	e1a00004	 mov         r0, r4
  00014	eb000000	 bl          UpdateClassDeviceStates
  00018	e5943014	 ldr         r3, [r4, #0x14]
  0001c		 |$LN8@UpdateAllD|
  0001c	e1b04003	 movs        r4, r3
  00020	1afffffa	 bne         |$LL3@UpdateAllD|

; 851  :     }
; 852  : }

  00024	e8bd4010	 ldmia       sp!, {r4, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$LN12@UpdateAllD|
  0002c		 |$LN13@UpdateAllD|
  0002c	00000000	 DCD         |gpDeviceLists|
  00030		 |$M34349|

			 ENDP  ; |UpdateAllDeviceStates|

	EXPORT	|CheckDevicePointer|

  00000			 AREA	 |.pdata|, PDATA
|$T34373| DCD	|$LN20@CheckDevic|
	DCD	0x40001f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |CheckDevicePointer| PROC

; 859  : {

  00000		 |$LN20@CheckDevic|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M34370|
  00004	e1a05000	 mov         r5, r0

; 860  :     PDEVICE_LIST pdl;
; 861  :     BOOL fFound = FALSE;

  00008	e3a04000	 mov         r4, #0

; 862  : 
; 863  :     // look for a match
; 864  :     DEBUGCHK(pds != NULL);
; 865  :     PMLOCK();

  0000c	eb000000	 bl          PmLock

; 866  :     for(pdl = gpDeviceLists; pdl != NULL && !fFound; pdl = pdl->pNext) {

  00010	e59f3060	 ldr         r3, [pc, #0x60]
  00014	e5933000	 ldr         r3, [r3]
  00018	e1b02003	 movs        r2, r3
  0001c	0a000011	 beq         |$LN1@CheckDevic|
  00020		 |$LL8@CheckDevic|
  00020	e3540000	 cmp         r4, #0
  00024	1a00000d	 bne         |$LN16@CheckDevic|

; 867  :         PDEVICE_STATE pdsTraveller;
; 868  :         for(pdsTraveller = pdl->pList; pdsTraveller != NULL; 

  00028	e5923004	 ldr         r3, [r2, #4]
  0002c	ea000002	 b           |$LN17@CheckDevic|
  00030		 |$LL5@CheckDevic|

; 869  :         pdsTraveller = pdsTraveller->pNext) {
; 870  :             if(pdsTraveller == pds) {

  00030	e1530005	 cmp         r3, r5
  00034	0a000003	 beq         |$LN13@CheckDevic|
  00038	e5933068	 ldr         r3, [r3, #0x68]
  0003c		 |$LN17@CheckDevic|
  0003c	e3530000	 cmp         r3, #0
  00040	1afffffa	 bne         |$LL5@CheckDevic|
  00044	ea000000	 b           |$LN7@CheckDevic|
  00048		 |$LN13@CheckDevic|

; 871  :                 fFound = TRUE;

  00048	e3a04001	 mov         r4, #1
  0004c		 |$LN7@CheckDevic|

; 866  :     for(pdl = gpDeviceLists; pdl != NULL && !fFound; pdl = pdl->pNext) {

  0004c	e5923014	 ldr         r3, [r2, #0x14]
  00050	e1b02003	 movs        r2, r3
  00054	1afffff1	 bne         |$LL8@CheckDevic|

; 872  :                 break;
; 873  :             }
; 874  :         }
; 875  :     }
; 876  : 
; 877  :     // did we find the device?
; 878  :     if(fFound) {

  00058	e3540000	 cmp         r4, #0
  0005c	0a000001	 beq         |$LN1@CheckDevic|
  00060		 |$LN16@CheckDevic|

; 879  :         // yes, update its reference count
; 880  :         DeviceStateAddRef(pds);

  00060	e1a00005	 mov         r0, r5
  00064	eb000000	 bl          DeviceStateAddRef
  00068		 |$LN1@CheckDevic|

; 881  :     }
; 882  :     PMUNLOCK();

  00068	eb000000	 bl          PmUnlock

; 883  : 
; 884  :     return fFound;
; 885  : }

  0006c	e1a00004	 mov         r0, r4
  00070	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00074	e12fff1e	 bx          lr
  00078		 |$LN21@CheckDevic|
  00078		 |$LN22@CheckDevic|
  00078	00000000	 DCD         |gpDeviceLists|
  0007c		 |$M34371|

			 ENDP  ; |CheckDevicePointer|

	EXPORT	|AddDevice|
	EXPORT	|??_C@_1FE@BCEMHNLC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@EDCDNHME@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAA?$AAR?$AAN?$AAI?$AAN?$AAG?$AA?3?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAd?$AAo?$AAe?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAu?$AAp?$AAp?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@OBKKFNKO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAI@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@MHPCJPB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@DPFEOIGE@?$AA?$DM?$AAN?$AAU?$AAL?$AAL?$AA?$DO?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@HCHLCCLO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAd?$AAu?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAc?$AAa?$AAp?$AAa?$AAb?$AAi?$AAl?$AAi?$AAt?$AAi?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@PPCJHGAM@?$AAA?$AAd?$AAd?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1NA@CJGBCGAL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAa?$AAd?$AAd?$AAi?$AAn?$AAg?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?0?$AA?5?$AAp?$AAd?$AAs?$AAP?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8@| [ DATA ] ; `string'
	IMPORT	|DeviceStateRemList|
	IMPORT	|DeviceStateAddList|
	IMPORT	|DeviceStateCreate|
	IMPORT	|DeviceStateFindList|
	IMPORT	|GetDeviceListFromClass|
	IMPORT	|__C_specific_handler|
	IMPORT	|memcpy|

  00000			 AREA	 |.pdata|, PDATA
|$T34427| DCD	|$LN60@AddDevice|
	DCD	0xc000ec05

  00000			 AREA	 |.pdata|, PDATA
|$T34429| DCD	|$LN44@AddDevice|
	DCD	0x40001002

  00000			 AREA	 |.xdata|, DATA
|$T34425| DCD	0x1
	DCD	|$LN48@AddDevice|
	DCD	|$LN49@AddDevice|
	DCD	|$LN44@AddDevice|
	DCD	|$LN45@AddDevice|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@BCEMHNLC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAu@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "l", 0x0, "a"
	DCB	0x0, "s", 0x0, "s", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "d", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c"
	DCB	0x0, "e", 0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'"
	DCB	0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "s"
	DCB	0x0, "u", 0x0, "p", 0x0, "p", 0x0, "o", 0x0, "r", 0x0, "t"
	DCB	0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@EDCDNHME@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAA?$AAR?$AAN?$AAI?$AAN?$AAG?$AA?3?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAd?$AAo?$AAe?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAu?$AAp?$AAp?$AAo@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "W", 0x0, "A", 0x0, "R"
	DCB	0x0, "N", 0x0, "I", 0x0, "N", 0x0, "G", 0x0, ":", 0x0, " "
	DCB	0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'", 0x0, " ", 0x0, "d"
	DCB	0x0, "o", 0x0, "e", 0x0, "s", 0x0, " ", 0x0, "n", 0x0, "o"
	DCB	0x0, "t", 0x0, " ", 0x0, "s", 0x0, "u", 0x0, "p", 0x0, "p"
	DCB	0x0, "o", 0x0, "r", 0x0, "t", 0x0, " ", 0x0, "m", 0x0, "u"
	DCB	0x0, "l", 0x0, "t", 0x0, "i", 0x0, "p", 0x0, "l", 0x0, "e"
	DCB	0x0, " ", 0x0, "h", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l"
	DCB	0x0, "e", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@OBKKFNKO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAI@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "v"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "s"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "f", 0x0, "r", 0x0, "o", 0x0, "m", 0x0, " "
	DCB	0x0, "I", 0x0, "O", 0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_"
	DCB	0x0, "P", 0x0, "O", 0x0, "W", 0x0, "E", 0x0, "R", 0x0, "_"
	DCB	0x0, "C", 0x0, "A", 0x0, "P", 0x0, "A", 0x0, "B", 0x0, "I"
	DCB	0x0, "L", 0x0, "I", 0x0, "T", 0x0, "I", 0x0, "E", 0x0, "S"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@MHPCJPB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "u"
	DCB	0x0, "l", 0x0, "d", 0x0, "n", 0x0, "'", 0x0, "t", 0x0, " "
	DCB	0x0, "o", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, " ", 0x0, "d"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " "
	DCB	0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@DPFEOIGE@?$AA?$DM?$AAN?$AAU?$AAL?$AAL?$AA?$DO?$AA?$AA@| DCB "<", 0x0
	DCB	"N", 0x0, "U", 0x0, "L", 0x0, "L", 0x0, ">", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@HCHLCCLO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAd?$AAu?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAc?$AAa?$AAp?$AAa?$AAb?$AAi?$AAl?$AAi?$AAt?$AAi?$AAe@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "c"
	DCB	0x0, "e", 0x0, "p", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "d", 0x0, "u", 0x0, "r", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "p", 0x0, "a"
	DCB	0x0, "b", 0x0, "i", 0x0, "l", 0x0, "i", 0x0, "t", 0x0, "i"
	DCB	0x0, "e", 0x0, "s", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "p"
	DCB	0x0, "y", 0x0, " ", 0x0, "f", 0x0, "r", 0x0, "o", 0x0, "m"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@PPCJHGAM@?$AAA?$AAd?$AAd?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$AA@| DCB "A"
	DCB	0x0, "d", 0x0, "d", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1NA@CJGBCGAL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAa?$AAd?$AAd?$AAi?$AAn?$AAg?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?0?$AA?5?$AAp?$AAd?$AAs?$AAP?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "a", 0x0, "d", 0x0, "d"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "'", 0x0, "%"
	DCB	0x0, "s", 0x0, "'", 0x0, ",", 0x0, " ", 0x0, "p", 0x0, "d"
	DCB	0x0, "s", 0x0, "P", 0x0, "a", 0x0, "r", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "p", 0x0, "C"
	DCB	0x0, "a", 0x0, "p", 0x0, "s", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "c", 0x0, "l", 0x0, "a", 0x0, "s"
	DCB	0x0, "s", 0x0, " ", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, "-", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "x", 0x0, "-"
	DCB	0x0, "%", 0x0, "0", 0x0, "4", 0x0, "x", 0x0, "-", 0x0, "%"
	DCB	0x0, "0", 0x0, "4", 0x0, "x", 0x0, "-", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T34425|

  00008		 |AddDevice| PROC

; 896  : {

  00008		 |$LN60@AddDevice|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d000f	 stmdb       sp!, {r0 - r3}
  00010	e92d5ff0	 stmdb       sp!, {r4 - r12, lr}
  00014	e28db028	 add         r11, sp, #0x28
  00018	e24dd04c	 sub         sp, sp, #0x4C
  0001c		 |$LN58@AddDevice|
  0001c	e1a06003	 mov         r6, r3
  00020	e50b603c	 str         r6, [r11, #-0x3C]
  00024	e58b600c	 str         r6, [r11, #0xC]
  00028	e1a09002	 mov         r9, r2
  0002c	e50b9048	 str         r9, [r11, #-0x48]
  00030	e58b9008	 str         r9, [r11, #8]
  00034	e1a04001	 mov         r4, r1
  00038	e50b4040	 str         r4, [r11, #-0x40]
  0003c	e58b4004	 str         r4, [r11, #4]
  00040	e1a02000	 mov         r2, r0
  00044	e50b2044	 str         r2, [r11, #-0x44]

; 897  : #ifndef SHIP_BUILD
; 898  :     SETFNAME(_T("AddDevice"));
; 899  : #endif
; 900  : 
; 901  :     PMLOGMSG(ZONE_DEVICE, 
; 902  :         (_T("%s: adding '%s', pdsParent 0x%08x, pCaps 0x%08x to class %08x-%04x-%04x-%04x-%02x%02x%02x%02x%02x%02x\r\n"), 
; 903  :         pszFname, pszName, pdsParent, pCaps,
; 904  :         guidDevClass->Data1, guidDevClass->Data2, guidDevClass->Data3,
; 905  :         (guidDevClass->Data4[0] << 8) + guidDevClass->Data4[1], guidDevClass->Data4[2], guidDevClass->Data4[3], 
; 906  :         guidDevClass->Data4[4], guidDevClass->Data4[5], guidDevClass->Data4[6], guidDevClass->Data4[7]));

  00048	e59f83a0	 ldr         r8, [pc, #0x3A0]
  0004c	e598e440	 ldr         lr, [r8, #0x440]
  00050	e31e0010	 tst         lr, #0x10
  00054	0a000021	 beq         |$LN53@AddDevice|
  00058	e5d24008	 ldrb        r4, [r2, #8]
  0005c	e5d2e009	 ldrb        lr, [r2, #9]
  00060	e5d2500f	 ldrb        r5, [r2, #0xF]
  00064	e5d2600e	 ldrb        r6, [r2, #0xE]
  00068	e5d2700d	 ldrb        r7, [r2, #0xD]
  0006c	e5d2800c	 ldrb        r8, [r2, #0xC]
  00070	e5d2900b	 ldrb        r9, [r2, #0xB]
  00074	e5d2a00a	 ldrb        r10, [r2, #0xA]
  00078	e59f0374	 ldr         r0, [pc, #0x374]
  0007c	e08e3404	 add         r3, lr, r4, lsl #8
  00080	e58d3010	 str         r3, [sp, #0x10]
  00084	e51b3048	 ldr         r3, [r11, #-0x48]
  00088	e1a04001	 mov         r4, r1
  0008c	e1a02004	 mov         r2, r4
  00090	e59f1334	 ldr         r1, [pc, #0x334]
  00094	e58d5028	 str         r5, [sp, #0x28]
  00098	e58d6024	 str         r6, [sp, #0x24]
  0009c	e58d7020	 str         r7, [sp, #0x20]
  000a0	e58d801c	 str         r8, [sp, #0x1C]
  000a4	e58d9018	 str         r9, [sp, #0x18]
  000a8	e58da014	 str         r10, [sp, #0x14]
  000ac	e51b5044	 ldr         r5, [r11, #-0x44]
  000b0	e1d5e0b6	 ldrh        lr, [r5, #6]
  000b4	e58de00c	 str         lr, [sp, #0xC]
  000b8	e1d5e0b4	 ldrh        lr, [r5, #4]
  000bc	e58de008	 str         lr, [sp, #8]
  000c0	e595e000	 ldr         lr, [r5]
  000c4	e58de004	 str         lr, [sp, #4]
  000c8	e51b603c	 ldr         r6, [r11, #-0x3C]
  000cc	e58d6000	 str         r6, [sp]
  000d0	eb000000	 bl          CeLogMsg
  000d4	e59f8314	 ldr         r8, [pc, #0x314]
  000d8	e51b9048	 ldr         r9, [r11, #-0x48]
  000dc	e1a02005	 mov         r2, r5
  000e0		 |$LN53@AddDevice|

; 907  : 
; 908  :     // figure out onto which list this device should be added
; 909  :     PDEVICE_LIST pdl = GetDeviceListFromClass(guidDevClass);

  000e0	e1a00002	 mov         r0, r2
  000e4	eb000000	 bl          GetDeviceListFromClass
  000e8	e1b0a000	 movs        r10, r0
  000ec	e50ba03c	 str         r10, [r11, #-0x3C]

; 910  :     
; 911  :     // did we find the list?
; 912  :     if(pdl != NULL) {

  000f0	0a0000a7	 beq         |$LN22@AddDevice|

; 913  :         // check for duplicates
; 914  :         PDEVICE_STATE pds = DeviceStateFindList(pdl, pszName);

  000f4	e1a01004	 mov         r1, r4
  000f8	e1a0000a	 mov         r0, r10
  000fc	eb000000	 bl          DeviceStateFindList
  00100	e1b07000	 movs        r7, r0

; 915  :         
; 916  :         // create the device if it doesn't already exist
; 917  :         if(pds == NULL) {

  00104	1a00009d	 bne         |$LN5@AddDevice|

; 918  :             BOOL fOk = FALSE;

  00108	e3a05000	 mov         r5, #0
  0010c	e50b5044	 str         r5, [r11, #-0x44]

; 919  :             pds = DeviceStateCreate(pszName);

  00110	e1a00004	 mov         r0, r4
  00114	eb000000	 bl          DeviceStateCreate
  00118	e1b07000	 movs        r7, r0
  0011c	e50b7040	 str         r7, [r11, #-0x40]

; 920  :             if(pds != NULL) {

  00120	0a000096	 beq         |$LN5@AddDevice|

; 921  :                 // if we are passed the device's capabilities, just copy them
; 922  :                 // into the structure
; 923  :                 if(pCaps != NULL) {

  00124	e3560000	 cmp         r6, #0
  00128	0a000011	 beq         |$LN50@AddDevice|
  0012c		 |$LN48@AddDevice|

; 924  :                     __try {
; 925  :                         pds->caps = *pCaps;

  0012c	e2870028	 add         r0, r7, #0x28
  00130	e3a02030	 mov         r2, #0x30
  00134	e1a01006	 mov         r1, r6
  00138	eb000000	 bl          memcpy
  0013c		 |$LN49@AddDevice|

; 926  :                     }

  0013c	ea00000c	 b           |$LN50@AddDevice|
  00140		 |$LN45@AddDevice|

; 928  :                         PMLOGMSG(ZONE_WARN, 
; 929  :                             (_T("%s: exception during capabilities copy from 0x%08x\r\n"),
; 930  :                             pszFname, pCaps));

  00140	e59f82a8	 ldr         r8, [pc, #0x2A8]
  00144	e5983440	 ldr         r3, [r8, #0x440]
  00148	e3130002	 tst         r3, #2
  0014c	159b200c	 ldrne       r2, [r11, #0xC]
  00150	159f0294	 ldrne       r0, [pc, #0x294]
  00154	159f1270	 ldrne       r1, [pc, #0x270]
  00158	1b000000	 blne        CeLogMsg

; 931  :                         pCaps = NULL;

  0015c	e3a06000	 mov         r6, #0
  00160	e59b9008	 ldr         r9, [r11, #8]
  00164	e59b4004	 ldr         r4, [r11, #4]
  00168	e51ba03c	 ldr         r10, [r11, #-0x3C]
  0016c	e51b7040	 ldr         r7, [r11, #-0x40]
  00170	e51b5044	 ldr         r5, [r11, #-0x44]
  00174		 |$LN50@AddDevice|

; 932  :                     }
; 933  :                 }
; 934  :                 
; 935  :                 // update the device's parent pointer
; 936  :                 if(pdsParent != NULL) {

  00174	e3590000	 cmp         r9, #0

; 937  :                     DeviceStateAddRef(pdsParent);

  00178	11a00009	 movne       r0, r9
  0017c	1b000000	 blne        DeviceStateAddRef

; 938  :                 }
; 939  :                 pds->pParent = pdsParent;
; 940  :                 
; 941  :                 // add the new device to its class list
; 942  :                 if(!DeviceStateAddList(pdl, pds)) {

  00180	e1a01007	 mov         r1, r7
  00184	e1a0000a	 mov         r0, r10
  00188	e5879024	 str         r9, [r7, #0x24]
  0018c	eb000000	 bl          DeviceStateAddList
  00190	e3500000	 cmp         r0, #0

; 943  :                     // deallocate the node, reference count isn't incremented
; 944  :                     DeviceStateDecRef(pds);

  00194	e1a00007	 mov         r0, r7

; 945  :                     pds = NULL;
; 946  :                 } else {

  00198	0a00007b	 beq         |$LN57@AddDevice|

; 947  :                     PREFAST_DEBUGCHK(pds->pInterface != NULL);
; 948  :                     PREFAST_DEBUGCHK(pds->pInterface->pfnOpenDevice != NULL);
; 949  :                     PREFAST_DEBUGCHK(pds->pInterface->pfnRequestDevice != NULL);
; 950  :                     PREFAST_DEBUGCHK(pds->pInterface->pfnCloseDevice != NULL);
; 951  :                     pds->hDevice = pds->pInterface->pfnOpenDevice(pds);

  0019c	e5973060	 ldr         r3, [r7, #0x60]
  001a0	e5933004	 ldr         r3, [r3, #4]
  001a4	e1a0e00f	 mov         lr, pc
  001a8	e12fff13	 bx          r3
  001ac	e587005c	 str         r0, [r7, #0x5C]

; 952  :                     if(pds->hDevice == INVALID_HANDLE_VALUE) {

  001b0	e3700001	 cmn         r0, #1
  001b4	1a000009	 bne         |$LN14@AddDevice|

; 953  :                         PMLOGMSG(ZONE_WARN, (_T("%s: couldn't open device '%s'\r\n"),
; 954  :                             pszFname, pszName != NULL ? _T("<NULL>") : pszName));

  001b8	e5983440	 ldr         r3, [r8, #0x440]
  001bc	e3130002	 tst         r3, #2
  001c0	0a00004e	 beq         |$LN8@AddDevice|
  001c4	e3540000	 cmp         r4, #0
  001c8	159f2218	 ldrne       r2, [pc, #0x218]
  001cc	03a02000	 moveq       r2, #0
  001d0	e59f020c	 ldr         r0, [pc, #0x20C]
  001d4	e59f11f0	 ldr         r1, [pc, #0x1F0]
  001d8	eb000000	 bl          CeLogMsg

; 955  :                     } else {

  001dc	ea000047	 b           |$LN8@AddDevice|
  001e0		 |$LN14@AddDevice|

; 956  :                         // do we need to request capabilities?
; 957  :                         fOk = TRUE;             // assume success

  001e0	e3a05001	 mov         r5, #1

; 958  :                         if(pCaps == NULL) {

  001e4	e3560000	 cmp         r6, #0
  001e8	1a000033	 bne         |$LN10@AddDevice|

; 959  :                             DWORD dwBytesReturned;
; 960  :                             POWER_RELATIONSHIP pr;
; 961  :                             PPOWER_RELATIONSHIP ppr = NULL;
; 962  :                             memset(&pr, 0, sizeof(pr));

  001ec	e3a02000	 mov         r2, #0

; 963  :                             if(pds->pParent != NULL) {

  001f0	e5973024	 ldr         r3, [r7, #0x24]
  001f4	e50b2038	 str         r2, [r11, #-0x38]
  001f8	e50b2034	 str         r2, [r11, #-0x34]
  001fc	e50b2030	 str         r2, [r11, #-0x30]
  00200	e50b202c	 str         r2, [r11, #-0x2C]
  00204	e3a0e000	 mov         lr, #0
  00208	e1b02003	 movs        r2, r3
  0020c	0a00000e	 beq         |$LN11@AddDevice|

; 964  :                                 PMLOGMSG(ZONE_DEVICE, (_T("%s: parent of '%s' is '%s'\r\n"), 
; 965  :                                     pszFname, pds->pszName, pds->pParent->pszName));

  00210	e5983440	 ldr         r3, [r8, #0x440]
  00214	e3130010	 tst         r3, #0x10
  00218	15923000	 ldrne       r3, [r2]
  0021c	15972000	 ldrne       r2, [r7]
  00220	159f01b8	 ldrne       r0, [pc, #0x1B8]
  00224	159f11a0	 ldrne       r1, [pc, #0x1A0]
  00228	1b000000	 blne        CeLogMsg

; 966  :                                 pr.hParent = (HANDLE) pds->pParent;

  0022c	e5973024	 ldr         r3, [r7, #0x24]

; 967  :                                 pr.pwsParent = pds->pParent->pszName;
; 968  :                                 pr.hChild = (HANDLE) pds;
; 969  :                                 pr.pwsChild = pds->pszName;

  00230	e5972000	 ldr         r2, [r7]

; 970  :                                 ppr = &pr;

  00234	e24be038	 sub         lr, r11, #0x38
  00238	e50b3038	 str         r3, [r11, #-0x38]
  0023c	e5933000	 ldr         r3, [r3]
  00240	e50b7030	 str         r7, [r11, #-0x30]
  00244	e50b202c	 str         r2, [r11, #-0x2C]
  00248	e50b3034	 str         r3, [r11, #-0x34]
  0024c		 |$LN11@AddDevice|

; 971  :                             }                        
; 972  :                             
; 973  :                             // get the device's capabilities structure
; 974  :                             fOk = pds->pInterface->pfnRequestDevice(pds->hDevice, IOCTL_POWER_CAPABILITIES, 
; 975  :                                 ppr, ppr == NULL ? 0 : sizeof(*ppr), 
; 976  :                                 &pds->caps, sizeof(pds->caps), &dwBytesReturned);

  0024c	e35e0000	 cmp         lr, #0
  00250	03a03000	 moveq       r3, #0
  00254	13a03010	 movne       r3, #0x10
  00258	e5971060	 ldr         r1, [r7, #0x60]
  0025c	e597005c	 ldr         r0, [r7, #0x5C]
  00260	e3a09832	 mov         r9, #0x32, 16
  00264	e591600c	 ldr         r6, [r1, #0xC]
  00268	e24b403c	 sub         r4, r11, #0x3C
  0026c	e3a0a030	 mov         r10, #0x30
  00270	e2875028	 add         r5, r7, #0x28
  00274	e1a0200e	 mov         r2, lr
  00278	e3891a01	 orr         r1, r9, #1, 20
  0027c	e58d4008	 str         r4, [sp, #8]
  00280	e58da004	 str         r10, [sp, #4]
  00284	e58d5000	 str         r5, [sp]
  00288	e1a0e00f	 mov         lr, pc
  0028c	e12fff16	 bx          r6
  00290	e1b05000	 movs        r5, r0

; 977  :                             
; 978  :                             // sanity check the size in case a device is just returning
; 979  :                             // a good status on all ioctls for some reason
; 980  :                             if(fOk && dwBytesReturned != sizeof(pds->caps)) {

  00294	0a000008	 beq         |$LN10@AddDevice|
  00298	e51b303c	 ldr         r3, [r11, #-0x3C]
  0029c	e3530030	 cmp         r3, #0x30
  002a0	0a000005	 beq         |$LN10@AddDevice|

; 981  :                                 PMLOGMSG(ZONE_WARN, 
; 982  :                                     (_T("%s: invalid size returned from IOCTL_POWER_CAPABILITIES\r\n"),
; 983  :                                     pszFname));

  002a4	e5983440	 ldr         r3, [r8, #0x440]
  002a8	e3130002	 tst         r3, #2
  002ac	159f0128	 ldrne       r0, [pc, #0x128]
  002b0	159f1114	 ldrne       r1, [pc, #0x114]
  002b4	1b000000	 blne        CeLogMsg

; 984  :                                 fOk = FALSE;

  002b8	e3a05000	 mov         r5, #0
  002bc		 |$LN10@AddDevice|

; 985  :                             }
; 986  :                         }
; 987  : 
; 988  :                         // any problems so far?
; 989  :                         if(fOk) {

  002bc	e3550000	 cmp         r5, #0
  002c0	0a000010	 beq         |$LN56@AddDevice|

; 990  :                             // determine whether we should request power relationships from a parent device
; 991  :                             if((pds->caps.Flags & POWER_CAP_PARENT) != 0) {

  002c4	e5973054	 ldr         r3, [r7, #0x54]
  002c8	e3130001	 tst         r3, #1
  002cc	0a00000b	 beq         |$LN8@AddDevice|

; 992  :                                 pds->pInterface->pfnRequestDevice(pds->hDevice, IOCTL_REGISTER_POWER_RELATIONSHIP,
; 993  :                                     NULL, 0, NULL, 0, NULL);

  002d0	e5973060	 ldr         r3, [r7, #0x60]
  002d4	e59f10fc	 ldr         r1, [pc, #0xFC]
  002d8	e597005c	 ldr         r0, [r7, #0x5C]
  002dc	e593400c	 ldr         r4, [r3, #0xC]
  002e0	e3a06000	 mov         r6, #0
  002e4	e3a03000	 mov         r3, #0
  002e8	e3a02000	 mov         r2, #0
  002ec	e58d6008	 str         r6, [sp, #8]
  002f0	e58d6004	 str         r6, [sp, #4]
  002f4	e58d6000	 str         r6, [sp]
  002f8	e1a0e00f	 mov         lr, pc
  002fc	e12fff14	 bx          r4
  00300		 |$LN8@AddDevice|

; 994  :                             }
; 995  :                         }
; 996  :                     }
; 997  :                 }
; 998  :                 
; 999  :                 // have we read all the configuration information we need from 
; 1000 :                 // the new device
; 1001 :                 if (pds != NULL ) {
; 1002 :                     if(!fOk) {

  00300	e3550000	 cmp         r5, #0
  00304	1a000002	 bne         |$LN6@AddDevice|
  00308		 |$LN56@AddDevice|

; 1003 :                         // no, delete the device
; 1004 :                         DeviceStateRemList(pds);

  00308	e1a00007	 mov         r0, r7
  0030c	eb000000	 bl          DeviceStateRemList

; 1005 :                     } else {

  00310	ea00001a	 b           |$LN5@AddDevice|
  00314		 |$LN6@AddDevice|

; 1006 :                         // See if the device supports multiple handles.  Power manageable devices
; 1007 :                         // should allow multiple open handles, but if they don't we will have to open
; 1008 :                         // one before each access.
; 1009 :                         HANDLE hDevice = pds->pInterface->pfnOpenDevice(pds);

  00314	e5973060	 ldr         r3, [r7, #0x60]
  00318	e1a00007	 mov         r0, r7
  0031c	e5933004	 ldr         r3, [r3, #4]
  00320	e1a0e00f	 mov         lr, pc
  00324	e12fff13	 bx          r3

; 1010 :                         if(hDevice == INVALID_HANDLE_VALUE) {

  00328	e3700001	 cmn         r0, #1
  0032c	1a00000d	 bne         |$LN4@AddDevice|

; 1011 :                             PMLOGMSG(ZONE_WARN, (_T("%s: WARNING: '%s' does not support multiple handles\r\n"),
; 1012 :                                 pszFname, pds->pszName));

  00330	e5983440	 ldr         r3, [r8, #0x440]
  00334	e3130002	 tst         r3, #2
  00338	15972000	 ldrne       r2, [r7]
  0033c	159f0090	 ldrne       r0, [pc, #0x90]
  00340	159f1084	 ldrne       r1, [pc, #0x84]
  00344	1b000000	 blne        CeLogMsg

; 1013 :                             pds->pInterface->pfnCloseDevice(pds->hDevice);

  00348	e5973060	 ldr         r3, [r7, #0x60]
  0034c	e597005c	 ldr         r0, [r7, #0x5C]
  00350	e5933008	 ldr         r3, [r3, #8]
  00354	e1a0e00f	 mov         lr, pc
  00358	e12fff13	 bx          r3

; 1014 :                             pds->hDevice = INVALID_HANDLE_VALUE;

  0035c	e3e03000	 mvn         r3, #0
  00360	e587305c	 str         r3, [r7, #0x5C]

; 1015 :                         } else {

  00364	ea000003	 b           |$LN3@AddDevice|
  00368		 |$LN4@AddDevice|

; 1016 :                             // close the second handle, since we don't need it
; 1017 :                             pds->pInterface->pfnCloseDevice(hDevice);

  00368	e5973060	 ldr         r3, [r7, #0x60]
  0036c	e5933008	 ldr         r3, [r3, #8]
  00370	e1a0e00f	 mov         lr, pc
  00374	e12fff13	 bx          r3
  00378		 |$LN3@AddDevice|

; 1018 :                         }
; 1019 :                         
; 1020 :                         // initialize the new device's power state variables
; 1021 :                         UpdateDeviceState(pds);

  00378	e1a00007	 mov         r0, r7
  0037c	eb000000	 bl          UpdateDeviceState
  00380		 |$LN5@AddDevice|

; 1022 :                     }
; 1023 :                 }
; 1024 :             }
; 1025 :         }
; 1026 :         
; 1027 :         // we are done with the device pointer
; 1028 :         if(pds != NULL) {

  00380	e3570000	 cmp         r7, #0
  00384	0a000008	 beq         |$LN41@AddDevice|

; 1029 :             DeviceStateDecRef(pds);

  00388	e1a00007	 mov         r0, r7
  0038c		 |$LN57@AddDevice|
  0038c	eb000000	 bl          DeviceStateDecRef

; 1030 :         }
; 1031 :     } else {

  00390	ea000005	 b           |$LN41@AddDevice|
  00394		 |$LN22@AddDevice|

; 1032 :         PMLOGMSG(ZONE_WARN, (_T("%s: class for device '%s' not supported\r\n"),
; 1033 :             pszFname, pszName));

  00394	e5983440	 ldr         r3, [r8, #0x440]
  00398	e3130002	 tst         r3, #2
  0039c	159f002c	 ldrne       r0, [pc, #0x2C]
  003a0	11a02004	 movne       r2, r4
  003a4	159f1020	 ldrne       r1, [pc, #0x20]
  003a8	1b000000	 blne        CeLogMsg
  003ac		 |$LN41@AddDevice|

; 1034 :     }
; 1035 : }

  003ac	e24bd028	 sub         sp, r11, #0x28
  003b0	e89d6ff0	 ldmia       sp, {r4 - r11, sp, lr}
  003b4	e12fff1e	 bx          lr

			 ENDP  ; |AddDevice|

  003b8		 |$LN44@AddDevice|
  003b8		 |$LN59@AddDevice|

; 927  :                     __except(EXCEPTION_EXECUTE_HANDLER) {

  003b8	e52de004	 str         lr, [sp, #-4]!
  003bc	e24dd02c	 sub         sp, sp, #0x2C
  003c0		 |$LN47@AddDevice|
  003c0		 |$LN62@AddDevice|
  003c0	e3a00001	 mov         r0, #1
  003c4		 |$LN46@AddDevice|
  003c4	e28dd02c	 add         sp, sp, #0x2C
  003c8	e49df004	 ldr         pc, [sp], #4
  003cc		 |$LN64@AddDevice|
  003cc		 |$LN65@AddDevice|
  003cc	00000000	 DCD         |??_C@_1BE@PPCJHGAM@?$AAA?$AAd?$AAd?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$AA@|
  003d0		 |$LN66@AddDevice|
  003d0	00000000	 DCD         |??_C@_1FE@BCEMHNLC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAu@|
  003d4		 |$LN67@AddDevice|
  003d4	00000000	 DCD         |??_C@_1GM@EDCDNHME@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAA?$AAR?$AAN?$AAI?$AAN?$AAG?$AA?3?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAd?$AAo?$AAe?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAu?$AAp?$AAp?$AAo@|
  003d8		 |$LN68@AddDevice|
  003d8	00321018	 DCD         0x321018
  003dc		 |$LN69@AddDevice|
  003dc	00000000	 DCD         |??_C@_1HE@OBKKFNKO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAI@|
  003e0		 |$LN70@AddDevice|
  003e0	00000000	 DCD         |??_C@_1DK@KOLEMAMB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAi?$AAs?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN?$AA?6?$AA?$AA@|
  003e4		 |$LN71@AddDevice|
  003e4	00000000	 DCD         |??_C@_1EA@MHPCJPB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN?$AA?6?$AA?$AA@|
  003e8		 |$LN72@AddDevice|
  003e8	00000000	 DCD         |??_C@_1O@DPFEOIGE@?$AA?$DM?$AAN?$AAU?$AAL?$AAL?$AA?$DO?$AA?$AA@|
  003ec		 |$LN73@AddDevice|
  003ec	00000000	 DCD         |??_C@_1GK@HCHLCCLO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAd?$AAu?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAc?$AAa?$AAp?$AAa?$AAb?$AAi?$AAl?$AAi?$AAt?$AAi?$AAe@|
  003f0		 |$LN74@AddDevice|
  003f0	00000000	 DCD         |dpCurSettings|
  003f4		 |$LN75@AddDevice|
  003f4	00000000	 DCD         |??_C@_1NA@CJGBCGAL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAa?$AAd?$AAd?$AAi?$AAn?$AAg?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?0?$AA?5?$AAp?$AAd?$AAs?$AAP?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8@|
  003f8		 |$LN63@AddDevice|
  003f8		 |$LN61@AddDevice|
	EXPORT	|RemoveDevice|
	EXPORT	|??_C@_1DK@EFLIGDPP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AA?5?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@CCPLAGJC@?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IM@HFBHDBAF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAm?$AAo?$AAv?$AAi?$AAn?$AAg?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AA?$CF?$AA0?$AA8?$AAx?$AA?9?$AA?$CF?$AA0?$AA4?$AAx@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T34468| DCD	|$LN25@RemoveDevi|
	DCD	0x40005e02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@EFLIGDPP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AA?5?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s"
	DCB	0x0, "'", 0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, " ", 0x0, "c", 0x0, "l", 0x0, "a"
	DCB	0x0, "s", 0x0, "s", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@CCPLAGJC@?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "m", 0x0, "o", 0x0, "v", 0x0, "e", 0x0, "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IM@HFBHDBAF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAm?$AAo?$AAv?$AAi?$AAn?$AAg?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AA?$CF?$AA0?$AA8?$AAx?$AA?9?$AA?$CF?$AA0?$AA4?$AAx@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "m"
	DCB	0x0, "o", 0x0, "v", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'", 0x0, " ", 0x0, "f"
	DCB	0x0, "r", 0x0, "o", 0x0, "m", 0x0, " ", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, "-", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "x", 0x0, "-", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "x"
	DCB	0x0, "-", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "x", 0x0, "-"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |RemoveDevice| PROC

; 1041 : {

  00000		 |$LN25@RemoveDevi|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd02c	 sub         sp, sp, #0x2C
  00008		 |$M34465|
  00008	e1a05001	 mov         r5, r1
  0000c	e1a01000	 mov         r1, r0
  00010	e58d1028	 str         r1, [sp, #0x28]
  00014	e58d5024	 str         r5, [sp, #0x24]

; 1042 : #ifndef SHIP_BUILD
; 1043 :     SETFNAME(_T("RemoveDevice"));
; 1044 : #endif
; 1045 : 
; 1046 :     PMLOGMSG(ZONE_DEVICE, (_T("%s: removing '%s' from %08x-%04x-%04x-%04x-%02x%02x%02x%02x%02x%02x\r\n"), 
; 1047 :         pszFname, pszName, guidDevClass->Data1, guidDevClass->Data2, guidDevClass->Data3,
; 1048 :         (guidDevClass->Data4[0] << 8) + guidDevClass->Data4[1], guidDevClass->Data4[2], guidDevClass->Data4[3], 
; 1049 :         guidDevClass->Data4[4], guidDevClass->Data4[5], guidDevClass->Data4[6], guidDevClass->Data4[7]));

  00018	e59f6150	 ldr         r6, [pc, #0x150]
  0001c	e5963440	 ldr         r3, [r6, #0x440]
  00020	e3130010	 tst         r3, #0x10
  00024	0a00001b	 beq         |$LN14@RemoveDevi|
  00028	e5d1e008	 ldrb        lr, [r1, #8]
  0002c	e5d12009	 ldrb        r2, [r1, #9]
  00030	e5d1400f	 ldrb        r4, [r1, #0xF]
  00034	e5d1500e	 ldrb        r5, [r1, #0xE]
  00038	e082240e	 add         r2, r2, lr, lsl #8
  0003c	e5d1600d	 ldrb        r6, [r1, #0xD]
  00040	e5d1700c	 ldrb        r7, [r1, #0xC]
  00044	e5d1800b	 ldrb        r8, [r1, #0xB]
  00048	e5d1900a	 ldrb        r9, [r1, #0xA]
  0004c	e1d1a0b6	 ldrh        r10, [r1, #6]
  00050	e1d1b0b4	 ldrh        r11, [r1, #4]
  00054	e5913000	 ldr         r3, [r1]
  00058	e59f0114	 ldr         r0, [pc, #0x114]
  0005c	e59f1104	 ldr         r1, [pc, #0x104]
  00060	e58d2008	 str         r2, [sp, #8]
  00064	e59d2024	 ldr         r2, [sp, #0x24]
  00068	e58d4020	 str         r4, [sp, #0x20]
  0006c	e58d501c	 str         r5, [sp, #0x1C]
  00070	e58d6018	 str         r6, [sp, #0x18]
  00074	e58d7014	 str         r7, [sp, #0x14]
  00078	e58d8010	 str         r8, [sp, #0x10]
  0007c	e58d900c	 str         r9, [sp, #0xC]
  00080	e58da004	 str         r10, [sp, #4]
  00084	e58db000	 str         r11, [sp]
  00088	eb000000	 bl          CeLogMsg
  0008c	e59d5024	 ldr         r5, [sp, #0x24]
  00090	e59d1028	 ldr         r1, [sp, #0x28]
  00094	e59f60d4	 ldr         r6, [pc, #0xD4]
  00098		 |$LN14@RemoveDevi|

; 1050 : 
; 1051 :     // figure out onto which list this device should be added
; 1052 :     PDEVICE_LIST pdl = GetDeviceListFromClass(guidDevClass);

  00098	e1a00001	 mov         r0, r1
  0009c	eb000000	 bl          GetDeviceListFromClass
  000a0	e3500000	 cmp         r0, #0

; 1053 : 
; 1054 :     // did we find the list?
; 1055 :     if(pdl != NULL) {

  000a4	0a00002b	 beq         |$LN9@RemoveDevi|

; 1056 :         // check for duplicates
; 1057 :         PDEVICE_STATE pds = DeviceStateFindList(pdl, pszName);

  000a8	e1a01005	 mov         r1, r5
  000ac	eb000000	 bl          DeviceStateFindList
  000b0	e1b04000	 movs        r4, r0

; 1058 :         if(pds == NULL) {

  000b4	1a000007	 bne         |$LN10@RemoveDevi|

; 1059 :             PMLOGMSG(ZONE_WARN, (_T("%s: '%s' not in class list\r\n"),
; 1060 :                 pszFname, pszName));

  000b8	e5963440	 ldr         r3, [r6, #0x440]
  000bc	e3130002	 tst         r3, #2
  000c0	0a000024	 beq         |$LN9@RemoveDevi|
  000c4	e59f00a0	 ldr         r0, [pc, #0xA0]
  000c8	e59f1098	 ldr         r1, [pc, #0x98]
  000cc	e1a02005	 mov         r2, r5
  000d0	eb000000	 bl          CeLogMsg

; 1061 :         } else {

  000d4	ea00001f	 b           |$LN9@RemoveDevi|
  000d8		 |$LN10@RemoveDevi|

; 1062 :             // disconnect the device from the list
; 1063 :             DeviceStateRemList(pds);

  000d8	e1a00004	 mov         r0, r4
  000dc	eb000000	 bl          DeviceStateRemList

; 1064 :             
; 1065 :             // if we are a child device, decrement the parent pointer's
; 1066 :             // reference count
; 1067 :             if(pds->pParent != NULL) {

  000e0	e5943024	 ldr         r3, [r4, #0x24]
  000e4	e3530000	 cmp         r3, #0
  000e8	0a000003	 beq         |$LN8@RemoveDevi|

; 1068 :                 DeviceStateDecRef(pds->pParent);

  000ec	e1a00003	 mov         r0, r3
  000f0	eb000000	 bl          DeviceStateDecRef

; 1069 :                 pds->pParent = NULL;

  000f4	e3a03000	 mov         r3, #0
  000f8	e5843024	 str         r3, [r4, #0x24]
  000fc		 |$LN8@RemoveDevi|

; 1070 :             }
; 1071 :             
; 1072 :             // if we are a parent device, remove child devices (if any)
; 1073 :             if((pds->caps.Flags & POWER_CAP_PARENT) != 0) {

  000fc	e5943054	 ldr         r3, [r4, #0x54]
  00100	e3130001	 tst         r3, #1
  00104	0a000011	 beq         |$LN4@RemoveDevi|

; 1074 :                 // look for a match across all lists, since the child may not
; 1075 :                 // be of the same class
; 1076 :                 for(pdl = gpDeviceLists; pdl != NULL; pdl = pdl->pNext) {

  00108	e59f3054	 ldr         r3, [pc, #0x54]
  0010c	e5933000	 ldr         r3, [r3]
  00110	ea00000c	 b           |$LN22@RemoveDevi|
  00114		 |$LL6@RemoveDevi|

; 1077 :                     PDEVICE_STATE pCur, pNext;
; 1078 :                     pCur = pdl->pList;

  00114	e5953004	 ldr         r3, [r5, #4]
  00118	e1b02003	 movs        r2, r3

; 1079 :                     while(pCur != NULL) {

  0011c	0a000008	 beq         |$LN5@RemoveDevi|
  00120		 |$LL3@RemoveDevi|

; 1080 :                         pNext = pCur->pNext;
; 1081 :                         if(pCur->pParent == pds) {

  00120	e5923024	 ldr         r3, [r2, #0x24]
  00124	e5926068	 ldr         r6, [r2, #0x68]
  00128	e1530004	 cmp         r3, r4

; 1082 :                             RemoveDevice(pdl->pGuid, pCur->pszName);

  0012c	05921000	 ldreq       r1, [r2]
  00130	05950000	 ldreq       r0, [r5]
  00134	0b000000	 bleq        RemoveDevice

; 1083 :                         }
; 1084 :                         pCur = pNext;

  00138	e1a02006	 mov         r2, r6
  0013c	e3560000	 cmp         r6, #0
  00140	1afffff6	 bne         |$LL3@RemoveDevi|
  00144		 |$LN5@RemoveDevi|

; 1074 :                 // look for a match across all lists, since the child may not
; 1075 :                 // be of the same class
; 1076 :                 for(pdl = gpDeviceLists; pdl != NULL; pdl = pdl->pNext) {

  00144	e5953014	 ldr         r3, [r5, #0x14]
  00148		 |$LN22@RemoveDevi|
  00148	e1b05003	 movs        r5, r3
  0014c	1afffff0	 bne         |$LL6@RemoveDevi|
  00150		 |$LN4@RemoveDevi|

; 1085 :                     }
; 1086 :                 }
; 1087 :             }
; 1088 :             
; 1089 :             // we're done with the device pointer
; 1090 :             DeviceStateDecRef(pds);

  00150	e1a00004	 mov         r0, r4
  00154	eb000000	 bl          DeviceStateDecRef
  00158		 |$LN9@RemoveDevi|

; 1091 :         }
; 1092 :     }
; 1093 : }

  00158	e28dd02c	 add         sp, sp, #0x2C
  0015c	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00160	e12fff1e	 bx          lr
  00164		 |$LN26@RemoveDevi|
  00164		 |$LN27@RemoveDevi|
  00164	00000000	 DCD         |gpDeviceLists|
  00168		 |$LN28@RemoveDevi|
  00168	00000000	 DCD         |??_C@_1BK@CCPLAGJC@?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?$AA@|
  0016c		 |$LN29@RemoveDevi|
  0016c	00000000	 DCD         |??_C@_1DK@EFLIGDPP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AA?5?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  00170		 |$LN30@RemoveDevi|
  00170	00000000	 DCD         |dpCurSettings|
  00174		 |$LN31@RemoveDevi|
  00174	00000000	 DCD         |??_C@_1IM@HFBHDBAF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAm?$AAo?$AAv?$AAi?$AAn?$AAg?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AA?$CF?$AA0?$AA8?$AAx?$AA?9?$AA?$CF?$AA0?$AA4?$AAx@|
  00178		 |$M34466|

			 ENDP  ; |RemoveDevice|

	EXPORT	|PmGetDevicePower|
	EXPORT	|??_C@_1DK@LJCCBMHG@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@PIOCINDE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAu?$AAp?$AAd?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAp?$AAC?$AAu?$AAr?$AAD?$AAx?$AA?5?$AA0?$AAx@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@DCKKIOFN@?$AAP?$AAm?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@JJNOBOEP@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@GFCJAFPH@?$AA?$DM?$AAU?$AAN?$AAK?$AAN?$AAO?$AAW?$AAN?$AA?$DO?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|DeviceIdDestroy|
	IMPORT	|DeviceIdParseNameString|

  00000			 AREA	 |.pdata|, PDATA
|$T34517| DCD	|$LN40@PmGetDevic|
	DCD	0xc0006105

  00000			 AREA	 |.pdata|, PDATA
|$T34519| DCD	|$LN23@PmGetDevic|
	DCD	0x40000901

  00000			 AREA	 |.xdata|, DATA
|$T34515| DCD	0x1
	DCD	|$LN27@PmGetDevic|
	DCD	|$LN28@PmGetDevic|
	DCD	|$LN23@PmGetDevic|
	DCD	|$LN24@PmGetDevic|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@LJCCBMHG@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "d", 0x0, "w", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@PIOCINDE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAu?$AAp?$AAd?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAp?$AAC?$AAu?$AAr?$AAD?$AAx?$AA?5?$AA0?$AAx@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "c"
	DCB	0x0, "e", 0x0, "p", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "u", 0x0, "p", 0x0, "d", 0x0, "a", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "p", 0x0, "C"
	DCB	0x0, "u", 0x0, "r", 0x0, "D", 0x0, "x", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@DCKKIOFN@?$AAP?$AAm?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$AA@| DCB "P"
	DCB	0x0, "m", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "D", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "P", 0x0, "o"
	DCB	0x0, "w", 0x0, "e", 0x0, "r", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@JJNOBOEP@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "d", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "%"
	DCB	0x0, "s", 0x0, ",", 0x0, " ", 0x0, "f", 0x0, "l", 0x0, "a"
	DCB	0x0, "g", 0x0, "s", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@GFCJAFPH@?$AA?$DM?$AAU?$AAN?$AAK?$AAN?$AAO?$AAW?$AAN?$AA?$DO?$AA?$AA@| DCB "<"
	DCB	0x0, "U", 0x0, "N", 0x0, "K", 0x0, "N", 0x0, "O", 0x0, "W"
	DCB	0x0, "N", 0x0, ">", 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T34515|

  00008		 |PmGetDevicePower| PROC

; 1102 : {

  00008		 |$LN40@PmGetDevic|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d0007	 stmdb       sp!, {r0 - r2}
  00010	e92d5bf0	 stmdb       sp!, {r4 - r9, r11, r12, lr}
  00014	e28db024	 add         r11, sp, #0x24
  00018	e24dd00c	 sub         sp, sp, #0xC
  0001c		 |$LN38@PmGetDevic|
  0001c	e1a09002	 mov         r9, r2
  00020	e58b9008	 str         r9, [r11, #8]
  00024	e1a07001	 mov         r7, r1
  00028	e1a06000	 mov         r6, r0

; 1103 :     DWORD dwStatus = ERROR_FILE_NOT_FOUND;
; 1104 :     PDEVICEID pdi = NULL;
; 1105 : 
; 1106 : #ifndef SHIP_BUILD
; 1107 :     SETFNAME(_T("PmGetDevicePower"));
; 1108 : #endif
; 1109 : 
; 1110 :     PMLOGMSG(ZONE_API || ZONE_DEVICE, (_T("+%s: device %s, flags 0x%08x\r\n"),
; 1111 :         pszFname, (dwDeviceFlags & POWER_NAME) != 0 ? (LPTSTR) pvDevice : _T("<UNKNOWN>"),
; 1112 :         dwDeviceFlags));

  0002c	e59f5170	 ldr         r5, [pc, #0x170]
  00030	e3a04002	 mov         r4, #2
  00034	e3a08000	 mov         r8, #0
  00038	e5953440	 ldr         r3, [r5, #0x440]
  0003c	e3130b02	 tst         r3, #2, 22
  00040	1a000001	 bne         |$LN13@PmGetDevic|
  00044	e3130010	 tst         r3, #0x10
  00048	0a000006	 beq         |$LN16@PmGetDevic|
  0004c		 |$LN13@PmGetDevic|
  0004c	e3170001	 tst         r7, #1
  00050	11a02006	 movne       r2, r6
  00054	059f2150	 ldreq       r2, [pc, #0x150]
  00058	e59f0148	 ldr         r0, [pc, #0x148]
  0005c	e1a03007	 mov         r3, r7
  00060	e59f1130	 ldr         r1, [pc, #0x130]
  00064	eb000000	 bl          CeLogMsg
  00068		 |$LN16@PmGetDevic|

; 1113 : 
; 1114 :     // sanity check parameters
; 1115 :     if(pvDevice == NULL 
; 1116 :     || pCurDx == NULL
; 1117 :     || (pdi = DeviceIdParseNameString((LPCTSTR) pvDevice, dwDeviceFlags)) == NULL) {

  00068	e3560000	 cmp         r6, #0
  0006c	0a000031	 beq         |$LN35@PmGetDevic|
  00070	e3590000	 cmp         r9, #0
  00074	0a00002f	 beq         |$LN35@PmGetDevic|
  00078	e1a01007	 mov         r1, r7
  0007c	e1a00006	 mov         r0, r6
  00080	eb000000	 bl          DeviceIdParseNameString
  00084	e1b08000	 movs        r8, r0
  00088	e50b802c	 str         r8, [r11, #-0x2C]
  0008c	0a000029	 beq         |$LN35@PmGetDevic|

; 1119 :     } else {
; 1120 :         PDEVICE_LIST pdl;
; 1121 :         
; 1122 :         // look for the device list and the device
; 1123 :         pdl = GetDeviceListFromClass(pdi->pGuid);

  00090	e5980000	 ldr         r0, [r8]
  00094	eb000000	 bl          GetDeviceListFromClass
  00098	e3500000	 cmp         r0, #0

; 1124 :         if(pdl != NULL) {

  0009c	0a000026	 beq         |$LN36@PmGetDevic|

; 1125 :             PDEVICE_STATE pds = DeviceStateFindList(pdl, pdi->pszName);

  000a0	e5981004	 ldr         r1, [r8, #4]
  000a4	eb000000	 bl          DeviceStateFindList
  000a8	e1b06000	 movs        r6, r0
  000ac	e50b6028	 str         r6, [r11, #-0x28]

; 1126 :             if(pds != NULL) {

  000b0	0a000021	 beq         |$LN36@PmGetDevic|

; 1127 :                 CEDEVICE_POWER_STATE curDx = PwrDeviceUnspecified;

  000b4	e3e03000	 mvn         r3, #0
  000b8	e50b3030	 str         r3, [r11, #-0x30]

; 1128 : 
; 1129 :                 // how are we supposed to obtain the data?
; 1130 :                 if((dwDeviceFlags & POWER_FORCE) == 0) {

  000bc	e3170a01	 tst         r7, #1, 20
  000c0	1a000004	 bne         |$LN5@PmGetDevic|

; 1131 :                     // use our cached value
; 1132 :                     PMLOCK();

  000c4	eb000000	 bl          PmLock

; 1133 :                     curDx = pds->curDx;

  000c8	e5967004	 ldr         r7, [r6, #4]

; 1134 :                     PMUNLOCK();

  000cc	eb000000	 bl          PmUnlock

; 1135 :                     dwStatus = ERROR_SUCCESS;

  000d0	e3a04000	 mov         r4, #0

; 1136 :                 } else {

  000d4	ea000005	 b           |$LN32@PmGetDevic|
  000d8		 |$LN5@PmGetDevic|

; 1137 :                     // request the device's power status
; 1138 :                     dwStatus = GetDevicePower(pds, &curDx);

  000d8	e24b1030	 sub         r1, r11, #0x30
  000dc	e1a00006	 mov         r0, r6
  000e0	eb000000	 bl          |?GetDevicePower@@YAKPAU_DeviceState_tag@@PAW4_CEDEVICE_POWER_STATE@@@Z|
  000e4	e1b04000	 movs        r4, r0

; 1139 :                 }
; 1140 : 
; 1141 :                 // do we have a value to pass back?
; 1142 :                 if(dwStatus == ERROR_SUCCESS) {

  000e8	1a00000f	 bne         |$LN29@PmGetDevic|
  000ec	e51b7030	 ldr         r7, [r11, #-0x30]
  000f0		 |$LN32@PmGetDevic|
  000f0		 |$LN27@PmGetDevic|

; 1143 :                     __try {
; 1144 :                         // yes, update the caller's parameter
; 1145 :                         *pCurDx = curDx;

  000f0	e5897000	 str         r7, [r9]
  000f4		 |$LN28@PmGetDevic|

; 1146 :                     }

  000f4	ea00000c	 b           |$LN29@PmGetDevic|
  000f8		 |$LN24@PmGetDevic|

; 1148 :                         PMLOGMSG(ZONE_WARN, (_T("%s: exception updating pCurDx 0x%08x\r\n"),
; 1149 :                             pszFname, pCurDx));

  000f8	e59f50a4	 ldr         r5, [pc, #0xA4]
  000fc	e5953440	 ldr         r3, [r5, #0x440]
  00100	e3130002	 tst         r3, #2
  00104	159b2008	 ldrne       r2, [r11, #8]
  00108	159f0090	 ldrne       r0, [pc, #0x90]
  0010c	159f1084	 ldrne       r1, [pc, #0x84]
  00110	1b000000	 blne        CeLogMsg

; 1150 :                         dwStatus = ERROR_INVALID_PARAMETER;

  00114	e3a04057	 mov         r4, #0x57
  00118	e51b802c	 ldr         r8, [r11, #-0x2C]
  0011c	e51b6028	 ldr         r6, [r11, #-0x28]
  00120	ea000001	 b           |$LN29@PmGetDevic|
  00124		 |$LN37@PmGetDevic|

; 1165 : 
; 1166 :     // return our status
; 1167 :     return dwStatus;

  00124	e51b4028	 ldr         r4, [r11, #-0x28]
  00128	ea000013	 b           |$LN21@PmGetDevic|
  0012c		 |$LN29@PmGetDevic|

; 1151 :                     }
; 1152 :                 }
; 1153 :                 
; 1154 :                 // done with its pointer
; 1155 :                 DeviceStateDecRef(pds);

  0012c	e1a00006	 mov         r0, r6
  00130	eb000000	 bl          DeviceStateDecRef
  00134	ea000000	 b           |$LN36@PmGetDevic|
  00138		 |$LN35@PmGetDevic|

; 1118 :         dwStatus = ERROR_INVALID_PARAMETER;

  00138	e3a04057	 mov         r4, #0x57
  0013c		 |$LN36@PmGetDevic|

; 1156 :             }
; 1157 :         }
; 1158 :     }
; 1159 : 
; 1160 :     // release resources
; 1161 :     if(pdi != NULL) DeviceIdDestroy(pdi);

  0013c	e3580000	 cmp         r8, #0
  00140	11a00008	 movne       r0, r8
  00144	1b000000	 blne        DeviceIdDestroy
  00148	e5953440	 ldr         r3, [r5, #0x440]

; 1162 : 
; 1163 :     PMLOGMSG(ZONE_API || ZONE_DEVICE || (dwStatus != ERROR_SUCCESS && ZONE_WARN), 
; 1164 :         (_T("-%s: returning dwStatus %d\r\n"), pszFname, dwStatus));

  0014c	e3130b02	 tst         r3, #2, 22
  00150	1a000005	 bne         |$LN19@PmGetDevic|
  00154	e3130010	 tst         r3, #0x10
  00158	1a000003	 bne         |$LN19@PmGetDevic|
  0015c	e3540000	 cmp         r4, #0
  00160	0a000005	 beq         |$LN21@PmGetDevic|
  00164	e3130002	 tst         r3, #2
  00168	0a000003	 beq         |$LN21@PmGetDevic|
  0016c		 |$LN19@PmGetDevic|
  0016c	e59f0028	 ldr         r0, [pc, #0x28]
  00170	e1a02004	 mov         r2, r4
  00174	e59f101c	 ldr         r1, [pc, #0x1C]
  00178	eb000000	 bl          CeLogMsg
  0017c		 |$LN21@PmGetDevic|

; 1168 : }

  0017c	e1a00004	 mov         r0, r4
  00180	e24bd024	 sub         sp, r11, #0x24
  00184	e89d6bf0	 ldmia       sp, {r4 - r9, r11, sp, lr}
  00188	e12fff1e	 bx          lr

			 ENDP  ; |PmGetDevicePower|

  0018c		 |$LN23@PmGetDevic|
  0018c		 |$LN39@PmGetDevic|

; 1147 :                     __except(EXCEPTION_EXECUTE_HANDLER) {

  0018c	e52de004	 str         lr, [sp, #-4]!
  00190		 |$LN26@PmGetDevic|
  00190		 |$LN42@PmGetDevic|
  00190	e3a00001	 mov         r0, #1
  00194		 |$LN25@PmGetDevic|
  00194	e49df004	 ldr         pc, [sp], #4
  00198		 |$LN44@PmGetDevic|
  00198		 |$LN45@PmGetDevic|
  00198	00000000	 DCD         |??_C@_1CC@DCKKIOFN@?$AAP?$AAm?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$AA@|
  0019c		 |$LN46@PmGetDevic|
  0019c	00000000	 DCD         |??_C@_1DK@LJCCBMHG@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  001a0		 |$LN47@PmGetDevic|
  001a0	00000000	 DCD         |??_C@_1EO@PIOCINDE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAu?$AAp?$AAd?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAp?$AAC?$AAu?$AAr?$AAD?$AAx?$AA?5?$AA0?$AAx@|
  001a4		 |$LN48@PmGetDevic|
  001a4	00000000	 DCD         |dpCurSettings|
  001a8		 |$LN49@PmGetDevic|
  001a8	00000000	 DCD         |??_C@_1DO@JJNOBOEP@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  001ac		 |$LN50@PmGetDevic|
  001ac	00000000	 DCD         |??_C@_1BE@GFCJAFPH@?$AA?$DM?$AAU?$AAN?$AAK?$AAN?$AAO?$AAW?$AAN?$AA?$DO?$AA?$AA@|
  001b0		 |$LN43@PmGetDevic|
  001b0		 |$LN41@PmGetDevic|
	EXPORT	|PmSetDevicePower|
	EXPORT	|??_C@_1CC@LDMFDOHP@?$AAP?$AAm?$AAS?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@FDHIODBM@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAn?$AAe@| [ DATA ] ; `string'
	IMPORT	|PmLeaveUpdate|
	IMPORT	|CeGetCallerTrust|
	IMPORT	|PmEnterUpdate|

  00000			 AREA	 |.pdata|, PDATA
|$T34553| DCD	|$LN26@PmSetDevic|
	DCD	0x40006302

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@LDMFDOHP@?$AAP?$AAm?$AAS?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$AA@| DCB "P"
	DCB	0x0, "m", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "D", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "P", 0x0, "o"
	DCB	0x0, "w", 0x0, "e", 0x0, "r", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@FDHIODBM@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAn?$AAe@| DCB "+"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "d", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "%"
	DCB	0x0, "s", 0x0, ",", 0x0, " ", 0x0, "f", 0x0, "l", 0x0, "a"
	DCB	0x0, "g", 0x0, "s", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "n"
	DCB	0x0, "e", 0x0, "w", 0x0, " ", 0x0, "D", 0x0, "x", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PmSetDevicePower| PROC

; 1180 : {

  00000		 |$LN26@PmSetDevic|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M34550|
  00008	e1a06002	 mov         r6, r2
  0000c	e1a08001	 mov         r8, r1
  00010	e1a05000	 mov         r5, r0

; 1181 :     DWORD dwStatus = ERROR_FILE_NOT_FOUND;
; 1182 :     PDEVICEID pdi = NULL;
; 1183 : 
; 1184 : #ifndef SHIP_BUILD
; 1185 :     SETFNAME(_T("PmSetDevicePower"));
; 1186 : #endif
; 1187 : 
; 1188 :     PMLOGMSG(ZONE_API || ZONE_DEVICE, (_T("+%s: device %s, flags 0x%08x, new Dx %d\r\n"),
; 1189 :         pszFname, (dwDeviceFlags & POWER_NAME) != 0 ? (LPTSTR) pvDevice : _T("<UNKNOWN>"),
; 1190 :         dwDeviceFlags, newDx));

  00014	e59f916c	 ldr         r9, [pc, #0x16C]
  00018	e3a04002	 mov         r4, #2
  0001c	e3a07000	 mov         r7, #0
  00020	e5993440	 ldr         r3, [r9, #0x440]
  00024	e3130b02	 tst         r3, #2, 22
  00028	1a000001	 bne         |$LN17@PmSetDevic|
  0002c	e3130010	 tst         r3, #0x10
  00030	0a000007	 beq         |$LN20@PmSetDevic|
  00034		 |$LN17@PmSetDevic|
  00034	e3180001	 tst         r8, #1
  00038	e59f0144	 ldr         r0, [pc, #0x144]
  0003c	e59f1134	 ldr         r1, [pc, #0x134]
  00040	11a02005	 movne       r2, r5
  00044	059f2134	 ldreq       r2, [pc, #0x134]
  00048	e1a03008	 mov         r3, r8
  0004c	e58d6000	 str         r6, [sp]
  00050	eb000000	 bl          CeLogMsg
  00054		 |$LN20@PmSetDevic|

; 1191 : 
; 1192 :     PMENTERUPDATE();

  00054	eb000000	 bl          PmEnterUpdate

; 1193 : 
; 1194 :     // sanity check parameters
; 1195 :     if(pvDevice == NULL 
; 1196 :     || ((newDx < D0 || newDx > D4) && newDx != PwrDeviceUnspecified)
; 1197 :     || (pdi = DeviceIdParseNameString((LPCTSTR) pvDevice, dwDeviceFlags)) == NULL) {

  00058	e3550000	 cmp         r5, #0
  0005c	0a00002f	 beq         |$LN13@PmSetDevic|
  00060	e3560000	 cmp         r6, #0
  00064	4a000001	 bmi         |$LN11@PmSetDevic|
  00068	e3560004	 cmp         r6, #4
  0006c	da000001	 ble         |$LN12@PmSetDevic|
  00070		 |$LN11@PmSetDevic|
  00070	e3760001	 cmn         r6, #1
  00074	1a000029	 bne         |$LN13@PmSetDevic|
  00078		 |$LN12@PmSetDevic|
  00078	e1a01008	 mov         r1, r8
  0007c	e1a00005	 mov         r0, r5
  00080	eb000000	 bl          DeviceIdParseNameString
  00084	e1b07000	 movs        r7, r0
  00088	0a000024	 beq         |$LN13@PmSetDevic|

; 1199 :     } else if(PSLGetCallerTrust() != OEM_CERTIFY_TRUST) {

  0008c	eb000000	 bl          CeGetCallerTrust
  00090	e3500002	 cmp         r0, #2

; 1200 :         dwStatus = ERROR_ACCESS_DENIED;

  00094	13a04005	 movne       r4, #5
  00098	1a000021	 bne         |$LN6@PmSetDevic|

; 1201 :     } else {
; 1202 :         PDEVICE_LIST pdl;
; 1203 :         BOOL fOk = TRUE;
; 1204 : 
; 1205 :         // look for the device list and the device
; 1206 :         pdl = GetDeviceListFromClass(pdi->pGuid);

  0009c	e5970000	 ldr         r0, [r7]
  000a0	eb000000	 bl          GetDeviceListFromClass
  000a4	e3500000	 cmp         r0, #0

; 1207 :         if(pdl != NULL) {

  000a8	0a00001d	 beq         |$LN6@PmSetDevic|

; 1208 :             PDEVICE_STATE pds = DeviceStateFindList(pdl, pdi->pszName);

  000ac	e5971004	 ldr         r1, [r7, #4]
  000b0	eb000000	 bl          DeviceStateFindList
  000b4	e1b05000	 movs        r5, r0

; 1209 :             if(pds != NULL) {

  000b8	0a000019	 beq         |$LN6@PmSetDevic|

; 1210 :                 // are we imposing a set value or are we removing a set value?
; 1211 :                 if(newDx == PwrDeviceUnspecified) {

  000bc	e3760001	 cmn         r6, #1
  000c0	1a000009	 bne         |$LN5@PmSetDevic|

; 1212 :                     // remove the set value
; 1213 :                     PMLOCK();

  000c4	eb000000	 bl          PmLock

; 1214 :                     pds->setDx = PwrDeviceUnspecified;

  000c8	e3e03000	 mvn         r3, #0
  000cc	e5853010	 str         r3, [r5, #0x10]

; 1215 :                     PMUNLOCK();

  000d0	eb000000	 bl          PmUnlock

; 1216 :                     
; 1217 :                     // let the device find its own power level
; 1218 :                     UpdateDeviceState(pds);

  000d4	e1a00005	 mov         r0, r5
  000d8	eb000000	 bl          UpdateDeviceState
  000dc		 |$LN3@PmSetDevic|

; 1234 :                         dwStatus = ERROR_SUCCESS;

  000dc	e3a04000	 mov         r4, #0
  000e0		 |$LN2@PmSetDevic|

; 1235 :                     }
; 1236 :                 }
; 1237 :                 
; 1238 :                 // done with the device pointer
; 1239 :                 DeviceStateDecRef(pds);

  000e0	e1a00005	 mov         r0, r5
  000e4	eb000000	 bl          DeviceStateDecRef
  000e8	ea00000d	 b           |$LN6@PmSetDevic|
  000ec		 |$LN5@PmSetDevic|

; 1219 :                     
; 1220 :                     // we've removed the set constraint, no matter what UpdateDeviceStatus() did
; 1221 :                     dwStatus = ERROR_SUCCESS;
; 1222 :                 } else {
; 1223 :                     // found the device, now try to update it
; 1224 :                     PMLOCK();

  000ec	eb000000	 bl          PmLock

; 1225 :                     pds->setDx = newDx;

  000f0	e5856010	 str         r6, [r5, #0x10]

; 1226 :                     PMUNLOCK();

  000f4	eb000000	 bl          PmUnlock

; 1227 :                     fOk = UpdateDeviceState(pds);

  000f8	e1a00005	 mov         r0, r5
  000fc	eb000000	 bl          UpdateDeviceState
  00100	e3500000	 cmp         r0, #0

; 1228 :                     if(!fOk) {

  00104	1afffff4	 bne         |$LN3@PmSetDevic|

; 1229 :                         PMLOCK();

  00108	eb000000	 bl          PmLock

; 1230 :                         pds->setDx = PwrDeviceUnspecified;

  0010c	e3e03000	 mvn         r3, #0
  00110	e5853010	 str         r3, [r5, #0x10]

; 1231 :                         PMUNLOCK();

  00114	eb000000	 bl          PmUnlock

; 1232 :                         dwStatus = ERROR_WRITE_FAULT;

  00118	e3a0401d	 mov         r4, #0x1D

; 1233 :                     } else {

  0011c	eaffffef	 b           |$LN2@PmSetDevic|
  00120		 |$LN13@PmSetDevic|

; 1198 :         dwStatus = ERROR_INVALID_PARAMETER;

  00120	e3a04057	 mov         r4, #0x57
  00124		 |$LN6@PmSetDevic|

; 1240 :             }
; 1241 :         }
; 1242 :     }
; 1243 : 
; 1244 :     PMLEAVEUPDATE();

  00124	eb000000	 bl          PmLeaveUpdate

; 1245 : 
; 1246 :     // release resources
; 1247 :     if(pdi != NULL) DeviceIdDestroy(pdi);

  00128	e3570000	 cmp         r7, #0
  0012c	11a00007	 movne       r0, r7
  00130	1b000000	 blne        DeviceIdDestroy

; 1248 : 
; 1249 :     PMLOGMSG(ZONE_API || ZONE_DEVICE || (dwStatus != ERROR_SUCCESS && ZONE_WARN), 
; 1250 :         (_T("-%s: returning dwStatus %d\r\n"), pszFname, dwStatus));

  00134	e5993440	 ldr         r3, [r9, #0x440]
  00138	e3130b02	 tst         r3, #2, 22
  0013c	1a000005	 bne         |$LN21@PmSetDevic|
  00140	e3130010	 tst         r3, #0x10
  00144	1a000003	 bne         |$LN21@PmSetDevic|
  00148	e3540000	 cmp         r4, #0
  0014c	0a000005	 beq         |$LN23@PmSetDevic|
  00150	e3130002	 tst         r3, #2
  00154	0a000003	 beq         |$LN23@PmSetDevic|
  00158		 |$LN21@PmSetDevic|
  00158	e59f001c	 ldr         r0, [pc, #0x1C]
  0015c	e59f1014	 ldr         r1, [pc, #0x14]
  00160	e1a02004	 mov         r2, r4
  00164	eb000000	 bl          CeLogMsg
  00168		 |$LN23@PmSetDevic|

; 1251 : 
; 1252 :     // return our status
; 1253 :     return dwStatus;
; 1254 : }

  00168	e1a00004	 mov         r0, r4
  0016c	e28dd004	 add         sp, sp, #4
  00170	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  00174	e12fff1e	 bx          lr
  00178		 |$LN27@PmSetDevic|
  00178		 |$LN28@PmSetDevic|
  00178	00000000	 DCD         |??_C@_1CC@LDMFDOHP@?$AAP?$AAm?$AAS?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$AA@|
  0017c		 |$LN29@PmSetDevic|
  0017c	00000000	 DCD         |??_C@_1DK@LJCCBMHG@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00180		 |$LN30@PmSetDevic|
  00180	00000000	 DCD         |??_C@_1BE@GFCJAFPH@?$AA?$DM?$AAU?$AAN?$AAK?$AAN?$AAO?$AAW?$AAN?$AA?$DO?$AA?$AA@|
  00184		 |$LN31@PmSetDevic|
  00184	00000000	 DCD         |??_C@_1FE@FDHIODBM@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAn?$AAe@|
  00188		 |$LN32@PmSetDevic|
  00188	00000000	 DCD         |dpCurSettings|
  0018c		 |$M34551|

			 ENDP  ; |PmSetDevicePower|

	EXPORT	|PmDevicePowerNotify|
	EXPORT	|??_C@_1CG@EPNLEKEF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@CAMFMNBC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KG@JKPCLJLL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAD?$AA?$CF?$AAd?$AA?0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@COLEMICB@?$AAP?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@FGBEELGK@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAq?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA0@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T34588| DCD	|$LN27@PmDevicePo|
	DCD	0x40006302

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@EPNLEKEF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t"
	DCB	0x0, "u", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@CAMFMNBC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "S", 0x0, "e", 0x0, "t"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "("
	DCB	0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'", 0x0, ")", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "w", 0x0, "h", 0x0, "e", 0x0, "n", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s"
	DCB	0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "D"
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KG@JKPCLJLL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAD?$AA?$CF?$AAd?$AA?0@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "'", 0x0, "%"
	DCB	0x0, "s", 0x0, "'", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "q"
	DCB	0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "f"
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "D", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "c", 0x0, "u", 0x0, "r", 0x0, "D"
	DCB	0x0, "x", 0x0, " ", 0x0, "D", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "f", 0x0, "l", 0x0, "o", 0x0, "o", 0x0, "r"
	DCB	0x0, "D", 0x0, "x", 0x0, " ", 0x0, "D", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "l"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, "D", 0x0, "x", 0x0, " "
	DCB	0x0, "D", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "s"
	DCB	0x0, "e", 0x0, "t", 0x0, "D", 0x0, "x", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@COLEMICB@?$AAP?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AA?$AA@| DCB "P"
	DCB	0x0, "m", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c"
	DCB	0x0, "e", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r"
	DCB	0x0, "N", 0x0, "o", 0x0, "t", 0x0, "i", 0x0, "f", 0x0, "y"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@FGBEELGK@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAq?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA0@| DCB "+"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "d", 0x0, "e"
	DCB	0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "'"
	DCB	0x0, "%", 0x0, "s", 0x0, "'", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "q", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "f", 0x0, "l", 0x0, "a", 0x0, "g", 0x0, "s", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PmDevicePowerNotify| PROC

; 1263 : {

  00000		 |$LN27@PmDevicePo|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004	e24dd010	 sub         sp, sp, #0x10
  00008		 |$M34585|
  00008	e1a06002	 mov         r6, r2
  0000c	e1a09001	 mov         r9, r1
  00010	e1a04000	 mov         r4, r0

; 1264 :     DWORD dwStatus = ERROR_SUCCESS;
; 1265 :     PDEVICEID pdi = NULL;
; 1266 : 
; 1267 : #ifndef SHIP_BUILD
; 1268 :     SETFNAME(_T("PmDevicePowerNotify"));
; 1269 : #endif
; 1270 : 
; 1271 :     PMLOGMSG(ZONE_API, (_T("+%s: device '%s' req %d, flags 0x%08x\r\n"), pszFname, 
; 1272 :         (dwDeviceFlags & POWER_NAME) != 0 ? (LPTSTR) pvDevice : _T("<UNKNOWN>"),
; 1273 :         reqDx, dwDeviceFlags));

  00014	e59f816c	 ldr         r8, [pc, #0x16C]
  00018	e3a05000	 mov         r5, #0
  0001c	e3a07000	 mov         r7, #0
  00020	e5983440	 ldr         r3, [r8, #0x440]
  00024	e3130b02	 tst         r3, #2, 22
  00028	0a000007	 beq         |$LN14@PmDevicePo|
  0002c	e3160001	 tst         r6, #1
  00030	e59f014c	 ldr         r0, [pc, #0x14C]
  00034	e59f1134	 ldr         r1, [pc, #0x134]
  00038	11a02004	 movne       r2, r4
  0003c	059f213c	 ldreq       r2, [pc, #0x13C]
  00040	e1a03009	 mov         r3, r9
  00044	e58d6000	 str         r6, [sp]
  00048	eb000000	 bl          CeLogMsg
  0004c		 |$LN14@PmDevicePo|

; 1274 : 
; 1275 :     // sanity check parameters
; 1276 :     if(pvDevice == NULL 
; 1277 :     || (reqDx < D0 || reqDx > D4)
; 1278 :     || (pdi = DeviceIdParseNameString((LPCTSTR) pvDevice, dwDeviceFlags)) == NULL) {

  0004c	e3540000	 cmp         r4, #0
  00050	0a000032	 beq         |$LN23@PmDevicePo|
  00054	e3590004	 cmp         r9, #4
  00058	8a000030	 bhi         |$LN23@PmDevicePo|
  0005c	e1a01006	 mov         r1, r6
  00060	e1a00004	 mov         r0, r4
  00064	eb000000	 bl          DeviceIdParseNameString
  00068	e1b07000	 movs        r7, r0
  0006c	0a00002b	 beq         |$LN23@PmDevicePo|

; 1280 :     } else {
; 1281 :         PDEVICE_LIST pdl;
; 1282 :         BOOL fOk = TRUE;
; 1283 : 
; 1284 :         // look for the device list and the device
; 1285 :         pdl = GetDeviceListFromClass(pdi->pGuid);

  00070	e5970000	 ldr         r0, [r7]
  00074	eb000000	 bl          GetDeviceListFromClass
  00078	e3500000	 cmp         r0, #0

; 1286 :         if(pdl == NULL) {
; 1287 :             dwStatus = ERROR_FILE_NOT_FOUND;
; 1288 :         } else {

  0007c	0a000003	 beq         |$LN24@PmDevicePo|

; 1289 :             PDEVICE_STATE pds = DeviceStateFindList(pdl, pdi->pszName);

  00080	e5971004	 ldr         r1, [r7, #4]
  00084	eb000000	 bl          DeviceStateFindList
  00088	e1b06000	 movs        r6, r0

; 1290 :             if(pds == NULL) {

  0008c	1a000001	 bne         |$LN4@PmDevicePo|
  00090		 |$LN24@PmDevicePo|

; 1291 :                 dwStatus = ERROR_FILE_NOT_FOUND;

  00090	e3a05002	 mov         r5, #2

; 1292 :             } else {

  00094	ea000022	 b           |$LN3@PmDevicePo|
  00098		 |$LN4@PmDevicePo|

; 1293 :                 PMLOCK();

  00098	eb000000	 bl          PmLock

; 1294 :                 
; 1295 :                 PMLOGMSG(ZONE_DEVICE, 
; 1296 :                     (_T("%s: device '%s' request for D%d, curDx D%d, floorDx D%d, ceilingDx D%d, setDx %d\r\n"),
; 1297 :                     pszFname, pds->pszName, reqDx, pds->curDx, pds->floorDx, pds->ceilingDx, pds->setDx));

  0009c	e5983440	 ldr         r3, [r8, #0x440]
  000a0	e3130010	 tst         r3, #0x10
  000a4	0a00000c	 beq         |$LN16@PmDevicePo|
  000a8	e596100c	 ldr         r1, [r6, #0xC]
  000ac	e5963010	 ldr         r3, [r6, #0x10]
  000b0	e596e008	 ldr         lr, [r6, #8]
  000b4	e5964004	 ldr         r4, [r6, #4]
  000b8	e5962000	 ldr         r2, [r6]
  000bc	e59f00b8	 ldr         r0, [pc, #0xB8]
  000c0	e58d1008	 str         r1, [sp, #8]
  000c4	e59f10a4	 ldr         r1, [pc, #0xA4]
  000c8	e58d300c	 str         r3, [sp, #0xC]
  000cc	e1a03009	 mov         r3, r9
  000d0	e58de004	 str         lr, [sp, #4]
  000d4	e58d4000	 str         r4, [sp]
  000d8	eb000000	 bl          CeLogMsg
  000dc		 |$LN16@PmDevicePo|

; 1298 :                 
; 1299 :                 // record this state change request
; 1300 :                 pds->lastReqDx = reqDx;

  000dc	e5869014	 str         r9, [r6, #0x14]

; 1301 : 
; 1302 :                 PMUNLOCK();

  000e0	eb000000	 bl          PmUnlock

; 1303 : 
; 1304 :                 // change the device power state if necessary
; 1305 :                 fOk = UpdateDeviceState(pds);

  000e4	e1a00006	 mov         r0, r6
  000e8	eb000000	 bl          UpdateDeviceState
  000ec	e3500000	 cmp         r0, #0

; 1306 :                 if(!fOk) {

  000f0	1a000007	 bne         |$LN2@PmDevicePo|

; 1307 :                     PMLOGMSG(ZONE_WARN, 
; 1308 :                         (_T("%s: SetDevicePower('%s') failed when requesting D%d\r\n"),
; 1309 :                         pszFname, pds->pszName, reqDx));

  000f4	e5983440	 ldr         r3, [r8, #0x440]
  000f8	e3130002	 tst         r3, #2
  000fc	15962000	 ldrne       r2, [r6]
  00100	159f0070	 ldrne       r0, [pc, #0x70]
  00104	159f1064	 ldrne       r1, [pc, #0x64]
  00108	11a03009	 movne       r3, r9
  0010c	1b000000	 blne        CeLogMsg

; 1310 :                     dwStatus = ERROR_WRITE_FAULT;

  00110	e3a0501d	 mov         r5, #0x1D
  00114		 |$LN2@PmDevicePo|

; 1311 :                 }
; 1312 :                 
; 1313 :                 // done with the device state pointer
; 1314 :                 DeviceStateDecRef(pds);

  00114	e1a00006	 mov         r0, r6
  00118	eb000000	 bl          DeviceStateDecRef
  0011c	ea000000	 b           |$LN3@PmDevicePo|
  00120		 |$LN23@PmDevicePo|

; 1279 :         dwStatus = ERROR_INVALID_PARAMETER;

  00120	e3a05057	 mov         r5, #0x57
  00124		 |$LN3@PmDevicePo|

; 1315 :             }
; 1316 :         }
; 1317 :     }
; 1318 : 
; 1319 :     // release resources
; 1320 :     if(pdi != NULL) DeviceIdDestroy(pdi);

  00124	e3570000	 cmp         r7, #0
  00128	11a00007	 movne       r0, r7
  0012c	1b000000	 blne        DeviceIdDestroy

; 1321 : 
; 1322 :     PMLOGMSG((dwStatus != ERROR_SUCCESS && ZONE_WARN) || ZONE_API,
; 1323 :         (_T("%s: returning %d\r\n"), pszFname, dwStatus));

  00130	e3550000	 cmp         r5, #0
  00134	0a000002	 beq         |$LN20@PmDevicePo|
  00138	e5983440	 ldr         r3, [r8, #0x440]
  0013c	e3130002	 tst         r3, #2
  00140	1a000002	 bne         |$LN21@PmDevicePo|
  00144		 |$LN20@PmDevicePo|

; 1264 :     DWORD dwStatus = ERROR_SUCCESS;
; 1265 :     PDEVICEID pdi = NULL;
; 1266 : 
; 1267 : #ifndef SHIP_BUILD
; 1268 :     SETFNAME(_T("PmDevicePowerNotify"));
; 1269 : #endif
; 1270 : 
; 1271 :     PMLOGMSG(ZONE_API, (_T("+%s: device '%s' req %d, flags 0x%08x\r\n"), pszFname, 
; 1272 :         (dwDeviceFlags & POWER_NAME) != 0 ? (LPTSTR) pvDevice : _T("<UNKNOWN>"),
; 1273 :         reqDx, dwDeviceFlags));

  00144	e5983440	 ldr         r3, [r8, #0x440]

; 1321 : 
; 1322 :     PMLOGMSG((dwStatus != ERROR_SUCCESS && ZONE_WARN) || ZONE_API,
; 1323 :         (_T("%s: returning %d\r\n"), pszFname, dwStatus));

  00148	e3130b02	 tst         r3, #2, 22
  0014c	0a000003	 beq         |$LN22@PmDevicePo|
  00150		 |$LN21@PmDevicePo|
  00150	e59f001c	 ldr         r0, [pc, #0x1C]
  00154	e59f1014	 ldr         r1, [pc, #0x14]
  00158	e1a02005	 mov         r2, r5
  0015c	eb000000	 bl          CeLogMsg
  00160		 |$LN22@PmDevicePo|

; 1324 :     return dwStatus;
; 1325 : }

  00160	e1a00005	 mov         r0, r5
  00164	e28dd010	 add         sp, sp, #0x10
  00168	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  0016c	e12fff1e	 bx          lr
  00170		 |$LN28@PmDevicePo|
  00170		 |$LN29@PmDevicePo|
  00170	00000000	 DCD         |??_C@_1CI@COLEMICB@?$AAP?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AA?$AA@|
  00174		 |$LN30@PmDevicePo|
  00174	00000000	 DCD         |??_C@_1CG@EPNLEKEF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00178		 |$LN31@PmDevicePo|
  00178	00000000	 DCD         |??_C@_1GM@CAMFMNBC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5@|
  0017c		 |$LN32@PmDevicePo|
  0017c	00000000	 DCD         |??_C@_1KG@JKPCLJLL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAD?$AA?$CF?$AAd?$AA?0@|
  00180		 |$LN33@PmDevicePo|
  00180	00000000	 DCD         |??_C@_1BE@GFCJAFPH@?$AA?$DM?$AAU?$AAN?$AAK?$AAN?$AAO?$AAW?$AAN?$AA?$DO?$AA?$AA@|
  00184		 |$LN34@PmDevicePo|
  00184	00000000	 DCD         |??_C@_1FA@FGBEELGK@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAq?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA0@|
  00188		 |$LN35@PmDevicePo|
  00188	00000000	 DCD         |dpCurSettings|
  0018c		 |$M34586|

			 ENDP  ; |PmDevicePowerNotify|

	END
