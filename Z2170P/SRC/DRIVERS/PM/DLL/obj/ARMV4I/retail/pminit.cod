; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\Z2170P\SRC\DRIVERS\PM\DLL\pminit.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|ghtResume| [ DATA ]
	EXPORT	|gpSystemPowerState| [ DATA ]
	EXPORT	|ghtActivityTimers| [ DATA ]
	EXPORT	|gcsDeviceUpdateAPIs| [ DATA ]
	EXPORT	|gpDeviceLists| [ DATA ]
	EXPORT	|gpPMExtInit| [ DATA ]
	EXPORT	|ghevResume| [ DATA ]
	EXPORT	|gcsPowerManager| [ DATA ]
	EXPORT	|gpCeilingDx| [ DATA ]
	EXPORT	|ghPmHeap| [ DATA ]
	EXPORT	|ghevPowerManagerReady| [ DATA ]
	EXPORT	|gpFloorDx| [ DATA ]
	EXPORT	|gpPowerNotifications| [ DATA ]
	EXPORT	|ghtSystem| [ DATA ]
	EXPORT	|ghtPnP| [ DATA ]
	EXPORT	|gppActivityTimers| [ DATA ]
	EXPORT	|ghInst| [ DATA ]
	EXPORT	|ghevPmShutdown| [ DATA ]
	EXPORT	|ghevTimerResume| [ DATA ]
	EXPORT	|ghPMExtLib| [ DATA ]
	EXPORT	|gpPMExtDeinit| [ DATA ]
	EXPORT	|idGenericPMDeviceClass| [ DATA ]
	EXPORT	|idPMDisplayDeviceClass| [ DATA ]
	EXPORT	|gdwPMExtContext| [ DATA ]
	EXPORT	|dpCurSettings| [ DATA ]
	EXPORT	|?g_pSysRegistryAccess@@3PAVSystemNotifyRegKey@@A| [ DATA ] ; g_pSysRegistryAccess

  00000			 AREA	 |.bss|, NOINIT
|ghtResume| %	0x4
|gpSystemPowerState| % 0x4
|ghtActivityTimers| % 0x4
|gcsDeviceUpdateAPIs| % 0x14
|gpDeviceLists| % 0x4
|gpPMExtInit| %	0x4
|ghevResume| %	0x4
|gcsPowerManager| % 0x14
|gpCeilingDx| %	0x4
|ghPmHeap| %	0x4
|ghevPowerManagerReady| % 0x4
|gpFloorDx| %	0x4
|gpPowerNotifications| % 0x4
|ghtSystem| %	0x4
|ghtPnP| %	0x4
|gppActivityTimers| % 0x4
|ghInst| %	0x4
|ghevPmShutdown| % 0x4
|ghevTimerResume| % 0x4
|ghPMExtLib| %	0x4
|gpPMExtDeinit| % 0x4
|gdwPMExtContext| % 0x4
|?g_pSysRegistryAccess@@3PAVSystemNotifyRegKey@@A| % 0x4 ; g_pSysRegistryAccess

  00000			 AREA	 |.data|, DATA
|idGenericPMDeviceClass| DCD 0xa32942b7
	DCW	0x920c
	DCW	0x486b
	DCB	0xb0
	DCB	0xe6
	DCB	0x92
	DCB	0xa7
	DCB	0x2
	DCB	0xa9
	DCB	0x9b
	DCB	0x35
|idPMDisplayDeviceClass| DCD 0xeb91c7c9
	DCW	0x8bf6
	DCW	0x4a2d
	DCB	0x9a
	DCB	0xb8
	DCB	0x69
	DCB	0x72
	DCB	0x4e
	DCB	0xed
	DCB	0x97
	DCB	0xd1
|dpCurSettings| DCB "P", 0x0, "M", 0x0, 0x0, 0x0
	%	58
	DCB	"E", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, "s", 0x0
	DCB	0x0, 0x0
	%	50
	DCB	"W", 0x0, "a", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0
	DCB	"g", 0x0, "s", 0x0, 0x0, 0x0
	%	46
	DCB	"I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0x0, 0x0
	%	54
	DCB	"R", 0x0, "e", 0x0, "s", 0x0, "u", 0x0, "m", 0x0, "e", 0x0
	DCB	0x0, 0x0
	%	50
	DCB	"D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0
	DCB	0x0, 0x0
	%	50
	DCB	"I", 0x0, "o", 0x0, "c", 0x0, "t", 0x0, "l", 0x0, 0x0, 0x0
	%	52
	DCB	"R", 0x0, "e", 0x0, "f", 0x0, "c", 0x0, "n", 0x0, "t", 0x0
	DCB	0x0, 0x0
	%	50
	DCB	"R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "i", 0x0, "r", 0x0
	DCB	"e", 0x0, 0x0, 0x0
	%	48
	DCB	"N", 0x0, "o", 0x0, "t", 0x0, "i", 0x0, "f", 0x0, "y", 0x0
	DCB	0x0, 0x0
	%	50
	DCB	"R", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0
	DCB	"r", 0x0, "y", 0x0, 0x0, 0x0
	%	46
	DCB	"P", 0x0, "l", 0x0, "a", 0x0, "t", 0x0, "f", 0x0, "o", 0x0
	DCB	"r", 0x0, "m", 0x0, 0x0, 0x0
	%	46
	DCB	"A", 0x0, "P", 0x0, "I", 0x0, 0x0, 0x0
	%	56
	DCB	"A", 0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, 0x0, 0x0
	%	52
	DCB	"T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "r", 0x0, "s", 0x0
	DCB	0x0, 0x0
	%	50
	DCB	0x0, 0x0
	%	62
	DCB	0x0, 0x0
	%	62
	DCD	0x7
	EXPORT	|SetEvent|
	IMPORT	|EventModify|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T34526| DCD	|$LN5@SetEvent|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetEvent| PROC

; 235  : _inline BOOL SetEvent(HANDLE h) {

  00000		 |$LN5@SetEvent|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M34523|

; 236  : 	return EventModify(h,EVENT_SET);

  00004	e3a01003	 mov         r1, #3
  00008	eb000000	 bl          EventModify

; 237  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M34524|

			 ENDP  ; |SetEvent|

	EXPORT	|GetCurrentProcess|

  00000			 AREA	 |.pdata|, PDATA
|$T34535| DCD	|$LN5@GetCurrent|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetCurrentProcess| PROC

; 361  : _inline HANDLE GetCurrentProcess(void) {

  00000		 |$LN5@GetCurrent|
  00000		 |$M34532|

; 362  : 	return ((HANDLE)(SH_CURPROC+SYS_HANDLE_BASE));

  00000	e3a00042	 mov         r0, #0x42

; 363  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M34533|

			 ENDP  ; |GetCurrentProcess|

	EXPORT	|GetCurrentProcessId|
	IMPORT	|__GetUserKData|

  00000			 AREA	 |.pdata|, PDATA
|$T34544| DCD	|$LN5@GetCurrent@2|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetCurrentProcessId| PROC

; 373  : _inline DWORD GetCurrentProcessId(void) {

  00000		 |$LN5@GetCurrent@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M34541|

; 374  :     return __GetUserKData (SYSHANDLE_OFFSET + (SH_CURPROC * sizeof(HANDLE)));

  00004	e3a0000c	 mov         r0, #0xC
  00008	eb000000	 bl          __GetUserKData

; 375  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M34542|

			 ENDP  ; |GetCurrentProcessId|

	EXPORT	|??8@YAHABU_GUID@@0@Z|			; operator==
	IMPORT	|memcmp|
; File c:\wince600\public\common\sdk\inc\objbase.h

  00000			 AREA	 |.pdata|, PDATA
|$T34558| DCD	|$LN7@operator|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??8@YAHABU_GUID@@0@Z| PROC		; operator==

; 516  : {

  00000		 |$LN7@operator|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M34555|

; 517  : #ifdef _WIN32
; 518  :     return !memcmp(&guidOne,&guidOther,sizeof(GUID));

  00004	e3a02010	 mov         r2, #0x10
  00008	eb000000	 bl          memcmp
  0000c	e3500000	 cmp         r0, #0
  00010	03a00001	 moveq       r0, #1

; 519  : #else
; 520  :     return !_fmemcmp(&guidOne,&guidOther,sizeof(GUID)); }
; 521  : #endif
; 522  : }

  00014	049de004	 ldreq       lr, [sp], #4

; 517  : #ifdef _WIN32
; 518  :     return !memcmp(&guidOne,&guidOther,sizeof(GUID));

  00018	13a00000	 movne       r0, #0

; 519  : #else
; 520  :     return !_fmemcmp(&guidOne,&guidOther,sizeof(GUID)); }
; 521  : #endif
; 522  : }

  0001c	149de004	 ldrne       lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M34556|

			 ENDP  ; |??8@YAHABU_GUID@@0@Z|, operator==

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|?DeviceListsInit@@YAHXZ|		; DeviceListsInit
	EXPORT	|??_C@_1EO@FIGOIHNC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAd?$AAu?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HA@PHCGCLLJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@FNHBJNHN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@IPLGNFH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GC@HMMKDNKJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?5?$AAG?$AAU?$AAI?$AAD?$AA?5?$AAf?$AAo?$AAu?$AAn?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@OJCNELMO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAv?$AAe?$AAr?$AAt?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAt?$AAo?$AA?5?$AAG?$AAU?$AAI?$AAD?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@CAGDLEBG@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAs?$AAI?$AAn?$AAi?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@DAMLNPFA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@OBHJEKIL@?$AA?$CF?$AAs?$AA?2?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AAs?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|RegCloseKey|
	IMPORT	|DeviceListDestroy|
	IMPORT	|PlatformDeviceListInit|
	IMPORT	|DeviceListCreate|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|ConvertStringToGuid|
	IMPORT	|RegEnumValueW|
	IMPORT	|RegOpenKeyExW|
	IMPORT	|StringCchPrintfW|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_cookie|
	IMPORT	|__security_check_cookie|

  00000			 AREA	 |.pdata|, PDATA
|$T34612| DCD	|$LN59@DeviceList|
	DCD	0xc0008e02

  00000			 AREA	 |.xdata|, DATA
|$T34608| DCD	0xffffffdc

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@FIGOIHNC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAd?$AAu?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "d", 0x0, "u", 0x0, "r"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "l", 0x0, "i"
	DCB	0x0, "s", 0x0, "t", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z"
	DCB	0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@PHCGCLLJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "P", 0x0, "l", 0x0, "a"
	DCB	0x0, "t", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, "m", 0x0, "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "L"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "I", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "f", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "f"
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "f"
	DCB	0x0, "a", 0x0, "u", 0x0, "l", 0x0, "t", 0x0, " ", 0x0, "c"
	DCB	0x0, "l", 0x0, "a", 0x0, "s", 0x0, "s", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@FNHBJNHN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "P", 0x0, "l", 0x0, "a"
	DCB	0x0, "t", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, "m", 0x0, "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "L"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "I", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "f", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@IPLGNFH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, "L", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "C", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "f", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@HMMKDNKJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?5?$AAG?$AAU?$AAI?$AAD?$AA?5?$AAf?$AAo?$AAu?$AAn?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "f"
	DCB	0x0, "a", 0x0, "u", 0x0, "l", 0x0, "t", 0x0, " ", 0x0, "G"
	DCB	0x0, "U", 0x0, "I", 0x0, "D", 0x0, " ", 0x0, "f", 0x0, "o"
	DCB	0x0, "u", 0x0, "n", 0x0, "d", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, "a", 0x0, "s"
	DCB	0x0, " ", 0x0, "e", 0x0, "x", 0x0, "p", 0x0, "e", 0x0, "c"
	DCB	0x0, "t", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@OJCNELMO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAv?$AAe?$AAr?$AAt?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAt?$AAo?$AA?5?$AAG?$AAU?$AAI?$AAD?$AA?$AN?$AA?6@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "n"
	DCB	0x0, "'", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n"
	DCB	0x0, "v", 0x0, "e", 0x0, "r", 0x0, "t", 0x0, " ", 0x0, "'"
	DCB	0x0, "%", 0x0, "s", 0x0, "'", 0x0, " ", 0x0, "t", 0x0, "o"
	DCB	0x0, " ", 0x0, "G", 0x0, "U", 0x0, "I", 0x0, "D", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@CAGDLEBG@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAs?$AAI?$AAn?$AAi?$AAt?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "L"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "s", 0x0, "I", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@DAMLNPFA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "v"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "y", 0x0, "p", 0x0, "e", 0x0, " ", 0x0, "f", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "u"
	DCB	0x0, "e", 0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| DCB "S"
	DCB	0x0, "Y", 0x0, "S", 0x0, "T", 0x0, "E", 0x0, "M", 0x0, "\\"
	DCB	0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "\\"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "\\", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e"
	DCB	0x0, "r", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@OBHJEKIL@?$AA?$CF?$AAs?$AA?2?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AAs?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, "\\", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "f", 0x0, "a", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\pm\dll\pminit.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T34608|

  00008		 |?DeviceListsInit@@YAHXZ| PROC		; DeviceListsInit

; 112  : {

  00008		 |$LN59@DeviceList|
  00008	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  0000c	e24ddf8e	 sub         sp, sp, #0x8E, 30
  00010		 |$M34609|
  00010	e59f3224	 ldr         r3, [pc, #0x224]
  00014	e5933000	 ldr         r3, [r3]
  00018	e58d3234	 str         r3, [sp, #0x234]

; 113  :     BOOL fOk = TRUE;
; 114  :     PDEVICE_LIST pdl;
; 115  :     DWORD dwStatus;
; 116  :     HKEY hk;
; 117  :     TCHAR szBuf[MAX_PATH];
; 118  : 
; 119  : #ifndef SHIP_BUILD
; 120  :     SETFNAME(_T("DeviceListsInit"));
; 121  : #endif
; 122  : 
; 123  :     // enumerate all the device classes
; 124  :     StringCchPrintf(szBuf,_countof(szBuf), _T("%s\\Interfaces"), PWRMGR_REG_KEY);

  0001c	e59f3214	 ldr         r3, [pc, #0x214]
  00020	e59f220c	 ldr         r2, [pc, #0x20C]
  00024	e3a01f41	 mov         r1, #0x41, 30
  00028	e28d002c	 add         r0, sp, #0x2C
  0002c	e3a06001	 mov         r6, #1
  00030	eb000000	 bl          StringCchPrintfW

; 125  :     dwStatus = RegOpenKeyEx(HKEY_LOCAL_MACHINE, szBuf, 0, 0, &hk);

  00034	e28d3010	 add         r3, sp, #0x10
  00038	e58d3000	 str         r3, [sp]
  0003c	e3a03000	 mov         r3, #0
  00040	e3a02000	 mov         r2, #0
  00044	e28d102c	 add         r1, sp, #0x2C
  00048	e3a0010a	 mov         r0, #0xA, 2
  0004c	eb000000	 bl          RegOpenKeyExW
  00050	e59f51d8	 ldr         r5, [pc, #0x1D8]
  00054	e3500000	 cmp         r0, #0
  00058	e3a09000	 mov         r9, #0

; 126  :     if(dwStatus == ERROR_SUCCESS) {

  0005c	1a000045	 bne         |$LN49@DeviceList|

; 127  :         DWORD dwIndex = 0;

  00060	e3a07000	 mov         r7, #0
  00064	e3a0af41	 mov         r10, #0x41, 30
  00068	e28d8014	 add         r8, sp, #0x14
  0006c		 |$LL22@DeviceList|

; 128  :         do {
; 129  :             DWORD cbValueName = dim(szBuf), dwType;
; 130  :             GUID idInterface;
; 131  : 
; 132  :             dwStatus = RegEnumValue(hk, dwIndex, szBuf, &cbValueName, NULL,
; 133  :                 &dwType, NULL, NULL);

  0006c	e59d0010	 ldr         r0, [sp, #0x10]
  00070	e28d3018	 add         r3, sp, #0x18
  00074	e28d202c	 add         r2, sp, #0x2C
  00078	e1a01007	 mov         r1, r7
  0007c	e58da018	 str         r10, [sp, #0x18]
  00080	e58d900c	 str         r9, [sp, #0xC]
  00084	e58d9008	 str         r9, [sp, #8]
  00088	e58d8004	 str         r8, [sp, #4]
  0008c	e58d9000	 str         r9, [sp]
  00090	eb000000	 bl          RegEnumValueW
  00094	e3500000	 cmp         r0, #0

; 134  :             if(dwStatus == ERROR_SUCCESS) {

  00098	1a00002e	 bne         |$LN48@DeviceList|

; 135  :                 if(dwType != REG_SZ) {

  0009c	e59d3014	 ldr         r3, [sp, #0x14]
  000a0	e3530001	 cmp         r3, #1

; 136  :                     RETAILMSG(1, (_T("%s: invalid type for value '%s'\r\n"),
; 137  :                         pszFname, szBuf));

  000a4	159f0180	 ldrne       r0, [pc, #0x180]
  000a8	1a000005	 bne         |$LN55@DeviceList|

; 138  :                 } else if(!ConvertStringToGuid(szBuf, &idInterface)) {

  000ac	e28d101c	 add         r1, sp, #0x1C
  000b0	e28d002c	 add         r0, sp, #0x2C
  000b4	eb000000	 bl          ConvertStringToGuid
  000b8	e3500000	 cmp         r0, #0
  000bc	1a000005	 bne         |$LN16@DeviceList|

; 139  :                     RETAILMSG(1, (_T("%s: can't convert '%s' to GUID\r\n"),
; 140  :                         pszFname, szBuf));

  000c0	e59f0160	 ldr         r0, [pc, #0x160]
  000c4		 |$LN55@DeviceList|
  000c4	e59f1140	 ldr         r1, [pc, #0x140]
  000c8	e28d202c	 add         r2, sp, #0x2C
  000cc	eb000000	 bl          NKDbgPrintfW

; 154  :                     gpDeviceLists = pdl;
; 155  :                 }
; 156  : 
; 157  :                 // update the index
; 158  :                 dwIndex++;

  000d0	e2877001	 add         r7, r7, #1

; 159  :             }
; 160  :         } while(dwStatus == ERROR_SUCCESS);

  000d4	eaffffe4	 b           |$LL22@DeviceList|
  000d8		 |$LN16@DeviceList|

; 141  :                 } else if(idInterface == idGenericPMDeviceClass) {

  000d8	e59f1138	 ldr         r1, [pc, #0x138]
  000dc	e3a02010	 mov         r2, #0x10
  000e0	e28d001c	 add         r0, sp, #0x1C
  000e4	eb000000	 bl          memcmp
  000e8	e3500000	 cmp         r0, #0

; 142  :                     RETAILMSG(1, (_T("%s: default GUID found in registry as expected\r\n"), 
; 143  :                         pszFname));

  000ec	059f0130	 ldreq       r0, [pc, #0x130]
  000f0	0a000004	 beq         |$LN56@DeviceList|

; 144  :                 } else if((pdl = DeviceListCreate(&idInterface)) == NULL) {

  000f4	e28d001c	 add         r0, sp, #0x1C
  000f8	eb000000	 bl          DeviceListCreate
  000fc	e1b04000	 movs        r4, r0
  00100	1a000004	 bne         |$LN12@DeviceList|

; 145  :                     RETAILMSG(1, (_T("%s: DeviceListCreate() failed\r\n"), 
; 146  :                         pszFname));

  00104	e59f0114	 ldr         r0, [pc, #0x114]
  00108		 |$LN56@DeviceList|
  00108	e59f10fc	 ldr         r1, [pc, #0xFC]
  0010c	eb000000	 bl          NKDbgPrintfW

; 154  :                     gpDeviceLists = pdl;
; 155  :                 }
; 156  : 
; 157  :                 // update the index
; 158  :                 dwIndex++;

  00110	e2877001	 add         r7, r7, #1

; 159  :             }
; 160  :         } while(dwStatus == ERROR_SUCCESS);

  00114	eaffffd4	 b           |$LL22@DeviceList|
  00118		 |$LN12@DeviceList|

; 147  :                 } else if(PlatformDeviceListInit(pdl) == FALSE) {

  00118	e1a00004	 mov         r0, r4
  0011c	eb000000	 bl          PlatformDeviceListInit
  00120	e3500000	 cmp         r0, #0
  00124	1a000006	 bne         |$LN10@DeviceList|

; 148  :                     RETAILMSG(1, (_T("%s: PlatformDeviceListInit() failed\r\n"), 
; 149  :                         pszFname));

  00128	e59f10dc	 ldr         r1, [pc, #0xDC]
  0012c	e59f00e8	 ldr         r0, [pc, #0xE8]
  00130	eb000000	 bl          NKDbgPrintfW

; 150  :                     DeviceListDestroy(pdl);

  00134	e1a00004	 mov         r0, r4
  00138	eb000000	 bl          DeviceListDestroy

; 154  :                     gpDeviceLists = pdl;
; 155  :                 }
; 156  : 
; 157  :                 // update the index
; 158  :                 dwIndex++;

  0013c	e2877001	 add         r7, r7, #1

; 159  :             }
; 160  :         } while(dwStatus == ERROR_SUCCESS);

  00140	eaffffc9	 b           |$LL22@DeviceList|
  00144		 |$LN10@DeviceList|

; 151  :                 } else {
; 152  :                     // add the new entry to the list
; 153  :                     pdl->pNext = gpDeviceLists;

  00144	e5953000	 ldr         r3, [r5]

; 154  :                     gpDeviceLists = pdl;
; 155  :                 }
; 156  : 
; 157  :                 // update the index
; 158  :                 dwIndex++;

  00148	e2877001	 add         r7, r7, #1
  0014c	e5843014	 str         r3, [r4, #0x14]
  00150	e5854000	 str         r4, [r5]

; 159  :             }
; 160  :         } while(dwStatus == ERROR_SUCCESS);

  00154	eaffffc4	 b           |$LL22@DeviceList|
  00158		 |$LN48@DeviceList|
  00158	e3a03c01	 mov         r3, #1, 24

; 161  : 
; 162  :         // check for abnormal termination of the loop
; 163  :         if(dwStatus != ERROR_NO_MORE_ITEMS) {

  0015c	e3833003	 orr         r3, r3, #3
  00160	e1500003	 cmp         r0, r3

; 164  :             fOk = FALSE;
; 165  :         }
; 166  : 
; 167  :         // close the registry handle
; 168  :         RegCloseKey(hk);

  00164	e59d0010	 ldr         r0, [sp, #0x10]
  00168	13a06000	 movne       r6, #0
  0016c	eb000000	 bl          RegCloseKey

; 169  :     }
; 170  : 
; 171  :     // add the default list last
; 172  :     if(fOk) {

  00170	e3560000	 cmp         r6, #0
  00174	0a00000d	 beq         |$LN47@DeviceList|
  00178		 |$LN49@DeviceList|

; 173  :         fOk = FALSE;
; 174  :         pdl = DeviceListCreate(&idGenericPMDeviceClass);

  00178	e59f0098	 ldr         r0, [pc, #0x98]
  0017c	e3a06000	 mov         r6, #0
  00180	eb000000	 bl          DeviceListCreate
  00184	e1b04000	 movs        r4, r0

; 175  :         if(pdl != NULL) {

  00188	0a000008	 beq         |$LN47@DeviceList|

; 176  :             if(PlatformDeviceListInit(pdl) == FALSE) {

  0018c	e1a00004	 mov         r0, r4
  00190	eb000000	 bl          PlatformDeviceListInit
  00194	e3500000	 cmp         r0, #0
  00198	1a000008	 bne         |$LN5@DeviceList|

; 177  :                 RETAILMSG(1 , 
; 178  :                     (_T("%s: PlatformDeviceListInit() failed for default class\r\n"),
; 179  :                     pszFname));

  0019c	e59f0070	 ldr         r0, [pc, #0x70]
  001a0	e59f1064	 ldr         r1, [pc, #0x64]
  001a4	eb000000	 bl          NKDbgPrintfW

; 180  :                 DeviceListDestroy(pdl);

  001a8	e1a00004	 mov         r0, r4
  001ac	eb000000	 bl          DeviceListDestroy
  001b0		 |$LN47@DeviceList|

; 191  :         RETAILMSG(1, (_T("%s: error during list initialization\r\n"), 
; 192  :             pszFname));

  001b0	e59f0058	 ldr         r0, [pc, #0x58]
  001b4	e59f1050	 ldr         r1, [pc, #0x50]
  001b8	eb000000	 bl          NKDbgPrintfW

; 193  :         while(gpDeviceLists != NULL) {

  001bc	ea000009	 b           |$LN54@DeviceList|
  001c0		 |$LN5@DeviceList|

; 181  :             } else {
; 182  :                 pdl->pNext = gpDeviceLists;

  001c0	e5953000	 ldr         r3, [r5]

; 183  :                 gpDeviceLists = pdl;
; 184  :                 fOk = TRUE;

  001c4	e3a06001	 mov         r6, #1
  001c8	e5843014	 str         r3, [r4, #0x14]
  001cc	e5854000	 str         r4, [r5]

; 185  :             }
; 186  :         }
; 187  :     }
; 188  : 
; 189  :     // clean up if necessary
; 190  :     if(!fOk) {

  001d0	ea000007	 b           |$LN1@DeviceList|
  001d4		 |$LL2@DeviceList|

; 194  :             pdl = gpDeviceLists;
; 195  :             gpDeviceLists = pdl->pNext;

  001d4	e5923014	 ldr         r3, [r2, #0x14]

; 196  :             pdl->pNext = NULL;
; 197  :             DeviceListDestroy(pdl);

  001d8	e1a00002	 mov         r0, r2
  001dc	e5853000	 str         r3, [r5]
  001e0	e5829014	 str         r9, [r2, #0x14]
  001e4	eb000000	 bl          DeviceListDestroy
  001e8		 |$LN54@DeviceList|
  001e8	e5952000	 ldr         r2, [r5]
  001ec	e3520000	 cmp         r2, #0
  001f0	1afffff7	 bne         |$LL2@DeviceList|
  001f4		 |$LN1@DeviceList|

; 198  :         }
; 199  :     }
; 200  : 
; 201  :     return fOk;

  001f4	e59d0234	 ldr         r0, [sp, #0x234]
  001f8	eb000000	 bl          __security_check_cookie

; 202  : }

  001fc	e1a00006	 mov         r0, r6
  00200	e28ddf8e	 add         sp, sp, #0x8E, 30
  00204	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  00208	e12fff1e	 bx          lr
  0020c		 |$LN60@DeviceList|
  0020c		 |$LN61@DeviceList|
  0020c	00000000	 DCD         |??_C@_1CA@CAGDLEBG@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAs?$AAI?$AAn?$AAi?$AAt?$AA?$AA@|
  00210		 |$LN62@DeviceList|
  00210	00000000	 DCD         |??_C@_1EO@FIGOIHNC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAd?$AAu?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa@|
  00214		 |$LN63@DeviceList|
  00214	00000000	 DCD         |??_C@_1HA@PHCGCLLJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi@|
  00218		 |$LN64@DeviceList|
  00218	00000000	 DCD         |idGenericPMDeviceClass|
  0021c		 |$LN65@DeviceList|
  0021c	00000000	 DCD         |??_C@_1EM@FNHBJNHN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi@|
  00220		 |$LN66@DeviceList|
  00220	00000000	 DCD         |??_C@_1EA@IPLGNFH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00224		 |$LN67@DeviceList|
  00224	00000000	 DCD         |??_C@_1GC@HMMKDNKJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?5?$AAG?$AAU?$AAI?$AAD?$AA?5?$AAf?$AAo?$AAu?$AAn?$AAd?$AA?5?$AAi?$AAn?$AA?5?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt@|
  00228		 |$LN68@DeviceList|
  00228	00000000	 DCD         |??_C@_1EC@OJCNELMO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAc?$AAo?$AAn?$AAv?$AAe?$AAr?$AAt?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAt?$AAo?$AA?5?$AAG?$AAU?$AAI?$AAD?$AA?$AN?$AA?6@|
  0022c		 |$LN69@DeviceList|
  0022c	00000000	 DCD         |??_C@_1EE@DAMLNPFA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN@|
  00230		 |$LN70@DeviceList|
  00230	00000000	 DCD         |gpDeviceLists|
  00234		 |$LN71@DeviceList|
  00234	00000000	 DCD         |??_C@_1BM@OBHJEKIL@?$AA?$CF?$AAs?$AA?2?$AAI?$AAn?$AAt?$AAe?$AAr?$AAf?$AAa?$AAc?$AAe?$AAs?$AA?$AA@|
  00238		 |$LN72@DeviceList|
  00238	00000000	 DCD         |??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@|
  0023c		 |$LN73@DeviceList|
  0023c	00000000	 DCD         |__security_cookie|
  00240		 |$M34610|

			 ENDP  ; |?DeviceListsInit@@YAHXZ|, DeviceListsInit

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|PmInit|
	EXPORT	|??_C@_1CI@JMHLNJN@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@JOGFCBGM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAl?$AAo?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAa?$AAn?$AAd?$AAl?$AAe?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@OCCOMIBI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAa?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@CIFABHGF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@OMMAAAMF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@JOHFJEDC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAP?$AAn?$AAP?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@LNDLJJOC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@MHHINMNC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@JNPAFHHM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAk?$AAe?$AAy?$AA?5?$AA?$FL?$AAH?$AAK?$AAE?$AAY?$AA_?$AAL?$AAO?$AAC?$AAA?$AAL?$AA_?$AAM@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@KJJDOFJE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAs?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@FMDJOFIA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@LDBCAAAG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAi?$AAn?$AA?5?$AAk?$AAe?$AAy?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@PBEIGBDA@?$AAP?$AAM?$AAE?$AAx?$AAt?$AA_?$AAD?$AAe?$AAI?$AAn?$AAi?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@PCHMNDCC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAG?$AAe?$AAt?$AAP?$AAr?$AAo?$AAc?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@JEIALCGK@?$AAP?$AAM?$AAE?$AAx?$AAt?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@MFMHNBPH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAP?$AAM?$AAE?$AAx?$AAt?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AA?9?$AA?9?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@OAJFFPML@?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_17DJMMGLBL@?$AAD?$AAl?$AAl?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@IDDIFJJB@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HA@PHFPGFKF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAF?$AAo?$AAr?$AAM?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@OEHMKAOO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@GDOFDLJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@HMANBMPF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@OOKIINAM@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?1?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AAR?$AAe?$AAa?$AAd?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@KDNBKLHB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAP?$AAM?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?$CI?$AA?$CJ@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@CIIPHLJM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAs?$AAh?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@NDNKNHPJ@?$AAP?$AAm?$AAI?$AAn?$AAi?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@LFABOLDL@?$AA?$CL?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|CloseHandle|
	IMPORT	|WaitForSingleObject|
	IMPORT	|PmSetSystemPowerState|
	IMPORT	|SystemThreadProc|
	IMPORT	|GetProcAddressW|
	IMPORT	|LoadDriver|
	IMPORT	|LoadLibraryW|
	IMPORT	|RegQueryValueExW|
	IMPORT	|GetLastError|
	IMPORT	|WaitForMultipleObjects|
	IMPORT	|ActivityTimersThreadProc|
	IMPORT	|ResumeThreadProc|
	IMPORT	|CreateThread|
	IMPORT	|PnpThreadProc|
	IMPORT	|PlatformValidatePMRegistry|
	IMPORT	|CreateEventW|
	IMPORT	|GetProcessHeap|
	IMPORT	|InitializeCriticalSection|
	IMPORT	|__GSHandlerCheck_SEH|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T34726| DCD	|$LN127@PmInit|
	DCD	0xc001fd04

  00000			 AREA	 |.pdata|, PDATA
|$T34728| DCD	|$LN97@PmInit|
	DCD	0x40002702

  00000			 AREA	 |.xdata|, DATA
|$T34724| DCD	0x1
	DCD	|$LN101@PmInit|
	DCD	|$LN102@PmInit|
	DCD	|$LN97@PmInit|
	DCD	|$LN98@PmInit|
	DCD	0xffffffd4

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@JMHLNJN@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@JOGFCBGM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAl?$AAo?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAa?$AAn?$AAd?$AAl?$AAe?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "l", 0x0, "o"
	DCB	0x0, "s", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "h"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "s"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@OCCOMIBI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAa?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "h", 0x0, "u"
	DCB	0x0, "t", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "d", 0x0, "o", 0x0, "w", 0x0, "n", 0x0, " ", 0x0, "a"
	DCB	0x0, "c", 0x0, "t", 0x0, "i", 0x0, "v", 0x0, "i", 0x0, "t"
	DCB	0x0, "y", 0x0, " ", 0x0, "t", 0x0, "i", 0x0, "m", 0x0, "e"
	DCB	0x0, "r", 0x0, "s", 0x0, " ", 0x0, "t", 0x0, "h", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@CIFABHGF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$AN@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "h", 0x0, "u"
	DCB	0x0, "t", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "d", 0x0, "o", 0x0, "w", 0x0, "n", 0x0, " ", 0x0, "s"
	DCB	0x0, "y", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m", 0x0, " "
	DCB	0x0, "t", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@OMMAAAMF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$AN@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "h", 0x0, "u"
	DCB	0x0, "t", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "d", 0x0, "o", 0x0, "w", 0x0, "n", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "s", 0x0, "u", 0x0, "m", 0x0, "e", 0x0, " "
	DCB	0x0, "t", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@JOHFJEDC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAP?$AAn?$AAP?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "h", 0x0, "u"
	DCB	0x0, "t", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "d", 0x0, "o", 0x0, "w", 0x0, "n", 0x0, " ", 0x0, "P"
	DCB	0x0, "n", 0x0, "P", 0x0, " ", 0x0, "t", 0x0, "h", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@LNDLJJOC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "y", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "m", 0x0, " ", 0x0, "t", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l"
	DCB	0x0, "i", 0x0, "z", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "u", 0x0, "r", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@MHHINMNC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "y", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "m", 0x0, " ", 0x0, "t", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "c"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "u", 0x0, "r", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@JNPAFHHM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAk?$AAe?$AAy?$AA?5?$AA?$FL?$AAH?$AAK?$AAE?$AAY?$AA_?$AAL?$AAO?$AAC?$AAA?$AAL?$AA_?$AAM@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "n"
	DCB	0x0, "'", 0x0, "t", 0x0, " ", 0x0, "o", 0x0, "p", 0x0, "e"
	DCB	0x0, "n", 0x0, " ", 0x0, "k", 0x0, "e", 0x0, "y", 0x0, " "
	DCB	0x0, "[", 0x0, "H", 0x0, "K", 0x0, "E", 0x0, "Y", 0x0, "_"
	DCB	0x0, "L", 0x0, "O", 0x0, "C", 0x0, "A", 0x0, "L", 0x0, "_"
	DCB	0x0, "M", 0x0, "A", 0x0, "C", 0x0, "H", 0x0, "I", 0x0, "N"
	DCB	0x0, "E", 0x0, "\\", 0x0, "%", 0x0, "s", 0x0, "]", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@KJJDOFJE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAs?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, """", 0x0, "%", 0x0, "s"
	DCB	0x0, """", 0x0, " ", 0x0, "s", 0x0, "u", 0x0, "c", 0x0, "c"
	DCB	0x0, "e", 0x0, "s", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@FMDJOFIA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, """", 0x0, "%", 0x0, "s"
	DCB	0x0, """", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@LDBCAAAG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAi?$AAn?$AA?5?$AAk?$AAe?$AAy?$AA?5@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "n"
	DCB	0x0, "'", 0x0, "t", 0x0, " ", 0x0, "g", 0x0, "e", 0x0, "t"
	DCB	0x0, " ", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "u", 0x0, "e"
	DCB	0x0, " ", 0x0, """", 0x0, "%", 0x0, "s", 0x0, """", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, " ", 0x0, "k", 0x0, "e", 0x0, "y"
	DCB	0x0, " ", 0x0, """", 0x0, "%", 0x0, "s", 0x0, """", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@PBEIGBDA@?$AAP?$AAM?$AAE?$AAx?$AAt?$AA_?$AAD?$AAe?$AAI?$AAn?$AAi?$AAt?$AA?$AA@| DCB "P"
	DCB	0x0, "M", 0x0, "E", 0x0, "x", 0x0, "t", 0x0, "_", 0x0, "D"
	DCB	0x0, "e", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@PCHMNDCC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAG?$AAe?$AAt?$AAP?$AAr?$AAo?$AAc?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, """", 0x0, "%", 0x0, "s"
	DCB	0x0, """", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "n", 0x0, "'"
	DCB	0x0, "t", 0x0, " ", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "P"
	DCB	0x0, "r", 0x0, "o", 0x0, "c", 0x0, "A", 0x0, "d", 0x0, "d"
	DCB	0x0, "r", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@JEIALCGK@?$AAP?$AAM?$AAE?$AAx?$AAt?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$AA@| DCB "P"
	DCB	0x0, "M", 0x0, "E", 0x0, "x", 0x0, "t", 0x0, "_", 0x0, "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@MFMHNBPH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAP?$AAM?$AAE?$AAx?$AAt?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AA?9?$AA?9?$AA?5@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "u"
	DCB	0x0, "l", 0x0, "d", 0x0, "n", 0x0, "'", 0x0, "t", 0x0, " "
	DCB	0x0, "l", 0x0, "o", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "P"
	DCB	0x0, "M", 0x0, "E", 0x0, "x", 0x0, "t", 0x0, " ", 0x0, """"
	DCB	0x0, "%", 0x0, "s", 0x0, """", 0x0, " ", 0x0, "-", 0x0, "-"
	DCB	0x0, " ", 0x0, "e", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@OAJFFPML@?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?$AA@| DCB "F", 0x0, "l", 0x0
	DCB	"a", 0x0, "g", 0x0, "s", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_17DJMMGLBL@?$AAD?$AAl?$AAl?$AA?$AA@| DCB "D", 0x0, "l", 0x0, "l", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@IDDIFJJB@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| DCB "S"
	DCB	0x0, "Y", 0x0, "S", 0x0, "T", 0x0, "E", 0x0, "M", 0x0, "\\"
	DCB	0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "\\"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "\\", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e"
	DCB	0x0, "r", 0x0, "\\", 0x0, "E", 0x0, "x", 0x0, "t", 0x0, "e"
	DCB	0x0, "n", 0x0, "s", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "\\"
	DCB	0x0, "O", 0x0, "m", 0x0, "a", 0x0, "p", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@PHFPGFKF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAF?$AAo?$AAr?$AAM?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "W", 0x0, "a", 0x0, "i"
	DCB	0x0, "t", 0x0, "F", 0x0, "o", 0x0, "r", 0x0, "M", 0x0, "u"
	DCB	0x0, "l", 0x0, "t", 0x0, "i", 0x0, "p", 0x0, "l", 0x0, "e"
	DCB	0x0, "O", 0x0, "b", 0x0, "j", 0x0, "e", 0x0, "c", 0x0, "t"
	DCB	0x0, "s", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n", 0x0, "d", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "s", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, " ", 0x0, "i"
	DCB	0x0, "s", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@OEHMKAOO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "t", 0x0, "h", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "z", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "u"
	DCB	0x0, "r", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@GDOFDLJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "t", 0x0, "h", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "c", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "u"
	DCB	0x0, "r", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@HMANBMPF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "e", 0x0, "v", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, " ", 0x0, "c", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "u", 0x0, "r"
	DCB	0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@OOKIINAM@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?1?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AAR?$AAe?$AAa?$AAd?$AAy?$AA?$AA@| DCB "S"
	DCB	0x0, "Y", 0x0, "S", 0x0, "T", 0x0, "E", 0x0, "M", 0x0, "/"
	DCB	0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "M"
	DCB	0x0, "a", 0x0, "n", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "r"
	DCB	0x0, "R", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "y", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@KDNBKLHB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAP?$AAM?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?$CI?$AA?$CJ@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "P", 0x0, "l", 0x0, "a"
	DCB	0x0, "t", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, "m", 0x0, "V"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "P", 0x0, "M", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "r", 0x0, "y", 0x0, "("
	DCB	0x0, ")", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@CIIPHLJM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAs?$AAh?$AAu@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "E", 0x0, "v", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "(", 0x0, ")", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "s", 0x0, "h"
	DCB	0x0, "u", 0x0, "t", 0x0, "d", 0x0, "o", 0x0, "w", 0x0, "n"
	DCB	0x0, " ", 0x0, "e", 0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@NDNKNHPJ@?$AAP?$AAm?$AAI?$AAn?$AAi?$AAt?$AA?$AA@| DCB "P", 0x0, "m"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@LFABOLDL@?$AA?$CL?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "+", 0x0
	DCB	"%", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\pm\dll\pminit.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck_SEH|
  00004	00000000	 DCD         |$T34724|

  00008		 |PmInit| PROC

; 209  : {

  00008		 |$LN127@PmInit|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d5ff0	 stmdb       sp!, {r4 - r12, lr}
  00010	e28db028	 add         r11, sp, #0x28
  00014	e24dd0d4	 sub         sp, sp, #0xD4
  00018		 |$LN125@PmInit|
  00018	e59f3874	 ldr         r3, [pc, #0x874]
  0001c	e5933000	 ldr         r3, [r3]
  00020	e50b302c	 str         r3, [r11, #-0x2C]

; 210  :     BOOL fOk = TRUE;
; 211  :     HANDLE hevPnPReady = NULL, hevResumeReady = NULL, hevSystemReady = NULL;
; 212  :     HANDLE hevActivityTimersReady = NULL, hevDummy = NULL;
; 213  : 
; 214  : #ifndef SHIP_BUILD
; 215  :     SETFNAME(_T("PmInit"));
; 216  : #endif
; 217  : 
; 218  :     RETAILMSG(1 , (_T("+%s\r\n"), pszFname));

  00024	e59f0864	 ldr         r0, [pc, #0x864]
  00028	e3a06001	 mov         r6, #1
  0002c	e3a03000	 mov         r3, #0
  00030	e50b30ec	 str         r3, [r11, #-0xEC]
  00034	e3a0a000	 mov         r10, #0
  00038	e3a08000	 mov         r8, #0
  0003c	e50b80f0	 str         r8, [r11, #-0xF0]
  00040	e3a09000	 mov         r9, #0
  00044	e3a04000	 mov         r4, #0
  00048	e50b40e8	 str         r4, [r11, #-0xE8]
  0004c	e59f17bc	 ldr         r1, [pc, #0x7BC]
  00050	e50b60f4	 str         r6, [r11, #-0xF4]
  00054	e50b30d8	 str         r3, [r11, #-0xD8]
  00058	e50ba0c8	 str         r10, [r11, #-0xC8]
  0005c	e50b80cc	 str         r8, [r11, #-0xCC]
  00060	e50b90d4	 str         r9, [r11, #-0xD4]
  00064	e50b40e0	 str         r4, [r11, #-0xE0]
  00068	eb000000	 bl          NKDbgPrintfW

; 219  : 
; 220  :     // set up globals
; 221  :     InitializeCriticalSection(&gcsPowerManager);

  0006c	e59f57d8	 ldr         r5, [pc, #0x7D8]
  00070	e2850034	 add         r0, r5, #0x34
  00074	eb000000	 bl          InitializeCriticalSection

; 222  :     InitializeCriticalSection(&gcsDeviceUpdateAPIs);

  00078	e2850054	 add         r0, r5, #0x54
  0007c	eb000000	 bl          InitializeCriticalSection

; 223  :     gpFloorDx = NULL;

  00080	e3a03000	 mov         r3, #0

; 224  :     gpCeilingDx = NULL;

  00084	e3a02000	 mov         r2, #0

; 225  :     gpPowerNotifications = NULL;

  00088	e3a01000	 mov         r1, #0

; 226  :     gpSystemPowerState = NULL;

  0008c	e3a00000	 mov         r0, #0
  00090	e5853024	 str         r3, [r5, #0x24]
  00094	e5852030	 str         r2, [r5, #0x30]
  00098	e5851020	 str         r1, [r5, #0x20]
  0009c	e585006c	 str         r0, [r5, #0x6C]

; 227  :     ghPmHeap = GetProcessHeap();

  000a0	eb000000	 bl          GetProcessHeap
  000a4	e1a03000	 mov         r3, r0

; 228  :     gpDeviceLists = NULL;

  000a8	e3a0e000	 mov         lr, #0

; 229  :     gppActivityTimers = NULL;

  000ac	e3a04000	 mov         r4, #0

; 230  :     ghevPowerManagerReady = NULL;

  000b0	e3a07000	 mov         r7, #0

; 231  :     ghevResume = NULL;
; 232  :     ghevTimerResume = NULL;
; 233  :     ghtPnP = NULL;
; 234  :     ghtResume = NULL;
; 235  :     ghtActivityTimers = NULL;
; 236  :     ghtSystem = NULL;
; 237  : 
; 238  :     // cleanup event (hopefully never used)
; 239  :     ghevPmShutdown = CreateEvent(NULL, TRUE, FALSE, NULL);

  000b4	e3a00000	 mov         r0, #0
  000b8	e585302c	 str         r3, [r5, #0x2C]
  000bc	e3a03000	 mov         r3, #0
  000c0	e3a02000	 mov         r2, #0
  000c4	e3a01001	 mov         r1, #1
  000c8	e585e050	 str         lr, [r5, #0x50]
  000cc	e5854014	 str         r4, [r5, #0x14]
  000d0	e5857028	 str         r7, [r5, #0x28]
  000d4	e3a0e000	 mov         lr, #0
  000d8	e585e048	 str         lr, [r5, #0x48]
  000dc	e3a0e000	 mov         lr, #0
  000e0	e585e008	 str         lr, [r5, #8]
  000e4	e3a0e000	 mov         lr, #0
  000e8	e585e018	 str         lr, [r5, #0x18]
  000ec	e3a0e000	 mov         lr, #0
  000f0	e585e070	 str         lr, [r5, #0x70]
  000f4	e3a0e000	 mov         lr, #0
  000f8	e585e068	 str         lr, [r5, #0x68]
  000fc	e3a0e000	 mov         lr, #0
  00100	e585e01c	 str         lr, [r5, #0x1C]
  00104	eb000000	 bl          CreateEventW
  00108	e3500000	 cmp         r0, #0
  0010c	e585000c	 str         r0, [r5, #0xC]

; 240  :     if(ghevPmShutdown == NULL) {

  00110	1a000004	 bne         |$LN49@PmInit|

; 241  :         RETAILMSG(1, (_T("%s: CreateEvent() failed for shutdown event\r\n"), pszFname));

  00114	e59f0770	 ldr         r0, [pc, #0x770]
  00118	e59f16f0	 ldr         r1, [pc, #0x6F0]
  0011c	eb000000	 bl          NKDbgPrintfW

; 242  :         fOk = FALSE;

  00120	e3a06000	 mov         r6, #0
  00124	e50b60f4	 str         r6, [r11, #-0xF4]
  00128		 |$LN49@PmInit|

; 243  :     } 
; 244  : 
; 245  :     // validate the power management registry settings.  OEM code should use this
; 246  :     // routine to make sure that registry settings are present for all the power
; 247  :     // states they expect to support.  If the registry is not configured, the OEM
; 248  :     // code can treat it as a fatal error or perform its own initialization.
; 249  :     if(fOk) {

  00128	e3560000	 cmp         r6, #0
  0012c	0a00008e	 beq         |$LN111@PmInit|

; 250  :         DWORD dwStatus = PlatformValidatePMRegistry();

  00130	eb000000	 bl          PlatformValidatePMRegistry
  00134	e1b02000	 movs        r2, r0

; 251  :         if(dwStatus != ERROR_SUCCESS) {

  00138	0a000006	 beq         |$LN47@PmInit|

; 252  :             RETAILMSG(1, (_T("%s: PlatformValidatePMRegistry() failed %d\r\n"), 
; 253  :                 pszFname, dwStatus));

  0013c	e59f0744	 ldr         r0, [pc, #0x744]
  00140	e59f16c8	 ldr         r1, [pc, #0x6C8]
  00144	eb000000	 bl          NKDbgPrintfW

; 254  :             fOk = FALSE;

  00148	e3a06000	 mov         r6, #0
  0014c	e50b60f4	 str         r6, [r11, #-0xF4]

; 255  :         } else {

  00150	e3a04000	 mov         r4, #0
  00154	ea000085	 b           |$LN116@PmInit|
  00158		 |$LN47@PmInit|

; 256  :             // read the list of interface types we will monitor
; 257  :             fOk = DeviceListsInit();

  00158	eb000000	 bl          |?DeviceListsInit@@YAHXZ|
  0015c	e1a06000	 mov         r6, r0
  00160	e50b60f4	 str         r6, [r11, #-0xF4]

; 258  :         }
; 259  :     }
; 260  : 
; 261  :     // create events
; 262  :     if(fOk) {

  00164	e3560000	 cmp         r6, #0
  00168	0a00007f	 beq         |$LN111@PmInit|

; 263  :         ghevPowerManagerReady = CreateEvent(NULL, TRUE, FALSE, _T("SYSTEM/PowerManagerReady"));

  0016c	e59f3710	 ldr         r3, [pc, #0x710]
  00170	e3a02000	 mov         r2, #0
  00174	e3a01001	 mov         r1, #1
  00178	e3a00000	 mov         r0, #0
  0017c	eb000000	 bl          CreateEventW
  00180	e1a03000	 mov         r3, r0

; 264  :         ghevResume = CreateEvent(NULL, FALSE, FALSE, NULL);

  00184	e3a00000	 mov         r0, #0
  00188	e5853028	 str         r3, [r5, #0x28]
  0018c	e3a03000	 mov         r3, #0
  00190	e3a02000	 mov         r2, #0
  00194	e3a01000	 mov         r1, #0
  00198	eb000000	 bl          CreateEventW
  0019c	e1a03000	 mov         r3, r0

; 265  :         ghevTimerResume = CreateEvent(NULL, FALSE, FALSE, NULL);

  001a0	e3a00000	 mov         r0, #0
  001a4	e5853048	 str         r3, [r5, #0x48]
  001a8	e3a03000	 mov         r3, #0
  001ac	e3a02000	 mov         r2, #0
  001b0	e3a01000	 mov         r1, #0
  001b4	eb000000	 bl          CreateEventW
  001b8	e1a03000	 mov         r3, r0

; 266  :         hevPnPReady = CreateEvent(NULL, FALSE, FALSE, NULL);

  001bc	e3a00000	 mov         r0, #0
  001c0	e5853008	 str         r3, [r5, #8]
  001c4	e3a03000	 mov         r3, #0
  001c8	e3a02000	 mov         r2, #0
  001cc	e3a01000	 mov         r1, #0
  001d0	eb000000	 bl          CreateEventW
  001d4	e1a07000	 mov         r7, r0
  001d8	e50b70ec	 str         r7, [r11, #-0xEC]

; 267  :         hevResumeReady = CreateEvent(NULL, FALSE, FALSE, NULL);

  001dc	e3a00000	 mov         r0, #0
  001e0	e50b70d8	 str         r7, [r11, #-0xD8]
  001e4	e3a03000	 mov         r3, #0
  001e8	e3a02000	 mov         r2, #0
  001ec	e3a01000	 mov         r1, #0
  001f0	eb000000	 bl          CreateEventW
  001f4	e1a0a000	 mov         r10, r0

; 268  :         hevSystemReady = CreateEvent(NULL, FALSE, FALSE, NULL);

  001f8	e3a00000	 mov         r0, #0
  001fc	e50ba0c8	 str         r10, [r11, #-0xC8]
  00200	e3a03000	 mov         r3, #0
  00204	e3a02000	 mov         r2, #0
  00208	e3a01000	 mov         r1, #0
  0020c	eb000000	 bl          CreateEventW
  00210	e1a08000	 mov         r8, r0
  00214	e50b80f0	 str         r8, [r11, #-0xF0]

; 269  :         hevActivityTimersReady = CreateEvent(NULL, FALSE, FALSE, NULL);

  00218	e3a00000	 mov         r0, #0
  0021c	e50b80cc	 str         r8, [r11, #-0xCC]
  00220	e3a03000	 mov         r3, #0
  00224	e3a02000	 mov         r2, #0
  00228	e3a01000	 mov         r1, #0
  0022c	eb000000	 bl          CreateEventW
  00230	e1a09000	 mov         r9, r0

; 270  :         hevDummy = CreateEvent(NULL, FALSE, FALSE, NULL);

  00234	e3a00000	 mov         r0, #0
  00238	e50b90d4	 str         r9, [r11, #-0xD4]
  0023c	e3a03000	 mov         r3, #0
  00240	e3a02000	 mov         r2, #0
  00244	e3a01000	 mov         r1, #0
  00248	eb000000	 bl          CreateEventW
  0024c	e1a04000	 mov         r4, r0
  00250	e50b40e8	 str         r4, [r11, #-0xE8]
  00254	e50b40e0	 str         r4, [r11, #-0xE0]

; 271  : 
; 272  :         // check everything
; 273  :         if(hevPnPReady == NULL
; 274  :         || hevResumeReady == NULL 
; 275  :         || hevSystemReady == NULL
; 276  :         || hevActivityTimersReady == NULL
; 277  :         || hevDummy == NULL
; 278  :         || ghevPowerManagerReady == NULL
; 279  :         || ghevTimerResume == NULL
; 280  :         || ghevResume == NULL) {

  00258	e3570000	 cmp         r7, #0
  0025c	0a000010	 beq         |$LN43@PmInit|
  00260	e35a0000	 cmp         r10, #0
  00264	0a00000e	 beq         |$LN43@PmInit|
  00268	e3580000	 cmp         r8, #0
  0026c	0a00000c	 beq         |$LN43@PmInit|
  00270	e3590000	 cmp         r9, #0
  00274	0a00000a	 beq         |$LN43@PmInit|
  00278	e3540000	 cmp         r4, #0
  0027c	0a000008	 beq         |$LN43@PmInit|
  00280	e5953028	 ldr         r3, [r5, #0x28]
  00284	e3530000	 cmp         r3, #0
  00288	0a000005	 beq         |$LN43@PmInit|
  0028c	e5953008	 ldr         r3, [r5, #8]
  00290	e3530000	 cmp         r3, #0
  00294	0a000002	 beq         |$LN43@PmInit|
  00298	e5953048	 ldr         r3, [r5, #0x48]
  0029c	e3530000	 cmp         r3, #0
  002a0	1a000004	 bne         |$LN44@PmInit|
  002a4		 |$LN43@PmInit|

; 281  :             RETAILMSG(1, (_T("%s: event creation failure\r\n"), pszFname));

  002a4	e59f05d4	 ldr         r0, [pc, #0x5D4]
  002a8	e59f1560	 ldr         r1, [pc, #0x560]
  002ac	eb000000	 bl          NKDbgPrintfW

; 282  :             fOk = FALSE;

  002b0	e3a06000	 mov         r6, #0
  002b4	e50b60f4	 str         r6, [r11, #-0xF4]
  002b8		 |$LN44@PmInit|

; 283  :         }
; 284  :     }
; 285  : 
; 286  :     // start threads
; 287  :     if(fOk) {

  002b8	e3560000	 cmp         r6, #0
  002bc	0a00002a	 beq         |$LN111@PmInit|

; 288  :         ghtPnP = CreateThread(NULL, 0, PnpThreadProc, (LPVOID) hevPnPReady, 0, NULL);

  002c0	e59f25b4	 ldr         r2, [pc, #0x5B4]
  002c4	e3a07000	 mov         r7, #0
  002c8	e51b40ec	 ldr         r4, [r11, #-0xEC]
  002cc	e1a03004	 mov         r3, r4
  002d0	e3a01000	 mov         r1, #0
  002d4	e3a00000	 mov         r0, #0
  002d8	e58d7004	 str         r7, [sp, #4]
  002dc	e58d7000	 str         r7, [sp]
  002e0	eb000000	 bl          CreateThread

; 289  :         ghtResume = CreateThread(NULL, 0, ResumeThreadProc, (LPVOID) hevResumeReady, 0, NULL);

  002e4	e59f258c	 ldr         r2, [pc, #0x58C]
  002e8	e1a03000	 mov         r3, r0
  002ec	e3a00000	 mov         r0, #0
  002f0	e5853018	 str         r3, [r5, #0x18]
  002f4	e1a0300a	 mov         r3, r10
  002f8	e3a01000	 mov         r1, #0
  002fc	e58d7004	 str         r7, [sp, #4]
  00300	e58d7000	 str         r7, [sp]
  00304	eb000000	 bl          CreateThread

; 290  :         ghtActivityTimers = CreateThread(NULL, 0, ActivityTimersThreadProc, 
; 291  :             (LPVOID) hevActivityTimersReady, 0, NULL);

  00308	e59f2564	 ldr         r2, [pc, #0x564]
  0030c	e1a03000	 mov         r3, r0
  00310	e3a00000	 mov         r0, #0
  00314	e5853070	 str         r3, [r5, #0x70]
  00318	e1a03009	 mov         r3, r9
  0031c	e3a01000	 mov         r1, #0
  00320	e58d7004	 str         r7, [sp, #4]
  00324	e58d7000	 str         r7, [sp]
  00328	eb000000	 bl          CreateThread
  0032c	e5953018	 ldr         r3, [r5, #0x18]
  00330	e5850068	 str         r0, [r5, #0x68]

; 292  :         
; 293  :         // check everything
; 294  :         if(ghtPnP == NULL 
; 295  :         || ghtResume == NULL 
; 296  :         || ghtActivityTimers == NULL) {

  00334	e3530000	 cmp         r3, #0
  00338	0a000005	 beq         |$LN40@PmInit|
  0033c	e5953070	 ldr         r3, [r5, #0x70]
  00340	e3530000	 cmp         r3, #0
  00344	0a000002	 beq         |$LN40@PmInit|
  00348	e1a03000	 mov         r3, r0
  0034c	e3530000	 cmp         r3, #0
  00350	1a000007	 bne         |$LN41@PmInit|
  00354		 |$LN40@PmInit|

; 297  :             RETAILMSG(1, (_T("%s: thread creation failure\r\n"), pszFname));

  00354	e59f0514	 ldr         r0, [pc, #0x514]
  00358	e59f14b0	 ldr         r1, [pc, #0x4B0]
  0035c	eb000000	 bl          NKDbgPrintfW

; 298  :             fOk = FALSE;

  00360	e3a06000	 mov         r6, #0
  00364	e50b60f4	 str         r6, [r11, #-0xF4]
  00368	ea000001	 b           |$LN41@PmInit|
  0036c		 |$LN111@PmInit|

; 376  :                     gdwPMExtContext = 0;

  0036c	e51b40ec	 ldr         r4, [r11, #-0xEC]
  00370		 |$LN116@PmInit|

; 298  :             fOk = FALSE;

  00370	e3a07000	 mov         r7, #0
  00374		 |$LN41@PmInit|

; 255  :         } else {

  00374	e5953018	 ldr         r3, [r5, #0x18]
  00378	e5952070	 ldr         r2, [r5, #0x70]
  0037c	e5951068	 ldr         r1, [r5, #0x68]

; 299  :         }
; 300  :     }
; 301  : 
; 302  :     // wait for threads to initialize (or fail to initialize)
; 303  :     #define NUM_OF_READY_EXIT_PAIR 3
; 304  :     HANDLE hEvents[] = { hevPnPReady, hevResumeReady, hevActivityTimersReady, 
; 305  :         ghtPnP, ghtResume, ghtActivityTimers };

  00380	e50b30b8	 str         r3, [r11, #-0xB8]
  00384	e50b20b4	 str         r2, [r11, #-0xB4]
  00388	e50b10b0	 str         r1, [r11, #-0xB0]

; 306  :     int iReady = 0;

  0038c	e50b40c4	 str         r4, [r11, #-0xC4]
  00390	e50ba0c0	 str         r10, [r11, #-0xC0]
  00394	e50b90bc	 str         r9, [r11, #-0xBC]
  00398	e3a04000	 mov         r4, #0

; 331  :             break;
; 332  :         }
; 333  :     }
; 334  : 
; 335  :     // load PMExt DLL, call init
; 336  :     if (fOk) {

  0039c	e51b50e8	 ldr         r5, [r11, #-0xE8]
  003a0	e24b80c4	 sub         r8, r11, #0xC4

; 306  :     int iReady = 0;

  003a4		 |$LL39@PmInit|

; 307  :     while( iReady < NUM_OF_READY_EXIT_PAIR  && fOk) {

  003a4	e3560000	 cmp         r6, #0
  003a8	0a000019	 beq         |$LN38@PmInit|

; 308  :         DWORD dwStatus = WaitForMultipleObjects(dim(hEvents), hEvents, FALSE, INFINITE);

  003ac	e3e03000	 mvn         r3, #0
  003b0	e3a02000	 mov         r2, #0
  003b4	e24b10c4	 sub         r1, r11, #0xC4
  003b8	e3a00006	 mov         r0, #6
  003bc	eb000000	 bl          WaitForMultipleObjects

; 309  :         switch(dwStatus) {

  003c0	e3500002	 cmp         r0, #2
  003c4	9a00000d	 bls         |$LN35@PmInit|
  003c8	e3500005	 cmp         r0, #5
  003cc	8a000005	 bhi         |$LN33@PmInit|

; 318  :             break;
; 319  : 
; 320  :         // thread exiting events
; 321  :         case (WAIT_OBJECT_0 + 3):   // pnp exited
; 322  :         case (WAIT_OBJECT_0 + 4):   // resume exited
; 323  :         case (WAIT_OBJECT_0 + 5):   // activity timers exited
; 324  :             RETAILMSG(1, (_T("%s: thread initialization failure\r\n"), pszFname));

  003d0	e59f1438	 ldr         r1, [pc, #0x438]
  003d4	e59f0490	 ldr         r0, [pc, #0x490]
  003d8	eb000000	 bl          NKDbgPrintfW
  003dc		 |$LN117@PmInit|

; 325  :             fOk = FALSE;

  003dc	e3a06000	 mov         r6, #0
  003e0	e50b60f4	 str         r6, [r11, #-0xF4]

; 326  :             break;

  003e4	ea000008	 b           |$LN36@PmInit|
  003e8		 |$LN33@PmInit|

; 327  :         default:
; 328  :             RETAILMSG(1, (_T("%s: WaitForMultipleObjects() returnd %d, status is %d\r\n"),
; 329  :                 pszFname, GetLastError()));

  003e8	eb000000	 bl          GetLastError
  003ec	e1a02000	 mov         r2, r0
  003f0	e59f0470	 ldr         r0, [pc, #0x470]
  003f4	e59f1414	 ldr         r1, [pc, #0x414]
  003f8	eb000000	 bl          NKDbgPrintfW

; 330  :             fOk = FALSE;

  003fc	eafffff6	 b           |$LN117@PmInit|
  00400		 |$LN35@PmInit|

; 310  :         // thread ready events
; 311  :         case (WAIT_OBJECT_0 + 0):   // pnp ready
; 312  :         case (WAIT_OBJECT_0 + 1):   // resume ready
; 313  :         case (WAIT_OBJECT_0 + 2):   // activity timers ready
; 314  :             // don't watch for the thread exiting now -- some may do
; 315  :             // so if they don't have work to do.
; 316  :             hEvents[dwStatus - WAIT_OBJECT_0 + NUM_OF_READY_EXIT_PAIR] = hevDummy;

  00400	e0883100	 add         r3, r8, r0, lsl #2
  00404	e583500c	 str         r5, [r3, #0xC]

; 317  :             iReady++;

  00408	e2844001	 add         r4, r4, #1

; 330  :             fOk = FALSE;

  0040c		 |$LN36@PmInit|

; 307  :     while( iReady < NUM_OF_READY_EXIT_PAIR  && fOk) {

  0040c	e3540003	 cmp         r4, #3
  00410	baffffe3	 blt         |$LL39@PmInit|
  00414		 |$LN38@PmInit|

; 331  :             break;
; 332  :         }
; 333  :     }
; 334  : 
; 335  :     // load PMExt DLL, call init
; 336  :     if (fOk) {

  00414	e3560000	 cmp         r6, #0
  00418	e59f542c	 ldr         r5, [pc, #0x42C]
  0041c	e51b80f0	 ldr         r8, [r11, #-0xF0]
  00420	0a00009b	 beq         |$LN16@PmInit|

; 337  :         TCHAR DevDll[DEVDLL_LEN];
; 338  :         DWORD cbData;
; 339  :         DWORD Flags;
; 340  :         HKEY hKey;
; 341  : 
; 342  :         gpPMExtInit = NULL;
; 343  :         gpPMExtDeinit = NULL;;
; 344  : 
; 345  :         // Note: TEXT("\\Omap") is appended to the PMExt_Registry_Root because this is the only PMExt that we support
; 346  :         if (ERROR_SUCCESS == RegOpenKeyEx(HKEY_LOCAL_MACHINE, PMExt_Registry_Root TEXT("\\Omap"), 0, 0, &hKey)) {

  00424	e3a04000	 mov         r4, #0
  00428	e24be0f0	 sub         lr, r11, #0xF0
  0042c	e59f1404	 ldr         r1, [pc, #0x404]
  00430	e3a03000	 mov         r3, #0
  00434	e3a02000	 mov         r2, #0
  00438	e3a0010a	 mov         r0, #0xA, 2
  0043c	e585404c	 str         r4, [r5, #0x4C]
  00440	e3a04000	 mov         r4, #0
  00444	e5854000	 str         r4, [r5]
  00448	e58de000	 str         lr, [sp]
  0044c	eb000000	 bl          RegOpenKeyExW
  00450	e3500000	 cmp         r0, #0
  00454	1a000062	 bne         |$LN31@PmInit|

; 347  :             cbData = sizeof(DevDll);
; 348  :             if (ERROR_SUCCESS == RegQueryValueEx(hKey, DEVLOAD_DLLNAME_VALNAME, NULL, NULL, (LPBYTE) DevDll, &cbData)) {

  00458	e51b00f0	 ldr         r0, [r11, #-0xF0]
  0045c	e24b40ac	 sub         r4, r11, #0xAC
  00460	e59f13e8	 ldr         r1, [pc, #0x3E8]
  00464	e3a03000	 mov         r3, #0
  00468	e3a02000	 mov         r2, #0
  0046c	e3a0e080	 mov         lr, #0x80
  00470	e50be0e4	 str         lr, [r11, #-0xE4]
  00474	e24be0e4	 sub         lr, r11, #0xE4
  00478	e58de004	 str         lr, [sp, #4]
  0047c	e58d4000	 str         r4, [sp]
  00480	eb000000	 bl          RegQueryValueExW
  00484	e3500000	 cmp         r0, #0
  00488	1a000029	 bne         |$LN30@PmInit|

; 349  :                 cbData = sizeof(Flags);
; 350  :                 if (ERROR_SUCCESS != RegQueryValueEx(hKey, DEVLOAD_FLAGS_VALNAME, NULL, NULL, (LPBYTE) &Flags, &cbData)) {

  0048c	e59f13d0	 ldr         r1, [pc, #0x3D0]
  00490	e51b00f0	 ldr         r0, [r11, #-0xF0]
  00494	e24b40d0	 sub         r4, r11, #0xD0
  00498	e3a03000	 mov         r3, #0
  0049c	e3a02000	 mov         r2, #0
  004a0	e3a0e004	 mov         lr, #4
  004a4	e50be0e4	 str         lr, [r11, #-0xE4]
  004a8	e24be0e4	 sub         lr, r11, #0xE4
  004ac	e58de004	 str         lr, [sp, #4]
  004b0	e58d4000	 str         r4, [sp]
  004b4	eb000000	 bl          RegQueryValueExW
  004b8	e3500000	 cmp         r0, #0

; 351  :                     Flags = DEVFLAGS_NONE;

  004bc	13a03000	 movne       r3, #0
  004c0	150b30d0	 strne       r3, [r11, #-0xD0]
  004c4	051b30d0	 ldreq       r3, [r11, #-0xD0]

; 352  :                 }
; 353  :                 ghPMExtLib = (Flags & DEVFLAGS_LOADLIBRARY) ? LoadLibrary(DevDll) : LoadDriver(DevDll);

  004c8	e3130002	 tst         r3, #2
  004cc	e24b00ac	 sub         r0, r11, #0xAC
  004d0	0a000001	 beq         |$LN66@PmInit|
  004d4	eb000000	 bl          LoadLibraryW
  004d8	ea000000	 b           |$LN120@PmInit|
  004dc		 |$LN66@PmInit|
  004dc	eb000000	 bl          LoadDriver
  004e0		 |$LN120@PmInit|
  004e0	e5850004	 str         r0, [r5, #4]

; 354  :                 if (!ghPMExtLib) {

  004e4	e3500000	 cmp         r0, #0
  004e8	1a000004	 bne         |$LN28@PmInit|

; 355  :                     RETAILMSG(1, (_T("%s: couldn't load PMExt \"%s\" -- error %d\r\n"), pszFname, DevDll, GetLastError()));

  004ec	eb000000	 bl          GetLastError
  004f0	e1a03000	 mov         r3, r0
  004f4	e59f0364	 ldr         r0, [pc, #0x364]
  004f8	e24b20ac	 sub         r2, r11, #0xAC

; 356  :                 } 
; 357  :                 else {

  004fc	ea00000f	 b           |$LN121@PmInit|
  00500		 |$LN28@PmInit|

; 358  :                     gpPMExtInit = (PFN_PMExt_Init) GetProcAddress(ghPMExtLib, PMExt_Init_NAME);

  00500	e59f1340	 ldr         r1, [pc, #0x340]
  00504	eb000000	 bl          GetProcAddressW
  00508	e3500000	 cmp         r0, #0
  0050c	e585004c	 str         r0, [r5, #0x4C]

; 359  :                     if (!gpPMExtInit)
; 360  :                         RETAILMSG(1, (_T("%s: \"%s\" can't GetProcAddress\r\n"), pszFname, PMExt_Init_NAME));

  00510	059f0344	 ldreq       r0, [pc, #0x344]
  00514	059f232c	 ldreq       r2, [pc, #0x32C]
  00518	059f12f0	 ldreq       r1, [pc, #0x2F0]
  0051c	0b000000	 bleq        NKDbgPrintfW

; 361  : 
; 362  :                     gpPMExtDeinit = (PFN_PMExt_DeInit) GetProcAddress(ghPMExtLib, PMExt_DeInit_NAME);

  00520	e59f1330	 ldr         r1, [pc, #0x330]
  00524	e5950004	 ldr         r0, [r5, #4]
  00528	eb000000	 bl          GetProcAddressW
  0052c	e5850000	 str         r0, [r5]

; 363  :                 }
; 364  :             }
; 365  :             else {

  00530	ea000004	 b           |$LN73@PmInit|
  00534		 |$LN30@PmInit|

; 366  :                 RETAILMSG(1, (_T("%s: can't get value \"%s\" in key \"%s\"\r\n"), pszFname, DEVLOAD_DLLNAME_VALNAME, PMExt_Registry_Root TEXT("\\Omap")));

  00534	e59f0318	 ldr         r0, [pc, #0x318]
  00538	e59f32f8	 ldr         r3, [pc, #0x2F8]
  0053c	e59f230c	 ldr         r2, [pc, #0x30C]
  00540		 |$LN121@PmInit|
  00540	e59f12c8	 ldr         r1, [pc, #0x2C8]
  00544	eb000000	 bl          NKDbgPrintfW
  00548		 |$LN73@PmInit|

; 367  :             }
; 368  :             if (gpPMExtInit && gpPMExtDeinit) {

  00548	e595304c	 ldr         r3, [r5, #0x4C]
  0054c	e3530000	 cmp         r3, #0
  00550	0a00001c	 beq         |$LN77@PmInit|
  00554	e5953000	 ldr         r3, [r5]
  00558	e3530000	 cmp         r3, #0
  0055c	0a000019	 beq         |$LN77@PmInit|
  00560		 |$LN101@PmInit|

; 369  : #ifdef DEBUG
; 370  :                gdwPMExtContext = gpPMExtInit(HKEY_LOCAL_MACHINE, PMExt_Registry_Root TEXT("\\Omap"));
; 371  : #else
; 372  :                 __try {
; 373  :                     gdwPMExtContext = gpPMExtInit(HKEY_LOCAL_MACHINE, PMExt_Registry_Root TEXT("\\Omap"));

  00560	e595304c	 ldr         r3, [r5, #0x4C]
  00564	e59f12cc	 ldr         r1, [pc, #0x2CC]
  00568	e3a0010a	 mov         r0, #0xA, 2
  0056c	e1a0e00f	 mov         lr, pc
  00570	e12fff13	 bx          r3
  00574	e5850074	 str         r0, [r5, #0x74]
  00578		 |$LN102@PmInit|

; 374  :                 }

  00578	e5953074	 ldr         r3, [r5, #0x74]
  0057c	ea00000b	 b           |$LN103@PmInit|
  00580		 |$LN98@PmInit|

; 376  :                     gdwPMExtContext = 0;

  00580	e59f52c4	 ldr         r5, [pc, #0x2C4]
  00584	e3a03000	 mov         r3, #0
  00588	e5853074	 str         r3, [r5, #0x74]
  0058c	e51b60f4	 ldr         r6, [r11, #-0xF4]
  00590	e51b40d8	 ldr         r4, [r11, #-0xD8]
  00594	e50b40ec	 str         r4, [r11, #-0xEC]
  00598	e51ba0c8	 ldr         r10, [r11, #-0xC8]
  0059c	e51b80cc	 ldr         r8, [r11, #-0xCC]
  005a0	e51b90d4	 ldr         r9, [r11, #-0xD4]
  005a4	e51b20e0	 ldr         r2, [r11, #-0xE0]
  005a8	e50b20e8	 str         r2, [r11, #-0xE8]
  005ac	e3a07000	 mov         r7, #0
  005b0		 |$LN103@PmInit|

; 377  :                 }
; 378  : #endif
; 379  :                 if (!gdwPMExtContext)

  005b0	e3530000	 cmp         r3, #0

; 380  :                     RETAILMSG(1, (_T("%s: \"%s\" failed\r\n"), pszFname, PMExt_Init_NAME));

  005b4	e59f228c	 ldr         r2, [pc, #0x28C]
  005b8	e59f1250	 ldr         r1, [pc, #0x250]

; 377  :                 }
; 378  : #endif
; 379  :                 if (!gdwPMExtContext)

  005bc	1a000004	 bne         |$LN22@PmInit|

; 380  :                     RETAILMSG(1, (_T("%s: \"%s\" failed\r\n"), pszFname, PMExt_Init_NAME));

  005c0	e59f027c	 ldr         r0, [pc, #0x27C]
  005c4		 |$LN122@PmInit|
  005c4	eb000000	 bl          NKDbgPrintfW

; 381  :                 else
; 382  :                     RETAILMSG(1, (_T("%s: \"%s\" success\r\n"), pszFname, PMExt_Init_NAME));

  005c8		 |$LN77@PmInit|

; 383  :             }
; 384  :             RegCloseKey(hKey);

  005c8	e51b00f0	 ldr         r0, [r11, #-0xF0]
  005cc	eb000000	 bl          RegCloseKey

; 385  :         }
; 386  :         else {

  005d0	ea000007	 b           |$LN79@PmInit|
  005d4		 |$LN22@PmInit|

; 381  :                 else
; 382  :                     RETAILMSG(1, (_T("%s: \"%s\" success\r\n"), pszFname, PMExt_Init_NAME));

  005d4	e59f0264	 ldr         r0, [pc, #0x264]
  005d8	eafffff9	 b           |$LN122@PmInit|
  005dc		 |$LN113@PmInit|

; 458  : 
; 459  :     DEBUGCHK(fOk);      // make sure we raise a red flag if the init fails
; 460  : 
; 461  :     return fOk;

  005dc	e51b60e0	 ldr         r6, [r11, #-0xE0]
  005e0	ea000081	 b           |$LN50@PmInit|
  005e4		 |$LN31@PmInit|

; 387  :             RETAILMSG(1, (_T("%s: can't open key [HKEY_LOCAL_MACHINE\\%s]\r\n"), pszFname, PMExt_Registry_Root TEXT("\\Omap")));

  005e4	e59f0250	 ldr         r0, [pc, #0x250]
  005e8	e59f2248	 ldr         r2, [pc, #0x248]
  005ec	e59f121c	 ldr         r1, [pc, #0x21C]
  005f0	eb000000	 bl          NKDbgPrintfW
  005f4		 |$LN79@PmInit|

; 388  :         }
; 389  :     }
; 390  : 
; 391  :     // if everything is initialized, we're ready start the system thread
; 392  :     if(fOk) {

  005f4	e3560000	 cmp         r6, #0
  005f8	0a000025	 beq         |$LN16@PmInit|

; 393  :         // check that the thread started
; 394  :         ghtSystem = CreateThread(NULL, 0, SystemThreadProc, (LPVOID) hevSystemReady, 0, NULL);

  005fc	e59f2230	 ldr         r2, [pc, #0x230]
  00600	e1a03008	 mov         r3, r8
  00604	e3a01000	 mov         r1, #0
  00608	e3a00000	 mov         r0, #0
  0060c	e58d7004	 str         r7, [sp, #4]
  00610	e58d7000	 str         r7, [sp]
  00614	eb000000	 bl          CreateThread
  00618	e1b0e000	 movs        lr, r0
  0061c	e585e01c	 str         lr, [r5, #0x1C]

; 395  :         if(ghtSystem == NULL) {

  00620	1a000004	 bne         |$LN18@PmInit|

; 396  :             RETAILMSG(1, (_T("%s: system thread creation failure\r\n"), pszFname));

  00624	e59f0204	 ldr         r0, [pc, #0x204]
  00628	e59f11e0	 ldr         r1, [pc, #0x1E0]
  0062c	eb000000	 bl          NKDbgPrintfW

; 397  :             fOk = FALSE;

  00630	e595e01c	 ldr         lr, [r5, #0x1C]
  00634	e3a06000	 mov         r6, #0
  00638		 |$LN18@PmInit|

; 398  :         }
; 399  :         
; 400  :         // wait for it to initialize or exit
; 401  :         HANDLE hSystemEvents[] = { hevSystemReady, ghtSystem };
; 402  :         DWORD dwStatus = WaitForMultipleObjects(dim(hSystemEvents), hSystemEvents, FALSE, INFINITE);

  00638	e3e03000	 mvn         r3, #0
  0063c	e3a02000	 mov         r2, #0
  00640	e24b10e0	 sub         r1, r11, #0xE0
  00644	e3a00002	 mov         r0, #2
  00648	e50b80e0	 str         r8, [r11, #-0xE0]
  0064c	e50be0dc	 str         lr, [r11, #-0xDC]
  00650	eb000000	 bl          WaitForMultipleObjects
  00654	e3500000	 cmp         r0, #0

; 403  :         if(dwStatus != WAIT_OBJECT_0) {

  00658	0a000003	 beq         |$LN17@PmInit|

; 404  :             RETAILMSG(1, (_T("%s: system thread initialization failure\r\n"), pszFname));

  0065c	e59f01c8	 ldr         r0, [pc, #0x1C8]
  00660	e59f11a8	 ldr         r1, [pc, #0x1A8]
  00664	eb000000	 bl          NKDbgPrintfW

; 405  :             fOk = FALSE;

  00668	e3a06000	 mov         r6, #0
  0066c		 |$LN17@PmInit|

; 406  :         }
; 407  :     } 
; 408  :     
; 409  :     // should we signal that our API is ready?
; 410  :     if(fOk) {

  0066c	e3560000	 cmp         r6, #0
  00670	0a000007	 beq         |$LN16@PmInit|

; 411  :         // yes, the PM is initialized
; 412  :         PmSetSystemPowerState(NULL, POWER_STATE_ON, POWER_FORCE);

  00674	e3a02a01	 mov         r2, #1, 20
  00678	e3a01801	 mov         r1, #1, 16
  0067c	e3a00000	 mov         r0, #0
  00680	eb000000	 bl          PmSetSystemPowerState

; 413  :         SetEvent(ghevPowerManagerReady);

  00684	e5950028	 ldr         r0, [r5, #0x28]
  00688	e3a01003	 mov         r1, #3
  0068c	eb000000	 bl          EventModify

; 414  :     } else {

  00690	ea00003e	 b           |$LN6@PmInit|
  00694		 |$LN16@PmInit|

; 415  :         // no, clean up
; 416  :         if(ghevPmShutdown != NULL) {

  00694	e595000c	 ldr         r0, [r5, #0xC]
  00698	e3500000	 cmp         r0, #0

; 417  :             // tell threads to shut down
; 418  :             SetEvent(ghevPmShutdown);

  0069c	13a01003	 movne       r1, #3
  006a0	1b000000	 blne        EventModify

; 419  :         }
; 420  : 
; 421  :         // wait for threads to exit
; 422  :         if(ghtPnP != NULL) {

  006a4	e5953018	 ldr         r3, [r5, #0x18]
  006a8	e3530000	 cmp         r3, #0
  006ac	0a000007	 beq         |$LN13@PmInit|

; 423  :             RETAILMSG(1, (_T("%s: shutting down PnP thread\r\n"), pszFname));

  006b0	e59f0170	 ldr         r0, [pc, #0x170]
  006b4	e59f1154	 ldr         r1, [pc, #0x154]
  006b8	eb000000	 bl          NKDbgPrintfW

; 424  :             WaitForSingleObject(ghtPnP, INFINITE);

  006bc	e5950018	 ldr         r0, [r5, #0x18]
  006c0	e3e01000	 mvn         r1, #0
  006c4	eb000000	 bl          WaitForSingleObject

; 425  :             CloseHandle(ghtPnP);

  006c8	e5950018	 ldr         r0, [r5, #0x18]
  006cc	eb000000	 bl          CloseHandle
  006d0		 |$LN13@PmInit|

; 426  :         }
; 427  :         if(ghtResume != NULL) {

  006d0	e5953070	 ldr         r3, [r5, #0x70]
  006d4	e3530000	 cmp         r3, #0
  006d8	0a000007	 beq         |$LN12@PmInit|

; 428  :             RETAILMSG(1, (_T("%s: shutting down resume thread\r\n"), pszFname));

  006dc	e59f0140	 ldr         r0, [pc, #0x140]
  006e0	e59f1128	 ldr         r1, [pc, #0x128]
  006e4	eb000000	 bl          NKDbgPrintfW

; 429  :             WaitForSingleObject(ghtResume, INFINITE);

  006e8	e5950070	 ldr         r0, [r5, #0x70]
  006ec	e3e01000	 mvn         r1, #0
  006f0	eb000000	 bl          WaitForSingleObject

; 430  :             CloseHandle(ghtResume);

  006f4	e5950070	 ldr         r0, [r5, #0x70]
  006f8	eb000000	 bl          CloseHandle
  006fc		 |$LN12@PmInit|

; 431  :         }
; 432  :         if(ghtSystem != NULL) {

  006fc	e595301c	 ldr         r3, [r5, #0x1C]
  00700	e3530000	 cmp         r3, #0
  00704	0a000007	 beq         |$LN11@PmInit|

; 433  :             RETAILMSG(1, (_T("%s: shutting down system thread\r\n"), pszFname));

  00708	e59f0110	 ldr         r0, [pc, #0x110]
  0070c	e59f10fc	 ldr         r1, [pc, #0xFC]
  00710	eb000000	 bl          NKDbgPrintfW

; 434  :             WaitForSingleObject(ghtSystem, INFINITE);

  00714	e595001c	 ldr         r0, [r5, #0x1C]
  00718	e3e01000	 mvn         r1, #0
  0071c	eb000000	 bl          WaitForSingleObject

; 435  :             CloseHandle(ghtSystem);

  00720	e595001c	 ldr         r0, [r5, #0x1C]
  00724	eb000000	 bl          CloseHandle
  00728		 |$LN11@PmInit|

; 436  :         }
; 437  :         if(ghtActivityTimers != NULL) {

  00728	e5953068	 ldr         r3, [r5, #0x68]
  0072c	e3530000	 cmp         r3, #0
  00730	0a000007	 beq         |$LN10@PmInit|

; 438  :             RETAILMSG(1, (_T("%s: shutting down activity timers thread\r\n"), pszFname));

  00734	e59f00e0	 ldr         r0, [pc, #0xE0]
  00738	e59f10d0	 ldr         r1, [pc, #0xD0]
  0073c	eb000000	 bl          NKDbgPrintfW

; 439  :             WaitForSingleObject(ghtActivityTimers, INFINITE);

  00740	e5950068	 ldr         r0, [r5, #0x68]
  00744	e3e01000	 mvn         r1, #0
  00748	eb000000	 bl          WaitForSingleObject

; 440  :             CloseHandle(ghtActivityTimers);

  0074c	e5950068	 ldr         r0, [r5, #0x68]
  00750	eb000000	 bl          CloseHandle
  00754		 |$LN10@PmInit|

; 441  :         }
; 442  : 
; 443  :         RETAILMSG(1, (_T("%s: closing handles\r\n"), pszFname));

  00754	e59f00bc	 ldr         r0, [pc, #0xBC]
  00758	e59f10b0	 ldr         r1, [pc, #0xB0]
  0075c	eb000000	 bl          NKDbgPrintfW

; 444  :         if(ghevPmShutdown != NULL) CloseHandle(ghevPmShutdown);

  00760	e595000c	 ldr         r0, [r5, #0xC]
  00764	e3500000	 cmp         r0, #0
  00768	1b000000	 blne        CloseHandle

; 445  :         if(ghevPowerManagerReady != NULL) CloseHandle(ghevPowerManagerReady);

  0076c	e5950028	 ldr         r0, [r5, #0x28]
  00770	e3500000	 cmp         r0, #0
  00774	1b000000	 blne        CloseHandle

; 446  :         if(ghevResume != NULL) CloseHandle(ghevResume);

  00778	e5950048	 ldr         r0, [r5, #0x48]
  0077c	e3500000	 cmp         r0, #0
  00780	1b000000	 blne        CloseHandle

; 447  :         if(ghevTimerResume != NULL) CloseHandle(ghevTimerResume);

  00784	e5950008	 ldr         r0, [r5, #8]
  00788	e3500000	 cmp         r0, #0
  0078c	1b000000	 blne        CloseHandle
  00790		 |$LN6@PmInit|

; 448  :     }
; 449  : 
; 450  :     // clean up status handles
; 451  :     if(hevPnPReady != NULL) CloseHandle(hevPnPReady);

  00790	e51b30ec	 ldr         r3, [r11, #-0xEC]
  00794	e3530000	 cmp         r3, #0
  00798	11a00003	 movne       r0, r3
  0079c	1b000000	 blne        CloseHandle

; 452  :     if(hevResumeReady != NULL) CloseHandle(hevResumeReady);

  007a0	e35a0000	 cmp         r10, #0
  007a4	11a0000a	 movne       r0, r10
  007a8	1b000000	 blne        CloseHandle

; 453  :     if(hevSystemReady != NULL) CloseHandle(hevSystemReady);

  007ac	e3580000	 cmp         r8, #0
  007b0	11a00008	 movne       r0, r8
  007b4	1b000000	 blne        CloseHandle

; 454  :     if(hevActivityTimersReady != NULL) CloseHandle(hevActivityTimersReady);

  007b8	e3590000	 cmp         r9, #0
  007bc	11a00009	 movne       r0, r9
  007c0	1b000000	 blne        CloseHandle

; 455  :     if(hevDummy != NULL) CloseHandle(hevDummy);

  007c4	e51b30e8	 ldr         r3, [r11, #-0xE8]
  007c8	e3530000	 cmp         r3, #0
  007cc	11a00003	 movne       r0, r3
  007d0	1b000000	 blne        CloseHandle

; 456  : 
; 457  :     RETAILMSG(1, (_T("-%s: returning %d\r\n"), pszFname, fOk));

  007d4	e59f0038	 ldr         r0, [pc, #0x38]
  007d8	e1a02006	 mov         r2, r6
  007dc	e59f102c	 ldr         r1, [pc, #0x2C]
  007e0	eb000000	 bl          NKDbgPrintfW

; 458  : 
; 459  :     DEBUGCHK(fOk);      // make sure we raise a red flag if the init fails
; 460  : 
; 461  :     return fOk;

  007e4	e51b002c	 ldr         r0, [r11, #-0x2C]
  007e8	eb000000	 bl          __security_check_cookie
  007ec		 |$LN50@PmInit|

; 462  : }

  007ec	e1a00006	 mov         r0, r6
  007f0	e24bd028	 sub         sp, r11, #0x28
  007f4	e89d6ff0	 ldmia       sp, {r4 - r11, sp, lr}
  007f8	e12fff1e	 bx          lr

			 ENDP  ; |PmInit|

  007fc		 |$LN97@PmInit|
  007fc		 |$LN126@PmInit|

; 375  :                 __except(EXCEPTION_EXECUTE_HANDLER) {

  007fc	e52de004	 str         lr, [sp, #-4]!
  00800	e24dd008	 sub         sp, sp, #8
  00804		 |$LN100@PmInit|
  00804		 |$LN129@PmInit|
  00804	e3a00001	 mov         r0, #1
  00808		 |$LN99@PmInit|
  00808	e28dd008	 add         sp, sp, #8
  0080c	e49df004	 ldr         pc, [sp], #4
  00810		 |$LN131@PmInit|
  00810		 |$LN132@PmInit|
  00810	00000000	 DCD         |??_C@_1O@NDNKNHPJ@?$AAP?$AAm?$AAI?$AAn?$AAi?$AAt?$AA?$AA@|
  00814		 |$LN133@PmInit|
  00814	00000000	 DCD         |??_C@_1CI@JMHLNJN@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00818		 |$LN134@PmInit|
  00818	00000000	 DCD         |??_C@_1CM@JOGFCBGM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAl?$AAo?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAh?$AAa?$AAn?$AAd?$AAl?$AAe?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  0081c		 |$LN135@PmInit|
  0081c	00000000	 DCD         |??_C@_1FG@OCCOMIBI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAa?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAr@|
  00820		 |$LN136@PmInit|
  00820	00000000	 DCD         |??_C@_1EE@CIFABHGF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$AN@|
  00824		 |$LN137@PmInit|
  00824	00000000	 DCD         |??_C@_1EE@OMMAAAMF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAm?$AAe?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$AN@|
  00828		 |$LN138@PmInit|
  00828	00000000	 DCD         |??_C@_1DO@JOHFJEDC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAh?$AAu?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAo?$AAw?$AAn?$AA?5?$AAP?$AAn?$AAP?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0082c		 |$LN139@PmInit|
  0082c	00000000	 DCD         |??_C@_1FG@LNDLJJOC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn@|
  00830		 |$LN140@PmInit|
  00830	00000000	 DCD         |??_C@_1EK@MHHINMNC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu@|
  00834		 |$LN141@PmInit|
  00834	00000000	 DCD         |SystemThreadProc|
  00838		 |$LN142@PmInit|
  00838	00000000	 DCD         |??_C@_1GM@IDDIFJJB@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@|
  0083c		 |$LN143@PmInit|
  0083c	00000000	 DCD         |??_C@_1FK@JNPAFHHM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAk?$AAe?$AAy?$AA?5?$AA?$FL?$AAH?$AAK?$AAE?$AAY?$AA_?$AAL?$AAO?$AAC?$AAA?$AAL?$AA_?$AAM@|
  00840		 |$LN144@PmInit|
  00840	00000000	 DCD         |??_C@_1CG@KJJDOFJE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAs?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00844		 |$LN145@PmInit|
  00844	00000000	 DCD         |??_C@_1CE@FMDJOFIA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00848		 |$LN146@PmInit|
  00848	00000000	 DCD         |??_C@_1BG@JEIALCGK@?$AAP?$AAM?$AAE?$AAx?$AAt?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?$AA@|
  0084c		 |$LN147@PmInit|
  0084c	00000000	 DCD         |gpPMExtDeinit|
  00850		 |$LN148@PmInit|
  00850	00000000	 DCD         |??_C@_17DJMMGLBL@?$AAD?$AAl?$AAl?$AA?$AA@|
  00854		 |$LN149@PmInit|
  00854	00000000	 DCD         |??_C@_1EO@LDBCAAAG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAg?$AAe?$AAt?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAi?$AAn?$AA?5?$AAk?$AAe?$AAy?$AA?5@|
  00858		 |$LN150@PmInit|
  00858	00000000	 DCD         |??_C@_1BK@PBEIGBDA@?$AAP?$AAM?$AAE?$AAx?$AAt?$AA_?$AAD?$AAe?$AAI?$AAn?$AAi?$AAt?$AA?$AA@|
  0085c		 |$LN151@PmInit|
  0085c	00000000	 DCD         |??_C@_1EA@PCHMNDCC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAG?$AAe?$AAt?$AAP?$AAr?$AAo?$AAc?$AAA?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00860		 |$LN152@PmInit|
  00860	00000000	 DCD         |??_C@_1FG@MFMHNBPH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAl?$AAo?$AAa?$AAd?$AA?5?$AAP?$AAM?$AAE?$AAx?$AAt?$AA?5?$AA?$CC?$AA?$CF?$AAs?$AA?$CC?$AA?5?$AA?9?$AA?9?$AA?5@|
  00864		 |$LN153@PmInit|
  00864	00000000	 DCD         |??_C@_1M@OAJFFPML@?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?$AA@|
  00868		 |$LN154@PmInit|
  00868	00000000	 DCD         |??_C@_1HA@PHFPGFKF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAF?$AAo?$AAr?$AAM?$AAu?$AAl?$AAt?$AAi?$AAp?$AAl?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt@|
  0086c		 |$LN155@PmInit|
  0086c	00000000	 DCD         |??_C@_1EI@OEHMKAOO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr@|
  00870		 |$LN156@PmInit|
  00870	00000000	 DCD         |??_C@_1DM@GDOFDLJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  00874		 |$LN157@PmInit|
  00874	00000000	 DCD         |ActivityTimersThreadProc|
  00878		 |$LN158@PmInit|
  00878	00000000	 DCD         |ResumeThreadProc|
  0087c		 |$LN159@PmInit|
  0087c	00000000	 DCD         |PnpThreadProc|
  00880		 |$LN160@PmInit|
  00880	00000000	 DCD         |??_C@_1DK@HMANBMPF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  00884		 |$LN161@PmInit|
  00884	00000000	 DCD         |??_C@_1DC@OOKIINAM@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?1?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AAR?$AAe?$AAa?$AAd?$AAy?$AA?$AA@|
  00888		 |$LN162@PmInit|
  00888	00000000	 DCD         |??_C@_1FK@KDNBKLHB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAP?$AAM?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?$CI?$AA?$CJ@|
  0088c		 |$LN163@PmInit|
  0088c	00000000	 DCD         |??_C@_1FM@CIIPHLJM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAs?$AAh?$AAu@|
  00890		 |$LN164@PmInit|
  00890	00000000	 DCD         |??_C@_1M@LFABOLDL@?$AA?$CL?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00894		 |$LN165@PmInit|
  00894	00000000	 DCD         |__security_cookie|
  00898		 |$LN130@PmInit|
  00898		 |$LN128@PmInit|
	EXPORT	|PmNotify|
	EXPORT	|??_C@_1DO@CKDJKBAK@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAh?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BC@BELJBPDP@?$AAP?$AAm?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@FKDMEONL@?$AA?9?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|DeleteProcessNotifications|
	IMPORT	|DeleteProcessRequirements|

  00000			 AREA	 |.pdata|, PDATA
|$T34780| DCD	|$LN13@PmNotify|
	DCD	0x40001401

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@CKDJKBAK@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAh?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "h", 0x0, "P"
	DCB	0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BC@BELJBPDP@?$AAP?$AAm?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AA?$AA@| DCB "P"
	DCB	0x0, "m", 0x0, "N", 0x0, "o", 0x0, "t", 0x0, "i", 0x0, "f"
	DCB	0x0, "y", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@FKDMEONL@?$AA?9?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "-", 0x0
	DCB	"%", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PmNotify| PROC

; 472  : {

  00000		 |$LN13@PmNotify|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M34777|
  00004	e1a04001	 mov         r4, r1
  00008	e3500000	 cmp         r0, #0

; 473  : #ifndef SHIP_BUILD
; 474  :     SETFNAME(_T("PmNotify"));
; 475  : #endif
; 476  : 
; 477  :     UnusedParameter(hThread);
; 478  : 
; 479  :     switch(dwFlags) {

  0000c	1a00000a	 bne         |$LN10@PmNotify|

; 480  :     case DLL_PROCESS_DETACH:
; 481  :         // release any resources held by this process
; 482  :         RETAILMSG(1, (_T("+%s: hProcess 0x%08x exiting\r\n"), pszFname, hProcess));

  00010	e59f0034	 ldr         r0, [pc, #0x34]
  00014	e59f1028	 ldr         r1, [pc, #0x28]
  00018	e1a02004	 mov         r2, r4
  0001c	eb000000	 bl          NKDbgPrintfW

; 483  :         DeleteProcessRequirements(hProcess);

  00020	e1a00004	 mov         r0, r4
  00024	eb000000	 bl          DeleteProcessRequirements

; 484  :         DeleteProcessNotifications(hProcess);

  00028	e1a00004	 mov         r0, r4
  0002c	eb000000	 bl          DeleteProcessNotifications

; 485  :         RETAILMSG(1, (_T("-%s\r\n"), pszFname));

  00030	e59f0010	 ldr         r0, [pc, #0x10]
  00034	e59f1008	 ldr         r1, [pc, #8]
  00038	eb000000	 bl          NKDbgPrintfW
  0003c		 |$LN10@PmNotify|

; 486  :         break;
; 487  :     default:
; 488  :         break;
; 489  :     }
; 490  : }

  0003c	e8bd4010	 ldmia       sp!, {r4, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$LN14@PmNotify|
  00044		 |$LN15@PmNotify|
  00044	00000000	 DCD         |??_C@_1BC@BELJBPDP@?$AAP?$AAm?$AAN?$AAo?$AAt?$AAi?$AAf?$AAy?$AA?$AA@|
  00048		 |$LN16@PmNotify|
  00048	00000000	 DCD         |??_C@_1M@FKDMEONL@?$AA?9?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  0004c		 |$LN17@PmNotify|
  0004c	00000000	 DCD         |??_C@_1DO@CKDJKBAK@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAh?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AAe?$AAx?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?$AN?$AA?6?$AA?$AA@|
  00050		 |$M34778|

			 ENDP  ; |PmNotify|

	EXPORT	|DllEntry|
	EXPORT	|??_C@_1IG@NJENGIBE@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?5?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAL?$AAL?$AA_?$AAP?$AAR?$AAO?$AAC?$AAE?$AAS?$AAS?$AA_?$AAD?$AAE?$AAT?$AAA?$AAC?$AAH?$AA?5?$AA?9?$AA?5?$AAC?$AAu?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@ICKAFFLD@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IG@DMCGIFIH@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?5?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAL?$AAL?$AA_?$AAP?$AAR?$AAO?$AAC?$AAE?$AAS?$AAS?$AA_?$AAA?$AAT?$AAT?$AAA?$AAC?$AAH?$AA?5?$AA?9?$AA?5?$AAC?$AAu?$AAr@| [ DATA ] ; `string'
	IMPORT	|DisableThreadLibraryCalls|
	IMPORT	|RegisterDbgZones|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T34815| DCD	|$LN25@DllEntry|
	DCD	0x40002d01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IG@NJENGIBE@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?5?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAL?$AAL?$AA_?$AAP?$AAR?$AAO?$AAC?$AAE?$AAS?$AAS?$AA_?$AAD?$AAE?$AAT?$AAA?$AAC?$AAH?$AA?5?$AA?9?$AA?5?$AAC?$AAu?$AAr@| DCB "*"
	DCB	0x0, "*", 0x0, "*", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, ":"
	DCB	0x0, " ", 0x0, "D", 0x0, "L", 0x0, "L", 0x0, "_", 0x0, "P"
	DCB	0x0, "R", 0x0, "O", 0x0, "C", 0x0, "E", 0x0, "S", 0x0, "S"
	DCB	0x0, "_", 0x0, "D", 0x0, "E", 0x0, "T", 0x0, "A", 0x0, "C"
	DCB	0x0, "H", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "C", 0x0, "u"
	DCB	0x0, "r", 0x0, "r", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ",", 0x0, " ", 0x0, "I", 0x0, "D", 0x0, ":"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, " "
	DCB	0x0, "*", 0x0, "*", 0x0, "*", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@ICKAFFLD@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "M"
	DCB	0x0, "a", 0x0, "n", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "r"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IG@DMCGIFIH@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?5?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAL?$AAL?$AA_?$AAP?$AAR?$AAO?$AAC?$AAE?$AAS?$AAS?$AA_?$AAA?$AAT?$AAT?$AAA?$AAC?$AAH?$AA?5?$AA?9?$AA?5?$AAC?$AAu?$AAr@| DCB "*"
	DCB	0x0, "*", 0x0, "*", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, ":"
	DCB	0x0, " ", 0x0, "D", 0x0, "L", 0x0, "L", 0x0, "_", 0x0, "P"
	DCB	0x0, "R", 0x0, "O", 0x0, "C", 0x0, "E", 0x0, "S", 0x0, "S"
	DCB	0x0, "_", 0x0, "A", 0x0, "T", 0x0, "T", 0x0, "A", 0x0, "C"
	DCB	0x0, "H", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "C", 0x0, "u"
	DCB	0x0, "r", 0x0, "r", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "P", 0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ",", 0x0, " ", 0x0, "I", 0x0, "D", 0x0, ":"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, " "
	DCB	0x0, "*", 0x0, "*", 0x0, "*", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\pm\dll\pminit.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DllEntry| PROC

; 494  : {

  00000		 |$LN25@DllEntry|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M34812|
  00004	e3510000	 cmp         r1, #0
  00008	e1a04000	 mov         r4, r0

; 495  :     BOOL bRc = TRUE;
; 496  : 
; 497  : #ifndef SHIP_BUILD
; 498  :     SETFNAME(_T("Power Manager"));
; 499  : #endif
; 500  : 
; 501  :     UnusedParameter(hInst);
; 502  :     UnusedParameter(lpvReserved);
; 503  :     
; 504  :     switch (dwReason) {

  0000c	0a00000f	 beq         |$LN3@DllEntry|
  00010	e3510001	 cmp         r1, #1
  00014	1a00001e	 bne         |$LN5@DllEntry|

; 505  :     case DLL_PROCESS_ATTACH:
; 506  :         ghInst = (HINSTANCE) hInst;

  00018	e59f3080	 ldr         r3, [pc, #0x80]

; 507  :         RETAILREGISTERZONES(ghInst);    // zones in both debug and retail builds

  0001c	e59f108c	 ldr         r1, [pc, #0x8C]
  00020	e5834000	 str         r4, [r3]
  00024	eb000000	 bl          RegisterDbgZones

; 508  :         RETAILMSG(1,(TEXT("*** %s: DLL_PROCESS_ATTACH - Current Process: 0x%x, ID: 0x%x ***\r\n"),
; 509  :             pszFname, GetCurrentProcess(), GetCurrentProcessId()));

  00028	e3a0000c	 mov         r0, #0xC
  0002c	eb000000	 bl          __GetUserKData
  00030	e59f1070	 ldr         r1, [pc, #0x70]
  00034	e1a03000	 mov         r3, r0
  00038	e59f006c	 ldr         r0, [pc, #0x6C]
  0003c	e3a02042	 mov         r2, #0x42
  00040	eb000000	 bl          NKDbgPrintfW

; 510  :         DisableThreadLibraryCalls((HMODULE) hInst);

  00044	e1a00004	 mov         r0, r4
  00048	eb000000	 bl          DisableThreadLibraryCalls

; 511  :         break;

  0004c	ea000010	 b           |$LN5@DllEntry|
  00050		 |$LN3@DllEntry|

; 512  :         
; 513  :     case DLL_PROCESS_DETACH:
; 514  :         RETAILMSG(1,(TEXT("*** %s: DLL_PROCESS_DETACH - Current Process: 0x%x, ID: 0x%x ***\r\n"),
; 515  :             pszFname, GetCurrentProcess(), GetCurrentProcessId()));

  00050	e3a0000c	 mov         r0, #0xC
  00054	eb000000	 bl          __GetUserKData
  00058	e59f1048	 ldr         r1, [pc, #0x48]
  0005c	e1a03000	 mov         r3, r0
  00060	e59f003c	 ldr         r0, [pc, #0x3C]
  00064	e3a02042	 mov         r2, #0x42
  00068	eb000000	 bl          NKDbgPrintfW

; 516  :         if (g_pSysRegistryAccess != NULL)

  0006c	e59f402c	 ldr         r4, [pc, #0x2C]
  00070	e5940068	 ldr         r0, [r4, #0x68]
  00074	e3500000	 cmp         r0, #0

; 517  :             delete g_pSysRegistryAccess;

  00078	15903000	 ldrne       r3, [r0]
  0007c	13a01001	 movne       r1, #1
  00080	15933004	 ldrne       r3, [r3, #4]
  00084	11a0e00f	 movne       lr, pc
  00088	112fff13	 bxne        r3

; 518  :         g_pSysRegistryAccess = NULL;

  0008c	e3a03000	 mov         r3, #0
  00090	e5843068	 str         r3, [r4, #0x68]
  00094		 |$LN5@DllEntry|

; 519  :         break;
; 520  :         
; 521  :     default:
; 522  :         break;
; 523  :     }
; 524  :    
; 525  :     return bRc;

  00094	e3a00001	 mov         r0, #1

; 526  : }

  00098	e8bd4010	 ldmia       sp!, {r4, lr}
  0009c	e12fff1e	 bx          lr
  000a0		 |$LN26@DllEntry|
  000a0		 |$LN27@DllEntry|
  000a0	00000000	 DCD         |ghInst|
  000a4		 |$LN28@DllEntry|
  000a4	00000000	 DCD         |??_C@_1IG@NJENGIBE@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?5?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAL?$AAL?$AA_?$AAP?$AAR?$AAO?$AAC?$AAE?$AAS?$AAS?$AA_?$AAD?$AAE?$AAT?$AAA?$AAC?$AAH?$AA?5?$AA?9?$AA?5?$AAC?$AAu?$AAr@|
  000a8		 |$LN29@DllEntry|
  000a8	00000000	 DCD         |??_C@_1BM@ICKAFFLD@?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?$AA@|
  000ac		 |$LN30@DllEntry|
  000ac	00000000	 DCD         |??_C@_1IG@DMCGIFIH@?$AA?$CK?$AA?$CK?$AA?$CK?$AA?5?$AA?$CF?$AAs?$AA?3?$AA?5?$AAD?$AAL?$AAL?$AA_?$AAP?$AAR?$AAO?$AAC?$AAE?$AAS?$AAS?$AA_?$AAA?$AAT?$AAT?$AAA?$AAC?$AAH?$AA?5?$AA?9?$AA?5?$AAC?$AAu?$AAr@|
  000b0		 |$LN31@DllEntry|
  000b0	00000000	 DCD         |dpCurSettings|
  000b4		 |$M34813|

			 ENDP  ; |DllEntry|

	END
