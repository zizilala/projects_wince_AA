; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\Z2170P\SRC\DRIVERS\PM\DLL\pmutils.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??8@YAHABU_GUID@@0@Z|			; operator==
	IMPORT	|memcmp|
; File c:\wince600\public\common\sdk\inc\objbase.h

  00000			 AREA	 |.pdata|, PDATA
|$T34534| DCD	|$LN7@operator|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??8@YAHABU_GUID@@0@Z| PROC		; operator==

; 516  : {

  00000		 |$LN7@operator|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M34531|

; 517  : #ifdef _WIN32
; 518  :     return !memcmp(&guidOne,&guidOther,sizeof(GUID));

  00004	e3a02010	 mov         r2, #0x10
  00008	eb000000	 bl          memcmp
  0000c	e3500000	 cmp         r0, #0
  00010	03a00001	 moveq       r0, #1

; 519  : #else
; 520  :     return !_fmemcmp(&guidOne,&guidOther,sizeof(GUID)); }
; 521  : #endif
; 522  : }

  00014	049de004	 ldreq       lr, [sp], #4

; 517  : #ifdef _WIN32
; 518  :     return !memcmp(&guidOne,&guidOther,sizeof(GUID));

  00018	13a00000	 movne       r0, #0

; 519  : #else
; 520  :     return !_fmemcmp(&guidOne,&guidOther,sizeof(GUID)); }
; 521  : #endif
; 522  : }

  0001c	149de004	 ldrne       lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M34532|

			 ENDP  ; |??8@YAHABU_GUID@@0@Z|, operator==

	EXPORT	|??9@YAHABU_GUID@@0@Z|			; operator!=

  00000			 AREA	 |.pdata|, PDATA
|$T34554| DCD	|$LN11@operator@2|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??9@YAHABU_GUID@@0@Z| PROC		; operator!=

; 526  : {

  00000		 |$LN11@operator@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M34551|

; 527  :     return !(guidOne == guidOther);

  00004	e3a02010	 mov         r2, #0x10
  00008	eb000000	 bl          memcmp
  0000c	e3500000	 cmp         r0, #0
  00010	13a00001	 movne       r0, #1

; 528  : }

  00014	149de004	 ldrne       lr, [sp], #4

; 527  :     return !(guidOne == guidOther);

  00018	03a00000	 moveq       r0, #0

; 528  : }

  0001c	049de004	 ldreq       lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M34552|

			 ENDP  ; |??9@YAHABU_GUID@@0@Z|, operator!=

	EXPORT	|__$ArrayPad$| [ DATA ]
	IMPORT	|CeLogData|
	IMPORT	|StringCchLengthW|
	IMPORT	|StringCchVPrintfW|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_cookie|
	IMPORT	|__security_check_cookie|
; File c:\wince600\public\common\sdk\inc\celog.h

  00000			 AREA	 |.pdata|, PDATA
|$T34568| DCD	|$LN7@CeLogMsg|
	DCD	0xc0002a04

  00000			 AREA	 |.xdata|, DATA
|$T34564| DCD	0xffffffe0
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T34564|

  00008		 |CeLogMsg| PROC

; 1015 : {

  00008		 |$LN7@CeLogMsg|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d000f	 stmdb       sp!, {r0 - r3}
  00010	e92d5010	 stmdb       sp!, {r4, r12, lr}
  00014	e24dde22	 sub         sp, sp, #0x22, 28
  00018		 |$M34565|
  00018	e58d022c	 str         r0, [sp, #0x22C]
  0001c	e59f3088	 ldr         r3, [pc, #0x88]
  00020	e5933000	 ldr         r3, [r3]
  00024	e58d321c	 str         r3, [sp, #0x21C]

; 1016 :     va_list arglist;
; 1017 :     WCHAR   szTemp[MAX_PATH];
; 1018 :     size_t  cchLen;
; 1019 :     HRESULT hr;
; 1020 : 
; 1021 :     // Compose a single string using the input args
; 1022 :     va_start(arglist, szFormat);
; 1023 :     hr = StringCchVPrintfW(szTemp, MAX_PATH, szFormat, arglist);

  00028	e1a02000	 mov         r2, r0
  0002c	e28d0014	 add         r0, sp, #0x14
  00030	e28d3e23	 add         r3, sp, #0x23, 28
  00034	e3a01f41	 mov         r1, #0x41, 30
  00038	eb000000	 bl          StringCchVPrintfW
  0003c	e3500000	 cmp         r0, #0

; 1024 :     if (SUCCEEDED(hr)) {

  00040	4a000014	 bmi         |$LN1@CeLogMsg|

; 1025 :         hr = StringCchLengthW(szTemp, MAX_PATH, &cchLen);

  00044	e28d2010	 add         r2, sp, #0x10
  00048	e3a01f41	 mov         r1, #0x41, 30
  0004c	e28d0014	 add         r0, sp, #0x14
  00050	eb000000	 bl          StringCchLengthW
  00054	e3500000	 cmp         r0, #0

; 1026 :         if (SUCCEEDED(hr)) {

  00058	4a00000e	 bmi         |$LN1@CeLogMsg|

; 1027 :             CeLogData(TRUE, CELID_RAW_WCHAR, szTemp, (WORD)((cchLen + 1) * sizeof(WCHAR)),
; 1028 :                       0, CELZONE_ALWAYSON, 0, FALSE);

  0005c	e59d3010	 ldr         r3, [sp, #0x10]
  00060	e3a04101	 mov         r4, #1, 2
  00064	e3a0e000	 mov         lr, #0
  00068	e2833001	 add         r3, r3, #1
  0006c	e1a03083	 mov         r3, r3, lsl #1
  00070	e1a03803	 mov         r3, r3, lsl #16
  00074	e1a03823	 mov         r3, r3, lsr #16
  00078	e28d2014	 add         r2, sp, #0x14
  0007c	e3a0104a	 mov         r1, #0x4A
  00080	e3a00001	 mov         r0, #1
  00084	e58de00c	 str         lr, [sp, #0xC]
  00088	e58de008	 str         lr, [sp, #8]
  0008c	e58d4004	 str         r4, [sp, #4]
  00090	e58de000	 str         lr, [sp]
  00094	eb000000	 bl          CeLogData
  00098		 |$LN1@CeLogMsg|
  00098	e59d021c	 ldr         r0, [sp, #0x21C]
  0009c	eb000000	 bl          __security_check_cookie

; 1029 :         }
; 1030 :     }
; 1031 : }

  000a0	e28dde22	 add         sp, sp, #0x22, 28
  000a4	e89d6010	 ldmia       sp, {r4, sp, lr}
  000a8	e12fff1e	 bx          lr
  000ac		 |$LN8@CeLogMsg|
  000ac		 |$LN9@CeLogMsg|
  000ac	00000000	 DCD         |__security_cookie|
  000b0		 |$M34566|

			 ENDP  ; |CeLogMsg|

	EXPORT	|RegQueryTypedValue|
	EXPORT	|??_C@_1CG@KHNILHMB@?$AAR?$AAe?$AAg?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAT?$AAy?$AAp?$AAe?$AAd?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@CNNOGCPE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAw?$AAr?$AAo?$AAn?$AAg?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|dpCurSettings|
	IMPORT	|RegQueryValueExW|
; File c:\wince600\platform\z2170p\src\drivers\pm\dll\pmutils.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T34587| DCD	|$LN8@RegQueryTy|
	DCD	0x40001e02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@KHNILHMB@?$AAR?$AAe?$AAg?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAT?$AAy?$AAp?$AAe?$AAd?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "g", 0x0, "Q", 0x0, "u", 0x0, "e", 0x0, "r"
	DCB	0x0, "y", 0x0, "T", 0x0, "y", 0x0, "p", 0x0, "e", 0x0, "d"
	DCB	0x0, "V", 0x0, "a", 0x0, "l", 0x0, "u", 0x0, "e", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@CNNOGCPE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAw?$AAr?$AAo?$AAn?$AAg?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "w", 0x0, "r", 0x0, "o"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "t", 0x0, "y", 0x0, "p"
	DCB	0x0, "e", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |RegQueryTypedValue| PROC

; 43   : {

  00000		 |$LN8@RegQueryTy|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M34584|
  00008	e1a0e003	 mov         lr, r3
  0000c	e1a04002	 mov         r4, r2
  00010	e1a05001	 mov         r5, r1

; 44   :     DWORD dwActualType;
; 45   : 
; 46   : #ifndef SHIP_BUILD
; 47   :     SETFNAME(_T("RegQueryTypedValue"));
; 48   : #endif
; 49   : 
; 50   :     DWORD dwStatus = RegQueryValueEx(hk, pszValue, NULL, &dwActualType, 
; 51   :         (PBYTE) pvData, pdwSize);

  00014	e28d3008	 add         r3, sp, #8
  00018	e3a02000	 mov         r2, #0
  0001c	e58de004	 str         lr, [sp, #4]
  00020	e58d4000	 str         r4, [sp]
  00024	eb000000	 bl          RegQueryValueExW
  00028	e3500000	 cmp         r0, #0

; 52   :     if(dwStatus == ERROR_SUCCESS && dwActualType != dwType) {

  0002c	1a00000b	 bne         |$LN1@RegQueryTy|
  00030	e59d2018	 ldr         r2, [sp, #0x18]
  00034	e59d3008	 ldr         r3, [sp, #8]
  00038	e1530002	 cmp         r3, r2
  0003c	0a000007	 beq         |$LN1@RegQueryTy|

; 53   :         PMLOGMSG(ZONE_WARN, (_T("%s: wrong type for '%s'\r\n"),
; 54   :             pszFname, pszValue));

  00040	e59f302c	 ldr         r3, [pc, #0x2C]
  00044	e5933440	 ldr         r3, [r3, #0x440]
  00048	e3130002	 tst         r3, #2
  0004c	159f101c	 ldrne       r1, [pc, #0x1C]
  00050	159f0014	 ldrne       r0, [pc, #0x14]
  00054	11a02005	 movne       r2, r5
  00058	1b000000	 blne        CeLogMsg

; 55   :         dwStatus = ERROR_INVALID_DATA;

  0005c	e3a0000d	 mov         r0, #0xD
  00060		 |$LN1@RegQueryTy|

; 56   :     }
; 57   : 
; 58   :     return dwStatus;
; 59   : }

  00060	e28dd00c	 add         sp, sp, #0xC
  00064	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00068	e12fff1e	 bx          lr
  0006c		 |$LN9@RegQueryTy|
  0006c		 |$LN10@RegQueryTy|
  0006c	00000000	 DCD         |??_C@_1DE@CNNOGCPE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAw?$AAr?$AAo?$AAn?$AAg?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN?$AA?6?$AA?$AA@|
  00070		 |$LN11@RegQueryTy|
  00070	00000000	 DCD         |??_C@_1CG@KHNILHMB@?$AAR?$AAe?$AAg?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAT?$AAy?$AAp?$AAe?$AAd?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?$AA@|
  00074		 |$LN12@RegQueryTy|
  00074	00000000	 DCD         |dpCurSettings|
  00078		 |$M34585|

			 ENDP  ; |RegQueryTypedValue|

	EXPORT	|GetPMThreadPriority|
	EXPORT	|??_C@_1DE@IHPBHPGP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAo?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@DCLIEMIO@?$AAG?$AAe?$AAt?$AAP?$AAM?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@KMCCDNBH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAp?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAi?$AAs?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| [ DATA ] ; `string'
	IMPORT	|RegCloseKey|
	IMPORT	|RegOpenKeyExW|

  00000			 AREA	 |.pdata|, PDATA
|$T34609| DCD	|$LN12@GetPMThrea|
	DCD	0x40003802

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@IHPBHPGP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAo?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "n", 0x0, "o", 0x0, " "
	DCB	0x0, "s", 0x0, "e", 0x0, "t", 0x0, "t", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@DCLIEMIO@?$AAG?$AAe?$AAt?$AAP?$AAM?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "P", 0x0, "M", 0x0, "T", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "P", 0x0, "r"
	DCB	0x0, "i", 0x0, "o", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "y"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@KMCCDNBH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAp?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAi?$AAs?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "p", 0x0, "r", 0x0, "i"
	DCB	0x0, "o", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "y", 0x0, " "
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "'", 0x0, "%"
	DCB	0x0, "s", 0x0, "'", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| DCB "S"
	DCB	0x0, "Y", 0x0, "S", 0x0, "T", 0x0, "E", 0x0, "M", 0x0, "\\"
	DCB	0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "\\"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "\\", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e"
	DCB	0x0, "r", 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetPMThreadPriority| PROC

; 63   : {

  00000		 |$LN12@GetPMThrea|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004	e24dd010	 sub         sp, sp, #0x10
  00008		 |$M34606|
  00008	e1a07001	 mov         r7, r1
  0000c	e1a05000	 mov         r5, r0

; 64   :     BOOL fOk = FALSE;
; 65   :     HKEY hkPm = NULL;
; 66   :     DWORD dwStatus;
; 67   : 
; 68   : #ifndef SHIP_BUILD
; 69   :     SETFNAME(_T("GetPMThreadPriority"));
; 70   : #endif
; 71   : 
; 72   :     // open the PM key
; 73   :     dwStatus = RegOpenKeyEx(HKEY_LOCAL_MACHINE, PWRMGR_REG_KEY, 0, 0, &hkPm);

  00010	e59f10c4	 ldr         r1, [pc, #0xC4]
  00014	e3a06000	 mov         r6, #0
  00018	e28de004	 add         lr, sp, #4
  0001c	e3a03000	 mov         r3, #0
  00020	e3a02000	 mov         r2, #0
  00024	e3a0010a	 mov         r0, #0xA, 2
  00028	e3a04000	 mov         r4, #0
  0002c	e58d6004	 str         r6, [sp, #4]
  00030	e58de000	 str         lr, [sp]
  00034	eb000000	 bl          RegOpenKeyExW
  00038	e59f6098	 ldr         r6, [pc, #0x98]
  0003c	e3500000	 cmp         r0, #0

; 74   :     if(dwStatus == ERROR_SUCCESS) {

  00040	1a000017	 bne         |$LN9@GetPMThrea|

; 75   :         DWORD dwValue;
; 76   :         DWORD dwSize = sizeof(dwValue);
; 77   : 
; 78   :         // read the requested value
; 79   :         dwStatus = RegQueryTypedValue(hkPm, pszValue, &dwValue, &dwSize, REG_DWORD);

  00044	e59d0004	 ldr         r0, [sp, #4]
  00048	e3a0e004	 mov         lr, #4
  0004c	e3a08004	 mov         r8, #4
  00050	e28d3008	 add         r3, sp, #8
  00054	e28d200c	 add         r2, sp, #0xC
  00058	e1a01005	 mov         r1, r5
  0005c	e58de008	 str         lr, [sp, #8]
  00060	e58d8000	 str         r8, [sp]
  00064	eb000000	 bl          RegQueryTypedValue
  00068	e3500000	 cmp         r0, #0

; 80   :         if(dwStatus == ERROR_SUCCESS) {

  0006c	1a000008	 bne         |$LN1@GetPMThrea|

; 81   :             *piThreadPriority = (INT) dwValue;

  00070	e59d300c	 ldr         r3, [sp, #0xC]
  00074	e5873000	 str         r3, [r7]

; 82   :             PMLOGMSG(ZONE_REGISTRY, (_T("%s: priority for '%s' is %d\r\n"),
; 83   :                 pszFname, pszValue, dwValue));

  00078	e5962440	 ldr         r2, [r6, #0x440]
  0007c	e3120c02	 tst         r2, #2, 24
  00080	159f004c	 ldrne       r0, [pc, #0x4C]
  00084	159f1040	 ldrne       r1, [pc, #0x40]
  00088	11a02005	 movne       r2, r5
  0008c	1b000000	 blne        CeLogMsg

; 84   :             fOk = TRUE;

  00090	e3a04001	 mov         r4, #1
  00094		 |$LN1@GetPMThrea|

; 85   :         }
; 86   : 
; 87   :         // close the key
; 88   :         RegCloseKey(hkPm);

  00094	e59d0004	 ldr         r0, [sp, #4]
  00098	eb000000	 bl          RegCloseKey

; 89   :     }
; 90   : 
; 91   :     PMLOGMSG(!fOk && ZONE_REGISTRY, (_T("%s: no setting for '%s'\r\n"),
; 92   :         pszFname, pszValue));

  0009c	e3540000	 cmp         r4, #0
  000a0	1a000005	 bne         |$LN7@GetPMThrea|
  000a4		 |$LN9@GetPMThrea|
  000a4	e5963440	 ldr         r3, [r6, #0x440]
  000a8	e3130c02	 tst         r3, #2, 24
  000ac	159f001c	 ldrne       r0, [pc, #0x1C]
  000b0	159f1014	 ldrne       r1, [pc, #0x14]
  000b4	11a02005	 movne       r2, r5
  000b8	1b000000	 blne        CeLogMsg
  000bc		 |$LN7@GetPMThrea|

; 93   : 
; 94   :     return fOk;
; 95   : }

  000bc	e1a00004	 mov         r0, r4
  000c0	e28dd010	 add         sp, sp, #0x10
  000c4	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  000c8	e12fff1e	 bx          lr
  000cc		 |$LN13@GetPMThrea|
  000cc		 |$LN14@GetPMThrea|
  000cc	00000000	 DCD         |??_C@_1CI@DCLIEMIO@?$AAG?$AAe?$AAt?$AAP?$AAM?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@|
  000d0		 |$LN15@GetPMThrea|
  000d0	00000000	 DCD         |??_C@_1DE@IHPBHPGP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAo?$AA?5?$AAs?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN?$AA?6?$AA?$AA@|
  000d4		 |$LN16@GetPMThrea|
  000d4	00000000	 DCD         |??_C@_1DM@KMCCDNBH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAp?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAi?$AAs?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  000d8		 |$LN17@GetPMThrea|
  000d8	00000000	 DCD         |dpCurSettings|
  000dc		 |$LN18@GetPMThrea|
  000dc	00000000	 DCD         |??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@|
  000e0		 |$M34607|

			 ENDP  ; |GetPMThreadPriority|

	EXPORT	|PmLock|
	IMPORT	|EnterCriticalSection|
	IMPORT	|gcsPowerManager|

  00000			 AREA	 |.pdata|, PDATA
|$T34622| DCD	|$LN5@PmLock|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PmLock| PROC

; 102  : {

  00000		 |$LN5@PmLock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M34619|

; 103  :     EnterCriticalSection(&gcsPowerManager);

  00004	e59f0008	 ldr         r0, [pc, #8]
  00008	eb000000	 bl          EnterCriticalSection

; 104  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$LN6@PmLock|
  00014		 |$LN7@PmLock|
  00014	00000000	 DCD         |gcsPowerManager|
  00018		 |$M34620|

			 ENDP  ; |PmLock|

	EXPORT	|PmUnlock|
	IMPORT	|LeaveCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T34631| DCD	|$LN5@PmUnlock|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PmUnlock| PROC

; 109  : {

  00000		 |$LN5@PmUnlock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M34628|

; 110  :     LeaveCriticalSection(&gcsPowerManager);

  00004	e59f0008	 ldr         r0, [pc, #8]
  00008	eb000000	 bl          LeaveCriticalSection

; 111  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$LN6@PmUnlock|
  00014		 |$LN7@PmUnlock|
  00014	00000000	 DCD         |gcsPowerManager|
  00018		 |$M34629|

			 ENDP  ; |PmUnlock|

	EXPORT	|PmEnterUpdate|
	IMPORT	|gcsDeviceUpdateAPIs|

  00000			 AREA	 |.pdata|, PDATA
|$T34640| DCD	|$LN5@PmEnterUpd|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PmEnterUpdate| PROC

; 116  : {

  00000		 |$LN5@PmEnterUpd|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M34637|

; 117  :     EnterCriticalSection(&gcsDeviceUpdateAPIs);

  00004	e59f0008	 ldr         r0, [pc, #8]
  00008	eb000000	 bl          EnterCriticalSection

; 118  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$LN6@PmEnterUpd|
  00014		 |$LN7@PmEnterUpd|
  00014	00000000	 DCD         |gcsDeviceUpdateAPIs|
  00018		 |$M34638|

			 ENDP  ; |PmEnterUpdate|

	EXPORT	|PmLeaveUpdate|

  00000			 AREA	 |.pdata|, PDATA
|$T34649| DCD	|$LN5@PmLeaveUpd|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PmLeaveUpdate| PROC

; 123  : {

  00000		 |$LN5@PmLeaveUpd|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M34646|

; 124  :     LeaveCriticalSection(&gcsDeviceUpdateAPIs);

  00004	e59f0008	 ldr         r0, [pc, #8]
  00008	eb000000	 bl          LeaveCriticalSection

; 125  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$LN6@PmLeaveUpd|
  00014		 |$LN7@PmLeaveUpd|
  00014	00000000	 DCD         |gcsDeviceUpdateAPIs|
  00018		 |$M34647|

			 ENDP  ; |PmLeaveUpdate|

	EXPORT	|PmAlloc|
	EXPORT	|??_C@_1EK@MBDJHLOB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AA?5?$AA?$CF?$AAd?$AA?5?$AAb?$AAy?$AAt?$AAe?$AAs?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AA0?$AAx?$AA?$CF?$AA0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@NHFCMMEL@?$AAP?$AAm?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@MIMNLNGK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAH?$AAe?$AAa?$AAp?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|GetLastError|
	IMPORT	|HeapAlloc|
	IMPORT	|ghPmHeap|

  00000			 AREA	 |.pdata|, PDATA
|$T34667| DCD	|$LN11@PmAlloc|
	DCD	0x40002201

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@MBDJHLOB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AA?5?$AA?$CF?$AAd?$AA?5?$AAb?$AAy?$AAt?$AAe?$AAs?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AA0?$AAx?$AA?$CF?$AA0@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "l"
	DCB	0x0, "o", 0x0, "c", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " "
	DCB	0x0, "b", 0x0, "y", 0x0, "t", 0x0, "e", 0x0, "s", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@NHFCMMEL@?$AAP?$AAm?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?$AA@| DCB "P", 0x0
	DCB	"m", 0x0, "A", 0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@MIMNLNGK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAH?$AAe?$AAa?$AAp?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "H", 0x0, "e", 0x0, "a"
	DCB	0x0, "p", 0x0, "A", 0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PmAlloc| PROC

; 141  : {

  00000		 |$LN11@PmAlloc|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M34664|
  00004	e1a06000	 mov         r6, r0

; 142  : #ifndef SHIP_BUILD
; 143  :     SETFNAME(_T("PmAlloc"));
; 144  : #endif
; 145  : 
; 146  :     DEBUGCHK(dwSize != 0);
; 147  : 
; 148  : #ifdef DEBUGALLOC
; 149  :     // prepend a header so we can track post-free accesses of the memory
; 150  :     dwSize += HEAPHEADERSIZE;
; 151  : #endif  // DEBUGALLOC
; 152  : 
; 153  :     PVOID pvRet = HeapAlloc(ghPmHeap, 0, dwSize);

  00008	e59f3074	 ldr         r3, [pc, #0x74]
  0000c	e1a02006	 mov         r2, r6
  00010	e3a01000	 mov         r1, #0
  00014	e5930000	 ldr         r0, [r3]
  00018	eb000000	 bl          HeapAlloc
  0001c	e59f505c	 ldr         r5, [pc, #0x5C]
  00020	e1b04000	 movs        r4, r0

; 154  :     if(pvRet == NULL) {

  00024	1a000008	 bne         |$LN8@PmAlloc|

; 155  :         PMLOGMSG(ZONE_WARN, (_T("%s: HeapAlloc(%d) failed %d\r\n"), pszFname,
; 156  :             dwSize, GetLastError()));

  00028	e5953440	 ldr         r3, [r5, #0x440]
  0002c	e3130002	 tst         r3, #2
  00030	0a000005	 beq         |$LN8@PmAlloc|
  00034	eb000000	 bl          GetLastError
  00038	e59f1034	 ldr         r1, [pc, #0x34]
  0003c	e1a03000	 mov         r3, r0
  00040	e59f0034	 ldr         r0, [pc, #0x34]
  00044	e1a02006	 mov         r2, r6
  00048	eb000000	 bl          CeLogMsg
  0004c		 |$LN8@PmAlloc|
  0004c	e5953440	 ldr         r3, [r5, #0x440]

; 157  :     }
; 158  : #ifdef DEBUG
; 159  :     else {
; 160  :         InterlockedIncrement(&glTotalObjects);
; 161  :     }
; 162  : #endif  // DEBUG
; 163  : 
; 164  : #ifdef DEBUGALLOC
; 165  :     // fill memory with a diagnostic pattern for debugging
; 166  :     if(pvRet != NULL) {
; 167  :         memset(pvRet, 0xAA, dwSize);
; 168  :         PDWORD pdwRet = (PDWORD) pvRet;
; 169  :         pdwRet[0] = HEAPSIGNATURE;  // record a signature
; 170  :         pdwRet[1] = dwSize;         // and the real size of the buffer
; 171  :         pvRet = &pdwRet[HEAPHEADERSIZE / sizeof(DWORD)]; // return a pointer to a buffer of the requested size
; 172  :     }
; 173  : #endif  // DEBUGALLOC
; 174  : 
; 175  : #ifdef DEBUG
; 176  :     PMLOGMSG(ZONE_ALLOC, (_T("%s: alloc %d bytes returned 0x%08x (%d total objects allocated)\r\n"), 
; 177  :         pszFname, dwSize, pvRet, glTotalObjects));
; 178  : #else   // DEBUG
; 179  :     PMLOGMSG(ZONE_ALLOC, (_T("%s: alloc %d bytes returned 0x%08x\r\n"), 
; 180  :         pszFname, dwSize, pvRet));

  00050	e3130a01	 tst         r3, #1, 20
  00054	159f001c	 ldrne       r0, [pc, #0x1C]
  00058	159f1014	 ldrne       r1, [pc, #0x14]
  0005c	11a03004	 movne       r3, r4
  00060	11a02006	 movne       r2, r6
  00064	1b000000	 blne        CeLogMsg

; 181  : #endif  // DEBUG
; 182  :     return pvRet;
; 183  : }

  00068	e1a00004	 mov         r0, r4
  0006c	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00070	e12fff1e	 bx          lr
  00074		 |$LN12@PmAlloc|
  00074		 |$LN13@PmAlloc|
  00074	00000000	 DCD         |??_C@_1BA@NHFCMMEL@?$AAP?$AAm?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?$AA@|
  00078		 |$LN14@PmAlloc|
  00078	00000000	 DCD         |??_C@_1EK@MBDJHLOB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AA?5?$AA?$CF?$AAd?$AA?5?$AAb?$AAy?$AAt?$AAe?$AAs?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AA0?$AAx?$AA?$CF?$AA0@|
  0007c		 |$LN15@PmAlloc|
  0007c	00000000	 DCD         |??_C@_1DM@MIMNLNGK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAH?$AAe?$AAa?$AAp?$AAA?$AAl?$AAl?$AAo?$AAc?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00080		 |$LN16@PmAlloc|
  00080	00000000	 DCD         |dpCurSettings|
  00084		 |$LN17@PmAlloc|
  00084	00000000	 DCD         |ghPmHeap|
  00088		 |$M34665|

			 ENDP  ; |PmAlloc|

	EXPORT	|PmFree|
	EXPORT	|??_C@_1EC@HEMEJBJB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAH?$AAe?$AAa?$AAp?$AAF?$AAr?$AAe?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@JGKCFIJB@?$AAP?$AAm?$AAF?$AAr?$AAe?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@LIONPPLD@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAf?$AAr?$AAe?$AAe?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|HeapFree|

  00000			 AREA	 |.pdata|, PDATA
|$T34688| DCD	|$LN10@PmFree|
	DCD	0x40002101

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@HEMEJBJB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAH?$AAe?$AAa?$AAp?$AAF?$AAr?$AAe?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "H", 0x0, "e", 0x0, "a"
	DCB	0x0, "p", 0x0, "F", 0x0, "r", 0x0, "e", 0x0, "e", 0x0, "("
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, ")", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@JGKCFIJB@?$AAP?$AAm?$AAF?$AAr?$AAe?$AAe?$AA?$AA@| DCB "P", 0x0, "m"
	DCB	0x0, "F", 0x0, "r", 0x0, "e", 0x0, "e", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@LIONPPLD@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAf?$AAr?$AAe?$AAe?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "f", 0x0, "r", 0x0, "e"
	DCB	0x0, "e", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PmFree| PROC

; 188  : {

  00000		 |$LN10@PmFree|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M34685|
  00004	e1a04000	 mov         r4, r0

; 189  : #ifndef SHIP_BUILD
; 190  :     SETFNAME(_T("PmFree"));
; 191  : #endif
; 192  : 
; 193  :     PMLOGMSG(ZONE_ALLOC, (_T("%s: freeing 0x%08x\r\n"), pszFname, pvMemory));

  00008	e59f5070	 ldr         r5, [pc, #0x70]
  0000c	e5953440	 ldr         r3, [r5, #0x440]
  00010	e3130a01	 tst         r3, #1, 20
  00014	159f0060	 ldrne       r0, [pc, #0x60]
  00018	159f1054	 ldrne       r1, [pc, #0x54]
  0001c	11a02004	 movne       r2, r4
  00020	1b000000	 blne        CeLogMsg

; 194  : 
; 195  :     DEBUGCHK(pvMemory != NULL);
; 196  : 
; 197  : #ifdef DEBUGALLOC
; 198  :     // fill 
; 199  :     if(pvMemory != NULL) {
; 200  :         PDWORD pdwMemory = (PDWORD) ((DWORD) pvMemory - HEAPHEADERSIZE);
; 201  :         DEBUGCHK(pdwMemory[0] == HEAPSIGNATURE && pdwMemory[1] > HEAPHEADERSIZE);
; 202  :         memset(pdwMemory, 0xDD, pdwMemory[1]);
; 203  :         pvMemory = pdwMemory;
; 204  :     }
; 205  : #endif  // DEBUGALLOC
; 206  : 
; 207  :     BOOL fOk = HeapFree(ghPmHeap, 0, pvMemory);

  00024	e59f304c	 ldr         r3, [pc, #0x4C]
  00028	e1a02004	 mov         r2, r4
  0002c	e3a01000	 mov         r1, #0
  00030	e5930000	 ldr         r0, [r3]
  00034	eb000000	 bl          HeapFree
  00038	e1b06000	 movs        r6, r0

; 208  :     if(!fOk) {

  0003c	1a000008	 bne         |$LN6@PmFree|

; 209  :         PMLOGMSG(ZONE_WARN, (_T("%s: HeapFree(0x%08x) failed %d\r\n"), pszFname,
; 210  :             pvMemory, GetLastError()));

  00040	e5953440	 ldr         r3, [r5, #0x440]
  00044	e3130002	 tst         r3, #2
  00048	0a000005	 beq         |$LN6@PmFree|
  0004c	eb000000	 bl          GetLastError
  00050	e59f101c	 ldr         r1, [pc, #0x1C]
  00054	e1a03000	 mov         r3, r0
  00058	e59f0010	 ldr         r0, [pc, #0x10]
  0005c	e1a02004	 mov         r2, r4
  00060	eb000000	 bl          CeLogMsg
  00064		 |$LN6@PmFree|

; 211  :     }
; 212  : #ifdef DEBUG
; 213  :     else {
; 214  :         InterlockedDecrement(&glTotalObjects);
; 215  :         DEBUGCHK(glTotalObjects >= 0);
; 216  :     }
; 217  : #endif  // DEBUG
; 218  :     return fOk;
; 219  : }

  00064	e1a00006	 mov         r0, r6
  00068	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0006c	e12fff1e	 bx          lr
  00070		 |$LN11@PmFree|
  00070		 |$LN12@PmFree|
  00070	00000000	 DCD         |??_C@_1EC@HEMEJBJB@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAH?$AAe?$AAa?$AAp?$AAF?$AAr?$AAe?$AAe?$AA?$CI?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@|
  00074		 |$LN13@PmFree|
  00074	00000000	 DCD         |??_C@_1O@JGKCFIJB@?$AAP?$AAm?$AAF?$AAr?$AAe?$AAe?$AA?$AA@|
  00078		 |$LN14@PmFree|
  00078	00000000	 DCD         |ghPmHeap|
  0007c		 |$LN15@PmFree|
  0007c	00000000	 DCD         |??_C@_1CK@LIONPPLD@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAf?$AAr?$AAe?$AAe?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00080		 |$LN16@PmFree|
  00080	00000000	 DCD         |dpCurSettings|
  00084		 |$M34686|

			 ENDP  ; |PmFree|


  00000			 AREA	 |.pdata|, PDATA
|$T34713| DCD	|$LN21@HexStringT|
	DCD	0x40003301
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?HexStringToDword@@YAHAAPBGAAKHG@Z| PROC ; HexStringToDword

; 226  : {

  00000		 |$LN21@HexStringT|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M34710|
  00004	e1a06003	 mov         r6, r3

; 227  :     int Count;
; 228  :     
; 229  :     Value = 0;

  00008	e3a03000	 mov         r3, #0
  0000c	e5813000	 str         r3, [r1]

; 230  :     for (Count = 0; Count < cDigits; Count++, lpsz++)

  00010	e3a05000	 mov         r5, #0
  00014	e3520000	 cmp         r2, #0
  00018	da00001e	 ble         |$LN9@HexStringT|
  0001c		 |$LL11@HexStringT|

; 231  :     {
; 232  :         if (*lpsz >= '0' && *lpsz <= '9')

  0001c	e590e000	 ldr         lr, [r0]
  00020	e1de40b0	 ldrh        r4, [lr]
  00024	e3540030	 cmp         r4, #0x30
  00028	3a000005	 bcc         |$LN8@HexStringT|
  0002c	e3540039	 cmp         r4, #0x39

; 233  :             Value = (Value << 4) + *lpsz - '0';

  00030	9591e000	 ldrls       lr, [r1]
  00034	9084e20e	 addls       lr, r4, lr, lsl #4
  00038	924ee030	 subls       lr, lr, #0x30
  0003c	9581e000	 strls       lr, [r1]
  00040	9a00000e	 bls         |$LN10@HexStringT|
  00044		 |$LN8@HexStringT|

; 234  :         else if (*lpsz >= 'A' && *lpsz <= 'F')

  00044	e3540041	 cmp         r4, #0x41
  00048	3a000004	 bcc         |$LN6@HexStringT|
  0004c	e3540046	 cmp         r4, #0x46

; 235  :             Value = (Value << 4) + *lpsz - 'A' + 10;

  00050	95913000	 ldrls       r3, [r1]
  00054	90843203	 addls       r3, r4, r3, lsl #4
  00058	92433037	 subls       r3, r3, #0x37
  0005c	9a000006	 bls         |$LN18@HexStringT|
  00060		 |$LN6@HexStringT|

; 236  :         else if (*lpsz >= 'a' && *lpsz <= 'f')

  00060	e3540061	 cmp         r4, #0x61
  00064	3a000015	 bcc         |$LN4@HexStringT|
  00068	e3540066	 cmp         r4, #0x66
  0006c	8a000013	 bhi         |$LN4@HexStringT|

; 237  :             Value = (Value << 4) + *lpsz - 'a' + 10;

  00070	e5913000	 ldr         r3, [r1]
  00074	e0843203	 add         r3, r4, r3, lsl #4
  00078	e2433057	 sub         r3, r3, #0x57
  0007c		 |$LN18@HexStringT|
  0007c	e5813000	 str         r3, [r1]
  00080		 |$LN10@HexStringT|
  00080	e5903000	 ldr         r3, [r0]
  00084	e2855001	 add         r5, r5, #1
  00088	e1550002	 cmp         r5, r2
  0008c	e2833002	 add         r3, r3, #2
  00090	e5803000	 str         r3, [r0]
  00094	baffffe0	 blt         |$LL11@HexStringT|
  00098		 |$LN9@HexStringT|

; 240  :     }
; 241  :     
; 242  :     if (chDelim != 0)

  00098	e1b01006	 movs        r1, r6
  0009c	0a000004	 beq         |$LN2@HexStringT|

; 243  :         return *lpsz++ == chDelim;

  000a0	e5902000	 ldr         r2, [r0]
  000a4	e0d230b2	 ldrh        r3, [r2], #2
  000a8	e1530001	 cmp         r3, r1
  000ac	e5802000	 str         r2, [r0]
  000b0	1a000002	 bne         |$LN4@HexStringT|
  000b4		 |$LN2@HexStringT|

; 244  :     else
; 245  :         return TRUE;

  000b4	e3a00001	 mov         r0, #1

; 246  : }

  000b8	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000bc	e12fff1e	 bx          lr
  000c0		 |$LN4@HexStringT|

; 238  :         else
; 239  :             return(FALSE);

  000c0	e3a00000	 mov         r0, #0

; 246  : }

  000c4	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000c8	e12fff1e	 bx          lr
  000cc		 |$M34711|

			 ENDP  ; |?HexStringToDword@@YAHAAPBGAAKHG@Z|, HexStringToDword


  00000			 AREA	 |.pdata|, PDATA
|$T34724| DCD	|$LN17@wUUIDFromS|
	DCD	0x40006b04
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?wUUIDFromString@@YAHPBGPAU_GUID@@@Z| PROC ; wUUIDFromString

; 251  : {

  00000		 |$LN17@wUUIDFromS|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5010	 stmdb       sp!, {r4, r12, lr}
  0000c	e24dd004	 sub         sp, sp, #4
  00010		 |$M34721|
  00010	e1a04001	 mov         r4, r1

; 252  :     DWORD dw;
; 253  :     
; 254  :     if (!HexStringToDword(lpsz, pguid->Data1, sizeof(DWORD)*2, '-'))

  00014	e3a0302d	 mov         r3, #0x2D
  00018	e3a02008	 mov         r2, #8
  0001c	e28d0010	 add         r0, sp, #0x10
  00020	eb000000	 bl          |?HexStringToDword@@YAHAAPBGAAKHG@Z|
  00024	e3500000	 cmp         r0, #0
  00028	1a000001	 bne         |$LN11@wUUIDFromS|
  0002c		 |$LN14@wUUIDFromS|

; 255  :         return FALSE;

  0002c	e3a00000	 mov         r0, #0
  00030	ea00005a	 b           |$LN12@wUUIDFromS|
  00034		 |$LN11@wUUIDFromS|

; 256  :     
; 257  :     if (!HexStringToDword(lpsz, dw, sizeof(WORD)*2, '-'))

  00034	e3a0302d	 mov         r3, #0x2D
  00038	e3a02004	 mov         r2, #4
  0003c	e28d1000	 add         r1, sp, #0
  00040	e28d0010	 add         r0, sp, #0x10
  00044	eb000000	 bl          |?HexStringToDword@@YAHAAPBGAAKHG@Z|
  00048	e3500000	 cmp         r0, #0

; 258  :         return FALSE;

  0004c	0afffff6	 beq         |$LN14@wUUIDFromS|

; 259  :     
; 260  :     pguid->Data2 = (WORD)dw;

  00050	e59d1000	 ldr         r1, [sp]

; 261  :     
; 262  :     if (!HexStringToDword(lpsz, dw, sizeof(WORD)*2, '-'))

  00054	e3a0302d	 mov         r3, #0x2D
  00058	e3a02004	 mov         r2, #4
  0005c	e1c410b4	 strh        r1, [r4, #4]
  00060	e28d1000	 add         r1, sp, #0
  00064	e28d0010	 add         r0, sp, #0x10
  00068	eb000000	 bl          |?HexStringToDword@@YAHAAPBGAAKHG@Z|
  0006c	e3500000	 cmp         r0, #0

; 263  :         return FALSE;

  00070	0affffed	 beq         |$LN14@wUUIDFromS|

; 264  :     
; 265  :     pguid->Data3 = (WORD)dw;

  00074	e59d1000	 ldr         r1, [sp]

; 266  :     
; 267  :     if (!HexStringToDword(lpsz, dw, sizeof(BYTE)*2, 0))

  00078	e3a03000	 mov         r3, #0
  0007c	e3a02002	 mov         r2, #2
  00080	e1c410b6	 strh        r1, [r4, #6]
  00084	e28d1000	 add         r1, sp, #0
  00088	e28d0010	 add         r0, sp, #0x10
  0008c	eb000000	 bl          |?HexStringToDword@@YAHAAPBGAAKHG@Z|
  00090	e3500000	 cmp         r0, #0

; 268  :         return FALSE;

  00094	0affffe4	 beq         |$LN14@wUUIDFromS|

; 269  :     
; 270  :     pguid->Data4[0] = (BYTE)dw;

  00098	e59d1000	 ldr         r1, [sp]

; 271  :     
; 272  :     if (!HexStringToDword(lpsz, dw, sizeof(BYTE)*2, '-'))

  0009c	e3a0302d	 mov         r3, #0x2D
  000a0	e3a02002	 mov         r2, #2
  000a4	e5c41008	 strb        r1, [r4, #8]
  000a8	e28d1000	 add         r1, sp, #0
  000ac	e28d0010	 add         r0, sp, #0x10
  000b0	eb000000	 bl          |?HexStringToDword@@YAHAAPBGAAKHG@Z|
  000b4	e3500000	 cmp         r0, #0

; 273  :         return FALSE;

  000b8	0affffdb	 beq         |$LN14@wUUIDFromS|

; 274  :     
; 275  :     pguid->Data4[1] = (BYTE)dw;

  000bc	e59d1000	 ldr         r1, [sp]

; 276  :     
; 277  :     if (!HexStringToDword(lpsz, dw, sizeof(BYTE)*2, 0))

  000c0	e3a03000	 mov         r3, #0
  000c4	e3a02002	 mov         r2, #2
  000c8	e5c41009	 strb        r1, [r4, #9]
  000cc	e28d1000	 add         r1, sp, #0
  000d0	e28d0010	 add         r0, sp, #0x10
  000d4	eb000000	 bl          |?HexStringToDword@@YAHAAPBGAAKHG@Z|
  000d8	e3500000	 cmp         r0, #0

; 278  :         return FALSE;

  000dc	0affffd2	 beq         |$LN14@wUUIDFromS|

; 279  :     
; 280  :     pguid->Data4[2] = (BYTE)dw;

  000e0	e59d1000	 ldr         r1, [sp]

; 281  :     
; 282  :     if (!HexStringToDword(lpsz, dw, sizeof(BYTE)*2, 0))

  000e4	e3a03000	 mov         r3, #0
  000e8	e3a02002	 mov         r2, #2
  000ec	e5c4100a	 strb        r1, [r4, #0xA]
  000f0	e28d1000	 add         r1, sp, #0
  000f4	e28d0010	 add         r0, sp, #0x10
  000f8	eb000000	 bl          |?HexStringToDword@@YAHAAPBGAAKHG@Z|
  000fc	e3500000	 cmp         r0, #0

; 283  :         return FALSE;

  00100	0affffc9	 beq         |$LN14@wUUIDFromS|

; 284  :     
; 285  :     pguid->Data4[3] = (BYTE)dw;

  00104	e59d1000	 ldr         r1, [sp]

; 286  :     
; 287  :     if (!HexStringToDword(lpsz, dw, sizeof(BYTE)*2, 0))

  00108	e3a03000	 mov         r3, #0
  0010c	e3a02002	 mov         r2, #2
  00110	e5c4100b	 strb        r1, [r4, #0xB]
  00114	e28d1000	 add         r1, sp, #0
  00118	e28d0010	 add         r0, sp, #0x10
  0011c	eb000000	 bl          |?HexStringToDword@@YAHAAPBGAAKHG@Z|
  00120	e3500000	 cmp         r0, #0

; 288  :         return FALSE;

  00124	0affffc0	 beq         |$LN14@wUUIDFromS|

; 289  :     
; 290  :     pguid->Data4[4] = (BYTE)dw;

  00128	e59d1000	 ldr         r1, [sp]

; 291  :     
; 292  :     if (!HexStringToDword(lpsz, dw, sizeof(BYTE)*2, 0))

  0012c	e3a03000	 mov         r3, #0
  00130	e3a02002	 mov         r2, #2
  00134	e5c4100c	 strb        r1, [r4, #0xC]
  00138	e28d1000	 add         r1, sp, #0
  0013c	e28d0010	 add         r0, sp, #0x10
  00140	eb000000	 bl          |?HexStringToDword@@YAHAAPBGAAKHG@Z|
  00144	e3500000	 cmp         r0, #0

; 293  :         return FALSE;

  00148	0affffb7	 beq         |$LN14@wUUIDFromS|

; 294  :     
; 295  :     pguid->Data4[5] = (BYTE)dw;

  0014c	e59d1000	 ldr         r1, [sp]

; 296  :     
; 297  :     if (!HexStringToDword(lpsz, dw, sizeof(BYTE)*2, 0))

  00150	e3a03000	 mov         r3, #0
  00154	e3a02002	 mov         r2, #2
  00158	e5c4100d	 strb        r1, [r4, #0xD]
  0015c	e28d1000	 add         r1, sp, #0
  00160	e28d0010	 add         r0, sp, #0x10
  00164	eb000000	 bl          |?HexStringToDword@@YAHAAPBGAAKHG@Z|
  00168	e3500000	 cmp         r0, #0

; 298  :         return FALSE;

  0016c	0affffae	 beq         |$LN14@wUUIDFromS|

; 299  :     
; 300  :     pguid->Data4[6] = (BYTE)dw;

  00170	e59d1000	 ldr         r1, [sp]

; 301  :     if (!HexStringToDword(lpsz, dw, sizeof(BYTE)*2, 0))

  00174	e3a03000	 mov         r3, #0
  00178	e3a02002	 mov         r2, #2
  0017c	e5c4100e	 strb        r1, [r4, #0xE]
  00180	e28d1000	 add         r1, sp, #0
  00184	e28d0010	 add         r0, sp, #0x10
  00188	eb000000	 bl          |?HexStringToDword@@YAHAAPBGAAKHG@Z|
  0018c	e3500000	 cmp         r0, #0

; 302  :         return FALSE;

  00190	0affffa5	 beq         |$LN14@wUUIDFromS|

; 303  :     
; 304  :     pguid->Data4[7] = (BYTE)dw;

  00194	e59d3000	 ldr         r3, [sp]

; 305  :     
; 306  :     return TRUE;

  00198	e3a00001	 mov         r0, #1
  0019c	e5c4300f	 strb        r3, [r4, #0xF]
  001a0		 |$LN12@wUUIDFromS|

; 307  : }

  001a0	e28dd004	 add         sp, sp, #4
  001a4	e89d6010	 ldmia       sp, {r4, sp, lr}
  001a8	e12fff1e	 bx          lr
  001ac		 |$M34722|

			 ENDP  ; |?wUUIDFromString@@YAHPBGPAU_GUID@@@Z|, wUUIDFromString


  00000			 AREA	 |.pdata|, PDATA
|$T34736| DCD	|$LN9@GUIDFromSt|
	DCD	0x40001201
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GUIDFromString@@YAHPBGPAU_GUID@@@Z| PROC ; GUIDFromString

; 311  : {

  00000		 |$LN9@GUIDFromSt|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M34733|
  00004	e1a04000	 mov         r4, r0

; 312  :     if (*lpsz++ != '{' )

  00008	e0d430b2	 ldrh        r3, [r4], #2
  0000c	e353007b	 cmp         r3, #0x7B
  00010	0a000002	 beq         |$LN3@GUIDFromSt|
  00014		 |$LN6@GUIDFromSt|

; 313  :         return FALSE;

  00014	e3a00000	 mov         r0, #0

; 324  : }

  00018	e8bd4010	 ldmia       sp!, {r4, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$LN3@GUIDFromSt|

; 314  :     
; 315  :     if(wUUIDFromString(lpsz, pguid) != TRUE)

  00020	e1a00004	 mov         r0, r4
  00024	eb000000	 bl          |?wUUIDFromString@@YAHPBGPAU_GUID@@@Z|
  00028	e3500001	 cmp         r0, #1

; 316  :         return FALSE;

  0002c	1afffff8	 bne         |$LN6@GUIDFromSt|

; 317  :     
; 318  :     lpsz +=36;
; 319  :     
; 320  :     if (*lpsz++ != '}' )

  00030	e1d434b8	 ldrh        r3, [r4, #0x48]
  00034	e353007d	 cmp         r3, #0x7D

; 321  :         return FALSE;

  00038	1afffff5	 bne         |$LN6@GUIDFromSt|

; 322  :     
; 323  :     return TRUE;

  0003c	e3a00001	 mov         r0, #1

; 324  : }

  00040	e8bd4010	 ldmia       sp!, {r4, lr}
  00044	e12fff1e	 bx          lr
  00048		 |$M34734|

			 ENDP  ; |?GUIDFromString@@YAHPBGPAU_GUID@@@Z|, GUIDFromString

	EXPORT	|ConvertStringToGuid|
	EXPORT	|??_C@_1DC@FIBMBACO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAp?$AAa?$AAr?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAg?$AAu?$AAi?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@CGAEIIBO@?$AAC?$AAo?$AAn?$AAv?$AAe?$AAr?$AAt?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAT?$AAo?$AAG?$AAu?$AAi?$AAd?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@OOEKDBLE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAp?$AAa?$AAr?$AAs?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|__C_specific_handler|

  00000			 AREA	 |.pdata|, PDATA
|$T34775| DCD	|$LN28@ConvertStr|
	DCD	0xc0002804

  00000			 AREA	 |.pdata|, PDATA
|$T34777| DCD	|$LN10@ConvertStr|
	DCD	0x40000701

  00000			 AREA	 |.xdata|, DATA
|$T34773| DCD	0x1
	DCD	|$LN14@ConvertStr|
	DCD	|$LN15@ConvertStr|
	DCD	|$LN10@ConvertStr|
	DCD	|$LN11@ConvertStr|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@FIBMBACO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAp?$AAa?$AAr?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAg?$AAu?$AAi?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "e", 0x0, "r", 0x0, "r"
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r"
	DCB	0x0, "s", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "g"
	DCB	0x0, "u", 0x0, "i", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@CGAEIIBO@?$AAC?$AAo?$AAn?$AAv?$AAe?$AAr?$AAt?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAT?$AAo?$AAG?$AAu?$AAi?$AAd?$AA?$AA@| DCB "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, "t"
	DCB	0x0, "S", 0x0, "t", 0x0, "r", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, "T", 0x0, "o", 0x0, "G", 0x0, "u", 0x0, "i", 0x0, "d"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@OOEKDBLE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAp?$AAa?$AAr?$AAs?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "u"
	DCB	0x0, "l", 0x0, "d", 0x0, "n", 0x0, "'", 0x0, "t", 0x0, " "
	DCB	0x0, "p", 0x0, "a", 0x0, "r", 0x0, "s", 0x0, "e", 0x0, " "
	DCB	0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T34773|

  00008		 |ConvertStringToGuid| PROC

; 329  : {

  00008		 |$LN28@ConvertStr|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d5830	 stmdb       sp!, {r4, r5, r11, r12, lr}
  00010	e28db014	 add         r11, sp, #0x14
  00014	e24dd008	 sub         sp, sp, #8
  00018		 |$LN26@ConvertStr|
  00018	e1a05000	 mov         r5, r0

; 330  :     BOOL fOk = FALSE;

  0001c	e3a03000	 mov         r3, #0
  00020	e50b301c	 str         r3, [r11, #-0x1C]
  00024		 |$LN14@ConvertStr|

; 331  : 
; 332  : #ifndef SHIP_BUILD
; 333  :     SETFNAME(_T("ConvertStringToGuid"));
; 334  : #endif
; 335  : 
; 336  :     DEBUGCHK(pGuid != NULL && pszGuid != NULL);
; 337  :     __try {
; 338  :         if (! GUIDFromString(pszGuid, pGuid)) {

  00024	e1a04005	 mov         r4, r5
  00028	e0d430b2	 ldrh        r3, [r4], #2
  0002c	e353007b	 cmp         r3, #0x7B
  00030	1a000006	 bne         |$LN24@ConvertStr|
  00034	e1a00004	 mov         r0, r4
  00038	eb000000	 bl          |?wUUIDFromString@@YAHPBGPAU_GUID@@@Z|
  0003c	e3500001	 cmp         r0, #1
  00040	1a000002	 bne         |$LN24@ConvertStr|
  00044	e1f434b8	 ldrh        r3, [r4, #0x48]!
  00048	e353007d	 cmp         r3, #0x7D
  0004c	0a000006	 beq         |$LN5@ConvertStr|
  00050		 |$LN24@ConvertStr|

; 339  :             PMLOGMSG(ZONE_WARN, (_T("%s: couldn't parse '%s'\r\n"), pszFname,
; 340  :                 pszGuid));

  00050	e59f3064	 ldr         r3, [pc, #0x64]
  00054	e5933440	 ldr         r3, [r3, #0x440]
  00058	e3130002	 tst         r3, #2
  0005c	159f1054	 ldrne       r1, [pc, #0x54]
  00060	159f0058	 ldrne       r0, [pc, #0x58]
  00064	11a02005	 movne       r2, r5
  00068	1b000000	 blne        CeLogMsg
  0006c		 |$LN5@ConvertStr|

; 341  :         }
; 342  :         fOk = TRUE;

  0006c	e3a00001	 mov         r0, #1
  00070	e50b001c	 str         r0, [r11, #-0x1C]
  00074		 |$LN15@ConvertStr|

; 343  :     }

  00074	ea000008	 b           |$LN3@ConvertStr|
  00078		 |$LN11@ConvertStr|

; 345  :         PMLOGMSG(ZONE_WARN, (_T("%s: error parsing guid\r\n"), pszFname));

  00078	e59f303c	 ldr         r3, [pc, #0x3C]
  0007c	e5933440	 ldr         r3, [r3, #0x440]
  00080	e3130002	 tst         r3, #2
  00084	159f102c	 ldrne       r1, [pc, #0x2C]
  00088	159f0024	 ldrne       r0, [pc, #0x24]
  0008c	1b000000	 blne        CeLogMsg
  00090	e51b001c	 ldr         r0, [r11, #-0x1C]
  00094	ea000000	 b           |$LN3@ConvertStr|
  00098		 |$LN25@ConvertStr|

; 346  :     }
; 347  : 
; 348  :     return fOk;

  00098	e51b0018	 ldr         r0, [r11, #-0x18]
  0009c		 |$LN3@ConvertStr|

; 349  : }

  0009c	e24bd014	 sub         sp, r11, #0x14
  000a0	e89d6830	 ldmia       sp, {r4, r5, r11, sp, lr}
  000a4	e12fff1e	 bx          lr

			 ENDP  ; |ConvertStringToGuid|

  000a8		 |$LN10@ConvertStr|
  000a8		 |$LN27@ConvertStr|

; 344  :     __except(EXCEPTION_EXECUTE_HANDLER) {

  000a8	e52de004	 str         lr, [sp, #-4]!
  000ac		 |$LN13@ConvertStr|
  000ac		 |$LN30@ConvertStr|
  000ac	e3a00001	 mov         r0, #1
  000b0		 |$LN12@ConvertStr|
  000b0	e49df004	 ldr         pc, [sp], #4
  000b4		 |$LN32@ConvertStr|
  000b4		 |$LN33@ConvertStr|
  000b4	00000000	 DCD         |??_C@_1DC@FIBMBACO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAp?$AAa?$AAr?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAg?$AAu?$AAi?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  000b8		 |$LN34@ConvertStr|
  000b8	00000000	 DCD         |??_C@_1CI@CGAEIIBO@?$AAC?$AAo?$AAn?$AAv?$AAe?$AAr?$AAt?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAT?$AAo?$AAG?$AAu?$AAi?$AAd?$AA?$AA@|
  000bc		 |$LN35@ConvertStr|
  000bc	00000000	 DCD         |dpCurSettings|
  000c0		 |$LN36@ConvertStr|
  000c0	00000000	 DCD         |??_C@_1DE@OOEKDBLE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAp?$AAa?$AAr?$AAs?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN?$AA?6?$AA?$AA@|
  000c4		 |$LN31@ConvertStr|
  000c4		 |$LN29@ConvertStr|
	EXPORT	|DeviceIdSize|
	EXPORT	|??_C@_1BK@HBDDEGID@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAd?$AAS?$AAi?$AAz?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@JAIMPFEK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAa?$AAl?$AAc?$AAu?$AAl?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	IMPORT	|wcslen|

  00000			 AREA	 |.pdata|, PDATA
|$T34812| DCD	|$LN23@DeviceIdSi|
	DCD	0xc0002404

  00000			 AREA	 |.pdata|, PDATA
|$T34814| DCD	|$LN11@DeviceIdSi|
	DCD	0x40000601

  00000			 AREA	 |.xdata|, DATA
|$T34810| DCD	0x1
	DCD	|$LN15@DeviceIdSi|
	DCD	|$LN16@DeviceIdSi|
	DCD	|$LN11@DeviceIdSi|
	DCD	|$LN12@DeviceIdSi|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@HBDDEGID@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAd?$AAS?$AAi?$AAz?$AAe?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "I"
	DCB	0x0, "d", 0x0, "S", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@JAIMPFEK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAa?$AAl?$AAc?$AAu?$AAl?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?$AN?$AA?6@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "c"
	DCB	0x0, "e", 0x0, "p", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "c", 0x0, "a", 0x0, "l", 0x0, "c", 0x0, "u"
	DCB	0x0, "l", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T34810|

  00008		 |DeviceIdSize| PROC

; 356  : {

  00008		 |$LN23@DeviceIdSi|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d5810	 stmdb       sp!, {r4, r11, r12, lr}
  00010	e28db010	 add         r11, sp, #0x10
  00014	e24dd008	 sub         sp, sp, #8
  00018		 |$LN21@DeviceIdSi|
  00018	e1b04000	 movs        r4, r0

; 357  :     DWORD dwSize;
; 358  : 
; 359  : #ifndef SHIP_BUILD
; 360  :     SETFNAME(_T("DeviceIdSize"));
; 361  : #endif
; 362  : 
; 363  :     if(pId != NULL) {

  0001c	0a000019	 beq         |$LN5@DeviceIdSi|
  00020		 |$LN15@DeviceIdSi|

; 364  :         // calculate the amount of memory to allocate
; 365  :         __try {
; 366  :             dwSize = sizeof(*pId);

  00020	e3a00008	 mov         r0, #8
  00024	e50b0018	 str         r0, [r11, #-0x18]

; 367  :             if(pId->pszName != NULL) {

  00028	e5943004	 ldr         r3, [r4, #4]
  0002c	e3530000	 cmp         r3, #0
  00030	0a000004	 beq         |$LN3@DeviceIdSi|

; 368  :                 dwSize += (_tcslen(pId->pszName) + 1) * sizeof(pId->pszName[0]);

  00034	e1a00003	 mov         r0, r3
  00038	eb000000	 bl          wcslen
  0003c	e2803005	 add         r3, r0, #5
  00040	e1a00083	 mov         r0, r3, lsl #1
  00044	e50b0018	 str         r0, [r11, #-0x18]
  00048		 |$LN3@DeviceIdSi|

; 369  :             }
; 370  :             if(pId->pGuid != NULL) {

  00048	e5943000	 ldr         r3, [r4]
  0004c	e3530000	 cmp         r3, #0

; 371  :                 dwSize += sizeof(GUID);

  00050	12800010	 addne       r0, r0, #0x10
  00054	150b0018	 strne       r0, [r11, #-0x18]
  00058		 |$LN16@DeviceIdSi|

; 372  :             }
; 373  :         }

  00058	ea00000b	 b           |$LN1@DeviceIdSi|
  0005c		 |$LN12@DeviceIdSi|

; 375  :             PMLOGMSG(ZONE_WARN, (_T("%s: exception calculating size\r\n"), pszFname));

  0005c	e59f3048	 ldr         r3, [pc, #0x48]
  00060	e5933440	 ldr         r3, [r3, #0x440]
  00064	e3130002	 tst         r3, #2
  00068	159f1038	 ldrne       r1, [pc, #0x38]
  0006c	159f0030	 ldrne       r0, [pc, #0x30]
  00070	1b000000	 blne        CeLogMsg

; 376  :             dwSize = 0;;

  00074	e3a00000	 mov         r0, #0
  00078	e50b0018	 str         r0, [r11, #-0x18]
  0007c	ea000002	 b           |$LN1@DeviceIdSi|
  00080		 |$LN20@DeviceIdSi|

; 380  :     }
; 381  : 
; 382  :     return dwSize;

  00080	e51b0014	 ldr         r0, [r11, #-0x14]
  00084	ea000000	 b           |$LN1@DeviceIdSi|
  00088		 |$LN5@DeviceIdSi|

; 377  :         }
; 378  :     } else {
; 379  :         dwSize = 0;

  00088	e3a00000	 mov         r0, #0
  0008c		 |$LN1@DeviceIdSi|

; 383  : }

  0008c	e24bd010	 sub         sp, r11, #0x10
  00090	e89d6810	 ldmia       sp, {r4, r11, sp, lr}
  00094	e12fff1e	 bx          lr

			 ENDP  ; |DeviceIdSize|

  00098		 |$LN11@DeviceIdSi|
  00098		 |$LN22@DeviceIdSi|

; 374  :         __except(EXCEPTION_EXECUTE_HANDLER) {

  00098	e52de004	 str         lr, [sp, #-4]!
  0009c		 |$LN14@DeviceIdSi|
  0009c		 |$LN25@DeviceIdSi|
  0009c	e3a00001	 mov         r0, #1
  000a0		 |$LN13@DeviceIdSi|
  000a0	e49df004	 ldr         pc, [sp], #4
  000a4		 |$LN27@DeviceIdSi|
  000a4		 |$LN28@DeviceIdSi|
  000a4	00000000	 DCD         |??_C@_1EC@JAIMPFEK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAa?$AAl?$AAc?$AAu?$AAl?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?$AN?$AA?6@|
  000a8		 |$LN29@DeviceIdSi|
  000a8	00000000	 DCD         |??_C@_1BK@HBDDEGID@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAd?$AAS?$AAi?$AAz?$AAe?$AA?$AA@|
  000ac		 |$LN30@DeviceIdSi|
  000ac	00000000	 DCD         |dpCurSettings|
  000b0		 |$LN26@DeviceIdSi|
  000b0		 |$LN24@DeviceIdSi|
	EXPORT	|DeviceIdCloneIntoBuffer|
	EXPORT	|??_C@_1EG@NNKPJLFF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAd?$AAu?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAm?$AAe?$AAm?$AAb?$AAe?$AAr?$AA?5?$AAc?$AAo?$AAp?$AAy@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@LNNIEIHK@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAd?$AAC?$AAl?$AAo?$AAn?$AAe?$AAI?$AAn?$AAt?$AAo?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HI@DIOFPKMA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAs?$AAt?$AAi?$AAn?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$CF?$AAd?$AA?5?$AAt@| [ DATA ] ; `string'
	IMPORT	|wcscpy|
	IMPORT	|memset|

  00000			 AREA	 |.pdata|, PDATA
|$T34856| DCD	|$LN25@DeviceIdCl|
	DCD	0xc0004004

  00000			 AREA	 |.pdata|, PDATA
|$T34858| DCD	|$LN13@DeviceIdCl|
	DCD	0x40000701

  00000			 AREA	 |.xdata|, DATA
|$T34854| DCD	0x1
	DCD	|$LN17@DeviceIdCl|
	DCD	|$LN18@DeviceIdCl|
	DCD	|$LN13@DeviceIdCl|
	DCD	|$LN14@DeviceIdCl|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@NNKPJLFF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAd?$AAu?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAm?$AAe?$AAm?$AAb?$AAe?$AAr?$AA?5?$AAc?$AAo?$AAp?$AAy@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "c"
	DCB	0x0, "e", 0x0, "p", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "d", 0x0, "u", 0x0, "r", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "m", 0x0, "e", 0x0, "m", 0x0, "b"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "p"
	DCB	0x0, "y", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@LNNIEIHK@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAd?$AAC?$AAl?$AAo?$AAn?$AAe?$AAI?$AAn?$AAt?$AAo?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "I"
	DCB	0x0, "d", 0x0, "C", 0x0, "l", 0x0, "o", 0x0, "n", 0x0, "e"
	DCB	0x0, "I", 0x0, "n", 0x0, "t", 0x0, "o", 0x0, "B", 0x0, "u"
	DCB	0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@DIOFPKMA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAs?$AAt?$AAi?$AAn?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$CF?$AAd?$AA?5?$AAt@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "s"
	DCB	0x0, "t", 0x0, "i", 0x0, "n", 0x0, "a", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "s", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, "o", 0x0, " ", 0x0, "s", 0x0, "m"
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, ",", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, "b", 0x0, "y", 0x0, "t", 0x0, "e"
	DCB	0x0, "s", 0x0, " ", 0x0, "n", 0x0, "e", 0x0, "e", 0x0, "d"
	DCB	0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T34854|

  00008		 |DeviceIdCloneIntoBuffer| PROC

; 392  : {

  00008		 |$LN25@DeviceIdCl|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d5870	 stmdb       sp!, {r4 - r6, r11, r12, lr}
  00010	e28db018	 add         r11, sp, #0x18
  00014	e24dd004	 sub         sp, sp, #4
  00018		 |$LN23@DeviceIdCl|
  00018	e1a06002	 mov         r6, r2
  0001c	e1a05001	 mov         r5, r1
  00020	e1a04000	 mov         r4, r0

; 393  :     DWORD dwSize;
; 394  : 
; 395  : #ifndef SHIP_BUILD
; 396  :     SETFNAME(_T("DeviceIdCloneIntoBuffer"));
; 397  : #endif
; 398  : 
; 399  :     PREFAST_DEBUGCHK(pIdSrc != NULL);
; 400  :     DEBUGCHK(pIdSrc->pGuid != NULL || pIdSrc->pszName != NULL);
; 401  :     PREFAST_DEBUGCHK(pIdDst != NULL);
; 402  :     DEBUGCHK(cbDst >= sizeof(DEVICEID));
; 403  : 
; 404  :     // make sure we have enough room
; 405  :     dwSize = DeviceIdSize(pIdSrc);

  00024	eb000000	 bl          DeviceIdSize
  00028	e1a02000	 mov         r2, r0

; 406  :     if(cbDst < dwSize) {

  0002c	e1560002	 cmp         r6, r2
  00030	2a000009	 bcs         |$LN5@DeviceIdCl|

; 407  :         PMLOGMSG(ZONE_WARN, 
; 408  :             (_T("%s: destination buffer size %d too small, %d bytes needed\r\n"),
; 409  :             pszFname, cbDst, dwSize));

  00034	e59f30e0	 ldr         r3, [pc, #0xE0]
  00038	e5933440	 ldr         r3, [r3, #0x440]
  0003c	e3130002	 tst         r3, #2
  00040	159f10d0	 ldrne       r1, [pc, #0xD0]
  00044	159f00d4	 ldrne       r0, [pc, #0xD4]
  00048	11a03002	 movne       r3, r2
  0004c	11a02006	 movne       r2, r6
  00050	1b000000	 blne        CeLogMsg

; 410  :         pIdDst = NULL;

  00054	e3a05000	 mov         r5, #0

; 411  :     } else {

  00058	ea000026	 b           |$LN6@DeviceIdCl|
  0005c		 |$LN5@DeviceIdCl|

; 412  :         memset(pIdDst, 0, dwSize);

  0005c	e3a01000	 mov         r1, #0
  00060	e1a00005	 mov         r0, r5
  00064	eb000000	 bl          memset

; 413  :         pIdDst->pGuid = NULL;

  00068	e3a03000	 mov         r3, #0
  0006c	e5853000	 str         r3, [r5]

; 414  :         pIdDst->pszName = NULL;

  00070	e5853004	 str         r3, [r5, #4]
  00074		 |$LN17@DeviceIdCl|

; 415  :         __try {
; 416  :             // copy class field if present
; 417  :             DWORD dwNameOffset = sizeof(*pIdDst);
; 418  :             
; 419  :             if(pIdSrc->pGuid != NULL) {

  00074	e5943000	 ldr         r3, [r4]
  00078	e3a00008	 mov         r0, #8
  0007c	e1b01003	 movs        r1, r3
  00080	0a00000a	 beq         |$LN2@DeviceIdCl|

; 420  :                 LPGUID pGuid = (LPGUID) ((LPBYTE) pIdDst + sizeof(*pIdDst));
; 421  :                 *pGuid = *pIdSrc->pGuid;

  00084	e5913000	 ldr         r3, [r1]
  00088	e2852008	 add         r2, r5, #8

; 422  :                 pIdDst->pGuid = pGuid;
; 423  :                 dwNameOffset += sizeof(GUID);

  0008c	e3a00018	 mov         r0, #0x18
  00090	e5823000	 str         r3, [r2]
  00094	e5913004	 ldr         r3, [r1, #4]
  00098	e5823004	 str         r3, [r2, #4]
  0009c	e5913008	 ldr         r3, [r1, #8]
  000a0	e5823008	 str         r3, [r2, #8]
  000a4	e591300c	 ldr         r3, [r1, #0xC]
  000a8	e582300c	 str         r3, [r2, #0xC]
  000ac	e5852000	 str         r2, [r5]
  000b0		 |$LN2@DeviceIdCl|

; 424  :             }
; 425  : 
; 426  :             // copy name field if present
; 427  :             if(pIdSrc->pszName != NULL) {

  000b0	e5943004	 ldr         r3, [r4, #4]
  000b4	e3530000	 cmp         r3, #0
  000b8	0a000004	 beq         |$LN18@DeviceIdCl|

; 428  :                 LPTSTR pszName = (LPTSTR) ((LPBYTE) pIdDst + dwNameOffset);

  000bc	e0804005	 add         r4, r0, r5

; 429  :                 _tcscpy(pszName, pIdSrc->pszName);

  000c0	e1a00004	 mov         r0, r4
  000c4	e1a01003	 mov         r1, r3
  000c8	eb000000	 bl          wcscpy

; 430  :                 pIdDst->pszName = pszName;

  000cc	e5854004	 str         r4, [r5, #4]
  000d0		 |$LN18@DeviceIdCl|

; 431  :             }            
; 432  :         }

  000d0	ea000008	 b           |$LN6@DeviceIdCl|
  000d4		 |$LN14@DeviceIdCl|

; 434  :             PMLOGMSG(ZONE_WARN, (_T("%s: exception during member copy\r\n"), 
; 435  :                 pszFname));

  000d4	e59f3040	 ldr         r3, [pc, #0x40]
  000d8	e5933440	 ldr         r3, [r3, #0x440]
  000dc	e3130002	 tst         r3, #2
  000e0	159f1030	 ldrne       r1, [pc, #0x30]
  000e4	159f0028	 ldrne       r0, [pc, #0x28]
  000e8	1b000000	 blne        CeLogMsg

; 436  :             pIdDst = NULL;

  000ec	e3a05000	 mov         r5, #0
  000f0	ea000000	 b           |$LN6@DeviceIdCl|
  000f4		 |$LN22@DeviceIdCl|

; 437  :         }
; 438  :     }
; 439  : 
; 440  :     return pIdDst;

  000f4	e51b501c	 ldr         r5, [r11, #-0x1C]
  000f8		 |$LN6@DeviceIdCl|

; 441  : }

  000f8	e1a00005	 mov         r0, r5
  000fc	e24bd018	 sub         sp, r11, #0x18
  00100	e89d6870	 ldmia       sp, {r4 - r6, r11, sp, lr}
  00104	e12fff1e	 bx          lr

			 ENDP  ; |DeviceIdCloneIntoBuffer|

  00108		 |$LN13@DeviceIdCl|
  00108		 |$LN24@DeviceIdCl|

; 433  :         __except(EXCEPTION_EXECUTE_HANDLER) {

  00108	e52de004	 str         lr, [sp, #-4]!
  0010c		 |$LN16@DeviceIdCl|
  0010c		 |$LN27@DeviceIdCl|
  0010c	e3a00001	 mov         r0, #1
  00110		 |$LN15@DeviceIdCl|
  00110	e49df004	 ldr         pc, [sp], #4
  00114		 |$LN29@DeviceIdCl|
  00114		 |$LN30@DeviceIdCl|
  00114	00000000	 DCD         |??_C@_1EG@NNKPJLFF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAd?$AAu?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAm?$AAe?$AAm?$AAb?$AAe?$AAr?$AA?5?$AAc?$AAo?$AAp?$AAy@|
  00118		 |$LN31@DeviceIdCl|
  00118	00000000	 DCD         |??_C@_1DA@LNNIEIHK@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAd?$AAC?$AAl?$AAo?$AAn?$AAe?$AAI?$AAn?$AAt?$AAo?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$AA@|
  0011c		 |$LN32@DeviceIdCl|
  0011c	00000000	 DCD         |dpCurSettings|
  00120		 |$LN33@DeviceIdCl|
  00120	00000000	 DCD         |??_C@_1HI@DIOFPKMA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAs?$AAt?$AAi?$AAn?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$CF?$AAd?$AA?5?$AAt@|
  00124		 |$LN28@DeviceIdCl|
  00124		 |$LN26@DeviceIdCl|
	EXPORT	|DeviceIdClone|

  00000			 AREA	 |.pdata|, PDATA
|$T34879| DCD	|$LN9@DeviceIdCl@2|
	DCD	0x40001801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DeviceIdClone| PROC

; 447  : {

  00000		 |$LN9@DeviceIdCl@2|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M34876|
  00004	e1a06000	 mov         r6, r0

; 448  :     PDEVICEID pIdClone;
; 449  :     DWORD dwSize;
; 450  : 
; 451  : #ifndef SHIP_BUILD
; 452  :     SETFNAME(_T("DeviceIdClone"));
; 453  : 	UNREFERENCED_PARAMETER(pszFname);
; 454  : #endif
; 455  : 
; 456  :     DEBUGCHK(pId != NULL);
; 457  : 
; 458  :     // calculate the amount of memory to allocate
; 459  :     dwSize = DeviceIdSize(pId);

  00008	eb000000	 bl          DeviceIdSize
  0000c	e1b05000	 movs        r5, r0

; 460  :     if(dwSize != 0) {

  00010	0a000003	 beq         |$LN4@DeviceIdCl@2|

; 461  :         pIdClone = (PDEVICEID) PmAlloc(dwSize);

  00014	e1a00005	 mov         r0, r5
  00018	eb000000	 bl          PmAlloc
  0001c	e1a04000	 mov         r4, r0

; 462  :     } else {

  00020	ea000000	 b           |$LN3@DeviceIdCl@2|
  00024		 |$LN4@DeviceIdCl@2|

; 463  :         pIdClone = NULL;

  00024	e3a04000	 mov         r4, #0
  00028		 |$LN3@DeviceIdCl@2|

; 464  :     }
; 465  : 
; 466  :     // copy data into the buffer
; 467  :     if(pIdClone != NULL) {

  00028	e3540000	 cmp         r4, #0
  0002c	0a000008	 beq         |$LN1@DeviceIdCl@2|

; 468  :         PDEVICEID pIdTmp = DeviceIdCloneIntoBuffer(pId, pIdClone, dwSize);

  00030	e1a02005	 mov         r2, r5
  00034	e1a01004	 mov         r1, r4
  00038	e1a00006	 mov         r0, r6
  0003c	eb000000	 bl          DeviceIdCloneIntoBuffer
  00040	e3500000	 cmp         r0, #0

; 469  :         if(pIdTmp == NULL) {

  00044	1a000002	 bne         |$LN1@DeviceIdCl@2|

; 470  :             PmFree(pIdClone);

  00048	e1a00004	 mov         r0, r4
  0004c	eb000000	 bl          PmFree

; 471  :             pIdClone = NULL;

  00050	e3a04000	 mov         r4, #0
  00054		 |$LN1@DeviceIdCl@2|

; 472  :         }
; 473  :     }
; 474  : 
; 475  :     DEBUGCHK(pIdClone == NULL || pIdClone->pGuid != NULL || pIdClone->pszName != NULL);
; 476  : 
; 477  :     return pIdClone;
; 478  : }

  00054	e1a00004	 mov         r0, r4
  00058	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0005c	e12fff1e	 bx          lr
  00060		 |$M34877|

			 ENDP  ; |DeviceIdClone|

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|DeviceIdParseNameString|
	EXPORT	|??_C@_1CO@HPJBBGLL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@KKOFKFEH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAp?$AAa?$AAr?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@NNHOCEOL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAo?$AAn?$AA?8?$AAt?$AA?5?$AAk?$AAn?$AAo?$AAw?$AA?5?$AAh?$AAo?$AAw?$AA?5?$AAt?$AAo?$AA?5?$AAp?$AAa?$AAr?$AAs?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@BOEDGMEE@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAd?$AAP?$AAa?$AAr?$AAs?$AAe?$AAN?$AAa?$AAm?$AAe?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|towlower|
	IMPORT	|__GSHandlerCheck_SEH|
	IMPORT	|idGenericPMDeviceClass|

  00000			 AREA	 |.pdata|, PDATA
|$T34945| DCD	|$LN63@DeviceIdPa|
	DCD	0xc0008304

  00000			 AREA	 |.pdata|, PDATA
|$T34947| DCD	|$LN28@DeviceIdPa|
	DCD	0x40000301

  00000			 AREA	 |.pdata|, PDATA
|$T34949| DCD	|$LN35@DeviceIdPa|
	DCD	0x40000a01

  00000			 AREA	 |.xdata|, DATA
|$T34943| DCD	0x2
	DCD	|$LN39@DeviceIdPa|
	DCD	|$LN40@DeviceIdPa|
	DCD	|$LN35@DeviceIdPa|
	DCD	|$LN36@DeviceIdPa|
	DCD	|$LN32@DeviceIdPa|
	DCD	|$LN33@DeviceIdPa|
	DCD	|$LN28@DeviceIdPa|
	DCD	|$LN29@DeviceIdPa|
	DCD	0xffffffd4

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@HPJBBGLL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t"
	DCB	0x0, "u", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@KKOFKFEH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAp?$AAa?$AAr?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "c"
	DCB	0x0, "e", 0x0, "p", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r", 0x0, "s", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "n", 0x0, "a", 0x0, "m"
	DCB	0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@NNHOCEOL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAo?$AAn?$AA?8?$AAt?$AA?5?$AAk?$AAn?$AAo?$AAw?$AA?5?$AAh?$AAo?$AAw?$AA?5?$AAt?$AAo?$AA?5?$AAp?$AAa?$AAr?$AAs?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "d", 0x0, "o", 0x0, "n"
	DCB	0x0, "'", 0x0, "t", 0x0, " ", 0x0, "k", 0x0, "n", 0x0, "o"
	DCB	0x0, "w", 0x0, " ", 0x0, "h", 0x0, "o", 0x0, "w", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r"
	DCB	0x0, "s", 0x0, "e", 0x0, " ", 0x0, "n", 0x0, "a", 0x0, "m"
	DCB	0x0, "e", 0x0, " ", 0x0, "w", 0x0, "i", 0x0, "t", 0x0, "h"
	DCB	0x0, "o", 0x0, "u", 0x0, "t", 0x0, " ", 0x0, "P", 0x0, "O"
	DCB	0x0, "W", 0x0, "E", 0x0, "R", 0x0, "_", 0x0, "N", 0x0, "A"
	DCB	0x0, "M", 0x0, "E", 0x0, " ", 0x0, "f", 0x0, "l", 0x0, "a"
	DCB	0x0, "g", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@BOEDGMEE@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAd?$AAP?$AAa?$AAr?$AAs?$AAe?$AAN?$AAa?$AAm?$AAe?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "I"
	DCB	0x0, "d", 0x0, "P", 0x0, "a", 0x0, "r", 0x0, "s", 0x0, "e"
	DCB	0x0, "N", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "S", 0x0, "t"
	DCB	0x0, "r", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck_SEH|
  00004	00000000	 DCD         |$T34943|

  00008		 |DeviceIdParseNameString| PROC

; 486  : {

  00008		 |$LN63@DeviceIdPa|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d5ff0	 stmdb       sp!, {r4 - r12, lr}
  00010	e28db028	 add         r11, sp, #0x28
  00014	e24dd028	 sub         sp, sp, #0x28
  00018		 |$LN61@DeviceIdPa|
  00018	e1a04000	 mov         r4, r0
  0001c	e59f3220	 ldr         r3, [pc, #0x220]
  00020	e5933000	 ldr         r3, [r3]
  00024	e50b302c	 str         r3, [r11, #-0x2C]

; 487  :     GUID idClass;
; 488  :     LPCTSTR pszName = pszDevName;
; 489  :     PDEVICEID pdi = NULL;
; 490  :     DEVICEID di;
; 491  : 
; 492  : #ifndef SHIP_BUILD
; 493  :     SETFNAME(_T("DeviceIdParseNameString"));

  00028	e59f8210	 ldr         r8, [pc, #0x210]
  0002c	e3a05000	 mov         r5, #0
  00030	e50b8050	 str         r8, [r11, #-0x50]
  00034	e50b504c	 str         r5, [r11, #-0x4C]

; 494  : #endif
; 495  : 
; 496  :     // sanity check the parameters
; 497  :     PREFAST_DEBUGCHK(pszName != NULL);
; 498  :     if((dwFlags & POWER_NAME) == 0) {

  00038	e3110001	 tst         r1, #1
  0003c	1a000009	 bne         |$LN18@DeviceIdPa|

; 499  :         PMLOGMSG(ZONE_WARN, 
; 500  :             (_T("%s: don't know how to parse name without POWER_NAME flag\r\n"), 
; 501  :             pszFname));

  00040	e59f31ec	 ldr         r3, [pc, #0x1EC]
  00044	e5933440	 ldr         r3, [r3, #0x440]
  00048	e3130002	 tst         r3, #2
  0004c	159f01e8	 ldrne       r0, [pc, #0x1E8]
  00050	11a01008	 movne       r1, r8
  00054	1b000000	 blne        CeLogMsg

; 502  :         return NULL;

  00058	e51b002c	 ldr         r0, [r11, #-0x2C]
  0005c	eb000000	 bl          __security_check_cookie
  00060	e3a05000	 mov         r5, #0
  00064	ea000066	 b           |$LN19@DeviceIdPa|
  00068		 |$LN18@DeviceIdPa|
  00068		 |$LN32@DeviceIdPa|

; 503  :     }
; 504  : 
; 505  :     // is the name prefixed with a guid?
; 506  :     __try {
; 507  :         BOOL fOk = TRUE;
; 508  :         if(*pszName == '{') {

  00068	e1d430b0	 ldrh        r3, [r4]
  0006c	e3a06001	 mov         r6, #1
  00070	e353007b	 cmp         r3, #0x7B
  00074	1a000018	 bne         |$LN16@DeviceIdPa|

; 509  :             if(!ConvertStringToGuid(pszName, &idClass)) {

  00078	e24b103c	 sub         r1, r11, #0x3C
  0007c	e1a00004	 mov         r0, r4
  00080	eb000000	 bl          ConvertStringToGuid
  00084	e3500000	 cmp         r0, #0

; 510  :                 // indicate an error later
; 511  :                 pszName = NULL;

  00088	03a07000	 moveq       r7, #0
  0008c	01a04007	 moveq       r4, r7
  00090	050b7048	 streq       r7, [r11, #-0x48]

; 509  :             if(!ConvertStringToGuid(pszName, &idClass)) {

  00094	0a00001a	 beq         |$LN7@DeviceIdPa|
  00098		 |$LL13@DeviceIdPa|

; 512  :             } else {
; 513  :                 // skip the guid, we are guaranteed to find the
; 514  :                 // closing brace because the guid parsed ok.
; 515  :                 while(*pszName != '}' && *pszName != 0) {

  00098	e1d430b0	 ldrh        r3, [r4]
  0009c	e353007d	 cmp         r3, #0x7D
  000a0	13530000	 cmpne       r3, #0

; 516  :                     pszName++;

  000a4	12844002	 addne       r4, r4, #2
  000a8	150b4048	 strne       r4, [r11, #-0x48]

; 512  :             } else {
; 513  :                 // skip the guid, we are guaranteed to find the
; 514  :                 // closing brace because the guid parsed ok.
; 515  :                 while(*pszName != '}' && *pszName != 0) {

  000ac	1afffff9	 bne         |$LL13@DeviceIdPa|

; 517  :                 }
; 518  : 
; 519  :                 // skip the trailing curly-brace and backslash
; 520  :                 if(*pszName != '}') {

  000b0	e1d430b0	 ldrh        r3, [r4]
  000b4	e353007d	 cmp         r3, #0x7D
  000b8	1a00003b	 bne         |$LN33@DeviceIdPa|

; 521  :                     fOk = FALSE;
; 522  :                 } else {
; 523  :                     pszName++;      // go to the char after the close brace

  000bc	e2842002	 add         r2, r4, #2
  000c0	e50b2048	 str         r2, [r11, #-0x48]

; 524  :                     if(*pszName != _T('\\')) {

  000c4	e1d230b0	 ldrh        r3, [r2]
  000c8	e353005c	 cmp         r3, #0x5C
  000cc	1a000036	 bne         |$LN33@DeviceIdPa|

; 525  :                         fOk = FALSE;
; 526  :                     } else {
; 527  :                         pszName++;

  000d0	e2824002	 add         r4, r2, #2
  000d4	e50b4048	 str         r4, [r11, #-0x48]

; 528  :                     }
; 529  :                 }
; 530  :             }
; 531  :         } else {

  000d8	ea000008	 b           |$LN60@DeviceIdPa|
  000dc		 |$LN16@DeviceIdPa|

; 532  :             // use the default device class
; 533  :             idClass = idGenericPMDeviceClass;

  000dc	e59f0154	 ldr         r0, [pc, #0x154]
  000e0	e5903000	 ldr         r3, [r0]
  000e4	e5902004	 ldr         r2, [r0, #4]
  000e8	e5901008	 ldr         r1, [r0, #8]
  000ec	e590000c	 ldr         r0, [r0, #0xC]
  000f0	e50b303c	 str         r3, [r11, #-0x3C]
  000f4	e50b2038	 str         r2, [r11, #-0x38]
  000f8	e50b1034	 str         r1, [r11, #-0x34]
  000fc	e50b0030	 str         r0, [r11, #-0x30]
  00100		 |$LN60@DeviceIdPa|
  00100	e3a07000	 mov         r7, #0
  00104		 |$LN7@DeviceIdPa|

; 534  :         }
; 535  :         
; 536  :         // do we have a name?
; 537  :         if(fOk && pszName != NULL && *pszName != 0) {

  00104	e3560000	 cmp         r6, #0
  00108	0a000027	 beq         |$LN33@DeviceIdPa|
  0010c	e3540000	 cmp         r4, #0
  00110	0a000025	 beq         |$LN33@DeviceIdPa|
  00114	e1d430b0	 ldrh        r3, [r4]
  00118	e3530000	 cmp         r3, #0
  0011c	0a000022	 beq         |$LN33@DeviceIdPa|

; 538  :             DWORD dwLen;
; 539  :             DWORD cchName;
; 540  : 
; 541  :             // yes, save it and convert to lower case
; 542  :             di.pGuid = &idClass;

  00120	e24b303c	 sub         r3, r11, #0x3C
  00124	e50b3044	 str         r3, [r11, #-0x44]

; 543  :             cchName = _tcslen(pszName);

  00128	e1a00004	 mov         r0, r4
  0012c	eb000000	 bl          wcslen
  00130	e1a0a000	 mov         r10, r0

; 544  :             dwLen = (cchName + 1) * sizeof(*pszName);

  00134	e28a3001	 add         r3, r10, #1
  00138	e1a03083	 mov         r3, r3, lsl #1
  0013c		 |$LN39@DeviceIdPa|

; 545  :             __try {
; 546  :                 DWORD dwIndex;
; 547  :                 LPTSTR pszTempName = (LPTSTR) _alloca(dwLen);

  0013c	e2833003	 add         r3, r3, #3
  00140	e3c33003	 bic         r3, r3, #3
  00144	e04dd003	 sub         sp, sp, r3
  00148	e28d6000	 add         r6, sp, #0

; 548  :                 for(dwIndex = 0; dwIndex < cchName; dwIndex++) {

  0014c	e1a09007	 mov         r9, r7
  00150		 |$LL4@DeviceIdPa|
  00150	e159000a	 cmp         r9, r10
  00154	2a000006	 bcs         |$LN2@DeviceIdPa|

; 549  :                     pszTempName[dwIndex] = _totlower(pszName[dwIndex]);

  00158	e0843089	 add         r3, r4, r9, lsl #1
  0015c	e1d300b0	 ldrh        r0, [r3]
  00160	eb000000	 bl          towlower
  00164	e0863089	 add         r3, r6, r9, lsl #1
  00168	e1c300b0	 strh        r0, [r3]

; 548  :                 for(dwIndex = 0; dwIndex < cchName; dwIndex++) {

  0016c	e2899001	 add         r9, r9, #1
  00170	eafffff6	 b           |$LL4@DeviceIdPa|
  00174		 |$LN2@DeviceIdPa|

; 550  :                 }
; 551  :                 pszTempName[cchName] = 0;

  00174	e086308a	 add         r3, r6, r10, lsl #1
  00178	e1c370b0	 strh        r7, [r3]

; 552  :                 di.pszName = pszTempName;

  0017c	e50b6040	 str         r6, [r11, #-0x40]
  00180		 |$LN40@DeviceIdPa|
  00180	ea000003	 b           |$LN41@DeviceIdPa|
  00184		 |$LN36@DeviceIdPa|

; 555  :                 di.pszName = NULL;

  00184	e3a06000	 mov         r6, #0
  00188	e50b6040	 str         r6, [r11, #-0x40]
  0018c	e51b504c	 ldr         r5, [r11, #-0x4C]
  00190	e51b8050	 ldr         r8, [r11, #-0x50]
  00194		 |$LN41@DeviceIdPa|

; 556  :             }
; 557  :             if(di.pszName != NULL) {

  00194	e3560000	 cmp         r6, #0
  00198	0a000003	 beq         |$LN33@DeviceIdPa|

; 558  :                 pdi = DeviceIdClone(&di);

  0019c	e24b0044	 sub         r0, r11, #0x44
  001a0	eb000000	 bl          DeviceIdClone
  001a4	e1a05000	 mov         r5, r0
  001a8	e50b504c	 str         r5, [r11, #-0x4C]
  001ac		 |$LN33@DeviceIdPa|

; 559  :             }
; 560  :         }
; 561  :     }

  001ac	e59f4080	 ldr         r4, [pc, #0x80]
  001b0	ea000007	 b           |$LN34@DeviceIdPa|
  001b4		 |$LN29@DeviceIdPa|

; 563  :         PMLOGMSG(ZONE_WARN, (_T("%s: exception parsing name\r\n"), pszFname));

  001b4	e59f4078	 ldr         r4, [pc, #0x78]
  001b8	e5943440	 ldr         r3, [r4, #0x440]
  001bc	e3130002	 tst         r3, #2
  001c0	e51b8050	 ldr         r8, [r11, #-0x50]
  001c4	159f0064	 ldrne       r0, [pc, #0x64]
  001c8	11a01008	 movne       r1, r8
  001cc	1b000000	 blne        CeLogMsg
  001d0	e51b504c	 ldr         r5, [r11, #-0x4C]
  001d4		 |$LN34@DeviceIdPa|

; 564  :     }
; 565  : 
; 566  :     PMLOGMSG(pdi == NULL && ZONE_WARN, (_T("%s: returning 0x%08x\r\n"), pszFname, pdi));

  001d4	e3550000	 cmp         r5, #0
  001d8	1a000005	 bne         |$LN25@DeviceIdPa|
  001dc	e5943440	 ldr         r3, [r4, #0x440]
  001e0	e3130002	 tst         r3, #2
  001e4	159f0040	 ldrne       r0, [pc, #0x40]
  001e8	13a02000	 movne       r2, #0
  001ec	11a01008	 movne       r1, r8
  001f0	1b000000	 blne        CeLogMsg
  001f4		 |$LN25@DeviceIdPa|

; 567  :     return pdi;

  001f4	e51b002c	 ldr         r0, [r11, #-0x2C]
  001f8	eb000000	 bl          __security_check_cookie
  001fc	ea000000	 b           |$LN19@DeviceIdPa|
  00200		 |$LN55@DeviceIdPa|
  00200	e51b5050	 ldr         r5, [r11, #-0x50]
  00204		 |$LN19@DeviceIdPa|

; 568  : }

  00204	e1a00005	 mov         r0, r5
  00208	e24bd028	 sub         sp, r11, #0x28
  0020c	e89d6ff0	 ldmia       sp, {r4 - r11, sp, lr}
  00210	e12fff1e	 bx          lr

			 ENDP  ; |DeviceIdParseNameString|

  00214		 |$LN28@DeviceIdPa|
  00214		 |$LN62@DeviceIdPa|

; 562  :     __except(EXCEPTION_EXECUTE_HANDLER) {

  00214	e52de004	 str         lr, [sp, #-4]!
  00218		 |$LN31@DeviceIdPa|
  00218		 |$LN66@DeviceIdPa|
  00218	e3a00001	 mov         r0, #1
  0021c		 |$LN30@DeviceIdPa|
  0021c	e49df004	 ldr         pc, [sp], #4
  00220		 |$LN67@DeviceIdPa|
  00220		 |$LN35@DeviceIdPa|
  00220		 |$LN64@DeviceIdPa|

; 553  :             } 
; 554  :             __except(EXCEPTION_EXECUTE_HANDLER) {

  00220	e52de004	 str         lr, [sp, #-4]!
  00224		 |$LN38@DeviceIdPa|
  00224		 |$LN68@DeviceIdPa|
  00224	e3a00001	 mov         r0, #1
  00228		 |$LN37@DeviceIdPa|
  00228	e49df004	 ldr         pc, [sp], #4
  0022c		 |$LN70@DeviceIdPa|
  0022c		 |$LN71@DeviceIdPa|
  0022c	00000000	 DCD         |??_C@_1CO@HPJBBGLL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00230		 |$LN72@DeviceIdPa|
  00230	00000000	 DCD         |??_C@_1DK@KKOFKFEH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAp?$AAa?$AAr?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  00234		 |$LN73@DeviceIdPa|
  00234	00000000	 DCD         |dpCurSettings|
  00238		 |$LN74@DeviceIdPa|
  00238	00000000	 DCD         |idGenericPMDeviceClass|
  0023c		 |$LN75@DeviceIdPa|
  0023c	00000000	 DCD         |??_C@_1HG@NNHOCEOL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAo?$AAn?$AA?8?$AAt?$AA?5?$AAk?$AAn?$AAo?$AAw?$AA?5?$AAh?$AAo?$AAw?$AA?5?$AAt?$AAo?$AA?5?$AAp?$AAa?$AAr?$AAs?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe@|
  00240		 |$LN76@DeviceIdPa|
  00240	00000000	 DCD         |??_C@_1DA@BOEDGMEE@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAI?$AAd?$AAP?$AAa?$AAr?$AAs?$AAe?$AAN?$AAa?$AAm?$AAe?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AA?$AA@|
  00244		 |$LN77@DeviceIdPa|
  00244	00000000	 DCD         |__security_cookie|
  00248		 |$LN69@DeviceIdPa|
  00248		 |$LN65@DeviceIdPa|
	EXPORT	|DeviceIdDestroy|

  00000			 AREA	 |.pdata|, PDATA
|$T34972| DCD	|$LN6@DeviceIdDe|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DeviceIdDestroy| PROC

; 575  : {

  00000		 |$LN6@DeviceIdDe|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M34969|
  00004	e3500000	 cmp         r0, #0

; 576  :     if(pId) {
; 577  :         PmFree(pId);

  00008	1b000000	 blne        PmFree

; 578  :     }
; 579  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M34970|

			 ENDP  ; |DeviceIdDestroy|

	EXPORT	|?DeviceIdsAreEqual@@YAHPAU_DeviceId_tag@@0@Z| ; DeviceIdsAreEqual
	IMPORT	|wcscmp|
; File c:\wince600\public\common\sdk\inc\objbase.h

  00000			 AREA	 |.pdata|, PDATA
|$T35007| DCD	|$LN26@DeviceIdsA|
	DCD	0x40002201
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\pm\dll\pmutils.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DeviceIdsAreEqual@@YAHPAU_DeviceId_tag@@0@Z| PROC ; DeviceIdsAreEqual

; 586  : {

  00000		 |$LN26@DeviceIdsA|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M35004|
  00004	e1a05001	 mov         r5, r1
  00008	e1a06000	 mov         r6, r0

; 587  :     BOOL fEqual = TRUE;
; 588  : 
; 589  :     PREFAST_DEBUGCHK(pId1 != NULL);
; 590  :     PREFAST_DEBUGCHK(pId2 != NULL);
; 591  :     // check name strings first
; 592  :     if(pId1->pszName == NULL) {

  0000c	e5963004	 ldr         r3, [r6, #4]
  00010	e3a04001	 mov         r4, #1
  00014	e1b00003	 movs        r0, r3

; 593  :         if(pId2->pszName != NULL) {

  00018	e5953004	 ldr         r3, [r5, #4]
  0001c	1a000002	 bne         |$LN11@DeviceIdsA|
  00020	e3530000	 cmp         r3, #0
  00024	0a000006	 beq         |$LN22@DeviceIdsA|

; 594  :             fEqual = FALSE;
; 595  :         }
; 596  :     } else {

  00028	ea000012	 b           |$LN7@DeviceIdsA|
  0002c		 |$LN11@DeviceIdsA|

; 597  :         if(pId2->pszName == NULL || _tcscmp(pId1->pszName, pId2->pszName) != 0) {

  0002c	e3530000	 cmp         r3, #0
  00030	0a000010	 beq         |$LN7@DeviceIdsA|
  00034	e1a01003	 mov         r1, r3
  00038	eb000000	 bl          wcscmp
  0003c	e3500000	 cmp         r0, #0
  00040	1a00000c	 bne         |$LN7@DeviceIdsA|
  00044		 |$LN22@DeviceIdsA|

; 599  :         }
; 600  :     }
; 601  : 
; 602  :     // check guid values
; 603  :     if(fEqual == TRUE) {
; 604  :         if(pId1->pGuid == NULL) {

  00044	e5963000	 ldr         r3, [r6]
  00048	e1b00003	 movs        r0, r3

; 605  :             if(pId2->pGuid != NULL) {

  0004c	e5953000	 ldr         r3, [r5]
  00050	1a000001	 bne         |$LN5@DeviceIdsA|
  00054	e3530000	 cmp         r3, #0

; 606  :                 fEqual = FALSE;
; 607  :             }
; 608  :         } else {

  00058	ea000005	 b           |$LN23@DeviceIdsA|
  0005c		 |$LN5@DeviceIdsA|

; 609  :             if(pId2->pGuid == NULL || *pId1->pGuid != *pId2->pGuid) {

  0005c	e3530000	 cmp         r3, #0
  00060	0a000004	 beq         |$LN7@DeviceIdsA|
  00064	e3a02010	 mov         r2, #0x10
  00068	e1a01003	 mov         r1, r3
  0006c	eb000000	 bl          memcmp
  00070	e3500000	 cmp         r0, #0
  00074		 |$LN23@DeviceIdsA|
  00074	0a000000	 beq         |$LN2@DeviceIdsA|
  00078		 |$LN7@DeviceIdsA|

; 598  :             fEqual = FALSE;

  00078	e3a04000	 mov         r4, #0
  0007c		 |$LN2@DeviceIdsA|

; 610  :                 fEqual = FALSE;
; 611  :             }
; 612  :         }
; 613  :     }
; 614  : 
; 615  :     return fEqual;
; 616  : }

  0007c	e1a00004	 mov         r0, r4
  00080	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00084	e12fff1e	 bx          lr
  00088		 |$M35005|

			 ENDP  ; |?DeviceIdsAreEqual@@YAHPAU_DeviceId_tag@@0@Z|, DeviceIdsAreEqual

	EXPORT	|DeviceStateCreate|
	EXPORT	|??_C@_1FC@GGBMAKFK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AAu?$AAr?$AAe?$AA?5?$AAf?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@CBFALEMH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAr?$AAu?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@PDGPMOEE@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@GHMJBDJO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AAd?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?$CI?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?0?$AA?5@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T35044| DCD	|$LN31@DeviceStat|
	DCD	0xc0005a05

  00000			 AREA	 |.pdata|, PDATA
|$T35046| DCD	|$LN14@DeviceStat|
	DCD	0x40000a02

  00000			 AREA	 |.xdata|, DATA
|$T35042| DCD	0x1
	DCD	|$LN18@DeviceStat|
	DCD	|$LN19@DeviceStat|
	DCD	|$LN14@DeviceStat|
	DCD	|$LN15@DeviceStat|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@GGBMAKFK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AAu?$AAr?$AAe?$AA?5?$AAf?$AAo@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "u"
	DCB	0x0, "l", 0x0, "d", 0x0, "n", 0x0, "'", 0x0, "t", 0x0, " "
	DCB	0x0, "c", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, " ", 0x0, "s", 0x0, "t", 0x0, "r", 0x0, "u", 0x0, "c"
	DCB	0x0, "t", 0x0, "u", 0x0, "r", 0x0, "e", 0x0, " ", 0x0, "f"
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s"
	DCB	0x0, "'", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@CBFALEMH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAr?$AAu?$AAc@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "c"
	DCB	0x0, "e", 0x0, "p", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "r", 0x0, "u"
	DCB	0x0, "c", 0x0, "t", 0x0, "u", 0x0, "r", 0x0, "e", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@PDGPMOEE@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "C", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@GHMJBDJO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AAd?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?$CI?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?0?$AA?5@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, " "
	DCB	0x0, "(", 0x0, "n", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, " "
	DCB	0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'", 0x0, ")", 0x0, ","
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "f", 0x0, "c", 0x0, "n"
	DCB	0x0, "t", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T35042|

  00008		 |DeviceStateCreate| PROC

; 624  : {

  00008		 |$LN31@DeviceStat|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d0001	 stmdb       sp!, {r0}
  00010	e92d58f0	 stmdb       sp!, {r4 - r7, r11, r12, lr}
  00014	e28db01c	 add         r11, sp, #0x1C
  00018	e24dd010	 sub         sp, sp, #0x10
  0001c		 |$LN29@DeviceStat|
  0001c	e1a06000	 mov         r6, r0
  00020	e58b6000	 str         r6, [r11]

; 625  :     BOOL fOk = FALSE;
; 626  :     PDEVICE_STATE pds = NULL;

  00024	e3a03000	 mov         r3, #0
  00028	e3a04000	 mov         r4, #0
  0002c	e50b3024	 str         r3, [r11, #-0x24]
  00030	e50b4028	 str         r4, [r11, #-0x28]
  00034		 |$LN18@DeviceStat|

; 627  : 
; 628  : #ifndef SHIP_BUILD
; 629  :     SETFNAME(_T("DeviceStateCreate"));
; 630  : #endif
; 631  : 
; 632  :     PREFAST_DEBUGCHK(pszName != NULL);
; 633  : 
; 634  :     __try {
; 635  :         DWORD dwSize = sizeof(*pds) + ((_tcslen(pszName) + 1) * sizeof(pszName[0]));

  00034	e1a00006	 mov         r0, r6
  00038	eb000000	 bl          wcslen
  0003c	e2803039	 add         r3, r0, #0x39
  00040	e1a00083	 mov         r0, r3, lsl #1

; 636  :         pds = (PDEVICE_STATE) PmAlloc(dwSize);

  00044	eb000000	 bl          PmAlloc
  00048	e1b05000	 movs        r5, r0
  0004c	e50b5024	 str         r5, [r11, #-0x24]

; 637  :         if(pds != NULL) {

  00050	0a000025	 beq         |$LN24@DeviceStat|

; 638  :             LPTSTR pszNameCopy = (LPTSTR) ((LPBYTE) pds + sizeof(*pds));
; 639  :             memset(pds, 0, sizeof(*pds));

  00054	e3a02070	 mov         r2, #0x70
  00058	e3a01000	 mov         r1, #0
  0005c	e1a00005	 mov         r0, r5
  00060	e2854070	 add         r4, r5, #0x70
  00064	eb000000	 bl          memset

; 640  :             _tcscpy(pszNameCopy, pszName);

  00068	e1a01006	 mov         r1, r6
  0006c	e1a00004	 mov         r0, r4
  00070	eb000000	 bl          wcscpy

; 641  :             pds->pszName = pszNameCopy;

  00074	e5854000	 str         r4, [r5]

; 642  :             pds->curDx = D0;

  00078	e3a02000	 mov         r2, #0
  0007c	e5852004	 str         r2, [r5, #4]

; 643  :             pds->floorDx = PwrDeviceUnspecified;

  00080	e3e03000	 mvn         r3, #0
  00084	e5853008	 str         r3, [r5, #8]

; 644  :             pds->ceilingDx = PwrDeviceUnspecified;

  00088	e585300c	 str         r3, [r5, #0xC]

; 645  :             pds->setDx = PwrDeviceUnspecified;

  0008c	e5853010	 str         r3, [r5, #0x10]

; 646  :             pds->lastReqDx = D0;

  00090	e5852014	 str         r2, [r5, #0x14]

; 647  :             pds->actualDx = D0;

  00094	e5852018	 str         r2, [r5, #0x18]

; 648  :             pds->pendingDx = PwrDeviceUnspecified;

  00098	e585301c	 str         r3, [r5, #0x1C]

; 649  :             pds->dwNumPending = 0;

  0009c	e5852020	 str         r2, [r5, #0x20]

; 650  :             pds->pParent = NULL;

  000a0	e5852024	 str         r2, [r5, #0x24]

; 651  :             pds->dwRefCount = 1;

  000a4	e3a04001	 mov         r4, #1
  000a8	e5854058	 str         r4, [r5, #0x58]

; 652  :             pds->hDevice = INVALID_HANDLE_VALUE;

  000ac	e585305c	 str         r3, [r5, #0x5C]

; 653  :             pds->pListHead = NULL;
; 654  :             pds->pNext = NULL;
; 655  :             pds->pPrev = NULL;
; 656  :             PMLOGMSG(ZONE_REFCNT, (_T("%s: created 0x%08x (name '%s'), refcnt is %d\r\n"),
; 657  :                 pszFname, pds, pszName, pds->dwRefCount));

  000b0	e59f70d8	 ldr         r7, [pc, #0xD8]
  000b4	e5852064	 str         r2, [r5, #0x64]
  000b8	e5852068	 str         r2, [r5, #0x68]
  000bc	e585206c	 str         r2, [r5, #0x6C]
  000c0	e5973440	 ldr         r3, [r7, #0x440]
  000c4	e3130040	 tst         r3, #0x40
  000c8	1595e058	 ldrne       lr, [r5, #0x58]
  000cc	159f00c0	 ldrne       r0, [pc, #0xC0]
  000d0	159f10ac	 ldrne       r1, [pc, #0xAC]
  000d4	11a03006	 movne       r3, r6
  000d8	11a02005	 movne       r2, r5
  000dc	158de000	 strne       lr, [sp]
  000e0	1b000000	 blne        CeLogMsg

; 658  :             fOk = TRUE;

  000e4	e50b4028	 str         r4, [r11, #-0x28]
  000e8	ea000000	 b           |$LN19@DeviceStat|
  000ec		 |$LN24@DeviceStat|
  000ec	e59f709c	 ldr         r7, [pc, #0x9C]
  000f0		 |$LN19@DeviceStat|

; 659  :         }
; 660  :     }

  000f0	ea000008	 b           |$LN20@DeviceStat|
  000f4		 |$LN15@DeviceStat|

; 662  :         PMLOGMSG(ZONE_WARN, (_T("%s: exception initializing structure\r\n"), pszFname));

  000f4	e59f7094	 ldr         r7, [pc, #0x94]
  000f8	e5973440	 ldr         r3, [r7, #0x440]
  000fc	e3130002	 tst         r3, #2
  00100	159f0084	 ldrne       r0, [pc, #0x84]
  00104	159f1078	 ldrne       r1, [pc, #0x78]
  00108	1b000000	 blne        CeLogMsg
  0010c	e59b6000	 ldr         r6, [r11]
  00110	e51b4028	 ldr         r4, [r11, #-0x28]
  00114	e51b5024	 ldr         r5, [r11, #-0x24]
  00118		 |$LN20@DeviceStat|

; 663  :     }
; 664  : 
; 665  :     if(!fOk) {

  00118	e3540000	 cmp         r4, #0
  0011c	1a000004	 bne         |$LN1@DeviceStat|

; 666  :         if(pds != NULL) {

  00120	e3550000	 cmp         r5, #0
  00124	0a000004	 beq         |$LN28@DeviceStat|

; 667  :             PmFree(pds);

  00128	e1a00005	 mov         r0, r5
  0012c	eb000000	 bl          PmFree

; 668  :             pds = NULL;

  00130	e3a05000	 mov         r5, #0
  00134		 |$LN1@DeviceStat|

; 669  :         }
; 670  :     }
; 671  : 
; 672  :     PMLOGMSG(pds == NULL && ZONE_WARN, (_T("%s: couldn't create structure for '%s'\r\n"),
; 673  :         pszFname, pszName));

  00134	e3550000	 cmp         r5, #0
  00138	1a000008	 bne         |$LN5@DeviceStat|
  0013c		 |$LN28@DeviceStat|
  0013c	e5973440	 ldr         r3, [r7, #0x440]
  00140	e3130002	 tst         r3, #2
  00144	0a000005	 beq         |$LN5@DeviceStat|
  00148	e59f0038	 ldr         r0, [pc, #0x38]
  0014c	e1a02006	 mov         r2, r6
  00150	e59f102c	 ldr         r1, [pc, #0x2C]
  00154	eb000000	 bl          CeLogMsg

; 674  :     return pds;

  00158	ea000000	 b           |$LN5@DeviceStat|
  0015c		 |$LN26@DeviceStat|
  0015c	e51b5020	 ldr         r5, [r11, #-0x20]
  00160		 |$LN5@DeviceStat|

; 675  : }

  00160	e1a00005	 mov         r0, r5
  00164	e24bd01c	 sub         sp, r11, #0x1C
  00168	e89d68f0	 ldmia       sp, {r4 - r7, r11, sp, lr}
  0016c	e12fff1e	 bx          lr

			 ENDP  ; |DeviceStateCreate|

  00170		 |$LN14@DeviceStat|
  00170		 |$LN30@DeviceStat|

; 661  :     __except(EXCEPTION_EXECUTE_HANDLER) {

  00170	e52de004	 str         lr, [sp, #-4]!
  00174	e24dd004	 sub         sp, sp, #4
  00178		 |$LN17@DeviceStat|
  00178		 |$LN33@DeviceStat|
  00178	e3a00001	 mov         r0, #1
  0017c		 |$LN16@DeviceStat|
  0017c	e28dd004	 add         sp, sp, #4
  00180	e49df004	 ldr         pc, [sp], #4
  00184		 |$LN35@DeviceStat|
  00184		 |$LN36@DeviceStat|
  00184	00000000	 DCD         |??_C@_1CE@PDGPMOEE@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?$AA@|
  00188		 |$LN37@DeviceStat|
  00188	00000000	 DCD         |??_C@_1FC@GGBMAKFK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AAu?$AAr?$AAe?$AA?5?$AAf?$AAo@|
  0018c		 |$LN38@DeviceStat|
  0018c	00000000	 DCD         |??_C@_1EO@CBFALEMH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAi?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAr?$AAu?$AAc@|
  00190		 |$LN39@DeviceStat|
  00190	00000000	 DCD         |dpCurSettings|
  00194		 |$LN40@DeviceStat|
  00194	00000000	 DCD         |??_C@_1FO@GHMJBDJO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AAd?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?$CI?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?0?$AA?5@|
  00198		 |$LN34@DeviceStat|
  00198		 |$LN32@DeviceStat|
	EXPORT	|DeviceStateDecRef|
	EXPORT	|DeviceStateDestroy|
	EXPORT	|??_C@_1CG@EFCODPEH@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AAD?$AAe?$AAs?$AAt?$AAr?$AAo?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@IOMFAGMF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAl?$AAe?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T35077| DCD	|$LN20@DeviceStat@2|
	DCD	0x40001d01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@EFCODPEH@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AAD?$AAe?$AAs?$AAt?$AAr?$AAo?$AAy?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "D", 0x0, "e"
	DCB	0x0, "s", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "y", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@IOMFAGMF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAl?$AAe?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "l"
	DCB	0x0, "e", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DeviceStateDestroy| PROC

; 681  : {

  00000		 |$LN20@DeviceStat@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M35074|
  00004	e1a04000	 mov         r4, r0

; 682  :     BOOL fOk = TRUE;
; 683  : 
; 684  : #ifndef SHIP_BUILD
; 685  :     SETFNAME(_T("DeviceStateDestroy"));
; 686  : #endif
; 687  : 
; 688  :     PMLOGMSG(ZONE_REFCNT, (_T("%s: deleting 0x%08x\r\n"), pszFname, pds));

  00008	e59f3060	 ldr         r3, [pc, #0x60]
  0000c	e5933440	 ldr         r3, [r3, #0x440]
  00010	e3130040	 tst         r3, #0x40
  00014	159f1050	 ldrne       r1, [pc, #0x50]
  00018	159f0048	 ldrne       r0, [pc, #0x48]
  0001c	11a02004	 movne       r2, r4
  00020	1b000000	 blne        CeLogMsg

; 689  :     if(pds != NULL) {

  00024	e3540000	 cmp         r4, #0
  00028	0a00000b	 beq         |$LN3@DeviceStat@2|

; 690  :         if(pds->pParent != NULL) DeviceStateDecRef(pds->pParent);

  0002c	e5943024	 ldr         r3, [r4, #0x24]
  00030	e3530000	 cmp         r3, #0
  00034	11a00003	 movne       r0, r3
  00038	1b000000	 blne        DeviceStateDecRef

; 691  :         if(pds->hDevice != INVALID_HANDLE_VALUE) {

  0003c	e594005c	 ldr         r0, [r4, #0x5C]
  00040	e3700001	 cmn         r0, #1

; 692  :             PREFAST_DEBUGCHK(pds->pInterface != NULL);
; 693  :             pds->pInterface->pfnCloseDevice(pds->hDevice);

  00044	15943060	 ldrne       r3, [r4, #0x60]
  00048	15933008	 ldrne       r3, [r3, #8]
  0004c	11a0e00f	 movne       lr, pc
  00050	112fff13	 bxne        r3

; 694  :         }
; 695  :         PmFree(pds);

  00054	e1a00004	 mov         r0, r4
  00058	eb000000	 bl          PmFree
  0005c		 |$LN3@DeviceStat@2|

; 696  :     }
; 697  : 
; 698  :     return fOk;

  0005c	e3a00001	 mov         r0, #1

; 699  : }

  00060	e8bd4010	 ldmia       sp!, {r4, lr}
  00064	e12fff1e	 bx          lr
  00068		 |$LN21@DeviceStat@2|
  00068		 |$LN22@DeviceStat@2|
  00068	00000000	 DCD         |??_C@_1CM@IOMFAGMF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAl?$AAe?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  0006c		 |$LN23@DeviceStat@2|
  0006c	00000000	 DCD         |??_C@_1CG@EFCODPEH@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AAD?$AAe?$AAs?$AAt?$AAr?$AAo?$AAy?$AA?$AA@|
  00070		 |$LN24@DeviceStat@2|
  00070	00000000	 DCD         |dpCurSettings|
  00074		 |$M35075|

			 ENDP  ; |DeviceStateDestroy|

	EXPORT	|DeviceStateAddRef|
	EXPORT	|??_C@_1CE@MPJLADIF@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AAA?$AAd?$AAd?$AAR?$AAe?$AAf?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@LALFIHHK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAf?$AAc?$AAn?$AAt?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AA?$CF?$AAd?$AA?$AN@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T35097| DCD	|$LN11@DeviceStat@3|
	DCD	0x40001601

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@MPJLADIF@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AAA?$AAd?$AAd?$AAR?$AAe?$AAf?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "A", 0x0, "d"
	DCB	0x0, "d", 0x0, "R", 0x0, "e", 0x0, "f", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@LALFIHHK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAf?$AAc?$AAn?$AAt?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AA?$CF?$AAd?$AA?$AN@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "f"
	DCB	0x0, "c", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "f", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, " ", 0x0, "s", 0x0, "e", 0x0, "t"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DeviceStateAddRef| PROC

; 704  : {

  00000		 |$LN11@DeviceStat@3|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M35094|
  00004	e1a04000	 mov         r4, r0

; 705  : #ifndef SHIP_BUILD
; 706  :     SETFNAME(_T("DeviceStateAddRef"));
; 707  : #endif
; 708  : 
; 709  :     PREFAST_DEBUGCHK(pds != NULL);
; 710  : 
; 711  :     PMLOCK();

  00008	e59f0038	 ldr         r0, [pc, #0x38]
  0000c	eb000000	 bl          EnterCriticalSection

; 712  :     pds->dwRefCount++;

  00010	e5943058	 ldr         r3, [r4, #0x58]

; 713  :     PMLOGMSG(ZONE_REFCNT, (_T("%s: refcnt for 0x%08x set to %d\r\n"), pszFname,
; 714  :         pds, pds->dwRefCount));

  00014	e59f2038	 ldr         r2, [pc, #0x38]
  00018	e2833001	 add         r3, r3, #1
  0001c	e5843058	 str         r3, [r4, #0x58]
  00020	e5922440	 ldr         r2, [r2, #0x440]
  00024	e3120040	 tst         r2, #0x40
  00028	159f1020	 ldrne       r1, [pc, #0x20]
  0002c	159f0018	 ldrne       r0, [pc, #0x18]
  00030	11a02004	 movne       r2, r4
  00034	1b000000	 blne        CeLogMsg

; 715  :     PMUNLOCK();

  00038	e59f0008	 ldr         r0, [pc, #8]
  0003c	eb000000	 bl          LeaveCriticalSection

; 716  : }

  00040	e8bd4010	 ldmia       sp!, {r4, lr}
  00044	e12fff1e	 bx          lr
  00048		 |$LN12@DeviceStat@3|
  00048		 |$LN13@DeviceStat@3|
  00048	00000000	 DCD         |gcsPowerManager|
  0004c		 |$LN14@DeviceStat@3|
  0004c	00000000	 DCD         |??_C@_1EE@LALFIHHK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAf?$AAc?$AAn?$AAt?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AA?$CF?$AAd?$AA?$AN@|
  00050		 |$LN15@DeviceStat@3|
  00050	00000000	 DCD         |??_C@_1CE@MPJLADIF@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AAA?$AAd?$AAd?$AAR?$AAe?$AAf?$AA?$AA@|
  00054		 |$LN16@DeviceStat@3|
  00054	00000000	 DCD         |dpCurSettings|
  00058		 |$M35095|

			 ENDP  ; |DeviceStateAddRef|

	EXPORT	|??_C@_1CE@DCEBDKPO@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AAD?$AAe?$AAc?$AAR?$AAe?$AAf?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T35119| DCD	|$LN13@DeviceStat@4|
	DCD	0x40001d01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@DCEBDKPO@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AAD?$AAe?$AAc?$AAR?$AAe?$AAf?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "D", 0x0, "e"
	DCB	0x0, "c", 0x0, "R", 0x0, "e", 0x0, "f", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DeviceStateDecRef| PROC

; 722  : {

  00000		 |$LN13@DeviceStat@4|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M35116|
  00004	e1a04000	 mov         r4, r0

; 723  :     BOOL fDestroy = FALSE;
; 724  : 
; 725  : #ifndef SHIP_BUILD
; 726  :     SETFNAME(_T("DeviceStateDecRef"));
; 727  : #endif
; 728  : 
; 729  :     PREFAST_DEBUGCHK(pds != NULL);
; 730  : 
; 731  :     PMLOCK();

  00008	e59f0054	 ldr         r0, [pc, #0x54]
  0000c	e3a05000	 mov         r5, #0
  00010	eb000000	 bl          EnterCriticalSection

; 732  :     DEBUGCHK(pds->dwRefCount > 0);
; 733  :     pds->dwRefCount--;

  00014	e5943058	 ldr         r3, [r4, #0x58]

; 734  :     PMLOGMSG(ZONE_REFCNT, (_T("%s: refcnt for 0x%08x set to %d\r\n"), pszFname,
; 735  :         pds, pds->dwRefCount));

  00018	e59f2050	 ldr         r2, [pc, #0x50]
  0001c	e2433001	 sub         r3, r3, #1
  00020	e5843058	 str         r3, [r4, #0x58]
  00024	e5922440	 ldr         r2, [r2, #0x440]
  00028	e3120040	 tst         r2, #0x40
  0002c	159f1038	 ldrne       r1, [pc, #0x38]
  00030	159f0030	 ldrne       r0, [pc, #0x30]
  00034	11a02004	 movne       r2, r4
  00038	1b000000	 blne        CeLogMsg

; 736  :     if(pds->dwRefCount == 0) {

  0003c	e5943058	 ldr         r3, [r4, #0x58]

; 737  :         DEBUGCHK(pds->pListHead == NULL && pds->pNext == NULL && pds->pPrev == NULL);
; 738  :         fDestroy = TRUE;
; 739  :     }
; 740  :     PMUNLOCK();

  00040	e59f001c	 ldr         r0, [pc, #0x1C]
  00044	e3530000	 cmp         r3, #0
  00048	03a05001	 moveq       r5, #1
  0004c	eb000000	 bl          LeaveCriticalSection

; 741  : 
; 742  :     // is it time to get rid of the device?
; 743  :     if(fDestroy) {

  00050	e3550000	 cmp         r5, #0

; 744  :         DeviceStateDestroy(pds);

  00054	11a00004	 movne       r0, r4
  00058	1b000000	 blne        DeviceStateDestroy

; 745  :     }
; 746  : }

  0005c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$LN14@DeviceStat@4|
  00064		 |$LN15@DeviceStat@4|
  00064	00000000	 DCD         |gcsPowerManager|
  00068		 |$LN16@DeviceStat@4|
  00068	00000000	 DCD         |??_C@_1EE@LALFIHHK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAf?$AAc?$AAn?$AAt?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AAs?$AAe?$AAt?$AA?5?$AAt?$AAo?$AA?5?$AA?$CF?$AAd?$AA?$AN@|
  0006c		 |$LN17@DeviceStat@4|
  0006c	00000000	 DCD         |??_C@_1CE@DCEBDKPO@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AAD?$AAe?$AAc?$AAR?$AAe?$AAf?$AA?$AA@|
  00070		 |$LN18@DeviceStat@4|
  00070	00000000	 DCD         |dpCurSettings|
  00074		 |$M35117|

			 ENDP  ; |DeviceStateDecRef|

	EXPORT	|DeviceStateAddList|
	EXPORT	|??_C@_1CG@GHDPCNI@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AAA?$AAd?$AAd?$AAL?$AAi?$AAs?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@PFMPBNAG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAa?$AAd?$AAd?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAt?$AAo?$AA?5?$AAl?$AAi?$AAs?$AAt@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T35143| DCD	|$LN12@DeviceStat@5|
	DCD	0x40002602

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@GHDPCNI@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AAA?$AAd?$AAd?$AAL?$AAi?$AAs?$AAt?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "A", 0x0, "d"
	DCB	0x0, "d", 0x0, "L", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@PFMPBNAG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAa?$AAd?$AAd?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAt?$AAo?$AA?5?$AAl?$AAi?$AAs?$AAt@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "a", 0x0, "d", 0x0, "d"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, " ", 0x0, "("
	DCB	0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'", 0x0, ")", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DeviceStateAddList| PROC

; 752  : {

  00000		 |$LN12@DeviceStat@5|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M35140|
  00008	e1a04001	 mov         r4, r1
  0000c	e1a05000	 mov         r5, r0

; 753  :     BOOL fOk = TRUE;
; 754  : 
; 755  : #ifndef SHIP_BUILD
; 756  :     SETFNAME(_T("DeviceStateAddList"));
; 757  : #endif
; 758  : 
; 759  :     PREFAST_DEBUGCHK(pdl != NULL);
; 760  :     PREFAST_DEBUGCHK(pdsDevice != NULL);
; 761  :     DEBUGCHK(pdsDevice->pNext == NULL && pdsDevice->pPrev == NULL);
; 762  :     DEBUGCHK(pdsDevice->dwRefCount == 1);
; 763  :     DEBUGCHK(pdsDevice->pListHead == NULL);
; 764  : 
; 765  :     PMLOGMSG(ZONE_REFCNT | ZONE_DEVICE, 
; 766  :         (_T("%s: adding 0x%08x ('%s') to list 0x%08x\r\n"),
; 767  :         pszFname, pdsDevice, pdsDevice->pszName, pdl));

  00010	e59f307c	 ldr         r3, [pc, #0x7C]
  00014	e5933440	 ldr         r3, [r3, #0x440]
  00018	e3130050	 tst         r3, #0x50
  0001c	15943000	 ldrne       r3, [r4]
  00020	159f1068	 ldrne       r1, [pc, #0x68]
  00024	159f0060	 ldrne       r0, [pc, #0x60]
  00028	11a02004	 movne       r2, r4
  0002c	158d5000	 strne       r5, [sp]
  00030	1b000000	 blne        CeLogMsg

; 768  : 
; 769  :     // put the new device at the head of the list
; 770  :     PMLOCK();

  00034	e59f004c	 ldr         r0, [pc, #0x4C]
  00038	eb000000	 bl          EnterCriticalSection

; 771  :     pdsDevice->pListHead = pdl;

  0003c	e5845064	 str         r5, [r4, #0x64]

; 772  :     pdsDevice->pNext = pdl->pList;

  00040	e5953004	 ldr         r3, [r5, #4]

; 773  :     pdsDevice->pPrev = NULL;

  00044	e3a02000	 mov         r2, #0
  00048	e584206c	 str         r2, [r4, #0x6C]
  0004c	e5843068	 str         r3, [r4, #0x68]

; 774  :     if(pdl->pList != NULL) {

  00050	e5953004	 ldr         r3, [r5, #4]

; 775  :         pdl->pList->pPrev = pdsDevice;
; 776  :     }
; 777  :     pdl->pList = pdsDevice;
; 778  : 
; 779  :     // copy interface method pointers from the device class
; 780  :     DEBUGCHK(pdl->pInterface != NULL);
; 781  :     pdsDevice->pInterface = pdl->pInterface;
; 782  : 
; 783  :     DeviceStateAddRef(pdsDevice);

  00054	e1a00004	 mov         r0, r4
  00058	e3530000	 cmp         r3, #0
  0005c	1583406c	 strne       r4, [r3, #0x6C]
  00060	e5953010	 ldr         r3, [r5, #0x10]
  00064	e5854004	 str         r4, [r5, #4]
  00068	e5843060	 str         r3, [r4, #0x60]
  0006c	eb000000	 bl          DeviceStateAddRef

; 784  :     PMUNLOCK();

  00070	e59f0010	 ldr         r0, [pc, #0x10]
  00074	eb000000	 bl          LeaveCriticalSection

; 785  : 
; 786  :     return fOk;

  00078	e3a00001	 mov         r0, #1

; 787  : }

  0007c	e28dd004	 add         sp, sp, #4
  00080	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00084	e12fff1e	 bx          lr
  00088		 |$LN13@DeviceStat@5|
  00088		 |$LN14@DeviceStat@5|
  00088	00000000	 DCD         |gcsPowerManager|
  0008c		 |$LN15@DeviceStat@5|
  0008c	00000000	 DCD         |??_C@_1FE@PFMPBNAG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAa?$AAd?$AAd?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAt?$AAo?$AA?5?$AAl?$AAi?$AAs?$AAt@|
  00090		 |$LN16@DeviceStat@5|
  00090	00000000	 DCD         |??_C@_1CG@GHDPCNI@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AAA?$AAd?$AAd?$AAL?$AAi?$AAs?$AAt?$AA?$AA@|
  00094		 |$LN17@DeviceStat@5|
  00094	00000000	 DCD         |dpCurSettings|
  00098		 |$M35141|

			 ENDP  ; |DeviceStateAddList|

	EXPORT	|DeviceStateRemList|
	EXPORT	|??_C@_1CG@MJDKKDFD@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AAR?$AAe?$AAm?$AAL?$AAi?$AAs?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@HONKCJKL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAm?$AAo?$AAv?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T35166| DCD	|$LN17@DeviceStat@6|
	DCD	0x40003202

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@MJDKKDFD@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AAR?$AAe?$AAm?$AAL?$AAi?$AAs?$AAt?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "R", 0x0, "e"
	DCB	0x0, "m", 0x0, "L", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@HONKCJKL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAm?$AAo?$AAv?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "m"
	DCB	0x0, "o", 0x0, "v", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, " ", 0x0, "(", 0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'"
	DCB	0x0, ")", 0x0, " ", 0x0, "f", 0x0, "r", 0x0, "o", 0x0, "m"
	DCB	0x0, " ", 0x0, "l", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DeviceStateRemList| PROC

; 793  : {

  00000		 |$LN17@DeviceStat@6|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M35163|
  00008	e1a04000	 mov         r4, r0

; 794  :     BOOL fOk = TRUE;
; 795  : 
; 796  : #ifndef SHIP_BUILD
; 797  :     SETFNAME(_T("DeviceStateRemList"));
; 798  : #endif
; 799  : 
; 800  :     PREFAST_DEBUGCHK(pds != NULL);
; 801  :     PREFAST_DEBUGCHK(pds->pListHead != NULL);
; 802  :     
; 803  :     PMLOGMSG(ZONE_REFCNT | ZONE_DEVICE, 
; 804  :         (_T("%s: removing 0x%08x ('%s') from list 0x%08x\r\n"),
; 805  :         pszFname, pds, pds->pszName, pds->pListHead));

  0000c	e59f30b0	 ldr         r3, [pc, #0xB0]
  00010	e5933440	 ldr         r3, [r3, #0x440]
  00014	e3130050	 tst         r3, #0x50
  00018	15942064	 ldrne       r2, [r4, #0x64]
  0001c	15943000	 ldrne       r3, [r4]
  00020	159f1098	 ldrne       r1, [pc, #0x98]
  00024	159f0090	 ldrne       r0, [pc, #0x90]
  00028	158d2000	 strne       r2, [sp]
  0002c	11a02004	 movne       r2, r4
  00030	1b000000	 blne        CeLogMsg

; 806  : 
; 807  :     PMLOCK();

  00034	e59f007c	 ldr         r0, [pc, #0x7C]
  00038	eb000000	 bl          EnterCriticalSection

; 808  : 
; 809  :     // are we at the head of the list?
; 810  :     if(pds->pPrev != NULL) {

  0003c	e594306c	 ldr         r3, [r4, #0x6C]
  00040	e3a01000	 mov         r1, #0
  00044	e1b02003	 movs        r2, r3

; 811  :         pds->pPrev->pNext = pds->pNext;

  00048	15943068	 ldrne       r3, [r4, #0x68]
  0004c	15823068	 strne       r3, [r2, #0x68]
  00050	1a000005	 bne         |$LN5@DeviceStat@6|

; 812  :     } else {
; 813  :         // not that if pNext == NULL && pPrev == NULL we are the only list
; 814  :         // member and the assignment to the list head will set it to NULL (meaning
; 815  :         // empty).
; 816  :         if(pds->pNext != NULL) {

  00054	e5943068	 ldr         r3, [r4, #0x68]
  00058	e3530000	 cmp         r3, #0

; 817  :             pds->pNext->pPrev = NULL;

  0005c	1583106c	 strne       r1, [r3, #0x6C]

; 818  :         }
; 819  :         pds->pListHead->pList = pds->pNext;

  00060	e5942064	 ldr         r2, [r4, #0x64]
  00064	e5943068	 ldr         r3, [r4, #0x68]
  00068	e5823004	 str         r3, [r2, #4]
  0006c		 |$LN5@DeviceStat@6|

; 820  :     }
; 821  :     
; 822  :     // are we at the tail of the list?
; 823  :     if(pds->pNext != NULL) {

  0006c	e5943068	 ldr         r3, [r4, #0x68]
  00070	e1b02003	 movs        r2, r3

; 824  :         pds->pNext->pPrev = pds->pPrev;

  00074	1594306c	 ldrne       r3, [r4, #0x6C]
  00078	1582306c	 strne       r3, [r2, #0x6C]
  0007c	1a000002	 bne         |$LN1@DeviceStat@6|

; 825  :     } else {
; 826  :         if(pds->pPrev != NULL) {

  00080	e594306c	 ldr         r3, [r4, #0x6C]
  00084	e3530000	 cmp         r3, #0

; 827  :             pds->pPrev->pNext = NULL;

  00088	15831068	 strne       r1, [r3, #0x68]
  0008c		 |$LN1@DeviceStat@6|

; 828  :         }
; 829  :     }
; 830  : 
; 831  :     // clear list pointers
; 832  :     pds->pNext = NULL;
; 833  :     pds->pPrev = NULL;
; 834  :     pds->pListHead = NULL;
; 835  : 
; 836  :     // decrement the reference count
; 837  :     DeviceStateDecRef(pds);

  0008c	e1a00004	 mov         r0, r4
  00090	e5841068	 str         r1, [r4, #0x68]
  00094	e584106c	 str         r1, [r4, #0x6C]
  00098	e5841064	 str         r1, [r4, #0x64]
  0009c	eb000000	 bl          DeviceStateDecRef

; 838  :         
; 839  :     PMUNLOCK();

  000a0	e59f0010	 ldr         r0, [pc, #0x10]
  000a4	eb000000	 bl          LeaveCriticalSection

; 840  : 
; 841  :     return fOk;

  000a8	e3a00001	 mov         r0, #1

; 842  : }

  000ac	e28dd004	 add         sp, sp, #4
  000b0	e8bd4010	 ldmia       sp!, {r4, lr}
  000b4	e12fff1e	 bx          lr
  000b8		 |$LN18@DeviceStat@6|
  000b8		 |$LN19@DeviceStat@6|
  000b8	00000000	 DCD         |gcsPowerManager|
  000bc		 |$LN20@DeviceStat@6|
  000bc	00000000	 DCD         |??_C@_1FM@HONKCJKL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAm?$AAo?$AAv?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?5?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5@|
  000c0		 |$LN21@DeviceStat@6|
  000c0	00000000	 DCD         |??_C@_1CG@MJDKKDFD@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AAR?$AAe?$AAm?$AAL?$AAi?$AAs?$AAt?$AA?$AA@|
  000c4		 |$LN22@DeviceStat@6|
  000c4	00000000	 DCD         |dpCurSettings|
  000c8		 |$M35164|

			 ENDP  ; |DeviceStateRemList|

	EXPORT	|DeviceStateFindList|
	EXPORT	|??_C@_1DO@JAALAKBH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAs?$AAe?$AAa?$AAr?$AAc?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@IDGLAHPA@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AAF?$AAi?$AAn?$AAd?$AAL?$AAi?$AAs?$AAt?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T35206| DCD	|$LN30@DeviceStat@7|
	DCD	0xc0002704

  00000			 AREA	 |.pdata|, PDATA
|$T35208| DCD	|$LN11@DeviceStat@7|
	DCD	0x40000701

  00000			 AREA	 |.xdata|, DATA
|$T35204| DCD	0x1
	DCD	|$LN15@DeviceStat@7|
	DCD	|$LN16@DeviceStat@7|
	DCD	|$LN11@DeviceStat@7|
	DCD	|$LN12@DeviceStat@7|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@JAALAKBH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAs?$AAe?$AAa?$AAr?$AAc?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "c"
	DCB	0x0, "e", 0x0, "p", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "s", 0x0, "e", 0x0, "a", 0x0, "r", 0x0, "c"
	DCB	0x0, "h", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "l"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@IDGLAHPA@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AAF?$AAi?$AAn?$AAd?$AAL?$AAi?$AAs?$AAt?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "F", 0x0, "i"
	DCB	0x0, "n", 0x0, "d", 0x0, "L", 0x0, "i", 0x0, "s", 0x0, "t"
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T35204|

  00008		 |DeviceStateFindList| PROC

; 850  : {

  00008		 |$LN30@DeviceStat@7|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d5830	 stmdb       sp!, {r4, r5, r11, r12, lr}
  00010	e28db014	 add         r11, sp, #0x14
  00014	e24dd008	 sub         sp, sp, #8
  00018		 |$LN28@DeviceStat@7|
  00018	e1a05001	 mov         r5, r1
  0001c	e1a04000	 mov         r4, r0

; 851  :     PDEVICE_STATE pds = NULL;
; 852  : 
; 853  : #ifndef SHIP_BUILD
; 854  :     SETFNAME(_T("DeviceStateFindList"));
; 855  : #endif
; 856  : 
; 857  :     PMLOCK();

  00020	e59f3094	 ldr         r3, [pc, #0x94]
  00024	e59f0084	 ldr         r0, [pc, #0x84]
  00028	e50b3018	 str         r3, [r11, #-0x18]
  0002c	eb000000	 bl          EnterCriticalSection
  00030		 |$LN15@DeviceStat@7|

; 858  : 
; 859  :     __try {
; 860  :         // look for a match
; 861  :         for(pds = pdl->pList; pds != NULL; pds = pds->pNext) {

  00030	e5944004	 ldr         r4, [r4, #4]
  00034		 |$LN27@DeviceStat@7|
  00034	e50b401c	 str         r4, [r11, #-0x1C]
  00038	e3540000	 cmp         r4, #0
  0003c	0a000007	 beq         |$LN16@DeviceStat@7|

; 862  :             if(_tcscmp(pds->pszName, pszName) == 0) {

  00040	e5940000	 ldr         r0, [r4]
  00044	e1a01005	 mov         r1, r5
  00048	eb000000	 bl          wcscmp
  0004c	e3500000	 cmp         r0, #0

; 858  : 
; 859  :     __try {
; 860  :         // look for a match
; 861  :         for(pds = pdl->pList; pds != NULL; pds = pds->pNext) {

  00050	15944068	 ldrne       r4, [r4, #0x68]

; 862  :             if(_tcscmp(pds->pszName, pszName) == 0) {

  00054	1afffff6	 bne         |$LN27@DeviceStat@7|

; 863  :                 // increment the reference count and exit
; 864  :                 DeviceStateAddRef(pds);

  00058	e1a00004	 mov         r0, r4
  0005c	eb000000	 bl          DeviceStateAddRef
  00060		 |$LN16@DeviceStat@7|

; 865  :                 break;
; 866  :             }
; 867  :         }

  00060	ea000007	 b           |$LN17@DeviceStat@7|
  00064		 |$LN12@DeviceStat@7|

; 870  :         PMLOGMSG(ZONE_WARN, (_T("%s: exception searching list\r\n"), pszFname));

  00064	e59f304c	 ldr         r3, [pc, #0x4C]
  00068	e5933440	 ldr         r3, [r3, #0x440]
  0006c	e3130002	 tst         r3, #2
  00070	151b1018	 ldrne       r1, [r11, #-0x18]
  00074	159f0038	 ldrne       r0, [pc, #0x38]
  00078	1b000000	 blne        CeLogMsg

; 871  :         pds = NULL;

  0007c	e3a04000	 mov         r4, #0
  00080	e50b401c	 str         r4, [r11, #-0x1C]
  00084		 |$LN17@DeviceStat@7|

; 872  :     }
; 873  : 
; 874  :     PMUNLOCK();

  00084	e59f0024	 ldr         r0, [pc, #0x24]
  00088	eb000000	 bl          LeaveCriticalSection

; 875  : 
; 876  :     return pds;

  0008c	ea000000	 b           |$LN6@DeviceStat@7|
  00090		 |$LN26@DeviceStat@7|
  00090	e51b4018	 ldr         r4, [r11, #-0x18]
  00094		 |$LN6@DeviceStat@7|

; 877  : }

  00094	e1a00004	 mov         r0, r4
  00098	e24bd014	 sub         sp, r11, #0x14
  0009c	e89d6830	 ldmia       sp, {r4, r5, r11, sp, lr}
  000a0	e12fff1e	 bx          lr

			 ENDP  ; |DeviceStateFindList|

  000a4		 |$LN11@DeviceStat@7|
  000a4		 |$LN29@DeviceStat@7|

; 868  :     }
; 869  :     __except(EXCEPTION_EXECUTE_HANDLER) {

  000a4	e52de004	 str         lr, [sp, #-4]!
  000a8		 |$LN14@DeviceStat@7|
  000a8		 |$LN32@DeviceStat@7|
  000a8	e3a00001	 mov         r0, #1
  000ac		 |$LN13@DeviceStat@7|
  000ac	e49df004	 ldr         pc, [sp], #4
  000b0		 |$LN34@DeviceStat@7|
  000b0		 |$LN35@DeviceStat@7|
  000b0	00000000	 DCD         |gcsPowerManager|
  000b4		 |$LN36@DeviceStat@7|
  000b4	00000000	 DCD         |??_C@_1DO@JAALAKBH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAs?$AAe?$AAa?$AAr?$AAc?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  000b8		 |$LN37@DeviceStat@7|
  000b8	00000000	 DCD         |dpCurSettings|
  000bc		 |$LN38@DeviceStat@7|
  000bc	00000000	 DCD         |??_C@_1CI@IDGLAHPA@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt?$AAe?$AAF?$AAi?$AAn?$AAd?$AAL?$AAi?$AAs?$AAt?$AA?$AA@|
  000c0		 |$LN33@DeviceStat@7|
  000c0		 |$LN31@DeviceStat@7|
	EXPORT	|PowerRestrictionCreate|
	EXPORT	|??_C@_1O@DPFEOIGE@?$AA?$DM?$AAN?$AAU?$AAL?$AAL?$AA?$DO?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@IDMIBKBM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAd?$AAu?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AAu?$AAr?$AAe?$AA?5?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_11LOCGONAA@?$AA?$AA@| [ DATA ]	; `string'
	EXPORT	|??_C@_1CO@JDGHGHGI@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAs?$AAt?$AAr?$AAi?$AAc?$AAt?$AAi?$AAo?$AAn?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T35266| DCD	|$LN45@PowerRestr|
	DCD	0xc0008605

  00000			 AREA	 |.pdata|, PDATA
|$T35268| DCD	|$LN25@PowerRestr|
	DCD	0x40000901

  00000			 AREA	 |.xdata|, DATA
|$T35264| DCD	0x1
	DCD	|$LN29@PowerRestr|
	DCD	|$LN30@PowerRestr|
	DCD	|$LN25@PowerRestr|
	DCD	|$LN26@PowerRestr|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@DPFEOIGE@?$AA?$DM?$AAN?$AAU?$AAL?$AAL?$AA?$DO?$AA?$AA@| DCB "<", 0x0
	DCB	"N", 0x0, "U", 0x0, "L", 0x0, "L", 0x0, ">", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@IDMIBKBM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAd?$AAu?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AAu?$AAr?$AAe?$AA?5?$AAi@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "c"
	DCB	0x0, "e", 0x0, "p", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "d", 0x0, "u", 0x0, "r", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "r", 0x0, "u"
	DCB	0x0, "c", 0x0, "t", 0x0, "u", 0x0, "r", 0x0, "e", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "z", 0x0, "a", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_11LOCGONAA@?$AA?$AA@| DCB 0x0, 0x0		; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@JDGHGHGI@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAs?$AAt?$AAr?$AAi?$AAc?$AAt?$AAi?$AAo?$AAn?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "R", 0x0, "e"
	DCB	0x0, "s", 0x0, "t", 0x0, "r", 0x0, "i", 0x0, "c", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, "C", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T35264|

  00008		 |PowerRestrictionCreate| PROC

; 887  : {

  00008		 |$LN45@PowerRestr|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d000f	 stmdb       sp!, {r0 - r3}
  00010	e92d5ff0	 stmdb       sp!, {r4 - r12, lr}
  00014	e28db028	 add         r11, sp, #0x28
  00018	e24dd020	 sub         sp, sp, #0x20
  0001c		 |$LN43@PowerRestr|
  0001c	e1a05003	 mov         r5, r3
  00020	e50b5034	 str         r5, [r11, #-0x34]
  00024	e50b202c	 str         r2, [r11, #-0x2C]
  00028	e50b1030	 str         r1, [r11, #-0x30]
  0002c	e1a09000	 mov         r9, r0
  00030	e58b9000	 str         r9, [r11]

; 888  :     PDEVICE_POWER_RESTRICTION pdpr = NULL;
; 889  :     BOOL fOk = TRUE;
; 890  : 
; 891  : #ifndef SHIP_BUILD
; 892  :     SETFNAME(_T("PowerRestrictionCreate"));

  00034	e59f7204	 ldr         r7, [pc, #0x204]
  00038	e3a03000	 mov         r3, #0
  0003c	e50b3038	 str         r3, [r11, #-0x38]
  00040	e50b7040	 str         r7, [r11, #-0x40]
  00044	e3a06001	 mov         r6, #1
  00048		 |$LN29@PowerRestr|

; 893  : #endif
; 894  : 
; 895  :     __try {
; 896  :         LPTSTR pszSystemStateCopy = L"";
; 897  :         PDEVICEID pDeviceIdCopy = NULL;

  00048	e3a03000	 mov         r3, #0

; 898  :         DWORD dwDeviceIdSize = DeviceIdSize(pDeviceId);

  0004c	e1a00009	 mov         r0, r9
  00050	e50b3044	 str         r3, [r11, #-0x44]
  00054	e59f81e0	 ldr         r8, [pc, #0x1E0]
  00058	eb000000	 bl          DeviceIdSize
  0005c	e1a03000	 mov         r3, r0
  00060	e50b3048	 str         r3, [r11, #-0x48]

; 899  :         DWORD cchSystemState = 0;
; 900  : 
; 901  :         // allocate resources
; 902  :         DWORD dwSize = sizeof(*pdpr) + dwDeviceIdSize;

  00064	e283401c	 add         r4, r3, #0x1C
  00068	e3a0a000	 mov         r10, #0

; 903  :         if(pszSystemState != NULL) {

  0006c	e3550000	 cmp         r5, #0
  00070	0a000004	 beq         |$LN14@PowerRestr|

; 904  :             cchSystemState = _tcslen(pszSystemState);

  00074	e1a00005	 mov         r0, r5
  00078	eb000000	 bl          wcslen
  0007c	e1a0a000	 mov         r10, r0

; 905  :             dwSize += ((cchSystemState + 1) * sizeof(pszSystemState[0]));

  00080	e28a3001	 add         r3, r10, #1
  00084	e0844083	 add         r4, r4, r3, lsl #1
  00088		 |$LN14@PowerRestr|

; 906  :         }
; 907  :         pdpr = (PDEVICE_POWER_RESTRICTION) PmAlloc(dwSize);

  00088	e1a00004	 mov         r0, r4
  0008c	eb000000	 bl          PmAlloc
  00090	e1b04000	 movs        r4, r0
  00094	e50b4038	 str         r4, [r11, #-0x38]

; 908  :         if(pdpr == NULL) {
; 909  :             fOk = FALSE;

  00098	03a03000	 moveq       r3, #0
  0009c	01a06003	 moveq       r6, r3
  000a0	050b303c	 streq       r3, [r11, #-0x3C]

; 910  :         }
; 911  : 
; 912  :         if(fOk) {

  000a4	e3560000	 cmp         r6, #0
  000a8	0a00000c	 beq         |$LN39@PowerRestr|

; 913  :             // copy the device ID
; 914  :             if(pDeviceId != NULL) {

  000ac	e3590000	 cmp         r9, #0
  000b0	0a00000a	 beq         |$LN39@PowerRestr|

; 915  :                 pDeviceIdCopy = (PDEVICEID) ((LPBYTE) pdpr + sizeof(*pdpr));
; 916  :                 pDeviceIdCopy = DeviceIdCloneIntoBuffer(pDeviceId, pDeviceIdCopy, dwDeviceIdSize);

  000b4	e284101c	 add         r1, r4, #0x1C
  000b8	e51b2048	 ldr         r2, [r11, #-0x48]
  000bc	e1a00009	 mov         r0, r9
  000c0	eb000000	 bl          DeviceIdCloneIntoBuffer
  000c4	e1b03000	 movs        r3, r0
  000c8	e50b3044	 str         r3, [r11, #-0x44]

; 918  :                     fOk = FALSE;

  000cc	e3a02000	 mov         r2, #0

; 917  :                 if(pDeviceIdCopy == NULL) {

  000d0	1a000003	 bne         |$LN10@PowerRestr|

; 918  :                     fOk = FALSE;

  000d4	e1a06002	 mov         r6, r2
  000d8	e50b203c	 str         r2, [r11, #-0x3C]
  000dc	ea000000	 b           |$LN10@PowerRestr|
  000e0		 |$LN39@PowerRestr|
  000e0	e3a02000	 mov         r2, #0
  000e4		 |$LN10@PowerRestr|

; 919  :                 }
; 920  :             }
; 921  :         }
; 922  : 
; 923  :         if(fOk) {

  000e4	e3560000	 cmp         r6, #0
  000e8	0a000014	 beq         |$LN37@PowerRestr|

; 924  :             // copy the system power state name, if it's present
; 925  :             if(pszSystemState != NULL) {

  000ec	e3550000	 cmp         r5, #0
  000f0	0a000011	 beq         |$LN8@PowerRestr|

; 926  :                 // get a pointer to the aggregated buffer we just allocated
; 927  :                 PREFAST_SUPPRESS(12009,"The Size has been pre-calculated");
; 928  :                 pszSystemStateCopy = (LPTSTR) ((LPBYTE) pdpr + sizeof(*pdpr) + dwDeviceIdSize);

  000f4	e51b3048	 ldr         r3, [r11, #-0x48]
  000f8	e0833004	 add         r3, r3, r4
  000fc	e283801c	 add         r8, r3, #0x1C

; 929  :                 
; 930  :                 // Do the copy here because once it's assigned to the structure
; 931  :                 // our allocated buffer will be treated as const.  Convert to lowercase
; 932  :                 // so that we avoid doing localized comparisons when accessing the requirement
; 933  :                 // data.
; 934  :                 for (DWORD dwIndex = 0; dwIndex < cchSystemState; dwIndex++) {

  00100	e1a05002	 mov         r5, r2
  00104		 |$LL7@PowerRestr|
  00104	e155000a	 cmp         r5, r10
  00108	2a000007	 bcs         |$LN5@PowerRestr|

; 935  :                     pszSystemStateCopy[dwIndex] = _totlower(pszSystemState[dwIndex]);

  0010c	e51b3034	 ldr         r3, [r11, #-0x34]
  00110	e0833085	 add         r3, r3, r5, lsl #1
  00114	e1d300b0	 ldrh        r0, [r3]
  00118	eb000000	 bl          towlower
  0011c	e0883085	 add         r3, r8, r5, lsl #1
  00120	e1c300b0	 strh        r0, [r3]

; 929  :                 
; 930  :                 // Do the copy here because once it's assigned to the structure
; 931  :                 // our allocated buffer will be treated as const.  Convert to lowercase
; 932  :                 // so that we avoid doing localized comparisons when accessing the requirement
; 933  :                 // data.
; 934  :                 for (DWORD dwIndex = 0; dwIndex < cchSystemState; dwIndex++) {

  00124	e2855001	 add         r5, r5, #1
  00128	eafffff5	 b           |$LL7@PowerRestr|
  0012c		 |$LN5@PowerRestr|

; 936  :                 }
; 937  :                 pszSystemStateCopy[cchSystemState] = 0;

  0012c	e088308a	 add         r3, r8, r10, lsl #1
  00130	e3a05000	 mov         r5, #0
  00134	e1c350b0	 strh        r5, [r3]
  00138	ea000001	 b           |$LN4@PowerRestr|
  0013c		 |$LN8@PowerRestr|

; 938  :             } else {
; 939  :                 pszSystemStateCopy = NULL;

  0013c	e3a08000	 mov         r8, #0
  00140		 |$LN37@PowerRestr|

; 887  : {

  00140	e3a05000	 mov         r5, #0
  00144		 |$LN4@PowerRestr|

; 940  :             }
; 941  :         }
; 942  :         
; 943  :         // initialize the structure
; 944  :         if(fOk) { 

  00144	e3560000	 cmp         r6, #0
  00148	0a00000e	 beq         |$LN30@PowerRestr|

; 945  :             memset(pdpr, 0, sizeof(*pdpr));

  0014c	e3a0201c	 mov         r2, #0x1C
  00150	e3a01000	 mov         r1, #0
  00154	e1a00004	 mov         r0, r4
  00158	eb000000	 bl          memset

; 946  :             pdpr->pDeviceId = pDeviceIdCopy;
; 947  :             pdpr->hOwner = hOwner;
; 948  :             pdpr->devDx = Dx;
; 949  :             pdpr->pszSystemState = pszSystemStateCopy;
; 950  :             pdpr->dwFlags = dwFlags;

  0015c	e59b3010	 ldr         r3, [r11, #0x10]
  00160	e51b2044	 ldr         r2, [r11, #-0x44]
  00164	e5842000	 str         r2, [r4]
  00168	e51b2030	 ldr         r2, [r11, #-0x30]
  0016c	e5842004	 str         r2, [r4, #4]
  00170	e51b202c	 ldr         r2, [r11, #-0x2C]
  00174	e5842008	 str         r2, [r4, #8]
  00178	e584800c	 str         r8, [r4, #0xC]
  0017c	e5843010	 str         r3, [r4, #0x10]

; 951  :             pdpr->pNext = NULL;

  00180	e5845014	 str         r5, [r4, #0x14]

; 952  :             pdpr->pPrev = NULL;

  00184	e5845018	 str         r5, [r4, #0x18]
  00188		 |$LN30@PowerRestr|

; 953  : 
; 954  :         }
; 955  :     }

  00188	e59f50a8	 ldr         r5, [pc, #0xA8]
  0018c	ea00000a	 b           |$LN31@PowerRestr|
  00190		 |$LN26@PowerRestr|

; 957  :         PMLOGMSG(ZONE_WARN, (_T("%s: exception during structure initialization\r\n"),
; 958  :             pszFname));

  00190	e59f50a0	 ldr         r5, [pc, #0xA0]
  00194	e5953440	 ldr         r3, [r5, #0x440]
  00198	e3130002	 tst         r3, #2
  0019c	e51b7040	 ldr         r7, [r11, #-0x40]
  001a0	159f008c	 ldrne       r0, [pc, #0x8C]
  001a4	11a01007	 movne       r1, r7
  001a8	1b000000	 blne        CeLogMsg

; 959  :         fOk = FALSE;

  001ac	e3a06000	 mov         r6, #0
  001b0	e50b603c	 str         r6, [r11, #-0x3C]
  001b4	e59b9000	 ldr         r9, [r11]
  001b8	e51b4038	 ldr         r4, [r11, #-0x38]
  001bc		 |$LN31@PowerRestr|

; 960  :     }
; 961  : 
; 962  :     // clean up if necessary
; 963  :     if(!fOk) {

  001bc	e3560000	 cmp         r6, #0
  001c0	1a000004	 bne         |$LN1@PowerRestr|

; 964  :         if(pdpr != NULL) {

  001c4	e3540000	 cmp         r4, #0
  001c8	0a000004	 beq         |$LN42@PowerRestr|

; 965  :             PmFree(pdpr);

  001cc	e1a00004	 mov         r0, r4
  001d0	eb000000	 bl          PmFree

; 966  :             pdpr = NULL;

  001d4	e3a04000	 mov         r4, #0
  001d8		 |$LN1@PowerRestr|

; 967  :         }
; 968  :     }
; 969  : 
; 970  :     PMLOGMSG(pdpr == NULL && ZONE_WARN, (_T("%s: couldn't create structure for '%s'\r\n"),
; 971  :         pszFname, pDeviceId->pszName != NULL ? pDeviceId->pszName : _T("<NULL>")));

  001d8	e3540000	 cmp         r4, #0
  001dc	1a00000b	 bne         |$LN16@PowerRestr|
  001e0		 |$LN42@PowerRestr|
  001e0	e5953440	 ldr         r3, [r5, #0x440]
  001e4	e3130002	 tst         r3, #2
  001e8	0a000008	 beq         |$LN16@PowerRestr|
  001ec	e5993004	 ldr         r3, [r9, #4]
  001f0	e3530000	 cmp         r3, #0
  001f4	059f3034	 ldreq       r3, [pc, #0x34]
  001f8	e59f002c	 ldr         r0, [pc, #0x2C]
  001fc	e1a02003	 mov         r2, r3
  00200	e1a01007	 mov         r1, r7
  00204	eb000000	 bl          CeLogMsg

; 972  :     return pdpr;

  00208	ea000000	 b           |$LN16@PowerRestr|
  0020c		 |$LN36@PowerRestr|
  0020c	e51b402c	 ldr         r4, [r11, #-0x2C]
  00210		 |$LN16@PowerRestr|

; 973  : }

  00210	e1a00004	 mov         r0, r4
  00214	e24bd028	 sub         sp, r11, #0x28
  00218	e89d6ff0	 ldmia       sp, {r4 - r11, sp, lr}
  0021c	e12fff1e	 bx          lr

			 ENDP  ; |PowerRestrictionCreate|

  00220		 |$LN25@PowerRestr|
  00220		 |$LN44@PowerRestr|

; 956  :     __except(EXCEPTION_EXECUTE_HANDLER) {

  00220	e52de004	 str         lr, [sp, #-4]!
  00224		 |$LN28@PowerRestr|
  00224		 |$LN47@PowerRestr|
  00224	e3a00001	 mov         r0, #1
  00228		 |$LN27@PowerRestr|
  00228	e49df004	 ldr         pc, [sp], #4
  0022c		 |$LN49@PowerRestr|
  0022c		 |$LN50@PowerRestr|
  0022c	00000000	 DCD         |??_C@_1FC@GGBMAKFK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AAu?$AAr?$AAe?$AA?5?$AAf?$AAo@|
  00230		 |$LN51@PowerRestr|
  00230	00000000	 DCD         |??_C@_1O@DPFEOIGE@?$AA?$DM?$AAN?$AAU?$AAL?$AAL?$AA?$DO?$AA?$AA@|
  00234		 |$LN52@PowerRestr|
  00234	00000000	 DCD         |??_C@_1GA@IDMIBKBM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAd?$AAu?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AAu?$AAr?$AAe?$AA?5?$AAi@|
  00238		 |$LN53@PowerRestr|
  00238	00000000	 DCD         |dpCurSettings|
  0023c		 |$LN54@PowerRestr|
  0023c	00000000	 DCD         |??_C@_11LOCGONAA@?$AA?$AA@|
  00240		 |$LN55@PowerRestr|
  00240	00000000	 DCD         |??_C@_1CO@JDGHGHGI@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAs?$AAt?$AAr?$AAi?$AAc?$AAt?$AAi?$AAo?$AAn?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?$AA@|
  00244		 |$LN48@PowerRestr|
  00244		 |$LN46@PowerRestr|
	EXPORT	|PowerRestrictionDestroy|

  00000			 AREA	 |.pdata|, PDATA
|$T35289| DCD	|$LN6@PowerRestr@2|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PowerRestrictionDestroy| PROC

; 979  : {

  00000		 |$LN6@PowerRestr@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35286|
  00004	e3500000	 cmp         r0, #0

; 980  :     BOOL fOk = TRUE;
; 981  : 
; 982  :     if(pdpr != NULL) {
; 983  :         PmFree(pdpr);

  00008	1b000000	 blne        PmFree

; 984  :     }
; 985  : 
; 986  :     return fOk;

  0000c	e3a00001	 mov         r0, #1

; 987  : }

  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$M35287|

			 ENDP  ; |PowerRestrictionDestroy|

	EXPORT	|PowerRestrictionAddList|

  00000			 AREA	 |.pdata|, PDATA
|$T35306| DCD	|$LN10@PowerRestr@3|
	DCD	0x40001301
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PowerRestrictionAddList| PROC

; 993  : {

  00000		 |$LN10@PowerRestr@3|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M35303|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0

; 994  :     BOOL fOk = TRUE;
; 995  : 
; 996  :     PREFAST_DEBUGCHK(ppListHead != NULL);
; 997  :     PREFAST_DEBUGCHK(pdpr != NULL);
; 998  :     DEBUGCHK(pdpr->pNext == NULL && pdpr->pPrev == NULL);
; 999  :     DEBUGCHK(ppListHead != NULL);
; 1000 : 
; 1001 :     // put the new device at the head of the list
; 1002 :     PMLOCK();

  0000c	e59f0034	 ldr         r0, [pc, #0x34]
  00010	eb000000	 bl          EnterCriticalSection

; 1003 :     pdpr->pNext = *ppListHead;

  00014	e5953000	 ldr         r3, [r5]

; 1004 :     pdpr->pPrev = NULL;

  00018	e3a02000	 mov         r2, #0
  0001c	e5842018	 str         r2, [r4, #0x18]
  00020	e5843014	 str         r3, [r4, #0x14]

; 1005 :     if(*ppListHead != NULL) {

  00024	e5953000	 ldr         r3, [r5]

; 1006 :         (*ppListHead)->pPrev = pdpr;
; 1007 :     }
; 1008 :     *ppListHead = pdpr;
; 1009 :     PMUNLOCK();

  00028	e59f0018	 ldr         r0, [pc, #0x18]
  0002c	e3530000	 cmp         r3, #0
  00030	15834018	 strne       r4, [r3, #0x18]
  00034	e5854000	 str         r4, [r5]
  00038	eb000000	 bl          LeaveCriticalSection

; 1010 : 
; 1011 :     return fOk;

  0003c	e3a00001	 mov         r0, #1

; 1012 : }

  00040	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00044	e12fff1e	 bx          lr
  00048		 |$LN11@PowerRestr@3|
  00048		 |$LN12@PowerRestr@3|
  00048	00000000	 DCD         |gcsPowerManager|
  0004c		 |$M35304|

			 ENDP  ; |PowerRestrictionAddList|

	EXPORT	|PowerRestrictionRemList|

  00000			 AREA	 |.pdata|, PDATA
|$T35325| DCD	|$LN15@PowerRestr@4|
	DCD	0x40002001
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PowerRestrictionRemList| PROC

; 1018 : {

  00000		 |$LN15@PowerRestr@4|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M35322|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0

; 1019 :     BOOL fOk = TRUE;
; 1020 : 
; 1021 :     PREFAST_DEBUGCHK(ppListHead != NULL);
; 1022 : 
; 1023 :     PMLOCK();

  0000c	e59f0068	 ldr         r0, [pc, #0x68]
  00010	eb000000	 bl          EnterCriticalSection

; 1024 : 
; 1025 :     // are we at the head of the list?
; 1026 :     if(pdpr->pPrev != NULL) {

  00014	e5943018	 ldr         r3, [r4, #0x18]
  00018	e3a01000	 mov         r1, #0
  0001c	e1b02003	 movs        r2, r3

; 1027 :         pdpr->pPrev->pNext = pdpr->pNext;

  00020	15943014	 ldrne       r3, [r4, #0x14]
  00024	15823014	 strne       r3, [r2, #0x14]
  00028	1a000004	 bne         |$LN5@PowerRestr@4|

; 1028 :     } else {
; 1029 :         // not that if pNext == NULL && pPrev == NULL we are the only list
; 1030 :         // member and the assignment to the list head will set it to NULL (meaning
; 1031 :         // empty).
; 1032 :         if(pdpr->pNext != NULL) {

  0002c	e5943014	 ldr         r3, [r4, #0x14]
  00030	e3530000	 cmp         r3, #0

; 1033 :             pdpr->pNext->pPrev = NULL;

  00034	15831018	 strne       r1, [r3, #0x18]

; 1034 :         }
; 1035 :         *ppListHead = pdpr->pNext;

  00038	e5943014	 ldr         r3, [r4, #0x14]
  0003c	e5853000	 str         r3, [r5]
  00040		 |$LN5@PowerRestr@4|

; 1036 :     }
; 1037 :     
; 1038 :     // are we at the tail of the list?
; 1039 :     if(pdpr->pNext != NULL) {

  00040	e5943014	 ldr         r3, [r4, #0x14]
  00044	e1b02003	 movs        r2, r3

; 1040 :         pdpr->pNext->pPrev = pdpr->pPrev;

  00048	15943018	 ldrne       r3, [r4, #0x18]
  0004c	15823018	 strne       r3, [r2, #0x18]
  00050	1a000002	 bne         |$LN1@PowerRestr@4|

; 1041 :     } else {
; 1042 :         if(pdpr->pPrev != NULL) {

  00054	e5943018	 ldr         r3, [r4, #0x18]
  00058	e3530000	 cmp         r3, #0

; 1043 :             pdpr->pPrev->pNext = NULL;

  0005c	15831014	 strne       r1, [r3, #0x14]
  00060		 |$LN1@PowerRestr@4|

; 1044 :         }
; 1045 :     }
; 1046 : 
; 1047 :     // clear list pointers
; 1048 :     pdpr->pNext = NULL;
; 1049 :     pdpr->pPrev = NULL;
; 1050 : 
; 1051 :     // delete the entry
; 1052 :     PMUNLOCK();

  00060	e59f0014	 ldr         r0, [pc, #0x14]
  00064	e5841014	 str         r1, [r4, #0x14]
  00068	e5841018	 str         r1, [r4, #0x18]
  0006c	eb000000	 bl          LeaveCriticalSection

; 1053 : 
; 1054 :     return fOk;

  00070	e3a00001	 mov         r0, #1

; 1055 : }

  00074	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00078	e12fff1e	 bx          lr
  0007c		 |$LN16@PowerRestr@4|
  0007c		 |$LN17@PowerRestr@4|
  0007c	00000000	 DCD         |gcsPowerManager|
  00080		 |$M35323|

			 ENDP  ; |PowerRestrictionRemList|

	EXPORT	|PowerRestrictionFindList|
	EXPORT	|??_C@_1EK@KNCJBHEM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAw?$AAh?$AAi?$AAl?$AAe?$AA?5?$AAs?$AAe?$AAa?$AAr?$AAc?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAl?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@DKENJKMJ@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAs?$AAt?$AAr?$AAi?$AAc?$AAt?$AAi?$AAo?$AAn?$AAF?$AAi?$AAn?$AAd?$AAL?$AAi?$AAs?$AAt?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T35363| DCD	|$LN32@PowerRestr@5|
	DCD	0xc0003504

  00000			 AREA	 |.pdata|, PDATA
|$T35365| DCD	|$LN13@PowerRestr@5|
	DCD	0x40000701

  00000			 AREA	 |.xdata|, DATA
|$T35361| DCD	0x1
	DCD	|$LN17@PowerRestr@5|
	DCD	|$LN18@PowerRestr@5|
	DCD	|$LN13@PowerRestr@5|
	DCD	|$LN14@PowerRestr@5|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@KNCJBHEM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAw?$AAh?$AAi?$AAl?$AAe?$AA?5?$AAs?$AAe?$AAa?$AAr?$AAc?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAl?$AAi@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "c"
	DCB	0x0, "e", 0x0, "p", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "w", 0x0, "h", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, " ", 0x0, "s", 0x0, "e", 0x0, "a", 0x0, "r", 0x0, "c"
	DCB	0x0, "h", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "l"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@DKENJKMJ@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAs?$AAt?$AAr?$AAi?$AAc?$AAt?$AAi?$AAo?$AAn?$AAF?$AAi?$AAn?$AAd?$AAL?$AAi?$AAs?$AAt?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "R", 0x0, "e"
	DCB	0x0, "s", 0x0, "t", 0x0, "r", 0x0, "i", 0x0, "c", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, "F", 0x0, "i", 0x0, "n"
	DCB	0x0, "d", 0x0, "L", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T35361|

  00008		 |PowerRestrictionFindList| PROC

; 1064 : {

  00008		 |$LN32@PowerRestr@5|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d5870	 stmdb       sp!, {r4 - r6, r11, r12, lr}
  00010	e28db018	 add         r11, sp, #0x18
  00014	e24dd008	 sub         sp, sp, #8
  00018		 |$LN30@PowerRestr@5|
  00018	e1a05002	 mov         r5, r2
  0001c	e1a06001	 mov         r6, r1
  00020	e1a04000	 mov         r4, r0

; 1065 :     PDEVICE_POWER_RESTRICTION pdpr;
; 1066 : 
; 1067 : #ifndef SHIP_BUILD
; 1068 :     SETFNAME(_T("PowerRestrictionFindList"));
; 1069 : #endif
; 1070 : 
; 1071 :     PMLOCK();

  00024	e59f30c8	 ldr         r3, [pc, #0xC8]
  00028	e59f00b8	 ldr         r0, [pc, #0xB8]
  0002c	e50b301c	 str         r3, [r11, #-0x1C]
  00030	eb000000	 bl          EnterCriticalSection
  00034		 |$LN17@PowerRestr@5|

; 1072 : 
; 1073 :     __try {
; 1074 :         // look for a match
; 1075 :         for(pdpr = pList; pdpr != NULL; pdpr = pdpr->pNext) {

  00034	e50b4020	 str         r4, [r11, #-0x20]
  00038	e3540000	 cmp         r4, #0
  0003c	0a000015	 beq         |$LN18@PowerRestr@5|

; 1076 :             if(DeviceIdsAreEqual(pdpr->pDeviceId, pDeviceId)
; 1077 :                 && (pszSystemState == NULL && pdpr->pszSystemState == NULL
; 1078 :                 || (pszSystemState != NULL && pdpr->pszSystemState != NULL 
; 1079 :                     && _tcscmp(pszSystemState, pdpr->pszSystemState) == 0))) {

  00040	e5940000	 ldr         r0, [r4]
  00044	e1a01006	 mov         r1, r6
  00048	eb000000	 bl          |?DeviceIdsAreEqual@@YAHPAU_DeviceId_tag@@0@Z|
  0004c	e3500000	 cmp         r0, #0
  00050	0a00000e	 beq         |$LN3@PowerRestr@5|
  00054	e3550000	 cmp         r5, #0
  00058	1a000004	 bne         |$LN29@PowerRestr@5|
  0005c	e594300c	 ldr         r3, [r4, #0xC]
  00060	e3530000	 cmp         r3, #0
  00064	0a00000b	 beq         |$LN18@PowerRestr@5|
  00068	e3550000	 cmp         r5, #0
  0006c	0a000007	 beq         |$LN3@PowerRestr@5|
  00070		 |$LN29@PowerRestr@5|
  00070	e594300c	 ldr         r3, [r4, #0xC]
  00074	e3530000	 cmp         r3, #0
  00078	0a000004	 beq         |$LN3@PowerRestr@5|
  0007c	e1a01003	 mov         r1, r3
  00080	e1a00005	 mov         r0, r5
  00084	eb000000	 bl          wcscmp
  00088	e3500000	 cmp         r0, #0
  0008c	0a000001	 beq         |$LN18@PowerRestr@5|
  00090		 |$LN3@PowerRestr@5|

; 1072 : 
; 1073 :     __try {
; 1074 :         // look for a match
; 1075 :         for(pdpr = pList; pdpr != NULL; pdpr = pdpr->pNext) {

  00090	e5944014	 ldr         r4, [r4, #0x14]
  00094	eaffffe6	 b           |$LN17@PowerRestr@5|
  00098		 |$LN18@PowerRestr@5|

; 1080 :                 break;
; 1081 :             }
; 1082 :         }

  00098	ea000007	 b           |$LN19@PowerRestr@5|
  0009c		 |$LN14@PowerRestr@5|

; 1085 :         PMLOGMSG(ZONE_WARN, (_T("%s: exception while searching list\r\n"),
; 1086 :             pszFname));

  0009c	e59f304c	 ldr         r3, [pc, #0x4C]
  000a0	e5933440	 ldr         r3, [r3, #0x440]
  000a4	e3130002	 tst         r3, #2
  000a8	151b101c	 ldrne       r1, [r11, #-0x1C]
  000ac	159f0038	 ldrne       r0, [pc, #0x38]
  000b0	1b000000	 blne        CeLogMsg

; 1087 :         pdpr = NULL;

  000b4	e3a04000	 mov         r4, #0
  000b8	e50b4020	 str         r4, [r11, #-0x20]
  000bc		 |$LN19@PowerRestr@5|

; 1088 :     }
; 1089 : 
; 1090 :     PMUNLOCK();

  000bc	e59f0024	 ldr         r0, [pc, #0x24]
  000c0	eb000000	 bl          LeaveCriticalSection

; 1091 : 
; 1092 :     return pdpr;

  000c4	ea000000	 b           |$LN8@PowerRestr@5|
  000c8		 |$LN27@PowerRestr@5|
  000c8	e51b401c	 ldr         r4, [r11, #-0x1C]
  000cc		 |$LN8@PowerRestr@5|

; 1093 : }

  000cc	e1a00004	 mov         r0, r4
  000d0	e24bd018	 sub         sp, r11, #0x18
  000d4	e89d6870	 ldmia       sp, {r4 - r6, r11, sp, lr}
  000d8	e12fff1e	 bx          lr

			 ENDP  ; |PowerRestrictionFindList|

  000dc		 |$LN13@PowerRestr@5|
  000dc		 |$LN31@PowerRestr@5|

; 1083 :     }
; 1084 :     __except(EXCEPTION_EXECUTE_HANDLER) {

  000dc	e52de004	 str         lr, [sp, #-4]!
  000e0		 |$LN16@PowerRestr@5|
  000e0		 |$LN34@PowerRestr@5|
  000e0	e3a00001	 mov         r0, #1
  000e4		 |$LN15@PowerRestr@5|
  000e4	e49df004	 ldr         pc, [sp], #4
  000e8		 |$LN36@PowerRestr@5|
  000e8		 |$LN37@PowerRestr@5|
  000e8	00000000	 DCD         |gcsPowerManager|
  000ec		 |$LN38@PowerRestr@5|
  000ec	00000000	 DCD         |??_C@_1EK@KNCJBHEM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAw?$AAh?$AAi?$AAl?$AAe?$AA?5?$AAs?$AAe?$AAa?$AAr?$AAc?$AAh?$AAi?$AAn?$AAg?$AA?5?$AAl?$AAi@|
  000f0		 |$LN39@PowerRestr@5|
  000f0	00000000	 DCD         |dpCurSettings|
  000f4		 |$LN40@PowerRestr@5|
  000f4	00000000	 DCD         |??_C@_1DC@DKENJKMJ@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAs?$AAt?$AAr?$AAi?$AAc?$AAt?$AAi?$AAo?$AAn?$AAF?$AAi?$AAn?$AAd?$AAL?$AAi?$AAs?$AAt?$AA?$AA@|
  000f8		 |$LN35@PowerRestr@5|
  000f8		 |$LN33@PowerRestr@5|
	EXPORT	|PowerRestrictionCheckList|

  00000			 AREA	 |.pdata|, PDATA
|$T35396| DCD	|$LN16@PowerRestr@6|
	DCD	0x40001501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PowerRestrictionCheckList| PROC

; 1101 : {

  00000		 |$LN16@PowerRestr@6|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M35393|
  00004	e1a06001	 mov         r6, r1
  00008	e1a05000	 mov         r5, r0

; 1102 :     PDEVICE_POWER_RESTRICTION pdprTraveller;
; 1103 :     BOOL fFound = FALSE;
; 1104 : 
; 1105 :     PMLOCK();

  0000c	e59f003c	 ldr         r0, [pc, #0x3C]
  00010	e3a04000	 mov         r4, #0
  00014	eb000000	 bl          EnterCriticalSection

; 1106 : 
; 1107 :     // look for a match
; 1108 :     for(pdprTraveller = pList; pdprTraveller != NULL; pdprTraveller = pdprTraveller->pNext) {

  00018	e3550000	 cmp         r5, #0
  0001c	0a000006	 beq         |$LN2@PowerRestr@6|
  00020		 |$LL4@PowerRestr@6|

; 1109 :         if(pdprTraveller == pdpr) {

  00020	e1550006	 cmp         r5, r6
  00024	0a000003	 beq         |$LN12@PowerRestr@6|
  00028	e5953014	 ldr         r3, [r5, #0x14]
  0002c	e1b05003	 movs        r5, r3
  00030	1afffffa	 bne         |$LL4@PowerRestr@6|
  00034	ea000000	 b           |$LN2@PowerRestr@6|
  00038		 |$LN12@PowerRestr@6|

; 1110 :             fFound = TRUE;

  00038	e3a04001	 mov         r4, #1
  0003c		 |$LN2@PowerRestr@6|

; 1111 :             break;
; 1112 :         }
; 1113 :     }
; 1114 : 
; 1115 :     PMUNLOCK();

  0003c	e59f000c	 ldr         r0, [pc, #0xC]
  00040	eb000000	 bl          LeaveCriticalSection

; 1116 : 
; 1117 :     return fFound;
; 1118 : }

  00044	e1a00004	 mov         r0, r4
  00048	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$LN17@PowerRestr@6|
  00050		 |$LN18@PowerRestr@6|
  00050	00000000	 DCD         |gcsPowerManager|
  00054		 |$M35394|

			 ENDP  ; |PowerRestrictionCheckList|

	EXPORT	|PowerNotificationCreate|
	EXPORT	|??_C@_1EA@CHDGLPPE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AAu?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@KILGMLAE@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@LLCKIJA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAO?$AAp?$AAe?$AAn?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CI?$AAo?$AAw@| [ DATA ] ; `string'
	IMPORT	|OpenMsgQueue|

  00000			 AREA	 |.pdata|, PDATA
|$T35415| DCD	|$LN12@PowerNotif|
	DCD	0x40003c02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@CHDGLPPE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AAu?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "u"
	DCB	0x0, "l", 0x0, "d", 0x0, "n", 0x0, "'", 0x0, "t", 0x0, " "
	DCB	0x0, "c", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, " ", 0x0, "s", 0x0, "t", 0x0, "r", 0x0, "u", 0x0, "c"
	DCB	0x0, "t", 0x0, "u", 0x0, "r", 0x0, "e", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@KILGMLAE@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "N", 0x0, "o"
	DCB	0x0, "t", 0x0, "i", 0x0, "f", 0x0, "i", 0x0, "c", 0x0, "a"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "C", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@LLCKIJA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAO?$AAp?$AAe?$AAn?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CI?$AAo?$AAw@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "O", 0x0, "p", 0x0, "e"
	DCB	0x0, "n", 0x0, "M", 0x0, "s", 0x0, "g", 0x0, "Q", 0x0, "u"
	DCB	0x0, "e", 0x0, "u", 0x0, "e", 0x0, "(", 0x0, ")", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "(", 0x0, "o"
	DCB	0x0, "w", 0x0, "n", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ","
	DCB	0x0, " ", 0x0, "s", 0x0, "o", 0x0, "u", 0x0, "r", 0x0, "c"
	DCB	0x0, "e", 0x0, " ", 0x0, "q", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PowerNotificationCreate| PROC

; 1127 : {

  00000		 |$LN12@PowerNotif|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd018	 sub         sp, sp, #0x18
  00008		 |$M35412|
  00008	e1a06001	 mov         r6, r1
  0000c	e1a07000	 mov         r7, r0

; 1128 : #ifndef SHIP_BUILD
; 1129 :     SETFNAME(_T("PowerNotificationCreate"));
; 1130 : #endif
; 1131 : 
; 1132 :     // allocate resources
; 1133 :     PPOWER_NOTIFICATION ppn = (PPOWER_NOTIFICATION) PmAlloc(sizeof(*ppn));

  00010	e3a00014	 mov         r0, #0x14
  00014	eb000000	 bl          PmAlloc
  00018	e59f50cc	 ldr         r5, [pc, #0xCC]
  0001c	e1b04000	 movs        r4, r0

; 1134 :     if(ppn != NULL ) {

  00020	0a000025	 beq         |$LN9@PowerNotif|

; 1135 :         // initialize the structure
; 1136 :         memset(ppn, 0, sizeof(*ppn));

  00024	e3a02014	 mov         r2, #0x14
  00028	e3a01000	 mov         r1, #0
  0002c	e1a00004	 mov         r0, r4
  00030	eb000000	 bl          memset

; 1137 :         ppn->hOwner = hOwner;
; 1138 :         ppn->pNext = NULL;

  00034	e3a03000	 mov         r3, #0

; 1139 :         ppn->pPrev = NULL;
; 1140 : 
; 1141 :         // now try to open the message queue
; 1142 :         MSGQUEUEOPTIONS msgopts;
; 1143 :         memset(&msgopts, 0, sizeof(msgopts));

  00038	e3a02014	 mov         r2, #0x14
  0003c	e3a01000	 mov         r1, #0
  00040	e28d0004	 add         r0, sp, #4
  00044	e584300c	 str         r3, [r4, #0xC]
  00048	e5843010	 str         r3, [r4, #0x10]
  0004c	e5846008	 str         r6, [r4, #8]
  00050	eb000000	 bl          memset

; 1144 :         msgopts.dwSize = sizeof(MSGQUEUEOPTIONS);
; 1145 :         msgopts.bReadAccess = FALSE;

  00054	e3a02000	 mov         r2, #0
  00058	e58d2014	 str         r2, [sp, #0x14]
  0005c	e3a03014	 mov         r3, #0x14

; 1146 :         ppn->hMsgQ = OpenMsgQueue(hOwner, hMsgQ, &msgopts);

  00060	e28d2004	 add         r2, sp, #4
  00064	e1a01007	 mov         r1, r7
  00068	e1a00006	 mov         r0, r6
  0006c	e58d3004	 str         r3, [sp, #4]
  00070	eb000000	 bl          OpenMsgQueue
  00074	e3500000	 cmp         r0, #0
  00078	e5840000	 str         r0, [r4]

; 1147 :         if(ppn->hMsgQ == NULL) {

  0007c	1a00000c	 bne         |$LN1@PowerNotif|

; 1148 :             PMLOGMSG(ZONE_WARN, 
; 1149 :                 (_T("%s: OpenMsgQueue() failed %d (owner 0x%08x, source q 0x%08x)\r\n"),
; 1150 :                 pszFname, GetLastError(), hOwner, hMsgQ));

  00080	e5953440	 ldr         r3, [r5, #0x440]
  00084	e3130002	 tst         r3, #2
  00088	0a000006	 beq         |$LN5@PowerNotif|
  0008c	eb000000	 bl          GetLastError
  00090	e59f1048	 ldr         r1, [pc, #0x48]
  00094	e1a02000	 mov         r2, r0
  00098	e59f0048	 ldr         r0, [pc, #0x48]
  0009c	e1a03006	 mov         r3, r6
  000a0	e58d7000	 str         r7, [sp]
  000a4	eb000000	 bl          CeLogMsg
  000a8		 |$LN5@PowerNotif|

; 1151 :             PmFree(ppn);

  000a8	e1a00004	 mov         r0, r4
  000ac	eb000000	 bl          PmFree

; 1152 :             ppn = NULL;

  000b0	e3a04000	 mov         r4, #0
  000b4		 |$LN1@PowerNotif|

; 1153 :         }
; 1154 :     }
; 1155 : 
; 1156 :     PMLOGMSG(ppn == NULL && ZONE_WARN, (_T("%s: couldn't create structure\r\n"), pszFname));

  000b4	e3540000	 cmp         r4, #0
  000b8	1a000004	 bne         |$LN7@PowerNotif|
  000bc		 |$LN9@PowerNotif|
  000bc	e5953440	 ldr         r3, [r5, #0x440]
  000c0	e3130002	 tst         r3, #2
  000c4	159f0018	 ldrne       r0, [pc, #0x18]
  000c8	159f1010	 ldrne       r1, [pc, #0x10]
  000cc	1b000000	 blne        CeLogMsg
  000d0		 |$LN7@PowerNotif|

; 1157 :     return ppn;
; 1158 : }

  000d0	e1a00004	 mov         r0, r4
  000d4	e28dd018	 add         sp, sp, #0x18
  000d8	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  000dc	e12fff1e	 bx          lr
  000e0		 |$LN13@PowerNotif|
  000e0		 |$LN14@PowerNotif|
  000e0	00000000	 DCD         |??_C@_1DA@KILGMLAE@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?$AA@|
  000e4		 |$LN15@PowerNotif|
  000e4	00000000	 DCD         |??_C@_1EA@CHDGLPPE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AAu?$AAr?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  000e8		 |$LN16@PowerNotif|
  000e8	00000000	 DCD         |??_C@_1HO@LLCKIJA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAO?$AAp?$AAe?$AAn?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CI?$AAo?$AAw@|
  000ec		 |$LN17@PowerNotif|
  000ec	00000000	 DCD         |dpCurSettings|
  000f0		 |$M35413|

			 ENDP  ; |PowerNotificationCreate|

	EXPORT	|PowerNotificationDestroy|
	IMPORT	|CloseMsgQueue|

  00000			 AREA	 |.pdata|, PDATA
|$T35430| DCD	|$LN7@PowerNotif@2|
	DCD	0x40000c01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PowerNotificationDestroy| PROC

; 1164 : {

  00000		 |$LN7@PowerNotif@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M35427|
  00004	e1b04000	 movs        r4, r0

; 1165 :     BOOL fOk = TRUE;
; 1166 : 
; 1167 :     if(ppn != NULL) {

  00008	0a000005	 beq         |$LN2@PowerNotif@2|

; 1168 :         if(ppn->hMsgQ != NULL) CloseMsgQueue(ppn->hMsgQ);

  0000c	e5943000	 ldr         r3, [r4]
  00010	e3530000	 cmp         r3, #0
  00014	11a00003	 movne       r0, r3
  00018	1b000000	 blne        CloseMsgQueue

; 1169 :         PmFree(ppn);

  0001c	e1a00004	 mov         r0, r4
  00020	eb000000	 bl          PmFree
  00024		 |$LN2@PowerNotif@2|

; 1170 :     }
; 1171 : 
; 1172 :     return fOk;

  00024	e3a00001	 mov         r0, #1

; 1173 : }

  00028	e8bd4010	 ldmia       sp!, {r4, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M35428|

			 ENDP  ; |PowerNotificationDestroy|

	EXPORT	|PowerNotificationAddList|

  00000			 AREA	 |.pdata|, PDATA
|$T35447| DCD	|$LN10@PowerNotif@3|
	DCD	0x40001301
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PowerNotificationAddList| PROC

; 1178 : {

  00000		 |$LN10@PowerNotif@3|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M35444|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0

; 1179 :     BOOL fOk = TRUE;
; 1180 : 
; 1181 :     PREFAST_DEBUGCHK(ppListHead != NULL);
; 1182 :     PREFAST_DEBUGCHK(ppn != NULL);
; 1183 :     DEBUGCHK(ppn->pNext == NULL && ppn->pPrev == NULL);
; 1184 :     DEBUGCHK(ppListHead != NULL);
; 1185 : 
; 1186 :     // put the new device at the head of the list
; 1187 :     PMLOCK();

  0000c	e59f0034	 ldr         r0, [pc, #0x34]
  00010	eb000000	 bl          EnterCriticalSection

; 1188 :     ppn->pNext = *ppListHead;

  00014	e5953000	 ldr         r3, [r5]

; 1189 :     ppn->pPrev = NULL;

  00018	e3a02000	 mov         r2, #0
  0001c	e5842010	 str         r2, [r4, #0x10]
  00020	e584300c	 str         r3, [r4, #0xC]

; 1190 :     if(*ppListHead != NULL) {

  00024	e5953000	 ldr         r3, [r5]

; 1191 :         (*ppListHead)->pPrev = ppn;
; 1192 :     }
; 1193 :     *ppListHead = ppn;
; 1194 :     PMUNLOCK();

  00028	e59f0018	 ldr         r0, [pc, #0x18]
  0002c	e3530000	 cmp         r3, #0
  00030	15834010	 strne       r4, [r3, #0x10]
  00034	e5854000	 str         r4, [r5]
  00038	eb000000	 bl          LeaveCriticalSection

; 1195 : 
; 1196 :     return fOk;

  0003c	e3a00001	 mov         r0, #1

; 1197 : }

  00040	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00044	e12fff1e	 bx          lr
  00048		 |$LN11@PowerNotif@3|
  00048		 |$LN12@PowerNotif@3|
  00048	00000000	 DCD         |gcsPowerManager|
  0004c		 |$M35445|

			 ENDP  ; |PowerNotificationAddList|

	EXPORT	|PowerNotificationRemList|

  00000			 AREA	 |.pdata|, PDATA
|$T35470| DCD	|$LN23@PowerNotif@4|
	DCD	0x40002f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PowerNotificationRemList| PROC

; 1202 : {

  00000		 |$LN23@PowerNotif@4|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M35467|
  00004	e1a04001	 mov         r4, r1
  00008	e1a06000	 mov         r6, r0

; 1203 :     BOOL fOk = TRUE;
; 1204 : 
; 1205 :     PREFAST_DEBUGCHK(ppListHead != NULL);
; 1206 : 
; 1207 :     PMLOCK();

  0000c	e59f00a4	 ldr         r0, [pc, #0xA4]
  00010	e3a05001	 mov         r5, #1
  00014	eb000000	 bl          EnterCriticalSection

; 1208 :     // We have to check that ppn is in the ppListHead before we can delete it.
; 1209 :     PPOWER_NOTIFICATION pCurNotification = *ppListHead;

  00018	e5963000	 ldr         r3, [r6]
  0001c	e3530000	 cmp         r3, #0

; 1210 :     
; 1211 :     while (pCurNotification) {

  00020	0a00001e	 beq         |$LN8@PowerNotif@4|
  00024		 |$LL12@PowerNotif@4|

; 1212 :         if (pCurNotification == ppn)

  00024	e1530004	 cmp         r3, r4
  00028	0a000002	 beq         |$LN20@PowerNotif@4|

; 1213 :             break;
; 1214 :         else
; 1215 :             pCurNotification = pCurNotification->pNext ;

  0002c	e593300c	 ldr         r3, [r3, #0xC]
  00030	e3530000	 cmp         r3, #0
  00034	1afffffa	 bne         |$LL12@PowerNotif@4|
  00038		 |$LN20@PowerNotif@4|

; 1216 :     };
; 1217 :     if (pCurNotification) {

  00038	e3530000	 cmp         r3, #0
  0003c	0a000017	 beq         |$LN8@PowerNotif@4|

; 1218 :         
; 1219 :         // are we at the head of the list?
; 1220 :         if(ppn->pPrev != NULL) {

  00040	e5943010	 ldr         r3, [r4, #0x10]
  00044	e3a01000	 mov         r1, #0
  00048	e1b02003	 movs        r2, r3

; 1221 :             ppn->pPrev->pNext = ppn->pNext;

  0004c	1594300c	 ldrne       r3, [r4, #0xC]
  00050	1582300c	 strne       r3, [r2, #0xC]
  00054	1a000004	 bne         |$LN6@PowerNotif@4|

; 1222 :         } else {
; 1223 :             // not that if pNext == NULL && pPrev == NULL we are the only list
; 1224 :             // member and the assignment to the list head will set it to NULL (meaning
; 1225 :             // empty).
; 1226 :             if(ppn->pNext != NULL) {

  00058	e594300c	 ldr         r3, [r4, #0xC]
  0005c	e3530000	 cmp         r3, #0

; 1227 :                 ppn->pNext->pPrev = NULL;

  00060	15831010	 strne       r1, [r3, #0x10]

; 1228 :             }
; 1229 :             *ppListHead = ppn->pNext;

  00064	e594300c	 ldr         r3, [r4, #0xC]
  00068	e5863000	 str         r3, [r6]
  0006c		 |$LN6@PowerNotif@4|

; 1230 :         }
; 1231 :         
; 1232 :         // are we at the tail of the list?
; 1233 :         if(ppn->pNext != NULL) {

  0006c	e594300c	 ldr         r3, [r4, #0xC]
  00070	e1b02003	 movs        r2, r3

; 1234 :             ppn->pNext->pPrev = ppn->pPrev;

  00074	15943010	 ldrne       r3, [r4, #0x10]
  00078	15823010	 strne       r3, [r2, #0x10]
  0007c	1a000002	 bne         |$LN2@PowerNotif@4|

; 1235 :         } else {
; 1236 :             if(ppn->pPrev != NULL) {

  00080	e5943010	 ldr         r3, [r4, #0x10]
  00084	e3530000	 cmp         r3, #0

; 1237 :                 ppn->pPrev->pNext = NULL;

  00088	1583100c	 strne       r1, [r3, #0xC]
  0008c		 |$LN2@PowerNotif@4|

; 1238 :             }
; 1239 :         }
; 1240 : 
; 1241 :         // clear list pointers
; 1242 :         ppn->pNext = NULL;
; 1243 :         ppn->pPrev = NULL;
; 1244 : 
; 1245 :         // delete the structure and its members
; 1246 :         PowerNotificationDestroy(ppn);

  0008c	e1a00004	 mov         r0, r4
  00090	e584100c	 str         r1, [r4, #0xC]
  00094	e5841010	 str         r1, [r4, #0x10]
  00098	eb000000	 bl          PowerNotificationDestroy

; 1247 :     }
; 1248 :     else

  0009c	ea000000	 b           |$LN1@PowerNotif@4|
  000a0		 |$LN8@PowerNotif@4|

; 1249 :         fOk = FALSE ;

  000a0	e3a05000	 mov         r5, #0
  000a4		 |$LN1@PowerNotif@4|

; 1250 :     
; 1251 :     PMUNLOCK();

  000a4	e59f000c	 ldr         r0, [pc, #0xC]
  000a8	eb000000	 bl          LeaveCriticalSection

; 1252 : 
; 1253 :     return fOk;
; 1254 : }

  000ac	e1a00005	 mov         r0, r5
  000b0	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000b4	e12fff1e	 bx          lr
  000b8		 |$LN24@PowerNotif@4|
  000b8		 |$LN25@PowerNotif@4|
  000b8	00000000	 DCD         |gcsPowerManager|
  000bc		 |$M35468|

			 ENDP  ; |PowerNotificationRemList|

	EXPORT	|DeviceListCreate|
	EXPORT	|??_C@_1EC@EPHLGFP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@DJAENDOM@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KC@GDBFAAAO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAe?$AAn?$AAt?$AAr?$AAy?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAc?$AAl?$AAa?$AAs@| [ DATA ] ; `string'
	IMPORT	|CreateMsgQueue|

  00000			 AREA	 |.pdata|, PDATA
|$T35493| DCD	|$LN17@DeviceList|
	DCD	0x40006a02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@EPHLGFP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "M", 0x0, "s", 0x0, "g"
	DCB	0x0, "Q", 0x0, "u", 0x0, "e", 0x0, "u", 0x0, "e", 0x0, "("
	DCB	0x0, ")", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@DJAENDOM@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "L"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "C", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KC@GDBFAAAO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAe?$AAn?$AAt?$AAr?$AAy?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAc?$AAl?$AAa?$AAs@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "l", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, "f"
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "c", 0x0, "l", 0x0, "a"
	DCB	0x0, "s", 0x0, "s", 0x0, " ", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, "-", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "x"
	DCB	0x0, "-", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "x", 0x0, "-"
	DCB	0x0, "%", 0x0, "0", 0x0, "4", 0x0, "x", 0x0, "-", 0x0, "%"
	DCB	0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DeviceListCreate| PROC

; 1262 : {

  00000		 |$LN17@DeviceList|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd034	 sub         sp, sp, #0x34
  00008		 |$M35490|
  00008	e1a0b000	 mov         r11, r0

; 1263 :     PDEVICE_LIST pdl = NULL;
; 1264 :     HANDLE hMsgQ = NULL;
; 1265 :     MSGQUEUEOPTIONS msgOptions;
; 1266 : 
; 1267 : #ifndef SHIP_BUILD
; 1268 :     SETFNAME(_T("DeviceListCreate"));
; 1269 : #endif
; 1270 : 
; 1271 :     PMLOGMSG(ZONE_INIT || ZONE_DEVICE, 
; 1272 :         (_T("%s: creating list entry for class %08x-%04x-%04x-%04x-%02x%02x%02x%02x%02x%02x\r\n"), 
; 1273 :         pszFname, pClass->Data1, pClass->Data2, pClass->Data3,
; 1274 :         (pClass->Data4[0] << 8) + pClass->Data4[1], pClass->Data4[2], pClass->Data4[3], 
; 1275 :         pClass->Data4[4], pClass->Data4[5], pClass->Data4[6], pClass->Data4[7]));

  0000c	e59f618c	 ldr         r6, [pc, #0x18C]
  00010	e5963440	 ldr         r3, [r6, #0x440]
  00014	e3130004	 tst         r3, #4
  00018	1a000001	 bne         |$LN8@DeviceList|
  0001c	e3130010	 tst         r3, #0x10
  00020	0a000017	 beq         |$LN9@DeviceList|
  00024		 |$LN8@DeviceList|
  00024	e5dbe008	 ldrb        lr, [r11, #8]
  00028	e5db1009	 ldrb        r1, [r11, #9]
  0002c	e5db400f	 ldrb        r4, [r11, #0xF]
  00030	e5db500e	 ldrb        r5, [r11, #0xE]
  00034	e081140e	 add         r1, r1, lr, lsl #8
  00038	e5db600d	 ldrb        r6, [r11, #0xD]
  0003c	e5db700c	 ldrb        r7, [r11, #0xC]
  00040	e5db800b	 ldrb        r8, [r11, #0xB]
  00044	e5db900a	 ldrb        r9, [r11, #0xA]
  00048	e1dba0b6	 ldrh        r10, [r11, #6]
  0004c	e1db30b4	 ldrh        r3, [r11, #4]
  00050	e59b2000	 ldr         r2, [r11]
  00054	e59f0148	 ldr         r0, [pc, #0x148]
  00058	e58d1004	 str         r1, [sp, #4]
  0005c	e59f1130	 ldr         r1, [pc, #0x130]
  00060	e58d401c	 str         r4, [sp, #0x1C]
  00064	e58d5018	 str         r5, [sp, #0x18]
  00068	e58d6014	 str         r6, [sp, #0x14]
  0006c	e58d7010	 str         r7, [sp, #0x10]
  00070	e58d800c	 str         r8, [sp, #0xC]
  00074	e58d9008	 str         r9, [sp, #8]
  00078	e58da000	 str         r10, [sp]
  0007c	eb000000	 bl          CeLogMsg
  00080	e59f6118	 ldr         r6, [pc, #0x118]
  00084		 |$LN9@DeviceList|

; 1276 :     
; 1277 :     // allocate structure members
; 1278 :     pdl = (PDEVICE_LIST) PmAlloc(sizeof(*pdl) + sizeof(GUID));

  00084	e3a00028	 mov         r0, #0x28
  00088	eb000000	 bl          PmAlloc
  0008c	e1a04000	 mov         r4, r0

; 1279 : 
; 1280 :     // create message queues
; 1281 :     memset(&msgOptions, 0, sizeof(msgOptions));

  00090	e28d0020	 add         r0, sp, #0x20
  00094	e3a02014	 mov         r2, #0x14
  00098	e3a01000	 mov         r1, #0
  0009c	eb000000	 bl          memset

; 1282 :     msgOptions.dwSize = sizeof(MSGQUEUEOPTIONS);
; 1283 :     msgOptions.dwFlags = 0;
; 1284 :     msgOptions.cbMaxMessage = PNP_QUEUE_SIZE;

  000a0	e3a01e36	 mov         r1, #0x36, 28

; 1285 :     msgOptions.bReadAccess = TRUE;

  000a4	e3a00001	 mov         r0, #1
  000a8	e58d102c	 str         r1, [sp, #0x2C]
  000ac	e58d0030	 str         r0, [sp, #0x30]
  000b0	e3a03014	 mov         r3, #0x14
  000b4	e3a02000	 mov         r2, #0

; 1286 :     hMsgQ = CreateMsgQueue(NULL, &msgOptions);

  000b8	e28d1020	 add         r1, sp, #0x20
  000bc	e3a00000	 mov         r0, #0
  000c0	e58d3020	 str         r3, [sp, #0x20]
  000c4	e58d2024	 str         r2, [sp, #0x24]
  000c8	eb000000	 bl          CreateMsgQueue
  000cc	e1b05000	 movs        r5, r0

; 1287 : 
; 1288 : #ifndef SHIP_BUILD
; 1289 :     if(hMsgQ == NULL) {

  000d0	1a000006	 bne         |$LN14@DeviceList|

; 1290 :         DWORD dwStatus = GetLastError();

  000d4	eb000000	 bl          GetLastError

; 1291 :         PMLOGMSG(ZONE_ERROR, (_T("%s: CreateMsgQueue() failed %d\r\n"), pszFname, dwStatus));

  000d8	e5963440	 ldr         r3, [r6, #0x440]
  000dc	e1a02000	 mov         r2, r0
  000e0	e3130001	 tst         r3, #1
  000e4	159f00b0	 ldrne       r0, [pc, #0xB0]
  000e8	159f10a4	 ldrne       r1, [pc, #0xA4]
  000ec	1b000000	 blne        CeLogMsg
  000f0		 |$LN14@DeviceList|

; 1292 :     }
; 1293 : #endif
; 1294 : 
; 1295 :     // initialize the structure
; 1296 :     if(pdl != NULL && hMsgQ != NULL) {

  000f0	e3540000	 cmp         r4, #0
  000f4	0a000016	 beq         |$LN2@DeviceList|
  000f8	e3550000	 cmp         r5, #0
  000fc	0a000012	 beq         |$LN4@DeviceList|

; 1297 :         LPGUID pGuid = (LPGUID) ((LPBYTE) pdl + sizeof(*pdl));
; 1298 :         memset(pdl, 0, sizeof(pdl));

  00100	e3a03000	 mov         r3, #0
  00104	e5843000	 str         r3, [r4]

; 1299 :         *pGuid = *pClass;

  00108	e59b3000	 ldr         r3, [r11]
  0010c	e2842018	 add         r2, r4, #0x18

; 1300 :         pdl->pGuid = pGuid;
; 1301 :         pdl->hMsgQ = hMsgQ;
; 1302 :         pdl->hnClass = NULL;

  00110	e3a01000	 mov         r1, #0
  00114	e5823000	 str         r3, [r2]
  00118	e59b3004	 ldr         r3, [r11, #4]
  0011c	e5823004	 str         r3, [r2, #4]
  00120	e59b3008	 ldr         r3, [r11, #8]
  00124	e5823008	 str         r3, [r2, #8]
  00128	e59b300c	 ldr         r3, [r11, #0xC]
  0012c	e582300c	 str         r3, [r2, #0xC]
  00130	e5842000	 str         r2, [r4]
  00134	e5845008	 str         r5, [r4, #8]
  00138	e584100c	 str         r1, [r4, #0xC]

; 1303 :         pdl->pInterface = NULL;

  0013c	e5841010	 str         r1, [r4, #0x10]

; 1304 :         pdl->pList = NULL;

  00140	e5841004	 str         r1, [r4, #4]

; 1305 :         pdl->pNext = NULL;

  00144	e5841014	 str         r1, [r4, #0x14]

; 1306 :     } else {

  00148	ea000005	 b           |$LN3@DeviceList|
  0014c		 |$LN4@DeviceList|

; 1307 :         // some kind of error, release resources
; 1308 :         if(pdl != NULL) PmFree(pdl);

  0014c	e1a00004	 mov         r0, r4
  00150	eb000000	 bl          PmFree
  00154		 |$LN2@DeviceList|

; 1309 :         if(hMsgQ != NULL) CloseMsgQueue(hMsgQ);

  00154	e3550000	 cmp         r5, #0
  00158	11a00005	 movne       r0, r5
  0015c	1b000000	 blne        CloseMsgQueue

; 1310 :         pdl = NULL;

  00160	e3a04000	 mov         r4, #0
  00164		 |$LN3@DeviceList|

; 1311 :     }
; 1312 : 
; 1313 :     PMLOGMSG(pdl == NULL && ZONE_WARN, (_T("%s: returning 0x%08x\r\n"), pszFname, pdl));

  00164	e3540000	 cmp         r4, #0
  00168	1a000005	 bne         |$LN12@DeviceList|
  0016c	e5963440	 ldr         r3, [r6, #0x440]
  00170	e3130002	 tst         r3, #2
  00174	159f001c	 ldrne       r0, [pc, #0x1C]
  00178	159f1014	 ldrne       r1, [pc, #0x14]
  0017c	13a02000	 movne       r2, #0
  00180	1b000000	 blne        CeLogMsg
  00184		 |$LN12@DeviceList|

; 1314 :     return pdl;
; 1315 : }

  00184	e1a00004	 mov         r0, r4
  00188	e28dd034	 add         sp, sp, #0x34
  0018c	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00190	e12fff1e	 bx          lr
  00194		 |$LN18@DeviceList|
  00194		 |$LN19@DeviceList|
  00194	00000000	 DCD         |??_C@_1CC@DJAENDOM@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?$AA@|
  00198		 |$LN20@DeviceList|
  00198	00000000	 DCD         |??_C@_1CO@HPJBBGLL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  0019c		 |$LN21@DeviceList|
  0019c	00000000	 DCD         |??_C@_1EC@EPHLGFP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@|
  001a0		 |$LN22@DeviceList|
  001a0	00000000	 DCD         |dpCurSettings|
  001a4		 |$LN23@DeviceList|
  001a4	00000000	 DCD         |??_C@_1KC@GDBFAAAO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAe?$AAn?$AAt?$AAr?$AAy?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAc?$AAl?$AAa?$AAs@|
  001a8		 |$M35491|

			 ENDP  ; |DeviceListCreate|

	EXPORT	|DeviceListDestroy|
	EXPORT	|??_C@_1CE@EAPGKPBE@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAD?$AAe?$AAs?$AAt?$AAr?$AAo?$AAy?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KC@MNGCBOGM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAl?$AAe?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAe?$AAn?$AAt?$AAr?$AAy?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAc?$AAl?$AAa?$AAs@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T35509| DCD	|$LN8@DeviceList@2|
	DCD	0x40002f02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@EAPGKPBE@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAD?$AAe?$AAs?$AAt?$AAr?$AAo?$AAy?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "L"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "D", 0x0, "e", 0x0, "s"
	DCB	0x0, "t", 0x0, "r", 0x0, "o", 0x0, "y", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KC@MNGCBOGM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAl?$AAe?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAe?$AAn?$AAt?$AAr?$AAy?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAc?$AAl?$AAa?$AAs@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "l"
	DCB	0x0, "e", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "l", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, "f"
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "c", 0x0, "l", 0x0, "a"
	DCB	0x0, "s", 0x0, "s", 0x0, " ", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, "-", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "x"
	DCB	0x0, "-", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "x", 0x0, "-"
	DCB	0x0, "%", 0x0, "0", 0x0, "4", 0x0, "x", 0x0, "-", 0x0, "%"
	DCB	0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DeviceListDestroy| PROC

; 1322 : {

  00000		 |$LN8@DeviceList@2|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd024	 sub         sp, sp, #0x24
  00008		 |$M35506|
  00008	e1a04000	 mov         r4, r0
  0000c	e58d4020	 str         r4, [sp, #0x20]

; 1323 : #ifndef SHIP_BUILD
; 1324 :     SETFNAME(_T("DeviceListDestroy"));
; 1325 : #endif
; 1326 : 
; 1327 :     PMLOGMSG(ZONE_INIT || ZONE_DEVICE, 
; 1328 :         (_T("%s: deleting list entry for class %08x-%04x-%04x-%04x-%02x%02x%02x%02x%02x%02x\r\n"), 
; 1329 :         pszFname, pdl->pGuid->Data1, pdl->pGuid->Data2, pdl->pGuid->Data3,
; 1330 :         (pdl->pGuid->Data4[0] << 8) + pdl->pGuid->Data4[1], pdl->pGuid->Data4[2], pdl->pGuid->Data4[3], 
; 1331 :         pdl->pGuid->Data4[4], pdl->pGuid->Data4[5], pdl->pGuid->Data4[6], pdl->pGuid->Data4[7]));

  00010	e59f30a0	 ldr         r3, [pc, #0xA0]
  00014	e5933440	 ldr         r3, [r3, #0x440]
  00018	e3130004	 tst         r3, #4
  0001c	1a000001	 bne         |$LN4@DeviceList@2|
  00020	e3130010	 tst         r3, #0x10
  00024	0a000018	 beq         |$LN5@DeviceList@2|
  00028		 |$LN4@DeviceList@2|
  00028	e5942000	 ldr         r2, [r4]
  0002c	e59f1080	 ldr         r1, [pc, #0x80]
  00030	e59f0078	 ldr         r0, [pc, #0x78]
  00034	e5d24008	 ldrb        r4, [r2, #8]
  00038	e5d2e009	 ldrb        lr, [r2, #9]
  0003c	e5d2500f	 ldrb        r5, [r2, #0xF]
  00040	e5d2600e	 ldrb        r6, [r2, #0xE]
  00044	e5d2700d	 ldrb        r7, [r2, #0xD]
  00048	e5d2800c	 ldrb        r8, [r2, #0xC]
  0004c	e5d2900b	 ldrb        r9, [r2, #0xB]
  00050	e5d2a00a	 ldrb        r10, [r2, #0xA]
  00054	e1d2b0b6	 ldrh        r11, [r2, #6]
  00058	e1d230b4	 ldrh        r3, [r2, #4]
  0005c	e5922000	 ldr         r2, [r2]
  00060	e08ee404	 add         lr, lr, r4, lsl #8
  00064	e58de004	 str         lr, [sp, #4]
  00068	e58d501c	 str         r5, [sp, #0x1C]
  0006c	e58d6018	 str         r6, [sp, #0x18]
  00070	e58d7014	 str         r7, [sp, #0x14]
  00074	e58d8010	 str         r8, [sp, #0x10]
  00078	e58d900c	 str         r9, [sp, #0xC]
  0007c	e58da008	 str         r10, [sp, #8]
  00080	e58db000	 str         r11, [sp]
  00084	eb000000	 bl          CeLogMsg
  00088	e59d4020	 ldr         r4, [sp, #0x20]
  0008c		 |$LN5@DeviceList@2|

; 1332 :     
; 1333 :     DEBUGCHK(pdl->pNext == NULL);
; 1334 :     DEBUGCHK(pdl->pList == NULL);
; 1335 :     DEBUGCHK(pdl->hnClass == NULL);
; 1336 : 
; 1337 :     if(pdl->hMsgQ) CloseMsgQueue(pdl->hMsgQ);

  0008c	e5943008	 ldr         r3, [r4, #8]
  00090	e3530000	 cmp         r3, #0
  00094	11a00003	 movne       r0, r3
  00098	1b000000	 blne        CloseMsgQueue

; 1338 :     PmFree(pdl);

  0009c	e1a00004	 mov         r0, r4
  000a0	eb000000	 bl          PmFree

; 1339 : }

  000a4	e28dd024	 add         sp, sp, #0x24
  000a8	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  000ac	e12fff1e	 bx          lr
  000b0		 |$LN9@DeviceList@2|
  000b0		 |$LN10@DeviceList@2|
  000b0	00000000	 DCD         |??_C@_1KC@MNGCBOGM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAl?$AAe?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAe?$AAn?$AAt?$AAr?$AAy?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAc?$AAl?$AAa?$AAs@|
  000b4		 |$LN11@DeviceList@2|
  000b4	00000000	 DCD         |??_C@_1CE@EAPGKPBE@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAD?$AAe?$AAs?$AAt?$AAr?$AAo?$AAy?$AA?$AA@|
  000b8		 |$LN12@DeviceList@2|
  000b8	00000000	 DCD         |dpCurSettings|
  000bc		 |$M35507|

			 ENDP  ; |DeviceListDestroy|

	EXPORT	|GetDeviceListFromClass|
	EXPORT	|??_C@_1FM@FBMGAPFJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAa?$AAc?$AAc?$AAe?$AAs?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAg?$AAu?$AAi?$AAd?$AAD?$AAe?$AAv?$AAC@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@DBOLMNLM@?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAF?$AAr?$AAo?$AAm?$AAC?$AAl?$AAa?$AAs?$AAs?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|gpDeviceLists|
; File c:\wince600\public\common\sdk\inc\objbase.h

  00000			 AREA	 |.pdata|, PDATA
|$T35550| DCD	|$LN30@GetDeviceL|
	DCD	0xc0002205

  00000			 AREA	 |.pdata|, PDATA
|$T35552| DCD	|$LN11@GetDeviceL|
	DCD	0x40000601

  00000			 AREA	 |.xdata|, DATA
|$T35548| DCD	0x1
	DCD	|$LN15@GetDeviceL|
	DCD	|$LN16@GetDeviceL|
	DCD	|$LN11@GetDeviceL|
	DCD	|$LN12@GetDeviceL|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@FBMGAPFJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAa?$AAc?$AAc?$AAe?$AAs?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAg?$AAu?$AAi?$AAd?$AAD?$AAe?$AAv?$AAC@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "c"
	DCB	0x0, "e", 0x0, "p", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "a", 0x0, "c", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "g"
	DCB	0x0, "u", 0x0, "i", 0x0, "d", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, "C", 0x0, "l", 0x0, "a", 0x0, "s", 0x0, "s", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@DBOLMNLM@?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAF?$AAr?$AAo?$AAm?$AAC?$AAl?$AAa?$AAs?$AAs?$AA?$AA@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "L", 0x0, "i", 0x0, "s", 0x0, "t"
	DCB	0x0, "F", 0x0, "r", 0x0, "o", 0x0, "m", 0x0, "C", 0x0, "l"
	DCB	0x0, "a", 0x0, "s", 0x0, "s", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\pm\dll\pmutils.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T35548|

  00008		 |GetDeviceListFromClass| PROC

; 1345 : {

  00008		 |$LN30@GetDeviceL|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d0001	 stmdb       sp!, {r0}
  00010	e92d5830	 stmdb       sp!, {r4, r5, r11, r12, lr}
  00014	e28db014	 add         r11, sp, #0x14
  00018	e24dd008	 sub         sp, sp, #8
  0001c		 |$LN28@GetDeviceL|
  0001c	e1a05000	 mov         r5, r0
  00020	e58b5000	 str         r5, [r11]

; 1346 :     PDEVICE_LIST pdl;
; 1347 : 
; 1348 : #ifndef SHIP_BUILD
; 1349 :     SETFNAME(_T("GetDeviceListFromClass"));

  00024	e59f3078	 ldr         r3, [pc, #0x78]
  00028	e50b3018	 str         r3, [r11, #-0x18]
  0002c		 |$LN15@GetDeviceL|

; 1350 : #endif
; 1351 : 
; 1352 :     PREFAST_DEBUGCHK(guidDevClass != NULL);
; 1353 : 
; 1354 :     // look for a match
; 1355 :     __try {
; 1356 :         for(pdl = gpDeviceLists; pdl != NULL; pdl = pdl->pNext) {

  0002c	e59f306c	 ldr         r3, [pc, #0x6C]
  00030	e5934000	 ldr         r4, [r3]
  00034		 |$LN27@GetDeviceL|
  00034	e50b401c	 str         r4, [r11, #-0x1C]
  00038	e3540000	 cmp         r4, #0
  0003c	0a000006	 beq         |$LN16@GetDeviceL|

; 1357 :             if(*pdl->pGuid == *guidDevClass) {

  00040	e5940000	 ldr         r0, [r4]
  00044	e3a02010	 mov         r2, #0x10
  00048	e1a01005	 mov         r1, r5
  0004c	eb000000	 bl          memcmp
  00050	e3500000	 cmp         r0, #0

; 1350 : #endif
; 1351 : 
; 1352 :     PREFAST_DEBUGCHK(guidDevClass != NULL);
; 1353 : 
; 1354 :     // look for a match
; 1355 :     __try {
; 1356 :         for(pdl = gpDeviceLists; pdl != NULL; pdl = pdl->pNext) {

  00054	15944014	 ldrne       r4, [r4, #0x14]

; 1357 :             if(*pdl->pGuid == *guidDevClass) {

  00058	1afffff5	 bne         |$LN27@GetDeviceL|
  0005c		 |$LN16@GetDeviceL|

; 1358 :                 break;
; 1359 :             }
; 1360 :         }

  0005c	ea000007	 b           |$LN6@GetDeviceL|
  00060		 |$LN12@GetDeviceL|

; 1363 :         PMLOGMSG(TRUE, (_T("%s: exception accessing guidDevClass 0x%08x\r\n"),
; 1364 :             pszFname, guidDevClass));

  00060	e59b2000	 ldr         r2, [r11]
  00064	e51b1018	 ldr         r1, [r11, #-0x18]
  00068	e59f002c	 ldr         r0, [pc, #0x2C]
  0006c	eb000000	 bl          CeLogMsg

; 1365 :         pdl = NULL;

  00070	e3a04000	 mov         r4, #0
  00074	e50b401c	 str         r4, [r11, #-0x1C]
  00078	ea000000	 b           |$LN6@GetDeviceL|
  0007c		 |$LN26@GetDeviceL|

; 1366 :     }
; 1367 : 
; 1368 :     return pdl;

  0007c	e51b4018	 ldr         r4, [r11, #-0x18]
  00080		 |$LN6@GetDeviceL|

; 1369 : }

  00080	e1a00004	 mov         r0, r4
  00084	e24bd014	 sub         sp, r11, #0x14
  00088	e89d6830	 ldmia       sp, {r4, r5, r11, sp, lr}
  0008c	e12fff1e	 bx          lr

			 ENDP  ; |GetDeviceListFromClass|

  00090		 |$LN11@GetDeviceL|
  00090		 |$LN29@GetDeviceL|

; 1361 :     }
; 1362 :     __except(EXCEPTION_EXECUTE_HANDLER) {

  00090	e52de004	 str         lr, [sp, #-4]!
  00094		 |$LN14@GetDeviceL|
  00094		 |$LN32@GetDeviceL|
  00094	e3a00001	 mov         r0, #1
  00098		 |$LN13@GetDeviceL|
  00098	e49df004	 ldr         pc, [sp], #4
  0009c		 |$LN34@GetDeviceL|
  0009c		 |$LN35@GetDeviceL|
  0009c	00000000	 DCD         |??_C@_1FM@FBMGAPFJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAa?$AAc?$AAc?$AAe?$AAs?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAg?$AAu?$AAi?$AAd?$AAD?$AAe?$AAv?$AAC@|
  000a0		 |$LN36@GetDeviceL|
  000a0	00000000	 DCD         |gpDeviceLists|
  000a4		 |$LN37@GetDeviceL|
  000a4	00000000	 DCD         |??_C@_1CO@DBOLMNLM@?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAL?$AAi?$AAs?$AAt?$AAF?$AAr?$AAo?$AAm?$AAC?$AAl?$AAa?$AAs?$AAs?$AA?$AA@|
  000a8		 |$LN33@GetDeviceL|
  000a8		 |$LN31@GetDeviceL|
	EXPORT	|SystemPowerStateCreate|
	EXPORT	|??_C@_1EE@CCKMHPHP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AAu?$AAr?$AAe?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@IIMHOBCF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAp?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@HBMHNCBG@?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T35607| DCD	|$LN41@SystemPowe|
	DCD	0xc0005405

  00000			 AREA	 |.pdata|, PDATA
|$T35609| DCD	|$LN23@SystemPowe|
	DCD	0x40000301

  00000			 AREA	 |.pdata|, PDATA
|$T35611| DCD	|$LN16@SystemPowe|
	DCD	0x40000801

  00000			 AREA	 |.xdata|, DATA
|$T35605| DCD	0x2
	DCD	|$LN27@SystemPowe|
	DCD	|$LN28@SystemPowe|
	DCD	|$LN23@SystemPowe|
	DCD	|$LN24@SystemPowe|
	DCD	|$LN20@SystemPowe|
	DCD	|$LN21@SystemPowe|
	DCD	|$LN16@SystemPowe|
	DCD	|$LN17@SystemPowe|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@CCKMHPHP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AAu?$AAr?$AAe?$AA?$AN@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "u"
	DCB	0x0, "l", 0x0, "d", 0x0, "n", 0x0, "'", 0x0, "t", 0x0, " "
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "r"
	DCB	0x0, "u", 0x0, "c", 0x0, "t", 0x0, "u", 0x0, "r", 0x0, "e"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@IIMHOBCF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAp?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "c"
	DCB	0x0, "e", 0x0, "p", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "p", 0x0, "y", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "n", 0x0, "a", 0x0, "m"
	DCB	0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@HBMHNCBG@?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?$AA@| DCB "S"
	DCB	0x0, "y", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m", 0x0, "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "C", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T35605|

  00008		 |SystemPowerStateCreate| PROC

; 1376 : {

  00008		 |$LN41@SystemPowe|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d0001	 stmdb       sp!, {r0}
  00010	e92d5ff0	 stmdb       sp!, {r4 - r12, lr}
  00014	e28db028	 add         r11, sp, #0x28
  00018	e24dd010	 sub         sp, sp, #0x10
  0001c		 |$LN39@SystemPowe|
  0001c	e1a0a000	 mov         r10, r0
  00020	e58ba000	 str         r10, [r11]

; 1377 :     PSYSTEM_POWER_STATE psps;
; 1378 : 
; 1379 : #ifndef SHIP_BUILD
; 1380 :     SETFNAME(_T("SystemPowerStateCreate"));

  00024	e59f6154	 ldr         r6, [pc, #0x154]

; 1381 : #endif
; 1382 : 
; 1383 :     PREFAST_DEBUGCHK(pszName != NULL);
; 1384 : 
; 1385 :     DWORD cchName = 0;

  00028	e3a07000	 mov         r7, #0
  0002c	e50b702c	 str         r7, [r11, #-0x2C]
  00030	e50b6034	 str         r6, [r11, #-0x34]
  00034		 |$LN20@SystemPowe|

; 1386 : 
; 1387 :     __try {
; 1388 :         cchName = _tcslen(pszName);

  00034	e1a0000a	 mov         r0, r10
  00038	eb000000	 bl          wcslen
  0003c	e1a08000	 mov         r8, r0
  00040	e50b8038	 str         r8, [r11, #-0x38]
  00044	e50b802c	 str         r8, [r11, #-0x2C]

; 1389 :         DWORD dwSize = sizeof(*psps) + ((cchName + 1) * sizeof(pszName[0]));

  00048	e2883007	 add         r3, r8, #7
  0004c	e1a00083	 mov         r0, r3, lsl #1

; 1390 :         psps = (PSYSTEM_POWER_STATE) PmAlloc(dwSize);

  00050	eb000000	 bl          PmAlloc
  00054	e1a04000	 mov         r4, r0
  00058	e50b4030	 str         r4, [r11, #-0x30]
  0005c		 |$LN21@SystemPowe|

; 1391 :     }

  0005c	e59f5114	 ldr         r5, [pc, #0x114]
  00060	e51b3038	 ldr         r3, [r11, #-0x38]
  00064	ea00000c	 b           |$LN22@SystemPowe|
  00068		 |$LN17@SystemPowe|

; 1393 :         PMLOGMSG(ZONE_WARN, (_T("%s: exception calculating size\r\n"), pszFname));

  00068	e59f5108	 ldr         r5, [pc, #0x108]
  0006c	e5953440	 ldr         r3, [r5, #0x440]
  00070	e3130002	 tst         r3, #2
  00074	159f1104	 ldrne       r1, [pc, #0x104]
  00078	159f00fc	 ldrne       r0, [pc, #0xFC]
  0007c	1b000000	 blne        CeLogMsg

; 1394 :         psps = NULL;

  00080	e3a07000	 mov         r7, #0
  00084	e1a04007	 mov         r4, r7
  00088	e50b7030	 str         r7, [r11, #-0x30]
  0008c	e59ba000	 ldr         r10, [r11]
  00090	e51b6034	 ldr         r6, [r11, #-0x34]
  00094	e51b302c	 ldr         r3, [r11, #-0x2C]
  00098	e50b3038	 str         r3, [r11, #-0x38]
  0009c		 |$LN22@SystemPowe|

; 1395 :     }
; 1396 : 
; 1397 :     if(psps != NULL) {

  0009c	e3540000	 cmp         r4, #0
  000a0	0a000020	 beq         |$LN38@SystemPowe|

; 1398 :         memset(psps, 0, sizeof(*psps));

  000a4	e3a02000	 mov         r2, #0
  000a8	e5842000	 str         r2, [r4]
  000ac	e5842004	 str         r2, [r4, #4]
  000b0	e5842008	 str         r2, [r4, #8]
  000b4		 |$LN27@SystemPowe|

; 1399 :         __try {
; 1400 :             LPTSTR pszNameCopy = (LPTSTR) ((LPBYTE) psps + sizeof(*psps));

  000b4	e284900c	 add         r9, r4, #0xC

; 1401 :             // Copy the name, converting to lower case.  We want to avoid doing
; 1402 :             // case-sensitive comparisons in the platform code while file system
; 1403 :             // access may be disabled.
; 1404 :             for (DWORD dwIndex = 0; dwIndex < cchName; dwIndex++) {

  000b8	e1a08007	 mov         r8, r7
  000bc		 |$LL3@SystemPowe|
  000bc	e1580003	 cmp         r8, r3
  000c0	2a000007	 bcs         |$LN1@SystemPowe|

; 1405 :                 pszNameCopy[dwIndex] = _totlower(pszName[dwIndex]);

  000c4	e08a3088	 add         r3, r10, r8, lsl #1
  000c8	e1d300b0	 ldrh        r0, [r3]
  000cc	eb000000	 bl          towlower
  000d0	e0893088	 add         r3, r9, r8, lsl #1
  000d4	e1c300b0	 strh        r0, [r3]

; 1401 :             // Copy the name, converting to lower case.  We want to avoid doing
; 1402 :             // case-sensitive comparisons in the platform code while file system
; 1403 :             // access may be disabled.
; 1404 :             for (DWORD dwIndex = 0; dwIndex < cchName; dwIndex++) {

  000d8	e2888001	 add         r8, r8, #1
  000dc	e51b3038	 ldr         r3, [r11, #-0x38]
  000e0	eafffff5	 b           |$LL3@SystemPowe|
  000e4		 |$LN1@SystemPowe|

; 1406 :             }
; 1407 :             pszNameCopy[cchName] = 0;

  000e4	e0893083	 add         r3, r9, r3, lsl #1
  000e8	e1c370b0	 strh        r7, [r3]

; 1408 :             psps->pszName = pszNameCopy;

  000ec	e5849000	 str         r9, [r4]
  000f0		 |$LN28@SystemPowe|
  000f0	ea00000a	 b           |$LN29@SystemPowe|
  000f4		 |$LN24@SystemPowe|

; 1411 :             PMLOGMSG(ZONE_WARN, (_T("%s: exception copying name\r\n"),
; 1412 :                 pszFname));

  000f4	e59f507c	 ldr         r5, [pc, #0x7C]
  000f8	e5953440	 ldr         r3, [r5, #0x440]
  000fc	e3130002	 tst         r3, #2
  00100	e51b6034	 ldr         r6, [r11, #-0x34]
  00104	159f0068	 ldrne       r0, [pc, #0x68]
  00108	11a01006	 movne       r1, r6
  0010c	1b000000	 blne        CeLogMsg

; 1413 :             PmFree(psps);

  00110	e51b0030	 ldr         r0, [r11, #-0x30]
  00114	eb000000	 bl          PmFree

; 1414 :             psps = NULL;

  00118	e3a04000	 mov         r4, #0
  0011c	e50b4030	 str         r4, [r11, #-0x30]
  00120		 |$LN29@SystemPowe|

; 1415 :         }
; 1416 :     }
; 1417 : 
; 1418 :     PMLOGMSG(psps == NULL && ZONE_WARN, 
; 1419 :         (_T("%s: couldn't allocate structure\r\n"), pszFname));

  00120	e3540000	 cmp         r4, #0
  00124	1a000007	 bne         |$LN7@SystemPowe|
  00128		 |$LN38@SystemPowe|
  00128	e5953440	 ldr         r3, [r5, #0x440]
  0012c	e3130002	 tst         r3, #2
  00130	0a000004	 beq         |$LN7@SystemPowe|
  00134	e59f0034	 ldr         r0, [pc, #0x34]
  00138	e1a01006	 mov         r1, r6
  0013c	eb000000	 bl          CeLogMsg

; 1420 : 
; 1421 :     return psps;

  00140	ea000000	 b           |$LN7@SystemPowe|
  00144		 |$LN36@SystemPowe|
  00144	e51b4034	 ldr         r4, [r11, #-0x34]
  00148		 |$LN7@SystemPowe|

; 1422 : }

  00148	e1a00004	 mov         r0, r4
  0014c	e24bd028	 sub         sp, r11, #0x28
  00150	e89d6ff0	 ldmia       sp, {r4 - r11, sp, lr}
  00154	e12fff1e	 bx          lr

			 ENDP  ; |SystemPowerStateCreate|

  00158		 |$LN23@SystemPowe|
  00158		 |$LN40@SystemPowe|

; 1409 :         }
; 1410 :         __except(EXCEPTION_EXECUTE_HANDLER) {

  00158	e52de004	 str         lr, [sp, #-4]!
  0015c		 |$LN26@SystemPowe|
  0015c		 |$LN44@SystemPowe|
  0015c	e3a00001	 mov         r0, #1
  00160		 |$LN25@SystemPowe|
  00160	e49df004	 ldr         pc, [sp], #4
  00164		 |$LN45@SystemPowe|
  00164		 |$LN16@SystemPowe|
  00164		 |$LN42@SystemPowe|

; 1392 :     __except(EXCEPTION_EXECUTE_HANDLER) {

  00164	e52de004	 str         lr, [sp, #-4]!
  00168		 |$LN19@SystemPowe|
  00168		 |$LN46@SystemPowe|
  00168	e3a00001	 mov         r0, #1
  0016c		 |$LN18@SystemPowe|
  0016c	e49df004	 ldr         pc, [sp], #4
  00170		 |$LN48@SystemPowe|
  00170		 |$LN49@SystemPowe|
  00170	00000000	 DCD         |??_C@_1EE@CCKMHPHP@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AAs?$AAt?$AAr?$AAu?$AAc?$AAt?$AAu?$AAr?$AAe?$AA?$AN@|
  00174		 |$LN50@SystemPowe|
  00174	00000000	 DCD         |??_C@_1DK@IIMHOBCF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAp?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  00178		 |$LN51@SystemPowe|
  00178	00000000	 DCD         |dpCurSettings|
  0017c		 |$LN52@SystemPowe|
  0017c	00000000	 DCD         |??_C@_1EC@JAIMPFEK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAa?$AAl?$AAc?$AAu?$AAl?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?$AN?$AA?6@|
  00180		 |$LN53@SystemPowe|
  00180	00000000	 DCD         |??_C@_1CO@HBMHNCBG@?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?$AA@|
  00184		 |$LN47@SystemPowe|
  00184		 |$LN43@SystemPowe|
	EXPORT	|SystemPowerStateDestroy|

  00000			 AREA	 |.pdata|, PDATA
|$T35634| DCD	|$LN6@SystemPowe@2|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SystemPowerStateDestroy| PROC

; 1427 : {

  00000		 |$LN6@SystemPowe@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35631|
  00004	e3500000	 cmp         r0, #0

; 1428 :     BOOL fOk = TRUE;
; 1429 : 
; 1430 :     if(psps != NULL) {
; 1431 :         PmFree(psps);

  00008	1b000000	 blne        PmFree

; 1432 :     }
; 1433 : 
; 1434 :     return fOk;

  0000c	e3a00001	 mov         r0, #1

; 1435 : }

  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$M35632|

			 ENDP  ; |SystemPowerStateDestroy|

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|ActivityTimerCreate|
	EXPORT	|??_C@_1GC@IBIDOKJC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAr?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@LNHDKALC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@CFEGDMOD@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAp?$AAa?$AAr?$AAs?$AAe?$AA?5?$AAw?$AAa?$AAk?$AAe?$AA?5?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@JJBBHDOP@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AA?$CF?$AAs?$AA_?$AAI?$AAn?$AAa?$AAc?$AAt?$AAi?$AAv?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@NKBHAHHA@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AA?$CF?$AAs?$AA_?$AAA?$AAc?$AAt?$AAi?$AAv?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@MAPGODIM@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HC@EKMABGEG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAf?$AAo?$AAr?$AAm?$AAa?$AAt?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AAf@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@PMPBMFMH@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AA?1?$AA?$CF?$AAs?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|CloseHandle|
	IMPORT	|wcstol|
	IMPORT	|CreateEventW|
	IMPORT	|_snwprintf|

  00000			 AREA	 |.pdata|, PDATA
|$T35679| DCD	|$LN47@ActivityTi|
	DCD	0xc000d802

  00000			 AREA	 |.xdata|, DATA
|$T35675| DCD	0xffffffdc

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@IBIDOKJC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAr?$AAe@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "A", 0x0, "c", 0x0, "t"
	DCB	0x0, "i", 0x0, "v", 0x0, "i", 0x0, "t", 0x0, "y", 0x0, "T"
	DCB	0x0, "i", 0x0, "m", 0x0, "e", 0x0, "r", 0x0, "C", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "(", 0x0, "'"
	DCB	0x0, "%", 0x0, "s", 0x0, "'", 0x0, ")", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@LNHDKALC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "s"
	DCB	0x0, "o", 0x0, "u", 0x0, "r", 0x0, "c", 0x0, "e", 0x0, " "
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "'", 0x0, "%"
	DCB	0x0, "s", 0x0, "'", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@CFEGDMOD@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAp?$AAa?$AAr?$AAs?$AAe?$AA?5?$AAw?$AAa?$AAk?$AAe?$AA?5?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "n"
	DCB	0x0, "'", 0x0, "t", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r"
	DCB	0x0, "s", 0x0, "e", 0x0, " ", 0x0, "w", 0x0, "a", 0x0, "k"
	DCB	0x0, "e", 0x0, " ", 0x0, "s", 0x0, "o", 0x0, "u", 0x0, "r"
	DCB	0x0, "c", 0x0, "e", 0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s"
	DCB	0x0, "'", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "t", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@JJBBHDOP@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AA?$CF?$AAs?$AA_?$AAI?$AAn?$AAa?$AAc?$AAt?$AAi?$AAv?$AAe?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "M", 0x0, "a"
	DCB	0x0, "n", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "r", 0x0, "/"
	DCB	0x0, "%", 0x0, "s", 0x0, "_", 0x0, "I", 0x0, "n", 0x0, "a"
	DCB	0x0, "c", 0x0, "t", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@NKBHAHHA@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AA?$CF?$AAs?$AA_?$AAA?$AAc?$AAt?$AAi?$AAv?$AAe?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "M", 0x0, "a"
	DCB	0x0, "n", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "r", 0x0, "/"
	DCB	0x0, "%", 0x0, "s", 0x0, "_", 0x0, "A", 0x0, "c", 0x0, "t"
	DCB	0x0, "i", 0x0, "v", 0x0, "e", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@MAPGODIM@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?$AA@| DCB "A"
	DCB	0x0, "c", 0x0, "t", 0x0, "i", 0x0, "v", 0x0, "i", 0x0, "t"
	DCB	0x0, "y", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "r"
	DCB	0x0, "C", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@EKMABGEG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAf?$AAo?$AAr?$AAm?$AAa?$AAt?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AAf@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "u"
	DCB	0x0, "l", 0x0, "d", 0x0, "n", 0x0, "'", 0x0, "t", 0x0, " "
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, "m", 0x0, "a", 0x0, "t"
	DCB	0x0, " ", 0x0, "e", 0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t"
	DCB	0x0, " ", 0x0, "n", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, " "
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "a", 0x0, "c"
	DCB	0x0, "t", 0x0, "i", 0x0, "v", 0x0, "i", 0x0, "t", 0x0, "y"
	DCB	0x0, " ", 0x0, "t", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@PMPBMFMH@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AA?1?$AA?$CF?$AAs?$AA?$AA@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "M", 0x0, "a"
	DCB	0x0, "n", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "r", 0x0, "/"
	DCB	0x0, "A", 0x0, "c", 0x0, "t", 0x0, "i", 0x0, "v", 0x0, "i"
	DCB	0x0, "t", 0x0, "y", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e"
	DCB	0x0, "r", 0x0, "/", 0x0, "%", 0x0, "s", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T35675|

  00008		 |ActivityTimerCreate| PROC

; 1449 : {

  00008		 |$LN47@ActivityTi|
  00008	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  0000c	e24dde21	 sub         sp, sp, #0x21, 28
  00010		 |$M35676|
  00010	e1a09002	 mov         r9, r2
  00014	e1a08001	 mov         r8, r1
  00018	e1a06000	 mov         r6, r0
  0001c	e59f3340	 ldr         r3, [pc, #0x340]
  00020	e5933000	 ldr         r3, [r3]
  00024	e58d320c	 str         r3, [sp, #0x20C]

; 1450 :     PACTIVITY_TIMER pat = NULL;
; 1451 :     DWORD dwWakeSources, dwSize;
; 1452 :     LPTSTR pszSource;
; 1453 :     TCHAR szPath[MAX_PATH];
; 1454 :     BOOL fOk = TRUE;
; 1455 : 
; 1456 : #ifndef SHIP_BUILD
; 1457 :     SETFNAME(_T("ActivityTimerCreate"));
; 1458 : #endif
; 1459 : 
; 1460 :     PREFAST_DEBUGCHK(pszName != NULL );
; 1461 :     PREFAST_DEBUGCHK(pszSources != NULL);
; 1462 :     DEBUGCHK(*pszName != 0);
; 1463 : 
; 1464 :     // calculate the number of wake sources and allocate an array for them
; 1465 :     dwWakeSources = 0;
; 1466 :     pszSource = pszSources;
; 1467 :     while(*pszSource != 0) {

  00028	e1d930b0	 ldrh        r3, [r9]
  0002c	e3a05001	 mov         r5, #1
  00030	e3a0a000	 mov         r10, #0
  00034	e1a04009	 mov         r4, r9
  00038	ea000005	 b           |$LN43@ActivityTi|
  0003c		 |$LL21@ActivityTi|

; 1468 :         pszSource += _tcslen(pszSource) + 1;

  0003c	e1a00004	 mov         r0, r4
  00040	eb000000	 bl          wcslen
  00044	e2803001	 add         r3, r0, #1
  00048	e0844083	 add         r4, r4, r3, lsl #1
  0004c	e1d430b0	 ldrh        r3, [r4]

; 1469 :         dwWakeSources++;

  00050	e28aa001	 add         r10, r10, #1
  00054		 |$LN43@ActivityTi|
  00054	e3530000	 cmp         r3, #0
  00058	1afffff7	 bne         |$LL21@ActivityTi|

; 1470 :     }
; 1471 : 
; 1472 :     // allocate and initialize structure and members
; 1473 :     dwSize = sizeof(*pat) + ((dwWakeSources + 1) * sizeof(pat->pdwWakeSources[0])) 
; 1474 :         + ((_tcslen(pszName) + 1) * sizeof(*pszName));

  0005c	e1a00006	 mov         r0, r6
  00060	eb000000	 bl          wcslen

; 1475 :     pat = (PACTIVITY_TIMER) PmAlloc(dwSize);

  00064	e080308a	 add         r3, r0, r10, lsl #1
  00068	e2833015	 add         r3, r3, #0x15
  0006c	e1a00083	 mov         r0, r3, lsl #1
  00070	eb000000	 bl          PmAlloc
  00074	e59f72e4	 ldr         r7, [pc, #0x2E4]
  00078	e1b04000	 movs        r4, r0

; 1476 :     if(pat != NULL) {

  0007c	0a00009e	 beq         |$LN41@ActivityTi|

; 1477 :         memset(pat, 0, sizeof(*pat));

  00080	e3a02024	 mov         r2, #0x24
  00084	e3a01000	 mov         r1, #0
  00088	e1a00004	 mov         r0, r4
  0008c	eb000000	 bl          memset

; 1478 :         pat->dwTimeout = dwTimeout;                 // timeout in milliseconds
; 1479 :         if(pat->dwTimeout == 0) {

  00090	e3580000	 cmp         r8, #0

; 1480 :             pat->dwTimeLeft = INFINITE;

  00094	03e03000	 mvneq       r3, #0
  00098	05843008	 streq       r3, [r4, #8]

; 1481 :         } else {
; 1482 :             pat->dwTimeLeft = pat->dwTimeout;
; 1483 :         }
; 1484 :         pat->pdwWakeSources = (LPDWORD) ((LPBYTE) pat + sizeof(*pat));
; 1485 :         pat->pszName = (LPTSTR) ((LPBYTE) pat->pdwWakeSources 
; 1486 :             + ((dwWakeSources + 1) * sizeof(pat->pdwWakeSources[0])));

  0009c	e28a3001	 add         r3, r10, #1
  000a0	e284e024	 add         lr, r4, #0x24

; 1487 : 
; 1488 :         // create the reset event
; 1489 :         if(fOk &&
; 1490 :             _sntprintf(szPath, dim(szPath), _T("PowerManager/ActivityTimer/%s"), pszName) == (-1)) {

  000a4	e59f22b0	 ldr         r2, [pc, #0x2B0]
  000a8	e08e3103	 add         r3, lr, r3, lsl #2
  000ac	e5843000	 str         r3, [r4]
  000b0	e1a03006	 mov         r3, r6
  000b4	e3a01f41	 mov         r1, #0x41, 30
  000b8	e28d0004	 add         r0, sp, #4
  000bc	e5848004	 str         r8, [r4, #4]
  000c0	15848008	 strne       r8, [r4, #8]
  000c4	e584e018	 str         lr, [r4, #0x18]
  000c8	eb000000	 bl          _snwprintf
  000cc	e3700001	 cmn         r0, #1
  000d0	1a000020	 bne         |$LN16@ActivityTi|

; 1491 :             PMLOGMSG(ZONE_WARN, (_T("%s: couldn't format event name for activity timer '%s'\r\n"),
; 1492 :                 pszFname, pszName));

  000d4	e5973440	 ldr         r3, [r7, #0x440]
  000d8	e3130002	 tst         r3, #2
  000dc	159f125c	 ldrne       r1, [pc, #0x25C]
  000e0	159f0268	 ldrne       r0, [pc, #0x268]
  000e4	11a02006	 movne       r2, r6
  000e8	1b000000	 blne        CeLogMsg

; 1493 :             fOk = FALSE;

  000ec	e3a05000	 mov         r5, #0
  000f0		 |$LN14@ActivityTi|

; 1505 :         } else {
; 1506 :             szPath[dim(szPath)-1] = 0;

  000f0	e3a03000	 mov         r3, #0
  000f4	e28dcc02	 add         r12, sp, #2, 24
  000f8	e1cc30ba	 strh        r3, [r12, #0xA]

; 1507 :             pat->hevActive = CreateEvent(NULL, TRUE, FALSE, szPath);

  000fc	e28d3004	 add         r3, sp, #4
  00100	e3a02000	 mov         r2, #0
  00104	e3a01001	 mov         r1, #1
  00108	e3a00000	 mov         r0, #0
  0010c	eb000000	 bl          CreateEventW
  00110	e5840010	 str         r0, [r4, #0x10]

; 1508 :         }
; 1509 : 
; 1510 :         // create the event indicating inactivity
; 1511 :         if(fOk &&
; 1512 :             _sntprintf(szPath, dim(szPath), _T("PowerManager/%s_Inactive"), pszName) == (-1)) {

  00114	e3550000	 cmp         r5, #0
  00118	0a000026	 beq         |$LN12@ActivityTi|
  0011c	e59f2234	 ldr         r2, [pc, #0x234]
  00120	e1a03006	 mov         r3, r6
  00124	e3a01f41	 mov         r1, #0x41, 30
  00128	e28d0004	 add         r0, sp, #4
  0012c	eb000000	 bl          _snwprintf
  00130	e3700001	 cmn         r0, #1
  00134	1a00001f	 bne         |$LN12@ActivityTi|

; 1513 :             PMLOGMSG(ZONE_WARN, (_T("%s: couldn't format event name for activity timer '%s'\r\n"),
; 1514 :                 pszFname, pszName));

  00138	e5973440	 ldr         r3, [r7, #0x440]
  0013c	e3130002	 tst         r3, #2
  00140	159f11f8	 ldrne       r1, [pc, #0x1F8]
  00144	159f0204	 ldrne       r0, [pc, #0x204]
  00148	11a02006	 movne       r2, r6
  0014c	1b000000	 blne        CeLogMsg

; 1515 :             fOk = FALSE;

  00150	e3a05000	 mov         r5, #0

; 1516 :         } else {

  00154	ea000020	 b           |$LN11@ActivityTi|
  00158		 |$LN16@ActivityTi|

; 1494 :         } else {
; 1495 :             szPath[dim(szPath)-1] = 0;

  00158	e3a03000	 mov         r3, #0
  0015c	e28dcc02	 add         r12, sp, #2, 24
  00160	e1cc30ba	 strh        r3, [r12, #0xA]

; 1496 :             pat->hevReset = CreateEvent(NULL, FALSE, FALSE, szPath);

  00164	e28d3004	 add         r3, sp, #4
  00168	e3a02000	 mov         r2, #0
  0016c	e3a01000	 mov         r1, #0
  00170	e3a00000	 mov         r0, #0
  00174	eb000000	 bl          CreateEventW

; 1497 :         }
; 1498 : 
; 1499 :         // create the event indicating activity
; 1500 :         if(fOk &&
; 1501 :             _sntprintf(szPath, dim(szPath), _T("PowerManager/%s_Active"), pszName) == (-1)) {

  00178	e59f21d4	 ldr         r2, [pc, #0x1D4]
  0017c	e1a03000	 mov         r3, r0
  00180	e584300c	 str         r3, [r4, #0xC]
  00184	e1a03006	 mov         r3, r6
  00188	e28d0004	 add         r0, sp, #4
  0018c	e3a01f41	 mov         r1, #0x41, 30
  00190	eb000000	 bl          _snwprintf
  00194	e3700001	 cmn         r0, #1
  00198	1affffd4	 bne         |$LN14@ActivityTi|

; 1502 :             PMLOGMSG(ZONE_WARN, (_T("%s: couldn't format event name for activity timer '%s'\r\n"),
; 1503 :                 pszFname, pszName));

  0019c	e5973440	 ldr         r3, [r7, #0x440]
  001a0	e3130002	 tst         r3, #2
  001a4	159f01a4	 ldrne       r0, [pc, #0x1A4]
  001a8	159f1190	 ldrne       r1, [pc, #0x190]
  001ac	11a02006	 movne       r2, r6
  001b0	1b000000	 blne        CeLogMsg

; 1504 :             fOk = FALSE;

  001b4	e3a05000	 mov         r5, #0
  001b8		 |$LN12@ActivityTi|

; 1517 :             szPath[dim(szPath)-1] = 0;

  001b8	e3a03000	 mov         r3, #0
  001bc	e28dcc02	 add         r12, sp, #2, 24
  001c0	e1cc30ba	 strh        r3, [r12, #0xA]

; 1518 :             pat->hevInactive = CreateEvent(NULL, TRUE, FALSE, szPath);

  001c4	e28d3004	 add         r3, sp, #4
  001c8	e3a02000	 mov         r2, #0
  001cc	e3a01001	 mov         r1, #1
  001d0	e3a00000	 mov         r0, #0
  001d4	eb000000	 bl          CreateEventW
  001d8	e5840014	 str         r0, [r4, #0x14]
  001dc		 |$LN11@ActivityTi|

; 1519 :         }
; 1520 : 
; 1521 :         // did we get everything we needed?
; 1522 :         if(pat->hevReset == NULL || pat->hevActive == NULL || pat->hevInactive == NULL) {

  001dc	e594300c	 ldr         r3, [r4, #0xC]
  001e0	e3530000	 cmp         r3, #0
  001e4	0a00002c	 beq         |$LN9@ActivityTi|
  001e8	e5943010	 ldr         r3, [r4, #0x10]
  001ec	e3530000	 cmp         r3, #0
  001f0	0a000029	 beq         |$LN9@ActivityTi|
  001f4	e5943014	 ldr         r3, [r4, #0x14]
  001f8	e3530000	 cmp         r3, #0
  001fc	0a000026	 beq         |$LN9@ActivityTi|

; 1526 :         } else {
; 1527 :             DWORD dwIndex;
; 1528 : 
; 1529 :             // init activity name
; 1530 :             _tcscpy(pat->pszName, pszName);

  00200	e5940000	 ldr         r0, [r4]
  00204	e1a01006	 mov         r1, r6
  00208	eb000000	 bl          wcscpy

; 1531 : 
; 1532 :             // init wake sources
; 1533 :             dwIndex = 0;

  0020c	e3a08000	 mov         r8, #0
  00210	ea00001b	 b           |$LN44@ActivityTi|

; 1534 :             pszSource = pszSources;
; 1535 :             while(fOk && *pszSource != 0 && dwIndex < dwWakeSources) {

  00214		 |$LL7@ActivityTi|
  00214	e1d930b0	 ldrh        r3, [r9]
  00218	e3530000	 cmp         r3, #0
  0021c	0a00001a	 beq         |$LN42@ActivityTi|
  00220	e158000a	 cmp         r8, r10
  00224	2a000018	 bcs         |$LN42@ActivityTi|

; 1536 :                 LPTSTR pszEnd;
; 1537 :                 pat->pdwWakeSources[dwIndex] = _tcstol(pszSource, &pszEnd, 0);

  00228	e3a02000	 mov         r2, #0
  0022c	e28d1000	 add         r1, sp, #0
  00230	e1a00009	 mov         r0, r9
  00234	eb000000	 bl          wcstol
  00238	e5943018	 ldr         r3, [r4, #0x18]
  0023c	e7830108	 str         r0, [r3, +r8, lsl #2]

; 1538 :                 if(*pszEnd != 0) {

  00240	e59d3000	 ldr         r3, [sp]
  00244	e1d330b0	 ldrh        r3, [r3]
  00248	e3530000	 cmp         r3, #0
  0024c	0a000007	 beq         |$LN5@ActivityTi|

; 1539 :                     PMLOGMSG(ZONE_WARN, 
; 1540 :                         (_T("%s: can't parse wake source '%s' for timer '%s'\r\n"),
; 1541 :                         pszFname, pszSource, pszName));

  00250	e5973440	 ldr         r3, [r7, #0x440]
  00254	e3130002	 tst         r3, #2
  00258	159f10e0	 ldrne       r1, [pc, #0xE0]
  0025c	159f00e8	 ldrne       r0, [pc, #0xE8]
  00260	11a03006	 movne       r3, r6
  00264	11a02009	 movne       r2, r9
  00268	1b000000	 blne        CeLogMsg

; 1542 :                     fOk = FALSE;

  0026c	e3a05000	 mov         r5, #0
  00270		 |$LN5@ActivityTi|

; 1543 :                 }
; 1544 :                 pszSource += _tcslen(pszSource) + 1;

  00270	e1a00009	 mov         r0, r9
  00274	eb000000	 bl          wcslen
  00278	e2803001	 add         r3, r0, #1
  0027c	e0899083	 add         r9, r9, r3, lsl #1

; 1545 :                 dwIndex++;

  00280	e2888001	 add         r8, r8, #1
  00284		 |$LN44@ActivityTi|
  00284	e3550000	 cmp         r5, #0
  00288	1affffe1	 bne         |$LL7@ActivityTi|
  0028c		 |$LN42@ActivityTi|

; 1546 :             }
; 1547 : 
; 1548 :             // terminate the list with SYSINTR_NOP
; 1549 :             pat->pdwWakeSources[dwIndex] = SYSINTR_NOP;

  0028c	e5943018	 ldr         r3, [r4, #0x18]
  00290	e3a02000	 mov         r2, #0
  00294	e7832108	 str         r2, [r3, +r8, lsl #2]
  00298	ea000006	 b           |$LN8@ActivityTi|
  0029c		 |$LN9@ActivityTi|

; 1513 :             PMLOGMSG(ZONE_WARN, (_T("%s: couldn't format event name for activity timer '%s'\r\n"),
; 1514 :                 pszFname, pszName));

  0029c	e5973440	 ldr         r3, [r7, #0x440]

; 1523 :             PMLOGMSG(ZONE_WARN, (_T("%s: resource allocation failed for '%s'\r\n"), 
; 1524 :                 pszFname, pszName));

  002a0	e3130002	 tst         r3, #2
  002a4	159f009c	 ldrne       r0, [pc, #0x9C]
  002a8	159f1090	 ldrne       r1, [pc, #0x90]
  002ac	11a02006	 movne       r2, r6
  002b0	1b000000	 blne        CeLogMsg

; 1525 :             fOk = FALSE;

  002b4	e3a05000	 mov         r5, #0
  002b8		 |$LN8@ActivityTi|

; 1550 :         }
; 1551 :     }
; 1552 : 
; 1553 : 
; 1554 :     // clean up if necessary
; 1555 :     if(!fOk && pat != NULL) {

  002b8	e3550000	 cmp         r5, #0
  002bc	1a00000e	 bne         |$LN41@ActivityTi|

; 1556 :         if(pat->hevReset != NULL) CloseHandle(pat->hevReset);

  002c0	e594300c	 ldr         r3, [r4, #0xC]
  002c4	e3530000	 cmp         r3, #0
  002c8	11a00003	 movne       r0, r3
  002cc	1b000000	 blne        CloseHandle

; 1557 :         if(pat->hevActive != NULL) CloseHandle(pat->hevActive);

  002d0	e5943010	 ldr         r3, [r4, #0x10]
  002d4	e3530000	 cmp         r3, #0
  002d8	11a00003	 movne       r0, r3
  002dc	1b000000	 blne        CloseHandle

; 1558 :         if(pat->hevInactive != NULL) CloseHandle(pat->hevInactive);

  002e0	e5943014	 ldr         r3, [r4, #0x14]
  002e4	e3530000	 cmp         r3, #0
  002e8	11a00003	 movne       r0, r3
  002ec	1b000000	 blne        CloseHandle

; 1559 :         PmFree(pat);

  002f0	e1a00004	 mov         r0, r4
  002f4	eb000000	 bl          PmFree

; 1560 :         pat = NULL;

  002f8	e3a04000	 mov         r4, #0
  002fc		 |$LN41@ActivityTi|
  002fc	e5973440	 ldr         r3, [r7, #0x440]

; 1561 :     }
; 1562 : 
; 1563 :     PMLOGMSG(ZONE_INIT || (pat == NULL && ZONE_WARN), 
; 1564 :         (_T("%s: ActivityTimerCreate('%s') returning 0x%08x\r\n"), pszFname, pszName));

  00300	e3130004	 tst         r3, #4
  00304	1a000003	 bne         |$LN35@ActivityTi|
  00308	e3540000	 cmp         r4, #0
  0030c	1a000005	 bne         |$LN36@ActivityTi|
  00310	e3130002	 tst         r3, #2
  00314	0a000003	 beq         |$LN36@ActivityTi|
  00318		 |$LN35@ActivityTi|
  00318	e59f0024	 ldr         r0, [pc, #0x24]
  0031c	e59f101c	 ldr         r1, [pc, #0x1C]
  00320	e1a02006	 mov         r2, r6
  00324	eb000000	 bl          CeLogMsg
  00328		 |$LN36@ActivityTi|

; 1565 :     return pat;

  00328	e59d020c	 ldr         r0, [sp, #0x20C]
  0032c	eb000000	 bl          __security_check_cookie

; 1566 : }

  00330	e1a00004	 mov         r0, r4
  00334	e28dde21	 add         sp, sp, #0x21, 28
  00338	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  0033c	e12fff1e	 bx          lr
  00340		 |$LN48@ActivityTi|
  00340		 |$LN49@ActivityTi|
  00340	00000000	 DCD         |??_C@_1CI@MAPGODIM@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?$AA@|
  00344		 |$LN50@ActivityTi|
  00344	00000000	 DCD         |??_C@_1GC@IBIDOKJC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAr?$AAe@|
  00348		 |$LN51@ActivityTi|
  00348	00000000	 DCD         |??_C@_1FE@LNHDKALC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAf@|
  0034c		 |$LN52@ActivityTi|
  0034c	00000000	 DCD         |??_C@_1GE@CFEGDMOD@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAp?$AAa?$AAr?$AAs?$AAe?$AA?5?$AAw?$AAa?$AAk?$AAe?$AA?5?$AAs?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8@|
  00350		 |$LN53@ActivityTi|
  00350	00000000	 DCD         |??_C@_1HC@EKMABGEG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAu?$AAl?$AAd?$AAn?$AA?8?$AAt?$AA?5?$AAf?$AAo?$AAr?$AAm?$AAa?$AAt?$AA?5?$AAe?$AAv?$AAe?$AAn?$AAt?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AAf@|
  00354		 |$LN54@ActivityTi|
  00354	00000000	 DCD         |??_C@_1CO@NKBHAHHA@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AA?$CF?$AAs?$AA_?$AAA?$AAc?$AAt?$AAi?$AAv?$AAe?$AA?$AA@|
  00358		 |$LN55@ActivityTi|
  00358	00000000	 DCD         |??_C@_1DC@JJBBHDOP@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AA?$CF?$AAs?$AA_?$AAI?$AAn?$AAa?$AAc?$AAt?$AAi?$AAv?$AAe?$AA?$AA@|
  0035c		 |$LN56@ActivityTi|
  0035c	00000000	 DCD         |??_C@_1DM@PMPBMFMH@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AA?1?$AA?$CF?$AAs?$AA?$AA@|
  00360		 |$LN57@ActivityTi|
  00360	00000000	 DCD         |dpCurSettings|
  00364		 |$LN58@ActivityTi|
  00364	00000000	 DCD         |__security_cookie|
  00368		 |$M35677|

			 ENDP  ; |ActivityTimerCreate|

	EXPORT	|ActivityTimerDestroy|

  00000			 AREA	 |.pdata|, PDATA
|$T35701| DCD	|$LN9@ActivityTi@2|
	DCD	0x40001401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |ActivityTimerDestroy| PROC

; 1572 : {

  00000		 |$LN9@ActivityTi@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M35698|
  00004	e1b04000	 movs        r4, r0

; 1573 :     BOOL fOk = TRUE;
; 1574 : 
; 1575 :     // free the structure and its members
; 1576 :     if(pat != NULL) {

  00008	0a00000d	 beq         |$LN4@ActivityTi@2|

; 1577 :         if(pat->hevReset != NULL) CloseHandle(pat->hevReset);

  0000c	e594300c	 ldr         r3, [r4, #0xC]
  00010	e3530000	 cmp         r3, #0
  00014	11a00003	 movne       r0, r3
  00018	1b000000	 blne        CloseHandle

; 1578 :         if(pat->hevActive != NULL) CloseHandle(pat->hevActive);

  0001c	e5943010	 ldr         r3, [r4, #0x10]
  00020	e3530000	 cmp         r3, #0
  00024	11a00003	 movne       r0, r3
  00028	1b000000	 blne        CloseHandle

; 1579 :         if(pat->hevInactive != NULL) CloseHandle(pat->hevInactive);

  0002c	e5943014	 ldr         r3, [r4, #0x14]
  00030	e3530000	 cmp         r3, #0
  00034	11a00003	 movne       r0, r3
  00038	1b000000	 blne        CloseHandle

; 1580 :         PmFree(pat);

  0003c	e1a00004	 mov         r0, r4
  00040	eb000000	 bl          PmFree
  00044		 |$LN4@ActivityTi@2|

; 1581 :     }
; 1582 : 
; 1583 :     return fOk;

  00044	e3a00001	 mov         r0, #1

; 1584 : }

  00048	e8bd4010	 ldmia       sp!, {r4, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$M35699|

			 ENDP  ; |ActivityTimerDestroy|

	EXPORT	|ActivityTimerFindByName|
	EXPORT	|??_C@_1DA@HMBHHENJ@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAF?$AAi?$AAn?$AAd?$AAB?$AAy?$AAN?$AAa?$AAm?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@NGMPKOJA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAe?$AAa?$AAr?$AAc?$AAh?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx@| [ DATA ] ; `string'
	IMPORT	|gppActivityTimers|

  00000			 AREA	 |.pdata|, PDATA
|$T35725| DCD	|$LN20@ActivityTi@3|
	DCD	0x40002501

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@HMBHHENJ@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAF?$AAi?$AAn?$AAd?$AAB?$AAy?$AAN?$AAa?$AAm?$AAe?$AA?$AA@| DCB "A"
	DCB	0x0, "c", 0x0, "t", 0x0, "i", 0x0, "v", 0x0, "i", 0x0, "t"
	DCB	0x0, "y", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "r"
	DCB	0x0, "F", 0x0, "i", 0x0, "n", 0x0, "d", 0x0, "B", 0x0, "y"
	DCB	0x0, "N", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@NGMPKOJA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAe?$AAa?$AAr?$AAc?$AAh?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "e", 0x0, "a"
	DCB	0x0, "r", 0x0, "c", 0x0, "h", 0x0, " ", 0x0, "f", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t", 0x0, "u", 0x0, "r"
	DCB	0x0, "n", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |ActivityTimerFindByName| PROC

; 1590 : {

  00000		 |$LN20@ActivityTi@3|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M35722|
  00004	e1a06000	 mov         r6, r0

; 1591 :     PACTIVITY_TIMER pat = NULL;
; 1592 : 
; 1593 : #ifndef SHIP_BUILD
; 1594 :     SETFNAME(_T("ActivityTimerFindByName"));
; 1595 : #endif
; 1596 : 
; 1597 :     PMLOCK();

  00008	e59f007c	 ldr         r0, [pc, #0x7C]
  0000c	e3a04000	 mov         r4, #0
  00010	eb000000	 bl          EnterCriticalSection

; 1598 :     if(gppActivityTimers != NULL) {

  00014	e59f3074	 ldr         r3, [pc, #0x74]
  00018	e5935000	 ldr         r5, [r3]
  0001c	e3550000	 cmp         r5, #0
  00020	0a000009	 beq         |$LN16@ActivityTi@3|

; 1599 :         DWORD dwTimerIndex = 0;
; 1600 :         while((pat = gppActivityTimers[dwTimerIndex]) != NULL) {

  00024	e5953000	 ldr         r3, [r5]
  00028	ea000005	 b           |$LN17@ActivityTi@3|
  0002c		 |$LL3@ActivityTi@3|

; 1601 :             if(_tcscmp(pat->pszName, pszName) == 0) {

  0002c	e5940000	 ldr         r0, [r4]
  00030	e1a01006	 mov         r1, r6
  00034	eb000000	 bl          wcscmp
  00038	e3500000	 cmp         r0, #0
  0003c	0a000002	 beq         |$LN16@ActivityTi@3|
  00040	e5b53004	 ldr         r3, [r5, #4]!
  00044		 |$LN17@ActivityTi@3|
  00044	e1b04003	 movs        r4, r3
  00048	1afffff7	 bne         |$LL3@ActivityTi@3|
  0004c		 |$LN16@ActivityTi@3|

; 1602 :                 break;
; 1603 :             }
; 1604 :             dwTimerIndex++;
; 1605 :         }
; 1606 :     }
; 1607 :     PMUNLOCK();

  0004c	e59f0038	 ldr         r0, [pc, #0x38]
  00050	eb000000	 bl          LeaveCriticalSection

; 1608 : 
; 1609 :     PMLOGMSG(ZONE_TIMERS, (_T("%s: search for '%s' returning 0x%08x\r\n"), pszFname,
; 1610 :         pszName, pat));

  00054	e59f302c	 ldr         r3, [pc, #0x2C]
  00058	e5933440	 ldr         r3, [r3, #0x440]
  0005c	e3130a02	 tst         r3, #2, 20
  00060	159f101c	 ldrne       r1, [pc, #0x1C]
  00064	159f0014	 ldrne       r0, [pc, #0x14]
  00068	11a03004	 movne       r3, r4
  0006c	11a02006	 movne       r2, r6
  00070	1b000000	 blne        CeLogMsg

; 1611 : 
; 1612 :     return pat;
; 1613 : }

  00074	e1a00004	 mov         r0, r4
  00078	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0007c	e12fff1e	 bx          lr
  00080		 |$LN21@ActivityTi@3|
  00080		 |$LN22@ActivityTi@3|
  00080	00000000	 DCD         |??_C@_1EO@NGMPKOJA@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAe?$AAa?$AAr?$AAc?$AAh?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx@|
  00084		 |$LN23@ActivityTi@3|
  00084	00000000	 DCD         |??_C@_1DA@HMBHHENJ@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAF?$AAi?$AAn?$AAd?$AAB?$AAy?$AAN?$AAa?$AAm?$AAe?$AA?$AA@|
  00088		 |$LN24@ActivityTi@3|
  00088	00000000	 DCD         |dpCurSettings|
  0008c		 |$LN25@ActivityTi@3|
  0008c	00000000	 DCD         |gcsPowerManager|
  00090		 |$LN26@ActivityTi@3|
  00090	00000000	 DCD         |gppActivityTimers|
  00094		 |$M35723|

			 ENDP  ; |ActivityTimerFindByName|

	EXPORT	|ActivityTimerFindByWakeSource|
	EXPORT	|??_C@_1DM@CIMKIPJD@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAF?$AAi?$AAn?$AAd?$AAB?$AAy?$AAW?$AAa?$AAk?$AAe?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@IIFPFJAK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAe?$AAa?$AAr?$AAc?$AAh?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T35759| DCD	|$LN24@ActivityTi@4|
	DCD	0x40003102

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@CIMKIPJD@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAF?$AAi?$AAn?$AAd?$AAB?$AAy?$AAW?$AAa?$AAk?$AAe?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?$AA@| DCB "A"
	DCB	0x0, "c", 0x0, "t", 0x0, "i", 0x0, "v", 0x0, "i", 0x0, "t"
	DCB	0x0, "y", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "r"
	DCB	0x0, "F", 0x0, "i", 0x0, "n", 0x0, "d", 0x0, "B", 0x0, "y"
	DCB	0x0, "W", 0x0, "a", 0x0, "k", 0x0, "e", 0x0, "S", 0x0, "o"
	DCB	0x0, "u", 0x0, "r", 0x0, "c", 0x0, "e", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@IIFPFJAK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAe?$AAa?$AAr?$AAc?$AAh?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "e", 0x0, "a"
	DCB	0x0, "r", 0x0, "c", 0x0, "h", 0x0, " ", 0x0, "f", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "("
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |ActivityTimerFindByWakeSource| PROC

; 1620 : {

  00000		 |$LN24@ActivityTi@4|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M35756|
  00008	e1a06000	 mov         r6, r0

; 1621 :     PACTIVITY_TIMER pat = NULL;
; 1622 :     BOOL fDone = FALSE;
; 1623 : 
; 1624 : #ifndef SHIP_BUILD
; 1625 :     SETFNAME(_T("ActivityTimerFindByWakeSource"));
; 1626 : #endif
; 1627 : 
; 1628 :     PMLOCK();

  0000c	e59f00a8	 ldr         r0, [pc, #0xA8]
  00010	e3a04000	 mov         r4, #0
  00014	e3a05000	 mov         r5, #0
  00018	eb000000	 bl          EnterCriticalSection

; 1629 :     if(gppActivityTimers != NULL) {

  0001c	e59f309c	 ldr         r3, [pc, #0x9C]
  00020	e5932000	 ldr         r2, [r3]
  00024	e3520000	 cmp         r2, #0
  00028	0a000011	 beq         |$LN20@ActivityTi@4|
  0002c		 |$LL5@ActivityTi@4|

; 1630 :         DWORD dwTimerIndex = 0;
; 1631 :         while(!fDone && (pat = gppActivityTimers[dwTimerIndex]) != NULL) {

  0002c	e5923000	 ldr         r3, [r2]
  00030	e1b04003	 movs        r4, r3
  00034	0a00000e	 beq         |$LN20@ActivityTi@4|

; 1632 :             DWORD dwSourceIndex = 0;
; 1633 :             while(pat->pdwWakeSources[dwSourceIndex] != 0) {

  00038	e5940018	 ldr         r0, [r4, #0x18]
  0003c	e3a01000	 mov         r1, #0
  00040	e5903000	 ldr         r3, [r0]
  00044	ea000003	 b           |$LN21@ActivityTi@4|
  00048		 |$LL3@ActivityTi@4|

; 1634 :                 if(pat->pdwWakeSources[dwSourceIndex] == dwWakeSource) {

  00048	e1530006	 cmp         r3, r6
  0004c	0a000004	 beq         |$LN17@ActivityTi@4|

; 1636 :                     break;
; 1637 :                 }
; 1638 :                 dwSourceIndex++;

  00050	e2811001	 add         r1, r1, #1
  00054	e7903101	 ldr         r3, [r0, +r1, lsl #2]
  00058		 |$LN21@ActivityTi@4|
  00058	e3530000	 cmp         r3, #0
  0005c	1afffff9	 bne         |$LL3@ActivityTi@4|

; 1634 :                 if(pat->pdwWakeSources[dwSourceIndex] == dwWakeSource) {

  00060	ea000000	 b           |$LN2@ActivityTi@4|
  00064		 |$LN17@ActivityTi@4|

; 1635 :                     fDone = TRUE;

  00064	e3a05001	 mov         r5, #1
  00068		 |$LN2@ActivityTi@4|

; 1639 :             }
; 1640 :             dwTimerIndex++;

  00068	e2822004	 add         r2, r2, #4
  0006c	e3550000	 cmp         r5, #0
  00070	0affffed	 beq         |$LL5@ActivityTi@4|
  00074		 |$LN20@ActivityTi@4|

; 1641 :         }
; 1642 :     }
; 1643 :     PMUNLOCK();

  00074	e59f0040	 ldr         r0, [pc, #0x40]
  00078	eb000000	 bl          LeaveCriticalSection

; 1644 : 
; 1645 :     PMLOGMSG(ZONE_TIMERS, (_T("%s: search for %d (0x%x) returning 0x%08x\r\n"), pszFname,
; 1646 :         dwWakeSource, dwWakeSource, pat));

  0007c	e59f3034	 ldr         r3, [pc, #0x34]
  00080	e5933440	 ldr         r3, [r3, #0x440]
  00084	e3130a02	 tst         r3, #2, 20
  00088	159f1024	 ldrne       r1, [pc, #0x24]
  0008c	159f001c	 ldrne       r0, [pc, #0x1C]
  00090	11a03006	 movne       r3, r6
  00094	11a02006	 movne       r2, r6
  00098	158d4000	 strne       r4, [sp]
  0009c	1b000000	 blne        CeLogMsg

; 1647 : 
; 1648 :     return pat;
; 1649 : }

  000a0	e1a00004	 mov         r0, r4
  000a4	e28dd004	 add         sp, sp, #4
  000a8	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000ac	e12fff1e	 bx          lr
  000b0		 |$LN25@ActivityTi@4|
  000b0		 |$LN26@ActivityTi@4|
  000b0	00000000	 DCD         |??_C@_1FI@IIFPFJAK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAe?$AAa?$AAr?$AAc?$AAh?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi@|
  000b4		 |$LN27@ActivityTi@4|
  000b4	00000000	 DCD         |??_C@_1DM@CIMKIPJD@?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAr?$AAF?$AAi?$AAn?$AAd?$AAB?$AAy?$AAW?$AAa?$AAk?$AAe?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AA?$AA@|
  000b8		 |$LN28@ActivityTi@4|
  000b8	00000000	 DCD         |dpCurSettings|
  000bc		 |$LN29@ActivityTi@4|
  000bc	00000000	 DCD         |gcsPowerManager|
  000c0		 |$LN30@ActivityTi@4|
  000c0	00000000	 DCD         |gppActivityTimers|
  000c4		 |$M35757|

			 ENDP  ; |ActivityTimerFindByWakeSource|

	END
