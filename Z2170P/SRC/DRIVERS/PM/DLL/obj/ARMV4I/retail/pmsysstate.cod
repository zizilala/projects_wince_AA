; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\Z2170P\SRC\DRIVERS\PM\DLL\pmsysstate.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|__$ArrayPad$| [ DATA ]
	IMPORT	|CeLogData|
	IMPORT	|StringCchLengthW|
	IMPORT	|StringCchVPrintfW|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_cookie|
	IMPORT	|__security_check_cookie|
; File c:\wince600\public\common\sdk\inc\celog.h

  00000			 AREA	 |.pdata|, PDATA
|$T34479| DCD	|$LN7@CeLogMsg|
	DCD	0xc0002a04

  00000			 AREA	 |.xdata|, DATA
|$T34475| DCD	0xffffffe0
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T34475|

  00008		 |CeLogMsg| PROC

; 1015 : {

  00008		 |$LN7@CeLogMsg|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d000f	 stmdb       sp!, {r0 - r3}
  00010	e92d5010	 stmdb       sp!, {r4, r12, lr}
  00014	e24dde22	 sub         sp, sp, #0x22, 28
  00018		 |$M34476|
  00018	e58d022c	 str         r0, [sp, #0x22C]
  0001c	e59f3088	 ldr         r3, [pc, #0x88]
  00020	e5933000	 ldr         r3, [r3]
  00024	e58d321c	 str         r3, [sp, #0x21C]

; 1016 :     va_list arglist;
; 1017 :     WCHAR   szTemp[MAX_PATH];
; 1018 :     size_t  cchLen;
; 1019 :     HRESULT hr;
; 1020 : 
; 1021 :     // Compose a single string using the input args
; 1022 :     va_start(arglist, szFormat);
; 1023 :     hr = StringCchVPrintfW(szTemp, MAX_PATH, szFormat, arglist);

  00028	e1a02000	 mov         r2, r0
  0002c	e28d0014	 add         r0, sp, #0x14
  00030	e28d3e23	 add         r3, sp, #0x23, 28
  00034	e3a01f41	 mov         r1, #0x41, 30
  00038	eb000000	 bl          StringCchVPrintfW
  0003c	e3500000	 cmp         r0, #0

; 1024 :     if (SUCCEEDED(hr)) {

  00040	4a000014	 bmi         |$LN1@CeLogMsg|

; 1025 :         hr = StringCchLengthW(szTemp, MAX_PATH, &cchLen);

  00044	e28d2010	 add         r2, sp, #0x10
  00048	e3a01f41	 mov         r1, #0x41, 30
  0004c	e28d0014	 add         r0, sp, #0x14
  00050	eb000000	 bl          StringCchLengthW
  00054	e3500000	 cmp         r0, #0

; 1026 :         if (SUCCEEDED(hr)) {

  00058	4a00000e	 bmi         |$LN1@CeLogMsg|

; 1027 :             CeLogData(TRUE, CELID_RAW_WCHAR, szTemp, (WORD)((cchLen + 1) * sizeof(WCHAR)),
; 1028 :                       0, CELZONE_ALWAYSON, 0, FALSE);

  0005c	e59d3010	 ldr         r3, [sp, #0x10]
  00060	e3a04101	 mov         r4, #1, 2
  00064	e3a0e000	 mov         lr, #0
  00068	e2833001	 add         r3, r3, #1
  0006c	e1a03083	 mov         r3, r3, lsl #1
  00070	e1a03803	 mov         r3, r3, lsl #16
  00074	e1a03823	 mov         r3, r3, lsr #16
  00078	e28d2014	 add         r2, sp, #0x14
  0007c	e3a0104a	 mov         r1, #0x4A
  00080	e3a00001	 mov         r0, #1
  00084	e58de00c	 str         lr, [sp, #0xC]
  00088	e58de008	 str         lr, [sp, #8]
  0008c	e58d4004	 str         r4, [sp, #4]
  00090	e58de000	 str         lr, [sp]
  00094	eb000000	 bl          CeLogData
  00098		 |$LN1@CeLogMsg|
  00098	e59d021c	 ldr         r0, [sp, #0x21C]
  0009c	eb000000	 bl          __security_check_cookie

; 1029 :         }
; 1030 :     }
; 1031 : }

  000a0	e28dde22	 add         sp, sp, #0x22, 28
  000a4	e89d6010	 ldmia       sp, {r4, sp, lr}
  000a8	e12fff1e	 bx          lr
  000ac		 |$LN8@CeLogMsg|
  000ac		 |$LN9@CeLogMsg|
  000ac	00000000	 DCD         |__security_cookie|
  000b0		 |$M34477|

			 ENDP  ; |CeLogMsg|

	EXPORT	|??0CLockObject@@QAA@XZ|		; CLockObject::CLockObject
	IMPORT	|InitializeCriticalSection|
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T34492| DCD	|$LN5@CLockObjec|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CLockObject@@QAA@XZ| PROC		; CLockObject::CLockObject

; 36   :     CLockObject()

  00000		 |$LN5@CLockObjec|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M34489|
  00004	e1a04000	 mov         r4, r0

; 37   :     {
; 38   :         InitializeCriticalSection( &m_CSection );

  00008	eb000000	 bl          InitializeCriticalSection

; 39   :     };

  0000c	e1a00004	 mov         r0, r4
  00010	e8bd4010	 ldmia       sp!, {r4, lr}
  00014	e12fff1e	 bx          lr
  00018		 |$M34490|

			 ENDP  ; |??0CLockObject@@QAA@XZ|, CLockObject::CLockObject

	EXPORT	|??1CLockObject@@QAA@XZ|		; CLockObject::~CLockObject
	IMPORT	|DeleteCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T34500| DCD	|$LN5@CLockObjec@2|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CLockObject@@QAA@XZ| PROC		; CLockObject::~CLockObject

; 41   :     {

  00000		 |$LN5@CLockObjec@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M34497|

; 42   :         DeleteCriticalSection( &m_CSection );

  00004	eb000000	 bl          DeleteCriticalSection

; 43   :     };

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M34498|

			 ENDP  ; |??1CLockObject@@QAA@XZ|, CLockObject::~CLockObject

	EXPORT	|?Lock@CLockObject@@QAAXXZ|		; CLockObject::Lock
	IMPORT	|EnterCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T34508| DCD	|$LN5@Lock|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Lock@CLockObject@@QAAXXZ| PROC	; CLockObject::Lock

; 45   :     {

  00000		 |$LN5@Lock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M34505|

; 46   :         EnterCriticalSection( &m_CSection );

  00004	eb000000	 bl          EnterCriticalSection

; 47   :     };

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M34506|

			 ENDP  ; |?Lock@CLockObject@@QAAXXZ|, CLockObject::Lock

	EXPORT	|?Unlock@CLockObject@@QAAXXZ|		; CLockObject::Unlock
	IMPORT	|LeaveCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T34516| DCD	|$LN5@Unlock|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Unlock@CLockObject@@QAAXXZ| PROC	; CLockObject::Unlock

; 49   :     {

  00000		 |$LN5@Unlock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M34513|

; 50   :         LeaveCriticalSection( &m_CSection );

  00004	eb000000	 bl          LeaveCriticalSection

; 51   :     };

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M34514|

			 ENDP  ; |?Unlock@CLockObject@@QAAXXZ|, CLockObject::Unlock

	EXPORT	|?ForceTerminated@CMiniThread@@QAAHXZ|	; CMiniThread::ForceTerminated
	IMPORT	|CloseHandle|
	IMPORT	|TerminateThread|
; File c:\wince600\public\common\oak\inc\cmthread.h

  00000			 AREA	 |.pdata|, PDATA
|$T34527| DCD	|$LN6@ForceTermi|
	DCD	0x40001401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ForceTerminated@CMiniThread@@QAAHXZ| PROC ; CMiniThread::ForceTerminated

; 113  :     {

  00000		 |$LN6@ForceTermi|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M34524|
  00004	e1a05000	 mov         r5, r0

; 114  :         if( m_hThreadHandle )

  00008	e5953008	 ldr         r3, [r5, #8]
  0000c	e3530000	 cmp         r3, #0
  00010	0a00000a	 beq         |$LN1@ForceTermi|

; 115  :         {
; 116  : //#pragma prefast(suppress: 258, "Try to recover from a pathological failure")
; 117  :             BOOL bReturn = ::TerminateThread( m_hThreadHandle, ( DWORD ) - 1 ); // terminate abnormal

  00014	e3e06000	 mvn         r6, #0
  00018	e1a01006	 mov         r1, r6
  0001c	e1a00003	 mov         r0, r3
  00020	eb000000	 bl          TerminateThread
  00024	e1a04000	 mov         r4, r0

; 118  :             m_dwExitCode = -1;
; 119  :             ::CloseHandle( m_hThreadHandle );

  00028	e5950008	 ldr         r0, [r5, #8]
  0002c	e5856014	 str         r6, [r5, #0x14]
  00030	eb000000	 bl          CloseHandle

; 120  :             m_hThreadHandle = NULL;

  00034	e3a03000	 mov         r3, #0
  00038	e5853008	 str         r3, [r5, #8]

; 121  :             return bReturn;

  0003c	ea000000	 b           |$LN2@ForceTermi|
  00040		 |$LN1@ForceTermi|

; 122  :         };
; 123  :         return TRUE;

  00040	e3a04001	 mov         r4, #1
  00044		 |$LN2@ForceTermi|

; 124  :     }

  00044	e1a00004	 mov         r0, r4
  00048	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$M34525|

			 ENDP  ; |?ForceTerminated@CMiniThread@@QAAHXZ|, CMiniThread::ForceTerminated

	EXPORT	|?ThreadProc@CMiniThread@@CAKPAX@Z|	; CMiniThread::ThreadProc
	IMPORT	|ExitThread|

  00000			 AREA	 |.pdata|, PDATA
|$T34537| DCD	|$LN5@ThreadProc|
	DCD	0x40000c01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ThreadProc@CMiniThread@@CAKPAX@Z| PROC ; CMiniThread::ThreadProc

; 154  :     {

  00000		 |$LN5@ThreadProc|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M34534|
  00004	e1a04000	 mov         r4, r0

; 155  :         CMiniThread* pThreadPtr = ( CMiniThread* ) dParam;
; 156  :         pThreadPtr->m_dwExitCode = pThreadPtr->ThreadRun();

  00008	e5943000	 ldr         r3, [r4]
  0000c	e5933000	 ldr         r3, [r3]
  00010	e1a0e00f	 mov         lr, pc
  00014	e12fff13	 bx          r3
  00018	e1a03000	 mov         r3, r0

; 157  :         ::ExitThread( pThreadPtr->m_dwExitCode );

  0001c	e5843014	 str         r3, [r4, #0x14]
  00020	eb000000	 bl          ExitThread

; 158  :         return pThreadPtr->m_dwExitCode;

  00024	e5940014	 ldr         r0, [r4, #0x14]

; 159  :     };

  00028	e8bd4010	 ldmia       sp!, {r4, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M34535|

			 ENDP  ; |?ThreadProc@CMiniThread@@CAKPAX@Z|, CMiniThread::ThreadProc

	EXPORT	|??0RegKeyOrValue@@QAA@PAUHKEY__@@PBGPAV0@@Z| ; RegKeyOrValue::RegKeyOrValue
	EXPORT	|??_7RegKeyOrValue@@6B@| [ DATA ]	; RegKeyOrValue::`vftable'
	EXPORT	|?Init@RegKeyOrValue@@UAAHXZ|		; RegKeyOrValue::Init
	IMPORT	|??2@YAPAXI@Z|				; operator new
	IMPORT	|wcscpy|
	IMPORT	|wcslen|
	IMPORT	|??_ERegKeyOrValue@@UAAPAXI@Z|, WEAK |??_GRegKeyOrValue@@UAAPAXI@Z| ; RegKeyOrValue::`vector deleting destructor', RegKeyOrValue::`scalar deleting destructor'
; File c:\wince600\platform\z2170p\src\drivers\pm\dll\pmsysreg.h

  00000			 AREA	 |.pdata|, PDATA
|$T34555| DCD	|$LN10@RegKeyOrVa|
	DCD	0x40001c01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7RegKeyOrValue@@6B@| DCD |?Init@RegKeyOrValue@@UAAHXZ| ; RegKeyOrValue::`vftable'
	DCD	|??_ERegKeyOrValue@@UAAPAXI@Z|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0RegKeyOrValue@@QAA@PAUHKEY__@@PBGPAV0@@Z| PROC ; RegKeyOrValue::RegKeyOrValue

; 30   :     RegKeyOrValue(HKEY hKey,LPCTSTR lpRegName,RegKeyOrValue *pNextRegKeyOrValue) : m_hParentKey (hKey),m_pNextRegKeyOrValue(pNextRegKeyOrValue) {

  00000		 |$LN10@RegKeyOrVa|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M34552|
  00004	e1b05002	 movs        r5, r2
  00008	e1a04000	 mov         r4, r0
  0000c	e59fe058	 ldr         lr, [pc, #0x58]

; 31   :         m_lpRegName = NULL;

  00010	e3a02000	 mov         r2, #0
  00014	e5841008	 str         r1, [r4, #8]
  00018	e584e000	 str         lr, [r4]
  0001c	e584300c	 str         r3, [r4, #0xC]
  00020	e5842004	 str         r2, [r4, #4]

; 32   :         if (lpRegName) {

  00024	0a00000c	 beq         |$LN3@RegKeyOrVa|

; 33   :             m_lpRegName = new TCHAR [ _tcslen(lpRegName) +1 ];

  00028	e1a00005	 mov         r0, r5
  0002c	eb000000	 bl          wcslen
  00030	e2803001	 add         r3, r0, #1
  00034	e3730106	 cmn         r3, #6, 2
  00038	91a00083	 movls       r0, r3, lsl #1
  0003c	83e00000	 mvnhi       r0, #0
  00040	eb000000	 bl          |??2@YAPAXI@Z|
  00044	e3500000	 cmp         r0, #0
  00048	e5840004	 str         r0, [r4, #4]

; 34   :             if (m_lpRegName)

  0004c	0a000003	 beq         |$LN1@RegKeyOrVa|

; 35   :                 _tcscpy(m_lpRegName,lpRegName);

  00050	e1a01005	 mov         r1, r5
  00054	eb000000	 bl          wcscpy

; 36   :         }
; 37   :         else 

  00058	ea000000	 b           |$LN1@RegKeyOrVa|
  0005c		 |$LN3@RegKeyOrVa|

; 38   :             m_lpRegName = NULL;

  0005c	e5842004	 str         r2, [r4, #4]
  00060		 |$LN1@RegKeyOrVa|

; 39   :         
; 40   :     };

  00060	e1a00004	 mov         r0, r4
  00064	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00068	e12fff1e	 bx          lr
  0006c		 |$LN11@RegKeyOrVa|
  0006c		 |$LN12@RegKeyOrVa|
  0006c	00000000	 DCD         |??_7RegKeyOrValue@@6B@|
  00070		 |$M34553|

			 ENDP  ; |??0RegKeyOrValue@@QAA@PAUHKEY__@@PBGPAV0@@Z|, RegKeyOrValue::RegKeyOrValue


  00000			 AREA	 |.pdata|, PDATA
|$T34569| DCD	|$LN7@Init|
	DCD	0x40000500
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Init@RegKeyOrValue@@UAAHXZ| PROC	; RegKeyOrValue::Init

; 41   :     virtual BOOL Init() { return m_lpRegName!=NULL; };

  00000		 |$LN7@Init|
  00000		 |$M34566|
  00000	e5903004	 ldr         r3, [r0, #4]
  00004	e3530000	 cmp         r3, #0
  00008	13a00001	 movne       r0, #1
  0000c	03a00000	 moveq       r0, #0
  00010	e12fff1e	 bx          lr
  00014		 |$M34567|

			 ENDP  ; |?Init@RegKeyOrValue@@UAAHXZ|, RegKeyOrValue::Init

	EXPORT	|??1RegKeyOrValue@@UAA@XZ|		; RegKeyOrValue::~RegKeyOrValue
	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$T34578| DCD	|$LN6@RegKeyOrVa@2|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1RegKeyOrValue@@UAA@XZ| PROC	; RegKeyOrValue::~RegKeyOrValue

; 42   :     virtual ~RegKeyOrValue() {

  00000		 |$LN6@RegKeyOrVa@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M34575|

; 43   :         if (m_lpRegName!=NULL)

  00004	e5902004	 ldr         r2, [r0, #4]
  00008	e59f3014	 ldr         r3, [pc, #0x14]
  0000c	e3520000	 cmp         r2, #0
  00010	e5803000	 str         r3, [r0]

; 44   :             delete m_lpRegName;

  00014	11a00002	 movne       r0, r2
  00018	1b000000	 blne        |??3@YAXPAX@Z|

; 45   :     }

  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$LN7@RegKeyOrVa@2|
  00024		 |$LN8@RegKeyOrVa@2|
  00024	00000000	 DCD         |??_7RegKeyOrValue@@6B@|
  00028		 |$M34576|

			 ENDP  ; |??1RegKeyOrValue@@UAA@XZ|, RegKeyOrValue::~RegKeyOrValue

	EXPORT	|?GetName@RegKeyOrValue@@QAAPAGXZ|	; RegKeyOrValue::GetName

  00000			 AREA	 |.pdata|, PDATA
|$T34590| DCD	|$LN5@GetName|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetName@RegKeyOrValue@@QAAPAGXZ| PROC ; RegKeyOrValue::GetName

; 46   :     LPTSTR  GetName() { return m_lpRegName; };

  00000		 |$LN5@GetName|
  00000		 |$M34587|
  00000	e5900004	 ldr         r0, [r0, #4]
  00004	e12fff1e	 bx          lr
  00008		 |$M34588|

			 ENDP  ; |?GetName@RegKeyOrValue@@QAAPAGXZ|, RegKeyOrValue::GetName

	EXPORT	|?GetNextRegKeyOrValuePtr@RegKeyOrValue@@QAAPAV1@XZ| ; RegKeyOrValue::GetNextRegKeyOrValuePtr

  00000			 AREA	 |.pdata|, PDATA
|$T34600| DCD	|$LN5@GetNextReg|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetNextRegKeyOrValuePtr@RegKeyOrValue@@QAAPAV1@XZ| PROC ; RegKeyOrValue::GetNextRegKeyOrValuePtr

; 52   :     RegKeyOrValue * GetNextRegKeyOrValuePtr() { return m_pNextRegKeyOrValue; };

  00000		 |$LN5@GetNextReg|
  00000		 |$M34597|
  00000	e590000c	 ldr         r0, [r0, #0xC]
  00004	e12fff1e	 bx          lr
  00008		 |$M34598|

			 ENDP  ; |?GetNextRegKeyOrValuePtr@RegKeyOrValue@@QAAPAV1@XZ|, RegKeyOrValue::GetNextRegKeyOrValuePtr


  00000			 AREA	 |.pdata|, PDATA
|$T34617| DCD	|$LN9@scalar|
	DCD	0x40001001
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GRegKeyOrValue@@UAAPAXI@Z| PROC	; RegKeyOrValue::`scalar deleting destructor'
  00000		 |$LN9@scalar|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M34614|
  00004	e1a05001	 mov         r5, r1
  00008	e1a04000	 mov         r4, r0
  0000c	e5942004	 ldr         r2, [r4, #4]
  00010	e59f3024	 ldr         r3, [pc, #0x24]
  00014	e3520000	 cmp         r2, #0
  00018	11a00002	 movne       r0, r2
  0001c	e5843000	 str         r3, [r4]
  00020	1b000000	 blne        |??3@YAXPAX@Z|
  00024	e3150001	 tst         r5, #1
  00028	11a00004	 movne       r0, r4
  0002c	1b000000	 blne        |??3@YAXPAX@Z|
  00030	e1a00004	 mov         r0, r4
  00034	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$LN10@scalar|
  0003c		 |$LN11@scalar|
  0003c	00000000	 DCD         |??_7RegKeyOrValue@@6B@|
  00040		 |$M34615|

			 ENDP  ; |??_GRegKeyOrValue@@UAAPAXI@Z|, RegKeyOrValue::`scalar deleting destructor'

	EXPORT	|?UpdateRegValue@RegValue@@MAAHXZ|	; RegValue::UpdateRegValue
	IMPORT	|RegQueryValueExW|

  00000			 AREA	 |.pdata|, PDATA
|$T34632| DCD	|$LN12@UpdateRegV|
	DCD	0x40002d02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UpdateRegValue@RegValue@@MAAHXZ| PROC ; RegValue::UpdateRegValue

; 84   :     virtual BOOL UpdateRegValue()  {

  00000		 |$LN12@UpdateRegV|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M34629|
  00008	e1a04000	 mov         r4, r0

; 85   :         if (m_lpRegName) {

  0000c	e5943004	 ldr         r3, [r4, #4]
  00010	e1b01003	 movs        r1, r3
  00014	0a000022	 beq         |$LN1@UpdateRegV|

; 86   :             if (m_lpByteValue == NULL) {

  00018	e5943018	 ldr         r3, [r4, #0x18]
  0001c	e1b05003	 movs        r5, r3
  00020	1a000012	 bne         |$LN9@UpdateRegV|

; 87   :                 m_dwValueSize = 0;
; 88   :                 LONG status =  RegQueryValueEx(m_hParentKey,m_lpRegName,NULL, &m_dwValueType,NULL,&m_dwValueSize);

  00024	e1a02004	 mov         r2, r4
  00028	e3a0e000	 mov         lr, #0
  0002c	e5a2e014	 str         lr, [r2, #0x14]!
  00030	e5940008	 ldr         r0, [r4, #8]
  00034	e2843010	 add         r3, r4, #0x10
  00038	e58d2004	 str         r2, [sp, #4]
  0003c	e3a02000	 mov         r2, #0
  00040	e58de000	 str         lr, [sp]
  00044	eb000000	 bl          RegQueryValueExW
  00048	e3500000	 cmp         r0, #0

; 89   :                 if ( status == ERROR_SUCCESS || status == ERROR_MORE_DATA )

  0004c	0a000001	 beq         |$LN3@UpdateRegV|
  00050	e35000ea	 cmp         r0, #0xEA
  00054	1a000002	 bne         |$LN4@UpdateRegV|
  00058		 |$LN3@UpdateRegV|

; 90   :                     m_lpByteValue = new BYTE [ m_dwValueSize ];

  00058	e5940014	 ldr         r0, [r4, #0x14]
  0005c	eb000000	 bl          |??2@YAPAXI@Z|
  00060	e5840018	 str         r0, [r4, #0x18]
  00064		 |$LN4@UpdateRegV|

; 91   :             }
; 92   :             if (m_lpByteValue != NULL) {

  00064	e5943018	 ldr         r3, [r4, #0x18]
  00068	e1b05003	 movs        r5, r3
  0006c	0a00000c	 beq         |$LN1@UpdateRegV|
  00070		 |$LN9@UpdateRegV|

; 93   :                 DWORD dwLen = m_dwValueSize;

  00070	e5943014	 ldr         r3, [r4, #0x14]

; 94   :                 if (RegQueryValueEx(m_hParentKey,m_lpRegName,NULL, &m_dwValueType,m_lpByteValue,&dwLen) == ERROR_SUCCESS) {

  00074	e5941004	 ldr         r1, [r4, #4]
  00078	e5940008	 ldr         r0, [r4, #8]
  0007c	e58d3008	 str         r3, [sp, #8]
  00080	e28de008	 add         lr, sp, #8
  00084	e2843010	 add         r3, r4, #0x10
  00088	e3a02000	 mov         r2, #0
  0008c	e58de004	 str         lr, [sp, #4]
  00090	e58d5000	 str         r5, [sp]
  00094	eb000000	 bl          RegQueryValueExW
  00098	e3500000	 cmp         r0, #0

; 95   :                     return TRUE;

  0009c	03a00001	 moveq       r0, #1
  000a0	0a000000	 beq         |$LN7@UpdateRegV|
  000a4		 |$LN1@UpdateRegV|

; 96   :                 }
; 97   :                 
; 98   :             }
; 99   :         }
; 100  :         return FALSE;

  000a4	e3a00000	 mov         r0, #0
  000a8		 |$LN7@UpdateRegV|

; 101  :     };

  000a8	e28dd00c	 add         sp, sp, #0xC
  000ac	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000b0	e12fff1e	 bx          lr
  000b4		 |$M34630|

			 ENDP  ; |?UpdateRegValue@RegValue@@MAAHXZ|, RegValue::UpdateRegValue

	EXPORT	|??0RegKey@@QAA@PAUHKEY__@@PBGKPAV0@@Z|	; RegKey::RegKey
	EXPORT	|??_7RegKey@@6B@| [ DATA ]		; RegKey::`vftable'
	EXPORT	|?Init@RegKey@@UAAHXZ|			; RegKey::Init
	IMPORT	|??_ERegKey@@UAAPAXI@Z|, WEAK |??_GRegKey@@UAAPAXI@Z| ; RegKey::`vector deleting destructor', RegKey::`scalar deleting destructor'

  00000			 AREA	 |.pdata|, PDATA
|$T34644| DCD	|$LN5@RegKey|
	DCD	0x40000e01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7RegKey@@6B@| DCD |?Init@RegKey@@UAAHXZ|		; RegKey::`vftable'
	DCD	|??_ERegKey@@UAAPAXI@Z|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0RegKey@@QAA@PAUHKEY__@@PBGKPAV0@@Z| PROC ; RegKey::RegKey

; 111  :     RegKey(HKEY hCurrentOpenKey, LPCTSTR lpKeyPath,DWORD dwFlag, RegKey * pNextRegKey) : RegKeyOrValue( hCurrentOpenKey,lpKeyPath,pNextRegKey) {

  00000		 |$LN5@RegKey|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M34641|
  00004	e1a04000	 mov         r4, r0
  00008	e59d3008	 ldr         r3, [sp, #8]
  0000c	eb000000	 bl          |??0RegKeyOrValue@@QAA@PAUHKEY__@@PBGPAV0@@Z|
  00010	e59f301c	 ldr         r3, [pc, #0x1C]

; 112  :         UNREFERENCED_PARAMETER(dwFlag);
; 113  : 		
; 114  : 		m_pRegValueList=NULL;

  00014	e3a02000	 mov         r2, #0
  00018	e5842014	 str         r2, [r4, #0x14]
  0001c	e5843000	 str         r3, [r4]

; 115  :         m_pRegKeyList=NULL;

  00020	e5842018	 str         r2, [r4, #0x18]

; 116  :         m_RegKey = NULL;

  00024	e5842010	 str         r2, [r4, #0x10]

; 117  :     }

  00028	e1a00004	 mov         r0, r4
  0002c	e8bd4010	 ldmia       sp!, {r4, lr}
  00030	e12fff1e	 bx          lr
  00034		 |$LN6@RegKey|
  00034		 |$LN7@RegKey|
  00034	00000000	 DCD         |??_7RegKey@@6B@|
  00038		 |$M34642|

			 ENDP  ; |??0RegKey@@QAA@PAUHKEY__@@PBGKPAV0@@Z|, RegKey::RegKey

	EXPORT	|?RegFindKey@RegKey@@QAAPAV1@PBG@Z|	; RegKey::RegFindKey
	IMPORT	|_wcsicmp|

  00000			 AREA	 |.pdata|, PDATA
|$T34669| DCD	|$LN16@RegFindKey|
	DCD	0x40001001
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RegFindKey@RegKey@@QAAPAV1@PBG@Z| PROC ; RegKey::RegFindKey

; 166  :     RegKey * RegFindKey(LPCTSTR lpKeyPath) {

  00000		 |$LN16@RegFindKey|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M34666|
  00004	e1a05001	 mov         r5, r1

; 167  :         RegKey * pReturnKey =  m_pRegKeyList;

  00008	e5903018	 ldr         r3, [r0, #0x18]
  0000c	ea000005	 b           |$LN13@RegFindKey|
  00010		 |$LL4@RegFindKey|

; 168  :         while (pReturnKey) {
; 169  :             if (_tcsicmp( pReturnKey->GetName(),lpKeyPath)==0)

  00010	e5940004	 ldr         r0, [r4, #4]
  00014	e1a01005	 mov         r1, r5
  00018	eb000000	 bl          _wcsicmp
  0001c	e3500000	 cmp         r0, #0
  00020	0a000003	 beq         |$LN5@RegFindKey|

; 170  :                 return pReturnKey;
; 171  :             else
; 172  :                 pReturnKey=(RegKey * )pReturnKey->GetNextRegKeyOrValuePtr();

  00024	e594300c	 ldr         r3, [r4, #0xC]
  00028		 |$LN13@RegFindKey|
  00028	e1b04003	 movs        r4, r3
  0002c	1afffff7	 bne         |$LL4@RegFindKey|

; 173  :         }
; 174  :         return NULL;

  00030	e3a04000	 mov         r4, #0
  00034		 |$LN5@RegFindKey|

; 175  :     }

  00034	e1a00004	 mov         r0, r4
  00038	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$M34667|

			 ENDP  ; |?RegFindKey@RegKey@@QAAPAV1@PBG@Z|, RegKey::RegFindKey

	EXPORT	|?RegFindValue@RegKey@@QAAJPBGPAXPAK2@Z| ; RegKey::RegFindValue

  00000			 AREA	 |.pdata|, PDATA
|$T34696| DCD	|$LN18@RegFindVal|
	DCD	0x40002001
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RegFindValue@RegKey@@QAAJPBGPAXPAK2@Z| PROC ; RegKey::RegFindValue

; 176  :     LONG RegFindValue(LPCTSTR lpValueName, PVOID pvData, LPDWORD pdwSize, LPDWORD pdwType) {

  00000		 |$LN18@RegFindVal|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M34693|
  00004	e1a06003	 mov         r6, r3
  00008	e1a07002	 mov         r7, r2
  0000c	e1a04001	 mov         r4, r1

; 177  :         RegValue * pCurValue =  m_pRegValueList;

  00010	e5900014	 ldr         r0, [r0, #0x14]
  00014	ea000005	 b           |$LN15@RegFindVal|
  00018		 |$LL4@RegFindVal|

; 178  :         while (pCurValue) {
; 179  :             if (_tcsicmp( pCurValue->GetName(),lpValueName)==0) {

  00018	e5950004	 ldr         r0, [r5, #4]
  0001c	e1a01004	 mov         r1, r4
  00020	eb000000	 bl          _wcsicmp
  00024	e3500000	 cmp         r0, #0
  00028	0a000006	 beq         |$LN14@RegFindVal|

; 181  :             }
; 182  :             else
; 183  :                 pCurValue=(RegValue *)pCurValue->GetNextRegKeyOrValuePtr();

  0002c	e595000c	 ldr         r0, [r5, #0xC]
  00030		 |$LN15@RegFindVal|
  00030	e1b05000	 movs        r5, r0
  00034	1afffff7	 bne         |$LL4@RegFindVal|

; 180  :                 return (pCurValue->GetRegValue(pvData,pdwSize,pdwType)?ERROR_SUCCESS :ERROR_INVALID_PARAMETER);

  00038	e3a03c01	 mov         r3, #1, 24

; 184  :         }
; 185  :         return ERROR_NO_MORE_ITEMS;

  0003c	e3830003	 orr         r0, r3, #3

; 186  :         
; 187  :     }

  00040	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00044	e12fff1e	 bx          lr
  00048		 |$LN14@RegFindVal|

; 180  :                 return (pCurValue->GetRegValue(pvData,pdwSize,pdwType)?ERROR_SUCCESS :ERROR_INVALID_PARAMETER);

  00048	e5951000	 ldr         r1, [r5]
  0004c	e59d3014	 ldr         r3, [sp, #0x14]
  00050	e1a02006	 mov         r2, r6
  00054	e5914008	 ldr         r4, [r1, #8]
  00058	e1a01007	 mov         r1, r7
  0005c	e1a00005	 mov         r0, r5
  00060	e1a0e00f	 mov         lr, pc
  00064	e12fff14	 bx          r4
  00068	e3500000	 cmp         r0, #0
  0006c	13a00000	 movne       r0, #0

; 186  :         
; 187  :     }

  00070	18bd40f0	 ldmneia     sp!, {r4 - r7, lr}

; 180  :                 return (pCurValue->GetRegValue(pvData,pdwSize,pdwType)?ERROR_SUCCESS :ERROR_INVALID_PARAMETER);

  00074	03a00057	 moveq       r0, #0x57

; 186  :         
; 187  :     }

  00078	08bd40f0	 ldmeqia     sp!, {r4 - r7, lr}
  0007c	e12fff1e	 bx          lr
  00080		 |$M34694|

			 ENDP  ; |?RegFindValue@RegKey@@QAAJPBGPAXPAK2@Z|, RegKey::RegFindValue

	EXPORT	|?RegEnum@RegKey@@QAAJPAVRegKeyOrValue@@KPAGPAK@Z| ; RegKey::RegEnum
	IMPORT	|wcsncpy|

  00000			 AREA	 |.pdata|, PDATA
|$T34734| DCD	|$LN25@RegEnum|
	DCD	0x40002901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RegEnum@RegKey@@QAAJPAVRegKeyOrValue@@KPAGPAK@Z| PROC ; RegKey::RegEnum

; 188  :     LONG RegEnum(RegKeyOrValue * pList, DWORD dwReqIndex, PWSTR lpName, PDWORD lpcbName) {

  00000		 |$LN25@RegEnum|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M34731|
  00004	e1a08003	 mov         r8, r3
  00008	e3510000	 cmp         r1, #0

; 189  :         RegKeyOrValue * pReturnKey = pList;
; 190  :         for (DWORD dwIndex = 0; pReturnKey!=NULL &&  dwIndex<dwReqIndex; dwIndex++) {

  0000c	e3a00000	 mov         r0, #0
  00010	0a00001e	 beq         |$LN5@RegEnum|
  00014		 |$LL8@RegEnum|
  00014	e1500002	 cmp         r0, r2
  00018	2a000003	 bcs         |$LN6@RegEnum|

; 191  :             pReturnKey =(RegKey * )pReturnKey->GetNextRegKeyOrValuePtr();

  0001c	e591100c	 ldr         r1, [r1, #0xC]
  00020	e2800001	 add         r0, r0, #1
  00024	e3510000	 cmp         r1, #0
  00028	1afffff9	 bne         |$LL8@RegEnum|
  0002c		 |$LN6@RegEnum|

; 192  :         }
; 193  :         if (pReturnKey && pReturnKey->GetName()) {

  0002c	e3510000	 cmp         r1, #0
  00030	0a000016	 beq         |$LN5@RegEnum|
  00034	e5912004	 ldr         r2, [r1, #4]
  00038	e1b07002	 movs        r7, r2
  0003c	0a000013	 beq         |$LN5@RegEnum|

; 194  :             LONG lReturn = ERROR_SUCCESS;
; 195  :             if ( lpcbName) {

  00040	e59d5018	 ldr         r5, [sp, #0x18]
  00044	e3a04000	 mov         r4, #0
  00048	e3550000	 cmp         r5, #0
  0004c	0a000011	 beq         |$LN1@RegEnum|

; 196  :                 DWORD dwSize = _tcslen(pReturnKey->GetName()) + 1 ;

  00050	e1a00007	 mov         r0, r7
  00054	eb000000	 bl          wcslen
  00058	e2806001	 add         r6, r0, #1

; 197  :                 if ( lpName) {

  0005c	e3580000	 cmp         r8, #0
  00060	0a000008	 beq         |$LN2@RegEnum|

; 198  :                     _tcsncpy(lpName,pReturnKey->GetName(),min(dwSize,*lpcbName));

  00064	e5952000	 ldr         r2, [r5]
  00068	e1a01007	 mov         r1, r7
  0006c	e1a00008	 mov         r0, r8
  00070	e1560002	 cmp         r6, r2
  00074	31a02006	 movcc       r2, r6
  00078	eb000000	 bl          wcsncpy

; 199  :                     if (dwSize>*lpcbName)

  0007c	e5953000	 ldr         r3, [r5]
  00080	e1560003	 cmp         r6, r3

; 200  :                         lReturn = ERROR_MORE_DATA;

  00084	83a040ea	 movhi       r4, #0xEA
  00088		 |$LN2@RegEnum|

; 201  :                 }
; 202  :                 *lpcbName =  dwSize;

  00088	e5856000	 str         r6, [r5]

; 203  :             }
; 204  :             return lReturn;

  0008c	ea000001	 b           |$LN1@RegEnum|
  00090		 |$LN5@RegEnum|
  00090	e3a03c01	 mov         r3, #1, 24

; 205  :         }
; 206  :         else
; 207  :             return ERROR_NO_MORE_ITEMS;

  00094	e3834003	 orr         r4, r3, #3
  00098		 |$LN1@RegEnum|

; 208  :     }

  00098	e1a00004	 mov         r0, r4
  0009c	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  000a0	e12fff1e	 bx          lr
  000a4		 |$M34732|

			 ENDP  ; |?RegEnum@RegKey@@QAAJPAVRegKeyOrValue@@KPAGPAK@Z|, RegKey::RegEnum

	EXPORT	|?RegEnumKeyExW@RegKey@@QAAJKPAGPAK@Z|	; RegKey::RegEnumKeyExW

  00000			 AREA	 |.pdata|, PDATA
|$T34747| DCD	|$LN5@RegEnumKey|
	DCD	0x40000b02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RegEnumKeyExW@RegKey@@QAAJKPAGPAK@Z| PROC ; RegKey::RegEnumKeyExW

; 209  :     LONG RegEnumKeyEx( DWORD dwReqIndex, PWSTR lpName, PDWORD lpcbName) {

  00000		 |$LN5@RegEnumKey|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M34744|
  00008	e1a0e003	 mov         lr, r3
  0000c	e1a03002	 mov         r3, r2
  00010	e1a02001	 mov         r2, r1

; 210  :         return RegEnum(m_pRegKeyList, dwReqIndex, lpName, lpcbName) ;

  00014	e5901018	 ldr         r1, [r0, #0x18]
  00018	e58de000	 str         lr, [sp]
  0001c	eb000000	 bl          |?RegEnum@RegKey@@QAAJPAVRegKeyOrValue@@KPAGPAK@Z|

; 211  :     }

  00020	e28dd004	 add         sp, sp, #4
  00024	e49de004	 ldr         lr, [sp], #4
  00028	e12fff1e	 bx          lr
  0002c		 |$M34745|

			 ENDP  ; |?RegEnumKeyExW@RegKey@@QAAJKPAGPAK@Z|, RegKey::RegEnumKeyExW

	EXPORT	|?RegEnumValueW@RegKey@@QAAJKPAGPAK@Z|	; RegKey::RegEnumValueW

  00000			 AREA	 |.pdata|, PDATA
|$T34760| DCD	|$LN5@RegEnumVal|
	DCD	0x40000b02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RegEnumValueW@RegKey@@QAAJKPAGPAK@Z| PROC ; RegKey::RegEnumValueW

; 212  :     LONG RegEnumValue( DWORD dwReqIndex,LPWSTR lpValueName, LPDWORD lpcbValueName) {

  00000		 |$LN5@RegEnumVal|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M34757|
  00008	e1a0e003	 mov         lr, r3
  0000c	e1a03002	 mov         r3, r2
  00010	e1a02001	 mov         r2, r1

; 213  :         return RegEnum(m_pRegValueList, dwReqIndex, lpValueName, lpcbValueName) ;

  00014	e5901014	 ldr         r1, [r0, #0x14]
  00018	e58de000	 str         lr, [sp]
  0001c	eb000000	 bl          |?RegEnum@RegKey@@QAAJPAVRegKeyOrValue@@KPAGPAK@Z|

; 214  :     }

  00020	e28dd004	 add         sp, sp, #4
  00024	e49de004	 ldr         lr, [sp], #4
  00028	e12fff1e	 bx          lr
  0002c		 |$M34758|

			 ENDP  ; |?RegEnumValueW@RegKey@@QAAJKPAGPAK@Z|, RegKey::RegEnumValueW

	EXPORT	|?DeleteAll@RegKey@@IAAXXZ|		; RegKey::DeleteAll

  00000			 AREA	 |.pdata|, PDATA
|$T34796| DCD	|$LN25@DeleteAll|
	DCD	0x40001e01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DeleteAll@RegKey@@IAAXXZ| PROC	; RegKey::DeleteAll

; 226  :     void DeleteAll() {

  00000		 |$LN25@DeleteAll|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M34793|
  00004	e1a04000	 mov         r4, r0

; 227  :         while (m_pRegValueList) {

  00008	ea000008	 b           |$LN20@DeleteAll|
  0000c		 |$LL4@DeleteAll|

; 228  :             RegValue * pNextRegValue = (RegValue * )m_pRegValueList->GetNextRegKeyOrValuePtr() ;

  0000c	e5943014	 ldr         r3, [r4, #0x14]
  00010	e593500c	 ldr         r5, [r3, #0xC]

; 229  :             delete m_pRegValueList;

  00014	e1b00003	 movs        r0, r3
  00018	15903000	 ldrne       r3, [r0]
  0001c	13a01001	 movne       r1, #1
  00020	15933004	 ldrne       r3, [r3, #4]
  00024	11a0e00f	 movne       lr, pc
  00028	112fff13	 bxne        r3

; 230  :             m_pRegValueList = pNextRegValue;

  0002c	e5845014	 str         r5, [r4, #0x14]
  00030		 |$LN20@DeleteAll|
  00030	e5943014	 ldr         r3, [r4, #0x14]
  00034	e3530000	 cmp         r3, #0
  00038	1afffff3	 bne         |$LL4@DeleteAll|

; 231  :         }
; 232  :         while (m_pRegKeyList) {

  0003c	ea000008	 b           |$LN22@DeleteAll|
  00040		 |$LL2@DeleteAll|

; 233  :             RegKey * pNextKey = (RegKey *) m_pRegKeyList->GetNextRegKeyOrValuePtr();

  00040	e5943018	 ldr         r3, [r4, #0x18]
  00044	e593500c	 ldr         r5, [r3, #0xC]

; 234  :             delete m_pRegKeyList;

  00048	e1b00003	 movs        r0, r3
  0004c	15903000	 ldrne       r3, [r0]
  00050	13a01001	 movne       r1, #1
  00054	15933004	 ldrne       r3, [r3, #4]
  00058	11a0e00f	 movne       lr, pc
  0005c	112fff13	 bxne        r3

; 235  :             m_pRegKeyList =  pNextKey ;

  00060	e5845018	 str         r5, [r4, #0x18]
  00064		 |$LN22@DeleteAll|
  00064	e5943018	 ldr         r3, [r4, #0x18]
  00068	e3530000	 cmp         r3, #0
  0006c	1afffff3	 bne         |$LL2@DeleteAll|

; 236  :         }
; 237  :     }

  00070	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00074	e12fff1e	 bx          lr
  00078		 |$M34794|

			 ENDP  ; |?DeleteAll@RegKey@@IAAXXZ|, RegKey::DeleteAll

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|?EnumerateAllKey@RegKey@@IAAHXZ|	; RegKey::EnumerateAllKey
	IMPORT	|RegEnumKeyExW|

  00000			 AREA	 |.pdata|, PDATA
|$T34829| DCD	|$LN23@EnumerateA|
	DCD	0xc0004b02

  00000			 AREA	 |.xdata|, DATA
|$T34825| DCD	0xffffffd8
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T34825|

  00008		 |?EnumerateAllKey@RegKey@@IAAHXZ| PROC	; RegKey::EnumerateAllKey

; 238  :     BOOL EnumerateAllKey() {

  00008		 |$LN23@EnumerateA|
  00008	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  0000c	e24dde22	 sub         sp, sp, #0x22, 28
  00010		 |$M34826|
  00010	e1a06000	 mov         r6, r0
  00014	e59f3114	 ldr         r3, [pc, #0x114]
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d321c	 str         r3, [sp, #0x21C]

; 239  :         BOOL fReturn = FALSE;
; 240  :         if (m_RegKey) {

  00020	e5963010	 ldr         r3, [r6, #0x10]
  00024	e3a05000	 mov         r5, #0
  00028	e3530000	 cmp         r3, #0
  0002c	0a000038	 beq         |$LN20@EnumerateA|

; 241  :             TCHAR regName[MAX_PATH];
; 242  :             fReturn = TRUE;
; 243  :             for (DWORD RegEnum = 0;;RegEnum++) {

  00030	e59f80f4	 ldr         r8, [pc, #0xF4]
  00034	e3a05001	 mov         r5, #1
  00038	e3a07000	 mov         r7, #0
  0003c	e3a09000	 mov         r9, #0
  00040	e3a0bf41	 mov         r11, #0x41, 30
  00044	e3a0a000	 mov         r10, #0
  00048		 |$LL9@EnumerateA|

; 244  :                 DWORD ValLen = MAX_PATH;
; 245  :                 LONG status = ::RegEnumKeyEx(m_RegKey, RegEnum, regName, &ValLen, NULL, NULL, NULL, NULL);

  00048	e5960010	 ldr         r0, [r6, #0x10]
  0004c	e28d3010	 add         r3, sp, #0x10
  00050	e28d2014	 add         r2, sp, #0x14
  00054	e1a01007	 mov         r1, r7
  00058	e58db010	 str         r11, [sp, #0x10]
  0005c	e58d900c	 str         r9, [sp, #0xC]
  00060	e58d9008	 str         r9, [sp, #8]
  00064	e58d9004	 str         r9, [sp, #4]
  00068	e58d9000	 str         r9, [sp]
  0006c	eb000000	 bl          RegEnumKeyExW
  00070	e3500000	 cmp         r0, #0

; 246  :                 if (status == ERROR_SUCCESS || status == ERROR_MORE_DATA) {

  00074	0a000001	 beq         |$LN5@EnumerateA|
  00078	e35000ea	 cmp         r0, #0xEA
  0007c	1a000024	 bne         |$LN20@EnumerateA|
  00080		 |$LN5@EnumerateA|

; 247  :                     regName[MAX_PATH -1] =0;
; 248  :                     RegKey * newKey = new RegKey (m_RegKey,regName,0,m_pRegKeyList);

  00080	e3a0001c	 mov         r0, #0x1C
  00084	e28dcc02	 add         r12, sp, #2, 24
  00088	e1cca1ba	 strh        r10, [r12, #0x1A]
  0008c	eb000000	 bl          |??2@YAPAXI@Z|
  00090	e1b04000	 movs        r4, r0
  00094	0a000009	 beq         |$LN13@EnumerateA|
  00098	e5963018	 ldr         r3, [r6, #0x18]
  0009c	e5961010	 ldr         r1, [r6, #0x10]
  000a0	e28d2014	 add         r2, sp, #0x14
  000a4	e1a00004	 mov         r0, r4
  000a8	eb000000	 bl          |??0RegKeyOrValue@@QAA@PAUHKEY__@@PBGPAV0@@Z|
  000ac	e5848000	 str         r8, [r4]
  000b0	e5849014	 str         r9, [r4, #0x14]
  000b4	e5849018	 str         r9, [r4, #0x18]
  000b8	e5849010	 str         r9, [r4, #0x10]
  000bc	ea000000	 b           |$LN14@EnumerateA|
  000c0		 |$LN13@EnumerateA|
  000c0	e3a04000	 mov         r4, #0
  000c4		 |$LN14@EnumerateA|

; 249  :                     if (newKey && newKey->Init())

  000c4	e3540000	 cmp         r4, #0
  000c8	0a00000e	 beq         |$LN15@EnumerateA|
  000cc	e5943000	 ldr         r3, [r4]
  000d0	e1a00004	 mov         r0, r4
  000d4	e5933000	 ldr         r3, [r3]
  000d8	e1a0e00f	 mov         lr, pc
  000dc	e12fff13	 bx          r3
  000e0	e3500000	 cmp         r0, #0

; 250  :                         m_pRegKeyList = newKey;

  000e4	15864018	 strne       r4, [r6, #0x18]
  000e8	12877001	 addne       r7, r7, #1
  000ec	1affffd5	 bne         |$LL9@EnumerateA|

; 251  :                     else{
; 252  :                         if (newKey)
; 253  :                             delete newKey;

  000f0	e5943000	 ldr         r3, [r4]
  000f4	e3a01001	 mov         r1, #1
  000f8	e1a00004	 mov         r0, r4
  000fc	e5933004	 ldr         r3, [r3, #4]
  00100	e1a0e00f	 mov         lr, pc
  00104	e12fff13	 bx          r3
  00108		 |$LN15@EnumerateA|

; 254  :                         fReturn = FALSE; // Not all the key has been enumerated.

  00108	e3a05000	 mov         r5, #0
  0010c	e2877001	 add         r7, r7, #1
  00110	eaffffcc	 b           |$LL9@EnumerateA|
  00114		 |$LN20@EnumerateA|

; 255  :                     }
; 256  :                 }
; 257  :                 else
; 258  :                     break;
; 259  :             }
; 260  :         }
; 261  :         return fReturn;

  00114	e59d021c	 ldr         r0, [sp, #0x21C]
  00118	eb000000	 bl          __security_check_cookie

; 262  :     }

  0011c	e1a00005	 mov         r0, r5
  00120	e28dde22	 add         sp, sp, #0x22, 28
  00124	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00128	e12fff1e	 bx          lr
  0012c		 |$LN24@EnumerateA|
  0012c		 |$LN25@EnumerateA|
  0012c	00000000	 DCD         |??_7RegKey@@6B@|
  00130		 |$LN26@EnumerateA|
  00130	00000000	 DCD         |__security_cookie|
  00134		 |$M34827|

			 ENDP  ; |?EnumerateAllKey@RegKey@@IAAHXZ|, RegKey::EnumerateAllKey

	EXPORT	|?LeaveLock@SystemNotifyRegKey@@QAAXXZ|	; SystemNotifyRegKey::LeaveLock
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T34844| DCD	|$LN7@LeaveLock|
	DCD	0x40000501
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\pm\dll\pmsysreg.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?LeaveLock@SystemNotifyRegKey@@QAAXXZ| PROC ; SystemNotifyRegKey::LeaveLock

; 333  :     void LeaveLock() { Unlock(); };

  00000		 |$LN7@LeaveLock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M34841|
  00004	e2800034	 add         r0, r0, #0x34
  00008	eb000000	 bl          LeaveCriticalSection
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M34842|

			 ENDP  ; |?LeaveLock@SystemNotifyRegKey@@QAAXXZ|, SystemNotifyRegKey::LeaveLock

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|?RegReadClassDeviceRestrictions@@YAPAU_DevicePowerRestriction_tag@@PAVRegKey@@PBU_GUID@@PAU1@@Z| ; RegReadClassDeviceRestrictions
	EXPORT	|??_C@_1EI@NKMAIPDH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@BJILKDJL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAs?$AAt?$AAr?$AAi?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAD?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@HANLFFFG@?$AAd?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@HNABGIFC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAk?$AAi?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@OAJFFPML@?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@MCGPLBI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAw?$AAr?$AAo?$AAn?$AAg?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@HGNICGBK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAE?$AAn?$AAu?$AAm?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@NLKKHEA@?$AAR?$AAe?$AAg?$AAR?$AAe?$AAa?$AAd?$AAC?$AAl?$AAa?$AAs?$AAs?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAR?$AAe?$AAs?$AAt?$AAr?$AAi?$AAc?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KG@LONBFMIG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAa?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAn?$AAf?$AAo?$AAr?$AAm?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAc?$AAl?$AAa?$AAs@| [ DATA ] ; `string'
	IMPORT	|PowerRestrictionCreate|
	IMPORT	|dpCurSettings|

  00000			 AREA	 |.pdata|, PDATA
|$T34887| DCD	|$LN43@RegReadCla|
	DCD	0xc000a602

  00000			 AREA	 |.xdata|, DATA
|$T34883| DCD	0xffffffd8

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@NKMAIPDH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CF@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "v"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "d"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " "
	DCB	0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "v", 0x0, "a", 0x0, "l", 0x0, "u", 0x0, "e", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@BJILKDJL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAs?$AAt?$AAr?$AAi?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAD?$AA?$CF@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "'", 0x0, "%"
	DCB	0x0, "s", 0x0, "'", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "s"
	DCB	0x0, "t", 0x0, "r", 0x0, "i", 0x0, "c", 0x0, "t", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "D"
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@HANLFFFG@?$AAd?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?$AA@| DCB "d", 0x0
	DCB	"e", 0x0, "f", 0x0, "a", 0x0, "u", 0x0, "l", 0x0, "t", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@HNABGIFC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAk?$AAi?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "k", 0x0, "i"
	DCB	0x0, "p", 0x0, "p", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "f", 0x0, "l", 0x0, "a", 0x0, "g", 0x0, "s", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@OAJFFPML@?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?$AA@| DCB "F", 0x0, "l", 0x0
	DCB	"a", 0x0, "g", 0x0, "s", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@MCGPLBI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAw?$AAr?$AAo?$AAn?$AAg?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, " ", 0x0, "w", 0x0, "r", 0x0, "o", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "t", 0x0, "y", 0x0, "p", 0x0, "e"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@HGNICGBK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAE?$AAn?$AAu?$AAm?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "E", 0x0, "n", 0x0, "u", 0x0, "m", 0x0, "V", 0x0, "a"
	DCB	0x0, "l", 0x0, "u", 0x0, "e", 0x0, "(", 0x0, ")", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@NLKKHEA@?$AAR?$AAe?$AAg?$AAR?$AAe?$AAa?$AAd?$AAC?$AAl?$AAa?$AAs?$AAs?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAR?$AAe?$AAs?$AAt?$AAr?$AAi?$AAc?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "g", 0x0, "R", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, "C", 0x0, "l", 0x0, "a", 0x0, "s", 0x0, "s", 0x0, "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, "R"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, "r", 0x0, "i", 0x0, "c"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "s", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KG@LONBFMIG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAa?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAn?$AAf?$AAo?$AAr?$AAm?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAc?$AAl?$AAa?$AAs@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, "m", 0x0, "a"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "f"
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "c", 0x0, "l", 0x0, "a"
	DCB	0x0, "s", 0x0, "s", 0x0, " ", 0x0, "{", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, "-", 0x0, "%", 0x0, "0", 0x0, "4"
	DCB	0x0, "x", 0x0, "-", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "x"
	DCB	0x0, "-", 0x0, "%", 0x0, "0", 0x0, "4", 0x0, "x", 0x0, "-"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "2", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2", 0x0, "x"
	DCB	0x0, "}", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\pm\dll\pmsysstate.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T34883|

  00008		 |?RegReadClassDeviceRestrictions@@YAPAU_DevicePowerRestriction_tag@@PAVRegKey@@PBU_GUID@@PAU1@@Z| PROC ; RegReadClassDeviceRestrictions

; 35   : {

  00008		 |$LN43@RegReadCla|
  00008	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  0000c	e24ddf93	 sub         sp, sp, #0x93, 30
  00010		 |$M34884|
  00010	e1a06002	 mov         r6, r2
  00014	e1a02001	 mov         r2, r1
  00018	e1a04000	 mov         r4, r0
  0001c	e58d203c	 str         r2, [sp, #0x3C]
  00020	e58d6028	 str         r6, [sp, #0x28]
  00024	e58d4024	 str         r4, [sp, #0x24]
  00028	e59f326c	 ldr         r3, [pc, #0x26C]
  0002c	e5933000	 ldr         r3, [r3]
  00030	e58d3248	 str         r3, [sp, #0x248]

; 36   :     TCHAR szDevName[MAX_PATH];
; 37   :     DWORD dwNameChars = 0;
; 38   : 	DWORD dwType	  = 0;
; 39   : 	DWORD dwValue	  = 0;
; 40   : 	DWORD dwValSize	  = 0;
; 41   : 	DWORD dwIndex	  = 0;
; 42   : 	DWORD dwStatus	  = 0;
; 43   :     DEVICEID devId;
; 44   : 
; 45   : #ifndef SHIP_BUILD
; 46   :     SETFNAME(_T("RegReadClassDeviceRestrictions"));
; 47   : #endif
; 48   : 
; 49   :     PMLOGMSG(ZONE_REGISTRY, 
; 50   :         (_T("%s: reading information for class {%08x-%04x-%04x-%04x-%02x%02x%02x%02x%02x%02x}\r\n"),
; 51   :         pszFname,
; 52   :         pGuidClass->Data1, pGuidClass->Data2, pGuidClass->Data3,
; 53   :         (pGuidClass->Data4[0] << 8) + pGuidClass->Data4[1], pGuidClass->Data4[2], pGuidClass->Data4[3], 
; 54   :         pGuidClass->Data4[4], pGuidClass->Data4[5], pGuidClass->Data4[6], pGuidClass->Data4[7]));

  00034	e59f5258	 ldr         r5, [pc, #0x258]
  00038	e3a00000	 mov         r0, #0
  0003c	e3a0e000	 mov         lr, #0
  00040	e5953440	 ldr         r3, [r5, #0x440]
  00044	e3a01000	 mov         r1, #0
  00048	e58d002c	 str         r0, [sp, #0x2C]
  0004c	e3130c02	 tst         r3, #2, 24
  00050	e58de020	 str         lr, [sp, #0x20]
  00054	e58d1030	 str         r1, [sp, #0x30]
  00058	0a00001a	 beq         |$LN22@RegReadCla|
  0005c	e5d24008	 ldrb        r4, [r2, #8]
  00060	e5d2e009	 ldrb        lr, [r2, #9]
  00064	e5d2500f	 ldrb        r5, [r2, #0xF]
  00068	e5d2600e	 ldrb        r6, [r2, #0xE]
  0006c	e08e1404	 add         r1, lr, r4, lsl #8
  00070	e5d2700d	 ldrb        r7, [r2, #0xD]
  00074	e5d2800c	 ldrb        r8, [r2, #0xC]
  00078	e5d2900b	 ldrb        r9, [r2, #0xB]
  0007c	e5d2a00a	 ldrb        r10, [r2, #0xA]
  00080	e1d2b0b6	 ldrh        r11, [r2, #6]
  00084	e1d230b4	 ldrh        r3, [r2, #4]
  00088	e5922000	 ldr         r2, [r2]
  0008c	e59f0204	 ldr         r0, [pc, #0x204]
  00090	e58d1004	 str         r1, [sp, #4]
  00094	e59f11e4	 ldr         r1, [pc, #0x1E4]
  00098	e58d501c	 str         r5, [sp, #0x1C]
  0009c	e58d6018	 str         r6, [sp, #0x18]
  000a0	e58d7014	 str         r7, [sp, #0x14]
  000a4	e58d8010	 str         r8, [sp, #0x10]
  000a8	e58d900c	 str         r9, [sp, #0xC]
  000ac	e58da008	 str         r10, [sp, #8]
  000b0	e58db000	 str         r11, [sp]
  000b4	eb000000	 bl          CeLogMsg
  000b8	e59d203c	 ldr         r2, [sp, #0x3C]
  000bc	e59f51d0	 ldr         r5, [pc, #0x1D0]
  000c0	e59d6028	 ldr         r6, [sp, #0x28]

; 94   :                     pdprCurrent = pdprNew;

  000c4	e59d4024	 ldr         r4, [sp, #0x24]
  000c8		 |$LN22@RegReadCla|
  000c8	e3a03c01	 mov         r3, #1, 24
  000cc	e3839003	 orr         r9, r3, #3
  000d0	e58d2034	 str         r2, [sp, #0x34]
  000d4	e3a08000	 mov         r8, #0
  000d8	e3a0ef41	 mov         lr, #0x41, 30
  000dc	e3a07004	 mov         r7, #4
  000e0	e28db028	 add         r11, sp, #0x28
  000e4	e28da040	 add         r10, sp, #0x40
  000e8		 |$LL19@RegReadCla|
  000e8	e5941014	 ldr         r1, [r4, #0x14]
  000ec	e28d3040	 add         r3, sp, #0x40
  000f0	e1a02008	 mov         r2, r8
  000f4	e1a00004	 mov         r0, r4
  000f8	e58de028	 str         lr, [sp, #0x28]
  000fc	e58d7030	 str         r7, [sp, #0x30]
  00100	e58db000	 str         r11, [sp]
  00104	eb000000	 bl          |?RegEnum@RegKey@@QAAJPAVRegKeyOrValue@@KPAGPAK@Z|
  00108	e1b07000	 movs        r7, r0
  0010c	1a00004e	 bne         |$LN37@RegReadCla|
  00110	e28de02c	 add         lr, sp, #0x2C
  00114	e28d3030	 add         r3, sp, #0x30
  00118	e28d2020	 add         r2, sp, #0x20
  0011c	e28d1040	 add         r1, sp, #0x40
  00120	e1a00004	 mov         r0, r4
  00124	e58de000	 str         lr, [sp]
  00128	eb000000	 bl          |?RegFindValue@RegKey@@QAAJPBGPAXPAK2@Z|
  0012c	e1b07000	 movs        r7, r0
  00130	1a000045	 bne         |$LN37@RegReadCla|
  00134	e59d202c	 ldr         r2, [sp, #0x2C]
  00138	e3520004	 cmp         r2, #4
  0013c	0a000006	 beq         |$LN12@RegReadCla|
  00140	e5953440	 ldr         r3, [r5, #0x440]
  00144	e3130002	 tst         r3, #2
  00148	1a000001	 bne         |$LN24@RegReadCla|

; 65   :         case ERROR_SUCCESS:
; 66   :             // make sure that the type of this data is a dword and isn't 
; 67   :             // the reserved word "flags".
; 68   :             if(dwType != REG_DWORD) {
; 69   :                 PMLOGMSG(ZONE_WARN || ZONE_REGISTRY, 
; 70   :                     (_T("%s: read wrong type %d\r\n"), pszFname, dwType));

  0014c	e3130c02	 tst         r3, #2, 24
  00150	0a00002b	 beq         |$LN29@RegReadCla|
  00154		 |$LN24@RegReadCla|
  00154	e59f0134	 ldr         r0, [pc, #0x134]

; 71   :             } else if(_tcsicmp(szDevName, _T("Flags")) == 0) {

  00158	ea000009	 b           |$LN40@RegReadCla|
  0015c		 |$LN12@RegReadCla|
  0015c	e59f1128	 ldr         r1, [pc, #0x128]
  00160	e28d0040	 add         r0, sp, #0x40
  00164	eb000000	 bl          _wcsicmp
  00168	e3500000	 cmp         r0, #0
  0016c	1a000007	 bne         |$LN10@RegReadCla|

; 72   :                 PMLOGMSG(ZONE_REGISTRY, (_T("%s: skipping flags 0x%08x\r\n"),
; 73   :                     pszFname, dwValue));

  00170	e5953440	 ldr         r3, [r5, #0x440]
  00174	e3130c02	 tst         r3, #2, 24
  00178	0a000021	 beq         |$LN29@RegReadCla|
  0017c	e59d2020	 ldr         r2, [sp, #0x20]
  00180	e59f0100	 ldr         r0, [pc, #0x100]
  00184		 |$LN40@RegReadCla|
  00184	e59f10f4	 ldr         r1, [pc, #0xF4]
  00188	eb000000	 bl          CeLogMsg

; 74   :             } else if(dwValue < D0 || dwValue > D4) {

  0018c	ea00001c	 b           |$LN29@RegReadCla|
  00190		 |$LN10@RegReadCla|
  00190	e59d2020	 ldr         r2, [sp, #0x20]
  00194	e3520004	 cmp         r2, #4
  00198	8a000024	 bhi         |$LN7@RegReadCla|

; 78   :             } else {
; 79   :                 PDEVICE_POWER_RESTRICTION pdprNew;
; 80   : 
; 81   :                 // if this is the "default" value it applies to all
; 82   :                 // devices of this class
; 83   :                 if(_tcsicmp(szDevName, _T("default")) == 0) {

  0019c	e59f10e0	 ldr         r1, [pc, #0xE0]
  001a0	e28d0040	 add         r0, sp, #0x40
  001a4	eb000000	 bl          _wcsicmp
  001a8	e3500000	 cmp         r0, #0

; 84   :                     devId.pszName = NULL;
; 85   :                 } else {
; 86   :                     devId.pszName = szDevName;
; 87   :                 }
; 88   :                 pdprNew = PowerRestrictionCreate(&devId, 0, (CEDEVICE_POWER_STATE) dwValue, 
; 89   :                     NULL, 0);

  001ac	e59d2020	 ldr         r2, [sp, #0x20]
  001b0	03a03000	 moveq       r3, #0
  001b4	058d3038	 streq       r3, [sp, #0x38]
  001b8	e3a0e000	 mov         lr, #0
  001bc	e3a03000	 mov         r3, #0
  001c0	e3a01000	 mov         r1, #0
  001c4	e28d0034	 add         r0, sp, #0x34
  001c8	158da038	 strne       r10, [sp, #0x38]
  001cc	e58de000	 str         lr, [sp]
  001d0	eb000000	 bl          PowerRestrictionCreate
  001d4	e1b04000	 movs        r4, r0

; 90   :                 if(pdprNew != NULL) {

  001d8	0a000008	 beq         |$LN38@RegReadCla|

; 91   :                     PMLOGMSG(ZONE_REGISTRY,  (_T("%s: device '%s' restricted to D%d\r\n"),
; 92   :                         pszFname, szDevName, dwValue));

  001dc	e5953440	 ldr         r3, [r5, #0x440]
  001e0	e3130c02	 tst         r3, #2, 24
  001e4	159d3020	 ldrne       r3, [sp, #0x20]
  001e8	159f1090	 ldrne       r1, [pc, #0x90]
  001ec	159f0088	 ldrne       r0, [pc, #0x88]
  001f0	128d2040	 addne       r2, sp, #0x40
  001f4	1b000000	 blne        CeLogMsg

; 93   :                     pdprNew->pNext = pdprCurrent;

  001f8	e5846014	 str         r6, [r4, #0x14]

; 94   :                     pdprCurrent = pdprNew;

  001fc	e1a06004	 mov         r6, r4
  00200		 |$LN38@RegReadCla|

; 35   : {

  00200	e59d4024	 ldr         r4, [sp, #0x24]

; 75   :                 PMLOGMSG(ZONE_WARN || ZONE_REGISTRY, 
; 76   :                     (_T("%s: invalid device state value %d\r\n"), pszFname,
; 77   :                     dwValue));

  00204		 |$LN29@RegReadCla|

; 105  :             break;
; 106  :         }
; 107  :         dwIndex++;
; 108  :     } while(dwStatus != ERROR_NO_MORE_ITEMS);

  00204	e1570009	 cmp         r7, r9
  00208	e3a07004	 mov         r7, #4
  0020c	e2888001	 add         r8, r8, #1
  00210	e3a0ef41	 mov         lr, #0x41, 30
  00214	1affffb3	 bne         |$LL19@RegReadCla|

; 109  : 
; 110  : 
; 111  :     return pdprCurrent;

  00218	e59d0248	 ldr         r0, [sp, #0x248]
  0021c	eb000000	 bl          __security_check_cookie

; 112  : }

  00220	e1a00006	 mov         r0, r6
  00224	e28ddf93	 add         sp, sp, #0x93, 30
  00228	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  0022c	e12fff1e	 bx          lr
  00230		 |$LN7@RegReadCla|

; 75   :                 PMLOGMSG(ZONE_WARN || ZONE_REGISTRY, 
; 76   :                     (_T("%s: invalid device state value %d\r\n"), pszFname,
; 77   :                     dwValue));

  00230	e5953440	 ldr         r3, [r5, #0x440]
  00234	e3130002	 tst         r3, #2
  00238	1a000001	 bne         |$LN28@RegReadCla|
  0023c	e3130c02	 tst         r3, #2, 24
  00240	0affffef	 beq         |$LN29@RegReadCla|
  00244		 |$LN28@RegReadCla|
  00244	e59f002c	 ldr         r0, [pc, #0x2C]
  00248	eaffffcd	 b           |$LN40@RegReadCla|
  0024c		 |$LN37@RegReadCla|

; 55   : 
; 56   :     devId.pGuid = pGuidClass;
; 57   :     dwIndex = 0;
; 58   :     do {
; 59   :         dwNameChars = dim(szDevName);
; 60   :         dwValSize = sizeof(dwValue);
; 61   :         dwStatus = pRegKey->RegEnumValue( dwIndex, szDevName, &dwNameChars);
; 62   :         if (dwStatus == ERROR_SUCCESS)
; 63   :             dwStatus =  pRegKey->RegFindValue(szDevName,(LPBYTE) &dwValue, &dwValSize,&dwType);
; 64   :         switch(dwStatus) {

  0024c	e1570009	 cmp         r7, r9
  00250	0affffeb	 beq         |$LN29@RegReadCla|

; 95   :                 }
; 96   :             }
; 97   :             break;
; 98   :         case ERROR_NO_MORE_ITEMS:
; 99   :             break;
; 100  :         default:
; 101  :             // maybe a value of the wrong type or something, treat it as
; 102  :             // non fatal so that we get all of the device names.
; 103  :             PMLOGMSG(ZONE_WARN || ZONE_REGISTRY, 
; 104  :                 (_T("%s: RegEnumValue() returned %d\r\n"), pszFname, dwStatus));

  00254	e5953440	 ldr         r3, [r5, #0x440]
  00258	e3130002	 tst         r3, #2
  0025c	1a000001	 bne         |$LN32@RegReadCla|
  00260	e3130c02	 tst         r3, #2, 24
  00264	0affffe6	 beq         |$LN29@RegReadCla|
  00268		 |$LN32@RegReadCla|
  00268	e59f0004	 ldr         r0, [pc, #4]
  0026c	e1a02007	 mov         r2, r7
  00270	eaffffc3	 b           |$LN40@RegReadCla|
  00274		 |$LN44@RegReadCla|
  00274		 |$LN45@RegReadCla|
  00274	00000000	 DCD         |??_C@_1EC@HGNICGBK@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAE?$AAn?$AAu?$AAm?$AAV?$AAa?$AAl?$AAu?$AAe?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@|
  00278		 |$LN46@RegReadCla|
  00278	00000000	 DCD         |??_C@_1EI@NKMAIPDH@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AA?$CF@|
  0027c		 |$LN47@RegReadCla|
  0027c	00000000	 DCD         |??_C@_1EI@BJILKDJL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAr?$AAe?$AAs?$AAt?$AAr?$AAi?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAD?$AA?$CF@|
  00280		 |$LN48@RegReadCla|
  00280	00000000	 DCD         |??_C@_1DO@NLKKHEA@?$AAR?$AAe?$AAg?$AAR?$AAe?$AAa?$AAd?$AAC?$AAl?$AAa?$AAs?$AAs?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAR?$AAe?$AAs?$AAt?$AAr?$AAi?$AAc?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?$AA@|
  00284		 |$LN49@RegReadCla|
  00284	00000000	 DCD         |??_C@_1BA@HANLFFFG@?$AAd?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?$AA@|
  00288		 |$LN50@RegReadCla|
  00288	00000000	 DCD         |??_C@_1DI@HNABGIFC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAk?$AAi?$AAp?$AAp?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  0028c		 |$LN51@RegReadCla|
  0028c	00000000	 DCD         |??_C@_1M@OAJFFPML@?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?$AA@|
  00290		 |$LN52@RegReadCla|
  00290	00000000	 DCD         |??_C@_1DC@MCGPLBI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAw?$AAr?$AAo?$AAn?$AAg?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00294		 |$LN53@RegReadCla|
  00294	00000000	 DCD         |dpCurSettings|
  00298		 |$LN54@RegReadCla|
  00298	00000000	 DCD         |??_C@_1KG@LONBFMIG@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAa?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAi?$AAn?$AAf?$AAo?$AAr?$AAm?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAc?$AAl?$AAa?$AAs@|
  0029c		 |$LN55@RegReadCla|
  0029c	00000000	 DCD         |__security_cookie|
  002a0		 |$M34885|

			 ENDP  ; |?RegReadClassDeviceRestrictions@@YAPAU_DevicePowerRestriction_tag@@PAVRegKey@@PBU_GUID@@PAU1@@Z|, RegReadClassDeviceRestrictions

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|?RegReadDeviceRestrictions@@YAPAU_DevicePowerRestriction_tag@@PAVRegKey@@@Z| ; RegReadDeviceRestrictions
	EXPORT	|??_C@_1EG@MIFCJAJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAO?$AAp?$AAe?$AAn?$AAK?$AAe?$AAy?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AA?$CF?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@EONBJFMA@?$AAR?$AAe?$AAg?$AAR?$AAe?$AAa?$AAd?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAR?$AAe?$AAs?$AAt?$AAr?$AAi?$AAc?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@OKEADBNJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAE?$AAn?$AAu?$AAm?$AAK?$AAe?$AAy?$AAE?$AAx?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	IMPORT	|ConvertStringToGuid|
	IMPORT	|idGenericPMDeviceClass|
; File c:\wince600\platform\z2170p\src\drivers\pm\dll\pmsysreg.h

  00000			 AREA	 |.pdata|, PDATA
|$T34928| DCD	|$LN25@RegReadDev|
	DCD	0xc0004d02

  00000			 AREA	 |.xdata|, DATA
|$T34924| DCD	0xffffffd8

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@MIFCJAJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAO?$AAp?$AAe?$AAn?$AAK?$AAe?$AAy?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AA?$CF?$AAd@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "O", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "K", 0x0, "e"
	DCB	0x0, "y", 0x0, "E", 0x0, "x", 0x0, "(", 0x0, "'", 0x0, "%"
	DCB	0x0, "s", 0x0, "'", 0x0, ")", 0x0, " ", 0x0, "f", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@EONBJFMA@?$AAR?$AAe?$AAg?$AAR?$AAe?$AAa?$AAd?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAR?$AAe?$AAs?$AAt?$AAr?$AAi?$AAc?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "g", 0x0, "R", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "R", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, "r", 0x0, "i"
	DCB	0x0, "c", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "s"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@OKEADBNJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAE?$AAn?$AAu?$AAm?$AAK?$AAe?$AAy?$AAE?$AAx?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "E", 0x0, "n", 0x0, "u", 0x0, "m", 0x0, "K", 0x0, "e"
	DCB	0x0, "y", 0x0, "E", 0x0, "x", 0x0, "(", 0x0, ")", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\pm\dll\pmsysstate.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T34924|

  00008		 |?RegReadDeviceRestrictions@@YAPAU_DevicePowerRestriction_tag@@PAVRegKey@@@Z| PROC ; RegReadDeviceRestrictions

; 119  : {

  00008		 |$LN25@RegReadDev|
  00008	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  0000c	e24ddf89	 sub         sp, sp, #0x89, 30
  00010		 |$M34925|
  00010	e1a05000	 mov         r5, r0
  00014	e59f311c	 ldr         r3, [pc, #0x11C]
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3220	 str         r3, [sp, #0x220]

; 120  :     PDEVICE_POWER_RESTRICTION pdpr = NULL;
; 121  :     GUID gClass;
; 122  :     TCHAR szKeyName[MAX_PATH];
; 123  :     DWORD dwNameChars, dwIndex, dwStatus;
; 124  : 
; 125  : #ifndef SHIP_BUILD
; 126  :     SETFNAME(_T("RegReadDeviceRestrictions"));
; 127  : #endif
; 128  : 
; 129  :     // build up the list starting with class subkeys (no subkey is allowed
; 130  :     // for generic devices).
; 131  :     dwIndex = 0;

  00020	e3a03c01	 mov         r3, #1, 24
  00024	e59f9108	 ldr         r9, [pc, #0x108]
  00028	e3836003	 orr         r6, r3, #3
  0002c	e3a08000	 mov         r8, #0
  00030	e3a07000	 mov         r7, #0
  00034	e3a0bf41	 mov         r11, #0x41, 30
  00038	e28da004	 add         r10, sp, #4
  0003c		 |$LL11@RegReadDev|

; 132  :     do {
; 133  :         dwNameChars = dim(szKeyName);
; 134  :         dwStatus = pRegKey->RegEnumKeyEx(dwIndex, szKeyName, &dwNameChars);

  0003c	e5951018	 ldr         r1, [r5, #0x18]
  00040	e28d3018	 add         r3, sp, #0x18
  00044	e1a02007	 mov         r2, r7
  00048	e1a00005	 mov         r0, r5
  0004c	e58db004	 str         r11, [sp, #4]
  00050	e58da000	 str         r10, [sp]
  00054	eb000000	 bl          |?RegEnum@RegKey@@QAAJPAVRegKeyOrValue@@KPAGPAK@Z|
  00058	e1b04000	 movs        r4, r0

; 135  :         switch(dwStatus) {

  0005c	0a000009	 beq         |$LN6@RegReadDev|
  00060	e1540006	 cmp         r4, r6
  00064	0a000020	 beq         |$LN3@RegReadDev|

; 150  :                 }
; 151  :             }
; 152  :             break;
; 153  :         case ERROR_NO_MORE_ITEMS:
; 154  :             break;
; 155  :         default:
; 156  :             PMLOGMSG(ZONE_WARN || ZONE_REGISTRY, 
; 157  :                 (_T("%s: RegEnumKeyEx() returned %d\r\n"), pszFname, dwStatus));

  00068	e5993440	 ldr         r3, [r9, #0x440]
  0006c	e3130002	 tst         r3, #2
  00070	1a000001	 bne         |$LN16@RegReadDev|
  00074	e3130c02	 tst         r3, #2, 24
  00078	0a00001b	 beq         |$LN3@RegReadDev|
  0007c		 |$LN16@RegReadDev|
  0007c	e59f00ac	 ldr         r0, [pc, #0xAC]
  00080	e1a02004	 mov         r2, r4

; 158  :             break;

  00084	ea000011	 b           |$LN22@RegReadDev|
  00088		 |$LN6@RegReadDev|

; 136  :         case ERROR_SUCCESS:
; 137  :             // convert the key name to a class
; 138  :             if(ConvertStringToGuid(szKeyName, &gClass)) {

  00088	e28d1008	 add         r1, sp, #8
  0008c	e28d0018	 add         r0, sp, #0x18
  00090	eb000000	 bl          ConvertStringToGuid
  00094	e3500000	 cmp         r0, #0
  00098	0a000013	 beq         |$LN3@RegReadDev|

; 139  :                 // open the key
; 140  :                 RegKey * pChildKey =  pRegKey->RegFindKey(szKeyName);

  0009c	e28d1018	 add         r1, sp, #0x18
  000a0	e1a00005	 mov         r0, r5
  000a4	eb000000	 bl          |?RegFindKey@RegKey@@QAAPAV1@PBG@Z|
  000a8	e3500000	 cmp         r0, #0

; 141  :                 if(pChildKey == NULL ) {

  000ac	1a00000a	 bne         |$LN4@RegReadDev|

; 142  :                     dwStatus = ERROR_NO_MORE_ITEMS;
; 143  :                     PMLOGMSG(ZONE_WARN || ZONE_REGISTRY,
; 144  :                         (_T("%s: RegOpenKeyEx('%s') failed %d\r\n"),
; 145  :                         pszFname, szKeyName));

  000b0	e5993440	 ldr         r3, [r9, #0x440]
  000b4	e1a04006	 mov         r4, r6
  000b8	e3130002	 tst         r3, #2
  000bc	1a000001	 bne         |$LN14@RegReadDev|
  000c0	e3130c02	 tst         r3, #2, 24
  000c4	0a000008	 beq         |$LN3@RegReadDev|
  000c8		 |$LN14@RegReadDev|
  000c8	e59f005c	 ldr         r0, [pc, #0x5C]
  000cc	e28d2018	 add         r2, sp, #0x18
  000d0		 |$LN22@RegReadDev|
  000d0	e59f1050	 ldr         r1, [pc, #0x50]
  000d4	eb000000	 bl          CeLogMsg

; 146  :                 } else {

  000d8	ea000003	 b           |$LN3@RegReadDev|
  000dc		 |$LN4@RegReadDev|

; 147  :                     // add the class's restriction data to the list
; 148  :                     pdpr = RegReadClassDeviceRestrictions(pChildKey, 
; 149  :                         &gClass, pdpr);

  000dc	e1a02008	 mov         r2, r8
  000e0	e28d1008	 add         r1, sp, #8
  000e4	eb000000	 bl          |?RegReadClassDeviceRestrictions@@YAPAU_DevicePowerRestriction_tag@@PAVRegKey@@PBU_GUID@@PAU1@@Z|
  000e8	e1a08000	 mov         r8, r0
  000ec		 |$LN3@RegReadDev|

; 159  :         }
; 160  :         dwIndex++;

  000ec	e2877001	 add         r7, r7, #1

; 161  :     } while(dwStatus != ERROR_NO_MORE_ITEMS);

  000f0	e1540006	 cmp         r4, r6
  000f4	1affffd0	 bne         |$LL11@RegReadDev|

; 162  : 
; 163  :     // add values from the root key representing generic devices
; 164  :     pdpr = RegReadClassDeviceRestrictions(pRegKey, &idGenericPMDeviceClass, pdpr);

  000f8	e59f1024	 ldr         r1, [pc, #0x24]
  000fc	e1a02008	 mov         r2, r8
  00100	e1a00005	 mov         r0, r5
  00104	eb000000	 bl          |?RegReadClassDeviceRestrictions@@YAPAU_DevicePowerRestriction_tag@@PAVRegKey@@PBU_GUID@@PAU1@@Z|
  00108	e1a04000	 mov         r4, r0

; 165  : 
; 166  :     return pdpr;

  0010c	e59d0220	 ldr         r0, [sp, #0x220]
  00110	eb000000	 bl          __security_check_cookie

; 167  : }

  00114	e1a00004	 mov         r0, r4
  00118	e28ddf89	 add         sp, sp, #0x89, 30
  0011c	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00120	e12fff1e	 bx          lr
  00124		 |$LN26@RegReadDev|
  00124		 |$LN27@RegReadDev|
  00124	00000000	 DCD         |idGenericPMDeviceClass|
  00128		 |$LN28@RegReadDev|
  00128	00000000	 DCD         |??_C@_1DE@EONBJFMA@?$AAR?$AAe?$AAg?$AAR?$AAe?$AAa?$AAd?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAR?$AAe?$AAs?$AAt?$AAr?$AAi?$AAc?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?$AA@|
  0012c		 |$LN29@RegReadDev|
  0012c	00000000	 DCD         |??_C@_1EG@MIFCJAJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAO?$AAp?$AAe?$AAn?$AAK?$AAe?$AAy?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AA?$CF?$AAd@|
  00130		 |$LN30@RegReadDev|
  00130	00000000	 DCD         |??_C@_1EC@OKEADBNJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAE?$AAn?$AAu?$AAm?$AAK?$AAe?$AAy?$AAE?$AAx?$AA?$CI?$AA?$CJ?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAe?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6@|
  00134		 |$LN31@RegReadDev|
  00134	00000000	 DCD         |dpCurSettings|
  00138		 |$LN32@RegReadDev|
  00138	00000000	 DCD         |__security_cookie|
  0013c		 |$M34926|

			 ENDP  ; |?RegReadDeviceRestrictions@@YAPAU_DevicePowerRestriction_tag@@PAVRegKey@@@Z|, RegReadDeviceRestrictions

	EXPORT	|PmGetSystemPowerState|
	EXPORT	|??_C@_1CI@JMHLNJN@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@LGBNIMAH@?$AAP?$AAm?$AAG?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@HNEPFJJN@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAb?$AAu?$AAf?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAf?$AAl?$AAa?$AAg?$AAs@| [ DATA ] ; `string'
	IMPORT	|PmUnlock|
	IMPORT	|StringCchCopyW|
	IMPORT	|gpSystemPowerState|
	IMPORT	|PmLock|
	IMPORT	|__C_specific_handler|

  00000			 AREA	 |.pdata|, PDATA
|$T34968| DCD	|$LN25@PmGetSyste|
	DCD	0xc0003504

  00000			 AREA	 |.pdata|, PDATA
|$T34970| DCD	|$LN11@PmGetSyste|
	DCD	0x40000a02

  00000			 AREA	 |.xdata|, DATA
|$T34966| DCD	0x1
	DCD	|$LN15@PmGetSyste|
	DCD	|$LN16@PmGetSyste|
	DCD	|$LN11@PmGetSyste|
	DCD	|$LN12@PmGetSyste|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@JMHLNJN@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@LGBNIMAH@?$AAP?$AAm?$AAG?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@| DCB "P"
	DCB	0x0, "m", 0x0, "G", 0x0, "e", 0x0, "t", 0x0, "S", 0x0, "y"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m", 0x0, "P", 0x0, "o"
	DCB	0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@HNEPFJJN@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAb?$AAu?$AAf?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAf?$AAl?$AAa?$AAg?$AAs@| DCB "+"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "b", 0x0, "u"
	DCB	0x0, "f", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ",", 0x0, " ", 0x0, "s", 0x0, "i"
	DCB	0x0, "z", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "p", 0x0, "f", 0x0, "l", 0x0, "a", 0x0, "g"
	DCB	0x0, "s", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T34966|

  00008		 |PmGetSystemPowerState| PROC

; 307  : {

  00008		 |$LN25@PmGetSyste|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d5bf0	 stmdb       sp!, {r4 - r9, r11, r12, lr}
  00010	e28db024	 add         r11, sp, #0x24
  00014	e24dd00c	 sub         sp, sp, #0xC
  00018		 |$LN23@PmGetSyste|
  00018	e1a06002	 mov         r6, r2
  0001c	e1a04001	 mov         r4, r1
  00020	e1a07000	 mov         r7, r0

; 308  :     DWORD dwStatus = ERROR_INVALID_PARAMETER;
; 309  : 
; 310  : #ifndef SHIP_BUILD
; 311  :     SETFNAME(_T("PmGetSystemPowerState"));
; 312  : #endif
; 313  : 
; 314  :     PMLOGMSG(ZONE_API, (_T("+%s: buf 0x%08x, size %d, pflags 0x%08x\r\n"),
; 315  :         pszFname, pBuffer, dwBufChars, pdwFlags));

  00024	e59f50cc	 ldr         r5, [pc, #0xCC]
  00028	e5953440	 ldr         r3, [r5, #0x440]
  0002c	e3130b02	 tst         r3, #2, 22
  00030	159f00c8	 ldrne       r0, [pc, #0xC8]
  00034	11a03004	 movne       r3, r4
  00038	159f10b0	 ldrne       r1, [pc, #0xB0]
  0003c	11a02007	 movne       r2, r7
  00040	158d6000	 strne       r6, [sp]
  00044	1b000000	 blne        CeLogMsg

; 316  : 
; 317  :     PMLOCK();

  00048	eb000000	 bl          PmLock
  0004c		 |$LN15@PmGetSyste|

; 318  : 
; 319  :     __try {
; 320  :         if(dwBufChars < (_tcslen(gpSystemPowerState->pszName) + 1)) {

  0004c	e59f80a8	 ldr         r8, [pc, #0xA8]
  00050	e5983000	 ldr         r3, [r8]
  00054	e5939000	 ldr         r9, [r3]
  00058	e1a00009	 mov         r0, r9
  0005c	eb000000	 bl          wcslen
  00060	e2803001	 add         r3, r0, #1
  00064	e1540003	 cmp         r4, r3

; 321  :             dwStatus = ERROR_INSUFFICIENT_BUFFER;

  00068	33a0407a	 movcc       r4, #0x7A

; 318  : 
; 319  :     __try {
; 320  :         if(dwBufChars < (_tcslen(gpSystemPowerState->pszName) + 1)) {

  0006c	3a000007	 bcc         |$LN22@PmGetSyste|

; 322  :         } else {
; 323  :             StringCchCopy(pBuffer, dwBufChars, gpSystemPowerState->pszName);

  00070	e1a02009	 mov         r2, r9
  00074	e1a01004	 mov         r1, r4
  00078	e1a00007	 mov         r0, r7
  0007c	eb000000	 bl          StringCchCopyW

; 324  :             *pdwFlags = gpSystemPowerState->dwFlags;

  00080	e5983000	 ldr         r3, [r8]
  00084	e5933008	 ldr         r3, [r3, #8]
  00088	e5863000	 str         r3, [r6]

; 325  :             dwStatus = ERROR_SUCCESS;

  0008c	e3a04000	 mov         r4, #0
  00090		 |$LN22@PmGetSyste|
  00090	e50b402c	 str         r4, [r11, #-0x2C]
  00094		 |$LN16@PmGetSyste|

; 326  :         }
; 327  :     }

  00094	ea000002	 b           |$LN17@PmGetSyste|
  00098		 |$LN12@PmGetSyste|

; 329  :         dwStatus = ERROR_INVALID_PARAMETER;

  00098	e3a04057	 mov         r4, #0x57
  0009c	e50b402c	 str         r4, [r11, #-0x2C]
  000a0	e59f5050	 ldr         r5, [pc, #0x50]
  000a4		 |$LN17@PmGetSyste|

; 330  :     }
; 331  : 
; 332  :     PMUNLOCK();

  000a4	eb000000	 bl          PmUnlock

; 333  : 
; 334  :     PMLOGMSG(ZONE_API, (_T("-%s: returning %d\r\n"), pszFname, dwStatus));

  000a8	e5953440	 ldr         r3, [r5, #0x440]
  000ac	e3130b02	 tst         r3, #2, 22
  000b0	0a000005	 beq         |$LN4@PmGetSyste|
  000b4	e59f0038	 ldr         r0, [pc, #0x38]
  000b8	e1a02004	 mov         r2, r4
  000bc	e59f102c	 ldr         r1, [pc, #0x2C]
  000c0	eb000000	 bl          CeLogMsg

; 335  : 
; 336  :     return dwStatus;

  000c4	ea000000	 b           |$LN4@PmGetSyste|
  000c8		 |$LN21@PmGetSyste|
  000c8	e51b4028	 ldr         r4, [r11, #-0x28]
  000cc		 |$LN4@PmGetSyste|

; 337  : }

  000cc	e1a00004	 mov         r0, r4
  000d0	e24bd024	 sub         sp, r11, #0x24
  000d4	e89d6bf0	 ldmia       sp, {r4 - r9, r11, sp, lr}
  000d8	e12fff1e	 bx          lr

			 ENDP  ; |PmGetSystemPowerState|

  000dc		 |$LN11@PmGetSyste|
  000dc		 |$LN24@PmGetSyste|

; 328  :     __except(EXCEPTION_EXECUTE_HANDLER) {

  000dc	e52de004	 str         lr, [sp, #-4]!
  000e0	e24dd004	 sub         sp, sp, #4
  000e4		 |$LN14@PmGetSyste|
  000e4		 |$LN27@PmGetSyste|
  000e4	e3a00001	 mov         r0, #1
  000e8		 |$LN13@PmGetSyste|
  000e8	e28dd004	 add         sp, sp, #4
  000ec	e49df004	 ldr         pc, [sp], #4
  000f0		 |$LN29@PmGetSyste|
  000f0		 |$LN30@PmGetSyste|
  000f0	00000000	 DCD         |??_C@_1CM@LGBNIMAH@?$AAP?$AAm?$AAG?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
  000f4		 |$LN31@PmGetSyste|
  000f4	00000000	 DCD         |??_C@_1CI@JMHLNJN@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  000f8		 |$LN32@PmGetSyste|
  000f8	00000000	 DCD         |dpCurSettings|
  000fc		 |$LN33@PmGetSyste|
  000fc	00000000	 DCD         |gpSystemPowerState|
  00100		 |$LN34@PmGetSyste|
  00100	00000000	 DCD         |??_C@_1FE@HNEPFJJN@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAb?$AAu?$AAf?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAs?$AAi?$AAz?$AAe?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAp?$AAf?$AAl?$AAa?$AAg?$AAs@|
  00104		 |$LN28@PmGetSyste|
  00104		 |$LN26@PmGetSyste|
	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|PmSetSystemPowerState_I|
	EXPORT	|??_C@_1DK@LJCCBMHG@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@GMKIAPMN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAp?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@NEOCGAAG@?$AAP?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA_?$AAI?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@BFGAANL@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt?$AAi?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@DPFEOIGE@?$AA?$DM?$AAN?$AAU?$AAL?$AAL?$AA?$DO?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|PmLeaveUpdate|
	IMPORT	|PlatformSetSystemPowerState|
	IMPORT	|PlatformMapPowerStateHint|
	IMPORT	|PmEnterUpdate|
	IMPORT	|__GSHandlerCheck_SEH|

  00000			 AREA	 |.pdata|, PDATA
|$T35021| DCD	|$LN32@PmSetSyste|
	DCD	0xc0004e05

  00000			 AREA	 |.pdata|, PDATA
|$T35023| DCD	|$LN18@PmSetSyste|
	DCD	0x40000c02

  00000			 AREA	 |.xdata|, DATA
|$T35019| DCD	0x1
	DCD	|$LN22@PmSetSyste|
	DCD	|$LN23@PmSetSyste|
	DCD	|$LN18@PmSetSyste|
	DCD	|$LN19@PmSetSyste|
	DCD	0xffffffc8

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@LJCCBMHG@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "d", 0x0, "w", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@GMKIAPMN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAp?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "c"
	DCB	0x0, "e", 0x0, "p", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "p", 0x0, "y", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, " ", 0x0, "n", 0x0, "a", 0x0, "m"
	DCB	0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@NEOCGAAG@?$AAP?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA_?$AAI?$AA?$AA@| DCB "P"
	DCB	0x0, "m", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "S", 0x0, "y"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m", 0x0, "P", 0x0, "o"
	DCB	0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, "_", 0x0, "I", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@BFGAANL@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt?$AAi?$AAo@| DCB "+"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "n", 0x0, "a"
	DCB	0x0, "m", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, ","
	DCB	0x0, " ", 0x0, "h", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, ",", 0x0, " ", 0x0, "o", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "s", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ",", 0x0, " "
	DCB	0x0, "f", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "n", 0x0, "a", 0x0, "l", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@DPFEOIGE@?$AA?$DM?$AAN?$AAU?$AAL?$AAL?$AA?$DO?$AA?$AA@| DCB "<", 0x0
	DCB	"N", 0x0, "U", 0x0, "L", 0x0, "L", 0x0, ">", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck_SEH|
  00004	00000000	 DCD         |$T35019|

  00008		 |PmSetSystemPowerState_I| PROC

; 350  : {

  00008		 |$LN32@PmSetSyste|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d000f	 stmdb       sp!, {r0 - r3}
  00010	e92d5bf0	 stmdb       sp!, {r4 - r9, r11, r12, lr}
  00014	e28db024	 add         r11, sp, #0x24
  00018	e24ddf86	 sub         sp, sp, #0x86, 30
  0001c		 |$LN30@PmSetSyste|
  0001c	e1a08003	 mov         r8, r3
  00020	e58b800c	 str         r8, [r11, #0xC]
  00024	e1a07002	 mov         r7, r2
  00028	e58b7008	 str         r7, [r11, #8]
  0002c	e1a09001	 mov         r9, r1
  00030	e1a05000	 mov         r5, r0
  00034	e59fe130	 ldr         lr, [pc, #0x130]
  00038	e59ee000	 ldr         lr, [lr]
  0003c	e50be028	 str         lr, [r11, #-0x28]

; 351  :     TCHAR szStateName[MAX_PATH];
; 352  :     DWORD dwStatus = ERROR_SUCCESS;
; 353  : 
; 354  : #ifndef SHIP_BUILD
; 355  :     SETFNAME(_T("PmSetSystemPowerState_I"));
; 356  : #endif
; 357  : 
; 358  :     PMLOGMSG(ZONE_API, (_T("+%s: name %s, hint 0x%08x, options 0x%08x, fInternal %d\r\n"),
; 359  :         pszFname, pwsState != NULL ? pwsState : _T("<NULL>"), dwStateHint, dwOptions,
; 360  :         fInternal));

  00040	e59f6118	 ldr         r6, [pc, #0x118]
  00044	e3a04000	 mov         r4, #0
  00048	e596e440	 ldr         lr, [r6, #0x440]
  0004c	e31e0b02	 tst         lr, #2, 22
  00050	0a000008	 beq         |$LN27@PmSetSyste|
  00054	e3550000	 cmp         r5, #0
  00058	11a02005	 movne       r2, r5
  0005c	059f2104	 ldreq       r2, [pc, #0x104]
  00060	e59f00fc	 ldr         r0, [pc, #0xFC]
  00064	e1a03009	 mov         r3, r9
  00068	e59f10e4	 ldr         r1, [pc, #0xE4]
  0006c	e58d8004	 str         r8, [sp, #4]
  00070	e58d7000	 str         r7, [sp]
  00074	eb000000	 bl          CeLogMsg
  00078		 |$LN27@PmSetSyste|

; 361  : 
; 362  :     PMENTERUPDATE();

  00078	eb000000	 bl          PmEnterUpdate

; 363  : 
; 364  :     // if the user passes a null state name, use the hints flag to try
; 365  :     // to find a match.
; 366  :     if(pwsState != NULL) {

  0007c	e3550000	 cmp         r5, #0
  00080	0a000013	 beq         |$LN6@PmSetSyste|
  00084		 |$LN22@PmSetSyste|

; 367  :         // copy the parameter but watch out for bad pointers
; 368  :         __try {

  00084	e3a03c01	 mov         r3, #1, 24

; 369  :             _tcsncpy(szStateName, pwsState, dim(szStateName) - 1);

  00088	e3832003	 orr         r2, r3, #3
  0008c	e1a01005	 mov         r1, r5
  00090	e24b0e23	 sub         r0, r11, #0x23, 28
  00094	eb000000	 bl          wcsncpy

; 370  :             szStateName[dim(szStateName) - 1] = 0;

  00098	e3a03000	 mov         r3, #0
  0009c	e14b32ba	 strh        r3, [r11, #-0x2A]
  000a0		 |$LN23@PmSetSyste|

; 371  :         }

  000a0	ea000010	 b           |$LN4@PmSetSyste|
  000a4		 |$LN19@PmSetSyste|

; 373  :             PMLOGMSG(ZONE_WARN, (_T("%s: exception copying state name\r\n"), 
; 374  :                 pszFname));

  000a4	e59f60b4	 ldr         r6, [pc, #0xB4]
  000a8	e5963440	 ldr         r3, [r6, #0x440]
  000ac	e3130002	 tst         r3, #2
  000b0	159f00a4	 ldrne       r0, [pc, #0xA4]
  000b4	159f1098	 ldrne       r1, [pc, #0x98]
  000b8	1b000000	 blne        CeLogMsg

; 375  :             dwStatus = ERROR_INVALID_PARAMETER;

  000bc	e3a04057	 mov         r4, #0x57
  000c0	e59b800c	 ldr         r8, [r11, #0xC]
  000c4	e59b7008	 ldr         r7, [r11, #8]
  000c8	ea000006	 b           |$LN4@PmSetSyste|
  000cc		 |$LN29@PmSetSyste|

; 397  : 
; 398  :     return dwStatus;

  000cc	e51b4234	 ldr         r4, [r11, #-0x234]
  000d0	ea000016	 b           |$LN7@PmSetSyste|
  000d4		 |$LN6@PmSetSyste|

; 376  :         }
; 377  :     } else {
; 378  :         // try to match the hint flag to a system state
; 379  :         dwStatus = PlatformMapPowerStateHint(dwStateHint, szStateName, dim(szStateName));

  000d4	e3a02f41	 mov         r2, #0x41, 30
  000d8	e24b1e23	 sub         r1, r11, #0x23, 28
  000dc	e1a00009	 mov         r0, r9
  000e0	eb000000	 bl          PlatformMapPowerStateHint
  000e4	e1a04000	 mov         r4, r0
  000e8		 |$LN4@PmSetSyste|

; 380  :     }
; 381  :     
; 382  :     // go ahead and do the update?
; 383  :     if(dwStatus == ERROR_SUCCESS) {

  000e8	e3540000	 cmp         r4, #0
  000ec	1a000006	 bne         |$LN3@PmSetSyste|

; 384  :         BOOL fForce;
; 385  :         
; 386  :         if((dwOptions & POWER_FORCE) != 0) {

  000f0	e3170a01	 tst         r7, #1, 20

; 387  :             fForce = TRUE;

  000f4	13a01001	 movne       r1, #1

; 388  :         } else {
; 389  :             fForce = FALSE;

  000f8	03a01000	 moveq       r1, #0

; 390  :         }
; 391  :         dwStatus = PlatformSetSystemPowerState(szStateName, fForce, fInternal);

  000fc	e1a02008	 mov         r2, r8
  00100	e24b0e23	 sub         r0, r11, #0x23, 28
  00104	eb000000	 bl          PlatformSetSystemPowerState
  00108	e1a04000	 mov         r4, r0
  0010c		 |$LN3@PmSetSyste|

; 392  :     }
; 393  : 
; 394  :     PMLEAVEUPDATE();

  0010c	eb000000	 bl          PmLeaveUpdate

; 395  : 
; 396  :     PMLOGMSG(ZONE_API, (_T("-%s: returning dwStatus %d\r\n"), pszFname, dwStatus));

  00110	e5963440	 ldr         r3, [r6, #0x440]
  00114	e3130b02	 tst         r3, #2, 22
  00118	159f0038	 ldrne       r0, [pc, #0x38]
  0011c	11a02004	 movne       r2, r4
  00120	159f102c	 ldrne       r1, [pc, #0x2C]
  00124	1b000000	 blne        CeLogMsg

; 397  : 
; 398  :     return dwStatus;

  00128	e51b0028	 ldr         r0, [r11, #-0x28]
  0012c	eb000000	 bl          __security_check_cookie
  00130		 |$LN7@PmSetSyste|

; 399  : }

  00130	e1a00004	 mov         r0, r4
  00134	e24bd024	 sub         sp, r11, #0x24
  00138	e89d6bf0	 ldmia       sp, {r4 - r9, r11, sp, lr}
  0013c	e12fff1e	 bx          lr

			 ENDP  ; |PmSetSystemPowerState_I|

  00140		 |$LN18@PmSetSyste|
  00140		 |$LN31@PmSetSyste|

; 372  :         __except(EXCEPTION_EXECUTE_HANDLER) {

  00140	e52de004	 str         lr, [sp, #-4]!
  00144	e24dd008	 sub         sp, sp, #8
  00148		 |$LN21@PmSetSyste|
  00148		 |$LN34@PmSetSyste|
  00148	e3a00001	 mov         r0, #1
  0014c		 |$LN20@PmSetSyste|
  0014c	e28dd008	 add         sp, sp, #8
  00150	e49df004	 ldr         pc, [sp], #4
  00154		 |$LN36@PmSetSyste|
  00154		 |$LN37@PmSetSyste|
  00154	00000000	 DCD         |??_C@_1DA@NEOCGAAG@?$AAP?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA_?$AAI?$AA?$AA@|
  00158		 |$LN38@PmSetSyste|
  00158	00000000	 DCD         |??_C@_1DK@LJCCBMHG@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0015c		 |$LN39@PmSetSyste|
  0015c	00000000	 DCD         |??_C@_1EG@GMKIAPMN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAp?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe@|
  00160		 |$LN40@PmSetSyste|
  00160	00000000	 DCD         |dpCurSettings|
  00164		 |$LN41@PmSetSyste|
  00164	00000000	 DCD         |??_C@_1HE@BFGAANL@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt?$AAi?$AAo@|
  00168		 |$LN42@PmSetSyste|
  00168	00000000	 DCD         |??_C@_1O@DPFEOIGE@?$AA?$DM?$AAN?$AAU?$AAL?$AAL?$AA?$DO?$AA?$AA@|
  0016c		 |$LN43@PmSetSyste|
  0016c	00000000	 DCD         |__security_cookie|
  00170		 |$LN35@PmSetSyste|
  00170		 |$LN33@PmSetSyste|
	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|PmSetSystemPowerState|
	EXPORT	|??_C@_1HC@NNNGJJJM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@IIPOICC@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt?$AAi?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@JCHLMMCG@?$AAP?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|PlatformSendSystemPowerState|
	IMPORT	|towlower|

  00000			 AREA	 |.pdata|, PDATA
|$T35078| DCD	|$LN35@PmSetSyste@2|
	DCD	0xc0006805

  00000			 AREA	 |.pdata|, PDATA
|$T35080| DCD	|$LN21@PmSetSyste@2|
	DCD	0x40000d02

  00000			 AREA	 |.xdata|, DATA
|$T35076| DCD	0x1
	DCD	|$LN25@PmSetSyste@2|
	DCD	|$LN26@PmSetSyste@2|
	DCD	|$LN21@PmSetSyste@2|
	DCD	|$LN22@PmSetSyste@2|
	DCD	0xffffffc8

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@NNNGJJJM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "y", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "m", 0x0, " ", 0x0, "p", 0x0, "o"
	DCB	0x0, "w", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "s", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "n", 0x0, "a"
	DCB	0x0, "m", 0x0, "e", 0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s"
	DCB	0x0, "'", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "c", 0x0, "e"
	DCB	0x0, "e", 0x0, "d", 0x0, "s", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, " ", 0x0, "c", 0x0, "h", 0x0, "a", 0x0, "r", 0x0, "a"
	DCB	0x0, "c", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@IIPOICC@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt?$AAi?$AAo@| DCB "+"
	DCB	0x0, "%", 0x0, "s", 0x0, ":", 0x0, " ", 0x0, "n", 0x0, "a"
	DCB	0x0, "m", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, ","
	DCB	0x0, " ", 0x0, "h", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x"
	DCB	0x0, ",", 0x0, " ", 0x0, "o", 0x0, "p", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "s", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@JCHLMMCG@?$AAP?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@| DCB "P"
	DCB	0x0, "m", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "S", 0x0, "y"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m", 0x0, "P", 0x0, "o"
	DCB	0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck_SEH|
  00004	00000000	 DCD         |$T35076|

  00008		 |PmSetSystemPowerState| PROC

; 408  : {

  00008		 |$LN35@PmSetSyste@2|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d0007	 stmdb       sp!, {r0 - r2}
  00010	e92d5ff0	 stmdb       sp!, {r4 - r12, lr}
  00014	e28db028	 add         r11, sp, #0x28
  00018	e24ddf89	 sub         sp, sp, #0x89, 30
  0001c		 |$LN33@PmSetSyste@2|
  0001c	e1a09002	 mov         r9, r2
  00020	e50b923c	 str         r9, [r11, #-0x23C]
  00024	e58b9008	 str         r9, [r11, #8]
  00028	e1a0a001	 mov         r10, r1
  0002c	e50ba244	 str         r10, [r11, #-0x244]
  00030	e58ba004	 str         r10, [r11, #4]
  00034	e1a07000	 mov         r7, r0
  00038	e59f3198	 ldr         r3, [pc, #0x198]
  0003c	e5933000	 ldr         r3, [r3]
  00040	e50b302c	 str         r3, [r11, #-0x2C]

; 409  :     TCHAR szState[MAX_PATH];
; 410  :     LPTSTR pszStateName = NULL;
; 411  :     DWORD dwStatus = ERROR_SUCCESS;
; 412  : 
; 413  : #ifndef SHIP_BUILD
; 414  :     SETFNAME(_T("PmSetSystemPowerState"));
; 415  : #endif
; 416  : 
; 417  :     PMLOGMSG(ZONE_API, (_T("+%s: name %s, hint 0x%08x, options 0x%08x\r\n"),
; 418  :         pszFname, pwsState != NULL ? pwsState : _T("<NULL>"), dwStateHint, dwOptions));

  00044	e59f8178	 ldr         r8, [pc, #0x178]
  00048	e59f5184	 ldr         r5, [pc, #0x184]
  0004c	e3a06000	 mov         r6, #0
  00050	e5983440	 ldr         r3, [r8, #0x440]
  00054	e3130b02	 tst         r3, #2, 22
  00058	e50b6248	 str         r6, [r11, #-0x248]
  0005c	e3a04000	 mov         r4, #0
  00060	e50b5240	 str         r5, [r11, #-0x240]
  00064	0a000007	 beq         |$LN12@PmSetSyste@2|
  00068	e3570000	 cmp         r7, #0
  0006c	11a02007	 movne       r2, r7
  00070	059f2158	 ldreq       r2, [pc, #0x158]
  00074	e59f0150	 ldr         r0, [pc, #0x150]
  00078	e1a0300a	 mov         r3, r10
  0007c	e1a01005	 mov         r1, r5
  00080	e58d9000	 str         r9, [sp]
  00084	eb000000	 bl          CeLogMsg
  00088		 |$LN12@PmSetSyste@2|

; 419  : 
; 420  :     // if the user passes a null state name, use the hints flag to try
; 421  :     // to find a match.
; 422  :     if(pwsState != NULL) {

  00088	e3570000	 cmp         r7, #0
  0008c	0a000032	 beq         |$LN27@PmSetSyste@2|
  00090		 |$LN25@PmSetSyste@2|

; 423  :         // copy the parameter but watch out for bad pointers
; 424  :         __try {
; 425  :             DWORD dwIndex;
; 426  :             for(dwIndex = 0; pwsState[dwIndex] != 0 && dwIndex < (dim(szState) - 1); dwIndex++) {

  00090	e3a0e000	 mov         lr, #0
  00094	e1a0600e	 mov         r6, lr
  00098	e3a03c01	 mov         r3, #1, 24
  0009c	e383a003	 orr         r10, r3, #3
  000a0		 |$LL5@PmSetSyste@2|
  000a0	e1a09086	 mov         r9, r6, lsl #1
  000a4	e19900b7	 ldrh        r0, [r9, +r7]
  000a8	e3500000	 cmp         r0, #0
  000ac	0a000006	 beq         |$LN3@PmSetSyste@2|
  000b0	e156000a	 cmp         r6, r10
  000b4	2a000004	 bcs         |$LN3@PmSetSyste@2|

; 427  :                 szState[dwIndex] = _totlower(pwsState[dwIndex]);

  000b8	eb000000	 bl          towlower
  000bc	e24b3f8d	 sub         r3, r11, #0x8D, 30
  000c0	e18900b3	 strh        r0, [r9, +r3]

; 423  :         // copy the parameter but watch out for bad pointers
; 424  :         __try {
; 425  :             DWORD dwIndex;
; 426  :             for(dwIndex = 0; pwsState[dwIndex] != 0 && dwIndex < (dim(szState) - 1); dwIndex++) {

  000c4	e2866001	 add         r6, r6, #1
  000c8	eafffff4	 b           |$LL5@PmSetSyste@2|
  000cc		 |$LN3@PmSetSyste@2|

; 428  :             }
; 429  :             szState[dwIndex] = 0;

  000cc	e1a01086	 mov         r1, r6, lsl #1
  000d0	e24b2f8d	 sub         r2, r11, #0x8D, 30
  000d4	e3a03000	 mov         r3, #0
  000d8	e18130b2	 strh        r3, [r1, +r2]

; 430  :             pszStateName = szState;

  000dc	e24b6f8d	 sub         r6, r11, #0x8D, 30
  000e0	e50b6248	 str         r6, [r11, #-0x248]

; 431  : 
; 432  :             // don't pass on truncated system power state names
; 433  :             if(pwsState[dwIndex] != 0) {

  000e4	e19120b7	 ldrh        r2, [r1, +r7]
  000e8	e3520000	 cmp         r2, #0
  000ec	0a000008	 beq         |$LN26@PmSetSyste@2|
  000f0	e5982440	 ldr         r2, [r8, #0x440]

; 434  :                 PMLOGMSG(ZONE_WARN, 
; 435  :                     (_T("%s: system power state name '%s' exceeds %d characters\r\n"), 
; 436  :                     pszFname, pwsState, dim(szState) - 1));

  000f4	e3120002	 tst         r2, #2
  000f8	159f00c8	 ldrne       r0, [pc, #0xC8]
  000fc	11a0300a	 movne       r3, r10
  00100	11a02007	 movne       r2, r7
  00104	11a01005	 movne       r1, r5
  00108	1b000000	 blne        CeLogMsg

; 437  :                 dwStatus = ERROR_INVALID_PARAMETER;

  0010c	e3a04057	 mov         r4, #0x57
  00110	e50b4238	 str         r4, [r11, #-0x238]
  00114		 |$LN26@PmSetSyste@2|

; 438  :             }
; 439  :         }

  00114	e51b923c	 ldr         r9, [r11, #-0x23C]
  00118	e51ba244	 ldr         r10, [r11, #-0x244]
  0011c	ea00000e	 b           |$LN27@PmSetSyste@2|
  00120		 |$LN22@PmSetSyste@2|

; 441  :             PMLOGMSG(ZONE_WARN, (_T("%s: exception copying state name\r\n"), 
; 442  :                 pszFname));

  00120	e59f809c	 ldr         r8, [pc, #0x9C]
  00124	e5983440	 ldr         r3, [r8, #0x440]
  00128	e3130002	 tst         r3, #2
  0012c	e51b5240	 ldr         r5, [r11, #-0x240]
  00130	159f0088	 ldrne       r0, [pc, #0x88]
  00134	11a01005	 movne       r1, r5
  00138	1b000000	 blne        CeLogMsg

; 443  :             dwStatus = ERROR_INVALID_PARAMETER;

  0013c	e3a04057	 mov         r4, #0x57
  00140	e50b4238	 str         r4, [r11, #-0x238]
  00144	e59b9008	 ldr         r9, [r11, #8]
  00148	e59ba004	 ldr         r10, [r11, #4]
  0014c	e51b6248	 ldr         r6, [r11, #-0x248]
  00150	ea000001	 b           |$LN27@PmSetSyste@2|
  00154		 |$LN32@PmSetSyste@2|

; 453  : 
; 454  :     return dwStatus;

  00154	e51b4244	 ldr         r4, [r11, #-0x244]
  00158	ea00000e	 b           |$LN8@PmSetSyste@2|
  0015c		 |$LN27@PmSetSyste@2|

; 444  :         }
; 445  :     }
; 446  : 
; 447  :     // carry out the power state change
; 448  :     if(dwStatus == ERROR_SUCCESS) {

  0015c	e3540000	 cmp         r4, #0
  00160	1a000004	 bne         |$LN1@PmSetSyste@2|

; 449  :         dwStatus = PlatformSendSystemPowerState(pszStateName, dwStateHint, dwOptions) ;

  00164	e1a02009	 mov         r2, r9
  00168	e1a0100a	 mov         r1, r10
  0016c	e1a00006	 mov         r0, r6
  00170	eb000000	 bl          PlatformSendSystemPowerState
  00174	e1a04000	 mov         r4, r0
  00178		 |$LN1@PmSetSyste@2|
  00178	e5983440	 ldr         r3, [r8, #0x440]

; 450  :     }
; 451  : 
; 452  :     PMLOGMSG(ZONE_API, (_T("-%s: returning dwStatus %d\r\n"), pszFname, dwStatus));

  0017c	e3130b02	 tst         r3, #2, 22
  00180	159f0034	 ldrne       r0, [pc, #0x34]
  00184	11a02004	 movne       r2, r4
  00188	11a01005	 movne       r1, r5
  0018c	1b000000	 blne        CeLogMsg

; 453  : 
; 454  :     return dwStatus;

  00190	e51b002c	 ldr         r0, [r11, #-0x2C]
  00194	eb000000	 bl          __security_check_cookie
  00198		 |$LN8@PmSetSyste@2|

; 455  : }

  00198	e1a00004	 mov         r0, r4
  0019c	e24bd028	 sub         sp, r11, #0x28
  001a0	e89d6ff0	 ldmia       sp, {r4 - r11, sp, lr}
  001a4	e12fff1e	 bx          lr

			 ENDP  ; |PmSetSystemPowerState|

  001a8		 |$LN21@PmSetSyste@2|
  001a8		 |$LN34@PmSetSyste@2|

; 440  :         __except(EXCEPTION_EXECUTE_HANDLER) {

  001a8	e52de004	 str         lr, [sp, #-4]!
  001ac	e24dd004	 sub         sp, sp, #4
  001b0		 |$LN24@PmSetSyste@2|
  001b0		 |$LN37@PmSetSyste@2|
  001b0	e3a00001	 mov         r0, #1
  001b4		 |$LN23@PmSetSyste@2|
  001b4	e28dd004	 add         sp, sp, #4
  001b8	e49df004	 ldr         pc, [sp], #4
  001bc		 |$LN39@PmSetSyste@2|
  001bc		 |$LN40@PmSetSyste@2|
  001bc	00000000	 DCD         |??_C@_1DK@LJCCBMHG@?$AA?9?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAd?$AAw?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  001c0		 |$LN41@PmSetSyste@2|
  001c0	00000000	 DCD         |??_C@_1EG@GMKIAPMN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAp?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe@|
  001c4		 |$LN42@PmSetSyste@2|
  001c4	00000000	 DCD         |dpCurSettings|
  001c8		 |$LN43@PmSetSyste@2|
  001c8	00000000	 DCD         |??_C@_1HC@NNNGJJJM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8@|
  001cc		 |$LN44@PmSetSyste@2|
  001cc	00000000	 DCD         |??_C@_1FI@IIPOICC@?$AA?$CL?$AA?$CF?$AAs?$AA?3?$AA?5?$AAn?$AAa?$AAm?$AAe?$AA?5?$AA?$CF?$AAs?$AA?0?$AA?5?$AAh?$AAi?$AAn?$AAt?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAo?$AAp?$AAt?$AAi?$AAo@|
  001d0		 |$LN45@PmSetSyste@2|
  001d0	00000000	 DCD         |??_C@_1O@DPFEOIGE@?$AA?$DM?$AAN?$AAU?$AAL?$AAL?$AA?$DO?$AA?$AA@|
  001d4		 |$LN46@PmSetSyste@2|
  001d4	00000000	 DCD         |??_C@_1CM@JCHLMMCG@?$AAP?$AAm?$AAS?$AAe?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
  001d8		 |$LN47@PmSetSyste@2|
  001d8	00000000	 DCD         |__security_cookie|
  001dc		 |$LN38@PmSetSyste@2|
  001dc		 |$LN36@PmSetSyste@2|
	EXPORT	|??0CMiniThread@@QAA@KH@Z|		; CMiniThread::CMiniThread
	EXPORT	|??_7CMiniThread@@6B@| [ DATA ]		; CMiniThread::`vftable'
	IMPORT	|CreateThread|
	IMPORT	|_purecall|
; File c:\wince600\public\common\oak\inc\cmthread.h

  00000			 AREA	 |.pdata|, PDATA
|$T35107| DCD	|$LN7@CMiniThrea|
	DCD	0x40001b02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CMiniThread@@6B@| DCD |_purecall|			; CMiniThread::`vftable'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CMiniThread@@QAA@KH@Z| PROC	; CMiniThread::CMiniThread

; 29   :     CMiniThread( DWORD dwStackSize = 0, BOOL bSuspended = FALSE )

  00000		 |$LN7@CMiniThrea|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M35104|
  00008	e1b06002	 movs        r6, r2
  0000c	e1a05000	 mov         r5, r0
  00010	e59f3050	 ldr         r3, [pc, #0x50]

; 30   :     {
; 31   :         m_bTerminated = FALSE;

  00014	e3a02000	 mov         r2, #0

; 32   :         m_dwExitCode = ( DWORD ) - 1;

  00018	e5852004	 str         r2, [r5, #4]

; 33   :         m_hThreadHandle = ::CreateThread( NULL,
; 34   :                                           dwStackSize,
; 35   :                                           CMiniThread::ThreadProc,
; 36   :                                           ( LPVOID )this,
; 37   :                                           bSuspended ? CREATE_SUSPENDED : 0,
; 38   :                                           &m_dwThreadId );

  0001c	e59f2040	 ldr         r2, [pc, #0x40]
  00020	e3e00000	 mvn         r0, #0
  00024	13a04004	 movne       r4, #4
  00028	e5853000	 str         r3, [r5]
  0002c	e5850014	 str         r0, [r5, #0x14]
  00030	03a04000	 moveq       r4, #0
  00034	e285e00c	 add         lr, r5, #0xC
  00038	e1a03005	 mov         r3, r5
  0003c	e3a00000	 mov         r0, #0
  00040	e58de004	 str         lr, [sp, #4]
  00044	e58d4000	 str         r4, [sp]
  00048	eb000000	 bl          CreateThread
  0004c	e5850008	 str         r0, [r5, #8]

; 39   :         m_bSuspendFlag = bSuspended;
; 40   :     };

  00050	e1a00005	 mov         r0, r5
  00054	e5856010	 str         r6, [r5, #0x10]
  00058	e28dd008	 add         sp, sp, #8
  0005c	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$LN8@CMiniThrea|
  00064		 |$LN9@CMiniThrea|
  00064	00000000	 DCD         |?ThreadProc@CMiniThread@@CAKPAX@Z|
  00068		 |$LN10@CMiniThrea|
  00068	00000000	 DCD         |??_7CMiniThread@@6B@|
  0006c		 |$M35105|

			 ENDP  ; |??0CMiniThread@@QAA@KH@Z|, CMiniThread::CMiniThread

	EXPORT	|??1CMiniThread@@QAA@XZ|		; CMiniThread::~CMiniThread

  00000			 AREA	 |.pdata|, PDATA
|$T35118| DCD	|$LN5@CMiniThrea@2|
	DCD	0x40000801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CMiniThread@@QAA@XZ| PROC		; CMiniThread::~CMiniThread

; 44   :     {

  00000		 |$LN5@CMiniThrea@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35115|
  00004	e1a02000	 mov         r2, r0
  00008	e59f300c	 ldr         r3, [pc, #0xC]

; 45   :         ForceTerminated();

  0000c	e5823000	 str         r3, [r2]
  00010	eb000000	 bl          |?ForceTerminated@CMiniThread@@QAAHXZ|

; 46   :     }

  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$LN6@CMiniThrea@2|
  0001c		 |$LN7@CMiniThrea@2|
  0001c	00000000	 DCD         |??_7CMiniThread@@6B@|
  00020		 |$M35116|

			 ENDP  ; |??1CMiniThread@@QAA@XZ|, CMiniThread::~CMiniThread

	EXPORT	|??0RegValue@@QAA@PAUHKEY__@@PBGPAV0@@Z| ; RegValue::RegValue
	EXPORT	|??_7RegValue@@6B@| [ DATA ]		; RegValue::`vftable'
	EXPORT	|?Init@RegValue@@UAAHXZ|		; RegValue::Init
	EXPORT	|?GetRegValue@RegValue@@UAAHPAXPAK1@Z|	; RegValue::GetRegValue
	IMPORT	|??_ERegValue@@UAAPAXI@Z|, WEAK |??_GRegValue@@UAAPAXI@Z| ; RegValue::`vector deleting destructor', RegValue::`scalar deleting destructor'
; File c:\wince600\platform\z2170p\src\drivers\pm\dll\pmsysreg.h

  00000			 AREA	 |.pdata|, PDATA
|$T35133| DCD	|$LN5@RegValue|
	DCD	0x40000e01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7RegValue@@6B@| DCD |?Init@RegValue@@UAAHXZ|	; RegValue::`vftable'
	DCD	|??_ERegValue@@UAAPAXI@Z|
	DCD	|?GetRegValue@RegValue@@UAAHPAXPAK1@Z|
	DCD	|?UpdateRegValue@RegValue@@MAAHXZ|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0RegValue@@QAA@PAUHKEY__@@PBGPAV0@@Z| PROC ; RegValue::RegValue

; 61   :     RegValue(HKEY hKey,LPCTSTR lpRegName,RegValue * pNextRegValue ) :  RegKeyOrValue(hKey,lpRegName,pNextRegValue) { 

  00000		 |$LN5@RegValue|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M35130|
  00004	e1a04000	 mov         r4, r0
  00008	eb000000	 bl          |??0RegKeyOrValue@@QAA@PAUHKEY__@@PBGPAV0@@Z|
  0000c	e59f3020	 ldr         r3, [pc, #0x20]

; 62   :         m_dwValueSize=0;

  00010	e3a02000	 mov         r2, #0

; 63   :         m_lpByteValue = NULL;
; 64   :         UpdateRegValue();

  00014	e1a00004	 mov         r0, r4
  00018	e5843000	 str         r3, [r4]
  0001c	e5842014	 str         r2, [r4, #0x14]
  00020	e5842018	 str         r2, [r4, #0x18]
  00024	eb000000	 bl          |?UpdateRegValue@RegValue@@MAAHXZ|

; 65   :     };

  00028	e1a00004	 mov         r0, r4
  0002c	e8bd4010	 ldmia       sp!, {r4, lr}
  00030	e12fff1e	 bx          lr
  00034		 |$LN6@RegValue|
  00034		 |$LN7@RegValue|
  00034	00000000	 DCD         |??_7RegValue@@6B@|
  00038		 |$M35131|

			 ENDP  ; |??0RegValue@@QAA@PAUHKEY__@@PBGPAV0@@Z|, RegValue::RegValue

	EXPORT	|??1RegValue@@UAA@XZ|			; RegValue::~RegValue

  00000			 AREA	 |.pdata|, PDATA
|$T35150| DCD	|$LN9@RegValue@2|
	DCD	0x40001201
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1RegValue@@UAA@XZ| PROC		; RegValue::~RegValue

; 66   :     virtual ~RegValue () {

  00000		 |$LN9@RegValue@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M35147|
  00004	e1a04000	 mov         r4, r0

; 67   :         if ( m_lpByteValue)

  00008	e5942018	 ldr         r2, [r4, #0x18]
  0000c	e59f3030	 ldr         r3, [pc, #0x30]
  00010	e3520000	 cmp         r2, #0

; 68   :             delete  m_lpByteValue;

  00014	11a00002	 movne       r0, r2
  00018	e5843000	 str         r3, [r4]
  0001c	1b000000	 blne        |??3@YAXPAX@Z|

; 69   :     }

  00020	e5942004	 ldr         r2, [r4, #4]
  00024	e59f3014	 ldr         r3, [pc, #0x14]
  00028	e3520000	 cmp         r2, #0
  0002c	11a00002	 movne       r0, r2
  00030	e5843000	 str         r3, [r4]
  00034	1b000000	 blne        |??3@YAXPAX@Z|
  00038	e8bd4010	 ldmia       sp!, {r4, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN10@RegValue@2|
  00040		 |$LN11@RegValue@2|
  00040	00000000	 DCD         |??_7RegKeyOrValue@@6B@|
  00044		 |$LN12@RegValue@2|
  00044	00000000	 DCD         |??_7RegValue@@6B@|
  00048		 |$M35148|

			 ENDP  ; |??1RegValue@@UAA@XZ|, RegValue::~RegValue


  00000			 AREA	 |.pdata|, PDATA
|$T35165| DCD	|$LN7@Init@2|
	DCD	0x40000700
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Init@RegValue@@UAAHXZ| PROC		; RegValue::Init

; 70   :     virtual BOOL Init() { return (m_dwValueSize!=NULL && m_lpByteValue!=NULL); };

  00000		 |$LN7@Init@2|
  00000		 |$M35162|
  00000	e5903014	 ldr         r3, [r0, #0x14]
  00004	e3530000	 cmp         r3, #0
  00008	15903018	 ldrne       r3, [r0, #0x18]
  0000c	13530000	 cmpne       r3, #0
  00010	13a00001	 movne       r0, #1
  00014	03a00000	 moveq       r0, #0
  00018	e12fff1e	 bx          lr
  0001c		 |$M35163|

			 ENDP  ; |?Init@RegValue@@UAAHXZ|, RegValue::Init

	IMPORT	|memcpy|

  00000			 AREA	 |.pdata|, PDATA
|$T35181| DCD	|$LN11@GetRegValu|
	DCD	0x40001e01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetRegValue@RegValue@@UAAHPAXPAK1@Z| PROC ; RegValue::GetRegValue

; 71   :     virtual BOOL GetRegValue(PVOID pvData, LPDWORD pdwSize, LPDWORD pdwType)  {

  00000		 |$LN11@GetRegValu|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M35178|
  00004	e1a06003	 mov         r6, r3
  00008	e1a03001	 mov         r3, r1
  0000c	e1a05002	 mov         r5, r2
  00010	e1a04000	 mov         r4, r0

; 72   :         if (m_lpByteValue &&  pdwSize ) {

  00014	e594e018	 ldr         lr, [r4, #0x18]
  00018	e35e0000	 cmp         lr, #0
  0001c	0a000012	 beq         |$LN4@GetRegValu|
  00020	e3550000	 cmp         r5, #0
  00024	0a000010	 beq         |$LN4@GetRegValu|

; 73   :             if (pvData)

  00028	e3530000	 cmp         r3, #0
  0002c	0a000006	 beq         |$LN3@GetRegValu|

; 74   :                 memcpy(pvData,m_lpByteValue, min (*pdwSize, m_dwValueSize));

  00030	e5952000	 ldr         r2, [r5]
  00034	e5940014	 ldr         r0, [r4, #0x14]
  00038	e1a0100e	 mov         r1, lr
  0003c	e1520000	 cmp         r2, r0
  00040	21a02000	 movcs       r2, r0
  00044	e1a00003	 mov         r0, r3
  00048	eb000000	 bl          memcpy
  0004c		 |$LN3@GetRegValu|

; 75   :             *pdwSize = m_dwValueSize;

  0004c	e5943014	 ldr         r3, [r4, #0x14]

; 76   :             if (pdwType)

  00050	e3560000	 cmp         r6, #0

; 77   :                 *pdwType = m_dwValueType;
; 78   :             return TRUE;

  00054	e3a00001	 mov         r0, #1
  00058	e5853000	 str         r3, [r5]
  0005c	15943010	 ldrne       r3, [r4, #0x10]
  00060	15863000	 strne       r3, [r6]

; 82   :     }

  00064	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00068	e12fff1e	 bx          lr
  0006c		 |$LN4@GetRegValu|

; 79   :         }
; 80   :         else
; 81   :             return FALSE;

  0006c	e3a00000	 mov         r0, #0

; 82   :     }

  00070	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00074	e12fff1e	 bx          lr
  00078		 |$M35179|

			 ENDP  ; |?GetRegValue@RegValue@@UAAHPAXPAK1@Z|, RegValue::GetRegValue


  00000			 AREA	 |.pdata|, PDATA
|$T35192| DCD	|$LN6@scalar@2|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GRegValue@@UAAPAXI@Z| PROC		; RegValue::`scalar deleting destructor'
  00000		 |$LN6@scalar@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M35189|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0
  0000c	eb000000	 bl          |??1RegValue@@UAA@XZ|
  00010	e3140001	 tst         r4, #1
  00014	11a00005	 movne       r0, r5
  00018	1b000000	 blne        |??3@YAXPAX@Z|
  0001c	e1a00005	 mov         r0, r5
  00020	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M35190|

			 ENDP  ; |??_GRegValue@@UAAPAXI@Z|, RegValue::`scalar deleting destructor'

	EXPORT	|??1RegKey@@UAA@XZ|			; RegKey::~RegKey
	IMPORT	|RegCloseKey|

  00000			 AREA	 |.pdata|, PDATA
|$T35206| DCD	|$LN9@RegKey@2|
	DCD	0x40001301
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1RegKey@@UAA@XZ| PROC		; RegKey::~RegKey

; 122  :     virtual ~RegKey() {

  00000		 |$LN9@RegKey@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M35203|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3038	 ldr         r3, [pc, #0x38]

; 123  :         DeleteAll();

  0000c	e5843000	 str         r3, [r4]
  00010	eb000000	 bl          |?DeleteAll@RegKey@@IAAXXZ|

; 124  :         if (m_RegKey) {

  00014	e5943010	 ldr         r3, [r4, #0x10]
  00018	e3530000	 cmp         r3, #0

; 125  :             RegCloseKey( m_RegKey );

  0001c	11a00003	 movne       r0, r3
  00020	1b000000	 blne        RegCloseKey

; 126  :         }
; 127  :     }

  00024	e5942004	 ldr         r2, [r4, #4]
  00028	e59f3014	 ldr         r3, [pc, #0x14]
  0002c	e3520000	 cmp         r2, #0
  00030	11a00002	 movne       r0, r2
  00034	e5843000	 str         r3, [r4]
  00038	1b000000	 blne        |??3@YAXPAX@Z|
  0003c	e8bd4010	 ldmia       sp!, {r4, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$LN10@RegKey@2|
  00044		 |$LN11@RegKey@2|
  00044	00000000	 DCD         |??_7RegKeyOrValue@@6B@|
  00048		 |$LN12@RegKey@2|
  00048	00000000	 DCD         |??_7RegKey@@6B@|
  0004c		 |$M35204|

			 ENDP  ; |??1RegKey@@UAA@XZ|, RegKey::~RegKey

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|?EnumerateAllValue@RegKey@@IAAHXZ|	; RegKey::EnumerateAllValue
	IMPORT	|RegEnumValueW|

  00000			 AREA	 |.pdata|, PDATA
|$T35242| DCD	|$LN23@EnumerateA@2|
	DCD	0xc0004c02

  00000			 AREA	 |.xdata|, DATA
|$T35238| DCD	0xffffffd8
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T35238|

  00008		 |?EnumerateAllValue@RegKey@@IAAHXZ| PROC ; RegKey::EnumerateAllValue

; 263  :     BOOL EnumerateAllValue() {

  00008		 |$LN23@EnumerateA@2|
  00008	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  0000c	e24dde22	 sub         sp, sp, #0x22, 28
  00010		 |$M35239|
  00010	e1a06000	 mov         r6, r0
  00014	e59f3118	 ldr         r3, [pc, #0x118]
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d321c	 str         r3, [sp, #0x21C]

; 264  :         BOOL fReturn = FALSE;
; 265  :         if (m_RegKey) {

  00020	e5963010	 ldr         r3, [r6, #0x10]
  00024	e3a05000	 mov         r5, #0
  00028	e3530000	 cmp         r3, #0
  0002c	0a000039	 beq         |$LN20@EnumerateA@2|

; 266  :             fReturn = TRUE;
; 267  :             TCHAR regName[MAX_PATH];
; 268  :             for (DWORD RegEnum = 0;;RegEnum++) {

  00030	e59f80f8	 ldr         r8, [pc, #0xF8]
  00034	e3a05001	 mov         r5, #1
  00038	e3a07000	 mov         r7, #0
  0003c	e3a09000	 mov         r9, #0
  00040	e3a0bf41	 mov         r11, #0x41, 30
  00044	e3a0a000	 mov         r10, #0
  00048		 |$LL9@EnumerateA@2|

; 269  :                 DWORD ValLen = MAX_PATH;
; 270  :                 LONG status = ::RegEnumValue (m_RegKey, RegEnum, regName, &ValLen, NULL, NULL, NULL, NULL);

  00048	e5960010	 ldr         r0, [r6, #0x10]
  0004c	e28d3010	 add         r3, sp, #0x10
  00050	e28d2014	 add         r2, sp, #0x14
  00054	e1a01007	 mov         r1, r7
  00058	e58db010	 str         r11, [sp, #0x10]
  0005c	e58d900c	 str         r9, [sp, #0xC]
  00060	e58d9008	 str         r9, [sp, #8]
  00064	e58d9004	 str         r9, [sp, #4]
  00068	e58d9000	 str         r9, [sp]
  0006c	eb000000	 bl          RegEnumValueW
  00070	e3500000	 cmp         r0, #0

; 271  :                 if (status == ERROR_SUCCESS || status == ERROR_MORE_DATA) {

  00074	0a000001	 beq         |$LN5@EnumerateA@2|
  00078	e35000ea	 cmp         r0, #0xEA
  0007c	1a000025	 bne         |$LN20@EnumerateA@2|
  00080		 |$LN5@EnumerateA@2|

; 272  :                     regName[MAX_PATH -1] =0;
; 273  :                     RegValue* newValue = new RegValue(m_RegKey,regName,m_pRegValueList);

  00080	e3a0001c	 mov         r0, #0x1C
  00084	e28dcc02	 add         r12, sp, #2, 24
  00088	e1cca1ba	 strh        r10, [r12, #0x1A]
  0008c	eb000000	 bl          |??2@YAPAXI@Z|
  00090	e1b04000	 movs        r4, r0
  00094	0a00000a	 beq         |$LN13@EnumerateA@2|
  00098	e5963014	 ldr         r3, [r6, #0x14]
  0009c	e5961010	 ldr         r1, [r6, #0x10]
  000a0	e28d2014	 add         r2, sp, #0x14
  000a4	e1a00004	 mov         r0, r4
  000a8	eb000000	 bl          |??0RegKeyOrValue@@QAA@PAUHKEY__@@PBGPAV0@@Z|
  000ac	e1a00004	 mov         r0, r4
  000b0	e5848000	 str         r8, [r4]
  000b4	e5849014	 str         r9, [r4, #0x14]
  000b8	e5849018	 str         r9, [r4, #0x18]
  000bc	eb000000	 bl          |?UpdateRegValue@RegValue@@MAAHXZ|
  000c0	ea000000	 b           |$LN14@EnumerateA@2|
  000c4		 |$LN13@EnumerateA@2|
  000c4	e3a04000	 mov         r4, #0
  000c8		 |$LN14@EnumerateA@2|

; 274  :                     if (newValue && newValue->Init())

  000c8	e3540000	 cmp         r4, #0
  000cc	0a00000e	 beq         |$LN15@EnumerateA@2|
  000d0	e5943000	 ldr         r3, [r4]
  000d4	e1a00004	 mov         r0, r4
  000d8	e5933000	 ldr         r3, [r3]
  000dc	e1a0e00f	 mov         lr, pc
  000e0	e12fff13	 bx          r3
  000e4	e3500000	 cmp         r0, #0

; 275  :                         m_pRegValueList = newValue;

  000e8	15864014	 strne       r4, [r6, #0x14]
  000ec	12877001	 addne       r7, r7, #1
  000f0	1affffd4	 bne         |$LL9@EnumerateA@2|

; 276  :                     else {
; 277  :                         if (newValue) 
; 278  :                             delete newValue;

  000f4	e5943000	 ldr         r3, [r4]
  000f8	e3a01001	 mov         r1, #1
  000fc	e1a00004	 mov         r0, r4
  00100	e5933004	 ldr         r3, [r3, #4]
  00104	e1a0e00f	 mov         lr, pc
  00108	e12fff13	 bx          r3
  0010c		 |$LN15@EnumerateA@2|

; 279  :                         fReturn = FALSE;

  0010c	e3a05000	 mov         r5, #0
  00110	e2877001	 add         r7, r7, #1
  00114	eaffffcb	 b           |$LL9@EnumerateA@2|
  00118		 |$LN20@EnumerateA@2|

; 280  :                     }
; 281  :                 }
; 282  :                 else
; 283  :                     break;
; 284  :             }
; 285  :         }
; 286  :         return fReturn;

  00118	e59d021c	 ldr         r0, [sp, #0x21C]
  0011c	eb000000	 bl          __security_check_cookie

; 287  :     }

  00120	e1a00005	 mov         r0, r5
  00124	e28dde22	 add         sp, sp, #0x22, 28
  00128	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  0012c	e12fff1e	 bx          lr
  00130		 |$LN24@EnumerateA@2|
  00130		 |$LN25@EnumerateA@2|
  00130	00000000	 DCD         |??_7RegValue@@6B@|
  00134		 |$LN26@EnumerateA@2|
  00134	00000000	 DCD         |__security_cookie|
  00138		 |$M35240|

			 ENDP  ; |?EnumerateAllValue@RegKey@@IAAHXZ|, RegKey::EnumerateAllValue


  00000			 AREA	 |.pdata|, PDATA
|$T35257| DCD	|$LN6@scalar@3|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GRegKey@@UAAPAXI@Z| PROC		; RegKey::`scalar deleting destructor'
  00000		 |$LN6@scalar@3|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M35254|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0
  0000c	eb000000	 bl          |??1RegKey@@UAA@XZ|
  00010	e3140001	 tst         r4, #1
  00014	11a00005	 movne       r0, r5
  00018	1b000000	 blne        |??3@YAXPAX@Z|
  0001c	e1a00005	 mov         r0, r5
  00020	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M35255|

			 ENDP  ; |??_GRegKey@@UAAPAXI@Z|, RegKey::`scalar deleting destructor'

	EXPORT	|??0SystemNotifyRegKey@@QAA@PAUHKEY__@@PBG@Z| ; SystemNotifyRegKey::SystemNotifyRegKey
	EXPORT	|??_7SystemNotifyRegKey@@6BRegKey@@@| [ DATA ] ; SystemNotifyRegKey::`vftable'
	EXPORT	|??_7SystemNotifyRegKey@@6BCMiniThread@@@| [ DATA ] ; SystemNotifyRegKey::`vftable'
	EXPORT	|?ThreadRun@SystemNotifyRegKey@@EAAKXZ|	; SystemNotifyRegKey::ThreadRun
	EXPORT	|?Init@SystemNotifyRegKey@@UAAHXZ|	; SystemNotifyRegKey::Init
	IMPORT	|CeFindFirstRegChange|
	IMPORT	|RegOpenKeyExW|
	IMPORT	|CreateEventW|
	IMPORT	|??_ESystemNotifyRegKey@@UAAPAXI@Z|, WEAK |??_GSystemNotifyRegKey@@UAAPAXI@Z| ; SystemNotifyRegKey::`vector deleting destructor', SystemNotifyRegKey::`scalar deleting destructor'
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T35277| DCD	|$LN12@SystemNoti|
	DCD	0x40003802

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7SystemNotifyRegKey@@6BRegKey@@@| DCD |?Init@SystemNotifyRegKey@@UAAHXZ| ; SystemNotifyRegKey::`vftable'
	DCD	|??_ESystemNotifyRegKey@@UAAPAXI@Z|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7SystemNotifyRegKey@@6BCMiniThread@@@| DCD |?ThreadRun@SystemNotifyRegKey@@EAAKXZ| ; SystemNotifyRegKey::`vftable'
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\pm\dll\pmsysreg.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0SystemNotifyRegKey@@QAA@PAUHKEY__@@PBG@Z| PROC ; SystemNotifyRegKey::SystemNotifyRegKey

; 297  :         ,CMiniThread(0,TRUE ){

  00000		 |$LN12@SystemNoti|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M35274|
  00008	e1a04000	 mov         r4, r0
  0000c	e3a03000	 mov         r3, #0
  00010	eb000000	 bl          |??0RegKeyOrValue@@QAA@PAUHKEY__@@PBGPAV0@@Z|
  00014	e59f30c0	 ldr         r3, [pc, #0xC0]
  00018	e3a05000	 mov         r5, #0
  0001c	e2840034	 add         r0, r4, #0x34
  00020	e5843000	 str         r3, [r4]
  00024	e5845014	 str         r5, [r4, #0x14]
  00028	e5845018	 str         r5, [r4, #0x18]
  0002c	e5845010	 str         r5, [r4, #0x10]
  00030	eb000000	 bl          InitializeCriticalSection
  00034	e3a02001	 mov         r2, #1
  00038	e3a01000	 mov         r1, #0
  0003c	e284001c	 add         r0, r4, #0x1C
  00040	eb000000	 bl          |??0CMiniThread@@QAA@KH@Z|
  00044	e59f308c	 ldr         r3, [pc, #0x8C]
  00048	e59f2084	 ldr         r2, [pc, #0x84]

; 298  :         m_hNotifyEvent = INVALID_HANDLE_VALUE;

  0004c	e3e0e000	 mvn         lr, #0
  00050	e5843000	 str         r3, [r4]
  00054	e584201c	 str         r2, [r4, #0x1C]

; 299  :         m_hTerminated = CreateEvent(NULL,TRUE,FALSE,NULL);

  00058	e3a03000	 mov         r3, #0
  0005c	e3a02000	 mov         r2, #0
  00060	e3a01001	 mov         r1, #1
  00064	e3a00000	 mov         r0, #0
  00068	e584e048	 str         lr, [r4, #0x48]
  0006c	eb000000	 bl          CreateEventW

; 300  :         if(m_RegKey == NULL && RegOpenKeyEx(m_hParentKey, m_lpRegName, 0, 0, &m_RegKey ) != ERROR_SUCCESS )  {

  00070	e5943010	 ldr         r3, [r4, #0x10]
  00074	e584004c	 str         r0, [r4, #0x4C]
  00078	e3530000	 cmp         r3, #0
  0007c	1a00000b	 bne         |$LN9@SystemNoti|
  00080	e5941004	 ldr         r1, [r4, #4]
  00084	e5940008	 ldr         r0, [r4, #8]
  00088	e284e010	 add         lr, r4, #0x10
  0008c	e3a03000	 mov         r3, #0
  00090	e3a02000	 mov         r2, #0
  00094	e58de000	 str         lr, [sp]
  00098	eb000000	 bl          RegOpenKeyExW
  0009c	e3500000	 cmp         r0, #0

; 301  :             m_RegKey = NULL;

  000a0	15845010	 strne       r5, [r4, #0x10]

; 302  :         }
; 303  :         if (m_RegKey!=NULL) {

  000a4	e5943010	 ldr         r3, [r4, #0x10]
  000a8	e3530000	 cmp         r3, #0
  000ac	0a000004	 beq         |$LN1@SystemNoti|
  000b0		 |$LN9@SystemNoti|

; 304  :             m_hNotifyEvent=CeFindFirstRegChange(m_RegKey,TRUE,REG_NOTIFY_CHANGE_LAST_SET);

  000b0	e3a02004	 mov         r2, #4
  000b4	e3a01001	 mov         r1, #1
  000b8	e1a00003	 mov         r0, r3
  000bc	eb000000	 bl          CeFindFirstRegChange
  000c0	e5840048	 str         r0, [r4, #0x48]
  000c4		 |$LN1@SystemNoti|

; 305  :         }
; 306  :      }

  000c4	e1a00004	 mov         r0, r4
  000c8	e28dd004	 add         sp, sp, #4
  000cc	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000d0	e12fff1e	 bx          lr
  000d4		 |$LN13@SystemNoti|
  000d4		 |$LN14@SystemNoti|
  000d4	00000000	 DCD         |??_7SystemNotifyRegKey@@6BCMiniThread@@@|
  000d8		 |$LN15@SystemNoti|
  000d8	00000000	 DCD         |??_7SystemNotifyRegKey@@6BRegKey@@@|
  000dc		 |$LN16@SystemNoti|
  000dc	00000000	 DCD         |??_7RegKey@@6B@|
  000e0		 |$M35275|

			 ENDP  ; |??0SystemNotifyRegKey@@QAA@PAUHKEY__@@PBG@Z|, SystemNotifyRegKey::SystemNotifyRegKey

	EXPORT	|SetEvent|
	IMPORT	|EventModify|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T35291| DCD	|$LN5@SetEvent|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetEvent| PROC

; 235  : _inline BOOL SetEvent(HANDLE h) {

  00000		 |$LN5@SetEvent|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35288|

; 236  : 	return EventModify(h,EVENT_SET);

  00004	e3a01003	 mov         r1, #3
  00008	eb000000	 bl          EventModify

; 237  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M35289|

			 ENDP  ; |SetEvent|

	EXPORT	|?ThreadStart@CMiniThread@@QAAHXZ|	; CMiniThread::ThreadStart
	IMPORT	|ResumeThread|
; File c:\wince600\public\common\oak\inc\cmthread.h

  00000			 AREA	 |.pdata|, PDATA
|$T35301| DCD	|$LN7@ThreadStar|
	DCD	0x40001001
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ThreadStart@CMiniThread@@QAAHXZ| PROC ; CMiniThread::ThreadStart

; 49   :     {

  00000		 |$LN7@ThreadStar|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M35298|
  00004	e1a04000	 mov         r4, r0

; 50   :         if( m_bSuspendFlag )

  00008	e5943010	 ldr         r3, [r4, #0x10]
  0000c	e3530000	 cmp         r3, #0
  00010	0a000007	 beq         |$LN2@ThreadStar|

; 51   :         {
; 52   :             if( ResumeThread( m_hThreadHandle ) == ( DWORD ) ( -1 ) )

  00014	e5940008	 ldr         r0, [r4, #8]
  00018	eb000000	 bl          ResumeThread
  0001c	e3700001	 cmn         r0, #1

; 53   :             {
; 54   :                 // failure for resume somehow
; 55   :                 return FALSE;

  00020	03a00000	 moveq       r0, #0

; 60   :     }

  00024	08bd4010	 ldmeqia     sp!, {r4, lr}
  00028	012fff1e	 bxeq        lr

; 56   :             };
; 57   :             m_bSuspendFlag = FALSE;

  0002c	e3a03000	 mov         r3, #0
  00030	e5843010	 str         r3, [r4, #0x10]
  00034		 |$LN2@ThreadStar|

; 58   :         }
; 59   :         return TRUE;

  00034	e3a00001	 mov         r0, #1

; 60   :     }

  00038	e8bd4010	 ldmia       sp!, {r4, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$M35299|

			 ENDP  ; |?ThreadStart@CMiniThread@@QAAHXZ|, CMiniThread::ThreadStart

	EXPORT	|?WaitThreadComplete@CMiniThread@@QAAHK@Z| ; CMiniThread::WaitThreadComplete
	IMPORT	|WaitForSingleObject|

  00000			 AREA	 |.pdata|, PDATA
|$T35312| DCD	|$LN8@WaitThread|
	DCD	0x40001801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?WaitThreadComplete@CMiniThread@@QAAHK@Z| PROC ; CMiniThread::WaitThreadComplete

; 92   :     {

  00000		 |$LN8@WaitThread|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M35309|
  00004	e1a05001	 mov         r5, r1
  00008	e1a04000	 mov         r4, r0

; 93   :         if( !m_hThreadHandle )

  0000c	e5943008	 ldr         r3, [r4, #8]
  00010	e3530000	 cmp         r3, #0

; 94   :         {
; 95   :             return FALSE;

  00014	0a00000e	 beq         |$LN1@WaitThread|

; 96   :         };
; 97   : 
; 98   :         if( ThreadStart() )

  00018	eb000000	 bl          |?ThreadStart@CMiniThread@@QAAHXZ|
  0001c	e3500000	 cmp         r0, #0
  00020	0a00000b	 beq         |$LN1@WaitThread|

; 99   :         {
; 100  :             if( ::WaitForSingleObject( m_hThreadHandle, dwMilliSeconds ) ==
; 101  :                 WAIT_OBJECT_0 )

  00024	e5940008	 ldr         r0, [r4, #8]
  00028	e1a01005	 mov         r1, r5
  0002c	eb000000	 bl          WaitForSingleObject
  00030	e3500000	 cmp         r0, #0
  00034	1a000006	 bne         |$LN1@WaitThread|

; 102  :             {
; 103  :                 // thread dead
; 104  :                 ::CloseHandle( m_hThreadHandle );

  00038	e5940008	 ldr         r0, [r4, #8]
  0003c	eb000000	 bl          CloseHandle

; 105  :                 m_hThreadHandle = NULL;

  00040	e3a03000	 mov         r3, #0
  00044	e5843008	 str         r3, [r4, #8]

; 106  :                 return TRUE;

  00048	e3a00001	 mov         r0, #1

; 110  :     }

  0004c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$LN1@WaitThread|

; 107  :             }
; 108  :         }
; 109  :         return FALSE;

  00054	e3a00000	 mov         r0, #0

; 110  :     }

  00058	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0005c	e12fff1e	 bx          lr
  00060		 |$M35310|

			 ENDP  ; |?WaitThreadComplete@CMiniThread@@QAAHK@Z|, CMiniThread::WaitThreadComplete

	EXPORT	|?IsTerminated@CMiniThread@@QAAHXZ|	; CMiniThread::IsTerminated

  00000			 AREA	 |.pdata|, PDATA
|$T35322| DCD	|$LN5@IsTerminat|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsTerminated@CMiniThread@@QAAHXZ| PROC ; CMiniThread::IsTerminated

; 131  :     {

  00000		 |$LN5@IsTerminat|
  00000		 |$M35319|

; 132  :         return m_bTerminated;

  00000	e5900004	 ldr         r0, [r0, #4]

; 133  :     };

  00004	e12fff1e	 bx          lr
  00008		 |$M35320|

			 ENDP  ; |?IsTerminated@CMiniThread@@QAAHXZ|, CMiniThread::IsTerminated

	EXPORT	|??1SystemNotifyRegKey@@UAA@XZ|		; SystemNotifyRegKey::~SystemNotifyRegKey
	IMPORT	|CeFindCloseRegChange|
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T35348| DCD	|$LN18@SystemNoti@2|
	DCD	0x40002901
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\pm\dll\pmsysreg.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1SystemNotifyRegKey@@UAA@XZ| PROC	; SystemNotifyRegKey::~SystemNotifyRegKey

; 315  :     virtual ~SystemNotifyRegKey() {

  00000		 |$LN18@SystemNoti@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M35345|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3090	 ldr         r3, [pc, #0x90]
  0000c	e59f2088	 ldr         r2, [pc, #0x88]

; 316  :         m_bTerminated = TRUE;
; 317  :         ThreadStart();

  00010	e3a01001	 mov         r1, #1
  00014	e284001c	 add         r0, r4, #0x1C
  00018	e5843000	 str         r3, [r4]
  0001c	e584201c	 str         r2, [r4, #0x1C]
  00020	e5841020	 str         r1, [r4, #0x20]
  00024	eb000000	 bl          |?ThreadStart@CMiniThread@@QAAHXZ|

; 318  :         if (m_hTerminated)

  00028	e594304c	 ldr         r3, [r4, #0x4C]
  0002c	e3530000	 cmp         r3, #0

; 319  :             SetEvent(m_hTerminated);

  00030	13a01003	 movne       r1, #3
  00034	11a00003	 movne       r0, r3
  00038	1b000000	 blne        EventModify

; 320  :         WaitThreadComplete( 1000);

  0003c	e3a01ffa	 mov         r1, #0xFA, 30
  00040	e284001c	 add         r0, r4, #0x1C
  00044	eb000000	 bl          |?WaitThreadComplete@CMiniThread@@QAAHK@Z|

; 321  :         if (m_hTerminated)

  00048	e594304c	 ldr         r3, [r4, #0x4C]
  0004c	e3530000	 cmp         r3, #0

; 322  :             CloseHandle(m_hTerminated);

  00050	11a00003	 movne       r0, r3
  00054	1b000000	 blne        CloseHandle

; 323  :         if (m_hNotifyEvent != INVALID_HANDLE_VALUE) {

  00058	e5940048	 ldr         r0, [r4, #0x48]
  0005c	e3700001	 cmn         r0, #1
  00060	0a000002	 beq         |$LN1@SystemNoti@2|

; 324  :             CeFindCloseRegChange(m_hNotifyEvent) ;

  00064	eb000000	 bl          CeFindCloseRegChange

; 325  :             m_hNotifyEvent = INVALID_HANDLE_VALUE;

  00068	e3e03000	 mvn         r3, #0
  0006c	e5843048	 str         r3, [r4, #0x48]
  00070		 |$LN1@SystemNoti@2|

; 326  :         }
; 327  :     }

  00070	e59f3020	 ldr         r3, [pc, #0x20]
  00074	e284001c	 add         r0, r4, #0x1C
  00078	e584301c	 str         r3, [r4, #0x1C]
  0007c	eb000000	 bl          |?ForceTerminated@CMiniThread@@QAAHXZ|
  00080	e2840034	 add         r0, r4, #0x34
  00084	eb000000	 bl          DeleteCriticalSection
  00088	e1a00004	 mov         r0, r4
  0008c	eb000000	 bl          |??1RegKey@@UAA@XZ|
  00090	e8bd4010	 ldmia       sp!, {r4, lr}
  00094	e12fff1e	 bx          lr
  00098		 |$LN19@SystemNoti@2|
  00098		 |$LN20@SystemNoti@2|
  00098	00000000	 DCD         |??_7CMiniThread@@6B@|
  0009c		 |$LN21@SystemNoti@2|
  0009c	00000000	 DCD         |??_7SystemNotifyRegKey@@6BCMiniThread@@@|
  000a0		 |$LN22@SystemNoti@2|
  000a0	00000000	 DCD         |??_7SystemNotifyRegKey@@6BRegKey@@@|
  000a4		 |$M35346|

			 ENDP  ; |??1SystemNotifyRegKey@@UAA@XZ|, SystemNotifyRegKey::~SystemNotifyRegKey


  00000			 AREA	 |.pdata|, PDATA
|$T35363| DCD	|$LN6@scalar@4|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GSystemNotifyRegKey@@UAAPAXI@Z| PROC ; SystemNotifyRegKey::`scalar deleting destructor'
  00000		 |$LN6@scalar@4|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M35360|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0
  0000c	eb000000	 bl          |??1SystemNotifyRegKey@@UAA@XZ|
  00010	e3140001	 tst         r4, #1
  00014	11a00005	 movne       r0, r5
  00018	1b000000	 blne        |??3@YAXPAX@Z|
  0001c	e1a00005	 mov         r0, r5
  00020	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M35361|

			 ENDP  ; |??_GSystemNotifyRegKey@@UAAPAXI@Z|, SystemNotifyRegKey::`scalar deleting destructor'

	EXPORT	|?RefreshAll@RegKey@@QAAHH@Z|		; RegKey::RefreshAll

  00000			 AREA	 |.pdata|, PDATA
|$T35402| DCD	|$LN29@RefreshAll|
	DCD	0x40004402
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RefreshAll@RegKey@@QAAHH@Z| PROC	; RegKey::RefreshAll

; 129  :     BOOL    RefreshAll (BOOL bDoNotCloseKey = FALSE) {

  00000		 |$LN29@RefreshAll|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M35399|
  00008	e1a07001	 mov         r7, r1
  0000c	e1a04000	 mov         r4, r0

; 130  :         BOOL fReturn = FALSE;
; 131  :         if(m_RegKey == NULL && RegOpenKeyEx(m_hParentKey, m_lpRegName, 0, 0, &m_RegKey ) != ERROR_SUCCESS )  {

  00010	e5943010	 ldr         r3, [r4, #0x10]
  00014	e3a05000	 mov         r5, #0
  00018	e3a08000	 mov         r8, #0
  0001c	e3530000	 cmp         r3, #0
  00020	1a00000b	 bne         |$LN24@RefreshAll|
  00024	e5941004	 ldr         r1, [r4, #4]
  00028	e5940008	 ldr         r0, [r4, #8]
  0002c	e284e010	 add         lr, r4, #0x10
  00030	e3a03000	 mov         r3, #0
  00034	e3a02000	 mov         r2, #0
  00038	e58de000	 str         lr, [sp]
  0003c	eb000000	 bl          RegOpenKeyExW
  00040	e3500000	 cmp         r0, #0

; 132  :             m_RegKey = NULL;

  00044	15848010	 strne       r8, [r4, #0x10]

; 133  :         }
; 134  :         if (m_RegKey) {

  00048	e5943010	 ldr         r3, [r4, #0x10]
  0004c	e3530000	 cmp         r3, #0
  00050	0a000015	 beq         |$LN1@RefreshAll|
  00054		 |$LN24@RefreshAll|

; 135  :             // Backup old key first
; 136  :             RegValue * m_pBackupRegValueList = m_pRegValueList;

  00054	e5946014	 ldr         r6, [r4, #0x14]

; 137  :             RegKey *   m_pBackupRegKeyList = m_pRegKeyList;

  00058	e5945018	 ldr         r5, [r4, #0x18]

; 138  :             m_pRegValueList = NULL;
; 139  :             m_pRegKeyList = NULL;
; 140  :             if ( EnumerateAllKey() && EnumerateAllValue()) { // Succeed to enumerate new key. Delete old key.

  0005c	e1a00004	 mov         r0, r4
  00060	e5848014	 str         r8, [r4, #0x14]
  00064	e5848018	 str         r8, [r4, #0x18]
  00068	eb000000	 bl          |?EnumerateAllKey@RegKey@@IAAHXZ|
  0006c	e3500000	 cmp         r0, #0
  00070	0a000003	 beq         |$LN7@RefreshAll|
  00074	e1a00004	 mov         r0, r4
  00078	eb000000	 bl          |?EnumerateAllValue@RegKey@@IAAHXZ|
  0007c	e3500000	 cmp         r0, #0
  00080	1a000014	 bne         |$LN25@RefreshAll|
  00084		 |$LN7@RefreshAll|

; 154  :                 DeleteAll(); // Delete partial succeeded key and value.

  00084	e1a00004	 mov         r0, r4
  00088	eb000000	 bl          |?DeleteAll@RegKey@@IAAXXZ|

; 155  :                 m_pRegValueList = m_pBackupRegValueList;
; 156  :                 m_pRegKeyList = m_pBackupRegKeyList ;

  0008c	e5845018	 str         r5, [r4, #0x18]

; 157  :                 fReturn = FALSE;

  00090	e3a05000	 mov         r5, #0
  00094	e5846014	 str         r6, [r4, #0x14]
  00098		 |$LN2@RefreshAll|

; 158  :             }
; 159  :             if (!bDoNotCloseKey) {

  00098	e3570000	 cmp         r7, #0
  0009c	1a000002	 bne         |$LN1@RefreshAll|

; 160  :                 RegCloseKey( m_RegKey );

  000a0	e5940010	 ldr         r0, [r4, #0x10]
  000a4	eb000000	 bl          RegCloseKey

; 161  :                 m_RegKey = NULL;

  000a8	e5848010	 str         r8, [r4, #0x10]
  000ac		 |$LN1@RefreshAll|

; 162  :             }
; 163  :         }
; 164  :         return fReturn;
; 165  :     }

  000ac	e1a00005	 mov         r0, r5
  000b0	e28dd004	 add         sp, sp, #4
  000b4	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  000b8	e12fff1e	 bx          lr
  000bc		 |$LL6@RefreshAll|

; 141  :                 while (m_pBackupRegValueList ) {
; 142  :                     RegValue * pNextRegValue = (RegValue * )m_pBackupRegValueList->GetNextRegKeyOrValuePtr() ;
; 143  :                     delete m_pBackupRegValueList;

  000bc	e5963000	 ldr         r3, [r6]
  000c0	e1a00006	 mov         r0, r6
  000c4	e596600c	 ldr         r6, [r6, #0xC]
  000c8	e5933004	 ldr         r3, [r3, #4]
  000cc	e3a01001	 mov         r1, #1
  000d0	e1a0e00f	 mov         lr, pc
  000d4	e12fff13	 bx          r3
  000d8		 |$LN25@RefreshAll|

; 144  :                     m_pBackupRegValueList = pNextRegValue;

  000d8	e3560000	 cmp         r6, #0
  000dc	1afffff6	 bne         |$LL6@RefreshAll|
  000e0	ea000006	 b           |$LN26@RefreshAll|
  000e4		 |$LL4@RefreshAll|

; 145  :                 }
; 146  :                 while (m_pBackupRegKeyList) {
; 147  :                     RegKey * pNextKey = (RegKey *) m_pBackupRegKeyList->GetNextRegKeyOrValuePtr();
; 148  :                     delete m_pBackupRegKeyList;

  000e4	e5953000	 ldr         r3, [r5]
  000e8	e1a00005	 mov         r0, r5
  000ec	e595500c	 ldr         r5, [r5, #0xC]
  000f0	e5933004	 ldr         r3, [r3, #4]
  000f4	e3a01001	 mov         r1, #1
  000f8	e1a0e00f	 mov         lr, pc
  000fc	e12fff13	 bx          r3
  00100		 |$LN26@RefreshAll|

; 149  :                     m_pBackupRegKeyList =  pNextKey ;

  00100	e3550000	 cmp         r5, #0
  00104	1afffff6	 bne         |$LL4@RefreshAll|

; 150  :                 }
; 151  :                 fReturn = TRUE;

  00108	e3a05001	 mov         r5, #1

; 152  :             }
; 153  :             else { // Fails, We need recover old key

  0010c	eaffffe1	 b           |$LN2@RefreshAll|
  00110		 |$M35400|

			 ENDP  ; |?RefreshAll@RegKey@@QAAHH@Z|, RegKey::RefreshAll

	EXPORT	|?UpdateAllValue@SystemNotifyRegKey@@QAAHXZ| ; SystemNotifyRegKey::UpdateAllValue
	IMPORT	|CeFindNextRegChange|
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T35418| DCD	|$LN12@UpdateAllV|
	DCD	0x40001901
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\pm\dll\pmsysreg.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UpdateAllValue@SystemNotifyRegKey@@QAAHXZ| PROC ; SystemNotifyRegKey::UpdateAllValue

; 334  :     BOOL UpdateAllValue() {

  00000		 |$LN12@UpdateAllV|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M35415|
  00004	e1a04000	 mov         r4, r0

; 335  :         if (m_hNotifyEvent!=INVALID_HANDLE_VALUE) {

  00008	e5943048	 ldr         r3, [r4, #0x48]
  0000c	e3730001	 cmn         r3, #1
  00010	0a000010	 beq         |$LN3@UpdateAllV|

; 336  :             Lock();

  00014	e2840034	 add         r0, r4, #0x34
  00018	eb000000	 bl          EnterCriticalSection

; 337  :             CeFindNextRegChange( m_hNotifyEvent);

  0001c	e5940048	 ldr         r0, [r4, #0x48]
  00020	eb000000	 bl          CeFindNextRegChange

; 338  :             m_fUpdated = FALSE;

  00024	e3a03000	 mov         r3, #0

; 339  :             if (RefreshAll(TRUE))

  00028	e3a01001	 mov         r1, #1
  0002c	e1a00004	 mov         r0, r4
  00030	e5843050	 str         r3, [r4, #0x50]
  00034	eb000000	 bl          |?RefreshAll@RegKey@@QAAHH@Z|
  00038	e3500000	 cmp         r0, #0

; 340  :                  m_fUpdated = TRUE;

  0003c	13a03001	 movne       r3, #1

; 341  :             Unlock();

  00040	e2840034	 add         r0, r4, #0x34
  00044	15843050	 strne       r3, [r4, #0x50]
  00048	eb000000	 bl          LeaveCriticalSection

; 342  :             return TRUE;

  0004c	e3a00001	 mov         r0, #1

; 345  :     }

  00050	e8bd4010	 ldmia       sp!, {r4, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$LN3@UpdateAllV|

; 343  :         } else
; 344  :             return FALSE;

  00058	e3a00000	 mov         r0, #0

; 345  :     }

  0005c	e8bd4010	 ldmia       sp!, {r4, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$M35416|

			 ENDP  ; |?UpdateAllValue@SystemNotifyRegKey@@QAAHXZ|, SystemNotifyRegKey::UpdateAllValue

	EXPORT	|?UpdateRegistryChange@SystemNotifyRegKey@@QAAHXZ| ; SystemNotifyRegKey::UpdateRegistryChange

  00000			 AREA	 |.pdata|, PDATA
|$T35428| DCD	|$LN7@UpdateRegi|
	DCD	0x40001001
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UpdateRegistryChange@SystemNotifyRegKey@@QAAHXZ| PROC ; SystemNotifyRegKey::UpdateRegistryChange

; 346  :     BOOL UpdateRegistryChange() {

  00000		 |$LN7@UpdateRegi|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M35425|
  00004	e1a04000	 mov         r4, r0

; 347  :         if (m_hNotifyEvent!=INVALID_HANDLE_VALUE && 
; 348  :                 WaitForSingleObject( m_hNotifyEvent, 0) == WAIT_OBJECT_0 ) { // Change has happen.

  00008	e5940048	 ldr         r0, [r4, #0x48]
  0000c	e3700001	 cmn         r0, #1
  00010	0a000007	 beq         |$LN2@UpdateRegi|
  00014	e3a01000	 mov         r1, #0
  00018	eb000000	 bl          WaitForSingleObject
  0001c	e3500000	 cmp         r0, #0
  00020	1a000003	 bne         |$LN2@UpdateRegi|

; 349  :             return UpdateAllValue();

  00024	e1a00004	 mov         r0, r4
  00028	eb000000	 bl          |?UpdateAllValue@SystemNotifyRegKey@@QAAHXZ|

; 353  :     }

  0002c	e8bd4010	 ldmia       sp!, {r4, lr}
  00030	e12fff1e	 bx          lr
  00034		 |$LN2@UpdateRegi|

; 350  :         }
; 351  :         else
; 352  :             return FALSE;

  00034	e3a00000	 mov         r0, #0

; 353  :     }

  00038	e8bd4010	 ldmia       sp!, {r4, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$M35426|

			 ENDP  ; |?UpdateRegistryChange@SystemNotifyRegKey@@QAAHXZ|, SystemNotifyRegKey::UpdateRegistryChange

	IMPORT	|WaitForMultipleObjects|
; File c:\wince600\public\common\oak\inc\cmthread.h

  00000			 AREA	 |.pdata|, PDATA
|$T35449| DCD	|$LN15@ThreadRun|
	DCD	0x40001d02
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\pm\dll\pmsysreg.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ThreadRun@SystemNotifyRegKey@@EAAKXZ| PROC ; SystemNotifyRegKey::ThreadRun

; 358  :     virtual DWORD       ThreadRun() {

  00000		 |$LN15@ThreadRun|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M35446|
  00008	e1a04000	 mov         r4, r0

; 359  :         while ( !IsTerminated() && m_hNotifyEvent!=INVALID_HANDLE_VALUE && m_hTerminated!=NULL ) {

  0000c	ea000011	 b           |$LN1@ThreadRun|
  00010		 |$LL3@ThreadRun|
  00010	e594e02c	 ldr         lr, [r4, #0x2C]
  00014	e37e0001	 cmn         lr, #1
  00018	0a000011	 beq         |$LN11@ThreadRun|
  0001c	e5943030	 ldr         r3, [r4, #0x30]
  00020	e1b05003	 movs        r5, r3
  00024	0a00000e	 beq         |$LN11@ThreadRun|

; 360  :             HANDLE h[2] = {m_hNotifyEvent,m_hTerminated};
; 361  :             if (WaitForMultipleObjects( 2, h, FALSE, INFINITE) == WAIT_OBJECT_0 && !IsTerminated()) { // Signaled

  00028	e3e03000	 mvn         r3, #0
  0002c	e3a02000	 mov         r2, #0
  00030	e28d1000	 add         r1, sp, #0
  00034	e3a00002	 mov         r0, #2
  00038	e58de000	 str         lr, [sp]
  0003c	e58d5004	 str         r5, [sp, #4]
  00040	eb000000	 bl          WaitForMultipleObjects
  00044	e3500000	 cmp         r0, #0
  00048	05943004	 ldreq       r3, [r4, #4]
  0004c	03530000	 cmpeq       r3, #0

; 362  :                 UpdateAllValue();

  00050	0244001c	 subeq       r0, r4, #0x1C
  00054	0b000000	 bleq        |?UpdateAllValue@SystemNotifyRegKey@@QAAHXZ|
  00058		 |$LN1@ThreadRun|
  00058	e5943004	 ldr         r3, [r4, #4]
  0005c	e3530000	 cmp         r3, #0
  00060	0affffea	 beq         |$LL3@ThreadRun|
  00064		 |$LN11@ThreadRun|

; 363  :             }
; 364  :         }
; 365  :         return 0;

  00064	e3a00000	 mov         r0, #0

; 366  :     }

  00068	e28dd008	 add         sp, sp, #8
  0006c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00070	e12fff1e	 bx          lr
  00074		 |$M35447|

			 ENDP  ; |?ThreadRun@SystemNotifyRegKey@@EAAKXZ|, SystemNotifyRegKey::ThreadRun

	EXPORT	|PmUpdateSystemPowerStatesIfChanged|
	IMPORT	|?g_pSysRegistryAccess@@3PAVSystemNotifyRegKey@@A| ; g_pSysRegistryAccess
; File c:\wince600\platform\z2170p\src\drivers\pm\dll\pmsysstate.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T35460| DCD	|$LN7@PmUpdateSy|
	DCD	0x40000c01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PmUpdateSystemPowerStatesIfChanged| PROC

; 169  : {

  00000		 |$LN7@PmUpdateSy|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35457|

; 170  :     return (g_pSysRegistryAccess!=NULL?g_pSysRegistryAccess->UpdateRegistryChange():FALSE);

  00004	e59f3020	 ldr         r3, [pc, #0x20]
  00008	e5930000	 ldr         r0, [r3]
  0000c	e3500000	 cmp         r0, #0
  00010	0a000002	 beq         |$LN3@PmUpdateSy|
  00014	eb000000	 bl          |?UpdateRegistryChange@SystemNotifyRegKey@@QAAHXZ|

; 171  : }

  00018	e49de004	 ldr         lr, [sp], #4
  0001c	e12fff1e	 bx          lr
  00020		 |$LN3@PmUpdateSy|

; 170  :     return (g_pSysRegistryAccess!=NULL?g_pSysRegistryAccess->UpdateRegistryChange():FALSE);

  00020	e3a00000	 mov         r0, #0

; 171  : }

  00024	e49de004	 ldr         lr, [sp], #4
  00028	e12fff1e	 bx          lr
  0002c		 |$LN8@PmUpdateSy|
  0002c		 |$LN9@PmUpdateSy|
  0002c	00000000	 DCD         |?g_pSysRegistryAccess@@3PAVSystemNotifyRegKey@@A|
  00030		 |$M35458|

			 ENDP  ; |PmUpdateSystemPowerStatesIfChanged|

; File c:\wince600\platform\z2170p\src\drivers\pm\dll\pmsysreg.h

  00000			 AREA	 |.pdata|, PDATA
|$T35472| DCD	|$LN5@Init@3|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Init@RegKey@@UAAHXZ| PROC		; RegKey::Init

; 118  :     BOOL Init() {  

  00000		 |$LN5@Init@3|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35469|

; 119  :         RefreshAll();

  00004	e3a01000	 mov         r1, #0
  00008	eb000000	 bl          |?RefreshAll@RegKey@@QAAHH@Z|

; 120  :         return TRUE; 

  0000c	e3a00001	 mov         r0, #1

; 121  :     };

  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$M35470|

			 ENDP  ; |?Init@RegKey@@UAAHXZ|, RegKey::Init


  00000			 AREA	 |.pdata|, PDATA
|$T35482| DCD	|$LN7@Init@4|
	DCD	0x40001501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Init@SystemNotifyRegKey@@UAAHXZ| PROC ; SystemNotifyRegKey::Init

; 307  :     BOOL Init() { 

  00000		 |$LN7@Init@4|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M35479|
  00004	e1a04000	 mov         r4, r0

; 308  :         if (m_RegKey!=NULL && m_hTerminated!=NULL && UpdateAllValue()) {

  00008	e5943010	 ldr         r3, [r4, #0x10]
  0000c	e3530000	 cmp         r3, #0
  00010	0a00000c	 beq         |$LN2@Init@4|
  00014	e594304c	 ldr         r3, [r4, #0x4C]
  00018	e3530000	 cmp         r3, #0
  0001c	0a000009	 beq         |$LN2@Init@4|
  00020	eb000000	 bl          |?UpdateAllValue@SystemNotifyRegKey@@QAAHXZ|
  00024	e3500000	 cmp         r0, #0
  00028	0a000006	 beq         |$LN2@Init@4|

; 309  :             m_fUpdated = TRUE;

  0002c	e3a03001	 mov         r3, #1

; 310  :             ThreadStart();

  00030	e284001c	 add         r0, r4, #0x1C
  00034	e5843050	 str         r3, [r4, #0x50]
  00038	eb000000	 bl          |?ThreadStart@CMiniThread@@QAAHXZ|

; 311  :             return TRUE;

  0003c	e3a00001	 mov         r0, #1

; 314  :     };

  00040	e8bd4010	 ldmia       sp!, {r4, lr}
  00044	e12fff1e	 bx          lr
  00048		 |$LN2@Init@4|

; 312  :         } else
; 313  :             return FALSE;

  00048	e3a00000	 mov         r0, #0

; 314  :     };

  0004c	e8bd4010	 ldmia       sp!, {r4, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$M35480|

			 ENDP  ; |?Init@SystemNotifyRegKey@@UAAHXZ|, SystemNotifyRegKey::Init

	EXPORT	|?EnterLock@SystemNotifyRegKey@@QAAXXZ|	; SystemNotifyRegKey::EnterLock
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T35493| DCD	|$LN8@EnterLock|
	DCD	0x40000a01
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\pm\dll\pmsysreg.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?EnterLock@SystemNotifyRegKey@@QAAXXZ| PROC ; SystemNotifyRegKey::EnterLock

; 328  :     void EnterLock() { 

  00000		 |$LN8@EnterLock|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M35490|
  00004	e1a04000	 mov         r4, r0

; 329  :         Lock(); 

  00008	e2840034	 add         r0, r4, #0x34
  0000c	eb000000	 bl          EnterCriticalSection

; 330  :         if ( m_fUpdated == FALSE)

  00010	e5943050	 ldr         r3, [r4, #0x50]
  00014	e3530000	 cmp         r3, #0

; 331  :             UpdateAllValue();

  00018	01a00004	 moveq       r0, r4
  0001c	0b000000	 bleq        |?UpdateAllValue@SystemNotifyRegKey@@QAAHXZ|

; 332  :     };

  00020	e8bd4010	 ldmia       sp!, {r4, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M35491|

			 ENDP  ; |?EnterLock@SystemNotifyRegKey@@QAAXXZ|, SystemNotifyRegKey::EnterLock

	EXPORT	|ppdpr$GSCopy$| [ DATA ]
	EXPORT	|ppsps$GSCopy$| [ DATA ]
	EXPORT	|pszName$GSCopy$| [ DATA ]
	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|RegReadSystemPowerState|
	EXPORT	|??_C@_1GE@MMHELMJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs?$AA?5?$AAm?$AAa?$AAx?$AA?5?$AAi?$AAs?$AA?5?$AAD?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@DAOJCFFI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?0?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@OMMOIGHI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAD?$AAx?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?3?$AA?5?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GI@OAKMIONE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAd?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?5?$AAD?$AAx?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AA?8@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@GHOECOCL@?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@EKIAOPAC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAO?$AAp?$AAe?$AAn?$AAK?$AAe?$AAy?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@HENPNAGF@?$AAR?$AAe?$AAa?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@LAGHHMEN@?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@DFKENGJN@?$AA?$CF?$AAs?$AA?2?$AA?$CF?$AAs?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@OCHLFFAP@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?1?$AAB?$AAo?$AAo?$AAt?$AAP?$AAh?$AAa?$AAs?$AAe?$AA2?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|SystemPowerStateCreate|
	IMPORT	|StringCbPrintfW|
	IMPORT	|OpenEventW|
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.bss|, NOINIT
|?fBootPhase2Reopen@?1??RegReadSystemPowerState@@9@4HA| % 0x4 ; `RegReadSystemPowerState'::`2'::fBootPhase2Reopen

  00000			 AREA	 |.pdata|, PDATA
|$T35589| DCD	|$LN76@RegReadSys|
	DCD	0xc000fd04

  00000			 AREA	 |.pdata|, PDATA
|$T35591| DCD	|$LN42@RegReadSys|
	DCD	0x40001602

  00000			 AREA	 |.xdata|, DATA
|$T35587| DCD	0x1
	DCD	|$LN46@RegReadSys|
	DCD	|$LN47@RegReadSys|
	DCD	|$LN42@RegReadSys|
	DCD	|$LN43@RegReadSys|
	DCD	0xffffffd4

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@MMHELMJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs?$AA?5?$AAm?$AAa?$AAx?$AA?5?$AAi?$AAs?$AA?5?$AAD?$AA?$CF@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s"
	DCB	0x0, "'", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "v", 0x0, "i"
	DCB	0x0, "c", 0x0, "e", 0x0, "s", 0x0, " ", 0x0, "m", 0x0, "a"
	DCB	0x0, "x", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "D"
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "f", 0x0, "l"
	DCB	0x0, "a", 0x0, "g", 0x0, "s", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@DAOJCFFI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?0?$AA?5@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "n"
	DCB	0x0, "'", 0x0, "t", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, " ", 0x0, "f", 0x0, "l", 0x0, "a", 0x0, "g"
	DCB	0x0, "s", 0x0, " ", 0x0, "f", 0x0, "r", 0x0, "o", 0x0, "m"
	DCB	0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'", 0x0, ","
	DCB	0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u"
	DCB	0x0, "s", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@OMMOIGHI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAD?$AAx?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?3?$AA?5?$AA?$CF@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "v"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "D"
	DCB	0x0, "x", 0x0, " ", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "u"
	DCB	0x0, "e", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@OAKMIONE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAd?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?5?$AAD?$AAx?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AA?8@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "n"
	DCB	0x0, "'", 0x0, "t", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "f", 0x0, "a"
	DCB	0x0, "u", 0x0, "l", 0x0, "t", 0x0, " ", 0x0, "D", 0x0, "x"
	DCB	0x0, " ", 0x0, "f", 0x0, "r", 0x0, "o", 0x0, "m", 0x0, " "
	DCB	0x0, "'", 0x0, "%", 0x0, "s", 0x0, "'", 0x0, ",", 0x0, " "
	DCB	0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s"
	DCB	0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@GHOECOCL@?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?$AA@| DCB "D", 0x0
	DCB	"e", 0x0, "f", 0x0, "a", 0x0, "u", 0x0, "l", 0x0, "t", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@EKIAOPAC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAO?$AAp?$AAe?$AAn?$AAK?$AAe?$AAy?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "g"
	DCB	0x0, "O", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "K", 0x0, "e"
	DCB	0x0, "y", 0x0, "E", 0x0, "x", 0x0, "(", 0x0, "'", 0x0, "%"
	DCB	0x0, "s", 0x0, "'", 0x0, ")", 0x0, " ", 0x0, "f", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@HENPNAGF@?$AAR?$AAe?$AAa?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, "S", 0x0, "y", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "m", 0x0, "P", 0x0, "o", 0x0, "w"
	DCB	0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@LAGHHMEN@?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@| DCB "S", 0x0, "t", 0x0
	DCB	"a", 0x0, "t", 0x0, "e", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| DCB "S"
	DCB	0x0, "Y", 0x0, "S", 0x0, "T", 0x0, "E", 0x0, "M", 0x0, "\\"
	DCB	0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "\\"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "\\", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e"
	DCB	0x0, "r", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@DFKENGJN@?$AA?$CF?$AAs?$AA?2?$AA?$CF?$AAs?$AA?$AA@| DCB "%", 0x0
	DCB	"s", 0x0, "\\", 0x0, "%", 0x0, "s", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@OCHLFFAP@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?1?$AAB?$AAo?$AAo?$AAt?$AAP?$AAh?$AAa?$AAs?$AAe?$AA2?$AA?$AA@| DCB "S"
	DCB	0x0, "Y", 0x0, "S", 0x0, "T", 0x0, "E", 0x0, "M", 0x0, "/"
	DCB	0x0, "B", 0x0, "o", 0x0, "o", 0x0, "t", 0x0, "P", 0x0, "h"
	DCB	0x0, "a", 0x0, "s", 0x0, "e", 0x0, "2", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\pm\dll\pmsysstate.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck_SEH|
  00004	00000000	 DCD         |$T35587|

  00008		 |RegReadSystemPowerState| PROC

; 183  : {

  00008		 |$LN76@RegReadSys|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d5ff0	 stmdb       sp!, {r4 - r12, lr}
  00010	e28db028	 add         r11, sp, #0x28
  00014	e24ddf89	 sub         sp, sp, #0x89, 30
  00018		 |$LN74@RegReadSys|
  00018	e1a0a002	 mov         r10, r2
  0001c	e1a02001	 mov         r2, r1
  00020	e50b2238	 str         r2, [r11, #-0x238]
  00024	e1a09000	 mov         r9, r0
  00028	e59f3420	 ldr         r3, [pc, #0x420]
  0002c	e5933000	 ldr         r3, [r3]
  00030	e50b302c	 str         r3, [r11, #-0x2C]

; 184  :     DWORD dwRetStatus = ERROR_SUCCESS;

  00034	e50b923c	 str         r9, [r11, #-0x23C]
  00038	e50b2244	 str         r2, [r11, #-0x244]
  0003c	e50ba240	 str         r10, [r11, #-0x240]
  00040	e3a04000	 mov         r4, #0

; 185  :     DWORD dwStatus, dwLen = MAX_PATH;

  00044	e3a08f41	 mov         r8, #0x41, 30

; 186  :     static BOOL fBootPhase2Reopen = FALSE;
; 187  :     RegKey *keyHandle;
; 188  :     TCHAR szPath[MAX_PATH];
; 189  : 
; 190  : #ifndef SHIP_BUILD
; 191  :     SETFNAME(_T("ReadSystemPowerState"));
; 192  : #endif
; 193  : 
; 194  :     PMLOCK();

  00048	eb000000	 bl          PmLock

; 195  :     if (!fBootPhase2Reopen) { // We need reopen the key if we migrate to Phase 2.

  0004c	e59f73f8	 ldr         r7, [pc, #0x3F8]
  00050	e5973000	 ldr         r3, [r7]
  00054	e3530000	 cmp         r3, #0
  00058	1a00001d	 bne         |$LN61@RegReadSys|

; 196  :         HANDLE hevBootPhase2 = OpenEvent(EVENT_ALL_ACCESS, FALSE, _T("SYSTEM/BootPhase2"));

  0005c	e59f23e4	 ldr         r2, [pc, #0x3E4]
  00060	e3a0381f	 mov         r3, #0x1F, 16
  00064	e3830003	 orr         r0, r3, #3
  00068	e3a01000	 mov         r1, #0
  0006c	eb000000	 bl          OpenEventW
  00070	e1b06000	 movs        r6, r0

; 197  :         if (hevBootPhase2) {

  00074	0a000014	 beq         |$LN19@RegReadSys|

; 198  :             if( WaitForSingleObject(hevBootPhase2, 0) == WAIT_OBJECT_0) { // If Phase2 Signaled.

  00078	e3a01000	 mov         r1, #0
  0007c	e1a00006	 mov         r0, r6
  00080	eb000000	 bl          WaitForSingleObject
  00084	e3500000	 cmp         r0, #0

; 199  :                 if (g_pSysRegistryAccess != NULL) {

  00088	e59f53a0	 ldr         r5, [pc, #0x3A0]

; 198  :             if( WaitForSingleObject(hevBootPhase2, 0) == WAIT_OBJECT_0) { // If Phase2 Signaled.

  0008c	1a00000b	 bne         |$LN18@RegReadSys|

; 199  :                 if (g_pSysRegistryAccess != NULL) {

  00090	e5950000	 ldr         r0, [r5]
  00094	e3500000	 cmp         r0, #0
  00098	0a000006	 beq         |$LN17@RegReadSys|

; 200  :                     delete g_pSysRegistryAccess;

  0009c	e5903000	 ldr         r3, [r0]
  000a0	e3a01001	 mov         r1, #1
  000a4	e5933004	 ldr         r3, [r3, #4]
  000a8	e1a0e00f	 mov         lr, pc
  000ac	e12fff13	 bx          r3

; 201  :                     g_pSysRegistryAccess = NULL;

  000b0	e3a03000	 mov         r3, #0
  000b4	e5853000	 str         r3, [r5]
  000b8		 |$LN17@RegReadSys|

; 202  :                 }
; 203  :                 fBootPhase2Reopen = TRUE;

  000b8	e3a03001	 mov         r3, #1
  000bc	e5873000	 str         r3, [r7]
  000c0		 |$LN18@RegReadSys|

; 204  :             }
; 205  :             CloseHandle(hevBootPhase2);

  000c0	e1a00006	 mov         r0, r6
  000c4	eb000000	 bl          CloseHandle

; 206  :         }
; 207  :         else

  000c8	ea000002	 b           |$LN16@RegReadSys|
  000cc		 |$LN19@RegReadSys|

; 208  :             fBootPhase2Reopen = TRUE; // If OpenEvent Failed, It meaning there is no Phase2 state. So We set it to by pass the checking.

  000cc	e3a03001	 mov         r3, #1
  000d0	e5873000	 str         r3, [r7]
  000d4		 |$LN61@RegReadSys|
  000d4	e59f5354	 ldr         r5, [pc, #0x354]
  000d8		 |$LN16@RegReadSys|

; 209  :     }
; 210  :     if (g_pSysRegistryAccess==NULL) {

  000d8	e5953000	 ldr         r3, [r5]
  000dc	e3530000	 cmp         r3, #0
  000e0	1a000028	 bne         |$LN62@RegReadSys|

; 211  :         // format the key name
; 212  :         StringCbPrintf(szPath, sizeof(szPath), _T("%s\\%s"), PWRMGR_REG_KEY, _T("State"));

  000e4	e59f1358	 ldr         r1, [pc, #0x358]
  000e8	e59f3350	 ldr         r3, [pc, #0x350]
  000ec	e59f2348	 ldr         r2, [pc, #0x348]
  000f0	e58d1000	 str         r1, [sp]
  000f4	e3a01f82	 mov         r1, #0x82, 30
  000f8	e24b0f8d	 sub         r0, r11, #0x8D, 30
  000fc	eb000000	 bl          StringCbPrintfW

; 213  :         dwLen = (dim(szPath) - 1) - _tcslen(szPath);

  00100	e24b0f8d	 sub         r0, r11, #0x8D, 30
  00104	eb000000	 bl          wcslen
  00108	e1a03000	 mov         r3, r0

; 214  :         g_pSysRegistryAccess = new SystemNotifyRegKey (HKEY_LOCAL_MACHINE,szPath);

  0010c	e3a00054	 mov         r0, #0x54
  00110	e3a02c01	 mov         r2, #1, 24
  00114	e3827003	 orr         r7, r2, #3
  00118	e0638007	 rsb         r8, r3, r7
  0011c	eb000000	 bl          |??2@YAPAXI@Z|
  00120	e3500000	 cmp         r0, #0
  00124	0a000003	 beq         |$LN25@RegReadSys|
  00128	e24b2f8d	 sub         r2, r11, #0x8D, 30
  0012c	e3a0110a	 mov         r1, #0xA, 2
  00130	eb000000	 bl          |??0SystemNotifyRegKey@@QAA@PAUHKEY__@@PBG@Z|
  00134	ea000000	 b           |$LN67@RegReadSys|
  00138		 |$LN25@RegReadSys|
  00138	e3a00000	 mov         r0, #0
  0013c		 |$LN67@RegReadSys|
  0013c	e5850000	 str         r0, [r5]

; 215  :         if (g_pSysRegistryAccess && g_pSysRegistryAccess->Init()== FALSE) {

  00140	e3500000	 cmp         r0, #0
  00144	0a000011	 beq         |$LN14@RegReadSys|
  00148	e5903000	 ldr         r3, [r0]
  0014c	e5933000	 ldr         r3, [r3]
  00150	e1a0e00f	 mov         lr, pc
  00154	e12fff13	 bx          r3
  00158	e3500000	 cmp         r0, #0
  0015c	1a00000b	 bne         |$LN14@RegReadSys|

; 216  :             delete g_pSysRegistryAccess;

  00160	e5950000	 ldr         r0, [r5]
  00164	e3500000	 cmp         r0, #0
  00168	15903000	 ldrne       r3, [r0]
  0016c	13a01001	 movne       r1, #1
  00170	15933004	 ldrne       r3, [r3, #4]
  00174	11a0e00f	 movne       lr, pc
  00178	112fff13	 bxne        r3

; 217  :             g_pSysRegistryAccess = NULL;

  0017c	e3a03000	 mov         r3, #0
  00180	e5853000	 str         r3, [r5]
  00184	ea000001	 b           |$LN14@RegReadSys|
  00188		 |$LN62@RegReadSys|
  00188	e3a03c01	 mov         r3, #1, 24
  0018c	e3837003	 orr         r7, r3, #3
  00190		 |$LN14@RegReadSys|

; 218  :         }
; 219  :     }
; 220  :     PMUNLOCK();

  00190	eb000000	 bl          PmUnlock

; 221  :     if (g_pSysRegistryAccess== NULL ) { // false to initialize the structure.

  00194	e5956000	 ldr         r6, [r5]
  00198	e3560000	 cmp         r6, #0
  0019c	1a000003	 bne         |$LN13@RegReadSys|

; 222  :         return ERROR_INVALID_PARAMETER;

  001a0	e51b002c	 ldr         r0, [r11, #-0x2C]
  001a4	eb000000	 bl          __security_check_cookie
  001a8	e3a04057	 mov         r4, #0x57
  001ac	ea00008e	 b           |$LN21@RegReadSys|
  001b0		 |$LN13@RegReadSys|

; 223  :     }
; 224  :     g_pSysRegistryAccess->EnterLock();

  001b0	e2860034	 add         r0, r6, #0x34
  001b4	eb000000	 bl          EnterCriticalSection
  001b8	e5963050	 ldr         r3, [r6, #0x50]
  001bc	e3530000	 cmp         r3, #0
  001c0	01a00006	 moveq       r0, r6
  001c4	0b000000	 bleq        |?UpdateAllValue@SystemNotifyRegKey@@QAAHXZ|
  001c8		 |$LN46@RegReadSys|

; 225  :     __try {
; 226  :         // copy the name and make sure it's null terminated
; 227  :         _tcsncpy(szPath, pszName, dwLen);

  001c8	e1a02008	 mov         r2, r8
  001cc	e1a01009	 mov         r1, r9
  001d0	e24b0f8d	 sub         r0, r11, #0x8D, 30
  001d4	eb000000	 bl          wcsncpy

; 228  :         szPath[dim(szPath) - 1] = 0;

  001d8	e3a03000	 mov         r3, #0
  001dc	e14b32be	 strh        r3, [r11, #-0x2E]
  001e0		 |$LN47@RegReadSys|

; 229  :     }

  001e0	e59f6250	 ldr         r6, [pc, #0x250]
  001e4	ea00000d	 b           |$LN48@RegReadSys|
  001e8		 |$LN43@RegReadSys|

; 231  :         PMLOGMSG(ZONE_WARN, (_T("%s: exception copying state name\r\n"), pszFname));

  001e8	e59f6248	 ldr         r6, [pc, #0x248]
  001ec	e5963440	 ldr         r3, [r6, #0x440]
  001f0	e3130002	 tst         r3, #2
  001f4	159f0238	 ldrne       r0, [pc, #0x238]
  001f8	159f1210	 ldrne       r1, [pc, #0x210]
  001fc	1b000000	 blne        CeLogMsg

; 232  :         dwRetStatus = ERROR_INVALID_PARAMETER;

  00200	e3a04057	 mov         r4, #0x57
  00204	e59f5224	 ldr         r5, [pc, #0x224]
  00208	e51b923c	 ldr         r9, [r11, #-0x23C]
  0020c	e51b3244	 ldr         r3, [r11, #-0x244]
  00210	e50b3238	 str         r3, [r11, #-0x238]
  00214	e51ba240	 ldr         r10, [r11, #-0x240]
  00218	e3a03c01	 mov         r3, #1, 24
  0021c	e3837003	 orr         r7, r3, #3
  00220		 |$LN48@RegReadSys|

; 233  :     }
; 234  :     
; 235  :     keyHandle = g_pSysRegistryAccess->RegFindKey(szPath);

  00220	e5950000	 ldr         r0, [r5]
  00224	e24b1f8d	 sub         r1, r11, #0x8D, 30
  00228	eb000000	 bl          |?RegFindKey@RegKey@@QAAPAV1@PBG@Z|
  0022c	e1b08000	 movs        r8, r0

; 236  :     if(keyHandle == NULL ) {

  00230	1a000009	 bne         |$LN11@RegReadSys|

; 237  :         PMLOGMSG(ZONE_WARN | ZONE_REGISTRY, 
; 238  :             (_T("%s: RegOpenKeyEx('%s') failed\r\n"), pszFname, szPath));

  00234	e5962440	 ldr         r2, [r6, #0x440]
  00238	e3a03c02	 mov         r3, #2, 24
  0023c	e3833002	 orr         r3, r3, #2
  00240	e1120003	 tst         r2, r3
  00244	159f01e0	 ldrne       r0, [pc, #0x1E0]
  00248	124b2f8d	 subne       r2, r11, #0x8D, 30
  0024c	159f11bc	 ldrne       r1, [pc, #0x1BC]
  00250	1b000000	 blne        CeLogMsg

; 239  :         dwRetStatus = ERROR_NO_MORE_ITEMS ;

  00254	e1a04007	 mov         r4, r7

; 240  :     } else {

  00258	ea00005c	 b           |$LN1@RegReadSys|
  0025c		 |$LN11@RegReadSys|

; 241  :         DWORD dwDefaultDx = 0;
; 242  : 		DWORD dwFlags	  = 0;
; 243  : 		DWORD dwSize	  = 0;
; 244  : 		DWORD dwType	  = 0;
; 245  : 
; 246  :         // read the default power state and the flags -- both values
; 247  :         // must be present
; 248  :         dwSize = sizeof(dwDefaultDx);
; 249  :         dwStatus = keyHandle->RegFindValue(_T("Default"), &dwDefaultDx, &dwSize, &dwType);

  0025c	e59f11c4	 ldr         r1, [pc, #0x1C4]
  00260	e3a07000	 mov         r7, #0
  00264	e24bef8f	 sub         lr, r11, #0x8F, 30
  00268	e24b3d09	 sub         r3, r11, #9, 26
  0026c	e24b2f92	 sub         r2, r11, #0x92, 30
  00270	e1a00008	 mov         r0, r8
  00274	e50b7248	 str         r7, [r11, #-0x248]
  00278	e3a07000	 mov         r7, #0
  0027c	e50b7244	 str         r7, [r11, #-0x244]
  00280	e3a07000	 mov         r7, #0
  00284	e50b723c	 str         r7, [r11, #-0x23C]
  00288	e3a07004	 mov         r7, #4
  0028c	e50b7240	 str         r7, [r11, #-0x240]
  00290	e58de000	 str         lr, [sp]
  00294	eb000000	 bl          |?RegFindValue@RegKey@@QAAJPBGPAXPAK2@Z|
  00298	e1b07000	 movs        r7, r0

; 250  :         if(dwStatus != ERROR_SUCCESS) {

  0029c	0a000007	 beq         |$LN64@RegReadSys|

; 251  :             PMLOGMSG(ZONE_WARN, 
; 252  :                 (_T("%s: can't read default Dx from '%s', status is %d\r\n"),
; 253  :                 pszFname, szPath, dwStatus));

  002a0	e5963440	 ldr         r3, [r6, #0x440]
  002a4	e3130002	 tst         r3, #2
  002a8	159f0174	 ldrne       r0, [pc, #0x174]
  002ac	11a03007	 movne       r3, r7
  002b0	124b2f8d	 subne       r2, r11, #0x8D, 30
  002b4	159f1154	 ldrne       r1, [pc, #0x154]
  002b8	1b000000	 blne        CeLogMsg

; 254  :             dwRetStatus = dwStatus;

  002bc	e1a04007	 mov         r4, r7
  002c0		 |$LN64@RegReadSys|

; 255  :         }
; 256  :         if(dwDefaultDx < D0 || dwDefaultDx > D4) {

  002c0	e51b1248	 ldr         r1, [r11, #-0x248]
  002c4	e3510004	 cmp         r1, #4
  002c8	9a000009	 bls         |$LN8@RegReadSys|
  002cc	e5962440	 ldr         r2, [r6, #0x440]

; 257  :             PMLOGMSG(ZONE_WARN,
; 258  :                 (_T("%s: invalid Dx value for '%s': %d\r\n"), pszFname,
; 259  :                 pszName, dwDefaultDx));

  002d0	e3120002	 tst         r2, #2
  002d4	0a000005	 beq         |$LN35@RegReadSys|
  002d8	e59f0140	 ldr         r0, [pc, #0x140]
  002dc	e1a03001	 mov         r3, r1
  002e0	e1a02009	 mov         r2, r9
  002e4	e59f1124	 ldr         r1, [pc, #0x124]
  002e8	eb000000	 bl          CeLogMsg
  002ec	e51b1248	 ldr         r1, [r11, #-0x248]
  002f0		 |$LN35@RegReadSys|

; 260  :             dwRetStatus = ERROR_INVALID_DATA;

  002f0	e3a0400d	 mov         r4, #0xD
  002f4		 |$LN8@RegReadSys|

; 261  :         }
; 262  : 
; 263  :         if(dwRetStatus == ERROR_SUCCESS) {

  002f4	e3540000	 cmp         r4, #0
  002f8	1a000034	 bne         |$LN1@RegReadSys|

; 264  :             dwSize = sizeof(dwFlags);
; 265  :             dwStatus =keyHandle->RegFindValue( _T("Flags"), &dwFlags, &dwSize, &dwType);

  002fc	e59f1118	 ldr         r1, [pc, #0x118]
  00300	e3a07004	 mov         r7, #4
  00304	e24bef8f	 sub         lr, r11, #0x8F, 30
  00308	e24b3d09	 sub         r3, r11, #9, 26
  0030c	e24b2f91	 sub         r2, r11, #0x91, 30
  00310	e1a00008	 mov         r0, r8
  00314	e50b7240	 str         r7, [r11, #-0x240]
  00318	e58de000	 str         lr, [sp]
  0031c	eb000000	 bl          |?RegFindValue@RegKey@@QAAJPBGPAXPAK2@Z|
  00320	e1b07000	 movs        r7, r0

; 266  :             if(dwStatus != ERROR_SUCCESS) {

  00324	0a000007	 beq         |$LN65@RegReadSys|
  00328	e5963440	 ldr         r3, [r6, #0x440]

; 267  :                 PMLOGMSG(ZONE_WARN, 
; 268  :                     (_T("%s: can't read flags from '%s', status is %d\r\n"),
; 269  :                     pszFname, szPath, dwStatus));

  0032c	e3130002	 tst         r3, #2
  00330	159f00e0	 ldrne       r0, [pc, #0xE0]
  00334	11a03007	 movne       r3, r7
  00338	124b2f8d	 subne       r2, r11, #0x8D, 30
  0033c	159f10cc	 ldrne       r1, [pc, #0xCC]
  00340	1b000000	 blne        CeLogMsg

; 270  :                 dwRetStatus = dwStatus;

  00344	e1a04007	 mov         r4, r7
  00348		 |$LN65@RegReadSys|
  00348	e51b1248	 ldr         r1, [r11, #-0x248]

; 271  :             }
; 272  :         }
; 273  : 
; 274  :         PMLOGMSG(dwRetStatus == ERROR_SUCCESS && ZONE_REGISTRY,
; 275  :             (_T("%s: state '%s' devices max is D%d, flags 0x%08x\r\n"),
; 276  :             pszFname, pszName, dwDefaultDx, dwFlags));

  0034c	e3540000	 cmp         r4, #0
  00350	1a00001e	 bne         |$LN1@RegReadSys|
  00354	e5963440	 ldr         r3, [r6, #0x440]
  00358	e3130c02	 tst         r3, #2, 24
  0035c	151b2244	 ldrne       r2, [r11, #-0x244]
  00360	159f00ac	 ldrne       r0, [pc, #0xAC]
  00364	11a03001	 movne       r3, r1
  00368	158d2000	 strne       r2, [sp]
  0036c	11a02009	 movne       r2, r9
  00370	159f1098	 ldrne       r1, [pc, #0x98]
  00374	1b000000	 blne        CeLogMsg

; 277  :         if(dwRetStatus == ERROR_SUCCESS && ppsps != NULL) {

  00378	e3540000	 cmp         r4, #0
  0037c	1a000013	 bne         |$LN1@RegReadSys|
  00380	e51b6238	 ldr         r6, [r11, #-0x238]
  00384	e3560000	 cmp         r6, #0
  00388	0a000009	 beq         |$LN2@RegReadSys|

; 278  :             // allocate and initialize a system power state
; 279  :             PSYSTEM_POWER_STATE psps = SystemPowerStateCreate(pszName);

  0038c	e1a00009	 mov         r0, r9
  00390	eb000000	 bl          SystemPowerStateCreate
  00394	e3500000	 cmp         r0, #0

; 281  :                 dwRetStatus = ERROR_OUTOFMEMORY;

  00398	03a0400e	 moveq       r4, #0xE

; 280  :             if(psps == NULL) {

  0039c	0a00000b	 beq         |$LN1@RegReadSys|

; 282  :             } else {
; 283  :                 // initialize the structure
; 284  :                 psps->defaultCeilingDx = (CEDEVICE_POWER_STATE) dwDefaultDx;

  003a0	e51b3248	 ldr         r3, [r11, #-0x248]
  003a4	e5803004	 str         r3, [r0, #4]

; 285  :                 psps->dwFlags = dwFlags;

  003a8	e51b3244	 ldr         r3, [r11, #-0x244]
  003ac	e5803008	 str         r3, [r0, #8]

; 286  :                 *ppsps = psps;

  003b0	e5860000	 str         r0, [r6]
  003b4		 |$LN2@RegReadSys|

; 287  :             }
; 288  :         }
; 289  :     }
; 290  : 
; 291  :     // read device power modifiers for all associated devices
; 292  :     if(dwRetStatus == ERROR_SUCCESS && ppdpr != NULL) {

  003b4	e3540000	 cmp         r4, #0
  003b8	1a000004	 bne         |$LN1@RegReadSys|
  003bc	e35a0000	 cmp         r10, #0
  003c0	0a000002	 beq         |$LN1@RegReadSys|

; 293  :         PDEVICE_POWER_RESTRICTION pdpr = RegReadDeviceRestrictions(keyHandle);

  003c4	e1a00008	 mov         r0, r8
  003c8	eb000000	 bl          |?RegReadDeviceRestrictions@@YAPAU_DevicePowerRestriction_tag@@PAVRegKey@@@Z|

; 294  :         *ppdpr = pdpr;

  003cc	e58a0000	 str         r0, [r10]
  003d0		 |$LN1@RegReadSys|

; 295  :     }
; 296  : 
; 297  :     g_pSysRegistryAccess->LeaveLock();

  003d0	e5953000	 ldr         r3, [r5]
  003d4	e2830034	 add         r0, r3, #0x34
  003d8	eb000000	 bl          LeaveCriticalSection

; 298  :     
; 299  :     return dwRetStatus;

  003dc	e51b002c	 ldr         r0, [r11, #-0x2C]
  003e0	eb000000	 bl          __security_check_cookie
  003e4	ea000000	 b           |$LN21@RegReadSys|
  003e8		 |$LN66@RegReadSys|
  003e8	e51b4238	 ldr         r4, [r11, #-0x238]
  003ec		 |$LN21@RegReadSys|

; 300  : }

  003ec	e1a00004	 mov         r0, r4
  003f0	e24bd028	 sub         sp, r11, #0x28
  003f4	e89d6ff0	 ldmia       sp, {r4 - r11, sp, lr}
  003f8	e12fff1e	 bx          lr

			 ENDP  ; |RegReadSystemPowerState|

  003fc		 |$LN42@RegReadSys|
  003fc		 |$LN75@RegReadSys|

; 230  :     __except(EXCEPTION_EXECUTE_HANDLER) {

  003fc	e52de004	 str         lr, [sp, #-4]!
  00400	e24dd004	 sub         sp, sp, #4
  00404		 |$LN45@RegReadSys|
  00404		 |$LN78@RegReadSys|
  00404	e3a00001	 mov         r0, #1
  00408		 |$LN44@RegReadSys|
  00408	e28dd004	 add         sp, sp, #4
  0040c	e49df004	 ldr         pc, [sp], #4
  00410		 |$LN80@RegReadSys|
  00410		 |$LN81@RegReadSys|
  00410	00000000	 DCD         |??_C@_1CK@HENPNAGF@?$AAR?$AAe?$AAa?$AAd?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
  00414		 |$LN82@RegReadSys|
  00414	00000000	 DCD         |??_C@_1GE@MMHELMJI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAd?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs?$AA?5?$AAm?$AAa?$AAx?$AA?5?$AAi?$AAs?$AA?5?$AAD?$AA?$CF@|
  00418		 |$LN83@RegReadSys|
  00418	00000000	 DCD         |??_C@_1FO@DAOJCFFI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAf?$AAl?$AAa?$AAg?$AAs?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?0?$AA?5@|
  0041c		 |$LN84@RegReadSys|
  0041c	00000000	 DCD         |??_C@_1M@OAJFFPML@?$AAF?$AAl?$AAa?$AAg?$AAs?$AA?$AA@|
  00420		 |$LN85@RegReadSys|
  00420	00000000	 DCD         |??_C@_1EI@OMMOIGHI@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAD?$AAx?$AA?5?$AAv?$AAa?$AAl?$AAu?$AAe?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?3?$AA?5?$AA?$CF@|
  00424		 |$LN86@RegReadSys|
  00424	00000000	 DCD         |??_C@_1GI@OAKMIONE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAd?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?5?$AAD?$AAx?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AA?8@|
  00428		 |$LN87@RegReadSys|
  00428	00000000	 DCD         |??_C@_1BA@GHOECOCL@?$AAD?$AAe?$AAf?$AAa?$AAu?$AAl?$AAt?$AA?$AA@|
  0042c		 |$LN88@RegReadSys|
  0042c	00000000	 DCD         |??_C@_1EA@EKIAOPAC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAg?$AAO?$AAp?$AAe?$AAn?$AAK?$AAe?$AAy?$AAE?$AAx?$AA?$CI?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$CJ?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00430		 |$LN89@RegReadSys|
  00430	00000000	 DCD         |?g_pSysRegistryAccess@@3PAVSystemNotifyRegKey@@A|
  00434		 |$LN90@RegReadSys|
  00434	00000000	 DCD         |??_C@_1EG@GMKIAPMN@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAc?$AAo?$AAp?$AAy?$AAi?$AAn?$AAg?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAa?$AAm?$AAe@|
  00438		 |$LN91@RegReadSys|
  00438	00000000	 DCD         |dpCurSettings|
  0043c		 |$LN92@RegReadSys|
  0043c	00000000	 DCD         |??_C@_1M@DFKENGJN@?$AA?$CF?$AAs?$AA?2?$AA?$CF?$AAs?$AA?$AA@|
  00440		 |$LN93@RegReadSys|
  00440	00000000	 DCD         |??_C@_1EO@PFEFPDAL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@|
  00444		 |$LN94@RegReadSys|
  00444	00000000	 DCD         |??_C@_1M@LAGHHMEN@?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AA@|
  00448		 |$LN95@RegReadSys|
  00448	00000000	 DCD         |??_C@_1CE@OCHLFFAP@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?1?$AAB?$AAo?$AAo?$AAt?$AAP?$AAh?$AAa?$AAs?$AAe?$AA2?$AA?$AA@|
  0044c		 |$LN96@RegReadSys|
  0044c	00000000	 DCD         |?fBootPhase2Reopen@?1??RegReadSystemPowerState@@9@4HA|
  00450		 |$LN97@RegReadSys|
  00450	00000000	 DCD         |__security_cookie|
  00454		 |$LN79@RegReadSys|
  00454		 |$LN77@RegReadSys|
	END
