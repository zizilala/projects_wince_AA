; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\Z2170P\SRC\DRIVERS\PM\DLL\pmrelation.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|__$ArrayPad$| [ DATA ]
	IMPORT	|CeLogData|
	IMPORT	|StringCchLengthW|
	IMPORT	|StringCchVPrintfW|
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_cookie|
	IMPORT	|__security_check_cookie|
; File c:\wince600\public\common\sdk\inc\celog.h

  00000			 AREA	 |.pdata|, PDATA
|$T33635| DCD	|$LN7@CeLogMsg|
	DCD	0xc0002a04

  00000			 AREA	 |.xdata|, DATA
|$T33631| DCD	0xffffffe0
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T33631|

  00008		 |CeLogMsg| PROC

; 1015 : {

  00008		 |$LN7@CeLogMsg|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d000f	 stmdb       sp!, {r0 - r3}
  00010	e92d5010	 stmdb       sp!, {r4, r12, lr}
  00014	e24dde22	 sub         sp, sp, #0x22, 28
  00018		 |$M33632|
  00018	e58d022c	 str         r0, [sp, #0x22C]
  0001c	e59f3088	 ldr         r3, [pc, #0x88]
  00020	e5933000	 ldr         r3, [r3]
  00024	e58d321c	 str         r3, [sp, #0x21C]

; 1016 :     va_list arglist;
; 1017 :     WCHAR   szTemp[MAX_PATH];
; 1018 :     size_t  cchLen;
; 1019 :     HRESULT hr;
; 1020 : 
; 1021 :     // Compose a single string using the input args
; 1022 :     va_start(arglist, szFormat);
; 1023 :     hr = StringCchVPrintfW(szTemp, MAX_PATH, szFormat, arglist);

  00028	e1a02000	 mov         r2, r0
  0002c	e28d0014	 add         r0, sp, #0x14
  00030	e28d3e23	 add         r3, sp, #0x23, 28
  00034	e3a01f41	 mov         r1, #0x41, 30
  00038	eb000000	 bl          StringCchVPrintfW
  0003c	e3500000	 cmp         r0, #0

; 1024 :     if (SUCCEEDED(hr)) {

  00040	4a000014	 bmi         |$LN1@CeLogMsg|

; 1025 :         hr = StringCchLengthW(szTemp, MAX_PATH, &cchLen);

  00044	e28d2010	 add         r2, sp, #0x10
  00048	e3a01f41	 mov         r1, #0x41, 30
  0004c	e28d0014	 add         r0, sp, #0x14
  00050	eb000000	 bl          StringCchLengthW
  00054	e3500000	 cmp         r0, #0

; 1026 :         if (SUCCEEDED(hr)) {

  00058	4a00000e	 bmi         |$LN1@CeLogMsg|

; 1027 :             CeLogData(TRUE, CELID_RAW_WCHAR, szTemp, (WORD)((cchLen + 1) * sizeof(WCHAR)),
; 1028 :                       0, CELZONE_ALWAYSON, 0, FALSE);

  0005c	e59d3010	 ldr         r3, [sp, #0x10]
  00060	e3a04101	 mov         r4, #1, 2
  00064	e3a0e000	 mov         lr, #0
  00068	e2833001	 add         r3, r3, #1
  0006c	e1a03083	 mov         r3, r3, lsl #1
  00070	e1a03803	 mov         r3, r3, lsl #16
  00074	e1a03823	 mov         r3, r3, lsr #16
  00078	e28d2014	 add         r2, sp, #0x14
  0007c	e3a0104a	 mov         r1, #0x4A
  00080	e3a00001	 mov         r0, #1
  00084	e58de00c	 str         lr, [sp, #0xC]
  00088	e58de008	 str         lr, [sp, #8]
  0008c	e58d4004	 str         r4, [sp, #4]
  00090	e58de000	 str         lr, [sp]
  00094	eb000000	 bl          CeLogData
  00098		 |$LN1@CeLogMsg|
  00098	e59d021c	 ldr         r0, [sp, #0x21C]
  0009c	eb000000	 bl          __security_check_cookie

; 1029 :         }
; 1030 :     }
; 1031 : }

  000a0	e28dde22	 add         sp, sp, #0x22, 28
  000a4	e89d6010	 ldmia       sp, {r4, sp, lr}
  000a8	e12fff1e	 bx          lr
  000ac		 |$LN8@CeLogMsg|
  000ac		 |$LN9@CeLogMsg|
  000ac	00000000	 DCD         |__security_cookie|
  000b0		 |$M33633|

			 ENDP  ; |CeLogMsg|

	EXPORT	|PmRegisterPowerRelationship|
	EXPORT	|??_C@_1EK@KBCPAFO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AAi?$AAs?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@GFDCDANC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAf?$AAi?$AAn?$AAd?$AA?5?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@NJGFJEJM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAa?$AAl?$AAs?$AAo?$AA?5?$AAb?$AAe?$AA?5?$AAa?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@GPNMCGNE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAf?$AAi?$AAn?$AAd?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EA@FDDAEBKJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAh?$AAi?$AAl?$AAd?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAa?$AAl?$AAr?$AAe?$AAa?$AAd?$AAy?$AA?5?$AAe?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@DGDFELFJ@?$AAP?$AAm?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AAh?$AAi?$AAp?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1M@LFABOLDL@?$AA?$CL?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|SetLastError|
	IMPORT	|DeviceIdDestroy|
	IMPORT	|AddDevice|
	IMPORT	|DeviceStateDecRef|
	IMPORT	|DeviceStateFindList|
	IMPORT	|GetDeviceListFromClass|
	IMPORT	|DeviceIdParseNameString|
	IMPORT	|dpCurSettings|
; File c:\wince600\platform\z2170p\src\drivers\pm\dll\pmrelation.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T33674| DCD	|$LN39@PmRegister|
	DCD	0x40008602

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@KBCPAFO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AAi?$AAs?$AA?5@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t"
	DCB	0x0, "u", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, ",", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "u", 0x0, "s", 0x0, " ", 0x0, "i", 0x0, "s"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@GFDCDANC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAf?$AAi?$AAn?$AAd?$AA?5?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "n"
	DCB	0x0, "'", 0x0, "t", 0x0, " ", 0x0, "f", 0x0, "i", 0x0, "n"
	DCB	0x0, "d", 0x0, " ", 0x0, "c", 0x0, "l", 0x0, "a", 0x0, "s"
	DCB	0x0, "s", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "p", 0x0, "a", 0x0, "r", 0x0, "e", 0x0, "n", 0x0, "t"
	DCB	0x0, " ", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "c", 0x0, "h"
	DCB	0x0, "i", 0x0, "l", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@NJGFJEJM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAa?$AAl?$AAs?$AAo?$AA?5?$AAb?$AAe?$AA?5?$AAa?$AA?5@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r"
	DCB	0x0, "e", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "'", 0x0, "%"
	DCB	0x0, "s", 0x0, "'", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "n"
	DCB	0x0, "'", 0x0, "t", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "s"
	DCB	0x0, "o", 0x0, " ", 0x0, "b", 0x0, "e", 0x0, " ", 0x0, "a"
	DCB	0x0, " ", 0x0, "c", 0x0, "h", 0x0, "i", 0x0, "l", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@GPNMCGNE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAf?$AAi?$AAn?$AAd?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "a", 0x0, "n"
	DCB	0x0, "'", 0x0, "t", 0x0, " ", 0x0, "f", 0x0, "i", 0x0, "n"
	DCB	0x0, "d", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s"
	DCB	0x0, "'", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@FDDAEBKJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAh?$AAi?$AAl?$AAd?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAa?$AAl?$AAr?$AAe?$AAa?$AAd?$AAy?$AA?5?$AAe?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "h", 0x0, "i"
	DCB	0x0, "l", 0x0, "d", 0x0, " ", 0x0, "'", 0x0, "%", 0x0, "s"
	DCB	0x0, "'", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, "y", 0x0, " ", 0x0, "e", 0x0, "x"
	DCB	0x0, "i", 0x0, "s", 0x0, "t", 0x0, "s", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@DGDFELFJ@?$AAP?$AAm?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AAh?$AAi?$AAp?$AA?$AA@| DCB "P"
	DCB	0x0, "m", 0x0, "R", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "P", 0x0, "o", 0x0, "w"
	DCB	0x0, "e", 0x0, "r", 0x0, "R", 0x0, "e", 0x0, "l", 0x0, "a"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "s", 0x0, "h"
	DCB	0x0, "i", 0x0, "p", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@LFABOLDL@?$AA?$CL?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "+", 0x0
	DCB	"%", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PmRegisterPowerRelationship| PROC

; 40   : {

  00000		 |$LN39@PmRegister|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M33671|
  00008	e1a0b003	 mov         r11, r3
  0000c	e1a03002	 mov         r3, r2
  00010	e58d3000	 str         r3, [sp]
  00014	e1a0a001	 mov         r10, r1
  00018	e1a05000	 mov         r5, r0

; 41   :     PDEVICEID pdiParent = NULL, pdiChild = NULL;
; 42   :     PDEVICE_LIST pdlParent = NULL;
; 43   : 	PDEVICE_LIST pdlChild = NULL;
; 44   :     PDEVICE_STATE pdsParent = NULL;
; 45   :     PDEVICE_STATE pdsChild = NULL;
; 46   :     DWORD dwStatus = ERROR_SUCCESS;
; 47   : 
; 48   : #ifndef SHIP_BUILD
; 49   :     SETFNAME(_T("PmRegisterPowerRelationship"));
; 50   : #endif
; 51   : 
; 52   :     PMLOGMSG(ZONE_API, (_T("+%s\r\n"), pszFname));

  0001c	e59f61f0	 ldr         r6, [pc, #0x1F0]
  00020	e3a09000	 mov         r9, #0
  00024	e3a07000	 mov         r7, #0
  00028	e596e440	 ldr         lr, [r6, #0x440]
  0002c	e3a08000	 mov         r8, #0
  00030	e3a04000	 mov         r4, #0
  00034	e31e0b02	 tst         lr, #2, 22
  00038	159f01d0	 ldrne       r0, [pc, #0x1D0]
  0003c	159f11b4	 ldrne       r1, [pc, #0x1B4]
  00040	1b000000	 blne        CeLogMsg

; 53   : 
; 54   :     // sanity check parameters
; 55   :     if(pvParent == NULL 
; 56   :     || pvChild == NULL
; 57   :     || (pdiParent = DeviceIdParseNameString((LPCTSTR) pvParent, dwFlags)) == NULL
; 58   :     || (pdiChild = DeviceIdParseNameString((LPCTSTR) pvChild, dwFlags)) == NULL) {

  00044	e3550000	 cmp         r5, #0
  00048	0a000050	 beq         |$LN36@PmRegister|
  0004c	e35a0000	 cmp         r10, #0
  00050	0a00004e	 beq         |$LN36@PmRegister|
  00054	e1a0100b	 mov         r1, r11
  00058	e1a00005	 mov         r0, r5
  0005c	eb000000	 bl          DeviceIdParseNameString
  00060	e1b09000	 movs        r9, r0
  00064	0a000049	 beq         |$LN36@PmRegister|
  00068	e1a0100b	 mov         r1, r11
  0006c	e1a0000a	 mov         r0, r10
  00070	eb000000	 bl          DeviceIdParseNameString
  00074	e1b07000	 movs        r7, r0
  00078	0a000044	 beq         |$LN36@PmRegister|

; 60   :     }
; 61   : 
; 62   :     // parameters ok so far?
; 63   :     if(dwStatus == ERROR_SUCCESS) {
; 64   :         pdlChild = GetDeviceListFromClass(pdiChild->pGuid);

  0007c	e5970000	 ldr         r0, [r7]
  00080	eb000000	 bl          GetDeviceListFromClass
  00084	e1a0a000	 mov         r10, r0

; 65   :         if(dwStatus == ERROR_SUCCESS) {
; 66   :             // Look up device lists for parent and child, plus the parent
; 67   :             // and child device structures.  The child cannot already exist.
; 68   :             pdlParent = GetDeviceListFromClass(pdiParent->pGuid);

  00088	e5990000	 ldr         r0, [r9]
  0008c	eb000000	 bl          GetDeviceListFromClass
  00090	e1b05000	 movs        r5, r0

; 69   :             if(pdlParent == NULL || pdlChild == NULL) {

  00094	0a000038	 beq         |$LN13@PmRegister|
  00098	e35a0000	 cmp         r10, #0
  0009c	0a000036	 beq         |$LN13@PmRegister|

; 72   :                 dwStatus = ERROR_INVALID_PARAMETER;
; 73   :             } else if((pdsChild = DeviceStateFindList(pdlChild, pdiChild->pszName)) != NULL) {

  000a0	e5971004	 ldr         r1, [r7, #4]
  000a4	e1a0000a	 mov         r0, r10
  000a8	eb000000	 bl          DeviceStateFindList
  000ac	e1b08000	 movs        r8, r0
  000b0	0a000009	 beq         |$LN11@PmRegister|

; 74   :                 PMLOGMSG(ZONE_WARN, (_T("%s: child '%s' already exists\r\n"),
; 75   :                     pszFname, pdiChild->pszName));

  000b4	e5963440	 ldr         r3, [r6, #0x440]
  000b8	e3130002	 tst         r3, #2
  000bc	15972004	 ldrne       r2, [r7, #4]
  000c0	159f0144	 ldrne       r0, [pc, #0x144]
  000c4	159f112c	 ldrne       r1, [pc, #0x12C]
  000c8	1b000000	 blne        CeLogMsg

; 76   :                 DeviceStateDecRef(pdsChild);

  000cc	e1a00008	 mov         r0, r8
  000d0	eb000000	 bl          DeviceStateDecRef

; 77   :                 dwStatus = ERROR_FILE_EXISTS;

  000d4	e3a04050	 mov         r4, #0x50

; 78   :             } else {

  000d8	ea00002d	 b           |$LN3@PmRegister|
  000dc		 |$LN11@PmRegister|

; 79   :                 pdsParent = DeviceStateFindList(pdlParent, pdiParent->pszName);

  000dc	e5991004	 ldr         r1, [r9, #4]
  000e0	e1a00005	 mov         r0, r5
  000e4	eb000000	 bl          DeviceStateFindList
  000e8	e1b05000	 movs        r5, r0

; 80   :                 if(pdsParent == NULL) {

  000ec	1a000007	 bne         |$LN9@PmRegister|
  000f0	e5963440	 ldr         r3, [r6, #0x440]

; 81   :                     PMLOGMSG(ZONE_WARN, (_T("%s: can't find parent '%s'\r\n"), 
; 82   :                         pszFname, pdiParent->pszName));

  000f4	e3130002	 tst         r3, #2
  000f8	15992004	 ldrne       r2, [r9, #4]
  000fc	159f0104	 ldrne       r0, [pc, #0x104]
  00100	159f10f0	 ldrne       r1, [pc, #0xF0]
  00104	1b000000	 blne        CeLogMsg

; 83   :                     dwStatus = ERROR_INVALID_PARAMETER;

  00108	e3a04057	 mov         r4, #0x57
  0010c	ea000015	 b           |$LN4@PmRegister|
  00110		 |$LN9@PmRegister|

; 84   :                 } else if(pdsParent->pParent != NULL) {

  00110	e5953024	 ldr         r3, [r5, #0x24]
  00114	e3530000	 cmp         r3, #0

; 85   :                     PMLOGMSG(ZONE_WARN, (_T("%s: parent '%s' can't also be a child\r\n"),
; 86   :                         pszFname, pdsParent->pszName));

  00118	15963440	 ldrne       r3, [r6, #0x440]
  0011c	13130002	 tstne       r3, #2
  00120	15952000	 ldrne       r2, [r5]
  00124	159f00d8	 ldrne       r0, [pc, #0xD8]
  00128	159f10c8	 ldrne       r1, [pc, #0xC8]
  0012c	1b000000	 blne        CeLogMsg

; 87   :                 }
; 88   :             }
; 89   :         }
; 90   :     }
; 91   : 
; 92   :     // if parameters were ok, proceed
; 93   :     if(dwStatus == ERROR_SUCCESS) {
; 94   :         // create and/or initialize the new device
; 95   :         AddDevice(pdiChild->pGuid, pdiChild->pszName, pdsParent, pCaps);

  00130	e5971004	 ldr         r1, [r7, #4]
  00134	e5970000	 ldr         r0, [r7]
  00138	e59d3000	 ldr         r3, [sp]
  0013c	e1a02005	 mov         r2, r5
  00140	eb000000	 bl          AddDevice

; 96   : 
; 97   :         // get the return value
; 98   :         pdsChild = DeviceStateFindList(pdlChild, pdiChild->pszName);

  00144	e5971004	 ldr         r1, [r7, #4]
  00148	e1a0000a	 mov         r0, r10
  0014c	eb000000	 bl          DeviceStateFindList
  00150	e1b08000	 movs        r8, r0

; 99   :         if(pdsChild != NULL) {

  00154	0a000002	 beq         |$LN5@PmRegister|

; 100  :             // we only want the pointer value for now
; 101  :             DeviceStateDecRef(pdsChild);

  00158	e1a00008	 mov         r0, r8
  0015c	eb000000	 bl          DeviceStateDecRef

; 102  :         } else {

  00160	ea000000	 b           |$LN4@PmRegister|
  00164		 |$LN5@PmRegister|

; 103  :             // couldn't create the child device for some reason
; 104  :             dwStatus = ERROR_GEN_FAILURE;

  00164	e3a0401f	 mov         r4, #0x1F
  00168		 |$LN4@PmRegister|

; 105  :         }
; 106  :     }
; 107  : 
; 108  :     // release resources
; 109  :     if(pdsParent != NULL) DeviceStateDecRef(pdsParent);

  00168	e3550000	 cmp         r5, #0
  0016c	0a000008	 beq         |$LN3@PmRegister|
  00170	e1a00005	 mov         r0, r5
  00174	eb000000	 bl          DeviceStateDecRef
  00178	ea000005	 b           |$LN3@PmRegister|
  0017c		 |$LN13@PmRegister|

; 41   :     PDEVICEID pdiParent = NULL, pdiChild = NULL;
; 42   :     PDEVICE_LIST pdlParent = NULL;
; 43   : 	PDEVICE_LIST pdlChild = NULL;
; 44   :     PDEVICE_STATE pdsParent = NULL;
; 45   :     PDEVICE_STATE pdsChild = NULL;
; 46   :     DWORD dwStatus = ERROR_SUCCESS;
; 47   : 
; 48   : #ifndef SHIP_BUILD
; 49   :     SETFNAME(_T("PmRegisterPowerRelationship"));
; 50   : #endif
; 51   : 
; 52   :     PMLOGMSG(ZONE_API, (_T("+%s\r\n"), pszFname));

  0017c	e5963440	 ldr         r3, [r6, #0x440]

; 70   :                 PMLOGMSG(ZONE_WARN, (_T("%s: can't find class for parent or child\r\n"),
; 71   :                     pszFname));

  00180	e3130002	 tst         r3, #2
  00184	159f0074	 ldrne       r0, [pc, #0x74]
  00188	159f1068	 ldrne       r1, [pc, #0x68]
  0018c	1b000000	 blne        CeLogMsg
  00190		 |$LN36@PmRegister|

; 59   :         dwStatus = ERROR_INVALID_PARAMETER;

  00190	e3a04057	 mov         r4, #0x57

; 105  :         }
; 106  :     }
; 107  : 
; 108  :     // release resources
; 109  :     if(pdsParent != NULL) DeviceStateDecRef(pdsParent);

  00194		 |$LN3@PmRegister|

; 110  :     if(pdiParent != NULL) DeviceIdDestroy(pdiParent);

  00194	e3590000	 cmp         r9, #0
  00198	11a00009	 movne       r0, r9
  0019c	1b000000	 blne        DeviceIdDestroy

; 111  :     if(pdiChild != NULL) DeviceIdDestroy(pdiChild);

  001a0	e3570000	 cmp         r7, #0
  001a4	11a00007	 movne       r0, r7
  001a8	1b000000	 blne        DeviceIdDestroy

; 112  : 
; 113  :     PMLOGMSG((dwStatus != ERROR_SUCCESS && ZONE_WARN) || ZONE_API, 
; 114  :         (_T("%s: returning 0x%08x, status is %d\r\n"), pszFname, pdsChild,
; 115  :         dwStatus));

  001ac	e3540000	 cmp         r4, #0
  001b0	0a000002	 beq         |$LN31@PmRegister|
  001b4	e5963440	 ldr         r3, [r6, #0x440]
  001b8	e3130002	 tst         r3, #2
  001bc	1a000002	 bne         |$LN32@PmRegister|
  001c0		 |$LN31@PmRegister|

; 41   :     PDEVICEID pdiParent = NULL, pdiChild = NULL;
; 42   :     PDEVICE_LIST pdlParent = NULL;
; 43   : 	PDEVICE_LIST pdlChild = NULL;
; 44   :     PDEVICE_STATE pdsParent = NULL;
; 45   :     PDEVICE_STATE pdsChild = NULL;
; 46   :     DWORD dwStatus = ERROR_SUCCESS;
; 47   : 
; 48   : #ifndef SHIP_BUILD
; 49   :     SETFNAME(_T("PmRegisterPowerRelationship"));
; 50   : #endif
; 51   : 
; 52   :     PMLOGMSG(ZONE_API, (_T("+%s\r\n"), pszFname));

  001c0	e5963440	 ldr         r3, [r6, #0x440]

; 112  : 
; 113  :     PMLOGMSG((dwStatus != ERROR_SUCCESS && ZONE_WARN) || ZONE_API, 
; 114  :         (_T("%s: returning 0x%08x, status is %d\r\n"), pszFname, pdsChild,
; 115  :         dwStatus));

  001c4	e3130b02	 tst         r3, #2, 22
  001c8	0a000004	 beq         |$LN33@PmRegister|
  001cc		 |$LN32@PmRegister|
  001cc	e59f0028	 ldr         r0, [pc, #0x28]
  001d0	e59f1020	 ldr         r1, [pc, #0x20]
  001d4	e1a03004	 mov         r3, r4
  001d8	e1a02008	 mov         r2, r8
  001dc	eb000000	 bl          CeLogMsg
  001e0		 |$LN33@PmRegister|

; 116  :     SetLastError(dwStatus);

  001e0	e1a00004	 mov         r0, r4
  001e4	eb000000	 bl          SetLastError

; 117  :     return (HANDLE) pdsChild;
; 118  : }

  001e8	e1a00008	 mov         r0, r8
  001ec	e28dd004	 add         sp, sp, #4
  001f0	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  001f4	e12fff1e	 bx          lr
  001f8		 |$LN40@PmRegister|
  001f8		 |$LN41@PmRegister|
  001f8	00000000	 DCD         |??_C@_1DI@DGDFELFJ@?$AAP?$AAm?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AAh?$AAi?$AAp?$AA?$AA@|
  001fc		 |$LN42@PmRegister|
  001fc	00000000	 DCD         |??_C@_1EK@KBCPAFO@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?0?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?5?$AAi?$AAs?$AA?5@|
  00200		 |$LN43@PmRegister|
  00200	00000000	 DCD         |??_C@_1FG@GFDCDANC@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAf?$AAi?$AAn?$AAd?$AA?5?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5@|
  00204		 |$LN44@PmRegister|
  00204	00000000	 DCD         |??_C@_1FA@NJGFJEJM@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAa?$AAl?$AAs?$AAo?$AA?5?$AAb?$AAe?$AA?5?$AAa?$AA?5@|
  00208		 |$LN45@PmRegister|
  00208	00000000	 DCD         |??_C@_1DK@GPNMCGNE@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAf?$AAi?$AAn?$AAd?$AA?5?$AAp?$AAa?$AAr?$AAe?$AAn?$AAt?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?$AN?$AA?6?$AA?$AA@|
  0020c		 |$LN46@PmRegister|
  0020c	00000000	 DCD         |??_C@_1EA@FDDAEBKJ@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAc?$AAh?$AAi?$AAl?$AAd?$AA?5?$AA?8?$AA?$CF?$AAs?$AA?8?$AA?5?$AAa?$AAl?$AAr?$AAe?$AAa?$AAd?$AAy?$AA?5?$AAe?$AAx?$AAi?$AAs?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00210		 |$LN47@PmRegister|
  00210	00000000	 DCD         |??_C@_1M@LFABOLDL@?$AA?$CL?$AA?$CF?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00214		 |$LN48@PmRegister|
  00214	00000000	 DCD         |dpCurSettings|
  00218		 |$M33672|

			 ENDP  ; |PmRegisterPowerRelationship|

	EXPORT	|PmReleasePowerRelationship|
	EXPORT	|??_C@_1CG@EPNLEKEF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DG@KMABPNDO@?$AAP?$AAm?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AAh?$AAi?$AAp?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@JNMCMHEL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAl?$AAe?$AAa?$AAs?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|RemoveDevice|
	IMPORT	|CheckDevicePointer|

  00000			 AREA	 |.pdata|, PDATA
|$T33700| DCD	|$LN13@PmReleaseP|
	DCD	0x40002901

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@EPNLEKEF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t"
	DCB	0x0, "u", 0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@KMABPNDO@?$AAP?$AAm?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AAh?$AAi?$AAp?$AA?$AA@| DCB "P"
	DCB	0x0, "m", 0x0, "R", 0x0, "e", 0x0, "l", 0x0, "e", 0x0, "a"
	DCB	0x0, "s", 0x0, "e", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e"
	DCB	0x0, "r", 0x0, "R", 0x0, "e", 0x0, "l", 0x0, "a", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, "s", 0x0, "h", 0x0, "i"
	DCB	0x0, "p", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@JNMCMHEL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAl?$AAe?$AAa?$AAs?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "%"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "l"
	DCB	0x0, "e", 0x0, "a", 0x0, "s", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PmReleasePowerRelationship| PROC

; 130  : {

  00000		 |$LN13@PmReleaseP|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M33697|
  00004	e1a05000	 mov         r5, r0

; 131  :     PDEVICE_STATE pds = (PDEVICE_STATE) h;
; 132  :     DWORD dwStatus = ERROR_INVALID_PARAMETER;
; 133  : 
; 134  : #ifndef SHIP_BUILD
; 135  :     SETFNAME(_T("PmReleasePowerRelationship"));
; 136  : #endif
; 137  : 
; 138  :     PMLOGMSG(ZONE_API, (_T("%s: releasing 0x%08x\r\n"), pszFname, h));

  00008	e59f6090	 ldr         r6, [pc, #0x90]
  0000c	e3a04057	 mov         r4, #0x57
  00010	e5963440	 ldr         r3, [r6, #0x440]
  00014	e3130b02	 tst         r3, #2, 22
  00018	159f007c	 ldrne       r0, [pc, #0x7C]
  0001c	159f1070	 ldrne       r1, [pc, #0x70]
  00020	11a02005	 movne       r2, r5
  00024	1b000000	 blne        CeLogMsg

; 139  : 
; 140  :     // make sure that this pointer is a child node with a parent
; 141  :     if(pds != NULL) {

  00028	e3550000	 cmp         r5, #0
  0002c	0a00000a	 beq         |$LN10@PmReleaseP|

; 142  :         BOOL fExists = CheckDevicePointer(pds); // increments refcnt if TRUE

  00030	e1a00005	 mov         r0, r5
  00034	eb000000	 bl          CheckDevicePointer
  00038	e3500000	 cmp         r0, #0

; 143  :         if(fExists) {

  0003c	0a000006	 beq         |$LN10@PmReleaseP|

; 144  :             // delete the device
; 145  :             PREFAST_DEBUGCHK(pds->pListHead != NULL);
; 146  :             RemoveDevice(pds->pListHead->pGuid, pds->pszName);

  00040	e5953064	 ldr         r3, [r5, #0x64]
  00044	e5951000	 ldr         r1, [r5]
  00048	e5930000	 ldr         r0, [r3]
  0004c	eb000000	 bl          RemoveDevice

; 147  : 
; 148  :             // done with the pointer
; 149  :             DeviceStateDecRef(pds);

  00050	e1a00005	 mov         r0, r5
  00054	eb000000	 bl          DeviceStateDecRef

; 150  : 
; 151  :             // return a good status
; 152  :             dwStatus = ERROR_SUCCESS;

  00058	e3a04000	 mov         r4, #0
  0005c		 |$LN10@PmReleaseP|
  0005c	e5963440	 ldr         r3, [r6, #0x440]

; 153  :         }
; 154  :     }
; 155  : 
; 156  :     PMLOGMSG(ZONE_API || (dwStatus != ERROR_SUCCESS && ZONE_WARN), (_T("%s: returning %d\r\n"), 
; 157  :         pszFname, dwStatus));

  00060	e3130b02	 tst         r3, #2, 22
  00064	1a000003	 bne         |$LN8@PmReleaseP|
  00068	e3540000	 cmp         r4, #0
  0006c	0a000005	 beq         |$LN9@PmReleaseP|
  00070	e3130002	 tst         r3, #2
  00074	0a000003	 beq         |$LN9@PmReleaseP|
  00078		 |$LN8@PmReleaseP|
  00078	e59f0018	 ldr         r0, [pc, #0x18]
  0007c	e59f1010	 ldr         r1, [pc, #0x10]
  00080	e1a02004	 mov         r2, r4
  00084	eb000000	 bl          CeLogMsg
  00088		 |$LN9@PmReleaseP|

; 158  :     return dwStatus;
; 159  : }

  00088	e1a00004	 mov         r0, r4
  0008c	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00090	e12fff1e	 bx          lr
  00094		 |$LN14@PmReleaseP|
  00094		 |$LN15@PmReleaseP|
  00094	00000000	 DCD         |??_C@_1DG@KMABPNDO@?$AAP?$AAm?$AAR?$AAe?$AAl?$AAe?$AAa?$AAs?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr?$AAR?$AAe?$AAl?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AAh?$AAi?$AAp?$AA?$AA@|
  00098		 |$LN16@PmReleaseP|
  00098	00000000	 DCD         |??_C@_1CG@EPNLEKEF@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0009c		 |$LN17@PmReleaseP|
  0009c	00000000	 DCD         |??_C@_1CO@JNMCMHEL@?$AA?$CF?$AAs?$AA?3?$AA?5?$AAr?$AAe?$AAl?$AAe?$AAa?$AAs?$AAi?$AAn?$AAg?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA8?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  000a0		 |$LN18@PmReleaseP|
  000a0	00000000	 DCD         |dpCurSettings|
  000a4		 |$M33698|

			 ENDP  ; |PmReleasePowerRelationship|

	END
