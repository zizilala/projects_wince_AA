; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\Z2170P\SRC\DRIVERS\ISP_RESIZER\isp_resizer.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.data|, DATA
|Rsz4TapModeHorzFilterTable| DCW 0x0
	DCW	0x100
	DCW	0x0
	DCW	0x0
	DCW	0x3fa
	DCW	0xf6
	DCW	0x10
	DCW	0x0
	DCW	0x3f9
	DCW	0xdb
	DCW	0x2c
	DCW	0x0
	DCW	0x3fb
	DCW	0xb3
	DCW	0x53
	DCW	0x3ff
	DCW	0x3fd
	DCW	0x82
	DCW	0x84
	DCW	0x3fd
	DCW	0x3ff
	DCW	0x53
	DCW	0xb3
	DCW	0x3fb
	DCW	0x0
	DCW	0x2c
	DCW	0xdb
	DCW	0x3f9
	DCW	0x0
	DCW	0x10
	DCW	0xf6
	DCW	0x3fa
|Rsz4TapModeVertFilterTable| DCW 0x0
	DCW	0x100
	DCW	0x0
	DCW	0x0
	DCW	0x3fa
	DCW	0xf6
	DCW	0x10
	DCW	0x0
	DCW	0x3f9
	DCW	0xdb
	DCW	0x2c
	DCW	0x0
	DCW	0x3fb
	DCW	0xb3
	DCW	0x53
	DCW	0x3ff
	DCW	0x3fd
	DCW	0x82
	DCW	0x84
	DCW	0x3fd
	DCW	0x3ff
	DCW	0x53
	DCW	0xb3
	DCW	0x3fb
	DCW	0x0
	DCW	0x2c
	DCW	0xdb
	DCW	0x3f9
	DCW	0x0
	DCW	0x10
	DCW	0xf6
	DCW	0x3fa
|Rsz7TapModeHorzFilterTable| DCW 0x4
	DCW	0x23
	DCW	0x5a
	DCW	0x58
	DCW	0x23
	DCW	0x4
	DCW	0x0
	DCW	0x2
	DCW	0x18
	DCW	0x4d
	DCW	0x60
	DCW	0x31
	DCW	0x8
	DCW	0x0
	DCW	0x1
	DCW	0xf
	DCW	0x3f
	DCW	0x62
	DCW	0x3f
	DCW	0xf
	DCW	0x1
	DCW	0x0
	DCW	0x8
	DCW	0x31
	DCW	0x60
	DCW	0x4d
	DCW	0x18
	DCW	0x2
|Rsz7TapModeVertFilterTable| DCW 0x4
	DCW	0x23
	DCW	0x5a
	DCW	0x58
	DCW	0x23
	DCW	0x4
	DCW	0x0
	DCW	0x2
	DCW	0x18
	DCW	0x4d
	DCW	0x60
	DCW	0x31
	DCW	0x8
	DCW	0x0
	DCW	0x1
	DCW	0xf
	DCW	0x3f
	DCW	0x62
	DCW	0x3f
	DCW	0xf
	DCW	0x1
	DCW	0x0
	DCW	0x8
	DCW	0x31
	DCW	0x60
	DCW	0x4d
	DCW	0x18
	DCW	0x2
	EXPORT	|InitializeRSZHW|
	EXPORT	|??_C@_1HC@NLMFPMN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAR?$AAS?$AAZ?$AAH?$AAW?$AA?3?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IC@NBADCMPK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAR?$AAS?$AAZ?$AAH?$AAW?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1II@CPOLJEPG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAR?$AAS?$AAZ?$AAH?$AAW?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt@| [ DATA ] ; `string'
	IMPORT	|NKDbgPrintfW|
	IMPORT	|MmMapIoSpace|
	IMPORT	|EnableDeviceClocks|
; File c:\wince600\platform\z2170p\src\drivers\isp_resizer\isp_resizer.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T40098| DCD	|$LN18@Initialize|
	DCD	0x40004b01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@NLMFPMN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAR?$AAS?$AAZ?$AAH?$AAW?$AA?3?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, "R", 0x0, "S"
	DCB	0x0, "Z", 0x0, "H", 0x0, "W", 0x0, ":", 0x0, "U", 0x0, "n"
	DCB	0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "M", 0x0, "a", 0x0, "p", 0x0, " "
	DCB	0x0, "S", 0x0, "C", 0x0, "M", 0x0, " ", 0x0, "a", 0x0, "d"
	DCB	0x0, "d", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, " "
	DCB	0x0, "s", 0x0, "p", 0x0, "a", 0x0, "c", 0x0, "e", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IC@NBADCMPK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAR?$AAS?$AAZ?$AAH?$AAW?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, "R", 0x0, "S"
	DCB	0x0, "Z", 0x0, "H", 0x0, "W", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "m", 0x0, "a", 0x0, "p"
	DCB	0x0, " ", 0x0, "R", 0x0, "e", 0x0, "s", 0x0, "i", 0x0, "z"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "E", 0x0, "n", 0x0, "g"
	DCB	0x0, "i", 0x0, "n", 0x0, "e", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "r"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1II@CPOLJEPG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAR?$AAS?$AAZ?$AAH?$AAW?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, "R", 0x0, "S"
	DCB	0x0, "Z", 0x0, "H", 0x0, "W", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "m", 0x0, "a", 0x0, "p"
	DCB	0x0, " ", 0x0, "c", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "r"
	DCB	0x0, "a", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, "o", 0x0, "l", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "r", 0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "s", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |InitializeRSZHW| PROC

; 69   : {

  00000		 |$LN18@Initialize|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M40095|
  00004	e1a04000	 mov         r4, r0

; 70   :     DWORD i = 0;
; 71   :     DWORD dwRSZCNTData = 0;
; 72   :     PHYSICAL_ADDRESS pa;
; 73   : 
; 74   :     EnableDeviceClocks(OMAP_DEVICE_CAMERA, TRUE);

  00008	e3a01001	 mov         r1, #1
  0000c	e3a00043	 mov         r0, #0x43
  00010	eb000000	 bl          EnableDeviceClocks
  00014	e3a03312	 mov         r3, #0x12, 6

; 75   : 
; 76   :     /* Map ISP registers */
; 77   :     pa.QuadPart = OMAP_CAMISP_REGS_PA;

  00018	e383092f	 orr         r0, r3, #0x2F, 18

; 78   :     dev->m_pCAMISP = (OMAP_CAM_ISP_REGS *)MmMapIoSpace(pa, sizeof(OMAP_CAM_ISP_REGS), FALSE);

  0001c	e3a03000	 mov         r3, #0
  00020	e3a01000	 mov         r1, #0
  00024	e3a0207c	 mov         r2, #0x7C
  00028	eb000000	 bl          MmMapIoSpace
  0002c	e3500000	 cmp         r0, #0
  00030	e584000c	 str         r0, [r4, #0xC]

; 79   : 
; 80   :     if (dev->m_pCAMISP == NULL)
; 81   :     {
; 82   :         RETAILMSG(1, (L"ERROR: InitializeRSZHW: "
; 83   :             L"Failed to map camera controller registers\r\n"
; 84   :             ));

  00034	059f00ec	 ldreq       r0, [pc, #0xEC]
  00038	0a000012	 beq         |$LN15@Initialize|

; 85   :         goto clean;

  0003c	e3a03312	 mov         r3, #0x12, 6

; 86   :     }
; 87   : 
; 88   :     /* Map resizer registers */
; 89   :     pa.QuadPart = ISP_RSZ_BASE_ADDRESS;

  00040	e3830abd	 orr         r0, r3, #0xBD, 20

; 90   :     dev->m_pCAMRSZ =  (OMAP_ISP_RSZ_REGS *)MmMapIoSpace(pa, sizeof(OMAP_ISP_RSZ_REGS), FALSE);

  00044	e3a03000	 mov         r3, #0
  00048	e3a01000	 mov         r1, #0
  0004c	e3a020ac	 mov         r2, #0xAC
  00050	eb000000	 bl          MmMapIoSpace
  00054	e3500000	 cmp         r0, #0
  00058	e5840008	 str         r0, [r4, #8]

; 91   : 
; 92   :     if (dev->m_pCAMRSZ == NULL)
; 93   :     {
; 94   :         RETAILMSG(1, (L"ERROR: InitializeRSZHW: "
; 95   :             L"Failed to map Resizer Engine registers\r\n"
; 96   :             ));

  0005c	059f00c0	 ldreq       r0, [pc, #0xC0]
  00060	0a000008	 beq         |$LN15@Initialize|

; 97   :         goto clean;
; 98   :     }
; 99   : 
; 100  :     /* Map the camera MMU regs */
; 101  :     pa.QuadPart = CAM_MMU_BASE_ADDRESS;

  00064	e59f00b4	 ldr         r0, [pc, #0xB4]
  00068	e3a01000	 mov         r1, #0

; 102  :     dev->m_pCamMMU = (OMAP_CAM_MMU_REGS *)MmMapIoSpace(pa, sizeof(OMAP_CAM_MMU_REGS), FALSE);

  0006c	e3a03000	 mov         r3, #0
  00070	e3a02074	 mov         r2, #0x74
  00074	eb000000	 bl          MmMapIoSpace
  00078	e3500000	 cmp         r0, #0
  0007c	e5840010	 str         r0, [r4, #0x10]

; 103  :     if (dev->m_pCamMMU == NULL)

  00080	1a000007	 bne         |$LN2@Initialize|

; 104  :     {
; 105  :         RETAILMSG(1,(L"ERROR: InitializeRSZHW:Unable to Map SCM address space\r\n"));

  00084	e59f0090	 ldr         r0, [pc, #0x90]
  00088		 |$LN15@Initialize|
  00088	eb000000	 bl          NKDbgPrintfW

; 134  : 
; 135  : clean:
; 136  :     EnableDeviceClocks(OMAP_DEVICE_CAMERA, FALSE);

  0008c	e3a01000	 mov         r1, #0
  00090	e3a00043	 mov         r0, #0x43
  00094		 |$clean$39472|
  00094	eb000000	 bl          EnableDeviceClocks

; 137  :     return FALSE;

  00098	e3a00000	 mov         r0, #0

; 138  : }

  0009c	e8bd4010	 ldmia       sp!, {r4, lr}
  000a0	e12fff1e	 bx          lr
  000a4		 |$LN2@Initialize|

; 106  :         goto clean;
; 107  :     }
; 108  : 
; 109  :     /* bit 24 is for resizer */
; 110  :     /* save old state */
; 111  :     dev->prevState.irqEnable = (INREG32(&dev->m_pCAMISP->ISP_IRQ0ENABLE) & ISP_IRQ0ENABLE_RSZ_DONE_IRQ);

  000a4	e594200c	 ldr         r2, [r4, #0xC]

; 112  :     CLRREG32(&dev->m_pCAMISP->ISP_IRQ0ENABLE,ISP_IRQ0ENABLE_RSZ_DONE_IRQ);
; 113  : 
; 114  :     /* disable MMU */
; 115  :     dev->prevState.mmuEnable = (INREG32(&dev->m_pCamMMU->MMU_CNTL) & CAMMMU_CNTL_MMU_EN);
; 116  :     CLRREG32(&dev->m_pCamMMU->MMU_CNTL, CAMMMU_CNTL_MMU_EN);

  000a8	e3a01705	 mov         r1, #5, 14

; 117  : 
; 118  :     /* enable resizer clock and SBL */
; 119  :     dev->prevState.ispCtrl = INREG32(&dev->m_pCAMISP->ISP_CTRL);
; 120  :     SETREG32(&dev->m_pCAMISP->ISP_CTRL,( ISP_CTRL_RSZ_CLK_EN
; 121  :                                     |ISP_CTRL_SBL_RD_RAM_EN
; 122  :                                     |ISP_CTRL_SBL_WR0_RAM_EN));

  000ac	e3811a02	 orr         r1, r1, #2, 20
  000b0	e592300c	 ldr         r3, [r2, #0xC]

; 123  : 
; 124  :     dwRSZCNTData &= ~RSZ_CNT_INPTYP;
; 125  :     dwRSZCNTData &= ~RSZ_CNT_INPSRC;
; 126  :     dwRSZCNTData &= ~RSZ_CNT_YCPOS;
; 127  :     dwRSZCNTData &= ~RSZ_CNT_CBILIN;
; 128  : 
; 129  :     OUTREG32(&dev->m_pCAMRSZ->RSZ_CNT, dwRSZCNTData);

  000b4	e3a0e000	 mov         lr, #0

; 130  :     
; 131  :     /* Program the filter coeffs later based on resizer ratios */
; 132  :     OUTREG32(&dev->m_pCAMRSZ->RSZ_YENH, i);
; 133  :     return TRUE;

  000b8	e3a00001	 mov         r0, #1
  000bc	e2033401	 and         r3, r3, #1, 8
  000c0	e5843014	 str         r3, [r4, #0x14]
  000c4	e592300c	 ldr         r3, [r2, #0xC]
  000c8	e3c33401	 bic         r3, r3, #1, 8
  000cc	e582300c	 str         r3, [r2, #0xC]
  000d0	e5942010	 ldr         r2, [r4, #0x10]
  000d4	e5923044	 ldr         r3, [r2, #0x44]
  000d8	e2033002	 and         r3, r3, #2
  000dc	e5843018	 str         r3, [r4, #0x18]
  000e0	e5923044	 ldr         r3, [r2, #0x44]
  000e4	e3c33002	 bic         r3, r3, #2
  000e8	e5823044	 str         r3, [r2, #0x44]
  000ec	e594200c	 ldr         r2, [r4, #0xC]
  000f0	e5923040	 ldr         r3, [r2, #0x40]
  000f4	e584301c	 str         r3, [r4, #0x1C]
  000f8	e5923040	 ldr         r3, [r2, #0x40]
  000fc	e1833001	 orr         r3, r3, r1
  00100	e5823040	 str         r3, [r2, #0x40]
  00104	e5943008	 ldr         r3, [r4, #8]
  00108	e583e008	 str         lr, [r3, #8]
  0010c	e5943008	 ldr         r3, [r4, #8]
  00110	e583e0a8	 str         lr, [r3, #0xA8]

; 138  : }

  00114	e8bd4010	 ldmia       sp!, {r4, lr}
  00118	e12fff1e	 bx          lr
  0011c		 |$LN19@Initialize|
  0011c		 |$LN20@Initialize|
  0011c	00000000	 DCD         |??_C@_1HC@NLMFPMN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAR?$AAS?$AAZ?$AAH?$AAW?$AA?3?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo@|
  00120		 |$LN21@Initialize|
  00120	480bd400	 DCD         0x480bd400
  00124		 |$LN22@Initialize|
  00124	00000000	 DCD         |??_C@_1IC@NBADCMPK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAR?$AAS?$AAZ?$AAH?$AAW?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt@|
  00128		 |$LN23@Initialize|
  00128	00000000	 DCD         |??_C@_1II@CPOLJEPG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAR?$AAS?$AAZ?$AAH?$AAW?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt@|
  0012c		 |$M40096|

			 ENDP  ; |InitializeRSZHW|

	EXPORT	|DeinitializeRSZHW|
	IMPORT	|MmUnmapIoSpace|

  00000			 AREA	 |.pdata|, PDATA
|$T40115| DCD	|$LN11@Deinitiali|
	DCD	0x40002201
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DeinitializeRSZHW| PROC

; 151  : {

  00000		 |$LN11@Deinitiali|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M40112|
  00004	e1a04000	 mov         r4, r0

; 152  :     /* restore old state */
; 153  :     OUTREG32(&dev->m_pCAMISP->ISP_CTRL,dev->prevState.ispCtrl);

  00008	e594200c	 ldr         r2, [r4, #0xC]
  0000c	e594301c	 ldr         r3, [r4, #0x1C]

; 154  :     if (dev->prevState.mmuEnable)
; 155  :         SETREG32(&dev->m_pCamMMU->MMU_CNTL, CAMMMU_CNTL_MMU_EN);
; 156  :     else
; 157  :         CLRREG32(&dev->m_pCamMMU->MMU_CNTL, CAMMMU_CNTL_MMU_EN);
; 158  :     if (dev->prevState.irqEnable)
; 159  :         SETREG32(&dev->m_pCAMISP->ISP_IRQ0ENABLE,ISP_IRQ0ENABLE_RSZ_DONE_IRQ);
; 160  :     else
; 161  :         CLRREG32(&dev->m_pCAMISP->ISP_IRQ0ENABLE,ISP_IRQ0ENABLE_RSZ_DONE_IRQ);
; 162  : 
; 163  : 
; 164  :     /* unmap registers */
; 165  :     MmUnmapIoSpace((PVOID)dev->m_pCamMMU,sizeof(OMAP_CAM_MMU_REGS)); 

  00010	e3a01074	 mov         r1, #0x74
  00014	e5823040	 str         r3, [r2, #0x40]
  00018	e5943018	 ldr         r3, [r4, #0x18]
  0001c	e5942010	 ldr         r2, [r4, #0x10]
  00020	e3530000	 cmp         r3, #0
  00024	e5923044	 ldr         r3, [r2, #0x44]
  00028	13833002	 orrne       r3, r3, #2
  0002c	03c33002	 biceq       r3, r3, #2
  00030	e5823044	 str         r3, [r2, #0x44]
  00034	e5943014	 ldr         r3, [r4, #0x14]
  00038	e594200c	 ldr         r2, [r4, #0xC]
  0003c	e3530000	 cmp         r3, #0
  00040	e592300c	 ldr         r3, [r2, #0xC]
  00044	13833401	 orrne       r3, r3, #1, 8
  00048	03c33401	 biceq       r3, r3, #1, 8
  0004c	e582300c	 str         r3, [r2, #0xC]
  00050	e5940010	 ldr         r0, [r4, #0x10]
  00054	eb000000	 bl          MmUnmapIoSpace

; 166  :     MmUnmapIoSpace((PVOID)dev->m_pCAMISP, sizeof(OMAP_CAM_ISP_REGS));

  00058	e594000c	 ldr         r0, [r4, #0xC]
  0005c	e3a0107c	 mov         r1, #0x7C
  00060	eb000000	 bl          MmUnmapIoSpace

; 167  :     MmUnmapIoSpace((PVOID)dev->m_pCAMRSZ, sizeof(OMAP_ISP_RSZ_REGS));

  00064	e5940008	 ldr         r0, [r4, #8]
  00068	e3a010ac	 mov         r1, #0xAC
  0006c	eb000000	 bl          MmUnmapIoSpace

; 168  : 
; 169  :     EnableDeviceClocks(OMAP_DEVICE_CAMERA, FALSE);    

  00070	e3a01000	 mov         r1, #0
  00074	e3a00043	 mov         r0, #0x43
  00078	eb000000	 bl          EnableDeviceClocks

; 170  :     
; 171  :     return TRUE;

  0007c	e3a00001	 mov         r0, #1

; 172  : }

  00080	e8bd4010	 ldmia       sp!, {r4, lr}
  00084	e12fff1e	 bx          lr
  00088		 |$M40113|

			 ENDP  ; |DeinitializeRSZHW|

	EXPORT	|CalculateRSZHWParams|
	EXPORT	|??_C@_1GG@ILOLDMOO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AAl?$AAe?$AAs?$AAs?$AA?5?$AAt?$AAh?$AAa?$AAn?$AA?5?$AAm?$AAi?$AAn?$AA?4?$AA?5?$AAS?$AAh?$AAo?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GI@OOGHDMPC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAe?$AAd?$AAs?$AA?5?$AAm?$AAa?$AAx?$AA?4?$AA?5?$AAS?$AAh?$AAo?$AAu?$AAl?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@LMCGBEGJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAe?$AAd?$AAs?$AA?5?$AAm?$AAa?$AAx?$AAi?$AAm?$AAu?$AAm?$AA?5?$AAs?$AAu?$AAp@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@CPAAIFFA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAe?$AAd?$AAs?$AA?5?$AAm?$AAa?$AAx?$AAi?$AAm@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HA@PKJBCFAJ@?$AAO?$AAM?$AAA?$AAP?$AA3?$AA5?$AAx?$AAx?$AAC?$AAa?$AAm?$AAe?$AAr?$AAa?$AAC?$AAt?$AAr?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAl?$AAc?$AAu?$AAl?$AAa?$AAt?$AAe?$AAR?$AAS?$AAZ@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HA@NBDNJICL@?$AAO?$AAM?$AAA?$AAP?$AA3?$AA5?$AAx?$AAx?$AAC?$AAa?$AAm?$AAe?$AAr?$AAa?$AAC?$AAt?$AAr?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAl?$AAc?$AAu?$AAl?$AAa?$AAt?$AAe?$AAR?$AAS?$AAZ@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HA@CCENNNHJ@?$AAO?$AAM?$AAA?$AAP?$AA3?$AA5?$AAx?$AAx?$AAC?$AAa?$AAm?$AAe?$AAr?$AAa?$AAC?$AAt?$AAr?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAl?$AAc?$AAu?$AAl?$AAa?$AAt?$AAe?$AAR?$AAS?$AAZ@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HA@JOBGAFL@?$AAO?$AAM?$AAA?$AAP?$AA3?$AA5?$AAx?$AAx?$AAC?$AAa?$AAm?$AAe?$AAr?$AAa?$AAC?$AAt?$AAr?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAl?$AAc?$AAu?$AAl?$AAa?$AAt?$AAe?$AAR?$AAS?$AAZ@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JK@OJKEEOPL@?$AAO?$AAM?$AAA?$AAP?$AA3?$AA5?$AAx?$AAx?$AAC?$AAa?$AAm?$AAe?$AAr?$AAa?$AAC?$AAt?$AAr?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAl?$AAc?$AAu?$AAl?$AAa?$AAt?$AAe?$AAR?$AAS?$AAZ@| [ DATA ] ; `string'
	IMPORT	|__rt_udiv|

  00000			 AREA	 |.pdata|, PDATA
|$T40166| DCD	|$LN50@CalculateR|
	DCD	0x4000af01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@ILOLDMOO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AAl?$AAe?$AAs?$AAs?$AA?5?$AAt?$AAh?$AAa?$AAn?$AA?5?$AAm?$AAi?$AAn?$AA?4?$AA?5?$AAS?$AAh?$AAo?$AAu@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "W", 0x0, "i", 0x0, "d", 0x0, "t", 0x0, "h", 0x0, " "
	DCB	0x0, "l", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, " ", 0x0, "t"
	DCB	0x0, "h", 0x0, "a", 0x0, "n", 0x0, " ", 0x0, "m", 0x0, "i"
	DCB	0x0, "n", 0x0, ".", 0x0, " ", 0x0, "S", 0x0, "h", 0x0, "o"
	DCB	0x0, "u", 0x0, "l", 0x0, "d", 0x0, " ", 0x0, "b", 0x0, "e"
	DCB	0x0, " ", 0x0, "a", 0x0, "t", 0x0, "l", 0x0, "e", 0x0, "a"
	DCB	0x0, "s", 0x0, "t", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@OOGHDMPC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAe?$AAd?$AAs?$AA?5?$AAm?$AAa?$AAx?$AA?4?$AA?5?$AAS?$AAh?$AAo?$AAu?$AAl?$AAd@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "W", 0x0, "i", 0x0, "d", 0x0, "t", 0x0, "h", 0x0, " "
	DCB	0x0, "e", 0x0, "x", 0x0, "c", 0x0, "e", 0x0, "e", 0x0, "d"
	DCB	0x0, "s", 0x0, " ", 0x0, "m", 0x0, "a", 0x0, "x", 0x0, "."
	DCB	0x0, " ", 0x0, "S", 0x0, "h", 0x0, "o", 0x0, "u", 0x0, "l"
	DCB	0x0, "d", 0x0, " ", 0x0, "b", 0x0, "e", 0x0, " ", 0x0, "l"
	DCB	0x0, "i", 0x0, "m", 0x0, "i", 0x0, "t", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@LMCGBEGJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAe?$AAd?$AAs?$AA?5?$AAm?$AAa?$AAx?$AAi?$AAm?$AAu?$AAm?$AA?5?$AAs?$AAu?$AAp@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "W", 0x0, "i", 0x0, "d", 0x0, "t", 0x0, "h", 0x0, " "
	DCB	0x0, "e", 0x0, "x", 0x0, "c", 0x0, "e", 0x0, "e", 0x0, "d"
	DCB	0x0, "s", 0x0, " ", 0x0, "m", 0x0, "a", 0x0, "x", 0x0, "i"
	DCB	0x0, "m", 0x0, "u", 0x0, "m", 0x0, " ", 0x0, "s", 0x0, "u"
	DCB	0x0, "p", 0x0, "p", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "b", 0x0, "y", 0x0, " ", 0x0, "R"
	DCB	0x0, "S", 0x0, "Z", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@CPAAIFFA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAe?$AAd?$AAs?$AA?5?$AAm?$AAa?$AAx?$AAi?$AAm@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "H", 0x0, "e", 0x0, "i", 0x0, "g", 0x0, "h", 0x0, "t"
	DCB	0x0, " ", 0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, " "
	DCB	0x0, "e", 0x0, "x", 0x0, "c", 0x0, "e", 0x0, "e", 0x0, "d"
	DCB	0x0, "s", 0x0, " ", 0x0, "m", 0x0, "a", 0x0, "x", 0x0, "i"
	DCB	0x0, "m", 0x0, "u", 0x0, "m", 0x0, " ", 0x0, "s", 0x0, "u"
	DCB	0x0, "p", 0x0, "p", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "b", 0x0, "y", 0x0, " ", 0x0, "R"
	DCB	0x0, "S", 0x0, "Z", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@PKJBCFAJ@?$AAO?$AAM?$AAA?$AAP?$AA3?$AA5?$AAx?$AAx?$AAC?$AAa?$AAm?$AAe?$AAr?$AAa?$AAC?$AAt?$AAr?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAl?$AAc?$AAu?$AAl?$AAa?$AAt?$AAe?$AAR?$AAS?$AAZ@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "3", 0x0, "5", 0x0, "x"
	DCB	0x0, "x", 0x0, "C", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "r"
	DCB	0x0, "a", 0x0, "C", 0x0, "t", 0x0, "r", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "C", 0x0, "a", 0x0, "l", 0x0, "c", 0x0, "u"
	DCB	0x0, "l", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "R", 0x0, "S"
	DCB	0x0, "Z", 0x0, "H", 0x0, "W", 0x0, "P", 0x0, "a", 0x0, "r"
	DCB	0x0, "a", 0x0, "m", 0x0, "s", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "p", 0x0, "u", 0x0, "t", 0x0, " ", 0x0, "w", 0x0, ":"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ".", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@NBDNJICL@?$AAO?$AAM?$AAA?$AAP?$AA3?$AA5?$AAx?$AAx?$AAC?$AAa?$AAm?$AAe?$AAr?$AAa?$AAC?$AAt?$AAr?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAl?$AAc?$AAu?$AAl?$AAa?$AAt?$AAe?$AAR?$AAS?$AAZ@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "3", 0x0, "5", 0x0, "x"
	DCB	0x0, "x", 0x0, "C", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "r"
	DCB	0x0, "a", 0x0, "C", 0x0, "t", 0x0, "r", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "C", 0x0, "a", 0x0, "l", 0x0, "c", 0x0, "u"
	DCB	0x0, "l", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "R", 0x0, "S"
	DCB	0x0, "Z", 0x0, "H", 0x0, "W", 0x0, "P", 0x0, "a", 0x0, "r"
	DCB	0x0, "a", 0x0, "m", 0x0, "s", 0x0, " ", 0x0, " ", 0x0, "c"
	DCB	0x0, "r", 0x0, "o", 0x0, "p", 0x0, " ", 0x0, "w", 0x0, ":"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ".", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@CCENNNHJ@?$AAO?$AAM?$AAA?$AAP?$AA3?$AA5?$AAx?$AAx?$AAC?$AAa?$AAm?$AAe?$AAr?$AAa?$AAC?$AAt?$AAr?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAl?$AAc?$AAu?$AAl?$AAa?$AAt?$AAe?$AAR?$AAS?$AAZ@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "3", 0x0, "5", 0x0, "x"
	DCB	0x0, "x", 0x0, "C", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "r"
	DCB	0x0, "a", 0x0, "C", 0x0, "t", 0x0, "r", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "C", 0x0, "a", 0x0, "l", 0x0, "c", 0x0, "u"
	DCB	0x0, "l", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "R", 0x0, "S"
	DCB	0x0, "Z", 0x0, "H", 0x0, "W", 0x0, "P", 0x0, "a", 0x0, "r"
	DCB	0x0, "a", 0x0, "m", 0x0, "s", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "p", 0x0, "u", 0x0, "t", 0x0, " ", 0x0, "h", 0x0, ":"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ".", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@JOBGAFL@?$AAO?$AAM?$AAA?$AAP?$AA3?$AA5?$AAx?$AAx?$AAC?$AAa?$AAm?$AAe?$AAr?$AAa?$AAC?$AAt?$AAr?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAl?$AAc?$AAu?$AAl?$AAa?$AAt?$AAe?$AAR?$AAS?$AAZ@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "3", 0x0, "5", 0x0, "x"
	DCB	0x0, "x", 0x0, "C", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "r"
	DCB	0x0, "a", 0x0, "C", 0x0, "t", 0x0, "r", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "C", 0x0, "a", 0x0, "l", 0x0, "c", 0x0, "u"
	DCB	0x0, "l", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "R", 0x0, "S"
	DCB	0x0, "Z", 0x0, "H", 0x0, "W", 0x0, "P", 0x0, "a", 0x0, "r"
	DCB	0x0, "a", 0x0, "m", 0x0, "s", 0x0, " ", 0x0, " ", 0x0, "c"
	DCB	0x0, "r", 0x0, "o", 0x0, "p", 0x0, " ", 0x0, "h", 0x0, ":"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ".", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JK@OJKEEOPL@?$AAO?$AAM?$AAA?$AAP?$AA3?$AA5?$AAx?$AAx?$AAC?$AAa?$AAm?$AAe?$AAr?$AAa?$AAC?$AAt?$AAr?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAl?$AAc?$AAu?$AAl?$AAa?$AAt?$AAe?$AAR?$AAS?$AAZ@| DCB "O"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, "3", 0x0, "5", 0x0, "x"
	DCB	0x0, "x", 0x0, "C", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "r"
	DCB	0x0, "a", 0x0, "C", 0x0, "t", 0x0, "r", 0x0, "l", 0x0, ":"
	DCB	0x0, ":", 0x0, "C", 0x0, "a", 0x0, "l", 0x0, "c", 0x0, "u"
	DCB	0x0, "l", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "R", 0x0, "S"
	DCB	0x0, "Z", 0x0, "H", 0x0, "W", 0x0, "P", 0x0, "a", 0x0, "r"
	DCB	0x0, "a", 0x0, "m", 0x0, "s", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, " ", 0x0, "A", 0x0, "d", 0x0, "d"
	DCB	0x0, "r", 0x0, " ", 0x0, "O", 0x0, "f", 0x0, "f", 0x0, "s"
	DCB	0x0, "e", 0x0, "t", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "m"
	DCB	0x0, "a", 0x0, "i", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "r"
	DCB	0x0, ":", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x"
	DCB	0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |CalculateRSZHWParams| PROC

; 183  : {

  00000		 |$LN50@CalculateR|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004		 |$M40163|
  00004	e1a08000	 mov         r8, r0

; 184  :     ULONG rsz, rsz_7, rsz_4;
; 185  :     ULONG sph;
; 186  :     ULONG input_w, input_h;
; 187  :     ULONG output_w, output_h;
; 188  :     ULONG output;
; 189  :     ULONG max_in_otf, max_out_7tap;
; 190  :    
; 191  : 
; 192  :     if(pRSZParams->enableZoom)

  00008	e5983050	 ldr         r3, [r8, #0x50]
  0000c	e3a02000	 mov         r2, #0
  00010	e3530000	 cmp         r3, #0
  00014	0a000023	 beq         |$LN23@CalculateR|

; 193  :     {
; 194  :         //Recycling variables
; 195  : 
; 196  :         //width [bytes]; 32-byte aligned.
; 197  :         input_w = pRSZParams->width << 1; //YUV422: 2 bytes per pixel
; 198  :         input_w /= RSZ_BYTE_ALIGN;
; 199  :         input_w *= RSZ_BYTE_ALIGN;

  00018	e5983034	 ldr         r3, [r8, #0x34]

; 200  : 
; 201  :         //crop width [bytes]; 32-byte aligned.
; 202  :         output_w = pRSZParams->cropWidth << 1;
; 203  :         output_w /= RSZ_BYTE_ALIGN;
; 204  :         output_w *= RSZ_BYTE_ALIGN;

  0001c	e5982048	 ldr         r2, [r8, #0x48]

; 205  :         
; 206  :         //height [lines]; forced to be even.
; 207  :         input_h = pRSZParams->height - (pRSZParams->height % 2);

  00020	e5984038	 ldr         r4, [r8, #0x38]
  00024	e1a03083	 mov         r3, r3, lsl #1

; 208  : 
; 209  :         //crop height [lines]; forced to be even.
; 210  :         output_h = pRSZParams->cropHeight - (pRSZParams->cropHeight % 2);

  00028	e1a032a3	 mov         r3, r3, lsr #5
  0002c	e598e044	 ldr         lr, [r8, #0x44]
  00030	e1a07283	 mov         r7, r3, lsl #5
  00034	e1a03082	 mov         r3, r2, lsl #1

; 211  :         
; 212  :         RETAILMSG(1, (L"OMAP35xxCameraCtrl::CalculateRSZHWParams input w: %d.\r\n", input_w));

  00038	e59f0278	 ldr         r0, [pc, #0x278]
  0003c	e1a062a3	 mov         r6, r3, lsr #5
  00040	e2043001	 and         r3, r4, #1
  00044	e20e2001	 and         r2, lr, #1
  00048	e0445003	 sub         r5, r4, r3
  0004c	e1a01007	 mov         r1, r7
  00050	e04e4002	 sub         r4, lr, r2
  00054	eb000000	 bl          NKDbgPrintfW

; 213  :         RETAILMSG(1, (L"OMAP35xxCameraCtrl::CalculateRSZHWParams  crop w: %d.\r\n", output_w));

  00058	e59f0254	 ldr         r0, [pc, #0x254]
  0005c	e1a01286	 mov         r1, r6, lsl #5
  00060	eb000000	 bl          NKDbgPrintfW

; 214  :         RETAILMSG(1, (L"OMAP35xxCameraCtrl::CalculateRSZHWParams input h: %d.\r\n", input_h));

  00064	e59f0244	 ldr         r0, [pc, #0x244]
  00068	e1a01005	 mov         r1, r5
  0006c	eb000000	 bl          NKDbgPrintfW

; 215  :         RETAILMSG(1, (L"OMAP35xxCameraCtrl::CalculateRSZHWParams  crop h: %d.\r\n", output_h));

  00070	e59f0234	 ldr         r0, [pc, #0x234]
  00074	e1a01004	 mov         r1, r4
  00078	eb000000	 bl          NKDbgPrintfW

; 216  :         
; 217  :         //Middle
; 218  :         pRSZParams->ulReadAddrOffset = (input_w * input_h) >> 1; //32-byte aligned
; 219  :         //Top
; 220  :         pRSZParams->ulReadAddrOffset -= (input_w * output_h) >> 1; //32-byte aligned

  0007c	e0010794	 mul         r1, r4, r7

; 221  :         //Top-Left
; 222  :         pRSZParams->ulReadAddrOffset += (input_w - output_w) >> 1; //may not be 32-byte aligned

  00080	e0473286	 sub         r3, r7, r6, lsl #5
  00084	e1a030a3	 mov         r3, r3, lsr #1
  00088	e0020795	 mul         r2, r5, r7
  0008c	e04330a1	 sub         r3, r3, r1, lsr #1

; 223  : 
; 224  :         RETAILMSG(1, (L"OMAP35xxCameraCtrl::CalculateRSZHWParams Read Addr Offset remainder: 0x%x.\r\n", (pRSZParams->ulReadAddrOffset % RSZ_BYTE_ALIGN)));

  00090	e59f0210	 ldr         r0, [pc, #0x210]
  00094	e08330a2	 add         r3, r3, r2, lsr #1
  00098	e203101f	 and         r1, r3, #0x1F
  0009c	e5883008	 str         r3, [r8, #8]
  000a0	eb000000	 bl          NKDbgPrintfW

; 225  :     }
; 226  :     else

  000a4	ea000000	 b           |$LN22@CalculateR|
  000a8		 |$LN23@CalculateR|

; 227  :     {
; 228  :         pRSZParams->ulReadAddrOffset = 0;

  000a8	e5882008	 str         r2, [r8, #8]
  000ac		 |$LN22@CalculateR|

; 229  :     }
; 230  : 
; 231  : 
; 232  :     if(pRSZParams->enableZoom)

  000ac	e5983050	 ldr         r3, [r8, #0x50]

; 233  :     {
; 234  :         input_w = pRSZParams->cropWidth;
; 235  :         input_h = pRSZParams->cropHeight;
; 236  :     }
; 237  :     else
; 238  :     {
; 239  :         input_w = pRSZParams->width;
; 240  :         input_h = pRSZParams->height;
; 241  :     }
; 242  : 
; 243  :     output_w = pRSZParams->ulOutputImageWidth;
; 244  :     output_h = pRSZParams->ulOutputImageHeight;
; 245  : 
; 246  :     /*
; 247  :      * Step 1: Recalculate input/output requirements based on TRM equations
; 248  :      * Step 2: Programs hardware.
; 249  :      *
; 250  :      */
; 251  : 
; 252  : 
; 253  :     /* STEP 1*/
; 254  : 
; 255  :     /*
; 256  :      * We need to ensure input of resizer after size calculations does not
; 257  :      * exceed the actual input.
; 258  :      */
; 259  : 
; 260  :     input_w = input_w - 6;
; 261  :     input_h = input_h - 6;
; 262  : 
; 263  :     if (input_h > RSZ_MAX_IN_HEIGHT)

  000b0	e5984018	 ldr         r4, [r8, #0x18]
  000b4	e598601c	 ldr         r6, [r8, #0x1C]
  000b8	e1b0b003	 movs        r11, r3
  000bc	15982044	 ldrne       r2, [r8, #0x44]
  000c0	05982038	 ldreq       r2, [r8, #0x38]
  000c4	15983048	 ldrne       r3, [r8, #0x48]
  000c8	05983034	 ldreq       r3, [r8, #0x34]
  000cc	e2427006	 sub         r7, r2, #6
  000d0	e3a02c0f	 mov         r2, #0xF, 24
  000d4	e38220ff	 orr         r2, r2, #0xFF
  000d8	e1570002	 cmp         r7, r2
  000dc	e2439006	 sub         r9, r3, #6
  000e0	9a000005	 bls         |$LN19@CalculateR|

; 264  :     {
; 265  :         RETAILMSG(1,(L"ERROR: Height (%d) exceeds maximum supported by RSZ\r\n", input_h));

  000e4	e59f01b8	 ldr         r0, [pc, #0x1B8]
  000e8	e1a01007	 mov         r1, r7
  000ec	eb000000	 bl          NKDbgPrintfW
  000f0		 |$LN47@CalculateR|

; 266  :         return FALSE;

  000f0	e3a00000	 mov         r0, #0

; 374  : 
; 375  : }

  000f4	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  000f8	e12fff1e	 bx          lr
  000fc		 |$LN19@CalculateR|

; 267  :     }
; 268  : 
; 269  :     max_in_otf = RSZ_MAX_IN_WIDTH_ONTHEFLY_MODE_ES2;
; 270  :     max_out_7tap = RSZ_MAX_7TAP_VRSZ_OUTWIDTH_ES2;
; 271  : 
; 272  :     if (input_w > max_in_otf)

  000fc	e1590002	 cmp         r9, r2
  00100	9a000002	 bls         |$LN18@CalculateR|

; 273  :     {
; 274  :         RETAILMSG(1,(L"ERROR: Width exceeds maximum supported by RSZ\r\n"));

  00104	e59f0194	 ldr         r0, [pc, #0x194]
  00108	eb000000	 bl          NKDbgPrintfW

; 275  :         return FALSE;

  0010c	eafffff7	 b           |$LN47@CalculateR|
  00110		 |$LN18@CalculateR|

; 276  :     }
; 277  : 
; 278  :     sph = RSZ_DEFAULTSTPHASE;
; 279  : 
; 280  :     output = output_h;
; 281  : 
; 282  :     /* Calculate height */
; 283  :     rsz_7 = ((input_h - 7) * 256) / (output - 1);

  00110	e2473007	 sub         r3, r7, #7
  00114	e1a0a403	 mov         r10, r3, lsl #8
  00118	e1a0100a	 mov         r1, r10
  0011c	e2460001	 sub         r0, r6, #1
  00120	eb000000	 bl          __rt_udiv
  00124	e1a05000	 mov         r5, r0

; 284  :     rsz_4 = ((input_h - 4) * 256) / (output - 1);
; 285  : 
; 286  :     rsz = (input_h * 256) / output;

  00128	e1a00006	 mov         r0, r6
  0012c	e1a01407	 mov         r1, r7, lsl #8
  00130	eb000000	 bl          __rt_udiv

; 287  : 
; 288  :     if (rsz <= RSZ_MID_RESIZE_VALUE)

  00134	e3500c02	 cmp         r0, #2, 24
  00138	8a00000a	 bhi         |$LN17@CalculateR|
  0013c	e2473004	 sub         r3, r7, #4
  00140	e1a07403	 mov         r7, r3, lsl #8
  00144	e1a01007	 mov         r1, r7
  00148	e2460001	 sub         r0, r6, #1
  0014c	eb000000	 bl          __rt_udiv
  00150	e1a05000	 mov         r5, r0

; 289  :     {
; 290  :         rsz = rsz_4;
; 291  :         if (rsz < RSZ_MINIMUM_RESIZE_VALUE) {

  00154	e3550040	 cmp         r5, #0x40
  00158	2a00000b	 bcs         |$LN13@CalculateR|

; 292  :             rsz = RSZ_MINIMUM_RESIZE_VALUE;
; 293  :             output = (((input_h - 4) * 256) / rsz) + 1;

  0015c	e1a03327	 mov         r3, r7, lsr #6
  00160	e3a05040	 mov         r5, #0x40

; 294  :             }
; 295  :     }
; 296  :     else

  00164	ea000007	 b           |$LN44@CalculateR|
  00168		 |$LN17@CalculateR|

; 297  :     {
; 298  :         rsz = rsz_7;
; 299  :         if (output_w > max_out_7tap)

  00168	e3a03c06	 mov         r3, #6, 24
  0016c	e3833072	 orr         r3, r3, #0x72
  00170	e1540003	 cmp         r4, r3

; 300  :             output_w = max_out_7tap;

  00174	81a04003	 movhi       r4, r3

; 301  :         if (rsz > RSZ_MAXIMUM_RESIZE_VALUE)

  00178	e3550b01	 cmp         r5, #1, 22
  0017c	9a000002	 bls         |$LN13@CalculateR|

; 302  :         {
; 303  :             rsz = RSZ_MAXIMUM_RESIZE_VALUE;
; 304  :             output = (((input_h - 7) * 256) / rsz) + 1;

  00180	e1a0352a	 mov         r3, r10, lsr #10
  00184	e3a05b01	 mov         r5, #1, 22
  00188		 |$LN44@CalculateR|
  00188	e2836001	 add         r6, r3, #1
  0018c		 |$LN13@CalculateR|

; 305  :         }
; 306  :     }
; 307  : 
; 308  :     /* Recalculate input */
; 309  :     if (rsz > RSZ_MID_RESIZE_VALUE)
; 310  :         input_h = (((64 * sph) + ((output - 1) * rsz) + 32) / 256) + 7;

  0018c	e2463001	 sub         r3, r6, #1
  00190	e0020593	 mul         r2, r3, r5
  00194	e3550c02	 cmp         r5, #2, 24
  00198	82823060	 addhi       r3, r2, #0x60
  0019c	81a03423	 movhi       r3, r3, lsr #8
  001a0	82833007	 addhi       r3, r3, #7

; 311  :     else
; 312  :         input_h = (((32 * sph) + ((output - 1) * rsz) + 16) / 256) + 4;

  001a4	92823030	 addls       r3, r2, #0x30
  001a8	91a03423	 movls       r3, r3, lsr #8
  001ac	92833004	 addls       r3, r3, #4

; 313  : 
; 314  :     if(pRSZParams->enableZoom)

  001b0	e35b0000	 cmp         r11, #0

; 315  :         pRSZParams->cropHeight = input_h;
; 316  :     else
; 317  :         pRSZParams->ulInputImageHeight = input_h;
; 318  : 
; 319  :     pRSZParams->v_resz = rsz;
; 320  :     pRSZParams->ulOutputImageHeight = output;
; 321  :     pRSZParams->cropTop = RSZ_DEFAULTSTPIXEL;
; 322  :     pRSZParams->v_startphase = sph;
; 323  : 
; 324  :     /* Calculate Width */
; 325  :     output = output_w;
; 326  :     sph = RSZ_DEFAULTSTPHASE;
; 327  : 
; 328  :     rsz_7 = ((input_w - 7) * 256) / (output - 1);
; 329  :     rsz_4 = ((input_w - 4) * 256) / (output - 1);

  001b4	e3a0b001	 mov         r11, #1
  001b8	15883044	 strne       r3, [r8, #0x44]
  001bc	05883014	 streq       r3, [r8, #0x14]
  001c0	e2493004	 sub         r3, r9, #4
  001c4	e1a07403	 mov         r7, r3, lsl #8
  001c8	e3a0a000	 mov         r10, #0
  001cc	e1a01007	 mov         r1, r7
  001d0	e2440001	 sub         r0, r4, #1
  001d4	e588601c	 str         r6, [r8, #0x1C]
  001d8	e588502c	 str         r5, [r8, #0x2C]
  001dc	e588a03c	 str         r10, [r8, #0x3C]
  001e0	e588b024	 str         r11, [r8, #0x24]
  001e4	eb000000	 bl          __rt_udiv
  001e8	e1a05000	 mov         r5, r0

; 330  : 
; 331  :     rsz = (input_w * 256) / output;

  001ec	e1a00004	 mov         r0, r4
  001f0	e1a01409	 mov         r1, r9, lsl #8
  001f4	eb000000	 bl          __rt_udiv

; 332  :     if (rsz > RSZ_MID_RESIZE_VALUE)

  001f8	e3500c02	 cmp         r0, #2, 24
  001fc	9a00000b	 bls         |$LN8@CalculateR|
  00200	e2493007	 sub         r3, r9, #7
  00204	e1a06403	 mov         r6, r3, lsl #8
  00208	e1a01006	 mov         r1, r6
  0020c	e2440001	 sub         r0, r4, #1
  00210	eb000000	 bl          __rt_udiv
  00214	e1a05000	 mov         r5, r0

; 333  :     {
; 334  :         rsz = rsz_7;
; 335  :         if (rsz > RSZ_MAXIMUM_RESIZE_VALUE)

  00218	e3550b01	 cmp         r5, #1, 22
  0021c	9a00000b	 bls         |$LN43@CalculateR|

; 336  :         {
; 337  :             rsz = RSZ_MAXIMUM_RESIZE_VALUE;
; 338  :             output = (((input_w - 7) * 256) / rsz) + 1;
; 339  :             RETAILMSG(1,(L"ERROR: Width exceeds max. Should be limited to %d\r\n", output));

  00220	e59f0074	 ldr         r0, [pc, #0x74]
  00224	e1a03526	 mov         r3, r6, lsr #10
  00228	e3a05b01	 mov         r5, #1, 22

; 340  :         }
; 341  :     }
; 342  :     else

  0022c	ea000004	 b           |$LN45@CalculateR|
  00230		 |$LN8@CalculateR|

; 343  :     {
; 344  :         rsz = rsz_4;
; 345  :         if (rsz < RSZ_MINIMUM_RESIZE_VALUE)

  00230	e3550040	 cmp         r5, #0x40
  00234	2a000005	 bcs         |$LN43@CalculateR|

; 346  :         {
; 347  :             rsz = RSZ_MINIMUM_RESIZE_VALUE;
; 348  :             output = (((input_w - 4) * 256) / rsz) + 1;
; 349  :             RETAILMSG(1,(L"ERROR: Width less than min. Should be atleast %d\r\n", output));

  00238	e59f0058	 ldr         r0, [pc, #0x58]
  0023c	e1a03327	 mov         r3, r7, lsr #6
  00240	e3a05040	 mov         r5, #0x40
  00244		 |$LN45@CalculateR|
  00244	e2834001	 add         r4, r3, #1
  00248	e1a01004	 mov         r1, r4
  0024c	eb000000	 bl          NKDbgPrintfW
  00250		 |$LN43@CalculateR|

; 350  :         }
; 351  :     }
; 352  : 
; 353  :         /* Recalculate input based on TRM equations */
; 354  :     if (rsz > RSZ_MID_RESIZE_VALUE)
; 355  :         input_w = (((64 * sph) + ((output - 1) * rsz) + 32) / 256) + 7;

  00250	e2443001	 sub         r3, r4, #1
  00254	e0020593	 mul         r2, r3, r5
  00258	e3550c02	 cmp         r5, #2, 24
  0025c	82823060	 addhi       r3, r2, #0x60

; 356  :     else
; 357  :         input_w = (((32 * sph) + ((output - 1) * rsz) + 16) / 256) + 7;

  00260	92823030	 addls       r3, r2, #0x30
  00264	e1a03423	 mov         r3, r3, lsr #8
  00268	e2832007	 add         r2, r3, #7

; 358  : 
; 359  : 
; 360  :     pRSZParams->ulOutputImageWidth = output;
; 361  :     pRSZParams->h_resz = rsz;
; 362  :     if(pRSZParams->enableZoom)

  0026c	e5983050	 ldr         r3, [r8, #0x50]
  00270	e5884018	 str         r4, [r8, #0x18]
  00274	e5885028	 str         r5, [r8, #0x28]
  00278	e3530000	 cmp         r3, #0

; 363  :         pRSZParams->cropWidth = input_w;

  0027c	15882048	 strne       r2, [r8, #0x48]

; 364  :     else
; 365  :         pRSZParams->ulInputImageWidth = input_w;

  00280	05882010	 streq       r2, [r8, #0x10]

; 366  : 
; 367  :     pRSZParams->cropLeft = RSZ_DEFAULTSTPIXEL;

  00284	e588a040	 str         r10, [r8, #0x40]

; 368  :     pRSZParams->h_startphase = sph;

  00288	e588b020	 str         r11, [r8, #0x20]

; 369  : 
; 370  :     //pRSZParams->ulOutOffset = (pRSZParams->ulOutputImageWidth *2);    
; 371  :     //pRSZParams->ulOutOffset = ((pRSZParams->ulOutOffset >> 5) + 1)<<5;
; 372  :         
; 373  :     return TRUE;

  0028c	e3a00001	 mov         r0, #1

; 374  : 
; 375  : }

  00290	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00294	e12fff1e	 bx          lr
  00298		 |$LN51@CalculateR|
  00298		 |$LN52@CalculateR|
  00298	00000000	 DCD         |??_C@_1GG@ILOLDMOO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AAl?$AAe?$AAs?$AAs?$AA?5?$AAt?$AAh?$AAa?$AAn?$AA?5?$AAm?$AAi?$AAn?$AA?4?$AA?5?$AAS?$AAh?$AAo?$AAu@|
  0029c		 |$LN53@CalculateR|
  0029c	00000000	 DCD         |??_C@_1GI@OOGHDMPC@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAe?$AAd?$AAs?$AA?5?$AAm?$AAa?$AAx?$AA?4?$AA?5?$AAS?$AAh?$AAo?$AAu?$AAl?$AAd@|
  002a0		 |$LN54@CalculateR|
  002a0	00000000	 DCD         |??_C@_1GA@LMCGBEGJ@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAW?$AAi?$AAd?$AAt?$AAh?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAe?$AAd?$AAs?$AA?5?$AAm?$AAa?$AAx?$AAi?$AAm?$AAu?$AAm?$AA?5?$AAs?$AAu?$AAp@|
  002a4		 |$LN55@CalculateR|
  002a4	00000000	 DCD         |??_C@_1GM@CPAAIFFA@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAH?$AAe?$AAi?$AAg?$AAh?$AAt?$AA?5?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAe?$AAx?$AAc?$AAe?$AAe?$AAd?$AAs?$AA?5?$AAm?$AAa?$AAx?$AAi?$AAm@|
  002a8		 |$LN56@CalculateR|
  002a8	00000000	 DCD         |??_C@_1JK@OJKEEOPL@?$AAO?$AAM?$AAA?$AAP?$AA3?$AA5?$AAx?$AAx?$AAC?$AAa?$AAm?$AAe?$AAr?$AAa?$AAC?$AAt?$AAr?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAl?$AAc?$AAu?$AAl?$AAa?$AAt?$AAe?$AAR?$AAS?$AAZ@|
  002ac		 |$LN57@CalculateR|
  002ac	00000000	 DCD         |??_C@_1HA@JOBGAFL@?$AAO?$AAM?$AAA?$AAP?$AA3?$AA5?$AAx?$AAx?$AAC?$AAa?$AAm?$AAe?$AAr?$AAa?$AAC?$AAt?$AAr?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAl?$AAc?$AAu?$AAl?$AAa?$AAt?$AAe?$AAR?$AAS?$AAZ@|
  002b0		 |$LN58@CalculateR|
  002b0	00000000	 DCD         |??_C@_1HA@CCENNNHJ@?$AAO?$AAM?$AAA?$AAP?$AA3?$AA5?$AAx?$AAx?$AAC?$AAa?$AAm?$AAe?$AAr?$AAa?$AAC?$AAt?$AAr?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAl?$AAc?$AAu?$AAl?$AAa?$AAt?$AAe?$AAR?$AAS?$AAZ@|
  002b4		 |$LN59@CalculateR|
  002b4	00000000	 DCD         |??_C@_1HA@NBDNJICL@?$AAO?$AAM?$AAA?$AAP?$AA3?$AA5?$AAx?$AAx?$AAC?$AAa?$AAm?$AAe?$AAr?$AAa?$AAC?$AAt?$AAr?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAl?$AAc?$AAu?$AAl?$AAa?$AAt?$AAe?$AAR?$AAS?$AAZ@|
  002b8		 |$LN60@CalculateR|
  002b8	00000000	 DCD         |??_C@_1HA@PKJBCFAJ@?$AAO?$AAM?$AAA?$AAP?$AA3?$AA5?$AAx?$AAx?$AAC?$AAa?$AAm?$AAe?$AAr?$AAa?$AAC?$AAt?$AAr?$AAl?$AA?3?$AA?3?$AAC?$AAa?$AAl?$AAc?$AAu?$AAl?$AAa?$AAt?$AAe?$AAR?$AAS?$AAZ@|
  002bc		 |$M40164|

			 ENDP  ; |CalculateRSZHWParams|

	EXPORT	|SetRSZParams|
	EXPORT	|??_C@_1EI@HFAFJHK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAp?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?5?$AAs?$AAe?$AAt?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HC@CAGDIDCG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAc?$AAr?$AAo?$AAp?$AAL?$AAe?$AAf?$AAt?$AA?5?$AA?$CI?$AA?$CF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@KPOAAJDE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAC?$AAa?$AAl?$AAc?$AAu?$AAl?$AAa?$AAt?$AAe?$AAR?$AAS@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HI@PPCDIPIK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAu?$AAl?$AAO?$AAu?$AAt?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HG@IFJCLOKN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAa?$AAd?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@KOCHMFMI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AA?5?$AAH?$AA?5?$AAs?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@KLCCCIPL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAp?$AAi?$AAt?$AAc?$AAh?$AA?5?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@JJNAHOON@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAP?$AAi?$AAt?$AAc?$AAh?$AA?5?$AAi?$AAs?$AA?5?$AAi?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@JIJCHBKI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAp?$AAi?$AAx@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@LGMHBLBI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAn?$AAp@| [ DATA ] ; `string'
	IMPORT	|memcpy|

  00000			 AREA	 |.pdata|, PDATA
|$T40217| DCD	|$LN50@SetRSZPara|
	DCD	0x40006101

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@HFAFJHK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAp?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?5?$AAs?$AAe?$AAt?$AA?5@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "R", 0x0, "S", 0x0, "Z"
	DCB	0x0, "P", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "s"
	DCB	0x0, ":", 0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a"
	DCB	0x0, "m", 0x0, "s", 0x0, " ", 0x0, "s", 0x0, "e", 0x0, "t"
	DCB	0x0, " ", 0x0, "0", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@CAGDIDCG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAc?$AAr?$AAo?$AAp?$AAL?$AAe?$AAf?$AAt?$AA?5?$AA?$CI?$AA?$CF@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "R", 0x0, "S", 0x0, "Z"
	DCB	0x0, "P", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "s"
	DCB	0x0, ":", 0x0, " ", 0x0, "c", 0x0, "r", 0x0, "o", 0x0, "p"
	DCB	0x0, "L", 0x0, "e", 0x0, "f", 0x0, "t", 0x0, " ", 0x0, "("
	DCB	0x0, "%", 0x0, "d", 0x0, ")", 0x0, " ", 0x0, "i", 0x0, "s"
	DCB	0x0, " ", 0x0, "g", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "t", 0x0, "h", 0x0, "a"
	DCB	0x0, "n", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@KPOAAJDE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAC?$AAa?$AAl?$AAc?$AAu?$AAl?$AAa?$AAt?$AAe?$AAR?$AAS@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "R", 0x0, "S", 0x0, "Z"
	DCB	0x0, "P", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "s"
	DCB	0x0, ":", 0x0, " ", 0x0, "C", 0x0, "a", 0x0, "l", 0x0, "c"
	DCB	0x0, "u", 0x0, "l", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "R"
	DCB	0x0, "S", 0x0, "Z", 0x0, "H", 0x0, "W", 0x0, "P", 0x0, "a"
	DCB	0x0, "r", 0x0, "a", 0x0, "m", 0x0, "s", 0x0, " ", 0x0, "r"
	DCB	0x0, "e", 0x0, "t", 0x0, "u", 0x0, "r", 0x0, "n", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "F", 0x0, "A", 0x0, "L", 0x0, "S"
	DCB	0x0, "E", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@PPCDIPIK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAu?$AAl?$AAO?$AAu?$AAt?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "R", 0x0, "S", 0x0, "Z"
	DCB	0x0, "P", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "s"
	DCB	0x0, ":", 0x0, " ", 0x0, "u", 0x0, "l", 0x0, "O", 0x0, "u"
	DCB	0x0, "t", 0x0, "O", 0x0, "f", 0x0, "f", 0x0, "s", 0x0, "e"
	DCB	0x0, "t", 0x0, " ", 0x0, "s", 0x0, "h", 0x0, "o", 0x0, "u"
	DCB	0x0, "l", 0x0, "d", 0x0, " ", 0x0, "b", 0x0, "e", 0x0, " "
	DCB	0x0, "3", 0x0, "2", 0x0, "-", 0x0, "b", 0x0, "y", 0x0, "t"
	DCB	0x0, "e", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "g"
	DCB	0x0, "n", 0x0, "e", 0x0, "d", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HG@IFJCLOKN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAa?$AAd?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "R", 0x0, "S", 0x0, "Z"
	DCB	0x0, "P", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "s"
	DCB	0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, "O", 0x0, "f", 0x0, "f", 0x0, "s", 0x0, "e", 0x0, "t"
	DCB	0x0, " ", 0x0, "s", 0x0, "h", 0x0, "o", 0x0, "u", 0x0, "l"
	DCB	0x0, "d", 0x0, " ", 0x0, "b", 0x0, "e", 0x0, " ", 0x0, "3"
	DCB	0x0, "2", 0x0, "-", 0x0, "b", 0x0, "y", 0x0, "t", 0x0, "e"
	DCB	0x0, " ", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "g", 0x0, "n"
	DCB	0x0, "e", 0x0, "d", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@KOCHMFMI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AA?5?$AAH?$AA?5?$AAs?$AAi@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "R", 0x0, "S", 0x0, "Z"
	DCB	0x0, "P", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "s"
	DCB	0x0, ":", 0x0, " ", 0x0, "O", 0x0, "u", 0x0, "t", 0x0, "p"
	DCB	0x0, "u", 0x0, "t", 0x0, " ", 0x0, "H", 0x0, " ", 0x0, "s"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, " ", 0x0, "s", 0x0, "h"
	DCB	0x0, "o", 0x0, "u", 0x0, "l", 0x0, "d", 0x0, " ", 0x0, "b"
	DCB	0x0, "e", 0x0, " ", 0x0, "e", 0x0, "v", 0x0, "e", 0x0, "n"
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@KLCCCIPL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAp?$AAi?$AAt?$AAc?$AAh?$AA?5?$AAc@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "R", 0x0, "S", 0x0, "Z"
	DCB	0x0, "P", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "s"
	DCB	0x0, ":", 0x0, " ", 0x0, "O", 0x0, "u", 0x0, "t", 0x0, " "
	DCB	0x0, "p", 0x0, "i", 0x0, "t", 0x0, "c", 0x0, "h", 0x0, " "
	DCB	0x0, "c", 0x0, "a", 0x0, "n", 0x0, "n", 0x0, "o", 0x0, "t"
	DCB	0x0, " ", 0x0, "b", 0x0, "e", 0x0, " ", 0x0, "l", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, " ", 0x0, "t", 0x0, "h", 0x0, "a"
	DCB	0x0, "n", 0x0, " ", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, " "
	DCB	0x0, "h", 0x0, "s", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@JJNAHOON@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAP?$AAi?$AAt?$AAc?$AAh?$AA?5?$AAi?$AAs?$AA?5?$AAi?$AAn@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "R", 0x0, "S", 0x0, "Z"
	DCB	0x0, "P", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "s"
	DCB	0x0, ":", 0x0, " ", 0x0, "P", 0x0, "i", 0x0, "t", 0x0, "c"
	DCB	0x0, "h", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "c", 0x0, "o", 0x0, "r", 0x0, "r", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@JIJCHBKI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAp?$AAi?$AAx@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "R", 0x0, "S", 0x0, "Z"
	DCB	0x0, "P", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "s"
	DCB	0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "p", 0x0, "i"
	DCB	0x0, "x", 0x0, "e", 0x0, "l", 0x0, " ", 0x0, "f", 0x0, "o"
	DCB	0x0, "r", 0x0, "m", 0x0, "a", 0x0, "t", 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@LGMHBLBI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAn?$AAp@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "R", 0x0, "S", 0x0, "Z"
	DCB	0x0, "P", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "s"
	DCB	0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "p", 0x0, "u", 0x0, "t", 0x0, " ", 0x0, "t", 0x0, "y"
	DCB	0x0, "p", 0x0, "e", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetRSZParams| PROC

; 381  : {

  00000		 |$LN50@SetRSZPara|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M40214|
  00004	e1a04001	 mov         r4, r1

; 382  :     int mul = 1;
; 383  :     RSZParams_t *pOutRSZParams = &rszContext->params;
; 384  :     rszContext->state = RSZ_UNINIT; /* to detect errors */

  00008	e3a03000	 mov         r3, #0
  0000c	e5843064	 str         r3, [r4, #0x64]

; 385  : 
; 386  :     if ((pInRSZParams->width <= 0) || (pInRSZParams->height <= 0) ||
; 387  : 		(pInRSZParams->ulOutputImageWidth <= 0) || (pInRSZParams->ulOutputImageHeight <= 0) ||
; 388  : 		(pInRSZParams->ulReadOffset <= 0) || (pInRSZParams->ulOutOffset<= 0)) {

  00010	e5903034	 ldr         r3, [r0, #0x34]
  00014	e1b06003	 movs        r6, r3
  00018	0a00004a	 beq         |$LN16@SetRSZPara|
  0001c	e5903038	 ldr         r3, [r0, #0x38]
  00020	e3530000	 cmp         r3, #0
  00024	9a000047	 bls         |$LN16@SetRSZPara|
  00028	e5903018	 ldr         r3, [r0, #0x18]
  0002c	e1b0e003	 movs        lr, r3
  00030	0a000044	 beq         |$LN16@SetRSZPara|
  00034	e590301c	 ldr         r3, [r0, #0x1C]
  00038	e3530000	 cmp         r3, #0
  0003c	9a000041	 bls         |$LN16@SetRSZPara|
  00040	e5903004	 ldr         r3, [r0, #4]
  00044	e1b05003	 movs        r5, r3
  00048	0a00003e	 beq         |$LN16@SetRSZPara|
  0004c	e5903058	 ldr         r3, [r0, #0x58]
  00050	e1b01003	 movs        r1, r3
  00054	0a00003b	 beq         |$LN16@SetRSZPara|

; 391  :         }
; 392  :     if ((pInRSZParams->ulInpType!= RSZ_INTYPE_YCBCR422_16BIT) &&
; 393  : 			(pInRSZParams->ulInpType != RSZ_INTYPE_PLANAR_8BIT)) {

  00058	e5903060	 ldr         r3, [r0, #0x60]
  0005c	e1b02003	 movs        r2, r3
  00060	13520001	 cmpne       r2, #1

; 394  : 		RETAILMSG(TRUE, (L"ERROR: SetRSZParams: Invalid input type\n"));

  00064	159f0114	 ldrne       r0, [pc, #0x114]
  00068	1a000037	 bne         |$LN44@SetRSZPara|

; 395  : 		return FALSE;
; 396  : 	}
; 397  : 	if ((pInRSZParams->ulPixFmt != RSZ_PIX_FMT_UYVY) &&
; 398  : 			(pInRSZParams->ulPixFmt!= RSZ_PIX_FMT_YUYV)) {

  0006c	e590305c	 ldr         r3, [r0, #0x5C]
  00070	e3530000	 cmp         r3, #0
  00074	13530001	 cmpne       r3, #1

; 399  : 		RETAILMSG(TRUE, (L"ERROR: SetRSZParams: Invalid pixel format\n"));

  00078	159f00fc	 ldrne       r0, [pc, #0xFC]
  0007c	1a000032	 bne         |$LN44@SetRSZPara|

; 400  : 		return FALSE;
; 401  : 	}
; 402  : 	if (pInRSZParams->ulInpType == RSZ_INTYPE_YCBCR422_16BIT)

  00080	e3520000	 cmp         r2, #0

; 403  : 		mul = 2;

  00084	03a02002	 moveq       r2, #2

; 404  : 	else
; 405  : 		mul = 1;

  00088	13a02001	 movne       r2, #1

; 406  :     
; 407  : 	if (pInRSZParams->ulReadOffset < (pInRSZParams->width * mul)) {

  0008c	e0030296	 mul         r3, r6, r2
  00090	e1550003	 cmp         r5, r3

; 408  : 		RETAILMSG(TRUE, (L"ERROR: SetRSZParams: Pitch is incorrect\n"));

  00094	359f00dc	 ldrcc       r0, [pc, #0xDC]
  00098	3a00002b	 bcc         |$LN44@SetRSZPara|

; 409  : 		return FALSE;
; 410  : 	}
; 411  : 	if (pInRSZParams->ulOutOffset < (pInRSZParams->ulOutputImageWidth * mul)) {

  0009c	e003029e	 mul         r3, lr, r2
  000a0	e1510003	 cmp         r1, r3

; 412  : 		RETAILMSG(TRUE, (L"ERROR: SetRSZParams: Out pitch cannot be less than out hsize\n"));

  000a4	359f00c8	 ldrcc       r0, [pc, #0xC8]
  000a8	3a000027	 bcc         |$LN44@SetRSZPara|

; 413  : 		return FALSE;
; 414  : 	}
; 415  : 	/* Output H size should be even */
; 416  : 	if ((pInRSZParams->ulOutputImageWidth % PIXEL_EVEN) != 0) {

  000ac	e31e0001	 tst         lr, #1

; 417  : 		RETAILMSG(TRUE, (L"ERROR: SetRSZParams: Output H size should be even\n"));

  000b0	159f00b8	 ldrne       r0, [pc, #0xB8]
  000b4	1a000024	 bne         |$LN44@SetRSZPara|

; 418  : 		return FALSE;
; 419  : 	}
; 420  : 	if (pInRSZParams->cropLeft < 0) {
; 421  : 		RETAILMSG(TRUE, (L"ERROR: SetRSZParams: Horz start pixel cannot be less than zero\n"));
; 422  : 		return FALSE;
; 423  :     }
; 424  :     if ((pInRSZParams->ulReadOffset%ALIGN)!=0)

  000b8	e315001f	 tst         r5, #0x1F

; 425  :     {   
; 426  :         RETAILMSG(TRUE, (L"ERROR: SetRSZParams: ReadOffset should be 32-byte aligned\n"));

  000bc	159f00a8	 ldrne       r0, [pc, #0xA8]
  000c0	1a000021	 bne         |$LN44@SetRSZPara|

; 427  :         return FALSE;
; 428  :     }
; 429  : 
; 430  :     if ((pInRSZParams->ulOutOffset%ALIGN)!=0)

  000c4	e311001f	 tst         r1, #0x1F

; 431  :     {
; 432  :         RETAILMSG(TRUE, (L"ERROR: SetRSZParams: ulOutOffset should be 32-byte aligned\n"));

  000c8	159f0098	 ldrne       r0, [pc, #0x98]
  000cc	1a00001e	 bne         |$LN44@SetRSZPara|

; 433  :         return FALSE;
; 434  :     }
; 435  : 
; 436  : 
; 437  :     /* calculate */
; 438  :     memcpy(pOutRSZParams,pInRSZParams,sizeof(RSZParams_t));

  000d0	e1a01000	 mov         r1, r0
  000d4	e1a00004	 mov         r0, r4
  000d8	e3a02064	 mov         r2, #0x64
  000dc	eb000000	 bl          memcpy

; 439  :     if (!CalculateRSZHWParams(pOutRSZParams))

  000e0	e1a00004	 mov         r0, r4
  000e4	eb000000	 bl          CalculateRSZHWParams
  000e8	e3500000	 cmp         r0, #0

; 440  :     {
; 441  :         RETAILMSG(TRUE, (L"ERROR: SetRSZParams: CalculateRSZHWParams returned FALSE\r\n"));

  000ec	059f0070	 ldreq       r0, [pc, #0x70]
  000f0	0a000015	 beq         |$LN44@SetRSZPara|

; 442  :         return FALSE;
; 443  :     }
; 444  :             
; 445  : 
; 446  :     if (pOutRSZParams->ulInpType == RSZ_INTYPE_PLANAR_8BIT) {

  000f4	e5943060	 ldr         r3, [r4, #0x60]
  000f8	e3530001	 cmp         r3, #1
  000fc	1a000006	 bne         |$LN3@SetRSZPara|

; 447  : 		if (pOutRSZParams->cropLeft > MAX_HORZ_PIXEL_8BIT) {

  00100	e5941040	 ldr         r1, [r4, #0x40]
  00104	e351001f	 cmp         r1, #0x1F
  00108	9a000003	 bls         |$LN3@SetRSZPara|

; 448  :             RETAILMSG(TRUE, (L"ERROR: SetRSZParams: cropLeft (%d) is greater than %d \r\n",pOutRSZParams->cropLeft, MAX_HORZ_PIXEL_8BIT));

  0010c	e3a0201f	 mov         r2, #0x1F
  00110		 |$LN47@SetRSZPara|
  00110	e59f0048	 ldr         r0, [pc, #0x48]
  00114	eb000000	 bl          NKDbgPrintfW

; 449  : 			return FALSE;

  00118	ea00000c	 b           |$LN45@SetRSZPara|
  0011c		 |$LN3@SetRSZPara|

; 450  :         }
; 451  : 	}
; 452  : 	if (pOutRSZParams->ulInpType == RSZ_INTYPE_YCBCR422_16BIT) {

  0011c	e3530000	 cmp         r3, #0
  00120	1a000003	 bne         |$LN1@SetRSZPara|

; 453  : 		if (pOutRSZParams->cropLeft > MAX_HORZ_PIXEL_16BIT) {

  00124	e5941040	 ldr         r1, [r4, #0x40]
  00128	e351000f	 cmp         r1, #0xF

; 454  :             RETAILMSG(TRUE, (L"ERROR: SetRSZParams: cropLeft (%d) is greater than %d \r\n",pOutRSZParams->cropLeft, MAX_HORZ_PIXEL_16BIT));			

  0012c	83a0200f	 movhi       r2, #0xF
  00130	8afffff6	 bhi         |$LN47@SetRSZPara|
  00134		 |$LN1@SetRSZPara|

; 455  : 			return FALSE;
; 456  : 	    }    
; 457  :     }
; 458  :     
; 459  :     rszContext->state = RSZ_INIT;

  00134	e3a03001	 mov         r3, #1
  00138	e5843064	 str         r3, [r4, #0x64]

; 460  :     return TRUE;

  0013c	e3a00001	 mov         r0, #1

; 461  : }

  00140	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00144	e12fff1e	 bx          lr
  00148		 |$LN16@SetRSZPara|

; 389  : 		    RETAILMSG(1,(L"ERROR: SetRSZParams: params set 0\r\n"));

  00148	e59f000c	 ldr         r0, [pc, #0xC]
  0014c		 |$LN44@SetRSZPara|
  0014c	eb000000	 bl          NKDbgPrintfW
  00150		 |$LN45@SetRSZPara|

; 390  : 		    return FALSE;

  00150	e3a00000	 mov         r0, #0

; 461  : }

  00154	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00158	e12fff1e	 bx          lr
  0015c		 |$LN51@SetRSZPara|
  0015c		 |$LN52@SetRSZPara|
  0015c	00000000	 DCD         |??_C@_1EI@HFAFJHK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAp?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?5?$AAs?$AAe?$AAt?$AA?5@|
  00160		 |$LN53@SetRSZPara|
  00160	00000000	 DCD         |??_C@_1HC@CAGDIDCG@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAc?$AAr?$AAo?$AAp?$AAL?$AAe?$AAf?$AAt?$AA?5?$AA?$CI?$AA?$CF@|
  00164		 |$LN54@SetRSZPara|
  00164	00000000	 DCD         |??_C@_1HG@KPOAAJDE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAC?$AAa?$AAl?$AAc?$AAu?$AAl?$AAa?$AAt?$AAe?$AAR?$AAS@|
  00168		 |$LN55@SetRSZPara|
  00168	00000000	 DCD         |??_C@_1HI@PPCDIPIK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAu?$AAl?$AAO?$AAu?$AAt?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt@|
  0016c		 |$LN56@SetRSZPara|
  0016c	00000000	 DCD         |??_C@_1HG@IFJCLOKN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAR?$AAe?$AAa?$AAd?$AAO?$AAf?$AAf?$AAs?$AAe?$AAt?$AA?5@|
  00170		 |$LN57@SetRSZPara|
  00170	00000000	 DCD         |??_C@_1GG@KOCHMFMI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AA?5?$AAH?$AA?5?$AAs?$AAi@|
  00174		 |$LN58@SetRSZPara|
  00174	00000000	 DCD         |??_C@_1HM@KLCCCIPL@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAp?$AAi?$AAt?$AAc?$AAh?$AA?5?$AAc@|
  00178		 |$LN59@SetRSZPara|
  00178	00000000	 DCD         |??_C@_1FC@JJNAHOON@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAP?$AAi?$AAt?$AAc?$AAh?$AA?5?$AAi?$AAs?$AA?5?$AAi?$AAn@|
  0017c		 |$LN60@SetRSZPara|
  0017c	00000000	 DCD         |??_C@_1FG@JIJCHBKI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAp?$AAi?$AAx@|
  00180		 |$LN61@SetRSZPara|
  00180	00000000	 DCD         |??_C@_1FC@LGMHBLBI@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAS?$AAe?$AAt?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAi?$AAn?$AAp@|
  00184		 |$M40215|

			 ENDP  ; |SetRSZParams|

	EXPORT	|setADDR_RSZParams|
	EXPORT	|??_C@_1IG@IJGPIJKO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAs?$AAe?$AAt?$AAA?$AAD?$AAD?$AAR?$AA_?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAH?$AAo?$AAr?$AAz?$AA?5?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1II@DBLABLKN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAs?$AAe?$AAt?$AAA?$AAD?$AAD?$AAR?$AA_?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAs?$AAt?$AAA?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IG@PPJPHLFB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAs?$AAe?$AAt?$AAA?$AAD?$AAD?$AAR?$AA_?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAs?$AAr?$AAc?$AAA?$AAd?$AAd@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T40251| DCD	|$LN22@setADDR_RS|
	DCD	0x40002b01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IG@IJGPIJKO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAs?$AAe?$AAt?$AAA?$AAD?$AAD?$AAR?$AA_?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAH?$AAo?$AAr?$AAz?$AA?5?$AAs@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "s", 0x0, "e", 0x0, "t", 0x0, "A", 0x0, "D", 0x0, "D"
	DCB	0x0, "R", 0x0, "_", 0x0, "R", 0x0, "S", 0x0, "Z", 0x0, "P"
	DCB	0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "s", 0x0, ":"
	DCB	0x0, " ", 0x0, "H", 0x0, "o", 0x0, "r", 0x0, "z", 0x0, " "
	DCB	0x0, "s", 0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, " "
	DCB	0x0, "p", 0x0, "i", 0x0, "x", 0x0, "e", 0x0, "l", 0x0, " "
	DCB	0x0, "c", 0x0, "a", 0x0, "n", 0x0, "n", 0x0, "o", 0x0, "t"
	DCB	0x0, " ", 0x0, "b", 0x0, "e", 0x0, " ", 0x0, "m", 0x0, "o"
	DCB	0x0, "r", 0x0, "e", 0x0, " ", 0x0, "t", 0x0, "h", 0x0, "a"
	DCB	0x0, "n", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1II@DBLABLKN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAs?$AAe?$AAt?$AAA?$AAD?$AAD?$AAR?$AA_?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAs?$AAt?$AAA?$AAd@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "s", 0x0, "e", 0x0, "t", 0x0, "A", 0x0, "D", 0x0, "D"
	DCB	0x0, "R", 0x0, "_", 0x0, "R", 0x0, "S", 0x0, "Z", 0x0, "P"
	DCB	0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "s", 0x0, ":"
	DCB	0x0, " ", 0x0, "d", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, "A"
	DCB	0x0, "d", 0x0, "d", 0x0, "r", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, " ", 0x0, "s", 0x0, "h", 0x0, "o"
	DCB	0x0, "u", 0x0, "l", 0x0, "d", 0x0, " ", 0x0, "b", 0x0, "e"
	DCB	0x0, " ", 0x0, "3", 0x0, "2", 0x0, "-", 0x0, "b", 0x0, "y"
	DCB	0x0, "t", 0x0, "e", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "i"
	DCB	0x0, "g", 0x0, "n", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IG@PPJPHLFB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAs?$AAe?$AAt?$AAA?$AAD?$AAD?$AAR?$AA_?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAs?$AAr?$AAc?$AAA?$AAd?$AAd@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "s", 0x0, "e", 0x0, "t", 0x0, "A", 0x0, "D", 0x0, "D"
	DCB	0x0, "R", 0x0, "_", 0x0, "R", 0x0, "S", 0x0, "Z", 0x0, "P"
	DCB	0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "s", 0x0, ":"
	DCB	0x0, " ", 0x0, "s", 0x0, "r", 0x0, "c", 0x0, "A", 0x0, "d"
	DCB	0x0, "d", 0x0, "r", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, " ", 0x0, "s", 0x0, "h", 0x0, "o", 0x0, "u"
	DCB	0x0, "l", 0x0, "d", 0x0, " ", 0x0, "b", 0x0, "e", 0x0, " "
	DCB	0x0, "3", 0x0, "2", 0x0, "-", 0x0, "b", 0x0, "y", 0x0, "t"
	DCB	0x0, "e", 0x0, " ", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "g"
	DCB	0x0, "n", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |setADDR_RSZParams| PROC

; 467  : {

  00000		 |$LN22@setADDR_RS|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M40248|
  00004	e1a0e000	 mov         lr, r0

; 468  :     RSZParams_t *pRSZParams = &rszContext->params;
; 469  :     //rszContext->state = RSZ_UNINIT;    
; 470  :     if (pSrcRSZParams->ulReadAddr%ALIGN != 0)

  00008	e5914000	 ldr         r4, [r1]
  0000c	e314001f	 tst         r4, #0x1F
  00010	0a000005	 beq         |$LN5@setADDR_RS|

; 471  :     {
; 472  :         RETAILMSG(TRUE, (L"ERROR: setADDR_RSZParams: srcAddr 0x%x should be 32-byte aligned\r\n",pSrcRSZParams->ulReadAddr));

  00014	e59f008c	 ldr         r0, [pc, #0x8C]
  00018	e1a01004	 mov         r1, r4
  0001c		 |$LN18@setADDR_RS|
  0001c	eb000000	 bl          NKDbgPrintfW

; 473  :         return FALSE;

  00020	e3a00000	 mov         r0, #0

; 501  : }

  00024	e8bd4010	 ldmia       sp!, {r4, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$LN5@setADDR_RS|

; 474  :     }
; 475  :     if (pSrcRSZParams->ulWriteAddr%ALIGN != 0)

  0002c	e591300c	 ldr         r3, [r1, #0xC]
  00030	e313001f	 tst         r3, #0x1F

; 476  :     {
; 477  :         RETAILMSG(TRUE, (L"ERROR: setADDR_RSZParams: destAddr 0x%x should be 32-byte aligned\r\n",pSrcRSZParams->ulWriteAddr));

  00034	159f0068	 ldrne       r0, [pc, #0x68]
  00038	11a01003	 movne       r1, r3
  0003c	1afffff6	 bne         |$LN18@setADDR_RS|

; 478  :         return FALSE;
; 479  :     }
; 480  :     if (pSrcRSZParams->cropLeft < 0) {
; 481  : 		RETAILMSG(TRUE, (L"ERROR: setADDR_RSZParams: Horz start pixel cannot be less than zero (%d)\n",pSrcRSZParams->cropLeft));
; 482  : 		return FALSE;
; 483  :     }
; 484  :     if ((pRSZParams->ulInpType == RSZ_INTYPE_PLANAR_8BIT) && (pSrcRSZParams->cropLeft > MAX_HORZ_PIXEL_8BIT)) {

  00040	e59e2060	 ldr         r2, [lr, #0x60]
  00044	e3520001	 cmp         r2, #1
  00048	1a000005	 bne         |$LN2@setADDR_RS|
  0004c	e5913040	 ldr         r3, [r1, #0x40]
  00050	e353001f	 cmp         r3, #0x1F
  00054	9a000002	 bls         |$LN2@setADDR_RS|
  00058		 |$LN19@setADDR_RS|

; 485  :         RETAILMSG(TRUE, (L"ERROR: setADDR_RSZParams: Horz start pixel cannot be more than %d\n",MAX_HORZ_PIXEL_8BIT));

  00058	e59f0040	 ldr         r0, [pc, #0x40]
  0005c	e3a0101f	 mov         r1, #0x1F

; 486  : 		return FALSE;

  00060	eaffffed	 b           |$LN18@setADDR_RS|
  00064		 |$LN2@setADDR_RS|

; 487  : 	}
; 488  : 	if ((pRSZParams->ulInpType == RSZ_INTYPE_YCBCR422_16BIT) && (pSrcRSZParams->cropLeft > MAX_HORZ_PIXEL_16BIT))

  00064	e3520000	 cmp         r2, #0
  00068	1a000002	 bne         |$LN1@setADDR_RS|
  0006c	e5913040	 ldr         r3, [r1, #0x40]
  00070	e353000f	 cmp         r3, #0xF

; 489  :     {
; 490  : 		RETAILMSG(TRUE, (L"ERROR: setADDR_RSZParams: Horz start pixel cannot be more than %d\n",MAX_HORZ_PIXEL_8BIT));
; 491  : 		return FALSE;

  00074	8afffff7	 bhi         |$LN19@setADDR_RS|
  00078		 |$LN1@setADDR_RS|

; 492  : 	}
; 493  :     
; 494  :     pRSZParams->ulReadAddr = pSrcRSZParams->ulReadAddr;

  00078	e58e4000	 str         r4, [lr]

; 495  :     pRSZParams->ulWriteAddr = pSrcRSZParams->ulWriteAddr;

  0007c	e591300c	 ldr         r3, [r1, #0xC]

; 496  :     pRSZParams->cropLeft= pSrcRSZParams->cropLeft;
; 497  : 
; 498  :     rszContext->state = RSZ_INIT;

  00080	e3a02001	 mov         r2, #1

; 499  : 
; 500  : 	return TRUE;

  00084	e3a00001	 mov         r0, #1
  00088	e58e300c	 str         r3, [lr, #0xC]
  0008c	e5913040	 ldr         r3, [r1, #0x40]
  00090	e58e2064	 str         r2, [lr, #0x64]
  00094	e58e3040	 str         r3, [lr, #0x40]

; 501  : }

  00098	e8bd4010	 ldmia       sp!, {r4, lr}
  0009c	e12fff1e	 bx          lr
  000a0		 |$LN23@setADDR_RS|
  000a0		 |$LN24@setADDR_RS|
  000a0	00000000	 DCD         |??_C@_1IG@IJGPIJKO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAs?$AAe?$AAt?$AAA?$AAD?$AAD?$AAR?$AA_?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAH?$AAo?$AAr?$AAz?$AA?5?$AAs@|
  000a4		 |$LN25@setADDR_RS|
  000a4	00000000	 DCD         |??_C@_1II@DBLABLKN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAs?$AAe?$AAt?$AAA?$AAD?$AAD?$AAR?$AA_?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAd?$AAe?$AAs?$AAt?$AAA?$AAd@|
  000a8		 |$LN26@setADDR_RS|
  000a8	00000000	 DCD         |??_C@_1IG@PPJPHLFB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAs?$AAe?$AAt?$AAA?$AAD?$AAD?$AAR?$AA_?$AAR?$AAS?$AAZ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAs?$AA?3?$AA?5?$AAs?$AAr?$AAc?$AAA?$AAd?$AAd@|
  000ac		 |$M40249|

			 ENDP  ; |setADDR_RSZParams|

	EXPORT	|ConfigureRSZHW|
	EXPORT	|??_C@_1HK@NAIHFJKN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAe?$AAR?$AAS?$AAZ?$AAH?$AAW?$AA?3?$AA?5?$AAu?$AAl?$AAR?$AAe?$AAa?$AAd?$AAA?$AAd?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HC@MICJPAAO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAe?$AAR?$AAS?$AAZ?$AAH?$AAW?$AA?3?$AA?5?$AAi?$AAn?$AAU?$AAs?$AAe?$AAC?$AAo?$AAn?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@NOFEBGOO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAe?$AAR?$AAS?$AAZ?$AAH?$AAW?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T40278| DCD	|$LN29@ConfigureR|
	DCD	0x40019701

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HK@NAIHFJKN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAe?$AAR?$AAS?$AAZ?$AAH?$AAW?$AA?3?$AA?5?$AAu?$AAl?$AAR?$AAe?$AAa?$AAd?$AAA?$AAd?$AAd@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "f", 0x0, "i", 0x0, "g"
	DCB	0x0, "u", 0x0, "r", 0x0, "e", 0x0, "R", 0x0, "S", 0x0, "Z"
	DCB	0x0, "H", 0x0, "W", 0x0, ":", 0x0, " ", 0x0, "u", 0x0, "l"
	DCB	0x0, "R", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "A", 0x0, "d"
	DCB	0x0, "d", 0x0, "r", 0x0, " ", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "u", 0x0, "l", 0x0, "W", 0x0, "r", 0x0, "i", 0x0, "t"
	DCB	0x0, "e", 0x0, "A", 0x0, "d", 0x0, "d", 0x0, "r", 0x0, " "
	DCB	0x0, "a", 0x0, "r", 0x0, "e", 0x0, " ", 0x0, "z", 0x0, "e"
	DCB	0x0, "r", 0x0, "o", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@MICJPAAO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAe?$AAR?$AAS?$AAZ?$AAH?$AAW?$AA?3?$AA?5?$AAi?$AAn?$AAU?$AAs?$AAe?$AAC?$AAo?$AAn?$AAt@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "f", 0x0, "i", 0x0, "g"
	DCB	0x0, "u", 0x0, "r", 0x0, "e", 0x0, "R", 0x0, "S", 0x0, "Z"
	DCB	0x0, "H", 0x0, "W", 0x0, ":", 0x0, " ", 0x0, "i", 0x0, "n"
	DCB	0x0, "U", 0x0, "s", 0x0, "e", 0x0, "C", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, " ", 0x0, "i"
	DCB	0x0, "s", 0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, " "
	DCB	0x0, "z", 0x0, "e", 0x0, "r", 0x0, "o", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@NOFEBGOO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAe?$AAR?$AAS?$AAZ?$AAH?$AAW?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "f", 0x0, "i", 0x0, "g"
	DCB	0x0, "u", 0x0, "r", 0x0, "e", 0x0, "R", 0x0, "S", 0x0, "Z"
	DCB	0x0, "H", 0x0, "W", 0x0, ":", 0x0, " ", 0x0, "s", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "(", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "w"
	DCB	0x0, "r", 0x0, "o", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |ConfigureRSZHW| PROC

; 516  : {

  00000		 |$LN29@ConfigureR|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M40275|
  00004	e1a04000	 mov         r4, r0

; 517  :     ULONG rszCnt = 0;
; 518  :     RSZ_DEVICE_CONTEXT_S * dev = rszContext->dev;
; 519  :     RSZParams_t *pRSZParams = &rszContext->params;
; 520  : 
; 521  :     if (rszContext->state != RSZ_INIT)

  00008	e5941064	 ldr         r1, [r4, #0x64]
  0000c	e5945068	 ldr         r5, [r4, #0x68]
  00010	e3510001	 cmp         r1, #1
  00014	0a000002	 beq         |$LN13@ConfigureR|

; 522  :     {
; 523  :         RETAILMSG(TRUE, (L"ERROR: ConfigureRSZHW: state(%d) is wrong \r\n",rszContext->state));

  00018	e59f0638	 ldr         r0, [pc, #0x638]
  0001c	eb000000	 bl          NKDbgPrintfW

; 524  :         return FALSE;

  00020	ea000186	 b           |$LN24@ConfigureR|
  00024		 |$LN13@ConfigureR|

; 525  :     }
; 526  : 
; 527  :     if (dev->inUseContext != 0)

  00024	e5953020	 ldr         r3, [r5, #0x20]
  00028	e3530000	 cmp         r3, #0
  0002c	0a000003	 beq         |$LN12@ConfigureR|

; 528  :     {
; 529  :         RETAILMSG(TRUE, (L"ERROR: ConfigureRSZHW: inUseContext(0x%x) is not zero \r\n",dev->inUseContext));

  00030	e59f061c	 ldr         r0, [pc, #0x61C]
  00034	e1a01003	 mov         r1, r3
  00038	eb000000	 bl          NKDbgPrintfW
  0003c	ea00017f	 b           |$LN24@ConfigureR|
  00040		 |$LN12@ConfigureR|

; 530  :         return FALSE;
; 531  :     }
; 532  : 
; 533  :     /* check for addresses to be not null */
; 534  :     if ((pRSZParams->ulReadAddr == NULL) || (pRSZParams->ulWriteAddr==NULL))

  00040	e5943000	 ldr         r3, [r4]
  00044	e3530000	 cmp         r3, #0
  00048	0a00017a	 beq         |$LN10@ConfigureR|
  0004c	e594300c	 ldr         r3, [r4, #0xC]
  00050	e3530000	 cmp         r3, #0
  00054	0a000177	 beq         |$LN10@ConfigureR|

; 538  :     }
; 539  : 
; 540  : 
; 541  :     dev->inUseContext = (DWORD)rszContext;    

  00058	e5854020	 str         r4, [r5, #0x20]

; 542  : 
; 543  :     /* RSZ_CNT */
; 544  :     rszCnt = RSZ_CNT_VSTPH(pRSZParams->v_startphase)|
; 545  :             RSZ_CNT_HSTPH(pRSZParams->h_startphase)|
; 546  :             RSZ_CNT_VRSZ((pRSZParams->v_resz - 1))|
; 547  :             RSZ_CNT_HRSZ((pRSZParams->h_resz - 1));
; 548  :     
; 549  :     rszCnt |= RSZ_CNT_INPSRC; /* always Memory input */

  0005c	e5943024	 ldr         r3, [r4, #0x24]
  00060	e5942020	 ldr         r2, [r4, #0x20]
  00064	e594102c	 ldr         r1, [r4, #0x2C]
  00068	e3833020	 orr         r3, r3, #0x20
  0006c	e5940028	 ldr         r0, [r4, #0x28]
  00070	e1822183	 orr         r2, r2, r3, lsl #3

; 550  :     
; 551  :     if (pRSZParams->ulInpType == RSZ_INTYPE_PLANAR_8BIT)

  00074	e594e060	 ldr         lr, [r4, #0x60]
  00078	e2413001	 sub         r3, r1, #1
  0007c	e1832502	 orr         r2, r3, r2, lsl #10
  00080	e2403001	 sub         r3, r0, #1
  00084	e1832502	 orr         r2, r3, r2, lsl #10
  00088	e35e0001	 cmp         lr, #1

; 552  :         rszCnt |= RSZ_CNT_INPTYP;

  0008c	03822302	 orreq       r2, r2, #2, 6
  00090	0a000002	 beq         |$LN7@ConfigureR|

; 553  :     else { /* YUV */
; 554  :         if (pRSZParams->ulPixFmt == RSZ_PIX_FMT_YUYV)

  00094	e594305c	 ldr         r3, [r4, #0x5C]
  00098	e3530001	 cmp         r3, #1

; 555  :             rszCnt |= RSZ_CNT_YCPOS;

  0009c	03822301	 orreq       r2, r2, #1, 6
  000a0		 |$LN7@ConfigureR|

; 556  :     }    
; 557  :     OUTREG32(&dev->m_pCAMRSZ->RSZ_CNT, rszCnt);

  000a0	e5953008	 ldr         r3, [r5, #8]

; 558  :     
; 559  :     OUTREG32(&dev->m_pCAMRSZ->RSZ_SDR_INOFF, pRSZParams->ulReadOffset);    
; 560  :     OUTREG32(&dev->m_pCAMRSZ->RSZ_IN_START, RSZ_IN_START_VERT_ST(pRSZParams->cropTop)|
; 561  :                                        RSZ_IN_START_HORZ_ST(pRSZParams->cropLeft));
; 562  : 
; 563  :     if(pRSZParams->enableZoom)
; 564  :     {
; 565  :         OUTREG32(&dev->m_pCAMRSZ->RSZ_IN_SIZE, RSZ_IN_SIZE_VERT(pRSZParams->cropHeight)|
; 566  :                                       RSZ_IN_SIZE_HORZ(pRSZParams->cropWidth));
; 567  :     }
; 568  :     else
; 569  :     {
; 570  :         OUTREG32(&dev->m_pCAMRSZ->RSZ_IN_SIZE, RSZ_IN_SIZE_VERT(pRSZParams->ulInputImageHeight)|
; 571  :                                       RSZ_IN_SIZE_HORZ(pRSZParams->ulInputImageWidth));
; 572  :     }
; 573  :     OUTREG32(&dev->m_pCAMRSZ->RSZ_OUT_SIZE, RSZ_OUT_SIZE_VERT(pRSZParams->ulOutputImageHeight)|
; 574  :                                        RSZ_OUT_SIZE_HORZ(pRSZParams->ulOutputImageWidth));
; 575  :     // Set the output line offset
; 576  :     OUTREG32(&dev->m_pCAMRSZ->RSZ_SDR_OUTOFF, (pRSZParams->ulOutOffset << RSZ_SDR_OUTOFF_OFFSET_SHIFT));
; 577  :     // Program the Horz filter coeffs
; 578  :     if(pRSZParams->h_resz <= RSZ_MID_RESIZE_VALUE)
; 579  :         {
; 580  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT10), ((Rsz4TapModeHorzFilterTable[0] << RSZ_HFILT_COEFL_SHIFT)
; 581  :                 | (Rsz4TapModeHorzFilterTable[1] << RSZ_HFILT_COEFH_SHIFT)));

  000a4	e59f05a4	 ldr         r0, [pc, #0x5A4]
  000a8	e5832008	 str         r2, [r3, #8]
  000ac	e5952008	 ldr         r2, [r5, #8]
  000b0	e5943004	 ldr         r3, [r4, #4]
  000b4	e582301c	 str         r3, [r2, #0x1C]
  000b8	e594203c	 ldr         r2, [r4, #0x3C]
  000bc	e5943040	 ldr         r3, [r4, #0x40]
  000c0	e5951008	 ldr         r1, [r5, #8]
  000c4	e1833802	 orr         r3, r3, r2, lsl #16
  000c8	e5813010	 str         r3, [r1, #0x10]
  000cc	e5943050	 ldr         r3, [r4, #0x50]
  000d0	e5951008	 ldr         r1, [r5, #8]
  000d4	e3530000	 cmp         r3, #0
  000d8	15942044	 ldrne       r2, [r4, #0x44]
  000dc	15943048	 ldrne       r3, [r4, #0x48]
  000e0	05942014	 ldreq       r2, [r4, #0x14]
  000e4	05943010	 ldreq       r3, [r4, #0x10]
  000e8	e1833802	 orr         r3, r3, r2, lsl #16
  000ec	e5813014	 str         r3, [r1, #0x14]
  000f0	e594201c	 ldr         r2, [r4, #0x1C]
  000f4	e5943018	 ldr         r3, [r4, #0x18]
  000f8	e5951008	 ldr         r1, [r5, #8]
  000fc	e1833802	 orr         r3, r3, r2, lsl #16
  00100	e581300c	 str         r3, [r1, #0xC]
  00104	e5952008	 ldr         r2, [r5, #8]
  00108	e5943058	 ldr         r3, [r4, #0x58]
  0010c	e5823024	 str         r3, [r2, #0x24]
  00110	e5943028	 ldr         r3, [r4, #0x28]
  00114	e5951008	 ldr         r1, [r5, #8]
  00118	e3530c02	 cmp         r3, #2, 24
  0011c	8a00004f	 bhi         |$LN4@ConfigureR|
  00120	e1d020b0	 ldrh        r2, [r0]
  00124	e1d030b2	 ldrh        r3, [r0, #2]
  00128	e1823803	 orr         r3, r2, r3, lsl #16
  0012c	e5813028	 str         r3, [r1, #0x28]

; 582  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT32), ((Rsz4TapModeHorzFilterTable[2] << RSZ_HFILT_COEFL_SHIFT)
; 583  :                 | (Rsz4TapModeHorzFilterTable[3] << RSZ_HFILT_COEFH_SHIFT)));

  00130	e1d010b4	 ldrh        r1, [r0, #4]
  00134	e1d030b6	 ldrh        r3, [r0, #6]
  00138	e5952008	 ldr         r2, [r5, #8]
  0013c	e1813803	 orr         r3, r1, r3, lsl #16
  00140	e582302c	 str         r3, [r2, #0x2C]

; 584  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT54), ((Rsz4TapModeHorzFilterTable[4] << RSZ_HFILT_COEFL_SHIFT)
; 585  :                 | (Rsz4TapModeHorzFilterTable[5] << RSZ_HFILT_COEFH_SHIFT)));

  00144	e1d010b8	 ldrh        r1, [r0, #8]
  00148	e1d030ba	 ldrh        r3, [r0, #0xA]
  0014c	e5952008	 ldr         r2, [r5, #8]
  00150	e1813803	 orr         r3, r1, r3, lsl #16
  00154	e5823030	 str         r3, [r2, #0x30]

; 586  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT76), ((Rsz4TapModeHorzFilterTable[6] << RSZ_HFILT_COEFL_SHIFT)
; 587  :                 | (Rsz4TapModeHorzFilterTable[7] << RSZ_HFILT_COEFH_SHIFT)));

  00158	e1d010bc	 ldrh        r1, [r0, #0xC]
  0015c	e1d030be	 ldrh        r3, [r0, #0xE]
  00160	e5952008	 ldr         r2, [r5, #8]
  00164	e1813803	 orr         r3, r1, r3, lsl #16
  00168	e5823034	 str         r3, [r2, #0x34]

; 588  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT98), ((Rsz4TapModeHorzFilterTable[8] << RSZ_HFILT_COEFL_SHIFT)
; 589  :                 | (Rsz4TapModeHorzFilterTable[9] << RSZ_HFILT_COEFH_SHIFT)));

  0016c	e1d011b0	 ldrh        r1, [r0, #0x10]
  00170	e1d031b2	 ldrh        r3, [r0, #0x12]
  00174	e5952008	 ldr         r2, [r5, #8]
  00178	e1813803	 orr         r3, r1, r3, lsl #16
  0017c	e5823038	 str         r3, [r2, #0x38]

; 590  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT1110), ((Rsz4TapModeHorzFilterTable[10] << RSZ_HFILT_COEFL_SHIFT)
; 591  :                 | (Rsz4TapModeHorzFilterTable[11] << RSZ_HFILT_COEFH_SHIFT)));

  00180	e1d011b4	 ldrh        r1, [r0, #0x14]
  00184	e1d031b6	 ldrh        r3, [r0, #0x16]
  00188	e5952008	 ldr         r2, [r5, #8]
  0018c	e1813803	 orr         r3, r1, r3, lsl #16
  00190	e582303c	 str         r3, [r2, #0x3C]

; 592  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT1312), ((Rsz4TapModeHorzFilterTable[12] << RSZ_HFILT_COEFL_SHIFT)
; 593  :                 | (Rsz4TapModeHorzFilterTable[13] << RSZ_HFILT_COEFH_SHIFT)));

  00194	e1d011b8	 ldrh        r1, [r0, #0x18]
  00198	e1d031ba	 ldrh        r3, [r0, #0x1A]
  0019c	e5952008	 ldr         r2, [r5, #8]
  001a0	e1813803	 orr         r3, r1, r3, lsl #16
  001a4	e5823040	 str         r3, [r2, #0x40]

; 594  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT1514), ((Rsz4TapModeHorzFilterTable[14] << RSZ_HFILT_COEFL_SHIFT)
; 595  :                 | (Rsz4TapModeHorzFilterTable[15] << RSZ_HFILT_COEFH_SHIFT)));

  001a8	e1d011bc	 ldrh        r1, [r0, #0x1C]
  001ac	e1d031be	 ldrh        r3, [r0, #0x1E]
  001b0	e5952008	 ldr         r2, [r5, #8]
  001b4	e1813803	 orr         r3, r1, r3, lsl #16
  001b8	e5823044	 str         r3, [r2, #0x44]

; 596  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT1716), ((Rsz4TapModeHorzFilterTable[16] << RSZ_HFILT_COEFL_SHIFT)
; 597  :                 | (Rsz4TapModeHorzFilterTable[17] << RSZ_HFILT_COEFH_SHIFT)));

  001bc	e1d012b0	 ldrh        r1, [r0, #0x20]
  001c0	e1d032b2	 ldrh        r3, [r0, #0x22]
  001c4	e5952008	 ldr         r2, [r5, #8]
  001c8	e1813803	 orr         r3, r1, r3, lsl #16
  001cc	e5823048	 str         r3, [r2, #0x48]

; 598  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT1918), ((Rsz4TapModeHorzFilterTable[18] << RSZ_HFILT_COEFL_SHIFT)
; 599  :                 | (Rsz4TapModeHorzFilterTable[19] << RSZ_HFILT_COEFH_SHIFT)));

  001d0	e1d012b4	 ldrh        r1, [r0, #0x24]
  001d4	e1d032b6	 ldrh        r3, [r0, #0x26]
  001d8	e5952008	 ldr         r2, [r5, #8]
  001dc	e1813803	 orr         r3, r1, r3, lsl #16
  001e0	e582304c	 str         r3, [r2, #0x4C]

; 600  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT2120), ((Rsz4TapModeHorzFilterTable[20] << RSZ_HFILT_COEFL_SHIFT)
; 601  :                 | (Rsz4TapModeHorzFilterTable[21] << RSZ_HFILT_COEFH_SHIFT)));

  001e4	e1d012b8	 ldrh        r1, [r0, #0x28]
  001e8	e1d032ba	 ldrh        r3, [r0, #0x2A]
  001ec	e5952008	 ldr         r2, [r5, #8]
  001f0	e1813803	 orr         r3, r1, r3, lsl #16
  001f4	e5823050	 str         r3, [r2, #0x50]

; 602  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT2322), ((Rsz4TapModeHorzFilterTable[22] << RSZ_HFILT_COEFL_SHIFT)
; 603  :                 | (Rsz4TapModeHorzFilterTable[23] << RSZ_HFILT_COEFH_SHIFT)));

  001f8	e1d012bc	 ldrh        r1, [r0, #0x2C]
  001fc	e1d032be	 ldrh        r3, [r0, #0x2E]
  00200	e5952008	 ldr         r2, [r5, #8]
  00204	e1813803	 orr         r3, r1, r3, lsl #16
  00208	e5823054	 str         r3, [r2, #0x54]

; 604  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT2524), ((Rsz4TapModeHorzFilterTable[24] << RSZ_HFILT_COEFL_SHIFT)
; 605  :                 | (Rsz4TapModeHorzFilterTable[25] << RSZ_HFILT_COEFH_SHIFT)));

  0020c	e1d013b0	 ldrh        r1, [r0, #0x30]
  00210	e1d033b2	 ldrh        r3, [r0, #0x32]
  00214	e5952008	 ldr         r2, [r5, #8]
  00218	e1813803	 orr         r3, r1, r3, lsl #16
  0021c	e5823058	 str         r3, [r2, #0x58]

; 606  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT2726), ((Rsz4TapModeHorzFilterTable[26] << RSZ_HFILT_COEFL_SHIFT)
; 607  :                 | (Rsz4TapModeHorzFilterTable[27] << RSZ_HFILT_COEFH_SHIFT)));

  00220	e1d013b4	 ldrh        r1, [r0, #0x34]
  00224	e1d033b6	 ldrh        r3, [r0, #0x36]
  00228	e5952008	 ldr         r2, [r5, #8]
  0022c	e1813803	 orr         r3, r1, r3, lsl #16
  00230	e582305c	 str         r3, [r2, #0x5C]

; 608  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT2928), ((Rsz4TapModeHorzFilterTable[28] << RSZ_HFILT_COEFL_SHIFT)
; 609  :                 | (Rsz4TapModeHorzFilterTable[29] << RSZ_HFILT_COEFH_SHIFT)));

  00234	e1d013b8	 ldrh        r1, [r0, #0x38]
  00238	e1d033ba	 ldrh        r3, [r0, #0x3A]
  0023c	e5952008	 ldr         r2, [r5, #8]
  00240	e1813803	 orr         r3, r1, r3, lsl #16
  00244	e5823060	 str         r3, [r2, #0x60]

; 610  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT3130), ((Rsz4TapModeHorzFilterTable[30] << RSZ_HFILT_COEFL_SHIFT)
; 611  :                 | (Rsz4TapModeHorzFilterTable[31] << RSZ_HFILT_COEFH_SHIFT)));

  00248	e1d013bc	 ldrh        r1, [r0, #0x3C]
  0024c	e1d033be	 ldrh        r3, [r0, #0x3E]
  00250	e5952008	 ldr         r2, [r5, #8]
  00254	e1813803	 orr         r3, r1, r3, lsl #16
  00258	e5823064	 str         r3, [r2, #0x64]

; 612  :         }
; 613  :     else

  0025c	ea000046	 b           |$LN3@ConfigureR|
  00260		 |$LN4@ConfigureR|

; 614  :         {
; 615  : 
; 616  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT10), ((Rsz7TapModeHorzFilterTable[0] << RSZ_HFILT_COEFL_SHIFT)
; 617  :                 | (Rsz7TapModeHorzFilterTable[1] << RSZ_HFILT_COEFH_SHIFT)));

  00260	e1d028b0	 ldrh        r2, [r0, #0x80]
  00264	e1d038b2	 ldrh        r3, [r0, #0x82]
  00268	e1823803	 orr         r3, r2, r3, lsl #16
  0026c	e5813028	 str         r3, [r1, #0x28]

; 618  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT32), ((Rsz7TapModeHorzFilterTable[2] << RSZ_HFILT_COEFL_SHIFT)
; 619  :                 | (Rsz7TapModeHorzFilterTable[3] << RSZ_HFILT_COEFH_SHIFT)));

  00270	e1d018b4	 ldrh        r1, [r0, #0x84]
  00274	e1d038b6	 ldrh        r3, [r0, #0x86]
  00278	e5952008	 ldr         r2, [r5, #8]
  0027c	e1813803	 orr         r3, r1, r3, lsl #16
  00280	e582302c	 str         r3, [r2, #0x2C]

; 620  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT54), ((Rsz7TapModeHorzFilterTable[4] << RSZ_HFILT_COEFL_SHIFT)
; 621  :                 | (Rsz7TapModeHorzFilterTable[5] << RSZ_HFILT_COEFH_SHIFT)));

  00284	e1d018b8	 ldrh        r1, [r0, #0x88]
  00288	e1d038ba	 ldrh        r3, [r0, #0x8A]
  0028c	e5952008	 ldr         r2, [r5, #8]
  00290	e1813803	 orr         r3, r1, r3, lsl #16
  00294	e5823030	 str         r3, [r2, #0x30]

; 622  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT76), ((Rsz7TapModeHorzFilterTable[6] << RSZ_HFILT_COEFL_SHIFT)));

  00298	e5952008	 ldr         r2, [r5, #8]
  0029c	e1d038bc	 ldrh        r3, [r0, #0x8C]
  002a0	e5823034	 str         r3, [r2, #0x34]

; 623  : 
; 624  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT98), ((Rsz7TapModeHorzFilterTable[7] << RSZ_HFILT_COEFL_SHIFT)
; 625  :                 | (Rsz7TapModeHorzFilterTable[8] << RSZ_HFILT_COEFH_SHIFT)));

  002a4	e1d018be	 ldrh        r1, [r0, #0x8E]
  002a8	e1d039b0	 ldrh        r3, [r0, #0x90]
  002ac	e5952008	 ldr         r2, [r5, #8]
  002b0	e1813803	 orr         r3, r1, r3, lsl #16
  002b4	e5823038	 str         r3, [r2, #0x38]

; 626  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT1110), ((Rsz7TapModeHorzFilterTable[9] << RSZ_HFILT_COEFL_SHIFT)
; 627  :                 | (Rsz7TapModeHorzFilterTable[10] << RSZ_HFILT_COEFH_SHIFT)));

  002b8	e1d019b2	 ldrh        r1, [r0, #0x92]
  002bc	e1d039b4	 ldrh        r3, [r0, #0x94]
  002c0	e5952008	 ldr         r2, [r5, #8]
  002c4	e1813803	 orr         r3, r1, r3, lsl #16
  002c8	e582303c	 str         r3, [r2, #0x3C]

; 628  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT1312), ((Rsz7TapModeHorzFilterTable[11] << RSZ_HFILT_COEFL_SHIFT)
; 629  :                 | (Rsz7TapModeHorzFilterTable[12] << RSZ_HFILT_COEFH_SHIFT)));

  002cc	e1d019b6	 ldrh        r1, [r0, #0x96]
  002d0	e1d039b8	 ldrh        r3, [r0, #0x98]
  002d4	e5952008	 ldr         r2, [r5, #8]
  002d8	e1813803	 orr         r3, r1, r3, lsl #16
  002dc	e5823040	 str         r3, [r2, #0x40]

; 630  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT1514), ((Rsz7TapModeHorzFilterTable[13] << RSZ_HFILT_COEFL_SHIFT)));

  002e0	e5952008	 ldr         r2, [r5, #8]
  002e4	e1d039ba	 ldrh        r3, [r0, #0x9A]
  002e8	e5823044	 str         r3, [r2, #0x44]

; 631  : 
; 632  : 
; 633  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT1716), ((Rsz7TapModeHorzFilterTable[14] << RSZ_HFILT_COEFL_SHIFT)
; 634  :                 | (Rsz7TapModeHorzFilterTable[15] << RSZ_HFILT_COEFH_SHIFT)));

  002ec	e1d019bc	 ldrh        r1, [r0, #0x9C]
  002f0	e1d039be	 ldrh        r3, [r0, #0x9E]
  002f4	e5952008	 ldr         r2, [r5, #8]
  002f8	e1813803	 orr         r3, r1, r3, lsl #16
  002fc	e5823048	 str         r3, [r2, #0x48]

; 635  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT1918), ((Rsz7TapModeHorzFilterTable[16] << RSZ_HFILT_COEFL_SHIFT)
; 636  :                 | (Rsz7TapModeHorzFilterTable[17] << RSZ_HFILT_COEFH_SHIFT)));

  00300	e1d01ab0	 ldrh        r1, [r0, #0xA0]
  00304	e1d03ab2	 ldrh        r3, [r0, #0xA2]
  00308	e5952008	 ldr         r2, [r5, #8]
  0030c	e1813803	 orr         r3, r1, r3, lsl #16
  00310	e582304c	 str         r3, [r2, #0x4C]

; 637  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT2120), ((Rsz7TapModeHorzFilterTable[18] << RSZ_HFILT_COEFL_SHIFT)
; 638  :                 | (Rsz7TapModeHorzFilterTable[19] << RSZ_HFILT_COEFH_SHIFT)));

  00314	e1d01ab4	 ldrh        r1, [r0, #0xA4]
  00318	e1d03ab6	 ldrh        r3, [r0, #0xA6]
  0031c	e5952008	 ldr         r2, [r5, #8]
  00320	e1813803	 orr         r3, r1, r3, lsl #16
  00324	e5823050	 str         r3, [r2, #0x50]

; 639  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT2322), ((Rsz7TapModeHorzFilterTable[20] << RSZ_HFILT_COEFL_SHIFT)));

  00328	e5952008	 ldr         r2, [r5, #8]
  0032c	e1d03ab8	 ldrh        r3, [r0, #0xA8]
  00330	e5823054	 str         r3, [r2, #0x54]

; 640  : 
; 641  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT2524), ((Rsz7TapModeHorzFilterTable[21] << RSZ_HFILT_COEFL_SHIFT)
; 642  :                 | (Rsz7TapModeHorzFilterTable[22] << RSZ_HFILT_COEFH_SHIFT)));

  00334	e1d01aba	 ldrh        r1, [r0, #0xAA]
  00338	e1d03abc	 ldrh        r3, [r0, #0xAC]
  0033c	e5952008	 ldr         r2, [r5, #8]
  00340	e1813803	 orr         r3, r1, r3, lsl #16
  00344	e5823058	 str         r3, [r2, #0x58]

; 643  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT2726), ((Rsz7TapModeHorzFilterTable[23] << RSZ_HFILT_COEFL_SHIFT)
; 644  :                 | (Rsz7TapModeHorzFilterTable[24] << RSZ_HFILT_COEFH_SHIFT)));

  00348	e1d01abe	 ldrh        r1, [r0, #0xAE]
  0034c	e1d03bb0	 ldrh        r3, [r0, #0xB0]
  00350	e5952008	 ldr         r2, [r5, #8]
  00354	e1813803	 orr         r3, r1, r3, lsl #16
  00358	e582305c	 str         r3, [r2, #0x5C]

; 645  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT2928), ((Rsz7TapModeHorzFilterTable[25] << RSZ_HFILT_COEFL_SHIFT)
; 646  :                 | (Rsz7TapModeHorzFilterTable[26] << RSZ_HFILT_COEFH_SHIFT)));

  0035c	e1d01bb2	 ldrh        r1, [r0, #0xB2]
  00360	e1d03bb4	 ldrh        r3, [r0, #0xB4]
  00364	e5952008	 ldr         r2, [r5, #8]
  00368	e1813803	 orr         r3, r1, r3, lsl #16
  0036c	e5823060	 str         r3, [r2, #0x60]

; 647  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_HFILT3130), ((Rsz7TapModeHorzFilterTable[27] << RSZ_HFILT_COEFL_SHIFT)));

  00370	e5952008	 ldr         r2, [r5, #8]
  00374	e1d03bb6	 ldrh        r3, [r0, #0xB6]
  00378	e5823064	 str         r3, [r2, #0x64]
  0037c		 |$LN3@ConfigureR|

; 648  :         }
; 649  : 
; 650  :     // Program the Vert filter coeffs
; 651  :     if(pRSZParams->v_resz <= RSZ_MID_RESIZE_VALUE)

  0037c	e594302c	 ldr         r3, [r4, #0x2C]

; 652  :         {
; 653  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT10), ((Rsz4TapModeVertFilterTable[0] << RSZ_VFILT_COEFL_SHIFT)
; 654  :                 | (Rsz4TapModeVertFilterTable[1] << RSZ_VFILT_COEFH_SHIFT)));

  00380	e5952008	 ldr         r2, [r5, #8]
  00384	e3530c02	 cmp         r3, #2, 24
  00388	8a00004f	 bhi         |$LN2@ConfigureR|
  0038c	e1d014b0	 ldrh        r1, [r0, #0x40]
  00390	e1d034b2	 ldrh        r3, [r0, #0x42]
  00394	e1813803	 orr         r3, r1, r3, lsl #16
  00398	e5823068	 str         r3, [r2, #0x68]

; 655  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT32), ((Rsz4TapModeVertFilterTable[2] << RSZ_VFILT_COEFL_SHIFT)
; 656  :                 | (Rsz4TapModeVertFilterTable[3] << RSZ_VFILT_COEFH_SHIFT)));

  0039c	e1d014b4	 ldrh        r1, [r0, #0x44]
  003a0	e1d034b6	 ldrh        r3, [r0, #0x46]
  003a4	e5952008	 ldr         r2, [r5, #8]
  003a8	e1813803	 orr         r3, r1, r3, lsl #16
  003ac	e582306c	 str         r3, [r2, #0x6C]

; 657  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT54), ((Rsz4TapModeVertFilterTable[4] << RSZ_VFILT_COEFL_SHIFT)
; 658  :                 | (Rsz4TapModeVertFilterTable[5] << RSZ_VFILT_COEFH_SHIFT)));

  003b0	e1d014b8	 ldrh        r1, [r0, #0x48]
  003b4	e1d034ba	 ldrh        r3, [r0, #0x4A]
  003b8	e5952008	 ldr         r2, [r5, #8]
  003bc	e1813803	 orr         r3, r1, r3, lsl #16
  003c0	e5823070	 str         r3, [r2, #0x70]

; 659  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT76), ((Rsz4TapModeVertFilterTable[6] << RSZ_VFILT_COEFL_SHIFT)
; 660  :                 | (Rsz4TapModeVertFilterTable[7] << RSZ_VFILT_COEFH_SHIFT)));

  003c4	e1d014bc	 ldrh        r1, [r0, #0x4C]
  003c8	e1d034be	 ldrh        r3, [r0, #0x4E]
  003cc	e5952008	 ldr         r2, [r5, #8]
  003d0	e1813803	 orr         r3, r1, r3, lsl #16
  003d4	e5823074	 str         r3, [r2, #0x74]

; 661  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT98), ((Rsz4TapModeVertFilterTable[8] << RSZ_VFILT_COEFL_SHIFT)
; 662  :                 | (Rsz4TapModeVertFilterTable[9] << RSZ_VFILT_COEFH_SHIFT)));

  003d8	e1d015b0	 ldrh        r1, [r0, #0x50]
  003dc	e1d035b2	 ldrh        r3, [r0, #0x52]
  003e0	e5952008	 ldr         r2, [r5, #8]
  003e4	e1813803	 orr         r3, r1, r3, lsl #16
  003e8	e5823078	 str         r3, [r2, #0x78]

; 663  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT1110), ((Rsz4TapModeVertFilterTable[10] << RSZ_VFILT_COEFL_SHIFT)
; 664  :                 | (Rsz4TapModeVertFilterTable[11] << RSZ_VFILT_COEFH_SHIFT)));

  003ec	e1d015b4	 ldrh        r1, [r0, #0x54]
  003f0	e1d035b6	 ldrh        r3, [r0, #0x56]
  003f4	e5952008	 ldr         r2, [r5, #8]
  003f8	e1813803	 orr         r3, r1, r3, lsl #16
  003fc	e582307c	 str         r3, [r2, #0x7C]

; 665  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT1312), ((Rsz4TapModeVertFilterTable[12] << RSZ_VFILT_COEFL_SHIFT)
; 666  :                 | (Rsz4TapModeVertFilterTable[13] << RSZ_VFILT_COEFH_SHIFT)));

  00400	e1d015b8	 ldrh        r1, [r0, #0x58]
  00404	e1d035ba	 ldrh        r3, [r0, #0x5A]
  00408	e5952008	 ldr         r2, [r5, #8]
  0040c	e1813803	 orr         r3, r1, r3, lsl #16
  00410	e5823080	 str         r3, [r2, #0x80]

; 667  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT1514), ((Rsz4TapModeVertFilterTable[14] << RSZ_VFILT_COEFL_SHIFT)
; 668  :                 | (Rsz4TapModeVertFilterTable[15] << RSZ_VFILT_COEFH_SHIFT)));

  00414	e1d015bc	 ldrh        r1, [r0, #0x5C]
  00418	e1d035be	 ldrh        r3, [r0, #0x5E]
  0041c	e5952008	 ldr         r2, [r5, #8]
  00420	e1813803	 orr         r3, r1, r3, lsl #16
  00424	e5823084	 str         r3, [r2, #0x84]

; 669  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT1716), ((Rsz4TapModeVertFilterTable[16] << RSZ_VFILT_COEFL_SHIFT)
; 670  :                 | (Rsz4TapModeVertFilterTable[17] << RSZ_VFILT_COEFH_SHIFT)));

  00428	e1d016b0	 ldrh        r1, [r0, #0x60]
  0042c	e1d036b2	 ldrh        r3, [r0, #0x62]
  00430	e5952008	 ldr         r2, [r5, #8]
  00434	e1813803	 orr         r3, r1, r3, lsl #16
  00438	e5823088	 str         r3, [r2, #0x88]

; 671  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT1918), ((Rsz4TapModeVertFilterTable[18] << RSZ_VFILT_COEFL_SHIFT)
; 672  :                 | (Rsz4TapModeVertFilterTable[19] << RSZ_VFILT_COEFH_SHIFT)));

  0043c	e1d016b4	 ldrh        r1, [r0, #0x64]
  00440	e1d036b6	 ldrh        r3, [r0, #0x66]
  00444	e5952008	 ldr         r2, [r5, #8]
  00448	e1813803	 orr         r3, r1, r3, lsl #16
  0044c	e582308c	 str         r3, [r2, #0x8C]

; 673  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT2120), ((Rsz4TapModeVertFilterTable[20] << RSZ_VFILT_COEFL_SHIFT)
; 674  :                 | (Rsz4TapModeVertFilterTable[21] << RSZ_VFILT_COEFH_SHIFT)));

  00450	e1d016b8	 ldrh        r1, [r0, #0x68]
  00454	e1d036ba	 ldrh        r3, [r0, #0x6A]
  00458	e5952008	 ldr         r2, [r5, #8]
  0045c	e1813803	 orr         r3, r1, r3, lsl #16
  00460	e5823090	 str         r3, [r2, #0x90]

; 675  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT2322), ((Rsz4TapModeVertFilterTable[22] << RSZ_VFILT_COEFL_SHIFT)
; 676  :                 | (Rsz4TapModeVertFilterTable[23] << RSZ_VFILT_COEFH_SHIFT)));

  00464	e1d016bc	 ldrh        r1, [r0, #0x6C]
  00468	e1d036be	 ldrh        r3, [r0, #0x6E]
  0046c	e5952008	 ldr         r2, [r5, #8]
  00470	e1813803	 orr         r3, r1, r3, lsl #16
  00474	e5823094	 str         r3, [r2, #0x94]

; 677  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT2524), ((Rsz4TapModeVertFilterTable[24] << RSZ_VFILT_COEFL_SHIFT)
; 678  :                 | (Rsz4TapModeVertFilterTable[25] << RSZ_VFILT_COEFH_SHIFT)));

  00478	e1d017b0	 ldrh        r1, [r0, #0x70]
  0047c	e1d037b2	 ldrh        r3, [r0, #0x72]
  00480	e5952008	 ldr         r2, [r5, #8]
  00484	e1813803	 orr         r3, r1, r3, lsl #16
  00488	e5823098	 str         r3, [r2, #0x98]

; 679  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT2726), ((Rsz4TapModeVertFilterTable[26] << RSZ_VFILT_COEFL_SHIFT)
; 680  :                 | (Rsz4TapModeVertFilterTable[27] << RSZ_VFILT_COEFH_SHIFT)));

  0048c	e1d017b4	 ldrh        r1, [r0, #0x74]
  00490	e1d037b6	 ldrh        r3, [r0, #0x76]
  00494	e5952008	 ldr         r2, [r5, #8]
  00498	e1813803	 orr         r3, r1, r3, lsl #16
  0049c	e582309c	 str         r3, [r2, #0x9C]

; 681  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT2928), ((Rsz4TapModeVertFilterTable[28] << RSZ_VFILT_COEFL_SHIFT)
; 682  :                 | (Rsz4TapModeVertFilterTable[29] << RSZ_VFILT_COEFH_SHIFT)));

  004a0	e1d017b8	 ldrh        r1, [r0, #0x78]
  004a4	e1d037ba	 ldrh        r3, [r0, #0x7A]
  004a8	e5952008	 ldr         r2, [r5, #8]
  004ac	e1813803	 orr         r3, r1, r3, lsl #16
  004b0	e58230a0	 str         r3, [r2, #0xA0]

; 683  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT3130), ((Rsz4TapModeVertFilterTable[30] << RSZ_VFILT_COEFL_SHIFT)
; 684  :                 | (Rsz4TapModeVertFilterTable[31] << RSZ_VFILT_COEFH_SHIFT)));      }

  004b4	e1d017bc	 ldrh        r1, [r0, #0x7C]
  004b8	e1d037be	 ldrh        r3, [r0, #0x7E]
  004bc	e5952008	 ldr         r2, [r5, #8]
  004c0	e1813803	 orr         r3, r1, r3, lsl #16
  004c4	e58230a4	 str         r3, [r2, #0xA4]

; 685  :     else

  004c8	ea000046	 b           |$LN1@ConfigureR|
  004cc		 |$LN2@ConfigureR|

; 686  :         {
; 687  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT10), ((Rsz7TapModeVertFilterTable[0] << RSZ_VFILT_COEFL_SHIFT)
; 688  :                 | (Rsz7TapModeVertFilterTable[1] << RSZ_VFILT_COEFH_SHIFT)));

  004cc	e1d01bb8	 ldrh        r1, [r0, #0xB8]
  004d0	e1d03bba	 ldrh        r3, [r0, #0xBA]
  004d4	e1813803	 orr         r3, r1, r3, lsl #16
  004d8	e5823068	 str         r3, [r2, #0x68]

; 689  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT32), ((Rsz7TapModeVertFilterTable[2] << RSZ_VFILT_COEFL_SHIFT)
; 690  :                 | (Rsz7TapModeVertFilterTable[3] << RSZ_VFILT_COEFH_SHIFT)));

  004dc	e1d01bbc	 ldrh        r1, [r0, #0xBC]
  004e0	e1d03bbe	 ldrh        r3, [r0, #0xBE]
  004e4	e5952008	 ldr         r2, [r5, #8]
  004e8	e1813803	 orr         r3, r1, r3, lsl #16
  004ec	e582306c	 str         r3, [r2, #0x6C]

; 691  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT54), ((Rsz7TapModeVertFilterTable[4] << RSZ_VFILT_COEFL_SHIFT)
; 692  :                 | (Rsz7TapModeVertFilterTable[5] << RSZ_VFILT_COEFH_SHIFT)));

  004f0	e1d01cb0	 ldrh        r1, [r0, #0xC0]
  004f4	e1d03cb2	 ldrh        r3, [r0, #0xC2]
  004f8	e5952008	 ldr         r2, [r5, #8]
  004fc	e1813803	 orr         r3, r1, r3, lsl #16
  00500	e5823070	 str         r3, [r2, #0x70]

; 693  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT76), ((Rsz7TapModeVertFilterTable[6] << RSZ_VFILT_COEFL_SHIFT)));

  00504	e5952008	 ldr         r2, [r5, #8]
  00508	e1d03cb4	 ldrh        r3, [r0, #0xC4]
  0050c	e5823074	 str         r3, [r2, #0x74]

; 694  : 
; 695  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT98), ((Rsz7TapModeVertFilterTable[7] << RSZ_VFILT_COEFL_SHIFT)
; 696  :                 | (Rsz7TapModeVertFilterTable[8] << RSZ_VFILT_COEFH_SHIFT)));

  00510	e1d01cb6	 ldrh        r1, [r0, #0xC6]
  00514	e1d03cb8	 ldrh        r3, [r0, #0xC8]
  00518	e5952008	 ldr         r2, [r5, #8]
  0051c	e1813803	 orr         r3, r1, r3, lsl #16
  00520	e5823078	 str         r3, [r2, #0x78]

; 697  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT1110), ((Rsz7TapModeVertFilterTable[9] << RSZ_VFILT_COEFL_SHIFT)
; 698  :                 | (Rsz7TapModeVertFilterTable[10] << RSZ_VFILT_COEFH_SHIFT)));

  00524	e1d01cba	 ldrh        r1, [r0, #0xCA]
  00528	e1d03cbc	 ldrh        r3, [r0, #0xCC]
  0052c	e5952008	 ldr         r2, [r5, #8]
  00530	e1813803	 orr         r3, r1, r3, lsl #16
  00534	e582307c	 str         r3, [r2, #0x7C]

; 699  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT1312), ((Rsz7TapModeVertFilterTable[11] << RSZ_VFILT_COEFL_SHIFT)
; 700  :                 | (Rsz7TapModeVertFilterTable[12] << RSZ_VFILT_COEFH_SHIFT)));

  00538	e1d01cbe	 ldrh        r1, [r0, #0xCE]
  0053c	e1d03db0	 ldrh        r3, [r0, #0xD0]
  00540	e5952008	 ldr         r2, [r5, #8]
  00544	e1813803	 orr         r3, r1, r3, lsl #16
  00548	e5823080	 str         r3, [r2, #0x80]

; 701  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT1514), ((Rsz7TapModeVertFilterTable[13] << RSZ_VFILT_COEFL_SHIFT)));

  0054c	e5952008	 ldr         r2, [r5, #8]
  00550	e1d03db2	 ldrh        r3, [r0, #0xD2]
  00554	e5823084	 str         r3, [r2, #0x84]

; 702  : 
; 703  : 
; 704  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT1716), ((Rsz7TapModeVertFilterTable[14] << RSZ_VFILT_COEFL_SHIFT)
; 705  :                 | (Rsz7TapModeVertFilterTable[15] << RSZ_VFILT_COEFH_SHIFT)));

  00558	e1d01db4	 ldrh        r1, [r0, #0xD4]
  0055c	e1d03db6	 ldrh        r3, [r0, #0xD6]
  00560	e5952008	 ldr         r2, [r5, #8]
  00564	e1813803	 orr         r3, r1, r3, lsl #16
  00568	e5823088	 str         r3, [r2, #0x88]

; 706  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT1918), ((Rsz7TapModeVertFilterTable[16] << RSZ_VFILT_COEFL_SHIFT)
; 707  :                 | (Rsz7TapModeVertFilterTable[17] << RSZ_VFILT_COEFH_SHIFT)));

  0056c	e1d01db8	 ldrh        r1, [r0, #0xD8]
  00570	e1d03dba	 ldrh        r3, [r0, #0xDA]
  00574	e5952008	 ldr         r2, [r5, #8]
  00578	e1813803	 orr         r3, r1, r3, lsl #16
  0057c	e582308c	 str         r3, [r2, #0x8C]

; 708  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT2120), ((Rsz7TapModeVertFilterTable[18] << RSZ_VFILT_COEFL_SHIFT)
; 709  :                 | (Rsz7TapModeVertFilterTable[19] << RSZ_VFILT_COEFH_SHIFT)));

  00580	e1d01dbc	 ldrh        r1, [r0, #0xDC]
  00584	e1d03dbe	 ldrh        r3, [r0, #0xDE]
  00588	e5952008	 ldr         r2, [r5, #8]
  0058c	e1813803	 orr         r3, r1, r3, lsl #16
  00590	e5823090	 str         r3, [r2, #0x90]

; 710  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT2322), ((Rsz7TapModeVertFilterTable[20] << RSZ_VFILT_COEFL_SHIFT)));

  00594	e5952008	 ldr         r2, [r5, #8]
  00598	e1d03eb0	 ldrh        r3, [r0, #0xE0]
  0059c	e5823094	 str         r3, [r2, #0x94]

; 711  : 
; 712  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT2524), ((Rsz7TapModeVertFilterTable[21] << RSZ_VFILT_COEFL_SHIFT)
; 713  :                 | (Rsz7TapModeVertFilterTable[22] << RSZ_VFILT_COEFH_SHIFT)));

  005a0	e1d01eb2	 ldrh        r1, [r0, #0xE2]
  005a4	e1d03eb4	 ldrh        r3, [r0, #0xE4]
  005a8	e5952008	 ldr         r2, [r5, #8]
  005ac	e1813803	 orr         r3, r1, r3, lsl #16
  005b0	e5823098	 str         r3, [r2, #0x98]

; 714  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT2726), ((Rsz7TapModeVertFilterTable[23] << RSZ_VFILT_COEFL_SHIFT)
; 715  :                 | (Rsz7TapModeVertFilterTable[24] << RSZ_VFILT_COEFH_SHIFT)));

  005b4	e1d01eb6	 ldrh        r1, [r0, #0xE6]
  005b8	e1d03eb8	 ldrh        r3, [r0, #0xE8]
  005bc	e5952008	 ldr         r2, [r5, #8]
  005c0	e1813803	 orr         r3, r1, r3, lsl #16
  005c4	e582309c	 str         r3, [r2, #0x9C]

; 716  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT2928), ((Rsz7TapModeVertFilterTable[25] << RSZ_VFILT_COEFL_SHIFT)
; 717  :                 | (Rsz7TapModeVertFilterTable[26] << RSZ_VFILT_COEFH_SHIFT)));

  005c8	e1d02eba	 ldrh        r2, [r0, #0xEA]
  005cc	e1d03ebc	 ldrh        r3, [r0, #0xEC]
  005d0	e1822803	 orr         r2, r2, r3, lsl #16
  005d4	e5953008	 ldr         r3, [r5, #8]
  005d8	e58320a0	 str         r2, [r3, #0xA0]

; 718  :             OUTREG32((&dev->m_pCAMRSZ->RSZ_VFILT3130), ((Rsz7TapModeVertFilterTable[27] << RSZ_VFILT_COEFL_SHIFT)));

  005dc	e5952008	 ldr         r2, [r5, #8]
  005e0	e1d03ebe	 ldrh        r3, [r0, #0xEE]
  005e4	e58230a4	 str         r3, [r2, #0xA4]
  005e8		 |$LN1@ConfigureR|

; 719  :         }
; 720  : 
; 721  :     /* Configure RSZ in one shot mode */
; 722  :     SETREG32(&dev->m_pCAMRSZ->RSZ_PCR, RSZ_PCR_ONESHOT);

  005e8	e5952008	 ldr         r2, [r5, #8]

; 723  : 
; 724  :     OUTREG32(&dev->m_pCAMRSZ->RSZ_SDR_INADD, pRSZParams->ulReadAddr + (pRSZParams->enableZoom ? pRSZParams->ulReadAddrOffset : 0));
; 725  :     // Set SDR output address
; 726  :     OUTREG32(&dev->m_pCAMRSZ->RSZ_SDR_OUTADD, pRSZParams->ulWriteAddr);
; 727  : 
; 728  :     rszContext->state = RSZ_LOADED;

  005ec	e3a0e002	 mov         lr, #2

; 729  :     return TRUE;

  005f0	e3a00001	 mov         r0, #1
  005f4	e5923004	 ldr         r3, [r2, #4]
  005f8	e3833004	 orr         r3, r3, #4
  005fc	e5823004	 str         r3, [r2, #4]
  00600	e5943050	 ldr         r3, [r4, #0x50]
  00604	e5952008	 ldr         r2, [r5, #8]
  00608	e3530000	 cmp         r3, #0
  0060c	e5943000	 ldr         r3, [r4]
  00610	15941008	 ldrne       r1, [r4, #8]
  00614	03a01000	 moveq       r1, #0
  00618	e0813003	 add         r3, r1, r3
  0061c	e5823018	 str         r3, [r2, #0x18]
  00620	e5952008	 ldr         r2, [r5, #8]
  00624	e594300c	 ldr         r3, [r4, #0xC]
  00628	e5823020	 str         r3, [r2, #0x20]
  0062c	e584e064	 str         lr, [r4, #0x64]

; 730  : }

  00630	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00634	e12fff1e	 bx          lr
  00638		 |$LN10@ConfigureR|

; 535  :     {
; 536  :         RETAILMSG(TRUE, (L"ERROR: ConfigureRSZHW: ulReadAddr or ulWriteAddr are zero \r\n"));

  00638	e59f000c	 ldr         r0, [pc, #0xC]
  0063c	eb000000	 bl          NKDbgPrintfW
  00640		 |$LN24@ConfigureR|

; 537  :         return FALSE;

  00640	e3a00000	 mov         r0, #0

; 730  : }

  00644	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00648	e12fff1e	 bx          lr
  0064c		 |$LN30@ConfigureR|
  0064c		 |$LN31@ConfigureR|
  0064c	00000000	 DCD         |??_C@_1HK@NAIHFJKN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAe?$AAR?$AAS?$AAZ?$AAH?$AAW?$AA?3?$AA?5?$AAu?$AAl?$AAR?$AAe?$AAa?$AAd?$AAA?$AAd?$AAd@|
  00650		 |$LN32@ConfigureR|
  00650	00000000	 DCD         |Rsz4TapModeHorzFilterTable|
  00654		 |$LN33@ConfigureR|
  00654	00000000	 DCD         |??_C@_1HC@MICJPAAO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAe?$AAR?$AAS?$AAZ?$AAH?$AAW?$AA?3?$AA?5?$AAi?$AAn?$AAU?$AAs?$AAe?$AAC?$AAo?$AAn?$AAt@|
  00658		 |$LN34@ConfigureR|
  00658	00000000	 DCD         |??_C@_1FK@NOFEBGOO@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAC?$AAo?$AAn?$AAf?$AAi?$AAg?$AAu?$AAr?$AAe?$AAR?$AAS?$AAZ?$AAH?$AAW?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ@|
  0065c		 |$M40276|

			 ENDP  ; |ConfigureRSZHW|

	EXPORT	|EnableRSZHW|
	EXPORT	|??_C@_1JK@CENFNOKE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAR?$AAS?$AAZ?$AA?3?$AA?5?$AAB?$AAu?$AAs?$AAy?$AA?5?$AAb?$AAi?$AAt?$AA?5?$AAi?$AAs?$AA?5?$AAs?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IC@FBPDILK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAR?$AAS?$AAZ?$AAH?$AAW?$AA?3?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@HEHJJHCB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAR?$AAS?$AAZ?$AAH?$AAW?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAi?$AAs@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T40302| DCD	|$LN18@EnableRSZH|
	DCD	0x40003001

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JK@CENFNOKE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAR?$AAS?$AAZ?$AA?3?$AA?5?$AAB?$AAu?$AAs?$AAy?$AA?5?$AAb?$AAi?$AAt?$AA?5?$AAi?$AAs?$AA?5?$AAs?$AAt@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, "R", 0x0, "S", 0x0, "Z", 0x0, ":", 0x0, " ", 0x0, "B"
	DCB	0x0, "u", 0x0, "s", 0x0, "y", 0x0, " ", 0x0, "b", 0x0, "i"
	DCB	0x0, "t", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "s"
	DCB	0x0, "t", 0x0, "i", 0x0, "l", 0x0, "l", 0x0, " ", 0x0, "s"
	DCB	0x0, "e", 0x0, "t", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "c"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, " "
	DCB	0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, " ", 0x0, "u", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "l"
	DCB	0x0, " ", 0x0, "b", 0x0, "u", 0x0, "s", 0x0, "y", 0x0, " "
	DCB	0x0, "b", 0x0, "i", 0x0, "t", 0x0, " ", 0x0, "s", 0x0, "e"
	DCB	0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IC@FBPDILK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAR?$AAS?$AAZ?$AAH?$AAW?$AA?3?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, "R", 0x0, "S", 0x0, "Z", 0x0, "H", 0x0, "W", 0x0, ":"
	DCB	0x0, " ", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "x", 0x0, "t", 0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, ")", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " "
	DCB	0x0, "n", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "t", 0x0, "h"
	DCB	0x0, "e", 0x0, " ", 0x0, "o", 0x0, "n", 0x0, "e", 0x0, " "
	DCB	0x0, "l", 0x0, "o", 0x0, "a", 0x0, "d", 0x0, "e", 0x0, "d"
	DCB	0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")"
	DCB	0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@HEHJJHCB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAR?$AAS?$AAZ?$AAH?$AAW?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAi?$AAs@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "E", 0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e"
	DCB	0x0, "R", 0x0, "S", 0x0, "Z", 0x0, "H", 0x0, "W", 0x0, ":"
	DCB	0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, " ", 0x0, "i"
	DCB	0x0, "s", 0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, " "
	DCB	0x0, "l", 0x0, "o", 0x0, "a", 0x0, "d", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |EnableRSZHW| PROC

; 740  : {  

  00000		 |$LN18@EnableRSZH|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M40299|
  00004	e1a0e000	 mov         lr, r0

; 741  :     RSZ_DEVICE_CONTEXT_S * dev = rszContext->dev;

  00008	e59e0068	 ldr         r0, [lr, #0x68]

; 742  :     
; 743  :     if (bEnableFlag == TRUE)

  0000c	e3510001	 cmp         r1, #1
  00010	1a00001c	 bne         |$LN6@EnableRSZH|

; 744  :     {
; 745  :         if (rszContext->state != RSZ_LOADED)

  00014	e59e1064	 ldr         r1, [lr, #0x64]
  00018	e3510002	 cmp         r1, #2
  0001c	0a000004	 beq         |$LN5@EnableRSZH|

; 746  :         {
; 747  :             RETAILMSG(TRUE, (L"ERROR: EnableRSZHW: state(%d) is not loaded \r\n",rszContext->state));

  00020	e59f0094	 ldr         r0, [pc, #0x94]
  00024	eb000000	 bl          NKDbgPrintfW
  00028		 |$LN15@EnableRSZH|

; 748  :             return FALSE;

  00028	e3a00000	 mov         r0, #0

; 776  : };

  0002c	e8bd4010	 ldmia       sp!, {r4, lr}
  00030	e12fff1e	 bx          lr
  00034		 |$LN5@EnableRSZH|

; 749  :         }
; 750  : 
; 751  :             /* allow enable/disable only if this context's params are loaded */
; 752  :         if (dev->inUseContext != (DWORD)rszContext)

  00034	e5902020	 ldr         r2, [r0, #0x20]
  00038	e152000e	 cmp         r2, lr
  0003c	0a000003	 beq         |$LN4@EnableRSZH|

; 753  :         {
; 754  :             RETAILMSG(TRUE, (L"ERROR: EnableRSZHW: Context(0x%x) is not the one loaded(0x%x) \r\n",rszContext,dev->inUseContext));

  00040	e59f0070	 ldr         r0, [pc, #0x70]
  00044	e1a0100e	 mov         r1, lr
  00048	eb000000	 bl          NKDbgPrintfW

; 755  :             return FALSE;

  0004c	eafffff5	 b           |$LN15@EnableRSZH|
  00050		 |$LN4@EnableRSZH|

; 756  :         }
; 757  :         
; 758  :         if ((INREG32(&dev->m_pCAMRSZ->RSZ_PCR) & RSZ_PCR_BUSY) == RSZ_PCR_BUSY)

  00050	e5902008	 ldr         r2, [r0, #8]
  00054	e5923004	 ldr         r3, [r2, #4]
  00058	e2033002	 and         r3, r3, #2
  0005c	e3530002	 cmp         r3, #2
  00060	1a000002	 bne         |$LN3@EnableRSZH|

; 759  :         {
; 760  :             RETAILMSG(TRUE,(L"ERROR: EnableRSZ: Busy bit is still set - cannot Enable until busy bit set\r\n"));

  00064	e59f0048	 ldr         r0, [pc, #0x48]
  00068	eb000000	 bl          NKDbgPrintfW

; 761  :             return FALSE;

  0006c	eaffffed	 b           |$LN15@EnableRSZH|
  00070		 |$LN3@EnableRSZH|

; 762  :         }
; 763  :         else 
; 764  :         {
; 765  :             SETREG32(&dev->m_pCAMRSZ->RSZ_PCR, RSZ_PCR_ENABLE);

  00070	e5923004	 ldr         r3, [r2, #4]

; 766  :             rszContext->state = RSZ_BUSY;

  00074	e3a01003	 mov         r1, #3
  00078	e3833001	 orr         r3, r3, #1
  0007c	e5823004	 str         r3, [r2, #4]
  00080	e58e1064	 str         r1, [lr, #0x64]

; 767  :         }
; 768  :     }
; 769  :     else

  00084	ea000007	 b           |$LN1@EnableRSZH|
  00088		 |$LN6@EnableRSZH|

; 770  :     {        
; 771  :         CLRREG32(&dev->m_pCAMRSZ->RSZ_PCR, RSZ_PCR_ENABLE);

  00088	e5902008	 ldr         r2, [r0, #8]

; 772  :         rszContext->state = RSZ_INIT;

  0008c	e3a04001	 mov         r4, #1

; 773  :         dev->inUseContext = 0;

  00090	e3a01000	 mov         r1, #0
  00094	e5923004	 ldr         r3, [r2, #4]
  00098	e3c33001	 bic         r3, r3, #1
  0009c	e5823004	 str         r3, [r2, #4]
  000a0	e58e4064	 str         r4, [lr, #0x64]
  000a4	e5801020	 str         r1, [r0, #0x20]
  000a8		 |$LN1@EnableRSZH|

; 774  :     }
; 775  :     return TRUE;

  000a8	e3a00001	 mov         r0, #1

; 776  : };

  000ac	e8bd4010	 ldmia       sp!, {r4, lr}
  000b0	e12fff1e	 bx          lr
  000b4		 |$LN19@EnableRSZH|
  000b4		 |$LN20@EnableRSZH|
  000b4	00000000	 DCD         |??_C@_1JK@CENFNOKE@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAR?$AAS?$AAZ?$AA?3?$AA?5?$AAB?$AAu?$AAs?$AAy?$AA?5?$AAb?$AAi?$AAt?$AA?5?$AAi?$AAs?$AA?5?$AAs?$AAt@|
  000b8		 |$LN21@EnableRSZH|
  000b8	00000000	 DCD         |??_C@_1IC@FBPDILK@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAR?$AAS?$AAZ?$AAH?$AAW?$AA?3?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?$CI?$AA0?$AAx?$AA?$CF?$AAx@|
  000bc		 |$LN22@EnableRSZH|
  000bc	00000000	 DCD         |??_C@_1FO@HEHJJHCB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAR?$AAS?$AAZ?$AAH?$AAW?$AA?3?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAi?$AAs@|
  000c0		 |$M40300|

			 ENDP  ; |EnableRSZHW|

	EXPORT	|GetRSZHwStatus|

  00000			 AREA	 |.pdata|, PDATA
|$T40318| DCD	|$LN5@GetRSZHwSt|
	DCD	0x40000500
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetRSZHwStatus| PROC

; 780  : {

  00000		 |$LN5@GetRSZHwSt|
  00000		 |$M40315|

; 781  :     RSZ_DEVICE_CONTEXT_S * dev = rszContext->dev;

  00000	e5903068	 ldr         r3, [r0, #0x68]

; 782  :     DWORD status = (INREG32(&dev->m_pCAMRSZ->RSZ_PCR) & RSZ_PCR_BUSY);

  00004	e5933008	 ldr         r3, [r3, #8]
  00008	e5933004	 ldr         r3, [r3, #4]
  0000c	e2030002	 and         r0, r3, #2

; 783  :     return status;
; 784  : }

  00010	e12fff1e	 bx          lr
  00014		 |$M40316|

			 ENDP  ; |GetRSZHwStatus|

	EXPORT	|WaitRSZComplete|
	EXPORT	|??_C@_1GO@JJKLGHIK@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AAW?$AAa?$AAi?$AAt?$AAR?$AAS?$AAZ?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAC?$AAa?$AAl?$AAc?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@JNDCMGP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAR?$AAS?$AAZ?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IK@HOLINNAB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAR?$AAS?$AAZ?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?$CI@| [ DATA ] ; `string'
	IMPORT	|Sleep|

  00000			 AREA	 |.pdata|, PDATA
|$T40363| DCD	|$LN29@WaitRSZCom|
	DCD	0x40005d01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@JJKLGHIK@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AAW?$AAa?$AAi?$AAt?$AAR?$AAS?$AAZ?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAC?$AAa?$AAl?$AAc?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo@| DCB "I"
	DCB	0x0, "N", 0x0, "F", 0x0, "O", 0x0, ":", 0x0, "W", 0x0, "a"
	DCB	0x0, "i", 0x0, "t", 0x0, "R", 0x0, "S", 0x0, "Z", 0x0, "C"
	DCB	0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, ":", 0x0, " ", 0x0, "C", 0x0, "a", 0x0, "l"
	DCB	0x0, "c", 0x0, " ", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e"
	DCB	0x0, "o", 0x0, "u", 0x0, "t", 0x0, "=", 0x0, "%", 0x0, "d"
	DCB	0x0, " ", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, " "
	DCB	0x0, "W", 0x0, "a", 0x0, "i", 0x0, "t", 0x0, "e", 0x0, "d"
	DCB	0x0, "=", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@JNDCMGP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAR?$AAS?$AAZ?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AN@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "W", 0x0, "a", 0x0, "i", 0x0, "t", 0x0, "R", 0x0, "S"
	DCB	0x0, "Z", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "t"
	DCB	0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IK@HOLINNAB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAR?$AAS?$AAZ?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?$CI@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "W", 0x0, "a", 0x0, "i", 0x0, "t", 0x0, "R", 0x0, "S"
	DCB	0x0, "Z", 0x0, "C", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t"
	DCB	0x0, "(", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")"
	DCB	0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "n", 0x0, "o"
	DCB	0x0, "t", 0x0, " ", 0x0, "t", 0x0, "h", 0x0, "e", 0x0, " "
	DCB	0x0, "o", 0x0, "n", 0x0, "e", 0x0, " ", 0x0, "l", 0x0, "o"
	DCB	0x0, "a", 0x0, "d", 0x0, "e", 0x0, "d", 0x0, "(", 0x0, "0"
	DCB	0x0, "x", 0x0, "%", 0x0, "x", 0x0, ")", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |WaitRSZComplete| PROC

; 787  : {

  00000		 |$LN29@WaitRSZCom|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004		 |$M40360|
  00004	e1a08000	 mov         r8, r0

; 788  : #define MAX_TIMEOUT 20
; 789  :     RSZ_DEVICE_CONTEXT_S * dev = rszContext->dev;

  00008	e598a068	 ldr         r10, [r8, #0x68]
  0000c	e3a01c1f	 mov         r1, #0x1F, 24
  00010	e3a00c0f	 mov         r0, #0xF, 24

; 790  :     UINT32 timeout, dwCount,dwCalcTimeout;
; 791  :     UINT32 maxTimeOut = MAX_TIMEOUT;
; 792  :     int bpp;
; 793  :     DWORD rsz_cnt = INREG32(&dev->m_pCAMRSZ->RSZ_CNT);

  00014	e59a3008	 ldr         r3, [r10, #8]

; 794  :     DWORD inSize = INREG32(&dev->m_pCAMRSZ->RSZ_IN_SIZE);
; 795  :     DWORD outSize = INREG32(&dev->m_pCAMRSZ->RSZ_OUT_SIZE);
; 796  :     DWORD inType = (rsz_cnt & RSZ_CNT_INPTYP_MASK)>>RSZ_CNT_INPTYP_SHIFT;
; 797  :     DWORD inWidth = (inSize & RSZ_IN_SIZE_HORZ_MASK)>>RSZ_IN_SIZE_HORZ_SHIFT;
; 798  :     DWORD inHeight = (inSize & RSZ_IN_SIZE_VERT_MASK)>>RSZ_IN_SIZE_VERT_SHIFT;
; 799  :     DWORD outWidth = (outSize & RSZ_OUT_SIZE_HORZ_MASK)>>RSZ_OUT_SIZE_HORZ_SHIFT;
; 800  :     DWORD retCode = TRUE;
; 801  : 
; 802  :     /* dont wait for somebody else's submitted job */
; 803  :     if (dev->inUseContext != (DWORD)rszContext)

  00018	e59a2020	 ldr         r2, [r10, #0x20]
  0001c	e38160ff	 orr         r6, r1, #0xFF
  00020	e5939008	 ldr         r9, [r3, #8]
  00024	e5935014	 ldr         r5, [r3, #0x14]
  00028	e593400c	 ldr         r4, [r3, #0xC]
  0002c	e1a01209	 mov         r1, r9, lsl #4
  00030	e1a03185	 mov         r3, r5, lsl #3
  00034	e380e0ff	 orr         lr, r0, #0xFF
  00038	e1a009a3	 mov         r0, r3, lsr #19
  0003c	e1a03fa1	 mov         r3, r1, lsr #31
  00040	e0051006	 and         r1, r5, r6
  00044	e3a06001	 mov         r6, #1
  00048	e3a07014	 mov         r7, #0x14
  0004c	e004e00e	 and         lr, r4, lr
  00050	e1520008	 cmp         r2, r8
  00054	0a000004	 beq         |$LN10@WaitRSZCom|

; 804  :     {
; 805  :         RETAILMSG(TRUE, (L"ERROR: WaitRSZComplete: Context(0x%x) is not the one loaded(0x%x) \r\n",rszContext,dev->inUseContext));

  00058	e59f0110	 ldr         r0, [pc, #0x110]
  0005c	e1a01008	 mov         r1, r8
  00060	eb000000	 bl          NKDbgPrintfW

; 806  :         return FALSE;

  00064	e3a06000	 mov         r6, #0
  00068	ea00003a	 b           |$LN11@WaitRSZCom|
  0006c		 |$LN10@WaitRSZCom|

; 807  :     }
; 808  : 
; 809  :     if (inType == RSZ_INTYPE_YCBCR422_16BIT)

  0006c	e3530000	 cmp         r3, #0
  00070	1a00000d	 bne         |$LN9@WaitRSZCom|

; 810  :         bpp=2;

  00074	e3a03c03	 mov         r3, #3, 24

; 813  :         
; 814  :     if ((inType==RSZ_INTYPE_YCBCR422_16BIT) && ((rsz_cnt & RSZ_CNT_HRSZ_MASK)>256))

  00078	e38330ff	 orr         r3, r3, #0xFF
  0007c	e0093003	 and         r3, r9, r3
  00080	e3530c01	 cmp         r3, #1, 24
  00084	e3a02002	 mov         r2, #2
  00088	9a000008	 bls         |$LN7@WaitRSZCom|

; 815  :     {
; 816  :         timeout = (((inWidth+outWidth)/2)*inHeight*bpp)/CAM_FCLK;        

  0008c	e08e3001	 add         r3, lr, r1
  00090	e1a030a3	 mov         r3, r3, lsr #1
  00094	e0020093	 mul         r2, r3, r0
  00098	e59f30cc	 ldr         r3, [pc, #0xCC]
  0009c	e1a02082	 mov         r2, r2, lsl #1
  000a0	e0813392	 umull       r3, r1, r2, r3
  000a4	e1a027a1	 mov         r2, r1, lsr #15

; 817  :     }
; 818  :     else

  000a8	ea000007	 b           |$LN6@WaitRSZCom|
  000ac		 |$LN9@WaitRSZCom|

; 811  :     else
; 812  :         bpp=1;

  000ac	e3a02001	 mov         r2, #1
  000b0		 |$LN7@WaitRSZCom|

; 819  :     {
; 820  :         DWORD width = (inWidth>outWidth)?inWidth:outWidth;

  000b0	e151000e	 cmp         r1, lr
  000b4	91a0100e	 movls       r1, lr

; 821  :         timeout = (width*inHeight*bpp)/CAM_FCLK;

  000b8	e0030291	 mul         r3, r1, r2
  000bc	e59f20a8	 ldr         r2, [pc, #0xA8]
  000c0	e0010093	 mul         r1, r3, r0
  000c4	e0823291	 umull       r3, r2, r1, r2
  000c8	e1a027a2	 mov         r2, r2, lsr #15
  000cc		 |$LN6@WaitRSZCom|

; 822  :     }
; 823  :     timeout += 1;
; 824  :     dwCalcTimeout=timeout;
; 825  :     dwCount=0;
; 826  :     
; 827  :     while (GetRSZHwStatus(rszContext) && (maxTimeOut>0))

  000cc	e59a3008	 ldr         r3, [r10, #8]
  000d0	e2824001	 add         r4, r2, #1
  000d4	e1a09004	 mov         r9, r4
  000d8	e5933004	 ldr         r3, [r3, #4]
  000dc	e3a05000	 mov         r5, #0
  000e0	e2133002	 ands        r3, r3, #2
  000e4	0a000017	 beq         |$LN20@WaitRSZCom|
  000e8		 |$LL5@WaitRSZCom|
  000e8	e3570000	 cmp         r7, #0
  000ec	0a000012	 beq         |$LN25@WaitRSZCom|

; 828  :     {        
; 829  :         Sleep(timeout);

  000f0	e1a00004	 mov         r0, r4
  000f4	eb000000	 bl          Sleep
  000f8	e5983068	 ldr         r3, [r8, #0x68]

; 830  :         dwCount++;
; 831  :         maxTimeOut-=timeout;

  000fc	e0477004	 sub         r7, r7, r4
  00100	e2855001	 add         r5, r5, #1
  00104	e5933008	 ldr         r3, [r3, #8]

; 832  :         timeout=1;        

  00108	e3a04001	 mov         r4, #1
  0010c	e5933004	 ldr         r3, [r3, #4]
  00110	e2133002	 ands        r3, r3, #2
  00114	1afffff3	 bne         |$LL5@WaitRSZCom|

; 833  :     }
; 834  :     if (maxTimeOut<=0) {

  00118	e3570000	 cmp         r7, #0
  0011c	0a000006	 beq         |$LN25@WaitRSZCom|

; 837  :     } else {
; 838  :         if (dwCount>1)

  00120	e3550001	 cmp         r5, #1
  00124	9a000007	 bls         |$LN20@WaitRSZCom|

; 839  :             RETAILMSG(TRUE,(L"INFO:WaitRSZComplete: Calc Timeout=%d Time Waited=%d\r\n",dwCalcTimeout,(MAX_TIMEOUT-maxTimeOut)));

  00128	e59f0038	 ldr         r0, [pc, #0x38]
  0012c	e2672014	 rsb         r2, r7, #0x14
  00130	e1a01009	 mov         r1, r9
  00134	eb000000	 bl          NKDbgPrintfW
  00138	ea000002	 b           |$LN20@WaitRSZCom|
  0013c		 |$LN25@WaitRSZCom|

; 835  :         RETAILMSG(TRUE,(L"ERROR: WaitRSZComplete: timeout\r\n"));

  0013c	e59f0020	 ldr         r0, [pc, #0x20]
  00140	eb000000	 bl          NKDbgPrintfW

; 836  :         retCode = FALSE;

  00144	e3a06000	 mov         r6, #0

; 839  :             RETAILMSG(TRUE,(L"INFO:WaitRSZComplete: Calc Timeout=%d Time Waited=%d\r\n",dwCalcTimeout,(MAX_TIMEOUT-maxTimeOut)));

  00148		 |$LN20@WaitRSZCom|

; 840  :       /* do something later */        
; 841  :     }
; 842  :     rszContext->state = RSZ_INIT;

  00148	e3a03001	 mov         r3, #1
  0014c	e5883064	 str         r3, [r8, #0x64]

; 843  :     dev->inUseContext = 0;

  00150	e3a03000	 mov         r3, #0
  00154	e58a3020	 str         r3, [r10, #0x20]

; 844  : 
; 845  :     return retCode;

  00158		 |$LN11@WaitRSZCom|

; 846  :     
; 847  : }

  00158	e1a00006	 mov         r0, r6
  0015c	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  00160	e12fff1e	 bx          lr
  00164		 |$LN30@WaitRSZCom|
  00164		 |$LN31@WaitRSZCom|
  00164	00000000	 DCD         |??_C@_1EE@JNDCMGP@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAR?$AAS?$AAZ?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?$AN@|
  00168		 |$LN32@WaitRSZCom|
  00168	00000000	 DCD         |??_C@_1GO@JJKLGHIK@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AAW?$AAa?$AAi?$AAt?$AAR?$AAS?$AAZ?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAC?$AAa?$AAl?$AAc?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo@|
  0016c		 |$LN33@WaitRSZCom|
  0016c	3288a603	 DCD         0x3288a603
  00170		 |$LN34@WaitRSZCom|
  00170	00000000	 DCD         |??_C@_1IK@HOLINNAB@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAW?$AAa?$AAi?$AAt?$AAR?$AAS?$AAZ?$AAC?$AAo?$AAm?$AAp?$AAl?$AAe?$AAt?$AAe?$AA?3?$AA?5?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AA?$CI@|
  00174		 |$M40361|

			 ENDP  ; |WaitRSZComplete|

	EXPORT	|DllEntry|
	IMPORT	|DisableThreadLibraryCalls|

  00000			 AREA	 |.pdata|, PDATA
|$T40379| DCD	|$LN9@DllEntry|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |DllEntry| PROC

; 868  : {

  00000		 |$LN9@DllEntry|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M40376|

; 869  :     switch (nReason) {

  00004	e3510001	 cmp         r1, #1

; 870  :         case DLL_PROCESS_ATTACH:
; 871  :             DisableThreadLibraryCalls((HMODULE)hDllInstance);            

  00008	0b000000	 bleq        DisableThreadLibraryCalls

; 872  :             break;
; 873  :         default:
; 874  :             break;
; 875  :     }
; 876  : 
; 877  :     return (TRUE);

  0000c	e3a00001	 mov         r0, #1

; 878  : }

  00010	e49de004	 ldr         lr, [sp], #4
  00014	e12fff1e	 bx          lr
  00018		 |$M40377|

			 ENDP  ; |DllEntry|

	EXPORT	|RSZ_Init|

  00000			 AREA	 |.bss|, NOINIT
|rszDev| %	0x24
|rszDev| %	0x24

  00000			 AREA	 |.pdata|, PDATA
|$T40388| DCD	|$LN5@RSZ_Init|
	DCD	0x40000f00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |RSZ_Init| PROC

; 884  : {

  00000		 |$LN5@RSZ_Init|
  00000		 |$M40385|

; 885  :     rszDev.isInitialized = FALSE;

  00000	e59f0030	 ldr         r0, [pc, #0x30]
  00004	e3a03000	 mov         r3, #0

; 886  :     rszDev.openRefCount = 0;

  00008	e3a02000	 mov         r2, #0
  0000c	e5803000	 str         r3, [r0]

; 887  :     rszDev.m_pCAMISP = NULL;

  00010	e3a03000	 mov         r3, #0
  00014	e5802004	 str         r2, [r0, #4]
  00018	e580300c	 str         r3, [r0, #0xC]

; 888  :     rszDev.m_pCamMMU = NULL;

  0001c	e3a03000	 mov         r3, #0
  00020	e5803010	 str         r3, [r0, #0x10]

; 889  :     rszDev.m_pCAMRSZ = NULL;

  00024	e3a03000	 mov         r3, #0
  00028	e5803008	 str         r3, [r0, #8]

; 890  :     rszDev.inUseContext = 0;

  0002c	e3a03000	 mov         r3, #0
  00030	e5803020	 str         r3, [r0, #0x20]

; 891  : 
; 892  :     return (DWORD)&rszDev;
; 893  :         
; 894  : }

  00034	e12fff1e	 bx          lr
  00038		 |$LN6@RSZ_Init|
  00038		 |$LN7@RSZ_Init|
  00038	00000000	 DCD         |rszDev|
  0003c		 |$M40386|

			 ENDP  ; |RSZ_Init|

	EXPORT	|RSZ_Deinit|

  00000			 AREA	 |.pdata|, PDATA
|$T40400| DCD	|$LN7@RSZ_Deinit|
	DCD	0x40001501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |RSZ_Deinit| PROC

; 900  : {

  00000		 |$LN7@RSZ_Deinit|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M40397|
  00004	e1a04000	 mov         r4, r0

; 901  :     RSZ_DEVICE_CONTEXT_S * dev = (RSZ_DEVICE_CONTEXT_S *)hDeviceContext;
; 902  :     if (dev->openRefCount != 0)

  00008	e5943004	 ldr         r3, [r4, #4]
  0000c	e3530000	 cmp         r3, #0

; 903  :         return FALSE;

  00010	13a00000	 movne       r0, #0

; 916  : }

  00014	18bd4030	 ldmneia     sp!, {r4, r5, lr}
  00018	112fff1e	 bxne        lr

; 904  :     
; 905  :     if (dev->isInitialized)

  0001c	e5943000	 ldr         r3, [r4]
  00020	e3a05000	 mov         r5, #0
  00024	e3530000	 cmp         r3, #0
  00028	0a000002	 beq         |$LN1@RSZ_Deinit|

; 906  :     {
; 907  :         DeinitializeRSZHW(dev);

  0002c	e1a00004	 mov         r0, r4
  00030	eb000000	 bl          DeinitializeRSZHW

; 908  :         dev->isInitialized = FALSE;        

  00034	e5845000	 str         r5, [r4]
  00038		 |$LN1@RSZ_Deinit|

; 909  :     }        
; 910  :     dev->m_pCAMISP = NULL;

  00038	e584500c	 str         r5, [r4, #0xC]

; 911  :     dev->m_pCamMMU = NULL;

  0003c	e5845010	 str         r5, [r4, #0x10]

; 912  :     dev->m_pCAMRSZ = NULL;

  00040	e5845008	 str         r5, [r4, #8]

; 913  :     dev->inUseContext = 0;

  00044	e5845020	 str         r5, [r4, #0x20]

; 914  : 
; 915  :     return TRUE;

  00048	e3a00001	 mov         r0, #1

; 916  : }

  0004c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$M40398|

			 ENDP  ; |RSZ_Deinit|

	EXPORT	|RSZ_Open|
	IMPORT	|malloc|

  00000			 AREA	 |.pdata|, PDATA
|$T40411| DCD	|$LN10@RSZ_Open|
	DCD	0x40001801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |RSZ_Open| PROC

; 922  : {

  00000		 |$LN10@RSZ_Open|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M40408|
  00004	e1a04000	 mov         r4, r0

; 923  : 
; 924  :     RSZ_DEVICE_CONTEXT_S * dev = (RSZ_DEVICE_CONTEXT_S *)hDeviceContext;
; 925  :     RSZ_CONTEXT_T * rszContext;
; 926  :     
; 927  :     if (dev->openRefCount == 0)    

  00008	e5943004	 ldr         r3, [r4, #4]
  0000c	e3530000	 cmp         r3, #0
  00010	1a000001	 bne         |$LN5@RSZ_Open|

; 928  :         dev->isInitialized = InitializeRSZHW(dev);

  00014	eb000000	 bl          InitializeRSZHW
  00018	e5840000	 str         r0, [r4]
  0001c		 |$LN5@RSZ_Open|

; 929  : 
; 930  :     if (!(dev->isInitialized))

  0001c	e5943000	 ldr         r3, [r4]
  00020	e3530000	 cmp         r3, #0
  00024	0a00000a	 beq         |$cleanUP$39892|

; 931  :         goto cleanUP;
; 932  : 
; 933  :     rszContext = (RSZ_CONTEXT_T *)malloc(sizeof(RSZ_CONTEXT_T));

  00028	e3a0006c	 mov         r0, #0x6C
  0002c	eb000000	 bl          malloc
  00030	e3500000	 cmp         r0, #0

; 934  :     if (rszContext == NULL)
; 935  :         goto cleanUP;
; 936  :     
; 937  :     rszContext->dev = dev;
; 938  :     rszContext->state = RSZ_UNINIT;
; 939  :     dev->openRefCount++;        

  00034	15943004	 ldrne       r3, [r4, #4]
  00038	13a02000	 movne       r2, #0
  0003c	15804068	 strne       r4, [r0, #0x68]
  00040	12833001	 addne       r3, r3, #1
  00044	15843004	 strne       r3, [r4, #4]
  00048	15802064	 strne       r2, [r0, #0x64]

; 945  :         
; 946  : }

  0004c	18bd4010	 ldmneia     sp!, {r4, lr}
  00050	112fff1e	 bxne        lr
  00054		 |$cleanUP$39892|

; 940  : 
; 941  :     return ((DWORD)rszContext);
; 942  : 
; 943  : cleanUP:
; 944  :     return NULL;

  00054	e3a00000	 mov         r0, #0

; 945  :         
; 946  : }

  00058	e8bd4010	 ldmia       sp!, {r4, lr}
  0005c	e12fff1e	 bx          lr
  00060		 |$M40409|

			 ENDP  ; |RSZ_Open|

	EXPORT	|RSZ_Close|
	IMPORT	|free|

  00000			 AREA	 |.pdata|, PDATA
|$T40422| DCD	|$LN6@RSZ_Close|
	DCD	0x40000f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |RSZ_Close| PROC

; 952  : {

  00000		 |$LN6@RSZ_Close|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M40419|
  00004	e1a03000	 mov         r3, r0

; 953  :     RSZ_CONTEXT_T * rszContext = (RSZ_CONTEXT_T *)hOpenContext;    
; 954  :     RSZ_DEVICE_CONTEXT_S * dev = (RSZ_DEVICE_CONTEXT_S *)rszContext->dev;
; 955  :     
; 956  :     /* TODO: do we need to check for completion?? */
; 957  :     free(rszContext);

  00008	e5934068	 ldr         r4, [r3, #0x68]
  0000c	eb000000	 bl          free

; 958  :     rszContext = NULL;
; 959  :     dev->openRefCount--;

  00010	e5943004	 ldr         r3, [r4, #4]
  00014	e2533001	 subs        r3, r3, #1
  00018	e5843004	 str         r3, [r4, #4]

; 960  : 
; 961  :     if (dev->openRefCount == 0)

  0001c	1a000003	 bne         |$LN1@RSZ_Close|

; 962  :     {
; 963  :         DeinitializeRSZHW(dev);

  00020	e1a00004	 mov         r0, r4
  00024	eb000000	 bl          DeinitializeRSZHW

; 964  :         dev->isInitialized = FALSE;        

  00028	e3a03000	 mov         r3, #0
  0002c	e5843000	 str         r3, [r4]
  00030		 |$LN1@RSZ_Close|

; 965  :     }
; 966  : 
; 967  :     return TRUE;

  00030	e3a00001	 mov         r0, #1

; 968  : 
; 969  : }

  00034	e8bd4010	 ldmia       sp!, {r4, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$M40420|

			 ENDP  ; |RSZ_Close|

	EXPORT	|RSZ_IOControl|

  00000			 AREA	 |.pdata|, PDATA
|$T40449| DCD	|$LN25@RSZ_IOCont|
	DCD	0x40005401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |RSZ_IOControl| PROC

; 976  : {

  00000		 |$LN25@RSZ_IOCont|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M40446|
  00004	e1a05000	 mov         r5, r0

; 977  :     RSZ_CONTEXT_T * rszContext = (RSZ_CONTEXT_T *)hOpenContext;    
; 978  :     RSZ_DEVICE_CONTEXT_S * dev = (RSZ_DEVICE_CONTEXT_S *)rszContext->dev;
; 979  :     BOOL retCode = FALSE;

  00008	e3a04000	 mov         r4, #0

; 980  :     RSZParams_t * params;
; 981  : 
; 982  :     //RETAILMSG(1,(L"RSZ_IOControl: dwcode %d rszContext 0x%x\r\n",dwCode,rszContext));
; 983  : 
; 984  :     switch (dwCode)

  0000c	e3510001	 cmp         r1, #1
  00010	0a00003d	 beq         |$LN15@RSZ_IOCont|
  00014	e3510002	 cmp         r1, #2
  00018	0a000028	 beq         |$LN12@RSZ_IOCont|
  0001c	e3510003	 cmp         r1, #3
  00020	0a000016	 beq         |$LN8@RSZ_IOCont|
  00024	e3510004	 cmp         r1, #4
  00028	1a000045	 bne         |$LN13@RSZ_IOCont|

; 1025 : 
; 1026 :         case RSZ_IOCTL_START_RESIZER:
; 1027 :         {            
; 1028 :             if ((pBufIn) && (dwLenIn == sizeof(RSZParams_t)))

  0002c	e3520000	 cmp         r2, #0
  00030	0a000043	 beq         |$LN13@RSZ_IOCont|
  00034	e3530064	 cmp         r3, #0x64
  00038	1a000041	 bne         |$LN13@RSZ_IOCont|

; 1029 :             {
; 1030 :                 params = (RSZParams_t *)pBufIn;
; 1031 :                 retCode = setADDR_RSZParams(rszContext,params);

  0003c	e1a01002	 mov         r1, r2
  00040	eb000000	 bl          setADDR_RSZParams
  00044	e1b04000	 movs        r4, r0

; 1032 :                 if (retCode)                

  00048	0a00003d	 beq         |$LN13@RSZ_IOCont|

; 1033 :                     retCode = ConfigureRSZHW(rszContext);

  0004c	e1a00005	 mov         r0, r5
  00050	eb000000	 bl          ConfigureRSZHW
  00054	e1b04000	 movs        r4, r0

; 1034 :                 if (retCode)

  00058	0a000039	 beq         |$LN13@RSZ_IOCont|

; 1035 :                     retCode = EnableRSZHW(rszContext, TRUE);

  0005c	e3a01001	 mov         r1, #1
  00060	e1a00005	 mov         r0, r5
  00064	eb000000	 bl          EnableRSZHW
  00068	e1b04000	 movs        r4, r0

; 1036 :                 if (retCode)

  0006c	0a000034	 beq         |$LN13@RSZ_IOCont|

; 1037 :                     retCode = WaitRSZComplete(rszContext);

  00070	e1a00005	 mov         r0, r5
  00074	eb000000	 bl          WaitRSZComplete
  00078	e1a04000	 mov         r4, r0

; 1038 :             }
; 1039 :         }
; 1040 :         break;            

  0007c	ea000030	 b           |$LN13@RSZ_IOCont|
  00080		 |$LN8@RSZ_IOCont|

; 1014 : 
; 1015 :         case RSZ_IOCTL_GET_STATUS:
; 1016 :         {            
; 1017 :             if ((pBufOut) && (dwLenIn == sizeof(DWORD)))

  00080	e59d100c	 ldr         r1, [sp, #0xC]
  00084	e3510000	 cmp         r1, #0
  00088	0a00002d	 beq         |$LN13@RSZ_IOCont|
  0008c	e3530004	 cmp         r3, #4
  00090	1a00002b	 bne         |$LN13@RSZ_IOCont|

; 1018 :             {
; 1019 :                 *(DWORD *)pBufOut= GetRSZHwStatus(rszContext);

  00094	e5953068	 ldr         r3, [r5, #0x68]

; 1020 :                 if (pdwActualOut) *pdwActualOut=sizeof(DWORD);

  00098	e59d2014	 ldr         r2, [sp, #0x14]

; 1021 :                 retCode = TRUE;

  0009c	e3a04001	 mov         r4, #1
  000a0	e5933008	 ldr         r3, [r3, #8]
  000a4	e3520000	 cmp         r2, #0
  000a8	e5933004	 ldr         r3, [r3, #4]
  000ac	e2033002	 and         r3, r3, #2
  000b0	e5813000	 str         r3, [r1]
  000b4	13a03004	 movne       r3, #4
  000b8	15823000	 strne       r3, [r2]

; 1022 :             }
; 1023 :         }
; 1024 :         break;

  000bc	ea000020	 b           |$LN13@RSZ_IOCont|
  000c0		 |$LN12@RSZ_IOCont|

; 994  :             }
; 995  :         
; 996  :         }
; 997  :         break;
; 998  : 
; 999  :         case RSZ_IOCTL_SET_PARAMS:
; 1000 :         {            
; 1001 :             if ((pBufIn) && (dwLenIn == sizeof(RSZParams_t)))

  000c0	e3520000	 cmp         r2, #0
  000c4	0a00001e	 beq         |$LN13@RSZ_IOCont|
  000c8	e3530064	 cmp         r3, #0x64
  000cc	1a00001c	 bne         |$LN13@RSZ_IOCont|

; 1002 :             {
; 1003 :                 retCode = SetRSZParams((RSZParams_t *)pBufIn,rszContext);                  

  000d0	e1a01005	 mov         r1, r5
  000d4	e1a00002	 mov         r0, r2
  000d8	eb000000	 bl          SetRSZParams
  000dc	e1b04000	 movs        r4, r0

; 1004 :                 if ((retCode) && (pBufOut)&&
; 1005 :                     (dwLenOut == sizeof(RSZParams_t)))

  000e0	0a000017	 beq         |$LN13@RSZ_IOCont|
  000e4	e59d000c	 ldr         r0, [sp, #0xC]
  000e8	e3500000	 cmp         r0, #0
  000ec	0a000014	 beq         |$LN13@RSZ_IOCont|
  000f0	e59d3010	 ldr         r3, [sp, #0x10]
  000f4	e3530064	 cmp         r3, #0x64
  000f8	1a000011	 bne         |$LN13@RSZ_IOCont|

; 1006 :                 {
; 1007 :                     params = (RSZParams_t *)pBufOut;
; 1008 :                     memcpy(params,&rszContext->params,sizeof(RSZParams_t));

  000fc	e3a02064	 mov         r2, #0x64
  00100	e1a01005	 mov         r1, r5
  00104	eb000000	 bl          memcpy

; 1009 :                     if (pdwActualOut) *pdwActualOut=sizeof(RSZParams_t);
; 1010 :                 }                    
; 1011 :             }            
; 1012 :         }
; 1013 :         break;

  00108	ea000009	 b           |$LN22@RSZ_IOCont|
  0010c		 |$LN15@RSZ_IOCont|

; 985  :     {
; 986  :         case RSZ_IOCTL_GET_PARAMS:
; 987  :         {            
; 988  :             if ((pBufOut) && (dwLenOut == sizeof(RSZParams_t)))

  0010c	e59d000c	 ldr         r0, [sp, #0xC]
  00110	e3500000	 cmp         r0, #0
  00114	0a00000a	 beq         |$LN13@RSZ_IOCont|
  00118	e59d3010	 ldr         r3, [sp, #0x10]
  0011c	e3530064	 cmp         r3, #0x64
  00120	1a000007	 bne         |$LN13@RSZ_IOCont|

; 989  :             {
; 990  :                 params = (RSZParams_t *)pBufOut;
; 991  :                 memcpy(params,&rszContext->params,sizeof(RSZParams_t));

  00124	e3a02064	 mov         r2, #0x64
  00128	e1a01005	 mov         r1, r5
  0012c	eb000000	 bl          memcpy

; 992  :                 retCode = TRUE;
; 993  :                 if (pdwActualOut) *pdwActualOut=sizeof(RSZParams_t);

  00130	e3a04001	 mov         r4, #1
  00134		 |$LN22@RSZ_IOCont|
  00134	e59d3014	 ldr         r3, [sp, #0x14]
  00138	e3530000	 cmp         r3, #0
  0013c	13a02064	 movne       r2, #0x64
  00140	15832000	 strne       r2, [r3]
  00144		 |$LN13@RSZ_IOCont|

; 1041 :     }
; 1042 : 
; 1043 :     return retCode;
; 1044 : 
; 1045 : }

  00144	e1a00004	 mov         r0, r4
  00148	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0014c	e12fff1e	 bx          lr
  00150		 |$M40447|

			 ENDP  ; |RSZ_IOControl|

	EXPORT	|RSZ_Read|

  00000			 AREA	 |.pdata|, PDATA
|$T40458| DCD	|$LN5@RSZ_Read|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |RSZ_Read| PROC

; 1052 : {

  00000		 |$LN5@RSZ_Read|
  00000		 |$M40455|

; 1053 :     return (0);

  00000	e3a00000	 mov         r0, #0

; 1054 : }

  00004	e12fff1e	 bx          lr
  00008		 |$M40456|

			 ENDP  ; |RSZ_Read|

	EXPORT	|RSZ_Write|

  00000			 AREA	 |.pdata|, PDATA
|$T40467| DCD	|$LN5@RSZ_Write|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |RSZ_Write| PROC

; 1058 : {

  00000		 |$LN5@RSZ_Write|
  00000		 |$M40464|

; 1059 :     return (0);     

  00000	e3a00000	 mov         r0, #0

; 1060 : }

  00004	e12fff1e	 bx          lr
  00008		 |$M40465|

			 ENDP  ; |RSZ_Write|

	EXPORT	|RSZ_PowerUp|

  00000			 AREA	 |.pdata|, PDATA
|$T40474| DCD	|$LN5@RSZ_PowerU|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |RSZ_PowerUp| PROC

; 1064 : {    

  00000		 |$LN5@RSZ_PowerU|
  00000		 |$M40471|

; 1065 :     return ;     
; 1066 : }

  00000	e12fff1e	 bx          lr
  00004		 |$M40472|

			 ENDP  ; |RSZ_PowerUp|

	EXPORT	|RSZ_PowerDown|

  00000			 AREA	 |.pdata|, PDATA
|$T40481| DCD	|$LN5@RSZ_PowerD|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |RSZ_PowerDown| PROC

; 1070 : {

  00000		 |$LN5@RSZ_PowerD|
  00000		 |$M40478|

; 1071 :     return ;     
; 1072 : }

  00000	e12fff1e	 bx          lr
  00004		 |$M40479|

			 ENDP  ; |RSZ_PowerDown|

	END
