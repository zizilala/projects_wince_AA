; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\Z2170\SRC\DRIVERS\sysctrl\LED.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_1BE@BKKMLFKH@?$AA8?$AA0?$AA6?$AA?5?$AAH?$AAS?$AAM?$AAH?$AAZ?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@HLPDAKHN@?$AA8?$AA0?$AA6?$AA?5?$AAM?$AAH?$AAZ?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@FGCEKGOE@?$AA6?$AA2?$AA4?$AA?5?$AAM?$AAH?$AAZ?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@EBNODIMD@?$AA4?$AA1?$AA6?$AA?5?$AAM?$AAH?$AAZ?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@GGHBGDEP@?$AA2?$AA0?$AA8?$AA?5?$AAM?$AAH?$AAZ?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BC@EKPDPFCF@?$AAR?$AAi?$AAn?$AAg?$AA?5?$AAO?$AAS?$AAC?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|BT_LED_Event| [ DATA ]
	EXPORT	|WIFI_LED_Event| [ DATA ]

  00000			 AREA	 |.bss|, NOINIT
|BT_LED_Event| % 0x4
|WIFI_LED_Event| % 0x4

  00000			 AREA	 |.data|, DATA
|g_szOPDescription| DCD |??_C@_1BC@EKPDPFCF@?$AAR?$AAi?$AAn?$AAg?$AA?5?$AAO?$AAS?$AAC?$AA?$AA@|
	DCD	|??_C@_1BA@GGHBGDEP@?$AA2?$AA0?$AA8?$AA?5?$AAM?$AAH?$AAZ?$AA?$AA@|
	DCD	|??_C@_1BA@EBNODIMD@?$AA4?$AA1?$AA6?$AA?5?$AAM?$AAH?$AAZ?$AA?$AA@|
	DCD	|??_C@_1BA@FGCEKGOE@?$AA6?$AA2?$AA4?$AA?5?$AAM?$AAH?$AAZ?$AA?$AA@|
	DCD	|??_C@_1BA@HLPDAKHN@?$AA8?$AA0?$AA6?$AA?5?$AAM?$AAH?$AAZ?$AA?$AA@|
	DCD	|??_C@_1BE@BKKMLFKH@?$AA8?$AA0?$AA6?$AA?5?$AAH?$AAS?$AAM?$AAH?$AAZ?$AA?$AA@|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@BKKMLFKH@?$AA8?$AA0?$AA6?$AA?5?$AAH?$AAS?$AAM?$AAH?$AAZ?$AA?$AA@| DCB "8"
	DCB	0x0, "0", 0x0, "6", 0x0, " ", 0x0, "H", 0x0, "S", 0x0, "M"
	DCB	0x0, "H", 0x0, "Z", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@HLPDAKHN@?$AA8?$AA0?$AA6?$AA?5?$AAM?$AAH?$AAZ?$AA?$AA@| DCB "8"
	DCB	0x0, "0", 0x0, "6", 0x0, " ", 0x0, "M", 0x0, "H", 0x0, "Z"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@FGCEKGOE@?$AA6?$AA2?$AA4?$AA?5?$AAM?$AAH?$AAZ?$AA?$AA@| DCB "6"
	DCB	0x0, "2", 0x0, "4", 0x0, " ", 0x0, "M", 0x0, "H", 0x0, "Z"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@EBNODIMD@?$AA4?$AA1?$AA6?$AA?5?$AAM?$AAH?$AAZ?$AA?$AA@| DCB "4"
	DCB	0x0, "1", 0x0, "6", 0x0, " ", 0x0, "M", 0x0, "H", 0x0, "Z"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@GGHBGDEP@?$AA2?$AA0?$AA8?$AA?5?$AAM?$AAH?$AAZ?$AA?$AA@| DCB "2"
	DCB	0x0, "0", 0x0, "8", 0x0, " ", 0x0, "M", 0x0, "H", 0x0, "Z"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BC@EKPDPFCF@?$AAR?$AAi?$AAn?$AAg?$AA?5?$AAO?$AAS?$AAC?$AA?$AA@| DCB "R"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "O", 0x0, "S"
	DCB	0x0, "C", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|Init_LED|
	IMPORT	|PXA_GPIOSetDirection|
	IMPORT	|PXA_MFPActivatePullUpDown|
	IMPORT	|PXA_MFPConfigurePullUpDown|
	IMPORT	|PXA_GPIOSetLevel|
	IMPORT	|PXA_MFPConfigureLpmOutputLevelList|
	IMPORT	|PXA_MFPSetAfDsList|
	IMPORT	|g_pMFPBase|
	IMPORT	|g_pGPIORegisters|
	IMPORT	|MapResources|

  00000			 AREA	 |.pdata|, PDATA
|$T45421| DCD	|$LN7@Init_LED|
	DCD	0x40007802
; Function compile flags: /Odtp
; File c:\wince600\platform\z2170\src\drivers\sysctrl\led.c

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |Init_LED| PROC

; 24   : {

  00000		 |$LN7@Init_LED|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd048	 sub         sp, sp, #0x48
  00008		 |$M45418|

; 25   :     UINT32 led_mfp_list[] =
; 26   :     {
; 27   :         PXA_MFP_PIN_GPIO47_OFFSET, // BT LED

  00008	e3a03b01	 mov         r3, #1, 22
  0000c	e383305c	 orr         r3, r3, #0x5C
  00010	e58d3030	 str         r3, [sp, #0x30]

; 28   :         PXA_MFP_PIN_GPIO53_OFFSET, // WIFI LED

  00014	e3a03b01	 mov         r3, #1, 22
  00018	e3833074	 orr         r3, r3, #0x74
  0001c	e58d3034	 str         r3, [sp, #0x34]

; 29   :         PXA_MFP_PIN_GPIO82_OFFSET, // BAROCDE LED

  00020	e3a03b01	 mov         r3, #1, 22
  00024	e38330e8	 orr         r3, r3, #0xE8
  00028	e58d3038	 str         r3, [sp, #0x38]

; 30   :         PXA_MFP_PIN_GPIO20_OFFSET, // vibrator

  0002c	e3a03d0b	 mov         r3, #0xB, 26
  00030	e58d303c	 str         r3, [sp, #0x3C]

; 31   :         PXA_MFP_PIN_EOLIST_MARKER
; 32   :     };

  00034	e3e03000	 mvn         r3, #0
  00038	e58d3040	 str         r3, [sp, #0x40]

; 33   : 
; 34   :     PXA_MFP_ALT_FN_T led_af_list[] =
; 35   :     {
; 36   :         PXA_MFP_ALT_FN_0,

  0003c	e3a03000	 mov         r3, #0
  00040	e58d3020	 str         r3, [sp, #0x20]

; 37   :         PXA_MFP_ALT_FN_0,

  00044	e3a03000	 mov         r3, #0
  00048	e58d3024	 str         r3, [sp, #0x24]

; 38   :         PXA_MFP_ALT_FN_0,

  0004c	e3a03000	 mov         r3, #0
  00050	e58d3028	 str         r3, [sp, #0x28]

; 39   :         PXA_MFP_ALT_FN_0
; 40   :     };

  00054	e3a03000	 mov         r3, #0
  00058	e58d302c	 str         r3, [sp, #0x2C]

; 41   : 
; 42   :     PXA_MFP_DRIVE_STRENGTH_T led_ds_list[] =
; 43   :     {
; 44   :         PXA_MFP_DS_03X,

  0005c	e3a03002	 mov         r3, #2
  00060	e58d3000	 str         r3, [sp]

; 45   :         PXA_MFP_DS_03X,

  00064	e3a03002	 mov         r3, #2
  00068	e58d3004	 str         r3, [sp, #4]

; 46   :         PXA_MFP_DS_03X,

  0006c	e3a03002	 mov         r3, #2
  00070	e58d3008	 str         r3, [sp, #8]

; 47   :         PXA_MFP_DS_03X
; 48   :     };

  00074	e3a03002	 mov         r3, #2
  00078	e58d300c	 str         r3, [sp, #0xC]

; 49   : 
; 50   :     PXA_MFP_LPM_OUTPUT_T led_lpm_list[] =
; 51   :     {
; 52   :         PXA_MFP_LPMO_DRIVE_HIGH,

  0007c	e3a03c41	 mov         r3, #0x41, 24
  00080	e58d3010	 str         r3, [sp, #0x10]

; 53   :         PXA_MFP_LPMO_DRIVE_HIGH,

  00084	e3a03c41	 mov         r3, #0x41, 24
  00088	e58d3014	 str         r3, [sp, #0x14]

; 54   :         PXA_MFP_LPMO_DRIVE_HIGH,

  0008c	e3a03c41	 mov         r3, #0x41, 24
  00090	e58d3018	 str         r3, [sp, #0x18]

; 55   :         //PXA_MFP_LPMO_DRIVE_LOW
; 56   :         PXA_MFP_LPMO_DRIVE_HIGH
; 57   :     };

  00094	e3a03c41	 mov         r3, #0x41, 24
  00098	e58d301c	 str         r3, [sp, #0x1C]

; 58   : 
; 59   :     MapResources();

  0009c	eb000000	 bl          MapResources

; 60   : 
; 61   :     if(!g_pGPIORegisters || !g_pMFPBase)

  000a0	e59f3130	 ldr         r3, [pc, #0x130]
  000a4	e5933000	 ldr         r3, [r3]
  000a8	e3530000	 cmp         r3, #0
  000ac	0a000003	 beq         |$LN1@Init_LED|
  000b0	e59f3124	 ldr         r3, [pc, #0x124]
  000b4	e5933000	 ldr         r3, [r3]
  000b8	e3530000	 cmp         r3, #0
  000bc	1a000002	 bne         |$LN2@Init_LED|
  000c0		 |$LN1@Init_LED|

; 62   :     {
; 63   :         return FALSE;

  000c0	e3a03000	 mov         r3, #0
  000c4	e58d3044	 str         r3, [sp, #0x44]
  000c8	ea00003e	 b           |$LN3@Init_LED|
  000cc		 |$LN2@Init_LED|

; 64   :     }
; 65   : 
; 66   :     PXA_MFPSetAfDsList(g_pMFPBase, led_mfp_list, led_af_list, led_ds_list);

  000cc	e28d3000	 add         r3, sp, #0
  000d0	e28d2020	 add         r2, sp, #0x20
  000d4	e28d1030	 add         r1, sp, #0x30
  000d8	e59f00fc	 ldr         r0, [pc, #0xFC]
  000dc	e5900000	 ldr         r0, [r0]
  000e0	eb000000	 bl          PXA_MFPSetAfDsList

; 67   : 
; 68   :     PXA_MFPConfigureLpmOutputLevelList(g_pMFPBase, led_mfp_list, led_lpm_list);

  000e4	e28d2010	 add         r2, sp, #0x10
  000e8	e28d1030	 add         r1, sp, #0x30
  000ec	e59f30e8	 ldr         r3, [pc, #0xE8]
  000f0	e5930000	 ldr         r0, [r3]
  000f4	eb000000	 bl          PXA_MFPConfigureLpmOutputLevelList

; 69   : 
; 70   :     PXA_GPIOSetLevel((PXA_GPIOREG_T *)g_pGPIORegisters, PXA_GPIO_47, PXA_HI);

  000f8	e3a02001	 mov         r2, #1
  000fc	e3a0102f	 mov         r1, #0x2F
  00100	e59f30d0	 ldr         r3, [pc, #0xD0]
  00104	e5930000	 ldr         r0, [r3]
  00108	eb000000	 bl          PXA_GPIOSetLevel

; 71   : 
; 72   :     PXA_GPIOSetLevel((PXA_GPIOREG_T *)g_pGPIORegisters, PXA_GPIO_53, PXA_HI);

  0010c	e3a02001	 mov         r2, #1
  00110	e3a01035	 mov         r1, #0x35
  00114	e59f30bc	 ldr         r3, [pc, #0xBC]
  00118	e5930000	 ldr         r0, [r3]
  0011c	eb000000	 bl          PXA_GPIOSetLevel

; 73   : 
; 74   :     PXA_GPIOSetLevel((PXA_GPIOREG_T *)g_pGPIORegisters, PXA_GPIO_82, PXA_HI);

  00120	e3a02001	 mov         r2, #1
  00124	e3a01052	 mov         r1, #0x52
  00128	e59f30a8	 ldr         r3, [pc, #0xA8]
  0012c	e5930000	 ldr         r0, [r3]
  00130	eb000000	 bl          PXA_GPIOSetLevel

; 75   :     
; 76   : 
; 77   :     PXA_MFPConfigurePullUpDown(g_pMFPBase, PXA_MFP_PIN_GPIO20_OFFSET, PXA_MFP_PULL_UP);

  00134	e3a02002	 mov         r2, #2
  00138	e3a01d0b	 mov         r1, #0xB, 26
  0013c	e59f3098	 ldr         r3, [pc, #0x98]
  00140	e5930000	 ldr         r0, [r3]
  00144	eb000000	 bl          PXA_MFPConfigurePullUpDown

; 78   :     PXA_MFPActivatePullUpDown(g_pMFPBase, PXA_MFP_PIN_GPIO20_OFFSET, PXA_ON);

  00148	e3a02001	 mov         r2, #1
  0014c	e3a01d0b	 mov         r1, #0xB, 26
  00150	e59f3084	 ldr         r3, [pc, #0x84]
  00154	e5930000	 ldr         r0, [r3]
  00158	eb000000	 bl          PXA_MFPActivatePullUpDown

; 79   :     PXA_GPIOSetDirection((PXA_GPIOREG_T *)g_pGPIORegisters, PXA_GPIO_20, PXA_GPIO_DIRECTION_OUT);

  0015c	e3a02001	 mov         r2, #1
  00160	e3a01014	 mov         r1, #0x14
  00164	e59f306c	 ldr         r3, [pc, #0x6C]
  00168	e5930000	 ldr         r0, [r3]
  0016c	eb000000	 bl          PXA_GPIOSetDirection

; 80   :     PXA_GPIOSetLevel((PXA_GPIOREG_T *)g_pGPIORegisters, PXA_GPIO_20, PXA_HI);

  00170	e3a02001	 mov         r2, #1
  00174	e3a01014	 mov         r1, #0x14
  00178	e59f3058	 ldr         r3, [pc, #0x58]
  0017c	e5930000	 ldr         r0, [r3]
  00180	eb000000	 bl          PXA_GPIOSetLevel

; 81   : 
; 82   :                          
; 83   :     PXA_GPIOSetDirection((PXA_GPIOREG_T *)g_pGPIORegisters,
; 84   :                          PXA_GPIO_47,
; 85   :                          PXA_GPIO_DIRECTION_OUT);

  00184	e3a02001	 mov         r2, #1
  00188	e3a0102f	 mov         r1, #0x2F
  0018c	e59f3044	 ldr         r3, [pc, #0x44]
  00190	e5930000	 ldr         r0, [r3]
  00194	eb000000	 bl          PXA_GPIOSetDirection

; 86   : 
; 87   :     PXA_GPIOSetDirection((PXA_GPIOREG_T *)g_pGPIORegisters,
; 88   :                          PXA_GPIO_53,
; 89   :                          PXA_GPIO_DIRECTION_OUT);

  00198	e3a02001	 mov         r2, #1
  0019c	e3a01035	 mov         r1, #0x35
  001a0	e59f3030	 ldr         r3, [pc, #0x30]
  001a4	e5930000	 ldr         r0, [r3]
  001a8	eb000000	 bl          PXA_GPIOSetDirection

; 90   : 
; 91   :     PXA_GPIOSetDirection((PXA_GPIOREG_T *)g_pGPIORegisters,
; 92   :                          PXA_GPIO_82,
; 93   :                          PXA_GPIO_DIRECTION_OUT);

  001ac	e3a02001	 mov         r2, #1
  001b0	e3a01052	 mov         r1, #0x52
  001b4	e59f301c	 ldr         r3, [pc, #0x1C]
  001b8	e5930000	 ldr         r0, [r3]
  001bc	eb000000	 bl          PXA_GPIOSetDirection

; 94   : 
; 95   : 
; 96   : 
; 97   : 
; 98   :     return TRUE;

  001c0	e3a03001	 mov         r3, #1
  001c4	e58d3044	 str         r3, [sp, #0x44]
  001c8		 |$LN3@Init_LED|

; 99   : }

  001c8	e59d0044	 ldr         r0, [sp, #0x44]
  001cc	e28dd048	 add         sp, sp, #0x48
  001d0	e49de004	 ldr         lr, [sp], #4
  001d4	e12fff1e	 bx          lr
  001d8		 |$LN8@Init_LED|
  001d8		 |$LN9@Init_LED|
  001d8	00000000	 DCD         |g_pGPIORegisters|
  001dc		 |$LN10@Init_LED|
  001dc	00000000	 DCD         |g_pMFPBase|
  001e0		 |$M45419|

			 ENDP  ; |Init_LED|

	EXPORT	|SetBluetoothLED|

  00008			 AREA	 |.pdata|, PDATA
|$T45432| DCD	|$LN8@SetBluetoo|
	DCD	0x40002004
; Function compile flags: /Odtp

  001e0			 AREA	 |.text|, CODE, ARM

  001e0		 |SetBluetoothLED| PROC

; 102  : {

  001e0		 |$LN8@SetBluetoo|
  001e0	e1a0c00d	 mov         r12, sp
  001e4	e92d0001	 stmdb       sp!, {r0}
  001e8	e92d5000	 stmdb       sp!, {r12, lr}
  001ec	e24dd00c	 sub         sp, sp, #0xC
  001f0		 |$M45429|

; 103  :     if(!g_pGPIORegisters)

  001f0	e59f3064	 ldr         r3, [pc, #0x64]
  001f4	e5933000	 ldr         r3, [r3]
  001f8	e3530000	 cmp         r3, #0
  001fc	1a000002	 bne         |$LN1@SetBluetoo|

; 104  :     {
; 105  :         return FALSE;

  00200	e3a03000	 mov         r3, #0
  00204	e58d3000	 str         r3, [sp]
  00208	ea00000f	 b           |$LN2@SetBluetoo|
  0020c		 |$LN1@SetBluetoo|

; 106  :     }
; 107  : 
; 108  :     return PXA_GPIOSetLevel((PXA_GPIOREG_T *)g_pGPIORegisters, PXA_GPIO_47, dwONState ? PXA_LO : PXA_HI);

  0020c	e59d3014	 ldr         r3, [sp, #0x14]
  00210	e3530000	 cmp         r3, #0
  00214	0a000002	 beq         |$LN4@SetBluetoo|
  00218	e3a03000	 mov         r3, #0
  0021c	e58d3004	 str         r3, [sp, #4]
  00220	ea000001	 b           |$LN5@SetBluetoo|
  00224		 |$LN4@SetBluetoo|
  00224	e3a03001	 mov         r3, #1
  00228	e58d3004	 str         r3, [sp, #4]
  0022c		 |$LN5@SetBluetoo|
  0022c	e59d2004	 ldr         r2, [sp, #4]
  00230	e3a0102f	 mov         r1, #0x2F
  00234	e59f3020	 ldr         r3, [pc, #0x20]
  00238	e5930000	 ldr         r0, [r3]
  0023c	eb000000	 bl          PXA_GPIOSetLevel
  00240	e58d0008	 str         r0, [sp, #8]
  00244	e59d3008	 ldr         r3, [sp, #8]
  00248	e58d3000	 str         r3, [sp]
  0024c		 |$LN2@SetBluetoo|

; 109  : }

  0024c	e59d0000	 ldr         r0, [sp]
  00250	e28dd00c	 add         sp, sp, #0xC
  00254	e89d6000	 ldmia       sp, {sp, lr}
  00258	e12fff1e	 bx          lr
  0025c		 |$LN9@SetBluetoo|
  0025c		 |$LN10@SetBluetoo|
  0025c	00000000	 DCD         |g_pGPIORegisters|
  00260		 |$M45430|

			 ENDP  ; |SetBluetoothLED|

	EXPORT	|SetWIFILED|

  00010			 AREA	 |.pdata|, PDATA
|$T45442| DCD	|$LN8@SetWIFILED|
	DCD	0x40002004
; Function compile flags: /Odtp

  00260			 AREA	 |.text|, CODE, ARM

  00260		 |SetWIFILED| PROC

; 112  : {

  00260		 |$LN8@SetWIFILED|
  00260	e1a0c00d	 mov         r12, sp
  00264	e92d0001	 stmdb       sp!, {r0}
  00268	e92d5000	 stmdb       sp!, {r12, lr}
  0026c	e24dd00c	 sub         sp, sp, #0xC
  00270		 |$M45439|

; 113  :     if(!g_pGPIORegisters)

  00270	e59f3064	 ldr         r3, [pc, #0x64]
  00274	e5933000	 ldr         r3, [r3]
  00278	e3530000	 cmp         r3, #0
  0027c	1a000002	 bne         |$LN1@SetWIFILED|

; 114  :     {
; 115  :         return FALSE;

  00280	e3a03000	 mov         r3, #0
  00284	e58d3000	 str         r3, [sp]
  00288	ea00000f	 b           |$LN2@SetWIFILED|
  0028c		 |$LN1@SetWIFILED|

; 116  :     }
; 117  : 
; 118  :     return PXA_GPIOSetLevel((PXA_GPIOREG_T *)g_pGPIORegisters, PXA_GPIO_53, dwONState ? PXA_LO : PXA_HI);

  0028c	e59d3014	 ldr         r3, [sp, #0x14]
  00290	e3530000	 cmp         r3, #0
  00294	0a000002	 beq         |$LN4@SetWIFILED|
  00298	e3a03000	 mov         r3, #0
  0029c	e58d3004	 str         r3, [sp, #4]
  002a0	ea000001	 b           |$LN5@SetWIFILED|
  002a4		 |$LN4@SetWIFILED|
  002a4	e3a03001	 mov         r3, #1
  002a8	e58d3004	 str         r3, [sp, #4]
  002ac		 |$LN5@SetWIFILED|
  002ac	e59d2004	 ldr         r2, [sp, #4]
  002b0	e3a01035	 mov         r1, #0x35
  002b4	e59f3020	 ldr         r3, [pc, #0x20]
  002b8	e5930000	 ldr         r0, [r3]
  002bc	eb000000	 bl          PXA_GPIOSetLevel
  002c0	e58d0008	 str         r0, [sp, #8]
  002c4	e59d3008	 ldr         r3, [sp, #8]
  002c8	e58d3000	 str         r3, [sp]
  002cc		 |$LN2@SetWIFILED|

; 119  : }

  002cc	e59d0000	 ldr         r0, [sp]
  002d0	e28dd00c	 add         sp, sp, #0xC
  002d4	e89d6000	 ldmia       sp, {sp, lr}
  002d8	e12fff1e	 bx          lr
  002dc		 |$LN9@SetWIFILED|
  002dc		 |$LN10@SetWIFILED|
  002dc	00000000	 DCD         |g_pGPIORegisters|
  002e0		 |$M45440|

			 ENDP  ; |SetWIFILED|

	EXPORT	|SetBarcodeLED|

  00018			 AREA	 |.pdata|, PDATA
|$T45454| DCD	|$LN11@SetBarcode|
	DCD	0x40003104
; Function compile flags: /Odtp

  002e0			 AREA	 |.text|, CODE, ARM

  002e0		 |SetBarcodeLED| PROC

; 122  : {

  002e0		 |$LN11@SetBarcode|
  002e0	e1a0c00d	 mov         r12, sp
  002e4	e92d0001	 stmdb       sp!, {r0}
  002e8	e92d5000	 stmdb       sp!, {r12, lr}
  002ec	e24dd00c	 sub         sp, sp, #0xC
  002f0		 |$M45451|

; 123  :     if(!g_pGPIORegisters)

  002f0	e59f30a4	 ldr         r3, [pc, #0xA4]
  002f4	e5933000	 ldr         r3, [r3]
  002f8	e3530000	 cmp         r3, #0
  002fc	1a000002	 bne         |$LN2@SetBarcode|

; 124  :     {
; 125  :         return FALSE;

  00300	e3a03000	 mov         r3, #0
  00304	e58d3000	 str         r3, [sp]
  00308	ea00001f	 b           |$LN3@SetBarcode|
  0030c		 |$LN2@SetBarcode|

; 126  :     }
; 127  : 
; 128  :     // LED
; 129  :     PXA_GPIOSetLevel((PXA_GPIOREG_T *)g_pGPIORegisters, PXA_GPIO_82, dwONState ? PXA_LO : PXA_HI);

  0030c	e59d3014	 ldr         r3, [sp, #0x14]
  00310	e3530000	 cmp         r3, #0
  00314	0a000002	 beq         |$LN5@SetBarcode|
  00318	e3a03000	 mov         r3, #0
  0031c	e58d3004	 str         r3, [sp, #4]
  00320	ea000001	 b           |$LN6@SetBarcode|
  00324		 |$LN5@SetBarcode|
  00324	e3a03001	 mov         r3, #1
  00328	e58d3004	 str         r3, [sp, #4]
  0032c		 |$LN6@SetBarcode|
  0032c	e59d2004	 ldr         r2, [sp, #4]
  00330	e3a01052	 mov         r1, #0x52
  00334	e59f3060	 ldr         r3, [pc, #0x60]
  00338	e5930000	 ldr         r0, [r3]
  0033c	eb000000	 bl          PXA_GPIOSetLevel

; 130  :     // Vibrator
; 131  :     if( *(volatile BYTE *)DEVICE_POWER_FLAG_ADDR & VIBRATORI_POWER_MASK )

  00340	e59f3058	 ldr         r3, [pc, #0x58]
  00344	e5d33000	 ldrb        r3, [r3]
  00348	e3130020	 tst         r3, #0x20
  0034c	0a00000c	 beq         |$LN1@SetBarcode|

; 132  :     	PXA_GPIOSetLevel((PXA_GPIOREG_T *)g_pGPIORegisters, PXA_GPIO_20, dwONState ? PXA_LO : PXA_HI);

  00350	e59d3014	 ldr         r3, [sp, #0x14]
  00354	e3530000	 cmp         r3, #0
  00358	0a000002	 beq         |$LN7@SetBarcode|
  0035c	e3a03000	 mov         r3, #0
  00360	e58d3008	 str         r3, [sp, #8]
  00364	ea000001	 b           |$LN8@SetBarcode|
  00368		 |$LN7@SetBarcode|
  00368	e3a03001	 mov         r3, #1
  0036c	e58d3008	 str         r3, [sp, #8]
  00370		 |$LN8@SetBarcode|
  00370	e59d2008	 ldr         r2, [sp, #8]
  00374	e3a01014	 mov         r1, #0x14
  00378	e59f301c	 ldr         r3, [pc, #0x1C]
  0037c	e5930000	 ldr         r0, [r3]
  00380	eb000000	 bl          PXA_GPIOSetLevel
  00384		 |$LN1@SetBarcode|

; 133  : 
; 134  :     return TRUE;

  00384	e3a03001	 mov         r3, #1
  00388	e58d3000	 str         r3, [sp]
  0038c		 |$LN3@SetBarcode|

; 135  : }

  0038c	e59d0000	 ldr         r0, [sp]
  00390	e28dd00c	 add         sp, sp, #0xC
  00394	e89d6000	 ldmia       sp, {sp, lr}
  00398	e12fff1e	 bx          lr
  0039c		 |$LN12@SetBarcode|
  0039c		 |$LN13@SetBarcode|
  0039c	00000000	 DCD         |g_pGPIORegisters|
  003a0		 |$LN14@SetBarcode|
  003a0	a0008032	 DCD         0xa0008032
  003a4		 |$M45452|

			 ENDP  ; |SetBarcodeLED|

	EXPORT	|??_C@_1CK@MAPPIKAG@?$AAB?$AAC?$AAR?$AA_?$AAL?$AAE?$AAD?$AA?1?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|BCRLEDThread|
	IMPORT	|WaitForSingleObject|
	IMPORT	|CreateEventW|

  00020			 AREA	 |.pdata|, PDATA
|$T45463| DCD	|$LN7@BCRLEDThre|
	DCD	0x40002504

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@MAPPIKAG@?$AAB?$AAC?$AAR?$AA_?$AAL?$AAE?$AAD?$AA?1?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@| DCB "B"
	DCB	0x0, "C", 0x0, "R", 0x0, "_", 0x0, "L", 0x0, "E", 0x0, "D"
	DCB	0x0, "/", 0x0, "N", 0x0, "o", 0x0, "t", 0x0, "i", 0x0, "f"
	DCB	0x0, "i", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Odtp

  003a4			 AREA	 |.text|, CODE, ARM

  003a4		 |BCRLEDThread| PROC

; 138  : {

  003a4		 |$LN7@BCRLEDThre|
  003a4	e1a0c00d	 mov         r12, sp
  003a8	e92d0001	 stmdb       sp!, {r0}
  003ac	e92d5000	 stmdb       sp!, {r12, lr}
  003b0	e24dd00c	 sub         sp, sp, #0xC
  003b4		 |$M45460|

; 139  : 	HANDLE BCR_LED_Event = CreateEvent(NULL, FALSE, FALSE, BCR_LED_NOTIFY);

  003b4	e59f3078	 ldr         r3, [pc, #0x78]
  003b8	e3a02000	 mov         r2, #0
  003bc	e3a01000	 mov         r1, #0
  003c0	e3a00000	 mov         r0, #0
  003c4	eb000000	 bl          CreateEventW
  003c8	e58d0008	 str         r0, [sp, #8]
  003cc	e59d3008	 ldr         r3, [sp, #8]
  003d0	e58d3000	 str         r3, [sp]
  003d4		 |$LN2@BCRLEDThre|

; 140  : 
; 141  :     while(BCR_LED_Event)

  003d4	e59d3000	 ldr         r3, [sp]
  003d8	e3530000	 cmp         r3, #0
  003dc	0a00000e	 beq         |$LN1@BCRLEDThre|

; 142  : 	{
; 143  : 		WaitForSingleObject(BCR_LED_Event, INFINITE);

  003e0	e3e01000	 mvn         r1, #0
  003e4	e59d0000	 ldr         r0, [sp]
  003e8	eb000000	 bl          WaitForSingleObject

; 144  : 
; 145  :         SetBluetoothLED(FALSE);

  003ec	e3a00000	 mov         r0, #0
  003f0	eb000000	 bl          SetBluetoothLED

; 146  :         SetWIFILED(FALSE);

  003f4	e3a00000	 mov         r0, #0
  003f8	eb000000	 bl          SetWIFILED

; 147  : 
; 148  : 		SetBarcodeLED(TRUE);

  003fc	e3a00001	 mov         r0, #1
  00400	eb000000	 bl          SetBarcodeLED

; 149  :         WaitForSingleObject(BCR_LED_Event, 100);

  00404	e3a01064	 mov         r1, #0x64
  00408	e59d0000	 ldr         r0, [sp]
  0040c	eb000000	 bl          WaitForSingleObject

; 150  :         SetBarcodeLED(FALSE);

  00410	e3a00000	 mov         r0, #0
  00414	eb000000	 bl          SetBarcodeLED

; 151  : 	}

  00418	eaffffed	 b           |$LN2@BCRLEDThre|
  0041c		 |$LN1@BCRLEDThre|

; 152  : 
; 153  :     return 0;

  0041c	e3a03000	 mov         r3, #0
  00420	e58d3004	 str         r3, [sp, #4]

; 154  : }

  00424	e59d0004	 ldr         r0, [sp, #4]
  00428	e28dd00c	 add         sp, sp, #0xC
  0042c	e89d6000	 ldmia       sp, {sp, lr}
  00430	e12fff1e	 bx          lr
  00434		 |$LN8@BCRLEDThre|
  00434		 |$LN9@BCRLEDThre|
  00434	00000000	 DCD         |??_C@_1CK@MAPPIKAG@?$AAB?$AAC?$AAR?$AA_?$AAL?$AAE?$AAD?$AA?1?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@|
  00438		 |$M45461|

			 ENDP  ; |BCRLEDThread|

	EXPORT	|??_C@_1CM@ILKMKENC@?$AAW?$AAI?$AAF?$AAI?$AA?1?$AAR?$AAD?$AAY?$AA?1?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@DFICLJOC@?$AAW?$AAI?$AAF?$AAI?$AA_?$AAL?$AAE?$AAD?$AA?1?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@KEHENBMD@?$AAB?$AAT?$AA?1?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|LEDThread|
	IMPORT	|WaitForMultipleObjects|
	IMPORT	|SysGetWLANPower|
	IMPORT	|CloseHandle|
	IMPORT	|CreateThread|
	IMPORT	|Sleep|
	IMPORT	|WaitForAPIReady|

  00028			 AREA	 |.pdata|, PDATA
|$T45481| DCD	|$LN50@LEDThread|
	DCD	0x40012904

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@ILKMKENC@?$AAW?$AAI?$AAF?$AAI?$AA?1?$AAR?$AAD?$AAY?$AA?1?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@| DCB "W"
	DCB	0x0, "I", 0x0, "F", 0x0, "I", 0x0, "/", 0x0, "R", 0x0, "D"
	DCB	0x0, "Y", 0x0, "/", 0x0, "N", 0x0, "o", 0x0, "t", 0x0, "i"
	DCB	0x0, "f", 0x0, "i", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@DFICLJOC@?$AAW?$AAI?$AAF?$AAI?$AA_?$AAL?$AAE?$AAD?$AA?1?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@| DCB "W"
	DCB	0x0, "I", 0x0, "F", 0x0, "I", 0x0, "_", 0x0, "L", 0x0, "E"
	DCB	0x0, "D", 0x0, "/", 0x0, "N", 0x0, "o", 0x0, "t", 0x0, "i"
	DCB	0x0, "f", 0x0, "i", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@KEHENBMD@?$AAB?$AAT?$AA?1?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@| DCB "B"
	DCB	0x0, "T", 0x0, "/", 0x0, "N", 0x0, "o", 0x0, "t", 0x0, "i"
	DCB	0x0, "f", 0x0, "i", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Odtp

  00438			 AREA	 |.text|, CODE, ARM

  00438		 |LEDThread| PROC

; 157  : {

  00438		 |$LN50@LEDThread|
  00438	e1a0c00d	 mov         r12, sp
  0043c	e92d0001	 stmdb       sp!, {r0}
  00440	e92d5000	 stmdb       sp!, {r12, lr}
  00444	e24dd07c	 sub         sp, sp, #0x7C
  00448		 |$M45478|

; 158  : 	DWORD TimeOut = INFINITE;

  00448	e3e03000	 mvn         r3, #0
  0044c	e58d3024	 str         r3, [sp, #0x24]

; 159  :     DWORD WaitState;
; 160  :     BOOL BTisON, WIFIisON;
; 161  :     BYTE LastLED;
; 162  :     DWORD dwTimeCount = 0;

  00450	e3a03000	 mov         r3, #0
  00454	e58d300c	 str         r3, [sp, #0xC]

; 163  :     HANDLE  WaitEvents[2];
; 164  : 	HANDLE hThread,WIFI_RDY_Event=NULL;

  00458	e3a03000	 mov         r3, #0
  0045c	e58d3014	 str         r3, [sp, #0x14]

; 165  : 
; 166  :     SetBluetoothLED(FALSE);

  00460	e3a00000	 mov         r0, #0
  00464	eb000000	 bl          SetBluetoothLED

; 167  : 
; 168  :     SetWIFILED(FALSE);

  00468	e3a00000	 mov         r0, #0
  0046c	eb000000	 bl          SetWIFILED

; 169  : 
; 170  :     /*while(!IsAPIReady(SH_SHELL))
; 171  :     {
; 172  :         Sleep(500);
; 173  :     }*/
; 174  :     WaitForAPIReady(SH_SHELL, INFINITE);

  00470	e3e01000	 mvn         r1, #0
  00474	e3a00055	 mov         r0, #0x55
  00478	eb000000	 bl          WaitForAPIReady

; 175  : 	Sleep(500);			

  0047c	e3a00f7d	 mov         r0, #0x7D, 30
  00480	eb000000	 bl          Sleep

; 176  : 
; 177  :     hThread = CreateThread(NULL, 0, BCRLEDThread, NULL, 0, NULL);

  00484	e3a03000	 mov         r3, #0
  00488	e58d3004	 str         r3, [sp, #4]
  0048c	e3a03000	 mov         r3, #0
  00490	e58d3000	 str         r3, [sp]
  00494	e3a03000	 mov         r3, #0
  00498	e59f2438	 ldr         r2, [pc, #0x438]
  0049c	e3a01000	 mov         r1, #0
  004a0	e3a00000	 mov         r0, #0
  004a4	eb000000	 bl          CreateThread
  004a8	e58d003c	 str         r0, [sp, #0x3C]
  004ac	e59d303c	 ldr         r3, [sp, #0x3C]
  004b0	e58d3028	 str         r3, [sp, #0x28]

; 178  :     CloseHandle(hThread);

  004b4	e59d0028	 ldr         r0, [sp, #0x28]
  004b8	eb000000	 bl          CloseHandle

; 179  : 
; 180  : 
; 181  :     BT_LED_Event = CreateEvent(NULL, FALSE, FALSE, BT_LED_NOTIFY);

  004bc	e59f3410	 ldr         r3, [pc, #0x410]
  004c0	e3a02000	 mov         r2, #0
  004c4	e3a01000	 mov         r1, #0
  004c8	e3a00000	 mov         r0, #0
  004cc	eb000000	 bl          CreateEventW
  004d0	e58d0040	 str         r0, [sp, #0x40]
  004d4	e59d2040	 ldr         r2, [sp, #0x40]
  004d8	e59f33e8	 ldr         r3, [pc, #0x3E8]
  004dc	e5832000	 str         r2, [r3]

; 182  :     WIFI_LED_Event = CreateEvent(NULL, FALSE, FALSE, WIFI_LED_NOTIFY);

  004e0	e59f33e8	 ldr         r3, [pc, #0x3E8]
  004e4	e3a02000	 mov         r2, #0
  004e8	e3a01000	 mov         r1, #0
  004ec	e3a00000	 mov         r0, #0
  004f0	eb000000	 bl          CreateEventW
  004f4	e58d0044	 str         r0, [sp, #0x44]
  004f8	e59d2044	 ldr         r2, [sp, #0x44]
  004fc	e59f33c0	 ldr         r3, [pc, #0x3C0]
  00500	e5832000	 str         r2, [r3]

; 183  : 	WIFI_RDY_Event=CreateEvent(NULL, FALSE, FALSE, WIFI_RDY_NOTIFY); //20111026-luk

  00504	e59f33c0	 ldr         r3, [pc, #0x3C0]
  00508	e3a02000	 mov         r2, #0
  0050c	e3a01000	 mov         r1, #0
  00510	e3a00000	 mov         r0, #0
  00514	eb000000	 bl          CreateEventW
  00518	e58d0048	 str         r0, [sp, #0x48]
  0051c	e59d3048	 ldr         r3, [sp, #0x48]
  00520	e58d3014	 str         r3, [sp, #0x14]

; 184  :    	  
; 185  : 	if(BT_LED_Event==NULL || WIFI_LED_Event==NULL||WIFI_RDY_Event==NULL)

  00524	e59f339c	 ldr         r3, [pc, #0x39C]
  00528	e5933000	 ldr         r3, [r3]
  0052c	e3530000	 cmp         r3, #0
  00530	0a000006	 beq         |$LN36@LEDThread|
  00534	e59f3388	 ldr         r3, [pc, #0x388]
  00538	e5933000	 ldr         r3, [r3]
  0053c	e3530000	 cmp         r3, #0
  00540	0a000002	 beq         |$LN36@LEDThread|
  00544	e59d3014	 ldr         r3, [sp, #0x14]
  00548	e3530000	 cmp         r3, #0
  0054c	1a000002	 bne         |$LN37@LEDThread|
  00550		 |$LN36@LEDThread|

; 186  : 		return 0;	

  00550	e3a03000	 mov         r3, #0
  00554	e58d3038	 str         r3, [sp, #0x38]
  00558	ea0000d4	 b           |$LN38@LEDThread|
  0055c		 |$LN37@LEDThread|

; 187  : 
; 188  :     WaitEvents[0]  = BT_LED_Event;

  0055c	e59f3364	 ldr         r3, [pc, #0x364]
  00560	e5933000	 ldr         r3, [r3]
  00564	e58d3018	 str         r3, [sp, #0x18]

; 189  :     WaitEvents[1]  = WIFI_LED_Event;

  00568	e59f3354	 ldr         r3, [pc, #0x354]
  0056c	e5933000	 ldr         r3, [r3]
  00570	e58d301c	 str         r3, [sp, #0x1C]

; 190  : 
; 191  :     LastLED = 0;

  00574	e3a03000	 mov         r3, #0
  00578	e5cd302c	 strb        r3, [sp, #0x2C]

; 192  :     BTisON = FALSE;

  0057c	e3a03000	 mov         r3, #0
  00580	e58d3008	 str         r3, [sp, #8]

; 193  :     WIFIisON = FALSE;

  00584	e3a03000	 mov         r3, #0
  00588	e58d3020	 str         r3, [sp, #0x20]

; 194  : 
; 195  : 	WaitForSingleObject(WIFI_RDY_Event, 3000);	//20111026-luk

  0058c	e3a01c0b	 mov         r1, #0xB, 24
  00590	e38110b8	 orr         r1, r1, #0xB8
  00594	e59d0014	 ldr         r0, [sp, #0x14]
  00598	eb000000	 bl          WaitForSingleObject

; 196  : 	CloseHandle(WIFI_RDY_Event);

  0059c	e59d0014	 ldr         r0, [sp, #0x14]
  005a0	eb000000	 bl          CloseHandle

; 197  : 	
; 198  :     if(SysGetWLANPower(&WIFIisON))

  005a4	e28d0020	 add         r0, sp, #0x20
  005a8	eb000000	 bl          SysGetWLANPower
  005ac	e58d004c	 str         r0, [sp, #0x4C]
  005b0	e59d304c	 ldr         r3, [sp, #0x4C]
  005b4	e3530000	 cmp         r3, #0
  005b8	0a000004	 beq         |$LN35@LEDThread|

; 199  :     {
; 200  :         if(WIFIisON)

  005bc	e59d3020	 ldr         r3, [sp, #0x20]
  005c0	e3530000	 cmp         r3, #0
  005c4	0a000001	 beq         |$LN34@LEDThread|

; 201  :         {
; 202  :             TimeOut = 500;

  005c8	e3a03f7d	 mov         r3, #0x7D, 30
  005cc	e58d3024	 str         r3, [sp, #0x24]
  005d0		 |$LN34@LEDThread|
  005d0		 |$LN35@LEDThread|

; 203  :         }
; 204  :     }
; 205  : 
; 206  :     if((*(volatile BYTE *)DEVICE_POWER_FLAG_ADDR & BT_POWER_MASK))

  005d0	e59f32e8	 ldr         r3, [pc, #0x2E8]
  005d4	e5d33000	 ldrb        r3, [r3]
  005d8	e3130002	 tst         r3, #2
  005dc	0a000003	 beq         |$LN33@LEDThread|

; 207  :     {
; 208  :         TimeOut = 500;

  005e0	e3a03f7d	 mov         r3, #0x7D, 30
  005e4	e58d3024	 str         r3, [sp, #0x24]

; 209  :         BTisON = TRUE;

  005e8	e3a03001	 mov         r3, #1
  005ec	e58d3008	 str         r3, [sp, #8]
  005f0		 |$LN33@LEDThread|
  005f0		 |$LN32@LEDThread|

; 210  :     }
; 211  : 
; 212  :     while(1)
; 213  :     {
; 214  :         WaitState = WaitForMultipleObjects(2, &WaitEvents[0], FALSE, TimeOut);

  005f0	e59d3024	 ldr         r3, [sp, #0x24]
  005f4	e3a02000	 mov         r2, #0
  005f8	e28d1018	 add         r1, sp, #0x18
  005fc	e3a00002	 mov         r0, #2
  00600	eb000000	 bl          WaitForMultipleObjects
  00604	e58d0050	 str         r0, [sp, #0x50]
  00608	e59d3050	 ldr         r3, [sp, #0x50]
  0060c	e58d3010	 str         r3, [sp, #0x10]

; 215  : 
; 216  : 		switch(WaitState)

  00610	e59d3010	 ldr         r3, [sp, #0x10]
  00614	e58d3054	 str         r3, [sp, #0x54]
  00618	e59d3054	 ldr         r3, [sp, #0x54]
  0061c	e3530000	 cmp         r3, #0
  00620	0a000003	 beq         |$LN28@LEDThread|
  00624	e59d3054	 ldr         r3, [sp, #0x54]
  00628	e3530001	 cmp         r3, #1
  0062c	0a00000e	 beq         |$LN27@LEDThread|
  00630	ea000011	 b           |$LN26@LEDThread|
  00634		 |$LN28@LEDThread|

; 217  :         {
; 218  :             case WAIT_OBJECT_0:
; 219  :                 BTisON = (*(volatile BYTE *)DEVICE_POWER_FLAG_ADDR & BT_POWER_MASK) ? TRUE : FALSE;

  00634	e59f3284	 ldr         r3, [pc, #0x284]
  00638	e5d33000	 ldrb        r3, [r3]
  0063c	e3130002	 tst         r3, #2
  00640	0a000002	 beq         |$LN40@LEDThread|
  00644	e3a03001	 mov         r3, #1
  00648	e58d3058	 str         r3, [sp, #0x58]
  0064c	ea000001	 b           |$LN41@LEDThread|
  00650		 |$LN40@LEDThread|
  00650	e3a03000	 mov         r3, #0
  00654	e58d3058	 str         r3, [sp, #0x58]
  00658		 |$LN41@LEDThread|
  00658	e59d3058	 ldr         r3, [sp, #0x58]
  0065c	e58d3008	 str         r3, [sp, #8]

; 220  :                 TimeOut = 500;

  00660	e3a03f7d	 mov         r3, #0x7D, 30
  00664	e58d3024	 str         r3, [sp, #0x24]

; 221  :                 break;

  00668	ea000003	 b           |$LN29@LEDThread|
  0066c		 |$LN27@LEDThread|

; 222  : 
; 223  :             case(WAIT_OBJECT_0+1):
; 224  :                 SysGetWLANPower(&WIFIisON);

  0066c	e28d0020	 add         r0, sp, #0x20
  00670	eb000000	 bl          SysGetWLANPower

; 225  :                 TimeOut = 500;

  00674	e3a03f7d	 mov         r3, #0x7D, 30
  00678	e58d3024	 str         r3, [sp, #0x24]
  0067c		 |$LN26@LEDThread|
  0067c		 |$LN29@LEDThread|

; 226  :                 break;
; 227  :                 
; 228  :             default:
; 229  :                 break;
; 230  :         }
; 231  : 
; 232  :         if(WaitState == WAIT_TIMEOUT)

  0067c	e59d2010	 ldr         r2, [sp, #0x10]
  00680	e3a03c01	 mov         r3, #1, 24
  00684	e3833002	 orr         r3, r3, #2
  00688	e1520003	 cmp         r2, r3
  0068c	1a000084	 bne         |$LN25@LEDThread|

; 233  :         {
; 234  :             switch(TimeOut)

  00690	e59d3024	 ldr         r3, [sp, #0x24]
  00694	e58d305c	 str         r3, [sp, #0x5C]
  00698	e59d305c	 ldr         r3, [sp, #0x5C]
  0069c	e3530f7d	 cmp         r3, #0x7D, 30
  006a0	0a000008	 beq         |$LN22@LEDThread|
  006a4	e59d305c	 ldr         r3, [sp, #0x5C]
  006a8	e3530ffa	 cmp         r3, #0xFA, 30
  006ac	0a000031	 beq         |$LN13@LEDThread|
  006b0	e59d205c	 ldr         r2, [sp, #0x5C]
  006b4	e3a03c0b	 mov         r3, #0xB, 24
  006b8	e38330b8	 orr         r3, r3, #0xB8
  006bc	e1520003	 cmp         r2, r3
  006c0	0a00004d	 beq         |$LN7@LEDThread|
  006c4	ea000076	 b           |$LN1@LEDThread|
  006c8		 |$LN22@LEDThread|

; 235  :             {
; 236  :                 case 500:
; 237  :                     SetBluetoothLED(FALSE);

  006c8	e3a00000	 mov         r0, #0
  006cc	eb000000	 bl          SetBluetoothLED

; 238  :                     SetWIFILED(FALSE);

  006d0	e3a00000	 mov         r0, #0
  006d4	eb000000	 bl          SetWIFILED

; 239  :                     LastLED = 0;

  006d8	e3a03000	 mov         r3, #0
  006dc	e5cd302c	 strb        r3, [sp, #0x2C]

; 240  :                     if(BTisON || WIFIisON)

  006e0	e59d3008	 ldr         r3, [sp, #8]
  006e4	e3530000	 cmp         r3, #0
  006e8	1a000002	 bne         |$LN20@LEDThread|
  006ec	e59d3020	 ldr         r3, [sp, #0x20]
  006f0	e3530000	 cmp         r3, #0
  006f4	0a00001c	 beq         |$LN21@LEDThread|
  006f8		 |$LN20@LEDThread|

; 241  :                     {
; 242  :                         TimeOut = 1000;

  006f8	e3a03ffa	 mov         r3, #0xFA, 30
  006fc	e58d3024	 str         r3, [sp, #0x24]

; 243  :                         if(BTisON && WIFIisON)

  00700	e59d3008	 ldr         r3, [sp, #8]
  00704	e3530000	 cmp         r3, #0
  00708	0a000007	 beq         |$LN19@LEDThread|
  0070c	e59d3020	 ldr         r3, [sp, #0x20]
  00710	e3530000	 cmp         r3, #0
  00714	0a000004	 beq         |$LN19@LEDThread|

; 244  :                         {
; 245  :                             LastLED = BT_LED_ON;

  00718	e3a03001	 mov         r3, #1
  0071c	e5cd302c	 strb        r3, [sp, #0x2C]

; 246  :                             SetBluetoothLED(TRUE);

  00720	e3a00001	 mov         r0, #1
  00724	eb000000	 bl          SetBluetoothLED
  00728	ea00000e	 b           |$LN18@LEDThread|
  0072c		 |$LN19@LEDThread|

; 247  :                         }
; 248  :                         else if(BTisON)

  0072c	e59d3008	 ldr         r3, [sp, #8]
  00730	e3530000	 cmp         r3, #0
  00734	0a000004	 beq         |$LN17@LEDThread|

; 249  :                         {
; 250  :                             LastLED = 0;

  00738	e3a03000	 mov         r3, #0
  0073c	e5cd302c	 strb        r3, [sp, #0x2C]

; 251  :                             SetBluetoothLED(TRUE);

  00740	e3a00001	 mov         r0, #1
  00744	eb000000	 bl          SetBluetoothLED
  00748	ea000006	 b           |$LN16@LEDThread|
  0074c		 |$LN17@LEDThread|

; 252  :                         }
; 253  :                         else if(WIFIisON)

  0074c	e59d3020	 ldr         r3, [sp, #0x20]
  00750	e3530000	 cmp         r3, #0
  00754	0a000003	 beq         |$LN15@LEDThread|

; 254  :                         {
; 255  :                             LastLED = 0;

  00758	e3a03000	 mov         r3, #0
  0075c	e5cd302c	 strb        r3, [sp, #0x2C]

; 256  :                             SetWIFILED(TRUE);

  00760	e3a00001	 mov         r0, #1
  00764	eb000000	 bl          SetWIFILED
  00768		 |$LN15@LEDThread|
  00768		 |$LN16@LEDThread|
  00768		 |$LN18@LEDThread|

; 257  :                         }
; 258  :                     }
; 259  :                     else

  00768	ea000001	 b           |$LN14@LEDThread|
  0076c		 |$LN21@LEDThread|

; 260  :                     {
; 261  :                         TimeOut = INFINITE;

  0076c	e3e03000	 mvn         r3, #0
  00770	e58d3024	 str         r3, [sp, #0x24]
  00774		 |$LN14@LEDThread|

; 262  :                     }
; 263  :                     break;

  00774	ea00004a	 b           |$LN23@LEDThread|
  00778		 |$LN13@LEDThread|

; 264  : 
; 265  :                 case 1000:
; 266  :                     TimeOut = 3000;

  00778	e3a03c0b	 mov         r3, #0xB, 24
  0077c	e38330b8	 orr         r3, r3, #0xB8
  00780	e58d3024	 str         r3, [sp, #0x24]

; 267  :                     if(LastLED)

  00784	e5dd302c	 ldrb        r3, [sp, #0x2C]
  00788	e3530000	 cmp         r3, #0
  0078c	0a00000e	 beq         |$LN12@LEDThread|

; 268  :                     {
; 269  :                         (LastLED == BT_LED_ON) ? SetBluetoothLED(FALSE) :   SetWIFILED(FALSE);

  00790	e5dd302c	 ldrb        r3, [sp, #0x2C]
  00794	e3530001	 cmp         r3, #1
  00798	1a000005	 bne         |$LN42@LEDThread|
  0079c	e3a00000	 mov         r0, #0
  007a0	eb000000	 bl          SetBluetoothLED
  007a4	e58d0060	 str         r0, [sp, #0x60]
  007a8	e59d3060	 ldr         r3, [sp, #0x60]
  007ac	e58d3064	 str         r3, [sp, #0x64]
  007b0	ea000004	 b           |$LN43@LEDThread|
  007b4		 |$LN42@LEDThread|
  007b4	e3a00000	 mov         r0, #0
  007b8	eb000000	 bl          SetWIFILED
  007bc	e58d0068	 str         r0, [sp, #0x68]
  007c0	e59d3068	 ldr         r3, [sp, #0x68]
  007c4	e58d3064	 str         r3, [sp, #0x64]
  007c8		 |$LN43@LEDThread|

; 270  :                     }
; 271  :                     else if(BTisON)

  007c8	ea00000a	 b           |$LN11@LEDThread|
  007cc		 |$LN12@LEDThread|
  007cc	e59d3008	 ldr         r3, [sp, #8]
  007d0	e3530000	 cmp         r3, #0
  007d4	0a000002	 beq         |$LN10@LEDThread|

; 272  :                     {
; 273  :                         SetBluetoothLED(FALSE);

  007d8	e3a00000	 mov         r0, #0
  007dc	eb000000	 bl          SetBluetoothLED
  007e0	ea000004	 b           |$LN9@LEDThread|
  007e4		 |$LN10@LEDThread|

; 274  :                     }
; 275  :                     else if(WIFIisON)

  007e4	e59d3020	 ldr         r3, [sp, #0x20]
  007e8	e3530000	 cmp         r3, #0
  007ec	0a000001	 beq         |$LN8@LEDThread|

; 276  :                     {
; 277  :                         SetWIFILED(FALSE);

  007f0	e3a00000	 mov         r0, #0
  007f4	eb000000	 bl          SetWIFILED
  007f8		 |$LN8@LEDThread|
  007f8		 |$LN9@LEDThread|
  007f8		 |$LN11@LEDThread|

; 278  :                     }
; 279  :                     break;

  007f8	ea000029	 b           |$LN23@LEDThread|
  007fc		 |$LN7@LEDThread|

; 280  : 
; 281  :                 case 3000:
; 282  :                     TimeOut = 1000;

  007fc	e3a03ffa	 mov         r3, #0xFA, 30
  00800	e58d3024	 str         r3, [sp, #0x24]

; 283  :                     if(LastLED)

  00804	e5dd302c	 ldrb        r3, [sp, #0x2C]
  00808	e3530000	 cmp         r3, #0
  0080c	0a000019	 beq         |$LN6@LEDThread|

; 284  :                     {
; 285  :                         LastLED = (LastLED == BT_LED_ON) ? WIFI_LED_ON : BT_LED_ON;

  00810	e5dd302c	 ldrb        r3, [sp, #0x2C]
  00814	e3530001	 cmp         r3, #1
  00818	1a000002	 bne         |$LN44@LEDThread|
  0081c	e3a03002	 mov         r3, #2
  00820	e58d306c	 str         r3, [sp, #0x6C]
  00824	ea000001	 b           |$LN45@LEDThread|
  00828		 |$LN44@LEDThread|
  00828	e3a03001	 mov         r3, #1
  0082c	e58d306c	 str         r3, [sp, #0x6C]
  00830		 |$LN45@LEDThread|
  00830	e59d306c	 ldr         r3, [sp, #0x6C]
  00834	e20330ff	 and         r3, r3, #0xFF
  00838	e5cd302c	 strb        r3, [sp, #0x2C]

; 286  :                         (LastLED == BT_LED_ON) ? SetBluetoothLED(TRUE) :   SetWIFILED(TRUE);

  0083c	e5dd302c	 ldrb        r3, [sp, #0x2C]
  00840	e3530001	 cmp         r3, #1
  00844	1a000005	 bne         |$LN46@LEDThread|
  00848	e3a00001	 mov         r0, #1
  0084c	eb000000	 bl          SetBluetoothLED
  00850	e58d0070	 str         r0, [sp, #0x70]
  00854	e59d3070	 ldr         r3, [sp, #0x70]
  00858	e58d3074	 str         r3, [sp, #0x74]
  0085c	ea000004	 b           |$LN47@LEDThread|
  00860		 |$LN46@LEDThread|
  00860	e3a00001	 mov         r0, #1
  00864	eb000000	 bl          SetWIFILED
  00868	e58d0078	 str         r0, [sp, #0x78]
  0086c	e59d3078	 ldr         r3, [sp, #0x78]
  00870	e58d3074	 str         r3, [sp, #0x74]
  00874		 |$LN47@LEDThread|

; 287  :                     }
; 288  :                     else if(BTisON)

  00874	ea00000a	 b           |$LN5@LEDThread|
  00878		 |$LN6@LEDThread|
  00878	e59d3008	 ldr         r3, [sp, #8]
  0087c	e3530000	 cmp         r3, #0
  00880	0a000002	 beq         |$LN4@LEDThread|

; 289  :                     {
; 290  :                         SetBluetoothLED(TRUE);

  00884	e3a00001	 mov         r0, #1
  00888	eb000000	 bl          SetBluetoothLED
  0088c	ea000004	 b           |$LN3@LEDThread|
  00890		 |$LN4@LEDThread|

; 291  :                     }
; 292  :                     else if(WIFIisON)

  00890	e59d3020	 ldr         r3, [sp, #0x20]
  00894	e3530000	 cmp         r3, #0
  00898	0a000001	 beq         |$LN2@LEDThread|

; 293  :                     {
; 294  :                         SetWIFILED(TRUE);

  0089c	e3a00001	 mov         r0, #1
  008a0	eb000000	 bl          SetWIFILED
  008a4		 |$LN2@LEDThread|
  008a4		 |$LN3@LEDThread|
  008a4		 |$LN5@LEDThread|
  008a4		 |$LN1@LEDThread|
  008a4		 |$LN23@LEDThread|
  008a4		 |$LN25@LEDThread|

; 295  :                     }
; 296  :                     break;
; 297  : 
; 298  :                 default:
; 299  :                     break;
; 300  :             }
; 301  :         }
; 302  :     }

  008a4	eaffff51	 b           |$LN32@LEDThread|

; 303  : 
; 304  :     return 0;

  008a8	e3a03000	 mov         r3, #0
  008ac	e58d3038	 str         r3, [sp, #0x38]
  008b0		 |$LN38@LEDThread|

; 305  : }

  008b0	e59d0038	 ldr         r0, [sp, #0x38]
  008b4	e28dd07c	 add         sp, sp, #0x7C
  008b8	e89d6000	 ldmia       sp, {sp, lr}
  008bc	e12fff1e	 bx          lr
  008c0		 |$LN51@LEDThread|
  008c0		 |$LN52@LEDThread|
  008c0	a0008032	 DCD         0xa0008032
  008c4		 |$LN53@LEDThread|
  008c4	00000000	 DCD         |WIFI_LED_Event|
  008c8		 |$LN54@LEDThread|
  008c8	00000000	 DCD         |BT_LED_Event|
  008cc		 |$LN55@LEDThread|
  008cc	00000000	 DCD         |??_C@_1CM@ILKMKENC@?$AAW?$AAI?$AAF?$AAI?$AA?1?$AAR?$AAD?$AAY?$AA?1?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@|
  008d0		 |$LN56@LEDThread|
  008d0	00000000	 DCD         |??_C@_1CM@DFICLJOC@?$AAW?$AAI?$AAF?$AAI?$AA_?$AAL?$AAE?$AAD?$AA?1?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@|
  008d4		 |$LN57@LEDThread|
  008d4	00000000	 DCD         |??_C@_1CA@KEHENBMD@?$AAB?$AAT?$AA?1?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@|
  008d8		 |$LN58@LEDThread|
  008d8	00000000	 DCD         |BCRLEDThread|
  008dc		 |$M45479|

			 ENDP  ; |LEDThread|

	END
