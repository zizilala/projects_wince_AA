; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\Z2170\SRC\DRIVERS\sysctrl\LED.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??_C@_1BE@BKKMLFKH@?$AA8?$AA0?$AA6?$AA?5?$AAH?$AAS?$AAM?$AAH?$AAZ?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@HLPDAKHN@?$AA8?$AA0?$AA6?$AA?5?$AAM?$AAH?$AAZ?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@FGCEKGOE@?$AA6?$AA2?$AA4?$AA?5?$AAM?$AAH?$AAZ?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@EBNODIMD@?$AA4?$AA1?$AA6?$AA?5?$AAM?$AAH?$AAZ?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@GGHBGDEP@?$AA2?$AA0?$AA8?$AA?5?$AAM?$AAH?$AAZ?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BC@EKPDPFCF@?$AAR?$AAi?$AAn?$AAg?$AA?5?$AAO?$AAS?$AAC?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|BT_LED_Event| [ DATA ]
	EXPORT	|WIFI_LED_Event| [ DATA ]

  00000			 AREA	 |.bss|, NOINIT
|BT_LED_Event| % 0x4
|WIFI_LED_Event| % 0x4

  00000			 AREA	 |.data|, DATA
|g_szOPDescription| DCD |??_C@_1BC@EKPDPFCF@?$AAR?$AAi?$AAn?$AAg?$AA?5?$AAO?$AAS?$AAC?$AA?$AA@|
	DCD	|??_C@_1BA@GGHBGDEP@?$AA2?$AA0?$AA8?$AA?5?$AAM?$AAH?$AAZ?$AA?$AA@|
	DCD	|??_C@_1BA@EBNODIMD@?$AA4?$AA1?$AA6?$AA?5?$AAM?$AAH?$AAZ?$AA?$AA@|
	DCD	|??_C@_1BA@FGCEKGOE@?$AA6?$AA2?$AA4?$AA?5?$AAM?$AAH?$AAZ?$AA?$AA@|
	DCD	|??_C@_1BA@HLPDAKHN@?$AA8?$AA0?$AA6?$AA?5?$AAM?$AAH?$AAZ?$AA?$AA@|
	DCD	|??_C@_1BE@BKKMLFKH@?$AA8?$AA0?$AA6?$AA?5?$AAH?$AAS?$AAM?$AAH?$AAZ?$AA?$AA@|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@BKKMLFKH@?$AA8?$AA0?$AA6?$AA?5?$AAH?$AAS?$AAM?$AAH?$AAZ?$AA?$AA@| DCB "8"
	DCB	0x0, "0", 0x0, "6", 0x0, " ", 0x0, "H", 0x0, "S", 0x0, "M"
	DCB	0x0, "H", 0x0, "Z", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@HLPDAKHN@?$AA8?$AA0?$AA6?$AA?5?$AAM?$AAH?$AAZ?$AA?$AA@| DCB "8"
	DCB	0x0, "0", 0x0, "6", 0x0, " ", 0x0, "M", 0x0, "H", 0x0, "Z"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@FGCEKGOE@?$AA6?$AA2?$AA4?$AA?5?$AAM?$AAH?$AAZ?$AA?$AA@| DCB "6"
	DCB	0x0, "2", 0x0, "4", 0x0, " ", 0x0, "M", 0x0, "H", 0x0, "Z"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@EBNODIMD@?$AA4?$AA1?$AA6?$AA?5?$AAM?$AAH?$AAZ?$AA?$AA@| DCB "4"
	DCB	0x0, "1", 0x0, "6", 0x0, " ", 0x0, "M", 0x0, "H", 0x0, "Z"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@GGHBGDEP@?$AA2?$AA0?$AA8?$AA?5?$AAM?$AAH?$AAZ?$AA?$AA@| DCB "2"
	DCB	0x0, "0", 0x0, "8", 0x0, " ", 0x0, "M", 0x0, "H", 0x0, "Z"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BC@EKPDPFCF@?$AAR?$AAi?$AAn?$AAg?$AA?5?$AAO?$AAS?$AAC?$AA?$AA@| DCB "R"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "O", 0x0, "S"
	DCB	0x0, "C", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|Init_LED|
	IMPORT	|PXA_GPIOSetDirection|
	IMPORT	|PXA_MFPActivatePullUpDown|
	IMPORT	|PXA_MFPConfigurePullUpDown|
	IMPORT	|PXA_GPIOSetLevel|
	IMPORT	|PXA_MFPConfigureLpmOutputLevelList|
	IMPORT	|PXA_MFPSetAfDsList|
	IMPORT	|g_pMFPBase|
	IMPORT	|g_pGPIORegisters|
	IMPORT	|MapResources|
; File c:\wince600\platform\z2170\src\drivers\sysctrl\led.c

  00000			 AREA	 |.pdata|, PDATA
|$T45466| DCD	|$LN7@Init_LED|
	DCD	0x40006602
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |Init_LED| PROC

; 24   : {

  00000		 |$LN7@Init_LED|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd044	 sub         sp, sp, #0x44
  00008		 |$M45463|
  00008	e3a01b01	 mov         r1, #1, 22

; 25   :     UINT32 led_mfp_list[] =
; 26   :     {
; 27   :         PXA_MFP_PIN_GPIO47_OFFSET, // BT LED

  0000c	e381305c	 orr         r3, r1, #0x5C

; 28   :         PXA_MFP_PIN_GPIO53_OFFSET, // WIFI LED
; 29   :         PXA_MFP_PIN_GPIO82_OFFSET, // BAROCDE LED
; 30   :         PXA_MFP_PIN_GPIO20_OFFSET, // vibrator
; 31   :         PXA_MFP_PIN_EOLIST_MARKER
; 32   :     };
; 33   : 
; 34   :     PXA_MFP_ALT_FN_T led_af_list[] =
; 35   :     {
; 36   :         PXA_MFP_ALT_FN_0,
; 37   :         PXA_MFP_ALT_FN_0,
; 38   :         PXA_MFP_ALT_FN_0,
; 39   :         PXA_MFP_ALT_FN_0
; 40   :     };
; 41   : 
; 42   :     PXA_MFP_DRIVE_STRENGTH_T led_ds_list[] =
; 43   :     {
; 44   :         PXA_MFP_DS_03X,
; 45   :         PXA_MFP_DS_03X,
; 46   :         PXA_MFP_DS_03X,
; 47   :         PXA_MFP_DS_03X
; 48   :     };
; 49   : 
; 50   :     PXA_MFP_LPM_OUTPUT_T led_lpm_list[] =
; 51   :     {
; 52   :         PXA_MFP_LPMO_DRIVE_HIGH,
; 53   :         PXA_MFP_LPMO_DRIVE_HIGH,
; 54   :         PXA_MFP_LPMO_DRIVE_HIGH,
; 55   :         //PXA_MFP_LPMO_DRIVE_LOW
; 56   :         PXA_MFP_LPMO_DRIVE_HIGH
; 57   :     };

  00010	e58d3030	 str         r3, [sp, #0x30]
  00014	e3a03c41	 mov         r3, #0x41, 24
  00018	e58d3020	 str         r3, [sp, #0x20]
  0001c	e3a03c41	 mov         r3, #0x41, 24
  00020	e58d3024	 str         r3, [sp, #0x24]
  00024	e3a03c41	 mov         r3, #0x41, 24
  00028	e58d3028	 str         r3, [sp, #0x28]
  0002c	e3812074	 orr         r2, r1, #0x74
  00030	e3a03c41	 mov         r3, #0x41, 24
  00034	e38110e8	 orr         r1, r1, #0xE8
  00038	e3e0e000	 mvn         lr, #0
  0003c	e3a04000	 mov         r4, #0
  00040	e3a05000	 mov         r5, #0
  00044	e3a06000	 mov         r6, #0
  00048	e3a07000	 mov         r7, #0
  0004c	e3a08002	 mov         r8, #2
  00050	e3a09002	 mov         r9, #2
  00054	e3a0a002	 mov         r10, #2
  00058	e3a0b002	 mov         r11, #2
  0005c	e3a00d0b	 mov         r0, #0xB, 26
  00060	e58d302c	 str         r3, [sp, #0x2C]
  00064	e58d2034	 str         r2, [sp, #0x34]
  00068	e58d1038	 str         r1, [sp, #0x38]
  0006c	e58d003c	 str         r0, [sp, #0x3C]
  00070	e58de040	 str         lr, [sp, #0x40]
  00074	e58d4010	 str         r4, [sp, #0x10]
  00078	e58d5014	 str         r5, [sp, #0x14]
  0007c	e58d6018	 str         r6, [sp, #0x18]
  00080	e58d701c	 str         r7, [sp, #0x1C]
  00084	e58d8000	 str         r8, [sp]
  00088	e58d9004	 str         r9, [sp, #4]
  0008c	e58da008	 str         r10, [sp, #8]
  00090	e58db00c	 str         r11, [sp, #0xC]

; 58   : 
; 59   :     MapResources();

  00094	eb000000	 bl          MapResources

; 60   : 
; 61   :     if(!g_pGPIORegisters || !g_pMFPBase)

  00098	e59f50f4	 ldr         r5, [pc, #0xF4]
  0009c	e5953000	 ldr         r3, [r5]
  000a0	e3530000	 cmp         r3, #0
  000a4	0a000035	 beq         |$LN1@Init_LED|
  000a8	e59f40e0	 ldr         r4, [pc, #0xE0]
  000ac	e5940000	 ldr         r0, [r4]
  000b0	e3500000	 cmp         r0, #0
  000b4	0a000031	 beq         |$LN1@Init_LED|

; 64   :     }
; 65   : 
; 66   :     PXA_MFPSetAfDsList(g_pMFPBase, led_mfp_list, led_af_list, led_ds_list);

  000b8	e28d3000	 add         r3, sp, #0
  000bc	e28d2010	 add         r2, sp, #0x10
  000c0	e28d1030	 add         r1, sp, #0x30
  000c4	eb000000	 bl          PXA_MFPSetAfDsList

; 67   : 
; 68   :     PXA_MFPConfigureLpmOutputLevelList(g_pMFPBase, led_mfp_list, led_lpm_list);

  000c8	e5940000	 ldr         r0, [r4]
  000cc	e28d2020	 add         r2, sp, #0x20
  000d0	e28d1030	 add         r1, sp, #0x30
  000d4	eb000000	 bl          PXA_MFPConfigureLpmOutputLevelList

; 69   : 
; 70   :     PXA_GPIOSetLevel((PXA_GPIOREG_T *)g_pGPIORegisters, PXA_GPIO_47, PXA_HI);

  000d8	e5950000	 ldr         r0, [r5]
  000dc	e3a02001	 mov         r2, #1
  000e0	e3a0102f	 mov         r1, #0x2F
  000e4	eb000000	 bl          PXA_GPIOSetLevel

; 71   : 
; 72   :     PXA_GPIOSetLevel((PXA_GPIOREG_T *)g_pGPIORegisters, PXA_GPIO_53, PXA_HI);

  000e8	e5950000	 ldr         r0, [r5]
  000ec	e3a02001	 mov         r2, #1
  000f0	e3a01035	 mov         r1, #0x35
  000f4	eb000000	 bl          PXA_GPIOSetLevel

; 73   : 
; 74   :     PXA_GPIOSetLevel((PXA_GPIOREG_T *)g_pGPIORegisters, PXA_GPIO_82, PXA_HI);

  000f8	e5950000	 ldr         r0, [r5]
  000fc	e3a02001	 mov         r2, #1
  00100	e3a01052	 mov         r1, #0x52
  00104	eb000000	 bl          PXA_GPIOSetLevel

; 75   :     
; 76   : 
; 77   :     PXA_MFPConfigurePullUpDown(g_pMFPBase, PXA_MFP_PIN_GPIO20_OFFSET, PXA_MFP_PULL_UP);

  00108	e5940000	 ldr         r0, [r4]
  0010c	e3a02002	 mov         r2, #2
  00110	e3a01d0b	 mov         r1, #0xB, 26
  00114	eb000000	 bl          PXA_MFPConfigurePullUpDown

; 78   :     PXA_MFPActivatePullUpDown(g_pMFPBase, PXA_MFP_PIN_GPIO20_OFFSET, PXA_ON);

  00118	e5940000	 ldr         r0, [r4]
  0011c	e3a02001	 mov         r2, #1
  00120	e3a01d0b	 mov         r1, #0xB, 26
  00124	eb000000	 bl          PXA_MFPActivatePullUpDown

; 79   :     PXA_GPIOSetDirection((PXA_GPIOREG_T *)g_pGPIORegisters, PXA_GPIO_20, PXA_GPIO_DIRECTION_OUT);

  00128	e5950000	 ldr         r0, [r5]
  0012c	e3a02001	 mov         r2, #1
  00130	e3a01014	 mov         r1, #0x14
  00134	eb000000	 bl          PXA_GPIOSetDirection

; 80   :     PXA_GPIOSetLevel((PXA_GPIOREG_T *)g_pGPIORegisters, PXA_GPIO_20, PXA_HI);

  00138	e5950000	 ldr         r0, [r5]
  0013c	e3a02001	 mov         r2, #1
  00140	e3a01014	 mov         r1, #0x14
  00144	eb000000	 bl          PXA_GPIOSetLevel

; 81   : 
; 82   :                          
; 83   :     PXA_GPIOSetDirection((PXA_GPIOREG_T *)g_pGPIORegisters,
; 84   :                          PXA_GPIO_47,
; 85   :                          PXA_GPIO_DIRECTION_OUT);

  00148	e5950000	 ldr         r0, [r5]
  0014c	e3a02001	 mov         r2, #1
  00150	e3a0102f	 mov         r1, #0x2F
  00154	eb000000	 bl          PXA_GPIOSetDirection

; 86   : 
; 87   :     PXA_GPIOSetDirection((PXA_GPIOREG_T *)g_pGPIORegisters,
; 88   :                          PXA_GPIO_53,
; 89   :                          PXA_GPIO_DIRECTION_OUT);

  00158	e5950000	 ldr         r0, [r5]
  0015c	e3a02001	 mov         r2, #1
  00160	e3a01035	 mov         r1, #0x35
  00164	eb000000	 bl          PXA_GPIOSetDirection

; 90   : 
; 91   :     PXA_GPIOSetDirection((PXA_GPIOREG_T *)g_pGPIORegisters,
; 92   :                          PXA_GPIO_82,
; 93   :                          PXA_GPIO_DIRECTION_OUT);

  00168	e5950000	 ldr         r0, [r5]
  0016c	e3a02001	 mov         r2, #1
  00170	e3a01052	 mov         r1, #0x52
  00174	eb000000	 bl          PXA_GPIOSetDirection

; 94   : 
; 95   : 
; 96   : 
; 97   : 
; 98   :     return TRUE;

  00178	e3a00001	 mov         r0, #1
  0017c	ea000000	 b           |$LN3@Init_LED|
  00180		 |$LN1@Init_LED|

; 62   :     {
; 63   :         return FALSE;

  00180	e3a00000	 mov         r0, #0
  00184		 |$LN3@Init_LED|

; 99   : }

  00184	e28dd044	 add         sp, sp, #0x44
  00188	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  0018c	e12fff1e	 bx          lr
  00190		 |$LN8@Init_LED|
  00190		 |$LN9@Init_LED|
  00190	00000000	 DCD         |g_pMFPBase|
  00194		 |$LN10@Init_LED|
  00194	00000000	 DCD         |g_pGPIORegisters|
  00198		 |$M45464|

			 ENDP  ; |Init_LED|

	EXPORT	|SetBluetoothLED|

  00000			 AREA	 |.pdata|, PDATA
|$T45481| DCD	|$LN8@SetBluetoo|
	DCD	0x40001001
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetBluetoothLED| PROC

; 102  : {

  00000		 |$LN8@SetBluetoo|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M45478|

; 103  :     if(!g_pGPIORegisters)

  00004	e59f3030	 ldr         r3, [pc, #0x30]
  00008	e5933000	 ldr         r3, [r3]
  0000c	e3530000	 cmp         r3, #0

; 104  :     {
; 105  :         return FALSE;

  00010	03a00000	 moveq       r0, #0

; 109  : }

  00014	049de004	 ldreq       lr, [sp], #4
  00018	012fff1e	 bxeq        lr

; 106  :     }
; 107  : 
; 108  :     return PXA_GPIOSetLevel((PXA_GPIOREG_T *)g_pGPIORegisters, PXA_GPIO_47, dwONState ? PXA_LO : PXA_HI);

  0001c	e3500000	 cmp         r0, #0
  00020	13a02000	 movne       r2, #0
  00024	03a02001	 moveq       r2, #1
  00028	e3a0102f	 mov         r1, #0x2F
  0002c	e1a00003	 mov         r0, r3
  00030	eb000000	 bl          PXA_GPIOSetLevel

; 109  : }

  00034	e49de004	 ldr         lr, [sp], #4
  00038	e12fff1e	 bx          lr
  0003c		 |$LN9@SetBluetoo|
  0003c		 |$LN10@SetBluetoo|
  0003c	00000000	 DCD         |g_pGPIORegisters|
  00040		 |$M45479|

			 ENDP  ; |SetBluetoothLED|

	EXPORT	|SetWIFILED|

  00000			 AREA	 |.pdata|, PDATA
|$T45495| DCD	|$LN8@SetWIFILED|
	DCD	0x40001001
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetWIFILED| PROC

; 112  : {

  00000		 |$LN8@SetWIFILED|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M45492|

; 113  :     if(!g_pGPIORegisters)

  00004	e59f3030	 ldr         r3, [pc, #0x30]
  00008	e5933000	 ldr         r3, [r3]
  0000c	e3530000	 cmp         r3, #0

; 114  :     {
; 115  :         return FALSE;

  00010	03a00000	 moveq       r0, #0

; 119  : }

  00014	049de004	 ldreq       lr, [sp], #4
  00018	012fff1e	 bxeq        lr

; 116  :     }
; 117  : 
; 118  :     return PXA_GPIOSetLevel((PXA_GPIOREG_T *)g_pGPIORegisters, PXA_GPIO_53, dwONState ? PXA_LO : PXA_HI);

  0001c	e3500000	 cmp         r0, #0
  00020	13a02000	 movne       r2, #0
  00024	03a02001	 moveq       r2, #1
  00028	e3a01035	 mov         r1, #0x35
  0002c	e1a00003	 mov         r0, r3
  00030	eb000000	 bl          PXA_GPIOSetLevel

; 119  : }

  00034	e49de004	 ldr         lr, [sp], #4
  00038	e12fff1e	 bx          lr
  0003c		 |$LN9@SetWIFILED|
  0003c		 |$LN10@SetWIFILED|
  0003c	00000000	 DCD         |g_pGPIORegisters|
  00040		 |$M45493|

			 ENDP  ; |SetWIFILED|

	EXPORT	|SetBarcodeLED|

  00000			 AREA	 |.pdata|, PDATA
|$T45511| DCD	|$LN11@SetBarcode|
	DCD	0x40001c01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetBarcodeLED| PROC

; 122  : {

  00000		 |$LN11@SetBarcode|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M45508|
  00004	e1a04000	 mov         r4, r0

; 123  :     if(!g_pGPIORegisters)

  00008	e59f505c	 ldr         r5, [pc, #0x5C]
  0000c	e5950000	 ldr         r0, [r5]
  00010	e3500000	 cmp         r0, #0

; 124  :     {
; 125  :         return FALSE;

  00014	03a00000	 moveq       r0, #0

; 135  : }

  00018	08bd4030	 ldmeqia     sp!, {r4, r5, lr}
  0001c	012fff1e	 bxeq        lr

; 126  :     }
; 127  : 
; 128  :     // LED
; 129  :     PXA_GPIOSetLevel((PXA_GPIOREG_T *)g_pGPIORegisters, PXA_GPIO_82, dwONState ? PXA_LO : PXA_HI);

  00020	e3540000	 cmp         r4, #0
  00024	13a02000	 movne       r2, #0
  00028	03a02001	 moveq       r2, #1
  0002c	e3a01052	 mov         r1, #0x52
  00030	eb000000	 bl          PXA_GPIOSetLevel

; 130  :     // Vibrator
; 131  :     if( *(volatile BYTE *)DEVICE_POWER_FLAG_ADDR & VIBRATORI_POWER_MASK )

  00034	e59f302c	 ldr         r3, [pc, #0x2C]
  00038	e5d33000	 ldrb        r3, [r3]
  0003c	e3130020	 tst         r3, #0x20
  00040	0a000005	 beq         |$LN1@SetBarcode|

; 132  :     	PXA_GPIOSetLevel((PXA_GPIOREG_T *)g_pGPIORegisters, PXA_GPIO_20, dwONState ? PXA_LO : PXA_HI);

  00044	e5950000	 ldr         r0, [r5]
  00048	e3540000	 cmp         r4, #0
  0004c	13a02000	 movne       r2, #0
  00050	03a02001	 moveq       r2, #1
  00054	e3a01014	 mov         r1, #0x14
  00058	eb000000	 bl          PXA_GPIOSetLevel
  0005c		 |$LN1@SetBarcode|

; 133  : 
; 134  :     return TRUE;

  0005c	e3a00001	 mov         r0, #1

; 135  : }

  00060	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00064	e12fff1e	 bx          lr
  00068		 |$LN12@SetBarcode|
  00068		 |$LN13@SetBarcode|
  00068	a0008032	 DCD         0xa0008032
  0006c		 |$LN14@SetBarcode|
  0006c	00000000	 DCD         |g_pGPIORegisters|
  00070		 |$M45509|

			 ENDP  ; |SetBarcodeLED|

	EXPORT	|BCRLEDThread|
	EXPORT	|??_C@_1CK@MAPPIKAG@?$AAB?$AAC?$AAR?$AA_?$AAL?$AAE?$AAD?$AA?1?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|WaitForSingleObject|
	IMPORT	|CreateEventW|

  00000			 AREA	 |.pdata|, PDATA
|$T45526| DCD	|$LN9@BCRLEDThre|
	DCD	0x40001b01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@MAPPIKAG@?$AAB?$AAC?$AAR?$AA_?$AAL?$AAE?$AAD?$AA?1?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@| DCB "B"
	DCB	0x0, "C", 0x0, "R", 0x0, "_", 0x0, "L", 0x0, "E", 0x0, "D"
	DCB	0x0, "/", 0x0, "N", 0x0, "o", 0x0, "t", 0x0, "i", 0x0, "f"
	DCB	0x0, "i", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |BCRLEDThread| PROC

; 138  : {

  00000		 |$LN9@BCRLEDThre|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M45523|

; 139  : 	HANDLE BCR_LED_Event = CreateEvent(NULL, FALSE, FALSE, BCR_LED_NOTIFY);

  00004	e59f305c	 ldr         r3, [pc, #0x5C]
  00008	e3a02000	 mov         r2, #0
  0000c	e3a01000	 mov         r1, #0
  00010	e3a00000	 mov         r0, #0
  00014	eb000000	 bl          CreateEventW
  00018	e1b04000	 movs        r4, r0

; 140  : 
; 141  :     while(BCR_LED_Event)

  0001c	0a00000e	 beq         |$LN1@BCRLEDThre|
  00020		 |$LL2@BCRLEDThre|

; 142  : 	{
; 143  : 		WaitForSingleObject(BCR_LED_Event, INFINITE);

  00020	e3e01000	 mvn         r1, #0
  00024	e1a00004	 mov         r0, r4
  00028	eb000000	 bl          WaitForSingleObject

; 144  : 
; 145  :         SetBluetoothLED(FALSE);

  0002c	e3a00000	 mov         r0, #0
  00030	eb000000	 bl          SetBluetoothLED

; 146  :         SetWIFILED(FALSE);

  00034	e3a00000	 mov         r0, #0
  00038	eb000000	 bl          SetWIFILED

; 147  : 
; 148  : 		SetBarcodeLED(TRUE);

  0003c	e3a00001	 mov         r0, #1
  00040	eb000000	 bl          SetBarcodeLED

; 149  :         WaitForSingleObject(BCR_LED_Event, 100);

  00044	e3a01064	 mov         r1, #0x64
  00048	e1a00004	 mov         r0, r4
  0004c	eb000000	 bl          WaitForSingleObject

; 150  :         SetBarcodeLED(FALSE);

  00050	e3a00000	 mov         r0, #0
  00054	eb000000	 bl          SetBarcodeLED
  00058	eafffff0	 b           |$LL2@BCRLEDThre|
  0005c		 |$LN1@BCRLEDThre|

; 151  : 	}
; 152  : 
; 153  :     return 0;

  0005c	e3a00000	 mov         r0, #0

; 154  : }

  00060	e8bd4010	 ldmia       sp!, {r4, lr}
  00064	e12fff1e	 bx          lr
  00068		 |$LN10@BCRLEDThre|
  00068		 |$LN11@BCRLEDThre|
  00068	00000000	 DCD         |??_C@_1CK@MAPPIKAG@?$AAB?$AAC?$AAR?$AA_?$AAL?$AAE?$AAD?$AA?1?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@|
  0006c		 |$M45524|

			 ENDP  ; |BCRLEDThread|

	EXPORT	|LEDThread|
	EXPORT	|??_C@_1CA@KEHENBMD@?$AAB?$AAT?$AA?1?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@DFICLJOC@?$AAW?$AAI?$AAF?$AAI?$AA_?$AAL?$AAE?$AAD?$AA?1?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@ILKMKENC@?$AAW?$AAI?$AAF?$AAI?$AA?1?$AAR?$AAD?$AAY?$AA?1?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|WaitForMultipleObjects|
	IMPORT	|SysGetWLANPower|
	IMPORT	|CloseHandle|
	IMPORT	|CreateThread|
	IMPORT	|Sleep|
	IMPORT	|WaitForAPIReady|

  00000			 AREA	 |.pdata|, PDATA
|$T45563| DCD	|$LN61@LEDThread|
	DCD	0x4000ab02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@KEHENBMD@?$AAB?$AAT?$AA?1?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@| DCB "B"
	DCB	0x0, "T", 0x0, "/", 0x0, "N", 0x0, "o", 0x0, "t", 0x0, "i"
	DCB	0x0, "f", 0x0, "i", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@DFICLJOC@?$AAW?$AAI?$AAF?$AAI?$AA_?$AAL?$AAE?$AAD?$AA?1?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@| DCB "W"
	DCB	0x0, "I", 0x0, "F", 0x0, "I", 0x0, "_", 0x0, "L", 0x0, "E"
	DCB	0x0, "D", 0x0, "/", 0x0, "N", 0x0, "o", 0x0, "t", 0x0, "i"
	DCB	0x0, "f", 0x0, "i", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@ILKMKENC@?$AAW?$AAI?$AAF?$AAI?$AA?1?$AAR?$AAD?$AAY?$AA?1?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@| DCB "W"
	DCB	0x0, "I", 0x0, "F", 0x0, "I", 0x0, "/", 0x0, "R", 0x0, "D"
	DCB	0x0, "Y", 0x0, "/", 0x0, "N", 0x0, "o", 0x0, "t", 0x0, "i"
	DCB	0x0, "f", 0x0, "i", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |LEDThread| PROC

; 157  : {

  00000		 |$LN61@LEDThread|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004	e24dd014	 sub         sp, sp, #0x14
  00008		 |$M45560|

; 158  : 	DWORD TimeOut = INFINITE;
; 159  :     DWORD WaitState;
; 160  :     BOOL BTisON, WIFIisON;
; 161  :     BYTE LastLED;
; 162  :     DWORD dwTimeCount = 0;
; 163  :     HANDLE  WaitEvents[2];
; 164  : 	HANDLE hThread,WIFI_RDY_Event=NULL;
; 165  : 
; 166  :     SetBluetoothLED(FALSE);

  00008	e3a00000	 mov         r0, #0
  0000c	e3e04000	 mvn         r4, #0
  00010	eb000000	 bl          SetBluetoothLED

; 167  : 
; 168  :     SetWIFILED(FALSE);

  00014	e3a00000	 mov         r0, #0
  00018	eb000000	 bl          SetWIFILED

; 169  : 
; 170  :     /*while(!IsAPIReady(SH_SHELL))
; 171  :     {
; 172  :         Sleep(500);
; 173  :     }*/
; 174  :     WaitForAPIReady(SH_SHELL, INFINITE);

  0001c	e3e01000	 mvn         r1, #0
  00020	e3a00055	 mov         r0, #0x55
  00024	eb000000	 bl          WaitForAPIReady

; 175  : 	Sleep(500);			

  00028	e3a00f7d	 mov         r0, #0x7D, 30
  0002c	eb000000	 bl          Sleep

; 176  : 
; 177  :     hThread = CreateThread(NULL, 0, BCRLEDThread, NULL, 0, NULL);

  00030	e59f2270	 ldr         r2, [pc, #0x270]
  00034	e3a0e000	 mov         lr, #0
  00038	e3a03000	 mov         r3, #0
  0003c	e3a01000	 mov         r1, #0
  00040	e3a00000	 mov         r0, #0
  00044	e58de004	 str         lr, [sp, #4]
  00048	e58de000	 str         lr, [sp]
  0004c	eb000000	 bl          CreateThread

; 178  :     CloseHandle(hThread);

  00050	eb000000	 bl          CloseHandle

; 179  : 
; 180  : 
; 181  :     BT_LED_Event = CreateEvent(NULL, FALSE, FALSE, BT_LED_NOTIFY);

  00054	e59f3248	 ldr         r3, [pc, #0x248]
  00058	e3a02000	 mov         r2, #0
  0005c	e3a01000	 mov         r1, #0
  00060	e3a00000	 mov         r0, #0
  00064	eb000000	 bl          CreateEventW
  00068	e59f5230	 ldr         r5, [pc, #0x230]

; 182  :     WIFI_LED_Event = CreateEvent(NULL, FALSE, FALSE, WIFI_LED_NOTIFY);

  0006c	e59f3228	 ldr         r3, [pc, #0x228]
  00070	e3a02000	 mov         r2, #0
  00074	e5850000	 str         r0, [r5]
  00078	e3a00000	 mov         r0, #0
  0007c	e3a01000	 mov         r1, #0
  00080	eb000000	 bl          CreateEventW

; 183  : 	WIFI_RDY_Event=CreateEvent(NULL, FALSE, FALSE, WIFI_RDY_NOTIFY); //20111026-luk

  00084	e59f320c	 ldr         r3, [pc, #0x20C]
  00088	e1a02000	 mov         r2, r0
  0008c	e5852004	 str         r2, [r5, #4]
  00090	e3a02000	 mov         r2, #0
  00094	e3a00000	 mov         r0, #0
  00098	e3a01000	 mov         r1, #0
  0009c	eb000000	 bl          CreateEventW

; 184  :    	  
; 185  : 	if(BT_LED_Event==NULL || WIFI_LED_Event==NULL||WIFI_RDY_Event==NULL)

  000a0	e5952000	 ldr         r2, [r5]
  000a4	e1a07000	 mov         r7, r0
  000a8	e3520000	 cmp         r2, #0
  000ac	0a000074	 beq         |$LN36@LEDThread|
  000b0	e5953004	 ldr         r3, [r5, #4]
  000b4	e3530000	 cmp         r3, #0
  000b8	0a000071	 beq         |$LN36@LEDThread|
  000bc	e3570000	 cmp         r7, #0
  000c0	0a00006f	 beq         |$LN36@LEDThread|

; 187  : 
; 188  :     WaitEvents[0]  = BT_LED_Event;
; 189  :     WaitEvents[1]  = WIFI_LED_Event;
; 190  : 
; 191  :     LastLED = 0;
; 192  :     BTisON = FALSE;
; 193  :     WIFIisON = FALSE;
; 194  : 
; 195  : 	WaitForSingleObject(WIFI_RDY_Event, 3000);	//20111026-luk

  000c4	e3a01c0b	 mov         r1, #0xB, 24
  000c8	e3a00000	 mov         r0, #0
  000cc	e38180b8	 orr         r8, r1, #0xB8
  000d0	e58d0008	 str         r0, [sp, #8]
  000d4	e1a01008	 mov         r1, r8
  000d8	e1a00007	 mov         r0, r7
  000dc	e58d200c	 str         r2, [sp, #0xC]
  000e0	e58d3010	 str         r3, [sp, #0x10]
  000e4	e3a05000	 mov         r5, #0
  000e8	e3a06000	 mov         r6, #0
  000ec	eb000000	 bl          WaitForSingleObject

; 196  : 	CloseHandle(WIFI_RDY_Event);

  000f0	e1a00007	 mov         r0, r7
  000f4	eb000000	 bl          CloseHandle

; 197  : 	
; 198  :     if(SysGetWLANPower(&WIFIisON))

  000f8	e28d0008	 add         r0, sp, #8
  000fc	eb000000	 bl          SysGetWLANPower
  00100	e3500000	 cmp         r0, #0

; 199  :     {
; 200  :         if(WIFIisON)

  00104	159d3008	 ldrne       r3, [sp, #8]

; 201  :         {
; 202  :             TimeOut = 500;
; 203  :         }
; 204  :     }
; 205  : 
; 206  :     if((*(volatile BYTE *)DEVICE_POWER_FLAG_ADDR & BT_POWER_MASK))

  00108	e59f7184	 ldr         r7, [pc, #0x184]
  0010c	13530000	 cmpne       r3, #0
  00110	e5d73000	 ldrb        r3, [r7]
  00114	13a04f7d	 movne       r4, #0x7D, 30
  00118	e3130002	 tst         r3, #2

; 207  :     {
; 208  :         TimeOut = 500;
; 209  :         BTisON = TRUE;

  0011c	e3a03c01	 mov         r3, #1, 24
  00120	e3839002	 orr         r9, r3, #2
  00124	13a04f7d	 movne       r4, #0x7D, 30
  00128	13a06001	 movne       r6, #1
  0012c		 |$LL32@LEDThread|

; 210  :     }
; 211  : 
; 212  :     while(1)
; 213  :     {
; 214  :         WaitState = WaitForMultipleObjects(2, &WaitEvents[0], FALSE, TimeOut);

  0012c	e1a03004	 mov         r3, r4
  00130	e3a02000	 mov         r2, #0
  00134	e28d100c	 add         r1, sp, #0xC
  00138	e3a00002	 mov         r0, #2
  0013c	eb000000	 bl          WaitForMultipleObjects
  00140	e3500000	 cmp         r0, #0

; 215  : 
; 216  : 		switch(WaitState)

  00144	0a000005	 beq         |$LN28@LEDThread|
  00148	e3500001	 cmp         r0, #1
  0014c	1a000008	 bne         |$LN29@LEDThread|

; 221  :                 break;
; 222  : 
; 223  :             case(WAIT_OBJECT_0+1):
; 224  :                 SysGetWLANPower(&WIFIisON);

  00150	e28d0008	 add         r0, sp, #8
  00154	eb000000	 bl          SysGetWLANPower

; 225  :                 TimeOut = 500;

  00158	e3a04f7d	 mov         r4, #0x7D, 30

; 226  :                 break;

  0015c	eafffff2	 b           |$LL32@LEDThread|
  00160		 |$LN28@LEDThread|

; 217  :         {
; 218  :             case WAIT_OBJECT_0:
; 219  :                 BTisON = (*(volatile BYTE *)DEVICE_POWER_FLAG_ADDR & BT_POWER_MASK) ? TRUE : FALSE;

  00160	e5d73000	 ldrb        r3, [r7]

; 220  :                 TimeOut = 500;

  00164	e3a04f7d	 mov         r4, #0x7D, 30
  00168	e3130002	 tst         r3, #2
  0016c	13a06001	 movne       r6, #1
  00170	03a06000	 moveq       r6, #0
  00174		 |$LN29@LEDThread|

; 227  :                 
; 228  :             default:
; 229  :                 break;
; 230  :         }
; 231  : 
; 232  :         if(WaitState == WAIT_TIMEOUT)

  00174	e1500009	 cmp         r0, r9
  00178	1affffeb	 bne         |$LL32@LEDThread|

; 233  :         {
; 234  :             switch(TimeOut)

  0017c	e3540f7d	 cmp         r4, #0x7D, 30
  00180	0a000026	 beq         |$LN22@LEDThread|
  00184	e3540ffa	 cmp         r4, #0xFA, 30
  00188	0a000013	 beq         |$LN13@LEDThread|
  0018c	e1540008	 cmp         r4, r8
  00190	1affffe5	 bne         |$LL32@LEDThread|

; 278  :                     }
; 279  :                     break;
; 280  : 
; 281  :                 case 3000:
; 282  :                     TimeOut = 1000;

  00194	e3a04ffa	 mov         r4, #0xFA, 30

; 283  :                     if(LastLED)

  00198	e1b03005	 movs        r3, r5
  0019c	0a000008	 beq         |$LN6@LEDThread|

; 284  :                     {
; 285  :                         LastLED = (LastLED == BT_LED_ON) ? WIFI_LED_ON : BT_LED_ON;

  001a0	e3530001	 cmp         r3, #1
  001a4	03a03002	 moveq       r3, #2
  001a8	13a03001	 movne       r3, #1
  001ac	e20350ff	 and         r5, r3, #0xFF

; 286  :                         (LastLED == BT_LED_ON) ? SetBluetoothLED(TRUE) :   SetWIFILED(TRUE);

  001b0	e3550001	 cmp         r5, #1
  001b4	e3a00001	 mov         r0, #1
  001b8		 |$LN58@LEDThread|
  001b8	0a000029	 beq         |$LN55@LEDThread|

; 254  :                         {
; 255  :                             LastLED = 0;
; 256  :                             SetWIFILED(TRUE);

  001bc	eb000000	 bl          SetWIFILED

; 297  : 
; 298  :                 default:
; 299  :                     break;
; 300  :             }
; 301  :         }
; 302  :     }

  001c0	eaffffd9	 b           |$LL32@LEDThread|
  001c4		 |$LN6@LEDThread|

; 287  :                     }
; 288  :                     else if(BTisON)

  001c4	e3560000	 cmp         r6, #0

; 289  :                     {
; 290  :                         SetBluetoothLED(TRUE);

  001c8	1a000024	 bne         |$LN56@LEDThread|

; 291  :                     }
; 292  :                     else if(WIFIisON)

  001cc	e59d3008	 ldr         r3, [sp, #8]
  001d0	e3530000	 cmp         r3, #0
  001d4	0affffd4	 beq         |$LL32@LEDThread|

; 293  :                     {
; 294  :                         SetWIFILED(TRUE);
; 295  :                     }
; 296  :                     break;

  001d8	ea000026	 b           |$LN57@LEDThread|
  001dc		 |$LN13@LEDThread|

; 262  :                     }
; 263  :                     break;
; 264  : 
; 265  :                 case 1000:
; 266  :                     TimeOut = 3000;

  001dc	e1a04008	 mov         r4, r8

; 267  :                     if(LastLED)

  001e0	e1b03005	 movs        r3, r5
  001e4	0a000002	 beq         |$LN12@LEDThread|

; 268  :                     {
; 269  :                         (LastLED == BT_LED_ON) ? SetBluetoothLED(FALSE) :   SetWIFILED(FALSE);

  001e8	e3530001	 cmp         r3, #1
  001ec	e3a00000	 mov         r0, #0

; 270  :                     }
; 271  :                     else if(BTisON)

  001f0	eafffff0	 b           |$LN58@LEDThread|
  001f4		 |$LN12@LEDThread|
  001f4	e3560000	 cmp         r6, #0
  001f8	0a000002	 beq         |$LN10@LEDThread|

; 272  :                     {
; 273  :                         SetBluetoothLED(FALSE);

  001fc	e3a00000	 mov         r0, #0
  00200	eb000000	 bl          SetBluetoothLED
  00204	eaffffc8	 b           |$LL32@LEDThread|
  00208		 |$LN10@LEDThread|

; 274  :                     }
; 275  :                     else if(WIFIisON)

  00208	e59d3008	 ldr         r3, [sp, #8]
  0020c	e3530000	 cmp         r3, #0
  00210	0affffc5	 beq         |$LL32@LEDThread|

; 276  :                     {
; 277  :                         SetWIFILED(FALSE);

  00214	e3a00000	 mov         r0, #0
  00218	eb000000	 bl          SetWIFILED

; 297  : 
; 298  :                 default:
; 299  :                     break;
; 300  :             }
; 301  :         }
; 302  :     }

  0021c	eaffffc2	 b           |$LL32@LEDThread|
  00220		 |$LN22@LEDThread|

; 235  :             {
; 236  :                 case 500:
; 237  :                     SetBluetoothLED(FALSE);

  00220	e3a00000	 mov         r0, #0
  00224	eb000000	 bl          SetBluetoothLED

; 238  :                     SetWIFILED(FALSE);

  00228	e3a00000	 mov         r0, #0
  0022c	eb000000	 bl          SetWIFILED

; 239  :                     LastLED = 0;
; 240  :                     if(BTisON || WIFIisON)

  00230	e59d3008	 ldr         r3, [sp, #8]
  00234	e3560000	 cmp         r6, #0
  00238	e3a05000	 mov         r5, #0
  0023c	03530000	 cmpeq       r3, #0

; 257  :                         }
; 258  :                     }
; 259  :                     else
; 260  :                     {
; 261  :                         TimeOut = INFINITE;

  00240	03e04000	 mvneq       r4, #0
  00244	0affffb8	 beq         |$LL32@LEDThread|
  00248	e3a04ffa	 mov         r4, #0xFA, 30
  0024c	e3560000	 cmp         r6, #0
  00250	0a000005	 beq         |$LN17@LEDThread|
  00254	e3530000	 cmp         r3, #0
  00258	13a05001	 movne       r5, #1
  0025c	03a05000	 moveq       r5, #0
  00260		 |$LN56@LEDThread|

; 241  :                     {
; 242  :                         TimeOut = 1000;
; 243  :                         if(BTisON && WIFIisON)
; 244  :                         {
; 245  :                             LastLED = BT_LED_ON;
; 246  :                             SetBluetoothLED(TRUE);
; 247  :                         }
; 248  :                         else if(BTisON)
; 249  :                         {
; 250  :                             LastLED = 0;
; 251  :                             SetBluetoothLED(TRUE);

  00260	e3a00001	 mov         r0, #1
  00264		 |$LN55@LEDThread|
  00264	eb000000	 bl          SetBluetoothLED
  00268	eaffffaf	 b           |$LL32@LEDThread|
  0026c		 |$LN17@LEDThread|

; 252  :                         }
; 253  :                         else if(WIFIisON)

  0026c	e3530000	 cmp         r3, #0
  00270	0affffad	 beq         |$LL32@LEDThread|

; 254  :                         {
; 255  :                             LastLED = 0;
; 256  :                             SetWIFILED(TRUE);

  00274	e3a05000	 mov         r5, #0
  00278		 |$LN57@LEDThread|
  00278	e3a00001	 mov         r0, #1
  0027c	eb000000	 bl          SetWIFILED

; 297  : 
; 298  :                 default:
; 299  :                     break;
; 300  :             }
; 301  :         }
; 302  :     }

  00280	eaffffa9	 b           |$LL32@LEDThread|
  00284		 |$LN36@LEDThread|

; 186  : 		return 0;	

  00284	e3a00000	 mov         r0, #0

; 303  : 
; 304  :     return 0;
; 305  : }

  00288	e28dd014	 add         sp, sp, #0x14
  0028c	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  00290	e12fff1e	 bx          lr
  00294		 |$LN62@LEDThread|
  00294		 |$LN63@LEDThread|
  00294	a0008032	 DCD         0xa0008032
  00298		 |$LN64@LEDThread|
  00298	00000000	 DCD         |??_C@_1CM@ILKMKENC@?$AAW?$AAI?$AAF?$AAI?$AA?1?$AAR?$AAD?$AAY?$AA?1?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@|
  0029c		 |$LN65@LEDThread|
  0029c	00000000	 DCD         |??_C@_1CM@DFICLJOC@?$AAW?$AAI?$AAF?$AAI?$AA_?$AAL?$AAE?$AAD?$AA?1?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@|
  002a0		 |$LN66@LEDThread|
  002a0	00000000	 DCD         |BT_LED_Event|
  002a4		 |$LN67@LEDThread|
  002a4	00000000	 DCD         |??_C@_1CA@KEHENBMD@?$AAB?$AAT?$AA?1?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@|
  002a8		 |$LN68@LEDThread|
  002a8	00000000	 DCD         |BCRLEDThread|
  002ac		 |$M45561|

			 ENDP  ; |LEDThread|

	END
