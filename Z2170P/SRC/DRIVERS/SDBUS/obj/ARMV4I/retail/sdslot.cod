; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\Z2170P\SRC\DRIVERS\SDBUS\sdslot.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|??0CLockObject@@QAA@XZ|		; CLockObject::CLockObject
	IMPORT	|InitializeCriticalSection|
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T36741| DCD	|$LN5@CLockObjec|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CLockObject@@QAA@XZ| PROC		; CLockObject::CLockObject

; 36   :     CLockObject()

  00000		 |$LN5@CLockObjec|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M36738|
  00004	e1a04000	 mov         r4, r0

; 37   :     {
; 38   :         InitializeCriticalSection( &m_CSection );

  00008	eb000000	 bl          InitializeCriticalSection

; 39   :     };

  0000c	e1a00004	 mov         r0, r4
  00010	e8bd4010	 ldmia       sp!, {r4, lr}
  00014	e12fff1e	 bx          lr
  00018		 |$M36739|

			 ENDP  ; |??0CLockObject@@QAA@XZ|, CLockObject::CLockObject

	EXPORT	|??1CLockObject@@QAA@XZ|		; CLockObject::~CLockObject
	IMPORT	|DeleteCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T36749| DCD	|$LN5@CLockObjec@2|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CLockObject@@QAA@XZ| PROC		; CLockObject::~CLockObject

; 41   :     {

  00000		 |$LN5@CLockObjec@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36746|

; 42   :         DeleteCriticalSection( &m_CSection );

  00004	eb000000	 bl          DeleteCriticalSection

; 43   :     };

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M36747|

			 ENDP  ; |??1CLockObject@@QAA@XZ|, CLockObject::~CLockObject

	EXPORT	|?Lock@CLockObject@@QAAXXZ|		; CLockObject::Lock
	IMPORT	|EnterCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T36757| DCD	|$LN5@Lock|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Lock@CLockObject@@QAAXXZ| PROC	; CLockObject::Lock

; 45   :     {

  00000		 |$LN5@Lock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36754|

; 46   :         EnterCriticalSection( &m_CSection );

  00004	eb000000	 bl          EnterCriticalSection

; 47   :     };

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M36755|

			 ENDP  ; |?Lock@CLockObject@@QAAXXZ|, CLockObject::Lock

	EXPORT	|?Unlock@CLockObject@@QAAXXZ|		; CLockObject::Unlock
	IMPORT	|LeaveCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T36765| DCD	|$LN5@Unlock|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Unlock@CLockObject@@QAAXXZ| PROC	; CLockObject::Unlock

; 49   :     {

  00000		 |$LN5@Unlock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36762|

; 50   :         LeaveCriticalSection( &m_CSection );

  00004	eb000000	 bl          LeaveCriticalSection

; 51   :     };

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M36763|

			 ENDP  ; |?Unlock@CLockObject@@QAAXXZ|, CLockObject::Unlock

	EXPORT	|?AddRef@CRefObject@@QAAKXZ|		; CRefObject::AddRef
	IMPORT	|InterlockedIncrement|
; File c:\wince600\public\common\oak\inc\crefcon.h

  00000			 AREA	 |.pdata|, PDATA
|$T36775| DCD	|$LN5@AddRef|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AddRef@CRefObject@@QAAKXZ| PROC	; CRefObject::AddRef

; 43   :     {

  00000		 |$LN5@AddRef|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36772|

; 44   :         return (DWORD)InterlockedIncrement(&m_lRefCount);

  00004	e2800004	 add         r0, r0, #4
  00008	eb000000	 bl          InterlockedIncrement

; 45   :     };

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M36773|

			 ENDP  ; |?AddRef@CRefObject@@QAAKXZ|, CRefObject::AddRef

	EXPORT	|?DeRef@CRefObject@@QAAKXZ|		; CRefObject::DeRef
	IMPORT	|InterlockedDecrement|

  00000			 AREA	 |.pdata|, PDATA
|$T36790| DCD	|$LN8@DeRef|
	DCD	0x40001101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DeRef@CRefObject@@QAAKXZ| PROC	; CRefObject::DeRef

; 47   :     {

  00000		 |$LN8@DeRef|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M36787|
  00004	e1a04000	 mov         r4, r0

; 48   :         LONG lReturn = InterlockedDecrement(&m_lRefCount);

  00008	e2840004	 add         r0, r4, #4
  0000c	eb000000	 bl          InterlockedDecrement
  00010	e1a05000	 mov         r5, r0

; 49   :         if( lReturn <= 0 ) {

  00014	e3550000	 cmp         r5, #0
  00018	ca000006	 bgt         |$LN4@DeRef|

; 50   :             delete this;

  0001c	e3540000	 cmp         r4, #0
  00020	15943000	 ldrne       r3, [r4]
  00024	13a01001	 movne       r1, #1
  00028	11a00004	 movne       r0, r4
  0002c	15933000	 ldrne       r3, [r3]
  00030	11a0e00f	 movne       lr, pc
  00034	112fff13	 bxne        r3
  00038		 |$LN4@DeRef|

; 51   :         }
; 52   :         return (DWORD)lReturn;
; 53   :     }

  00038	e1a00005	 mov         r0, r5
  0003c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M36788|

			 ENDP  ; |?DeRef@CRefObject@@QAAKXZ|, CRefObject::DeRef

	EXPORT	|?IsAttached@CSDHost@@QAAHXZ|		; CSDHost::IsAttached
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T36800| DCD	|$LN5@IsAttached|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsAttached@CSDHost@@QAAHXZ| PROC	; CSDHost::IsAttached

; 128  :     BOOL    IsAttached() { return m_fHostAttached; };

  00000		 |$LN5@IsAttached|
  00000		 |$M36797|
  00000	e5900064	 ldr         r0, [r0, #0x64]
  00004	e12fff1e	 bx          lr
  00008		 |$M36798|

			 ENDP  ; |?IsAttached@CSDHost@@QAAHXZ|, CSDHost::IsAttached

	EXPORT	|?BusRequestHandler@CSDHost@@QAAJKPAU_SD_BUS_REQUEST@@@Z| ; CSDHost::BusRequestHandler

  00000			 AREA	 |.pdata|, PDATA
|$T36814| DCD	|$LN7@BusRequest|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?BusRequestHandler@CSDHost@@QAAJKPAU_SD_BUS_REQUEST@@@Z| PROC ; CSDHost::BusRequestHandler

; 135  :     SD_API_STATUS   BusRequestHandler(DWORD dwSlot, PSD_BUS_REQUEST pSdBusRequest)  {

  00000		 |$LN7@BusRequest|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36811|
  00004	e1b03000	 movs        r3, r0

; 136  :         return pBusRequestHandler((PSDCARD_HC_CONTEXT)this,dwSlot,pSdBusRequest);

  00008	12830008	 addne       r0, r3, #8
  0000c	e5933040	 ldr         r3, [r3, #0x40]
  00010	03a00000	 moveq       r0, #0
  00014	e1a0e00f	 mov         lr, pc
  00018	e12fff13	 bx          r3

; 137  :         
; 138  :     }; // bus request handler

  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M36812|

			 ENDP  ; |?BusRequestHandler@CSDHost@@QAAJKPAU_SD_BUS_REQUEST@@@Z|, CSDHost::BusRequestHandler

	EXPORT	|?SlotOptionHandler@CSDHost@@QAAJKW4_SD_SLOT_OPTION_CODE@@PAXK@Z| ; CSDHost::SlotOptionHandler

  00000			 AREA	 |.pdata|, PDATA
|$T36829| DCD	|$LN7@SlotOption|
	DCD	0x40000f02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SlotOptionHandler@CSDHost@@QAAJKW4_SD_SLOT_OPTION_CODE@@PAXK@Z| PROC ; CSDHost::SlotOptionHandler

; 139  :     SD_API_STATUS   SlotOptionHandler(DWORD dwSlot, SD_SLOT_OPTION_CODE sdSlotOption, PVOID pvParam, ULONG uSize) { // slot option handler

  00000		 |$LN7@SlotOption|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M36826|
  00008	e1a05002	 mov         r5, r2
  0000c	e1b0e000	 movs        lr, r0

; 140  :         return pSlotOptionHandler((PSDCARD_HC_CONTEXT)this,dwSlot,sdSlotOption,pvParam,uSize);

  00010	e59d2010	 ldr         r2, [sp, #0x10]
  00014	e59e4044	 ldr         r4, [lr, #0x44]
  00018	128e0008	 addne       r0, lr, #8
  0001c	e58d2000	 str         r2, [sp]
  00020	e1a02005	 mov         r2, r5
  00024	03a00000	 moveq       r0, #0
  00028	e1a0e00f	 mov         lr, pc
  0002c	e12fff14	 bx          r4

; 141  :     }

  00030	e28dd004	 add         sp, sp, #4
  00034	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$M36827|

			 ENDP  ; |?SlotOptionHandler@CSDHost@@QAAJKW4_SD_SLOT_OPTION_CODE@@PAXK@Z|, CSDHost::SlotOptionHandler

	EXPORT	|?CancelIOHandler@CSDHost@@QAAHKPAU_SD_BUS_REQUEST@@@Z| ; CSDHost::CancelIOHandler

  00000			 AREA	 |.pdata|, PDATA
|$T36843| DCD	|$LN7@CancelIOHa|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CancelIOHandler@CSDHost@@QAAHKPAU_SD_BUS_REQUEST@@@Z| PROC ; CSDHost::CancelIOHandler

; 142  :     BOOL            CancelIOHandler(DWORD dwSlot, PSD_BUS_REQUEST psdBusRequest) {   // cancel request handler

  00000		 |$LN7@CancelIOHa|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36840|
  00004	e1b03000	 movs        r3, r0

; 143  :         return pCancelIOHandler((PSDCARD_HC_CONTEXT)this,dwSlot,psdBusRequest);

  00008	12830008	 addne       r0, r3, #8
  0000c	e5933048	 ldr         r3, [r3, #0x48]
  00010	03a00000	 moveq       r0, #0
  00014	e1a0e00f	 mov         lr, pc
  00018	e12fff13	 bx          r3

; 144  :     }

  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M36841|

			 ENDP  ; |?CancelIOHandler@CSDHost@@QAAHKPAU_SD_BUS_REQUEST@@@Z|, CSDHost::CancelIOHandler

	EXPORT	|?SDHCAccessLock@CSDHost@@QAAXXZ|	; CSDHost::SDHCAccessLock

  00000			 AREA	 |.pdata|, PDATA
|$T36851| DCD	|$LN5@SDHCAccess|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SDHCAccessLock@CSDHost@@QAAXXZ| PROC	; CSDHost::SDHCAccessLock

; 150  :     VOID            SDHCAccessLock() {

  00000		 |$LN5@SDHCAccess|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36848|

; 151  :         EnterCriticalSection(&HCCritSection);

  00004	e280002c	 add         r0, r0, #0x2C
  00008	eb000000	 bl          EnterCriticalSection

; 152  :     }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M36849|

			 ENDP  ; |?SDHCAccessLock@CSDHost@@QAAXXZ|, CSDHost::SDHCAccessLock

	EXPORT	|?SDHCAccessUnlock@CSDHost@@QAAXXZ|	; CSDHost::SDHCAccessUnlock

  00000			 AREA	 |.pdata|, PDATA
|$T36859| DCD	|$LN5@SDHCAccess@2|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SDHCAccessUnlock@CSDHost@@QAAXXZ| PROC ; CSDHost::SDHCAccessUnlock

; 153  :     VOID            SDHCAccessUnlock() {

  00000		 |$LN5@SDHCAccess@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36856|

; 154  :         LeaveCriticalSection(&HCCritSection);

  00004	e280002c	 add         r0, r0, #0x2C
  00008	eb000000	 bl          LeaveCriticalSection

; 155  :     }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M36857|

			 ENDP  ; |?SDHCAccessUnlock@CSDHost@@QAAXXZ|, CSDHost::SDHCAccessUnlock

	EXPORT	|?SetDeviceType@CSDDevice@@QAA?AW4_SDCARD_DEVICE_TYPE@@W42@@Z| ; CSDDevice::SetDeviceType
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sddevice.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T36870| DCD	|$LN5@SetDeviceT|
	DCD	0x40000300
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetDeviceType@CSDDevice@@QAA?AW4_SDCARD_DEVICE_TYPE@@W42@@Z| PROC ; CSDDevice::SetDeviceType

; 133  :     SDCARD_DEVICE_TYPE SetDeviceType(SDCARD_DEVICE_TYPE deviceType) { return m_DeviceType = deviceType; };

  00000		 |$LN5@SetDeviceT|
  00000		 |$M36867|
  00000	e5801494	 str         r1, [r0, #0x494]
  00004	e1a00001	 mov         r0, r1
  00008	e12fff1e	 bx          lr
  0000c		 |$M36868|

			 ENDP  ; |?SetDeviceType@CSDDevice@@QAA?AW4_SDCARD_DEVICE_TYPE@@W42@@Z|, CSDDevice::SetDeviceType

	EXPORT	|?GetDeviceType@CSDDevice@@QAA?AW4_SDCARD_DEVICE_TYPE@@XZ| ; CSDDevice::GetDeviceType

  00000			 AREA	 |.pdata|, PDATA
|$T36880| DCD	|$LN5@GetDeviceT|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetDeviceType@CSDDevice@@QAA?AW4_SDCARD_DEVICE_TYPE@@XZ| PROC ; CSDDevice::GetDeviceType

; 134  :     SDCARD_DEVICE_TYPE GetDeviceType() { return m_DeviceType; };

  00000		 |$LN5@GetDeviceT|
  00000		 |$M36877|
  00000	e5900494	 ldr         r0, [r0, #0x494]
  00004	e12fff1e	 bx          lr
  00008		 |$M36878|

			 ENDP  ; |?GetDeviceType@CSDDevice@@QAA?AW4_SDCARD_DEVICE_TYPE@@XZ|, CSDDevice::GetDeviceType

	EXPORT	|?GetCardInterface@CSDDevice@@QAAAAU_SD_CARD_INTERFACE_EX@@XZ| ; CSDDevice::GetCardInterface

  00000			 AREA	 |.pdata|, PDATA
|$T36890| DCD	|$LN5@GetCardInt|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetCardInterface@CSDDevice@@QAAAAU_SD_CARD_INTERFACE_EX@@XZ| PROC ; CSDDevice::GetCardInterface

; 175  :     SD_CARD_INTERFACE_EX& GetCardInterface() { return m_CardInterfaceEx;};

  00000		 |$LN5@GetCardInt|
  00000		 |$M36887|
  00000	e2800d15	 add         r0, r0, #0x15, 26
  00004	e12fff1e	 bx          lr
  00008		 |$M36888|

			 ENDP  ; |?GetCardInterface@CSDDevice@@QAAAAU_SD_CARD_INTERFACE_EX@@XZ|, CSDDevice::GetCardInterface

	EXPORT	|?GetHost@CSDSlot@@QAAAAVCSDHost@@XZ|	; CSDSlot::GetHost
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T36900| DCD	|$LN5@GetHost|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetHost@CSDSlot@@QAAAAVCSDHost@@XZ| PROC ; CSDSlot::GetHost

; 99   :     CSDHost&    GetHost() { return m_SdHost; };

  00000		 |$LN5@GetHost|
  00000		 |$M36897|
  00000	e590007c	 ldr         r0, [r0, #0x7C]
  00004	e12fff1e	 bx          lr
  00008		 |$M36898|

			 ENDP  ; |?GetHost@CSDSlot@@QAAAAVCSDHost@@XZ|, CSDSlot::GetHost

	EXPORT	|?CheckSlotReady@CSDSlot@@QAAJXZ|	; CSDSlot::CheckSlotReady

  00000			 AREA	 |.pdata|, PDATA
|$T36910| DCD	|$LN8@CheckSlotR|
	DCD	0x40000d00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CheckSlotReady@CSDSlot@@QAAJXZ| PROC	; CSDSlot::CheckSlotReady

; 132  :     inline SD_API_STATUS CheckSlotReady() {

  00000		 |$LN8@CheckSlotR|
  00000		 |$M36907|

; 133  :         if ((SlotIdle != m_SlotState) && (Ready != m_SlotState) && (SlotResetting != m_SlotState)) {

  00000	e5903084	 ldr         r3, [r0, #0x84]
  00004	e3530001	 cmp         r3, #1
  00008	0a000007	 beq         |$LN1@CheckSlotR|
  0000c	e3530002	 cmp         r3, #2
  00010	0a000005	 beq         |$LN1@CheckSlotR|
  00014	e3530006	 cmp         r3, #6
  00018	0a000003	 beq         |$LN1@CheckSlotR|

; 134  :             if (SlotDeviceEjected == m_SlotState) {

  0001c	e3530003	 cmp         r3, #3

; 135  :                 DEBUGMSG(SDCARD_ZONE_WARN, (TEXT("SDCard: Device in Slot:%d is about to be removed. Rejecting Request \n"), m_dwSlotIndex));    
; 136  :                 return SD_API_STATUS_DEVICE_REMOVED;

  00020	03a00147	 moveq       r0, #0x47, 2

; 137  :             } else {
; 138  :                 DEBUG_CHECK(FALSE,(TEXT("SubmitBusRequest: Slot is not ready. Current slot state is %d \n"),m_SlotState ));
; 139  :                 return SD_API_STATUS_UNSUCCESSFUL;

  00024	13a0010f	 movne       r0, #0xF, 2

; 143  :     }    

  00028	e12fff1e	 bx          lr
  0002c		 |$LN1@CheckSlotR|

; 140  :             }
; 141  :         }
; 142  :         return SD_API_STATUS_SUCCESS;

  0002c	e3a00000	 mov         r0, #0

; 143  :     }    

  00030	e12fff1e	 bx          lr
  00034		 |$M36908|

			 ENDP  ; |?CheckSlotReady@CSDSlot@@QAAJXZ|, CSDSlot::CheckSlotReady

	EXPORT	|?GetFunctionDevice@CSDSlot@@QAAPAVCSDDevice@@K@Z| ; CSDSlot::GetFunctionDevice
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T36933| DCD	|$LN15@GetFunctio|
	DCD	0x40001401
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.hpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetFunctionDevice@CSDSlot@@QAAPAVCSDDevice@@K@Z| PROC ; CSDSlot::GetFunctionDevice

; 155  :     inline CSDDevice * GetFunctionDevice(DWORD dwIndex){

  00000		 |$LN15@GetFunctio|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M36930|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0

; 156  :         m_SlotLock.Lock();

  0000c	e28500b4	 add         r0, r5, #0xB4
  00010	eb000000	 bl          EnterCriticalSection

; 157  :         CSDDevice*  pReturn = dwIndex < SD_MAXIMUM_DEVICE_PER_SLOT ? m_pFuncDevice[dwIndex] : NULL;

  00014	e3540008	 cmp         r4, #8
  00018	30853104	 addcc       r3, r5, r4, lsl #2
  0001c	359340c8	 ldrcc       r4, [r3, #0xC8]
  00020	23a04000	 movcs       r4, #0

; 158  :         if( pReturn )  {

  00024	e3540000	 cmp         r4, #0
  00028	0a000002	 beq         |$LN2@GetFunctio|

; 159  :             pReturn->AddRef();

  0002c	e2840004	 add         r0, r4, #4
  00030	eb000000	 bl          InterlockedIncrement

; 160  :         }
; 161  :         else

  00034	ea000000	 b           |$LN1@GetFunctio|
  00038		 |$LN2@GetFunctio|

; 162  :             pReturn = NULL;

  00038	e3a04000	 mov         r4, #0
  0003c		 |$LN1@GetFunctio|

; 163  :         m_SlotLock.Unlock();

  0003c	e28500b4	 add         r0, r5, #0xB4
  00040	eb000000	 bl          LeaveCriticalSection

; 164  :         return pReturn;
; 165  :     }

  00044	e1a00004	 mov         r0, r4
  00048	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$M36931|

			 ENDP  ; |?GetFunctionDevice@CSDSlot@@QAAPAVCSDDevice@@K@Z|, CSDSlot::GetFunctionDevice

	EXPORT	|?IsSlotInterruptOn@CSDSlot@@QAAHXZ|	; CSDSlot::IsSlotInterruptOn

  00000			 AREA	 |.pdata|, PDATA
|$T36945| DCD	|$LN7@IsSlotInte|
	DCD	0x40000500
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsSlotInterruptOn@CSDSlot@@QAAHXZ| PROC ; CSDSlot::IsSlotInterruptOn

; 171  :     BOOL    IsSlotInterruptOn() { return ((m_Flags & SD_SLOT_FLAG_SDIO_INTERRUPTS_ENABLED)!=0) ; };

  00000		 |$LN7@IsSlotInte|
  00000		 |$M36942|
  00000	e5903088	 ldr         r3, [r0, #0x88]
  00004	e3130001	 tst         r3, #1
  00008	13a00001	 movne       r0, #1
  0000c	03a00000	 moveq       r0, #0
  00010	e12fff1e	 bx          lr
  00014		 |$M36943|

			 ENDP  ; |?IsSlotInterruptOn@CSDSlot@@QAAHXZ|, CSDSlot::IsSlotInterruptOn

	EXPORT	|?AddRef@CSDBusRequest@@QAAKXZ|		; CSDBusRequest::AddRef
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbusreq.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T36955| DCD	|$LN5@AddRef@2|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AddRef@CSDBusRequest@@QAAKXZ| PROC	; CSDBusRequest::AddRef

; 107  :     DWORD AddRef( void ) {

  00000		 |$LN5@AddRef@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M36952|

; 108  :         return (DWORD)InterlockedIncrement(&m_lRefCount);

  00004	e280007c	 add         r0, r0, #0x7C
  00008	eb000000	 bl          InterlockedIncrement

; 109  :     };

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M36953|

			 ENDP  ; |?AddRef@CSDBusRequest@@QAAKXZ|, CSDBusRequest::AddRef

	EXPORT	|?DeRef@CSDBusRequest@@QAAKXZ|		; CSDBusRequest::DeRef

  00000			 AREA	 |.pdata|, PDATA
|$T36970| DCD	|$LN8@DeRef@2|
	DCD	0x40001101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DeRef@CSDBusRequest@@QAAKXZ| PROC	; CSDBusRequest::DeRef

; 110  :     DWORD DeRef( void ) {

  00000		 |$LN8@DeRef@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M36967|
  00004	e1a04000	 mov         r4, r0

; 111  :         LONG lReturn = InterlockedDecrement(&m_lRefCount);

  00008	e284007c	 add         r0, r4, #0x7C
  0000c	eb000000	 bl          InterlockedDecrement
  00010	e1a05000	 mov         r5, r0

; 112  :         // Last thing to do
; 113  :         if( lReturn <= 0 ) {

  00014	e3550000	 cmp         r5, #0
  00018	ca000006	 bgt         |$LN4@DeRef@2|

; 114  :             delete this;

  0001c	e3540000	 cmp         r4, #0
  00020	15943000	 ldrne       r3, [r4]
  00024	13a01001	 movne       r1, #1
  00028	11a00004	 movne       r0, r4
  0002c	15933000	 ldrne       r3, [r3]
  00030	11a0e00f	 movne       lr, pc
  00034	112fff13	 bxne        r3
  00038		 |$LN4@DeRef@2|

; 115  :         }
; 116  :         return (DWORD)lReturn;
; 117  :     }

  00038	e1a00005	 mov         r0, r5
  0003c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M36968|

			 ENDP  ; |?DeRef@CSDBusRequest@@QAAKXZ|, CSDBusRequest::DeRef

	EXPORT	|?DecRetryCount@CSDBusRequest@@QAAKXZ|	; CSDBusRequest::DecRetryCount

  00000			 AREA	 |.pdata|, PDATA
|$T36981| DCD	|$LN6@DecRetryCo|
	DCD	0x40000b00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DecRetryCount@CSDBusRequest@@QAAKXZ| PROC ; CSDBusRequest::DecRetryCount

; 121  :     DWORD   DecRetryCount() {

  00000		 |$LN6@DecRetryCo|
  00000		 |$M36978|
  00000	e1a01000	 mov         r1, r0

; 122  :         DWORD dwRetryCount = (SystemFlags & SYSTEM_FLAGS_RETRY_COUNT_MASK);

  00004	e5913010	 ldr         r3, [r1, #0x10]
  00008	e21300ff	 ands        r0, r3, #0xFF

; 123  :         if (dwRetryCount)
; 124  :             dwRetryCount--;
; 125  :         SystemFlags &= ~SYSTEM_FLAGS_RETRY_COUNT_MASK;

  0000c	e3a03000	 mov         r3, #0
  00010	e5c13010	 strb        r3, [r1, #0x10]

; 126  :         SystemFlags |= (dwRetryCount & SYSTEM_FLAGS_RETRY_COUNT_MASK);

  00014	e5912010	 ldr         r2, [r1, #0x10]
  00018	12400001	 subne       r0, r0, #1
  0001c	e20030ff	 and         r3, r0, #0xFF

; 127  :         return dwRetryCount;
; 128  :     }

  00020	e1833002	 orr         r3, r3, r2
  00024	e5813010	 str         r3, [r1, #0x10]
  00028	e12fff1e	 bx          lr
  0002c		 |$M36979|

			 ENDP  ; |?DecRetryCount@CSDBusRequest@@QAAKXZ|, CSDBusRequest::DecRetryCount

	EXPORT	|?SetAsyncQueueNext@CSDBusRequest@@QAAXPAV1@@Z| ; CSDBusRequest::SetAsyncQueueNext

  00000			 AREA	 |.pdata|, PDATA
|$T36990| DCD	|$LN5@SetAsyncQu|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetAsyncQueueNext@CSDBusRequest@@QAAXPAV1@@Z| PROC ; CSDBusRequest::SetAsyncQueueNext

; 130  :     void SetAsyncQueueNext(CSDBusRequest * pNextBusRequest) { m_pAsyncQueueNext = pNextBusRequest; };

  00000		 |$LN5@SetAsyncQu|
  00000		 |$M36987|
  00000	e5801064	 str         r1, [r0, #0x64]
  00004	e12fff1e	 bx          lr
  00008		 |$M36988|

			 ENDP  ; |?SetAsyncQueueNext@CSDBusRequest@@QAAXPAV1@@Z|, CSDBusRequest::SetAsyncQueueNext

	EXPORT	|?GetAsyncQueueNext@CSDBusRequest@@QAAPAV1@XZ| ; CSDBusRequest::GetAsyncQueueNext

  00000			 AREA	 |.pdata|, PDATA
|$T37000| DCD	|$LN5@GetAsyncQu|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetAsyncQueueNext@CSDBusRequest@@QAAPAV1@XZ| PROC ; CSDBusRequest::GetAsyncQueueNext

; 131  :     CSDBusRequest * GetAsyncQueueNext() { return m_pAsyncQueueNext; };

  00000		 |$LN5@GetAsyncQu|
  00000		 |$M36997|
  00000	e5900064	 ldr         r0, [r0, #0x64]
  00004	e12fff1e	 bx          lr
  00008		 |$M36998|

			 ENDP  ; |?GetAsyncQueueNext@CSDBusRequest@@QAAPAV1@XZ|, CSDBusRequest::GetAsyncQueueNext

	EXPORT	|?SetStatus@CSDBusRequest@@QAAXJ@Z|	; CSDBusRequest::SetStatus

  00000			 AREA	 |.pdata|, PDATA
|$T37011| DCD	|$LN7@SetStatus|
	DCD	0x40000700
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetStatus@CSDBusRequest@@QAAXJ@Z| PROC ; CSDBusRequest::SetStatus

; 142  :     VOID    SetStatus(SD_API_STATUS status) { 

  00000		 |$LN7@SetStatus|
  00000		 |$M37008|

; 143  :         Status = status; 
; 144  :         m_fCompleted = (status!=SD_API_STATUS_PENDING);

  00000	e3510001	 cmp         r1, #1
  00004	13a03001	 movne       r3, #1
  00008	15803080	 strne       r3, [r0, #0x80]
  0000c	e580103c	 str         r1, [r0, #0x3C]
  00010	03a03000	 moveq       r3, #0
  00014	05803080	 streq       r3, [r0, #0x80]

; 145  :     };

  00018	e12fff1e	 bx          lr
  0001c		 |$M37009|

			 ENDP  ; |?SetStatus@CSDBusRequest@@QAAXJ@Z|, CSDBusRequest::SetStatus

	EXPORT	|?CompleteBusRequest@CSDBusRequest@@QAAHJ@Z| ; CSDBusRequest::CompleteBusRequest
	IMPORT	|?CheckForCompletion@CSDBusRequest@@IAAHXZ| ; CSDBusRequest::CheckForCompletion

  00000			 AREA	 |.pdata|, PDATA
|$T37024| DCD	|$LN7@CompleteBu|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CompleteBusRequest@CSDBusRequest@@QAAHJ@Z| PROC ; CSDBusRequest::CompleteBusRequest

; 146  :     BOOL CompleteBusRequest(SD_API_STATUS SdStatus) {

  00000		 |$LN7@CompleteBu|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37021|

; 147  :         // Note the response should be updaed by SDHC.
; 148  :         Status  = SdStatus;
; 149  :         m_fCompleted = TRUE;
; 150  :         return (m_pParentBus!=NULL? m_pParentBus->CheckForCompletion():CheckForCompletion());

  00004	e590306c	 ldr         r3, [r0, #0x6C]
  00008	e3a02001	 mov         r2, #1
  0000c	e580103c	 str         r1, [r0, #0x3C]
  00010	e3530000	 cmp         r3, #0
  00014	e5802080	 str         r2, [r0, #0x80]
  00018	11a00003	 movne       r0, r3
  0001c	eb000000	 bl          |?CheckForCompletion@CSDBusRequest@@IAAHXZ|

; 151  :     }

  00020	e49de004	 ldr         lr, [sp], #4
  00024	e12fff1e	 bx          lr
  00028		 |$M37022|

			 ENDP  ; |?CompleteBusRequest@CSDBusRequest@@QAAHJ@Z|, CSDBusRequest::CompleteBusRequest

	EXPORT	|??0CSDBusReqAsyncQueue@@QAA@XZ|	; CSDBusReqAsyncQueue::CSDBusReqAsyncQueue
	EXPORT	|??_7CSDBusReqAsyncQueue@@6B@| [ DATA ]	; CSDBusReqAsyncQueue::`vftable'
	IMPORT	|_purecall|
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T37038| DCD	|$LN7@CSDBusReqA|
	DCD	0x40000e01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CSDBusReqAsyncQueue@@6B@| DCD |_purecall|		; CSDBusReqAsyncQueue::`vftable'
	DCD	|_purecall|
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CSDBusReqAsyncQueue@@QAA@XZ| PROC	; CSDBusReqAsyncQueue::CSDBusReqAsyncQueue

; 41   : {

  00000		 |$LN7@CSDBusReqA|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37035|
  00004	e1a04000	 mov         r4, r0
  00008	e2840004	 add         r0, r4, #4
  0000c	eb000000	 bl          InitializeCriticalSection
  00010	e59f301c	 ldr         r3, [pc, #0x1C]

; 42   :     m_pQueueListHead = m_pQueueListLast = NULL;

  00014	e3a02000	 mov         r2, #0
  00018	e584201c	 str         r2, [r4, #0x1C]
  0001c	e5843000	 str         r3, [r4]
  00020	e5842018	 str         r2, [r4, #0x18]

; 43   :     m_fAttached = FALSE;

  00024	e5842020	 str         r2, [r4, #0x20]

; 44   : }

  00028	e1a00004	 mov         r0, r4
  0002c	e8bd4010	 ldmia       sp!, {r4, lr}
  00030	e12fff1e	 bx          lr
  00034		 |$LN8@CSDBusReqA|
  00034		 |$LN9@CSDBusReqA|
  00034	00000000	 DCD         |??_7CSDBusReqAsyncQueue@@6B@|
  00038		 |$M37036|

			 ENDP  ; |??0CSDBusReqAsyncQueue@@QAA@XZ|, CSDBusReqAsyncQueue::CSDBusReqAsyncQueue

	EXPORT	|??1CSDBusReqAsyncQueue@@QAA@XZ|	; CSDBusReqAsyncQueue::~CSDBusReqAsyncQueue
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T37070| DCD	|$LN21@CSDBusReqA@2|
	DCD	0x40001701
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CSDBusReqAsyncQueue@@QAA@XZ| PROC	; CSDBusReqAsyncQueue::~CSDBusReqAsyncQueue

; 46   : {

  00000		 |$LN21@CSDBusReqA@2|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M37067|
  00004	e1a06000	 mov         r6, r0
  00008	e59f3048	 ldr         r3, [pc, #0x48]

; 47   :     Lock();

  0000c	e1a05006	 mov         r5, r6
  00010	e4853004	 str         r3, [r5], #4
  00014	e1a00005	 mov         r0, r5
  00018	eb000000	 bl          EnterCriticalSection

; 48   :     while (m_pQueueListHead) {

  0001c	ea000004	 b           |$LN18@CSDBusReqA@2|
  00020		 |$LL2@CSDBusReqA@2|

; 49   :         CSDBusRequest * pNext = m_pQueueListHead->GetAsyncQueueNext();

  00020	e5963018	 ldr         r3, [r6, #0x18]

; 50   :         m_pQueueListHead->DeRef();

  00024	e5934064	 ldr         r4, [r3, #0x64]
  00028	e1a00003	 mov         r0, r3
  0002c	eb000000	 bl          |?DeRef@CSDBusRequest@@QAAKXZ|

; 51   :         m_pQueueListHead = pNext;

  00030	e5864018	 str         r4, [r6, #0x18]
  00034		 |$LN18@CSDBusReqA@2|
  00034	e5963018	 ldr         r3, [r6, #0x18]
  00038	e3530000	 cmp         r3, #0
  0003c	1afffff7	 bne         |$LL2@CSDBusReqA@2|

; 52   :     }
; 53   :     Unlock();

  00040	e1a00005	 mov         r0, r5
  00044	eb000000	 bl          LeaveCriticalSection

; 54   : }

  00048	e1a00005	 mov         r0, r5
  0004c	eb000000	 bl          DeleteCriticalSection
  00050	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$LN22@CSDBusReqA@2|
  00058		 |$LN23@CSDBusReqA@2|
  00058	00000000	 DCD         |??_7CSDBusReqAsyncQueue@@6B@|
  0005c		 |$M37068|

			 ENDP  ; |??1CSDBusReqAsyncQueue@@QAA@XZ|, CSDBusReqAsyncQueue::~CSDBusReqAsyncQueue

	EXPORT	|?Init@CSDBusReqAsyncQueue@@QAAHXZ|	; CSDBusReqAsyncQueue::Init

  00000			 AREA	 |.pdata|, PDATA
|$T37082| DCD	|$LN5@Init|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Init@CSDBusReqAsyncQueue@@QAAHXZ| PROC ; CSDBusReqAsyncQueue::Init

; 56   : {

  00000		 |$LN5@Init|
  00000		 |$M37079|

; 57   :     m_fAttached = TRUE;

  00000	e3a03001	 mov         r3, #1
  00004	e5803020	 str         r3, [r0, #0x20]

; 58   :     return TRUE;

  00008	e3a00001	 mov         r0, #1

; 59   : }

  0000c	e12fff1e	 bx          lr
  00010		 |$M37080|

			 ENDP  ; |?Init@CSDBusReqAsyncQueue@@QAAHXZ|, CSDBusReqAsyncQueue::Init

	EXPORT	|?CompleteRequest@CSDBusReqAsyncQueue@@QAAPAVCSDBusRequest@@PAV2@J@Z| ; CSDBusReqAsyncQueue::CompleteRequest
	IMPORT	|?IsRequestNeedRetry@CSDBusRequest@@QAAHXZ| ; CSDBusRequest::IsRequestNeedRetry
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T37136| DCD	|$LN37@CompleteRe|
	DCD	0x40005701
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CompleteRequest@CSDBusReqAsyncQueue@@QAAPAVCSDBusRequest@@PAV2@J@Z| PROC ; CSDBusReqAsyncQueue::CompleteRequest

; 128  : {

  00000		 |$LN37@CompleteRe|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M37133|
  00004	e1a06002	 mov         r6, r2
  00008	e1a04001	 mov         r4, r1
  0000c	e1a05000	 mov         r5, r0

; 129  :     CSDBusRequest * pReturn = NULL;
; 130  :     Lock();

  00010	e2850004	 add         r0, r5, #4
  00014	e3a07000	 mov         r7, #0
  00018	eb000000	 bl          EnterCriticalSection

; 131  :     if (m_pQueueListHead && m_pQueueListHead == pRequest) {

  0001c	e5953018	 ldr         r3, [r5, #0x18]
  00020	e3530000	 cmp         r3, #0
  00024	0a000047	 beq         |$LN3@CompleteRe|
  00028	e1530004	 cmp         r3, r4
  0002c	1a000045	 bne         |$LN3@CompleteRe|

; 132  :         pRequest->SetStatus(Status);

  00030	e3560001	 cmp         r6, #1
  00034	13a03001	 movne       r3, #1
  00038	03a03000	 moveq       r3, #0
  0003c	e5843080	 str         r3, [r4, #0x80]
  00040	e584603c	 str         r6, [r4, #0x3C]

; 133  :         if (!SD_API_SUCCESS(Status) && pRequest->IsRequestNeedRetry()) {

  00044	e3560000	 cmp         r6, #0
  00048	5a00001f	 bpl         |$LN9@CompleteRe|
  0004c	e1a00004	 mov         r0, r4
  00050	eb000000	 bl          |?IsRequestNeedRetry@CSDBusRequest@@QAAHXZ|
  00054	e3500000	 cmp         r0, #0
  00058	0a00001b	 beq         |$LN9@CompleteRe|

; 134  :             pRequest->SetStatus(SD_API_STATUS_PENDING);
; 135  :             pRequest->DecRetryCount();

  0005c	e5943010	 ldr         r3, [r4, #0x10]
  00060	e3a02001	 mov         r2, #1
  00064	e3a01000	 mov         r1, #0
  00068	e21330ff	 ands        r3, r3, #0xFF
  0006c	e584203c	 str         r2, [r4, #0x3C]
  00070	e5c41010	 strb        r1, [r4, #0x10]
  00074	e5942010	 ldr         r2, [r4, #0x10]
  00078	12433001	 subne       r3, r3, #1
  0007c	e20330ff	 and         r3, r3, #0xFF

; 136  :             SD_API_STATUS status = SubmitRequestToHC(pRequest);

  00080	e1833002	 orr         r3, r3, r2
  00084	e5843010	 str         r3, [r4, #0x10]
  00088	e5841080	 str         r1, [r4, #0x80]
  0008c	e5953000	 ldr         r3, [r5]
  00090	e1a01004	 mov         r1, r4
  00094	e1a00005	 mov         r0, r5
  00098	e5933000	 ldr         r3, [r3]
  0009c	e1a0e00f	 mov         lr, pc
  000a0	e12fff13	 bx          r3
  000a4	e3500000	 cmp         r0, #0

; 137  :             if (!SD_API_SUCCESS(status)  || status == SD_API_STATUS_FAST_PATH_SUCCESS ) { 

  000a8	4a000001	 bmi         |$LN7@CompleteRe|
  000ac	e3500002	 cmp         r0, #2
  000b0	1a000024	 bne         |$LN3@CompleteRe|
  000b4		 |$LN7@CompleteRe|

; 138  :                 // Failed or Fast pass completion,  CompleteRequest is never happen.
; 139  :                 pReturn = CompleteRequest(pRequest,status ); // Yes recursive. It will stop either succeeded or try count to zero.

  000b4	e1a02000	 mov         r2, r0
  000b8	e1a00005	 mov         r0, r5
  000bc	e1a01004	 mov         r1, r4
  000c0	eb000000	 bl          |?CompleteRequest@CSDBusReqAsyncQueue@@QAAPAVCSDBusRequest@@PAV2@J@Z|
  000c4	e1a07000	 mov         r7, r0

; 140  :             }
; 141  :         }
; 142  :         else {

  000c8	ea00001e	 b           |$LN3@CompleteRe|
  000cc		 |$LN9@CompleteRe|

; 143  :             pRequest->CompleteBusRequest(Status);

  000cc	e594306c	 ldr         r3, [r4, #0x6C]
  000d0	e3a02001	 mov         r2, #1
  000d4	e584603c	 str         r6, [r4, #0x3C]
  000d8	e3530000	 cmp         r3, #0
  000dc	11a00003	 movne       r0, r3
  000e0	01a00004	 moveq       r0, r4
  000e4	e5842080	 str         r2, [r4, #0x80]
  000e8	eb000000	 bl          |?CheckForCompletion@CSDBusRequest@@IAAHXZ|

; 144  :             pReturn = m_pQueueListHead;

  000ec	e5957018	 ldr         r7, [r5, #0x18]

; 145  :             ASSERT((m_pQueueListHead == m_pQueueListLast) == (m_pQueueListHead->GetAsyncQueueNext()==NULL));
; 146  :             CSDBusRequest * pNext = m_pQueueListHead->GetAsyncQueueNext();
; 147  :             m_pQueueListHead->DeRef();

  000f0	e5974064	 ldr         r4, [r7, #0x64]
  000f4	e1a00007	 mov         r0, r7
  000f8	eb000000	 bl          |?DeRef@CSDBusRequest@@QAAKXZ|

; 148  :             m_pQueueListHead = pNext;
; 149  :             if (m_pQueueListHead == NULL) {

  000fc	e3540000	 cmp         r4, #0

; 150  :                 m_pQueueListLast = NULL;

  00100	03a03000	 moveq       r3, #0
  00104	0585301c	 streq       r3, [r5, #0x1C]
  00108	e5854018	 str         r4, [r5, #0x18]
  0010c	0a00000d	 beq         |$LN3@CompleteRe|

; 151  :             }
; 152  :             else { // Submit Another one inside queue.
; 153  :                 SD_API_STATUS status = SubmitRequestToHC(m_pQueueListHead);

  00110	e5953000	 ldr         r3, [r5]
  00114	e1a01004	 mov         r1, r4
  00118	e1a00005	 mov         r0, r5
  0011c	e5933000	 ldr         r3, [r3]
  00120	e1a0e00f	 mov         lr, pc
  00124	e12fff13	 bx          r3
  00128	e3500000	 cmp         r0, #0

; 154  :                 if (!SD_API_SUCCESS(status)  || status == SD_API_STATUS_FAST_PATH_SUCCESS ) { 

  0012c	4a000001	 bmi         |$LN2@CompleteRe|
  00130	e3500002	 cmp         r0, #2
  00134	1a000003	 bne         |$LN3@CompleteRe|
  00138		 |$LN2@CompleteRe|

; 155  :                     // Failed or Fast pass completion,  CompleteRequest is never happen.
; 156  :                     CSDBusRequest * pReturn1 = CompleteRequest(m_pQueueListHead,status ); // Yes recursive. It will stop either succeeded or try count to zero.

  00138	e5951018	 ldr         r1, [r5, #0x18]
  0013c	e1a02000	 mov         r2, r0
  00140	e1a00005	 mov         r0, r5
  00144	eb000000	 bl          |?CompleteRequest@CSDBusReqAsyncQueue@@QAAPAVCSDBusRequest@@PAV2@J@Z|
  00148		 |$LN3@CompleteRe|

; 157  :                 }                
; 158  :             }
; 159  :         }
; 160  :     }
; 161  :     else { // Why this happens?
; 162  :         ASSERT(FALSE);
; 163  :     }
; 164  :     
; 165  :     Unlock();

  00148	e2850004	 add         r0, r5, #4
  0014c	eb000000	 bl          LeaveCriticalSection

; 166  :     return pReturn;
; 167  : }

  00150	e1a00007	 mov         r0, r7
  00154	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00158	e12fff1e	 bx          lr
  0015c		 |$M37134|

			 ENDP  ; |?CompleteRequest@CSDBusReqAsyncQueue@@QAAPAVCSDBusRequest@@PAV2@J@Z|, CSDBusReqAsyncQueue::CompleteRequest

	EXPORT	|?RemoveRequest@CSDBusReqAsyncQueue@@QAAPAVCSDBusRequest@@PAV2@@Z| ; CSDBusReqAsyncQueue::RemoveRequest
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T37187| DCD	|$LN35@RemoveRequ|
	DCD	0x40003201
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RemoveRequest@CSDBusReqAsyncQueue@@QAAPAVCSDBusRequest@@PAV2@@Z| PROC ; CSDBusReqAsyncQueue::RemoveRequest

; 169  : {

  00000		 |$LN35@RemoveRequ|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M37184|
  00004	e1a06001	 mov         r6, r1
  00008	e1a05000	 mov         r5, r0

; 170  :     CSDBusRequest * pReturn = NULL;
; 171  :     Lock();

  0000c	e2850004	 add         r0, r5, #4
  00010	e3a07000	 mov         r7, #0
  00014	eb000000	 bl          EnterCriticalSection

; 172  :     CSDBusRequest * pPrev = NULL;
; 173  :     CSDBusRequest * pCur = m_pQueueListHead;

  00018	e5953018	 ldr         r3, [r5, #0x18]
  0001c	e3a02000	 mov         r2, #0
  00020	ea000003	 b           |$LN31@RemoveRequ|
  00024		 |$LL7@RemoveRequ|

; 174  :     while (pCur!=NULL && pCur != pRequest) {

  00024	e1540006	 cmp         r4, r6
  00028	0a000005	 beq         |$LN30@RemoveRequ|

; 175  :         pPrev = pCur;
; 176  :         pCur = pCur->GetAsyncQueueNext();

  0002c	e5943064	 ldr         r3, [r4, #0x64]
  00030	e1a02004	 mov         r2, r4
  00034		 |$LN31@RemoveRequ|
  00034	e1b04003	 movs        r4, r3
  00038	1afffff9	 bne         |$LL7@RemoveRequ|

; 177  :     }
; 178  :     if (pCur == pRequest) {

  0003c	e1540006	 cmp         r4, r6
  00040	1a00001b	 bne         |$LN2@RemoveRequ|
  00044		 |$LN30@RemoveRequ|

; 179  :         pReturn = pCur ;

  00044	e1a07004	 mov         r7, r4

; 180  :         if (pPrev!=NULL) {

  00048	e3520000	 cmp         r2, #0
  0004c	0a000012	 beq         |$LN4@RemoveRequ|

; 181  :             pPrev->SetAsyncQueueNext(pCur->GetAsyncQueueNext());

  00050	e5943064	 ldr         r3, [r4, #0x64]

; 182  :             if (pCur->GetAsyncQueueNext() == NULL) // Last one.
; 183  :                 m_pQueueListLast = pPrev;
; 184  :             pCur->CompleteBusRequest(SD_API_STATUS_CANCELED);

  00054	e3a01001	 mov         r1, #1
  00058	e5823064	 str         r3, [r2, #0x64]
  0005c	e5943064	 ldr         r3, [r4, #0x64]
  00060	e3530000	 cmp         r3, #0
  00064	0585201c	 streq       r2, [r5, #0x1C]
  00068	e594306c	 ldr         r3, [r4, #0x6C]
  0006c	e3a0214f	 mov         r2, #0x4F, 2
  00070	e584203c	 str         r2, [r4, #0x3C]
  00074	e3530000	 cmp         r3, #0
  00078	11a00003	 movne       r0, r3
  0007c	01a00004	 moveq       r0, r4
  00080	e5841080	 str         r1, [r4, #0x80]
  00084	eb000000	 bl          |?CheckForCompletion@CSDBusRequest@@IAAHXZ|

; 185  :             pCur->SetAsyncQueueNext(NULL);

  00088	e3a03000	 mov         r3, #0

; 186  :             pCur->DeRef();

  0008c	e1a00004	 mov         r0, r4
  00090	e5843064	 str         r3, [r4, #0x64]
  00094	eb000000	 bl          |?DeRef@CSDBusRequest@@QAAKXZ|

; 187  :         }
; 188  :         else { 

  00098	ea000005	 b           |$LN2@RemoveRequ|
  0009c		 |$LN4@RemoveRequ|

; 189  :             // Delete from First?
; 190  :             // Queue header can not remove from this function because it is processing by SDHC.
; 191  :             CancelRequestFromHC(pRequest);

  0009c	e5953000	 ldr         r3, [r5]
  000a0	e1a01006	 mov         r1, r6
  000a4	e1a00005	 mov         r0, r5
  000a8	e5933004	 ldr         r3, [r3, #4]
  000ac	e1a0e00f	 mov         lr, pc
  000b0	e12fff13	 bx          r3
  000b4		 |$LN2@RemoveRequ|

; 192  :         }
; 193  :     }
; 194  :     else 
; 195  :         ASSERT(FALSE);
; 196  :     Unlock();

  000b4	e2850004	 add         r0, r5, #4
  000b8	eb000000	 bl          LeaveCriticalSection

; 197  :     return pReturn;
; 198  : }

  000bc	e1a00007	 mov         r0, r7
  000c0	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  000c4	e12fff1e	 bx          lr
  000c8		 |$M37185|

			 ENDP  ; |?RemoveRequest@CSDBusReqAsyncQueue@@QAAPAVCSDBusRequest@@PAV2@@Z|, CSDBusReqAsyncQueue::RemoveRequest

	EXPORT	|?RemoveAllRequest@CSDBusReqAsyncQueue@@QAAHXZ| ; CSDBusReqAsyncQueue::RemoveAllRequest
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T37227| DCD	|$LN25@RemoveAllR|
	DCD	0x40002901
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RemoveAllRequest@CSDBusReqAsyncQueue@@QAAHXZ| PROC ; CSDBusReqAsyncQueue::RemoveAllRequest

; 200  : {

  00000		 |$LN25@RemoveAllR|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M37224|
  00004	e1a04000	 mov         r4, r0

; 201  :     Lock();

  00008	e2840004	 add         r0, r4, #4
  0000c	eb000000	 bl          EnterCriticalSection

; 202  :     if (m_pQueueListHead) { 

  00010	e5943018	 ldr         r3, [r4, #0x18]
  00014	e3530000	 cmp         r3, #0
  00018	0a00001c	 beq         |$LN3@RemoveAllR|

; 203  :         CSDBusRequest * pCur = m_pQueueListHead->GetAsyncQueueNext();

  0001c	e5933064	 ldr         r3, [r3, #0x64]
  00020	e1b05003	 movs        r5, r3

; 204  :         while(pCur) {

  00024	0a00000e	 beq         |$LN1@RemoveAllR|
  00028	e3a0714f	 mov         r7, #0x4F, 2
  0002c	e3a08001	 mov         r8, #1
  00030		 |$LL2@RemoveAllR|

; 205  :             CSDBusRequest *pNext = pCur->GetAsyncQueueNext();
; 206  :             pCur->CompleteBusRequest(SD_API_STATUS_CANCELED);

  00030	e595306c	 ldr         r3, [r5, #0x6C]
  00034	e5956064	 ldr         r6, [r5, #0x64]
  00038	e585703c	 str         r7, [r5, #0x3C]
  0003c	e3530000	 cmp         r3, #0
  00040	11a00003	 movne       r0, r3
  00044	01a00005	 moveq       r0, r5
  00048	e5858080	 str         r8, [r5, #0x80]
  0004c	eb000000	 bl          |?CheckForCompletion@CSDBusRequest@@IAAHXZ|

; 207  :             pCur->DeRef();

  00050	e1a00005	 mov         r0, r5
  00054	eb000000	 bl          |?DeRef@CSDBusRequest@@QAAKXZ|

; 208  :             pCur = pNext;

  00058	e1a05006	 mov         r5, r6
  0005c	e3560000	 cmp         r6, #0
  00060	1afffff2	 bne         |$LL2@RemoveAllR|
  00064		 |$LN1@RemoveAllR|

; 209  :         }
; 210  :         m_pQueueListHead->SetAsyncQueueNext(NULL);

  00064	e5943018	 ldr         r3, [r4, #0x18]
  00068	e3a02000	 mov         r2, #0

; 211  :         m_pQueueListLast = m_pQueueListHead;
; 212  :         CancelRequestFromHC(m_pQueueListHead);

  0006c	e1a00004	 mov         r0, r4
  00070	e5832064	 str         r2, [r3, #0x64]
  00074	e5943000	 ldr         r3, [r4]
  00078	e5942018	 ldr         r2, [r4, #0x18]
  0007c	e5933004	 ldr         r3, [r3, #4]
  00080	e1a01002	 mov         r1, r2
  00084	e584201c	 str         r2, [r4, #0x1C]
  00088	e1a0e00f	 mov         lr, pc
  0008c	e12fff13	 bx          r3
  00090		 |$LN3@RemoveAllR|

; 213  :     }
; 214  :     Unlock();

  00090	e2840004	 add         r0, r4, #4
  00094	eb000000	 bl          LeaveCriticalSection

; 215  :     return TRUE;

  00098	e3a00001	 mov         r0, #1

; 216  : }

  0009c	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  000a0	e12fff1e	 bx          lr
  000a4		 |$M37225|

			 ENDP  ; |?RemoveAllRequest@CSDBusReqAsyncQueue@@QAAHXZ|, CSDBusReqAsyncQueue::RemoveAllRequest

	EXPORT	|?GetRequestFromHead@CSDBusReqAsyncQueue@@QAAPAVCSDBusRequest@@XZ| ; CSDBusReqAsyncQueue::GetRequestFromHead
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T37247| DCD	|$LN12@GetRequest|
	DCD	0x40000d01
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetRequestFromHead@CSDBusReqAsyncQueue@@QAAPAVCSDBusRequest@@XZ| PROC ; CSDBusReqAsyncQueue::GetRequestFromHead

; 219  : {

  00000		 |$LN12@GetRequest|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37244|
  00004	e1a05000	 mov         r5, r0

; 220  :     Lock();

  00008	e2850004	 add         r0, r5, #4
  0000c	eb000000	 bl          EnterCriticalSection

; 221  :     CSDBusRequest * pReturn = m_pQueueListHead;

  00010	e5953018	 ldr         r3, [r5, #0x18]
  00014	e1b04003	 movs        r4, r3

; 222  :     if (pReturn)
; 223  :         pReturn->AddRef();

  00018	1284007c	 addne       r0, r4, #0x7C
  0001c	1b000000	 blne        InterlockedIncrement

; 224  :     Unlock();

  00020	e2850004	 add         r0, r5, #4
  00024	eb000000	 bl          LeaveCriticalSection

; 225  :     return pReturn;
; 226  : }

  00028	e1a00004	 mov         r0, r4
  0002c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00030	e12fff1e	 bx          lr
  00034		 |$M37245|

			 ENDP  ; |?GetRequestFromHead@CSDBusReqAsyncQueue@@QAAPAVCSDBusRequest@@XZ|, CSDBusReqAsyncQueue::GetRequestFromHead

	EXPORT	|??0CSDSlot@@QAA@KAAVCSDHost@@@Z|	; CSDSlot::CSDSlot
	EXPORT	|??_7CSDSlot@@6BCSDWorkItem@@@| [ DATA ] ; CSDSlot::`vftable'
	EXPORT	|??_7CSDSlot@@6BCSDBusReqAsyncQueue@@@| [ DATA ] ; CSDSlot::`vftable'
	EXPORT	|?SubmitRequestToHC@CSDSlot@@UAAJPAVCSDBusRequest@@@Z| ; CSDSlot::SubmitRequestToHC
	EXPORT	|?CancelRequestFromHC@CSDSlot@@UAAHPAVCSDBusRequest@@@Z| ; CSDSlot::CancelRequestFromHC
	EXPORT	|?SlotStatusChangeProcessing@CSDSlot@@EAAXW4_SD_SLOT_EVENT@@@Z| ; CSDSlot::SlotStatusChangeProcessing
	EXPORT	|?Init@CSDSlot@@UAAHXZ|			; CSDSlot::Init
	EXPORT	|?Attach@CSDSlot@@UAAHXZ|		; CSDSlot::Attach
	EXPORT	|?Detach@CSDSlot@@UAAHXZ|		; CSDSlot::Detach
	EXPORT	|?PowerUp@CSDSlot@@UAAXXZ|		; CSDSlot::PowerUp
	EXPORT	|?PowerDown@CSDSlot@@UAAXH@Z|		; CSDSlot::PowerDown
	EXPORT	|?SlotStateChange@CSDSlot@@UAAXW4_SD_SLOT_EVENT@@@Z| ; CSDSlot::SlotStateChange
	EXPORT	|?HandleAddDevice@CSDSlot@@UAAHXZ|	; CSDSlot::HandleAddDevice
	EXPORT	|?HandleRemoveDevice@CSDSlot@@UAAHXZ|	; CSDSlot::HandleRemoveDevice
	EXPORT	|?HandleDeviceInterrupting@CSDSlot@@UAAHXZ| ; CSDSlot::HandleDeviceInterrupting
	EXPORT	|?HandleSlotSelectDeselect@CSDSlot@@UAAHW4_SD_SLOT_EVENT@@@Z| ; CSDSlot::HandleSlotSelectDeselect
	EXPORT	|?CreateChildDevice@CSDSlot@@MAAJW4_SDCARD_DEVICE_TYPE@@KAAVCSDDevice@@@Z| ; CSDSlot::CreateChildDevice
	EXPORT	|?CompleteRequestFromHC@CSDSlot@@UAAHPAVCSDBusRequest@@J@Z| ; CSDSlot::CompleteRequestFromHC
	IMPORT	|??0CSDWorkItem@@QAA@K@Z|		; CSDWorkItem::CSDWorkItem
	IMPORT	|?ThreadRun@CSDWorkItem@@EAAKXZ|	; CSDWorkItem::ThreadRun
	IMPORT	|??_ECSDSlot@@UAAPAXI@Z|, WEAK |??_GCSDSlot@@UAAPAXI@Z| ; CSDSlot::`vector deleting destructor', CSDSlot::`scalar deleting destructor'
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T37271| DCD	|$LN16@CSDSlot|
	DCD	0x40002201

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CSDSlot@@6BCSDWorkItem@@@| DCD |?ThreadRun@CSDWorkItem@@EAAKXZ| ; CSDSlot::`vftable'
	DCD	|?SlotStatusChangeProcessing@CSDSlot@@EAAXW4_SD_SLOT_EVENT@@@Z|
	DCD	|??_ECSDSlot@@UAAPAXI@Z|
	DCD	|?Init@CSDSlot@@UAAHXZ|
	DCD	|?Attach@CSDSlot@@UAAHXZ|
	DCD	|?Detach@CSDSlot@@UAAHXZ|
	DCD	|?PowerUp@CSDSlot@@UAAXXZ|
	DCD	|?PowerDown@CSDSlot@@UAAXH@Z|
	DCD	|?SlotStateChange@CSDSlot@@UAAXW4_SD_SLOT_EVENT@@@Z|
	DCD	|?HandleAddDevice@CSDSlot@@UAAHXZ|
	DCD	|?HandleRemoveDevice@CSDSlot@@UAAHXZ|
	DCD	|?HandleDeviceInterrupting@CSDSlot@@UAAHXZ|
	DCD	|?HandleSlotSelectDeselect@CSDSlot@@UAAHW4_SD_SLOT_EVENT@@@Z|
	DCD	|?CreateChildDevice@CSDSlot@@MAAJW4_SDCARD_DEVICE_TYPE@@KAAVCSDDevice@@@Z|
	DCD	|?CompleteRequestFromHC@CSDSlot@@UAAHPAVCSDBusRequest@@J@Z|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CSDSlot@@6BCSDBusReqAsyncQueue@@@| DCD |?SubmitRequestToHC@CSDSlot@@UAAJPAVCSDBusRequest@@@Z| ; CSDSlot::`vftable'
	DCD	|?CancelRequestFromHC@CSDSlot@@UAAHPAVCSDBusRequest@@@Z|
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CSDSlot@@QAA@KAAVCSDHost@@@Z| PROC	; CSDSlot::CSDSlot

; 235  : {

  00000		 |$LN16@CSDSlot|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M37268|
  00004	e1a04002	 mov         r4, r2
  00008	e1a05001	 mov         r5, r1
  0000c	e1a06000	 mov         r6, r0
  00010	e3a01010	 mov         r1, #0x10
  00014	eb000000	 bl          |??0CSDWorkItem@@QAA@K@Z|
  00018	e2860044	 add         r0, r6, #0x44
  0001c	eb000000	 bl          |??0CSDBusReqAsyncQueue@@QAA@XZ|
  00020	e59fe05c	 ldr         lr, [pc, #0x5C]
  00024	e59f3054	 ldr         r3, [pc, #0x54]
  00028	e28600b4	 add         r0, r6, #0xB4
  0002c	e586e044	 str         lr, [r6, #0x44]
  00030	e5863000	 str         r3, [r6]
  00034	e586407c	 str         r4, [r6, #0x7C]
  00038	e5865080	 str         r5, [r6, #0x80]
  0003c	eb000000	 bl          InitializeCriticalSection
  00040	e28600e8	 add         r0, r6, #0xE8
  00044	eb000000	 bl          InitializeCriticalSection

; 236  :     for (DWORD dwIndex = 0; dwIndex<SD_MAXIMUM_DEVICE_PER_SLOT; dwIndex++) 
; 237  :         m_pFuncDevice[dwIndex] = NULL;

  00048	e28630c8	 add         r3, r6, #0xC8
  0004c	e2832020	 add         r2, r3, #0x20
  00050	e3a01000	 mov         r1, #0
  00054		 |$LN12@CSDSlot|
  00054	e4831004	 str         r1, [r3], #4
  00058	e1530002	 cmp         r3, r2
  0005c	1afffffc	 bne         |$LN12@CSDSlot|

; 238  :     m_SlotState = SlotInactive;

  00060	e3a03000	 mov         r3, #0
  00064	e5863084	 str         r3, [r6, #0x84]

; 239  :     m_curHCOwned = NULL;

  00068	e58630fc	 str         r3, [r6, #0xFC]

; 240  :     m_lcurHCLockCount = NULL;

  0006c	e5863100	 str         r3, [r6, #0x100]

; 241  :     m_Flags = 0 ;

  00070	e5863088	 str         r3, [r6, #0x88]

; 242  : }

  00074	e1a00006	 mov         r0, r6
  00078	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0007c	e12fff1e	 bx          lr
  00080		 |$LN17@CSDSlot|
  00080		 |$LN18@CSDSlot|
  00080	00000000	 DCD         |??_7CSDSlot@@6BCSDWorkItem@@@|
  00084		 |$LN19@CSDSlot|
  00084	00000000	 DCD         |??_7CSDSlot@@6BCSDBusReqAsyncQueue@@@|
  00088		 |$M37269|

			 ENDP  ; |??0CSDSlot@@QAA@KAAVCSDHost@@@Z|, CSDSlot::CSDSlot

; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T37281| DCD	|$LN5@PowerUp|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PowerUp@CSDSlot@@UAAXXZ| PROC	; CSDSlot::PowerUp

; 94   :     virtual VOID PowerUp() { ; }// I don't know what to do now,

  00000		 |$LN5@PowerUp|
  00000		 |$M37278|
  00000	e12fff1e	 bx          lr
  00004		 |$M37279|

			 ENDP  ; |?PowerUp@CSDSlot@@UAAXXZ|, CSDSlot::PowerUp


  00000			 AREA	 |.pdata|, PDATA
|$T37290| DCD	|$LN6@PowerDown|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PowerDown@CSDSlot@@UAAXH@Z| PROC	; CSDSlot::PowerDown

; 95   :     virtual VOID PowerDown(BOOL fKeepPower) { 

  00000		 |$LN6@PowerDown|
  00000		 |$M37287|
  00000	e3510000	 cmp         r1, #0

; 96   :         if (!fKeepPower)
; 97   :             m_SlotState = SlotDeviceEjected;

  00004	03a03003	 moveq       r3, #3
  00008	05803084	 streq       r3, [r0, #0x84]

; 98   :     };

  0000c	e12fff1e	 bx          lr
  00010		 |$M37288|

			 ENDP  ; |?PowerDown@CSDSlot@@UAAXH@Z|, CSDSlot::PowerDown

	EXPORT	|??_C@_1BE@JIIGJPJI@?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@MPCNAKHN@?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|?Init@CSDWorkItem@@QAAHK@Z|		; CSDWorkItem::Init
	IMPORT	|?RegValueDWORD@CSDHostContainer@@SAKPAGK@Z| ; CSDHostContainer::RegValueDWORD
	IMPORT	|memset|
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T37307| DCD	|$LN11@Init@2|
	DCD	0x40002101

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@JIIGJPJI@?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$AA@| DCB "T"
	DCB	0x0, "h", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "h", 0x0, "o"
	DCB	0x0, "l", 0x0, "d", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@MPCNAKHN@?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@| DCB "T"
	DCB	0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "P"
	DCB	0x0, "r", 0x0, "i", 0x0, "o", 0x0, "r", 0x0, "i", 0x0, "t"
	DCB	0x0, "y", 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Init@CSDSlot@@UAAHXZ| PROC		; CSDSlot::Init

; 251  : {

  00000		 |$LN11@Init@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37304|
  00004	e1b04000	 movs        r4, r0

; 252  :     // get the capabilities of this slot
; 253  :     memset((SDCARD_HC_SLOT_INFO *)this, 0, sizeof (SDCARD_HC_SLOT_INFO));

  00008	12840068	 addne       r0, r4, #0x68
  0000c	03a00000	 moveq       r0, #0
  00010	e3a02014	 mov         r2, #0x14
  00014	e3a01000	 mov         r1, #0
  00018	eb000000	 bl          memset

; 254  :     // ??Read Setting From Registry in future??
; 255  :     //by default enable power control at the slot
; 256  :     m_SlotState = SlotInactive; 
; 257  :     m_fEnablePowerControl = TRUE;
; 258  :     m_AllocatedPower = 0;
; 259  :     DWORD dwThreadPrority = CSDHostContainer::RegValueDWORD(SDCARD_THREAD_PRIORITY_KEY,DEFAULT_THREAD_PRIORITY);

  0001c	e59f005c	 ldr         r0, [pc, #0x5C]
  00020	e3a03000	 mov         r3, #0
  00024	e3a05001	 mov         r5, #1
  00028	e3a01064	 mov         r1, #0x64
  0002c	e5843084	 str         r3, [r4, #0x84]
  00030	e58450ac	 str         r5, [r4, #0xAC]
  00034	e1c43bb0	 strh        r3, [r4, #0xB0]
  00038	eb000000	 bl          |?RegValueDWORD@CSDHostContainer@@SAKPAGK@Z|

; 260  :     if (!CSDWorkItem::Init(dwThreadPrority + 1) || !CSDBusReqAsyncQueue::Init()) {

  0003c	e2801001	 add         r1, r0, #1
  00040	e1a00004	 mov         r0, r4
  00044	eb000000	 bl          |?Init@CSDWorkItem@@QAAHK@Z|
  00048	e3500000	 cmp         r0, #0
  0004c	0a000007	 beq         |$LN1@Init@2|

; 263  :     }
; 264  :     m_FastPathThreshHold =  CSDHostContainer::RegValueDWORD(SDCARD_PASTPATH_THRESHOLD,DEFAULT_PASTPATH_THRESHOLD);

  00050	e59f0024	 ldr         r0, [pc, #0x24]
  00054	e3a01b02	 mov         r1, #2, 22
  00058	e5845064	 str         r5, [r4, #0x64]
  0005c	eb000000	 bl          |?RegValueDWORD@CSDHostContainer@@SAKPAGK@Z|
  00060	e5840104	 str         r0, [r4, #0x104]

; 265  :     return TRUE;

  00064	e3a00001	 mov         r0, #1

; 266  : };

  00068	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0006c	e12fff1e	 bx          lr
  00070		 |$LN1@Init@2|

; 261  :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("CSDSlot::Init: CSDWorkItem::Init or CSDBusReqAsyncQueue::Init Failed  \n")));
; 262  :         return FALSE;

  00070	e3a00000	 mov         r0, #0

; 266  : };

  00074	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00078	e12fff1e	 bx          lr
  0007c		 |$LN12@Init@2|
  0007c		 |$LN13@Init@2|
  0007c	00000000	 DCD         |??_C@_1BE@JIIGJPJI@?$AAT?$AAh?$AAr?$AAe?$AAs?$AAh?$AAo?$AAl?$AAd?$AA?$AA@|
  00080		 |$LN14@Init@2|
  00080	00000000	 DCD         |??_C@_1BO@MPCNAKHN@?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AAP?$AAr?$AAi?$AAo?$AAr?$AAi?$AAt?$AAy?$AA?$AA@|
  00084		 |$M37305|

			 ENDP  ; |?Init@CSDSlot@@UAAHXZ|, CSDSlot::Init

; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T37392| DCD	|$LN47@SubmitRequ|
	DCD	0x40004c01
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SubmitRequestToHC@CSDSlot@@UAAJPAVCSDBusRequest@@@Z| PROC ; CSDSlot::SubmitRequestToHC

; 268  : {

  00000		 |$LN47@SubmitRequ|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M37389|
  00004	e1a05001	 mov         r5, r1
  00008	e1a04000	 mov         r4, r0

; 269  :     SD_API_STATUS status = SD_API_STATUS_UNSUCCESSFUL;
; 270  :     m_SdHost.SDHCAccessLock();

  0000c	e5943038	 ldr         r3, [r4, #0x38]
  00010	e3a0610f	 mov         r6, #0xF, 2
  00014	e283002c	 add         r0, r3, #0x2C
  00018	eb000000	 bl          EnterCriticalSection

; 271  :     DEBUGMSG(SDCARD_ZONE_0,(TEXT("SubmitRequestToHC(%x)\n"),pRequest));
; 272  :     if (m_fAttached && SD_API_SUCCESS(CheckSlotReady()) && m_SdHost.IsAttached() &&
; 273  :             m_curHCOwned==NULL && pRequest!=NULL) {

  0001c	e5943020	 ldr         r3, [r4, #0x20]
  00020	e3530000	 cmp         r3, #0
  00024	0a00003b	 beq         |$LN2@SubmitRequ|
  00028	e5943040	 ldr         r3, [r4, #0x40]
  0002c	e3530001	 cmp         r3, #1
  00030	0a000003	 beq         |$LN16@SubmitRequ|
  00034	e3530002	 cmp         r3, #2
  00038	0a000001	 beq         |$LN16@SubmitRequ|
  0003c	e3530006	 cmp         r3, #6
  00040	1a000034	 bne         |$LN2@SubmitRequ|
  00044		 |$LN16@SubmitRequ|
  00044	e5942038	 ldr         r2, [r4, #0x38]
  00048	e5923064	 ldr         r3, [r2, #0x64]
  0004c	e3530000	 cmp         r3, #0
  00050	0a000030	 beq         |$LN2@SubmitRequ|
  00054	e59430b8	 ldr         r3, [r4, #0xB8]
  00058	e3530000	 cmp         r3, #0
  0005c	1a00002d	 bne         |$LN2@SubmitRequ|
  00060	e3550000	 cmp         r5, #0
  00064	0a00002b	 beq         |$LN2@SubmitRequ|

; 274  :         m_curHCOwned = pRequest;
; 275  :         m_lcurHCLockCount = 0 ;

  00068	e3a07000	 mov         r7, #0

; 276  :         status = m_SdHost.BusRequestHandler(m_dwSlotIndex,pRequest);

  0006c	e3520000	 cmp         r2, #0
  00070	e58470bc	 str         r7, [r4, #0xBC]
  00074	e594103c	 ldr         r1, [r4, #0x3C]
  00078	e58450b8	 str         r5, [r4, #0xB8]
  0007c	e5923040	 ldr         r3, [r2, #0x40]
  00080	12820008	 addne       r0, r2, #8
  00084	e2852004	 add         r2, r5, #4
  00088	03a00000	 moveq       r0, #0
  0008c	e1a0e00f	 mov         lr, pc
  00090	e12fff13	 bx          r3
  00094	ea00001b	 b           |$LN44@SubmitRequ|
  00098		 |$LL6@SubmitRequ|

; 277  :         // Retry if needed.
; 278  :         while (!SD_API_SUCCESS(status)) {
; 279  :             if (SD_API_SUCCESS(CheckSlotReady()) && pRequest->IsRequestNeedRetry()) {

  00098	e5943040	 ldr         r3, [r4, #0x40]
  0009c	e3530001	 cmp         r3, #1
  000a0	0a000003	 beq         |$LN27@SubmitRequ|
  000a4	e3530002	 cmp         r3, #2
  000a8	0a000001	 beq         |$LN27@SubmitRequ|
  000ac	e3530006	 cmp         r3, #6
  000b0	1a000016	 bne         |$LN43@SubmitRequ|
  000b4		 |$LN27@SubmitRequ|
  000b4	e1a00005	 mov         r0, r5
  000b8	eb000000	 bl          |?IsRequestNeedRetry@CSDBusRequest@@QAAHXZ|
  000bc	e3500000	 cmp         r0, #0
  000c0	0a000012	 beq         |$LN43@SubmitRequ|

; 280  :                 pRequest->DecRetryCount();

  000c4	e5953010	 ldr         r3, [r5, #0x10]
  000c8	e5c57010	 strb        r7, [r5, #0x10]
  000cc	e5952010	 ldr         r2, [r5, #0x10]
  000d0	e21330ff	 ands        r3, r3, #0xFF
  000d4	12433001	 subne       r3, r3, #1
  000d8	e20330ff	 and         r3, r3, #0xFF
  000dc	e1833002	 orr         r3, r3, r2
  000e0	e5853010	 str         r3, [r5, #0x10]

; 281  :                 status = m_SdHost.BusRequestHandler(m_dwSlotIndex,pRequest);        

  000e4	e5943038	 ldr         r3, [r4, #0x38]
  000e8	e594103c	 ldr         r1, [r4, #0x3C]
  000ec	e2852004	 add         r2, r5, #4
  000f0	e3530000	 cmp         r3, #0
  000f4	12830008	 addne       r0, r3, #8
  000f8	e5933040	 ldr         r3, [r3, #0x40]
  000fc	03a00000	 moveq       r0, #0
  00100	e1a0e00f	 mov         lr, pc
  00104	e12fff13	 bx          r3
  00108		 |$LN44@SubmitRequ|
  00108	e1b06000	 movs        r6, r0
  0010c	4affffe1	 bmi         |$LL6@SubmitRequ|
  00110		 |$LN43@SubmitRequ|

; 282  :             }
; 283  :             else
; 284  :                 break;
; 285  :         }
; 286  :         if (status!=SD_API_STATUS_PENDING) { // This is has been completed.

  00110	e3560001	 cmp         r6, #1

; 287  :             m_curHCOwned = NULL;

  00114	158470b8	 strne       r7, [r4, #0xB8]
  00118		 |$LN2@SubmitRequ|

; 288  :         }
; 289  :     }
; 290  :     else {
; 291  :         ASSERT(FALSE);
; 292  :     }
; 293  :     m_SdHost.SDHCAccessUnlock();

  00118	e5943038	 ldr         r3, [r4, #0x38]
  0011c	e283002c	 add         r0, r3, #0x2C
  00120	eb000000	 bl          LeaveCriticalSection

; 294  :     return status;
; 295  :     
; 296  : }

  00124	e1a00006	 mov         r0, r6
  00128	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  0012c	e12fff1e	 bx          lr
  00130		 |$M37390|

			 ENDP  ; |?SubmitRequestToHC@CSDSlot@@UAAJPAVCSDBusRequest@@@Z|, CSDSlot::SubmitRequestToHC

	EXPORT	|?GetNumOfFunctionDevice@CSDSlot@@QAAKXZ| ; CSDSlot::GetNumOfFunctionDevice
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T37411| DCD	|$LN15@GetNumOfFu|
	DCD	0x40001201
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetNumOfFunctionDevice@CSDSlot@@QAAKXZ| PROC ; CSDSlot::GetNumOfFunctionDevice

; 299  : {

  00000		 |$LN15@GetNumOfFu|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M37408|
  00004	e1a05000	 mov         r5, r0

; 300  :     DWORD dwReturn = 0;
; 301  :     m_SlotLock.Lock();

  00008	e28560b4	 add         r6, r5, #0xB4
  0000c	e1a00006	 mov         r0, r6
  00010	e3a04000	 mov         r4, #0
  00014	eb000000	 bl          EnterCriticalSection
  00018	e3a02008	 mov         r2, #8
  0001c		 |$LL4@GetNumOfFu|

; 302  :     for (DWORD dwIndex = 0; dwIndex< SD_MAXIMUM_DEVICE_PER_SLOT; dwIndex ++) {
; 303  :         if (m_pFuncDevice[dwIndex]) {

  0001c	e59530c8	 ldr         r3, [r5, #0xC8]
  00020	e2855004	 add         r5, r5, #4
  00024	e3530000	 cmp         r3, #0

; 304  :             dwReturn++;

  00028	12844001	 addne       r4, r4, #1
  0002c	e2522001	 subs        r2, r2, #1
  00030	1afffff9	 bne         |$LL4@GetNumOfFu|

; 305  :         }
; 306  :     };
; 307  :     m_SlotLock.Unlock();

  00034	e1a00006	 mov         r0, r6
  00038	eb000000	 bl          LeaveCriticalSection

; 308  :     return dwReturn;
; 309  : }

  0003c	e1a00004	 mov         r0, r4
  00040	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00044	e12fff1e	 bx          lr
  00048		 |$M37409|

			 ENDP  ; |?GetNumOfFunctionDevice@CSDSlot@@QAAKXZ|, CSDSlot::GetNumOfFunctionDevice

	EXPORT	|?RemoveDevice@CSDSlot@@QAAPAVCSDDevice@@K@Z| ; CSDSlot::RemoveDevice
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T37429| DCD	|$LN11@RemoveDevi|
	DCD	0x40001901
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RemoveDevice@CSDSlot@@QAAPAVCSDDevice@@K@Z| PROC ; CSDSlot::RemoveDevice

; 312  : {

  00000		 |$LN11@RemoveDevi|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M37426|
  00004	e1a06001	 mov         r6, r1
  00008	e1a05000	 mov         r5, r0

; 313  :     m_SlotLock.Lock();

  0000c	e28500b4	 add         r0, r5, #0xB4
  00010	eb000000	 bl          EnterCriticalSection

; 314  :     CSDDevice*  pReturn = NULL;
; 315  :     if( dwIndex < SD_MAXIMUM_DEVICE_PER_SLOT )

  00014	e3560008	 cmp         r6, #8

; 316  :     {
; 317  :         pReturn = m_pFuncDevice[dwIndex];

  00018	30853106	 addcc       r3, r5, r6, lsl #2
  0001c	e3a04000	 mov         r4, #0
  00020	359340c8	 ldrcc       r4, [r3, #0xC8]

; 318  :         m_pFuncDevice[dwIndex] = NULL;

  00024	33a02000	 movcc       r2, #0

; 319  :     };
; 320  :     m_SlotLock.Unlock();

  00028	e28500b4	 add         r0, r5, #0xB4
  0002c	358320c8	 strcc       r2, [r3, #0xC8]
  00030	eb000000	 bl          LeaveCriticalSection

; 321  :     if( pReturn ) {   

  00034	e3540000	 cmp         r4, #0
  00038	0a000006	 beq         |$LN1@RemoveDevi|

; 322  :         pReturn->Detach();

  0003c	e5943000	 ldr         r3, [r4]
  00040	e1a00004	 mov         r0, r4
  00044	e593300c	 ldr         r3, [r3, #0xC]
  00048	e1a0e00f	 mov         lr, pc
  0004c	e12fff13	 bx          r3

; 323  :         pReturn->DeRef();

  00050	e1a00004	 mov         r0, r4
  00054	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  00058		 |$LN1@RemoveDevi|

; 324  :     }
; 325  :     return pReturn;
; 326  : }

  00058	e1a00004	 mov         r0, r4
  0005c	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$M37427|

			 ENDP  ; |?RemoveDevice@CSDSlot@@QAAPAVCSDDevice@@K@Z|, CSDSlot::RemoveDevice

	EXPORT	|?InsertDevice@CSDSlot@@QAAPAVCSDDevice@@KPAV2@@Z| ; CSDSlot::InsertDevice
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T37451| DCD	|$LN13@InsertDevi|
	DCD	0x40001601
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InsertDevice@CSDSlot@@QAAPAVCSDDevice@@KPAV2@@Z| PROC ; CSDSlot::InsertDevice

; 328  : {

  00000		 |$LN13@InsertDevi|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M37448|
  00004	e1b04002	 movs        r4, r2
  00008	e1a07001	 mov         r7, r1
  0000c	e1a06000	 mov         r6, r0

; 329  :     CSDDevice*  pReturn = NULL;

  00010	e3a05000	 mov         r5, #0

; 330  :     if( pObject )

  00014	0a00000c	 beq         |$LN9@InsertDevi|

; 331  :     {
; 332  :         m_SlotLock.Lock();

  00018	e28600b4	 add         r0, r6, #0xB4
  0001c	eb000000	 bl          EnterCriticalSection

; 333  :         if( dwIndex < SD_MAXIMUM_DEVICE_PER_SLOT  && m_pFuncDevice[dwIndex]==NULL  ) {

  00020	e3570008	 cmp         r7, #8
  00024	2a000006	 bcs         |$LN7@InsertDevi|
  00028	e0862107	 add         r2, r6, r7, lsl #2
  0002c	e59230c8	 ldr         r3, [r2, #0xC8]
  00030	e3530000	 cmp         r3, #0

; 334  :             pReturn = m_pFuncDevice[dwIndex] = pObject;
; 335  :             pReturn->AddRef();

  00034	02840004	 addeq       r0, r4, #4
  00038	058240c8	 streq       r4, [r2, #0xC8]
  0003c	01a05004	 moveq       r5, r4
  00040	0b000000	 bleq        InterlockedIncrement
  00044		 |$LN7@InsertDevi|

; 336  :         }
; 337  :         m_SlotLock.Unlock();

  00044	e28600b4	 add         r0, r6, #0xB4
  00048	eb000000	 bl          LeaveCriticalSection
  0004c		 |$LN9@InsertDevi|

; 338  :     }
; 339  :     return pReturn;
; 340  : }

  0004c	e1a00005	 mov         r0, r5
  00050	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$M37449|

			 ENDP  ; |?InsertDevice@CSDSlot@@QAAPAVCSDDevice@@KPAV2@@Z|, CSDSlot::InsertDevice

	EXPORT	|?RemoveAllDevice@CSDSlot@@QAAHXZ|	; CSDSlot::RemoveAllDevice

  00000			 AREA	 |.pdata|, PDATA
|$T37464| DCD	|$LN11@RemoveAllD|
	DCD	0x40000f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RemoveAllDevice@CSDSlot@@QAAHXZ| PROC ; CSDSlot::RemoveAllDevice

; 342  : {

  00000		 |$LN11@RemoveAllD|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M37461|
  00004	e1a06000	 mov         r6, r0

; 343  :     for (LONG lIndex=SD_MAXIMUM_DEVICE_PER_SLOT-1; lIndex>=0 ; lIndex--) {

  00008	e3a04007	 mov         r4, #7
  0000c	e286501c	 add         r5, r6, #0x1C
  00010		 |$LL4@RemoveAllD|

; 344  :         if (m_pFuncDevice[lIndex]!=NULL)

  00010	e59530c8	 ldr         r3, [r5, #0xC8]
  00014	e3530000	 cmp         r3, #0

; 345  :             RemoveDevice(lIndex);

  00018	11a01004	 movne       r1, r4
  0001c	11a00006	 movne       r0, r6
  00020	1b000000	 blne        |?RemoveDevice@CSDSlot@@QAAPAVCSDDevice@@K@Z|
  00024	e2544001	 subs        r4, r4, #1
  00028	e2455004	 sub         r5, r5, #4
  0002c	5afffff7	 bpl         |$LL4@RemoveAllD|

; 346  :     }
; 347  :     return TRUE;

  00030	e3a00001	 mov         r0, #1

; 348  : }

  00034	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$M37462|

			 ENDP  ; |?RemoveAllDevice@CSDSlot@@QAAHXZ|, CSDSlot::RemoveAllDevice

; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T37489| DCD	|$LN12@Attach|
	DCD	0x40001702
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Attach@CSDSlot@@UAAHXZ| PROC		; CSDSlot::Attach

; 350  : {

  00000		 |$LN12@Attach|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M37486|
  00008	e3500000	 cmp         r0, #0

; 351  :     SD_API_STATUS status = m_SdHost.SlotOptionHandler( m_dwSlotIndex, SDHCDGetSlotInfo, (SDCARD_HC_SLOT_INFO *)this, sizeof(SDCARD_HC_SLOT_INFO));

  0000c	e590307c	 ldr         r3, [r0, #0x7C]
  00010	12802068	 addne       r2, r0, #0x68
  00014	03a02000	 moveq       r2, #0
  00018	e5901080	 ldr         r1, [r0, #0x80]
  0001c	e3530000	 cmp         r3, #0

; 352  :     if (!SD_API_SUCCESS(status)) {

  00020	e5934044	 ldr         r4, [r3, #0x44]
  00024	12830008	 addne       r0, r3, #8
  00028	e3a05014	 mov         r5, #0x14
  0002c	e1a03002	 mov         r3, r2
  00030	e3a0200b	 mov         r2, #0xB
  00034	03a00000	 moveq       r0, #0
  00038	e58d5000	 str         r5, [sp]
  0003c	e1a0e00f	 mov         lr, pc
  00040	e12fff14	 bx          r4
  00044	e3500000	 cmp         r0, #0

; 353  :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDBusDriver: Failed to get slot info for slot %u\n"), m_dwSlotIndex));
; 354  :         return FALSE;

  00048	43a00000	 movmi       r0, #0

; 355  :     }
; 356  :     return TRUE;

  0004c	53a00001	 movpl       r0, #1

; 357  : }

  00050	e28dd004	 add         sp, sp, #4
  00054	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00058	e12fff1e	 bx          lr
  0005c		 |$M37487|

			 ENDP  ; |?Attach@CSDSlot@@UAAHXZ|, CSDSlot::Attach


  00000			 AREA	 |.pdata|, PDATA
|$T37499| DCD	|$LN5@Detach|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Detach@CSDSlot@@UAAHXZ| PROC		; CSDSlot::Detach

; 359  : {

  00000		 |$LN5@Detach|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37496|

; 360  :     return HandleRemoveDevice();

  00004	e5903000	 ldr         r3, [r0]
  00008	e5933028	 ldr         r3, [r3, #0x28]
  0000c	e1a0e00f	 mov         lr, pc
  00010	e12fff13	 bx          r3

; 361  : }

  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M37497|

			 ENDP  ; |?Detach@CSDSlot@@UAAHXZ|, CSDSlot::Detach

; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T37532| DCD	|$LN30@HandleDevi|
	DCD	0x40005f02
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?HandleDeviceInterrupting@CSDSlot@@UAAHXZ| PROC ; CSDSlot::HandleDeviceInterrupting

; 466  : {

  00000		 |$LN30@HandleDevi|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M37529|
  00008	e1a06000	 mov         r6, r0

; 467  :     SD_API_STATUS status = SD_API_STATUS_UNSUCCESSFUL;
; 468  :     if ((m_Flags & SD_SLOT_FLAG_SDIO_INTERRUPTS_ENABLED)!=0) {

  0000c	e5963088	 ldr         r3, [r6, #0x88]
  00010	e3130001	 tst         r3, #1
  00014	0a000048	 beq         |$LN16@HandleDevi|

; 469  :         CSDDevice * psdDevice = GetFunctionDevice(0);

  00018	e3a01000	 mov         r1, #0
  0001c	eb000000	 bl          |?GetFunctionDevice@CSDSlot@@QAAPAVCSDDevice@@K@Z|

; 470  :         UCHAR regValue = 0 ;

  00020	e3a03000	 mov         r3, #0
  00024	e5cd3008	 strb        r3, [sp, #8]
  00028	e1b07000	 movs        r7, r0

; 471  :         if (psdDevice) {

  0002c	0a000042	 beq         |$LN16@HandleDevi|

; 472  :             // fetch the interrupt pending register 
; 473  :             status = psdDevice->SDReadWriteRegistersDirect_I(
; 474  :                 SD_IO_READ,          
; 475  :                 SD_IO_REG_INT_PENDING ,
; 476  :                 FALSE,
; 477  :                 &regValue,   // reg
; 478  :                 1);           
; 479  :             if (SD_API_SUCCESS(status) ) {

  00030	e5973000	 ldr         r3, [r7]
  00034	e3a08001	 mov         r8, #1
  00038	e28d4008	 add         r4, sp, #8
  0003c	e5935010	 ldr         r5, [r3, #0x10]
  00040	e3a03000	 mov         r3, #0
  00044	e3a02005	 mov         r2, #5
  00048	e3a01000	 mov         r1, #0
  0004c	e1a00007	 mov         r0, r7
  00050	e58d8004	 str         r8, [sp, #4]
  00054	e58d4000	 str         r4, [sp]
  00058	e1a0e00f	 mov         lr, pc
  0005c	e12fff15	 bx          r5
  00060	e3500000	 cmp         r0, #0
  00064	4a000032	 bmi         |$LN13@HandleDevi|

; 480  :                 regValue &= ~1; // Drop First Bit.

  00068	e5dd3008	 ldrb        r3, [sp, #8]
  0006c	e20330fe	 and         r3, r3, #0xFE
  00070	e5cd3008	 strb        r3, [sp, #8]
  00074	ea00002c	 b           |$LN27@HandleDevi|
  00078		 |$LL14@HandleDevi|

; 481  :                 while (regValue) {
; 482  :                     UCHAR regValueLowestBit = ((regValue ^ (regValue -1)) & regValue) ;// Detect Lowest Bit.

  00078	e28230ff	 add         r3, r2, #0xFF
  0007c	e0233002	 eor         r3, r3, r2
  00080	e0033002	 and         r3, r3, r2
  00084	e20330ff	 and         r3, r3, #0xFF

; 483  :                     DWORD dwIndexFunction = 0;
; 484  :                     switch (regValueLowestBit) { // For optimize the speed.

  00088	e3530002	 cmp         r3, #2
  0008c	0a000017	 beq         |$LN10@HandleDevi|
  00090	e3530004	 cmp         r3, #4
  00094	0a000013	 beq         |$LN8@HandleDevi|
  00098	e3530008	 cmp         r3, #8
  0009c	0a00000f	 beq         |$LN7@HandleDevi|
  000a0	e3530010	 cmp         r3, #0x10
  000a4	0a00000b	 beq         |$LN6@HandleDevi|
  000a8	e3530020	 cmp         r3, #0x20
  000ac	0a000007	 beq         |$LN5@HandleDevi|
  000b0	e3530040	 cmp         r3, #0x40
  000b4	0a000003	 beq         |$LN4@HandleDevi|
  000b8	e3530080	 cmp         r3, #0x80
  000bc	1a00000b	 bne         |$LN10@HandleDevi|

; 505  :                       case (1<<7):
; 506  :                         dwIndexFunction=7;

  000c0	e3a01007	 mov         r1, #7

; 507  :                         break;

  000c4	ea00000a	 b           |$LN11@HandleDevi|
  000c8		 |$LN4@HandleDevi|

; 502  :                       case (1<<6):
; 503  :                         dwIndexFunction=6;

  000c8	e3a01006	 mov         r1, #6

; 504  :                         break;

  000cc	ea000008	 b           |$LN11@HandleDevi|
  000d0		 |$LN5@HandleDevi|

; 499  :                       case (1<<5):
; 500  :                         dwIndexFunction=5;

  000d0	e3a01005	 mov         r1, #5

; 501  :                         break;

  000d4	ea000006	 b           |$LN11@HandleDevi|
  000d8		 |$LN6@HandleDevi|

; 496  :                       case (1<<4):
; 497  :                         dwIndexFunction=4;

  000d8	e3a01004	 mov         r1, #4

; 498  :                         break;

  000dc	ea000004	 b           |$LN11@HandleDevi|
  000e0		 |$LN7@HandleDevi|

; 493  :                       case (1<<3):
; 494  :                         dwIndexFunction=3;

  000e0	e3a01003	 mov         r1, #3

; 495  :                         break;

  000e4	ea000002	 b           |$LN11@HandleDevi|
  000e8		 |$LN8@HandleDevi|

; 489  :                         break;
; 490  :                       case (1<<2):
; 491  :                         dwIndexFunction=2;

  000e8	e3a01002	 mov         r1, #2

; 492  :                         break;

  000ec	ea000000	 b           |$LN11@HandleDevi|
  000f0		 |$LN10@HandleDevi|

; 485  :                       default:
; 486  :                         ASSERT(FALSE);
; 487  :                       case (1<<1):
; 488  :                         dwIndexFunction=1;

  000f0	e3a01001	 mov         r1, #1
  000f4		 |$LN11@HandleDevi|

; 508  :                     }
; 509  :                     regValue &= ~regValueLowestBit;

  000f4	e1c23003	 bic         r3, r2, r3

; 510  :                     CSDDevice * psdSubDevice = GetFunctionDevice(dwIndexFunction);

  000f8	e1a00006	 mov         r0, r6
  000fc	e5cd3008	 strb        r3, [sp, #8]
  00100	eb000000	 bl          |?GetFunctionDevice@CSDSlot@@QAAPAVCSDDevice@@K@Z|
  00104	e1b04000	 movs        r4, r0

; 511  :                     if (psdSubDevice) {

  00108	0a000006	 beq         |$LN2@HandleDevi|

; 512  :                         psdSubDevice->HandleDeviceInterrupt();

  0010c	e5943000	 ldr         r3, [r4]
  00110	e1a00004	 mov         r0, r4
  00114	e593302c	 ldr         r3, [r3, #0x2C]
  00118	e1a0e00f	 mov         lr, pc
  0011c	e12fff13	 bx          r3

; 513  :                         psdSubDevice->DeRef();

  00120	e1a00004	 mov         r0, r4
  00124	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  00128		 |$LN2@HandleDevi|
  00128	e5dd3008	 ldrb        r3, [sp, #8]
  0012c		 |$LN27@HandleDevi|
  0012c	e1b02003	 movs        r2, r3
  00130	1affffd0	 bne         |$LL14@HandleDevi|
  00134		 |$LN13@HandleDevi|

; 514  :                     }
; 515  :                     else
; 516  :                         ASSERT(FALSE);
; 517  :                 }
; 518  :                 
; 519  :             }
; 520  :             psdDevice->DeRef();

  00134	e1a00007	 mov         r0, r7
  00138	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  0013c		 |$LN16@HandleDevi|

; 521  :         }
; 522  :     }
; 523  :     // Ack Interupt
; 524  :     GetHost().SlotOptionHandler(m_dwSlotIndex,SDHCDAckSDIOInterrupt,NULL,0);

  0013c	e596307c	 ldr         r3, [r6, #0x7C]
  00140	e5961080	 ldr         r1, [r6, #0x80]
  00144	e3a05000	 mov         r5, #0
  00148	e3530000	 cmp         r3, #0
  0014c	e5934044	 ldr         r4, [r3, #0x44]
  00150	12830008	 addne       r0, r3, #8
  00154	03a00000	 moveq       r0, #0
  00158	e3a03000	 mov         r3, #0
  0015c	e3a02004	 mov         r2, #4
  00160	e58d5000	 str         r5, [sp]
  00164	e1a0e00f	 mov         lr, pc
  00168	e12fff14	 bx          r4

; 525  :     return TRUE;

  0016c	e3a00001	 mov         r0, #1

; 526  : }

  00170	e28dd00c	 add         sp, sp, #0xC
  00174	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00178	e12fff1e	 bx          lr
  0017c		 |$M37530|

			 ENDP  ; |?HandleDeviceInterrupting@CSDSlot@@UAAHXZ|, CSDSlot::HandleDeviceInterrupting

	EXPORT	|?EnumMultiFunction@CSDSlot@@IAAJAAVCSDDevice@@K@Z| ; CSDSlot::EnumMultiFunction
	IMPORT	|?SetupWakeupSupport@CSDDevice@@QAAXXZ|	; CSDDevice::SetupWakeupSupport
	IMPORT	|?SDGetSDIOPnpInformation@CSDDevice@@QAAJAAV1@@Z| ; CSDDevice::SDGetSDIOPnpInformation
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sddevice.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T37558| DCD	|$LN23@EnumMultiF|
	DCD	0x40002f01
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?EnumMultiFunction@CSDSlot@@IAAJAAVCSDDevice@@K@Z| PROC ; CSDSlot::EnumMultiFunction

; 529  : {

  00000		 |$LN23@EnumMultiF|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004		 |$M37555|
  00004	e1a07002	 mov         r7, r2
  00008	e1a08001	 mov         r8, r1
  0000c	e1a09000	 mov         r9, r0

; 530  :     SD_API_STATUS               status;             // status
; 531  :     UCHAR                       currentFunction;    // current function
; 532  :     BOOL                        isCombo = FALSE;    // is combo device flag
; 533  : 
; 534  : 
; 535  :     // check the base type for multifunction or combo device
; 536  :     if (Device_SD_IO ==psdDevice0.GetDeviceType() || Device_SD_Combo == psdDevice0.GetDeviceType()) {

  00010	e5983494	 ldr         r3, [r8, #0x494]
  00014	e3530003	 cmp         r3, #3
  00018	0a000001	 beq         |$LN10@EnumMultiF|
  0001c	e3530004	 cmp         r3, #4

; 561  :     }
; 562  :     else {
; 563  :         return SD_API_STATUS_SUCCESS;

  00020	1a000021	 bne         |$LN7@EnumMultiF|
  00024		 |$LN10@EnumMultiF|

; 537  :         ASSERT(dwNumOfFunc >= 2);
; 538  :         // set up functions 1..7, if present for the parent device
; 539  :         for (currentFunction = 1;currentFunction < dwNumOfFunc; currentFunction++) {

  00024	e3570001	 cmp         r7, #1
  00028	9a00001f	 bls         |$LN7@EnumMultiF|
  0002c	e3a05001	 mov         r5, #1
  00030		 |$LL9@EnumMultiF|

; 540  :             // create SDIO child devices for this parent
; 541  :             status = CreateChildDevice( Device_SD_IO, currentFunction, psdDevice0);

  00030	e5991000	 ldr         r1, [r9]
  00034	e1a03008	 mov         r3, r8
  00038	e1a02005	 mov         r2, r5
  0003c	e5914034	 ldr         r4, [r1, #0x34]
  00040	e3a01003	 mov         r1, #3
  00044	e1a00009	 mov         r0, r9
  00048	e1a0e00f	 mov         lr, pc
  0004c	e12fff14	 bx          r4
  00050	e1b04000	 movs        r4, r0

; 542  :             if (SD_API_SUCCESS(status)) {

  00054	4a000015	 bmi         |$LN1@EnumMultiF|

; 543  :                 CSDDevice * pChildDevice = GetFunctionDevice(currentFunction);

  00058	e1a01005	 mov         r1, r5
  0005c	e1a00009	 mov         r0, r9
  00060	eb000000	 bl          |?GetFunctionDevice@CSDSlot@@QAAPAVCSDDevice@@K@Z|
  00064	e1b06000	 movs        r6, r0

; 544  :                 if (pChildDevice) {

  00068	0a000008	 beq         |$LN5@EnumMultiF|

; 545  :                     status = pChildDevice->SDGetSDIOPnpInformation(psdDevice0);

  0006c	e1a01008	 mov         r1, r8
  00070	e1a00006	 mov         r0, r6
  00074	eb000000	 bl          |?SDGetSDIOPnpInformation@CSDDevice@@QAAJAAV1@@Z|
  00078	e1b04000	 movs        r4, r0

; 546  :                     if (SD_API_SUCCESS(status)) {
; 547  :                         pChildDevice->SetupWakeupSupport();

  0007c	51a00006	 movpl       r0, r6
  00080	5b000000	 blpl        |?SetupWakeupSupport@CSDDevice@@QAAXXZ|

; 548  :                     }
; 549  :                     pChildDevice->DeRef();

  00084	e1a00006	 mov         r0, r6
  00088	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|

; 550  :                 }
; 551  :                 else {

  0008c	ea000000	 b           |$LN3@EnumMultiF|
  00090		 |$LN5@EnumMultiF|

; 552  :                     status = SD_API_STATUS_UNSUCCESSFUL;

  00090	e3a0410f	 mov         r4, #0xF, 2
  00094		 |$LN3@EnumMultiF|

; 553  :                 }
; 554  :             }
; 555  :             if (!SD_API_SUCCESS(status)) {

  00094	e3540000	 cmp         r4, #0
  00098	4a000004	 bmi         |$LN1@EnumMultiF|
  0009c	e2853001	 add         r3, r5, #1
  000a0	e20350ff	 and         r5, r3, #0xFF
  000a4	e1550007	 cmp         r5, r7
  000a8	3affffe0	 bcc         |$LL9@EnumMultiF|
  000ac		 |$LN7@EnumMultiF|

; 556  :                 ASSERT(FALSE);
; 557  :                 return status;
; 558  :             }
; 559  :         }
; 560  :         return SD_API_STATUS_SUCCESS;

  000ac	e3a04000	 mov         r4, #0
  000b0		 |$LN1@EnumMultiF|

; 564  :     }
; 565  : }

  000b0	e1a00004	 mov         r0, r4
  000b4	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  000b8	e12fff1e	 bx          lr
  000bc		 |$M37556|

			 ENDP  ; |?EnumMultiFunction@CSDSlot@@IAAJAAVCSDDevice@@K@Z|, CSDSlot::EnumMultiFunction

	IMPORT	|?CopyContentFromParent@CSDDevice@@QAAXAAV1@@Z| ; CSDDevice::CopyContentFromParent
	IMPORT	|??0CSDDevice@@QAA@KAAVCSDSlot@@@Z|	; CSDDevice::CSDDevice
	IMPORT	|??2@YAPAXI@Z|				; operator new
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sddevice.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T37589| DCD	|$LN18@CreateChil|
	DCD	0x40004001
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CreateChildDevice@CSDSlot@@MAAJW4_SDCARD_DEVICE_TYPE@@KAAVCSDDevice@@@Z| PROC ; CSDSlot::CreateChildDevice

; 567  : {

  00000		 |$LN18@CreateChil|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004		 |$M37586|
  00004	e1a08003	 mov         r8, r3
  00008	e1a07002	 mov         r7, r2
  0000c	e1a09001	 mov         r9, r1
  00010	e1a06000	 mov         r6, r0
  00014	e3a03c05	 mov         r3, #5, 24

; 568  :     SD_API_STATUS status = SD_API_STATUS_INVALID_PARAMETER;
; 569  :     CSDDevice*  pNewDevice = new CSDDevice(dwFunctionIndex,*this);

  00018	e3830068	 orr         r0, r3, #0x68
  0001c	e3a0511f	 mov         r5, #0x1F, 2
  00020	eb000000	 bl          |??2@YAPAXI@Z|
  00024	e3500000	 cmp         r0, #0
  00028	0a000004	 beq         |$LN8@CreateChil|
  0002c	e1a02006	 mov         r2, r6
  00030	e1a01007	 mov         r1, r7
  00034	eb000000	 bl          |??0CSDDevice@@QAA@KAAVCSDSlot@@@Z|
  00038	e1a04000	 mov         r4, r0
  0003c	ea000000	 b           |$LN9@CreateChil|
  00040		 |$LN8@CreateChil|
  00040	e3a04000	 mov         r4, #0
  00044		 |$LN9@CreateChil|

; 570  :     if (pNewDevice && pNewDevice->Init() && InsertDevice(dwFunctionIndex, pNewDevice)) {

  00044	e3540000	 cmp         r4, #0
  00048	0a000028	 beq         |$LN10@CreateChil|
  0004c	e5943000	 ldr         r3, [r4]
  00050	e1a00004	 mov         r0, r4
  00054	e5933004	 ldr         r3, [r3, #4]
  00058	e1a0e00f	 mov         lr, pc
  0005c	e12fff13	 bx          r3
  00060	e3500000	 cmp         r0, #0
  00064	0a00001b	 beq         |$LN5@CreateChil|
  00068	e1a02004	 mov         r2, r4
  0006c	e1a01007	 mov         r1, r7
  00070	e1a00006	 mov         r0, r6
  00074	eb000000	 bl          |?InsertDevice@CSDSlot@@QAAPAVCSDDevice@@KPAV2@@Z|
  00078	e3500000	 cmp         r0, #0
  0007c	0a000015	 beq         |$LN5@CreateChil|

; 571  :         CSDDevice * psdDevice = GetFunctionDevice(dwFunctionIndex);

  00080	e1a01007	 mov         r1, r7
  00084	e1a00006	 mov         r0, r6
  00088	eb000000	 bl          |?GetFunctionDevice@CSDSlot@@QAAPAVCSDDevice@@K@Z|
  0008c	e1b04000	 movs        r4, r0

; 572  :         if (psdDevice) {

  00090	0a000017	 beq         |$LN2@CreateChil|

; 573  :             if (m_SdHost.IsAttached()) {

  00094	e596307c	 ldr         r3, [r6, #0x7C]
  00098	e5933064	 ldr         r3, [r3, #0x64]
  0009c	e3530000	 cmp         r3, #0
  000a0	0a000008	 beq         |$LN14@CreateChil|

; 574  :                 psdDevice->Attach();

  000a4	e5943000	 ldr         r3, [r4]
  000a8	e1a00004	 mov         r0, r4
  000ac	e5933008	 ldr         r3, [r3, #8]
  000b0	e1a0e00f	 mov         lr, pc
  000b4	e12fff13	 bx          r3

; 575  :                 psdDevice->CopyContentFromParent(psdDevice0);

  000b8	e1a01008	 mov         r1, r8
  000bc	e1a00004	 mov         r0, r4
  000c0	eb000000	 bl          |?CopyContentFromParent@CSDDevice@@QAAXAAV1@@Z|

; 576  :                 psdDevice->SetDeviceType(sdCard_DeviceType);

  000c4	e5849494	 str         r9, [r4, #0x494]
  000c8		 |$LN14@CreateChil|

; 577  :             }
; 578  :             psdDevice->DeRef();

  000c8	e1a00004	 mov         r0, r4
  000cc	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|

; 579  :             status = SD_API_STATUS_SUCCESS ;

  000d0	e3a05000	 mov         r5, #0

; 580  :         }
; 581  :         
; 582  :     }
; 583  :     else {

  000d4	ea000006	 b           |$LN2@CreateChil|
  000d8		 |$LN5@CreateChil|

; 584  :         ASSERT(FALSE);
; 585  :         if (pNewDevice)
; 586  :             delete pNewDevice;

  000d8	e5943000	 ldr         r3, [r4]
  000dc	e3a01001	 mov         r1, #1
  000e0	e1a00004	 mov         r0, r4
  000e4	e5933000	 ldr         r3, [r3]
  000e8	e1a0e00f	 mov         lr, pc
  000ec	e12fff13	 bx          r3
  000f0		 |$LN10@CreateChil|

; 587  :         status = SD_API_STATUS_INSUFFICIENT_RESOURCES;

  000f0	e3a0513b	 mov         r5, #0x3B, 2
  000f4		 |$LN2@CreateChil|

; 588  :     }
; 589  :     ASSERT(SD_API_SUCCESS(status));
; 590  :     return status;
; 591  : }

  000f4	e1a00005	 mov         r0, r5
  000f8	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  000fc	e12fff1e	 bx          lr
  00100		 |$M37587|

			 ENDP  ; |?CreateChildDevice@CSDSlot@@MAAJW4_SDCARD_DEVICE_TYPE@@KAAVCSDDevice@@@Z|, CSDSlot::CreateChildDevice

; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T37628| DCD	|$LN18@CancelRequ|
	DCD	0x40002401
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CancelRequestFromHC@CSDSlot@@UAAHPAVCSDBusRequest@@@Z| PROC ; CSDSlot::CancelRequestFromHC

; 593  : {

  00000		 |$LN18@CancelRequ|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M37625|
  00004	e1a05001	 mov         r5, r1
  00008	e1a04000	 mov         r4, r0

; 594  :     BOOL fRetrun = FALSE;
; 595  :     m_SdHost.SDHCAccessLock();

  0000c	e5943038	 ldr         r3, [r4, #0x38]
  00010	e3a06000	 mov         r6, #0
  00014	e283002c	 add         r0, r3, #0x2C
  00018	eb000000	 bl          EnterCriticalSection

; 596  :     DEBUGMSG(SDCARD_ZONE_0,(TEXT("CancelRequestFromHC(%x)"),pRequest));
; 597  :     if (m_SdHost.IsAttached() && m_curHCOwned && m_lcurHCLockCount == 0 && pRequest == m_curHCOwned) {

  0001c	e5941038	 ldr         r1, [r4, #0x38]
  00020	e5913064	 ldr         r3, [r1, #0x64]
  00024	e3530000	 cmp         r3, #0
  00028	0a000012	 beq         |$LN1@CancelRequ|
  0002c	e59430b8	 ldr         r3, [r4, #0xB8]
  00030	e1b02003	 movs        r2, r3
  00034	0a00000f	 beq         |$LN1@CancelRequ|
  00038	e59430bc	 ldr         r3, [r4, #0xBC]
  0003c	e3530000	 cmp         r3, #0
  00040	1a00000c	 bne         |$LN1@CancelRequ|
  00044	e1550002	 cmp         r5, r2
  00048	1a00000a	 bne         |$LN1@CancelRequ|

; 598  :         fRetrun = m_SdHost.CancelIOHandler(m_dwSlotIndex, pRequest );

  0004c	e3550000	 cmp         r5, #0
  00050	12852004	 addne       r2, r5, #4
  00054	03a02000	 moveq       r2, #0
  00058	e1b03001	 movs        r3, r1
  0005c	e594103c	 ldr         r1, [r4, #0x3C]
  00060	12830008	 addne       r0, r3, #8
  00064	e5933048	 ldr         r3, [r3, #0x48]
  00068	03a00000	 moveq       r0, #0
  0006c	e1a0e00f	 mov         lr, pc
  00070	e12fff13	 bx          r3
  00074	e1a06000	 mov         r6, r0
  00078		 |$LN1@CancelRequ|

; 599  :     }
; 600  :     m_SdHost.SDHCAccessUnlock();

  00078	e5943038	 ldr         r3, [r4, #0x38]
  0007c	e283002c	 add         r0, r3, #0x2C
  00080	eb000000	 bl          LeaveCriticalSection

; 601  :     return fRetrun;
; 602  : }

  00084	e1a00006	 mov         r0, r6
  00088	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0008c	e12fff1e	 bx          lr
  00090		 |$M37626|

			 ENDP  ; |?CancelRequestFromHC@CSDSlot@@UAAHPAVCSDBusRequest@@@Z|, CSDSlot::CancelRequestFromHC

; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T37649| DCD	|$LN11@CompleteRe@2|
	DCD	0x40001b01
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CompleteRequestFromHC@CSDSlot@@UAAHPAVCSDBusRequest@@J@Z| PROC ; CSDSlot::CompleteRequestFromHC

; 604  : {

  00000		 |$LN11@CompleteRe@2|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M37646|
  00004	e1a07002	 mov         r7, r2
  00008	e1a06001	 mov         r6, r1
  0000c	e1a04000	 mov         r4, r0

; 605  :     BOOL fRetrun = FALSE;
; 606  :     m_SdHost.SDHCAccessLock();

  00010	e594307c	 ldr         r3, [r4, #0x7C]
  00014	e3a05000	 mov         r5, #0
  00018	e283002c	 add         r0, r3, #0x2C
  0001c	eb000000	 bl          EnterCriticalSection

; 607  :     DEBUGMSG(SDCARD_ZONE_0,(TEXT("CompleteRequestFromHC(%x,%x)\n"),pRequest,status));
; 608  :     if ( m_curHCOwned && pRequest == m_curHCOwned) {

  00020	e59430fc	 ldr         r3, [r4, #0xFC]
  00024	e3530000	 cmp         r3, #0
  00028	0a000009	 beq         |$LN2@CompleteRe@2|
  0002c	e1560003	 cmp         r6, r3
  00030	1a000007	 bne         |$LN2@CompleteRe@2|

; 609  :         m_curHCOwned = NULL;

  00034	e3a03000	 mov         r3, #0

; 610  :         m_lcurHCLockCount = 0 ;
; 611  :         CompleteRequest(pRequest, status );

  00038	e1a02007	 mov         r2, r7
  0003c	e1a01006	 mov         r1, r6
  00040	e2840044	 add         r0, r4, #0x44
  00044	e58430fc	 str         r3, [r4, #0xFC]
  00048	e5843100	 str         r3, [r4, #0x100]
  0004c	eb000000	 bl          |?CompleteRequest@CSDBusReqAsyncQueue@@QAAPAVCSDBusRequest@@PAV2@J@Z|

; 612  :         fRetrun = TRUE;

  00050	e3a05001	 mov         r5, #1
  00054		 |$LN2@CompleteRe@2|

; 613  :     }
; 614  :     else {
; 615  :         ASSERT(FALSE);
; 616  :     }
; 617  :     m_SdHost.SDHCAccessUnlock();

  00054	e594307c	 ldr         r3, [r4, #0x7C]
  00058	e283002c	 add         r0, r3, #0x2C
  0005c	eb000000	 bl          LeaveCriticalSection

; 618  :     return fRetrun;
; 619  : }

  00060	e1a00005	 mov         r0, r5
  00064	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00068	e12fff1e	 bx          lr
  0006c		 |$M37647|

			 ENDP  ; |?CompleteRequestFromHC@CSDSlot@@UAAHPAVCSDBusRequest@@J@Z|, CSDSlot::CompleteRequestFromHC

	EXPORT	|?SDHCGetAndLockCurrentRequest_I@CSDSlot@@QAAPAVCSDBusRequest@@XZ| ; CSDSlot::SDHCGetAndLockCurrentRequest_I
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T37668| DCD	|$LN10@SDHCGetAnd|
	DCD	0x40001201
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SDHCGetAndLockCurrentRequest_I@CSDSlot@@QAAPAVCSDBusRequest@@XZ| PROC ; CSDSlot::SDHCGetAndLockCurrentRequest_I

; 622  : {

  00000		 |$LN10@SDHCGetAnd|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37665|
  00004	e1a04000	 mov         r4, r0

; 623  :     CSDBusRequest * pReturn = NULL;
; 624  :     m_SdHost.SDHCAccessLock();

  00008	e594307c	 ldr         r3, [r4, #0x7C]
  0000c	e3a05000	 mov         r5, #0
  00010	e283002c	 add         r0, r3, #0x2C
  00014	eb000000	 bl          EnterCriticalSection

; 625  :     DEBUGMSG(SDCARD_ZONE_0,(TEXT("SDHCGetAndLockCurrentRequest_I,m_curHCOwned=%x\n"),m_curHCOwned));
; 626  :     if (m_curHCOwned) {

  00018	e59430fc	 ldr         r3, [r4, #0xFC]
  0001c	e1b02003	 movs        r2, r3

; 627  :         m_lcurHCLockCount++;

  00020	15943100	 ldrne       r3, [r4, #0x100]

; 628  :         pReturn = m_curHCOwned;

  00024	11a05002	 movne       r5, r2
  00028	12833001	 addne       r3, r3, #1
  0002c	15843100	 strne       r3, [r4, #0x100]

; 629  :     }
; 630  :     m_SdHost.SDHCAccessUnlock();

  00030	e594307c	 ldr         r3, [r4, #0x7C]
  00034	e283002c	 add         r0, r3, #0x2C
  00038	eb000000	 bl          LeaveCriticalSection

; 631  :     return pReturn;
; 632  : }

  0003c	e1a00005	 mov         r0, r5
  00040	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00044	e12fff1e	 bx          lr
  00048		 |$M37666|

			 ENDP  ; |?SDHCGetAndLockCurrentRequest_I@CSDSlot@@QAAPAVCSDBusRequest@@XZ|, CSDSlot::SDHCGetAndLockCurrentRequest_I

	EXPORT	|?SDHCDUnlockRequest_I@CSDSlot@@QAAXPAU_SD_BUS_REQUEST@@@Z| ; CSDSlot::SDHCDUnlockRequest_I
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T37687| DCD	|$LN12@SDHCDUnloc|
	DCD	0x40001501
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SDHCDUnlockRequest_I@CSDSlot@@QAAXPAU_SD_BUS_REQUEST@@@Z| PROC ; CSDSlot::SDHCDUnlockRequest_I

; 634  : {

  00000		 |$LN12@SDHCDUnloc|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37684|
  00004	e1a05001	 mov         r5, r1
  00008	e1a04000	 mov         r4, r0

; 635  :     m_SdHost.SDHCAccessLock();

  0000c	e594307c	 ldr         r3, [r4, #0x7C]
  00010	e283002c	 add         r0, r3, #0x2C
  00014	eb000000	 bl          EnterCriticalSection

; 636  :     DEBUGMSG(SDCARD_ZONE_0,(TEXT("SDHCDUnlockRequest_I(%x), m_curHCOwned=%x\n"),hReques,m_curHCOwned));
; 637  :     if (m_curHCOwned!=NULL && m_curHCOwned == hReques && m_lcurHCLockCount) {

  00018	e59430fc	 ldr         r3, [r4, #0xFC]
  0001c	e3530000	 cmp         r3, #0
  00020	0a000006	 beq         |$LN1@SDHCDUnloc|
  00024	e2833004	 add         r3, r3, #4
  00028	e1530005	 cmp         r3, r5
  0002c	1a000003	 bne         |$LN1@SDHCDUnloc|
  00030	e5943100	 ldr         r3, [r4, #0x100]
  00034	e3530000	 cmp         r3, #0

; 638  :         m_lcurHCLockCount--;

  00038	12433001	 subne       r3, r3, #1
  0003c	15843100	 strne       r3, [r4, #0x100]
  00040		 |$LN1@SDHCDUnloc|

; 639  :     }
; 640  :     m_SdHost.SDHCAccessUnlock();

  00040	e594307c	 ldr         r3, [r4, #0x7C]
  00044	e283002c	 add         r0, r3, #0x2C
  00048	eb000000	 bl          LeaveCriticalSection

; 641  : };

  0004c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$M37685|

			 ENDP  ; |?SDHCDUnlockRequest_I@CSDSlot@@QAAXPAU_SD_BUS_REQUEST@@@Z|, CSDSlot::SDHCDUnlockRequest_I


  00000			 AREA	 |.pdata|, PDATA
|$T37696| DCD	|$LN12@SlotStatus|
	DCD	0x40002301
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SlotStatusChangeProcessing@CSDSlot@@EAAXW4_SD_SLOT_EVENT@@@Z| PROC ; CSDSlot::SlotStatusChangeProcessing

; 648  : {

  00000		 |$LN12@SlotStatus|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37693|

; 649  :     switch (Event) {

  00004	e3510001	 cmp         r1, #1
  00008	0a000019	 beq         |$LN3@SlotStatus|
  0000c	e3510002	 cmp         r1, #2
  00010	0a000011	 beq         |$LN4@SlotStatus|
  00014	e3510003	 cmp         r1, #3
  00018	0a000009	 beq         |$LN5@SlotStatus|
  0001c	e3510004	 cmp         r1, #4
  00020	da000017	 ble         |$LN6@SlotStatus|
  00024	e3510007	 cmp         r1, #7
  00028	ca000015	 bgt         |$LN6@SlotStatus|

; 658  :         break;
; 659  :       case SlotDeselectRequest:
; 660  :       case SlotSelectRequest:
; 661  :       case SlotResetRequest:
; 662  :         HandleSlotSelectDeselect(Event);

  0002c	e5903000	 ldr         r3, [r0]
  00030	e5933030	 ldr         r3, [r3, #0x30]
  00034	e1a0e00f	 mov         lr, pc
  00038	e12fff13	 bx          r3

; 663  :       break;
; 664  :     default:
; 665  :         DEBUG_CHECK(FALSE, (TEXT("SDBusDriver: SlotStatusChange Unknown Slot Event : %d \n"),Event));
; 666  :         break;
; 667  :     }
; 668  : }

  0003c	e49de004	 ldr         lr, [sp], #4
  00040	e12fff1e	 bx          lr
  00044		 |$LN5@SlotStatus|

; 650  :       case DeviceInterrupting:
; 651  :         HandleDeviceInterrupting();

  00044	e5903000	 ldr         r3, [r0]
  00048	e593302c	 ldr         r3, [r3, #0x2C]
  0004c	e1a0e00f	 mov         lr, pc
  00050	e12fff13	 bx          r3

; 663  :       break;
; 664  :     default:
; 665  :         DEBUG_CHECK(FALSE, (TEXT("SDBusDriver: SlotStatusChange Unknown Slot Event : %d \n"),Event));
; 666  :         break;
; 667  :     }
; 668  : }

  00054	e49de004	 ldr         lr, [sp], #4
  00058	e12fff1e	 bx          lr
  0005c		 |$LN4@SlotStatus|

; 652  :         break;
; 653  :       case DeviceInserted:
; 654  :         HandleAddDevice();

  0005c	e5903000	 ldr         r3, [r0]
  00060	e5933024	 ldr         r3, [r3, #0x24]
  00064	e1a0e00f	 mov         lr, pc
  00068	e12fff13	 bx          r3

; 663  :       break;
; 664  :     default:
; 665  :         DEBUG_CHECK(FALSE, (TEXT("SDBusDriver: SlotStatusChange Unknown Slot Event : %d \n"),Event));
; 666  :         break;
; 667  :     }
; 668  : }

  0006c	e49de004	 ldr         lr, [sp], #4
  00070	e12fff1e	 bx          lr
  00074		 |$LN3@SlotStatus|

; 655  :         break;
; 656  :       case DeviceEjected:
; 657  :         HandleRemoveDevice();

  00074	e5903000	 ldr         r3, [r0]
  00078	e5933028	 ldr         r3, [r3, #0x28]
  0007c	e1a0e00f	 mov         lr, pc
  00080	e12fff13	 bx          r3
  00084		 |$LN6@SlotStatus|

; 663  :       break;
; 664  :     default:
; 665  :         DEBUG_CHECK(FALSE, (TEXT("SDBusDriver: SlotStatusChange Unknown Slot Event : %d \n"),Event));
; 666  :         break;
; 667  :     }
; 668  : }

  00084	e49de004	 ldr         lr, [sp], #4
  00088	e12fff1e	 bx          lr
  0008c		 |$M37694|

			 ENDP  ; |?SlotStatusChangeProcessing@CSDSlot@@EAAXW4_SD_SLOT_EVENT@@@Z|, CSDSlot::SlotStatusChangeProcessing

	IMPORT	|?PostEvent@CSDWorkItem@@QAAHW4_SD_SLOT_EVENT@@K@Z| ; CSDWorkItem::PostEvent

  00000			 AREA	 |.pdata|, PDATA
|$T37705| DCD	|$LN10@SlotStateC|
	DCD	0x40000d01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SlotStateChange@CSDSlot@@UAAXW4_SD_SLOT_EVENT@@@Z| PROC ; CSDSlot::SlotStateChange

; 683  : {

  00000		 |$LN10@SlotStateC|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37702|

; 684  :     switch (Event) {

  00004	e3510000	 cmp         r1, #0
  00008	da000007	 ble         |$LN1@SlotStateC|
  0000c	e3510003	 cmp         r1, #3
  00010	da000003	 ble         |$LN3@SlotStateC|
  00014	e3510004	 cmp         r1, #4
  00018	da000003	 ble         |$LN1@SlotStateC|
  0001c	e3510007	 cmp         r1, #7
  00020	ca000001	 bgt         |$LN1@SlotStateC|
  00024		 |$LN3@SlotStateC|

; 685  :       case DeviceInterrupting: // We should do interrupt callback at SDHC IST.
; 686  :       case DeviceInserted:
; 687  :       case DeviceEjected:
; 688  :       case SlotDeselectRequest:
; 689  :       case SlotSelectRequest:
; 690  :       case SlotResetRequest:
; 691  :         // post this message to the work item for each slot
; 692  :         PostEvent(Event);

  00024	e3e02000	 mvn         r2, #0
  00028	eb000000	 bl          |?PostEvent@CSDWorkItem@@QAAHW4_SD_SLOT_EVENT@@K@Z|
  0002c		 |$LN1@SlotStateC|

; 693  :         break;
; 694  :       case BusRequestComplete:
; 695  :         ASSERT(FALSE);
; 696  :         break;
; 697  :       default:
; 698  :         DEBUGCHK(FALSE);
; 699  :     }
; 700  : }

  0002c	e49de004	 ldr         lr, [sp], #4
  00030	e12fff1e	 bx          lr
  00034		 |$M37703|

			 ENDP  ; |?SlotStateChange@CSDSlot@@UAAXW4_SD_SLOT_EVENT@@@Z|, CSDSlot::SlotStateChange

	EXPORT	|?DelayForPowerUp@CSDSlot@@IAAXXZ|	; CSDSlot::DelayForPowerUp
	IMPORT	|Sleep|

  00000			 AREA	 |.pdata|, PDATA
|$T37714| DCD	|$LN8@DelayForPo|
	DCD	0x40000801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DelayForPowerUp@CSDSlot@@IAAXXZ| PROC ; CSDSlot::DelayForPowerUp

; 710  : {

  00000		 |$LN8@DelayForPo|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37711|

; 711  :     // delay for power up
; 712  :     if (PowerUpDelay != 0) {

  00004	e5903078	 ldr         r3, [r0, #0x78]
  00008	e3530000	 cmp         r3, #0

; 713  :         Sleep(PowerUpDelay);

  0000c	11a00003	 movne       r0, r3

; 714  :     } else {
; 715  :         // powerup delay should be set
; 716  :         DEBUG_CHECK(FALSE, (TEXT("SDBusDriver: Slot Delay is 0!!!\n")));
; 717  :         Sleep(500);

  00010	03a00f7d	 moveq       r0, #0x7D, 30
  00014	eb000000	 bl          Sleep

; 718  :     }
; 719  : }

  00018	e49de004	 ldr         lr, [sp], #4
  0001c	e12fff1e	 bx          lr
  00020		 |$M37712|

			 ENDP  ; |?DelayForPowerUp@CSDSlot@@IAAXXZ|, CSDSlot::DelayForPowerUp

	EXPORT	|?SDSetCardInterfaceForSlot@CSDSlot@@IAAJPAU_SD_CARD_INTERFACE_EX@@@Z| ; CSDSlot::SDSetCardInterfaceForSlot
	IMPORT	|?SlotSetupInterface@CSDHost@@IAAJKPAU_SD_CARD_INTERFACE_EX@@@Z| ; CSDHost::SlotSetupInterface

  00000			 AREA	 |.pdata|, PDATA
|$T37725| DCD	|$LN7@SDSetCardI|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SDSetCardInterfaceForSlot@CSDSlot@@IAAJPAU_SD_CARD_INTERFACE_EX@@@Z| PROC ; CSDSlot::SDSetCardInterfaceForSlot

; 732  : {

  00000		 |$LN7@SDSetCardI|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37722|
  00004	e1a02001	 mov         r2, r1

; 733  :     SD_API_STATUS   status;             // intermediate status
; 734  :     DWORD           origClockSetting;   // original clock setting upon entry
; 735  : 
; 736  :     origClockSetting = pSetting->ClockRate;
; 737  : 
; 738  :     status = m_SdHost.SlotSetupInterface(m_dwSlotIndex,pSetting);

  00008	e5901080	 ldr         r1, [r0, #0x80]
  0000c	e590007c	 ldr         r0, [r0, #0x7C]
  00010	eb000000	 bl          |?SlotSetupInterface@CSDHost@@IAAJKPAU_SD_CARD_INTERFACE_EX@@@Z|

; 739  : 
; 740  :     if (SD_API_SUCCESS(status)) {
; 741  :         if (origClockSetting != pSetting->ClockRate){
; 742  :             DEBUGMSG(SDCARD_ZONE_WARN, (TEXT("SDSetCardInterfaceForSlot - HC ClockRate differs desired setting: desired: %d Hz, Actual : %d Hz \n"),
; 743  :                 origClockSetting, pSetting->ClockRate));
; 744  :         }
; 745  : 
; 746  :     }
; 747  :     return status;
; 748  : }

  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M37723|

			 ENDP  ; |?SDSetCardInterfaceForSlot@CSDSlot@@IAAJPAU_SD_CARD_INTERFACE_EX@@@Z|, CSDSlot::SDSetCardInterfaceForSlot

	EXPORT	|?SDGetOperationalVoltageRange@CSDSlot@@IAAKK@Z| ; CSDSlot::SDGetOperationalVoltageRange

  00000			 AREA	 |.pdata|, PDATA
|$T37740| DCD	|$LN16@SDGetOpera|
	DCD	0x40001801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SDGetOperationalVoltageRange@CSDSlot@@IAAKK@Z| PROC ; CSDSlot::SDGetOperationalVoltageRange

; 763  : {

  00000		 |$LN16@SDGetOpera|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37737|

; 764  :     ULONG i;            // loop variable 
; 765  : 
; 766  :     // check to see if the voltages can be supported
; 767  :     if (OcrValue & VoltageWindowMask) {

  00004	e590e06c	 ldr         lr, [r0, #0x6C]
  00008	e11e0001	 tst         lr, r1
  0000c	0a00000c	 beq         |$LN8@SDGetOpera|

; 768  :         // check to see if the voltage meets the desired voltage range
; 769  :         if (OcrValue & DesiredVoltageMask) {

  00010	e5903070	 ldr         r3, [r0, #0x70]
  00014	e1130001	 tst         r3, r1

; 770  :             DEBUGMSG(SDBUS_ZONE_DEVICE, (TEXT("SDBusDriver: Device Power Range:0x%08X matches HC desired power: 0x%08X \n"), 
; 771  :                 OcrValue, DesiredVoltageMask)); 
; 772  :             // returned desired voltage range suggested by host controller 
; 773  :             return DesiredVoltageMask;

  00018	11a00003	 movne       r0, r3

; 794  :     }
; 795  : }

  0001c	149de004	 ldrne       lr, [sp], #4
  00020	112fff1e	 bxne        lr

; 774  :         } else {
; 775  :             // walk through the voltage mask starting at the low end looking for
; 776  :             // a voltage that will work with the OCR value
; 777  :             for (i = 0; i < 32; i++) {

  00024	e3a02000	 mov         r2, #0
  00028	e3a00001	 mov         r0, #1
  0002c		 |$LL5@SDGetOpera|

; 778  :                 if (OcrValue & VoltageWindowMask & (1 << i)) {

  0002c	e00e3210	 and         r3, lr, r0, lsl r2
  00030	e1130001	 tst         r3, r1
  00034	1a000005	 bne         |$LN12@SDGetOpera|
  00038	e2822001	 add         r2, r2, #1
  0003c	e3520020	 cmp         r2, #0x20
  00040	3afffff9	 bcc         |$LL5@SDGetOpera|
  00044		 |$LN8@SDGetOpera|

; 785  :                 }
; 786  :             }
; 787  :             // this should never happen, 
; 788  :             DEBUGCHK(FALSE);
; 789  :             return 0;
; 790  :         }
; 791  : 
; 792  :     } else {
; 793  :         return 0;

  00044	e3a00000	 mov         r0, #0

; 794  :     }
; 795  : }

  00048	e49de004	 ldr         lr, [sp], #4
  0004c	e12fff1e	 bx          lr
  00050		 |$LN12@SDGetOpera|

; 779  :                     DEBUGMSG(SDBUS_ZONE_DEVICE, (TEXT("SDBusDriver: Device Power Range:0x%08X does not match HC desired power 0x%08X \n"),
; 780  :                         OcrValue, DesiredVoltageMask));
; 781  :                     DEBUGMSG(SDBUS_ZONE_DEVICE, (TEXT("Using negotiated power range: 0x%08X \n"), 
; 782  :                         (1 << i))); 
; 783  :                     // found a match
; 784  :                     return (1 << i);

  00050	e3a03001	 mov         r3, #1
  00054	e1a00213	 mov         r0, r3, lsl r2

; 794  :     }
; 795  : }

  00058	e49de004	 ldr         lr, [sp], #4
  0005c	e12fff1e	 bx          lr
  00060		 |$M37738|

			 ENDP  ; |?SDGetOperationalVoltageRange@CSDSlot@@IAAKK@Z|, CSDSlot::SDGetOperationalVoltageRange

	EXPORT	|?SlotCardSelectDeselect@CSDSlot@@QAAHW4_SD_SLOT_EVENT@@@Z| ; CSDSlot::SlotCardSelectDeselect
	IMPORT	|?SDSetCardFeature_I@CSDDevice@@QAAJW4SD_SET_FEATURE_TYPE@@PAXK@Z| ; CSDDevice::SDSetCardFeature_I

  00000			 AREA	 |.pdata|, PDATA
|$T37755| DCD	|$LN16@SlotCardSe|
	DCD	0x40002101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SlotCardSelectDeselect@CSDSlot@@QAAHW4_SD_SLOT_EVENT@@@Z| PROC ; CSDSlot::SlotCardSelectDeselect

; 804  : {

  00000		 |$LN16@SlotCardSe|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37752|
  00004	e1a04001	 mov         r4, r1

; 805  :     SD_API_STATUS           status;             // intermediate SD status
; 806  :     BOOL                    retStatus = FALSE;  // return status
; 807  :     SD_SET_FEATURE_TYPE     CardFeature;        // card feature code
; 808  : 
; 809  :         // check for a ready device in the slot
; 810  :     if (m_SlotState == Ready) {        

  00008	e5903084	 ldr         r3, [r0, #0x84]
  0000c	e3530002	 cmp         r3, #2
  00010	1a000018	 bne         |$LN11@SlotCardSe|

; 811  :         CSDDevice *pDevice0 = GetFunctionDevice(0);

  00014	e3a01000	 mov         r1, #0
  00018	eb000000	 bl          |?GetFunctionDevice@CSDSlot@@QAAPAVCSDDevice@@K@Z|
  0001c	e1b05000	 movs        r5, r0

; 812  :         if (NULL != pDevice0) { 

  00020	0a000014	 beq         |$LN11@SlotCardSe|

; 813  : 
; 814  :             switch ( Event ) {

  00024	e3540005	 cmp         r4, #5
  00028	0a000007	 beq         |$LN7@SlotCardSe|
  0002c	e3540006	 cmp         r4, #6
  00030	0a000003	 beq         |$LN6@SlotCardSe|
  00034	e3540007	 cmp         r4, #7

; 824  :               default:
; 825  :                 DEBUG_CHECK(FALSE, (TEXT("SDBusDriver: Unknown Slot Event : %d \n"),Event));
; 826  :                 return FALSE;

  00038	1a00000e	 bne         |$LN11@SlotCardSe|

; 821  :               case SlotResetRequest:
; 822  :                 CardFeature = SD_CARD_FORCE_RESET;

  0003c	e3a0100b	 mov         r1, #0xB

; 823  :                 break;

  00040	ea000002	 b           |$LN8@SlotCardSe|
  00044		 |$LN6@SlotCardSe|

; 817  :                 break;
; 818  :               case SlotSelectRequest:
; 819  :                 CardFeature = SD_CARD_SELECT_REQUEST;

  00044	e3a01009	 mov         r1, #9

; 820  :                 break;

  00048	ea000000	 b           |$LN8@SlotCardSe|
  0004c		 |$LN7@SlotCardSe|

; 815  :               case SlotDeselectRequest:
; 816  :                 CardFeature = SD_CARD_DESELECT_REQUEST;

  0004c	e3a0100a	 mov         r1, #0xA
  00050		 |$LN8@SlotCardSe|

; 827  :             }
; 828  : 
; 829  :             // Call API to request the card to be deselected
; 830  :             status = pDevice0->SDSetCardFeature_I(CardFeature,NULL,0);

  00050	e3a03000	 mov         r3, #0
  00054	e3a02000	 mov         r2, #0
  00058	e1a00005	 mov         r0, r5
  0005c	eb000000	 bl          |?SDSetCardFeature_I@CSDDevice@@QAAJW4SD_SET_FEATURE_TYPE@@PAXK@Z|
  00060	e1a04000	 mov         r4, r0

; 831  :             pDevice0->DeRef();

  00064	e1a00005	 mov         r0, r5
  00068	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|

; 832  : 
; 833  :             retStatus  = TRUE;

  0006c	e3a00001	 mov         r0, #1

; 834  : 
; 835  :             if(!SD_API_SUCCESS(status)) {

  00070	e3540000	 cmp         r4, #0
  00074	5a000000	 bpl         |$LN1@SlotCardSe|
  00078		 |$LN11@SlotCardSe|

; 836  :                 DbgPrintZo(SDCARD_ZONE_ERROR,(TEXT("SDBusDriver: Failed to request the card to be deselected\r\n")));
; 837  :                 retStatus = FALSE;
; 838  :             }
; 839  :         }
; 840  :         else {
; 841  :             retStatus = FALSE;
; 842  :             DbgPrintZo(SDCARD_ZONE_INIT, (TEXT("Driver not loaded")));
; 843  :         }
; 844  :     }
; 845  :     else {
; 846  :         retStatus = FALSE;

  00078	e3a00000	 mov         r0, #0
  0007c		 |$LN1@SlotCardSe|

; 847  :         DbgPrintZo(SDCARD_ZONE_INIT, (TEXT("Empty Slot")));
; 848  :     }
; 849  : 
; 850  :     return retStatus;
; 851  : }

  0007c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00080	e12fff1e	 bx          lr
  00084		 |$M37753|

			 ENDP  ; |?SlotCardSelectDeselect@CSDSlot@@QAAHW4_SD_SLOT_EVENT@@@Z|, CSDSlot::SlotCardSelectDeselect

	EXPORT	|?SelectSlotInterface@CSDSlot@@IAAJXZ|	; CSDSlot::SelectSlotInterface
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T37786| DCD	|$LN24@SelectSlot|
	DCD	0x40002a01
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SelectSlotInterface@CSDSlot@@IAAJXZ| PROC ; CSDSlot::SelectSlotInterface

; 864  : {

  00000		 |$LN24@SelectSlot|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M37783|
  00004	e1a04000	 mov         r4, r0

; 865  :     // Try slot interface at full speed and 4 bit mode (highest bus mode except High Speed)
; 866  :     memset(&m_SlotInterfaceEx,0, sizeof(m_SlotInterfaceEx));

  00008	e3a02020	 mov         r2, #0x20
  0000c	e3a01000	 mov         r1, #0
  00010	e284008c	 add         r0, r4, #0x8C
  00014	eb000000	 bl          memset

; 867  :     m_SlotInterfaceEx.InterfaceModeEx.bit.sd4Bit = 1;

  00018	e594308c	 ldr         r3, [r4, #0x8C]

; 868  : 	
; 869  : #if defined(BSP_EMMCFEATURE) 
; 870  :     m_SlotInterfaceEx.ClockRate = EMMC_HIGHSPEED_MAXCLOCKRATE;

  0001c	e59f2080	 ldr         r2, [pc, #0x80]

; 871  : #elif defined(BSP_SDHIGHSPEEDSUPPORT_SDHC1) || defined(BSP_SDHIGHSPEEDSUPPORT_SDHC2)
; 872  :     m_SlotInterfaceEx.ClockRate = SDHC_HIGHSPEED_MAXCLOCKRATE;
; 873  : #else
; 874  :     m_SlotInterfaceEx.ClockRate = SD_FULL_SPEED_RATE;   
; 875  : #endif
; 876  : 
; 877  :     m_SlotLock.Lock();

  00020	e28400b4	 add         r0, r4, #0xB4
  00024	e3833001	 orr         r3, r3, #1
  00028	e584308c	 str         r3, [r4, #0x8C]
  0002c	e5842090	 str         r2, [r4, #0x90]
  00030	eb000000	 bl          EnterCriticalSection
  00034	e1a0e004	 mov         lr, r4
  00038	e3a05008	 mov         r5, #8
  0003c		 |$LL5@SelectSlot|

; 878  :     for (DWORD dwIndex=0; dwIndex<SD_MAXIMUM_DEVICE_PER_SLOT; dwIndex ++) {
; 879  :         CSDDevice * psdDevice = m_pFuncDevice[dwIndex];

  0003c	e59e30c8	 ldr         r3, [lr, #0xC8]
  00040	e1b06003	 movs        r6, r3

; 880  :         // for each device set it's card interface
; 881  :         if (psdDevice) {

  00044	0a00000e	 beq         |$LN4@SelectSlot|

; 882  :             m_SlotInterfaceEx.InterfaceModeEx.bit.sd4Bit = psdDevice->GetCardInterface().InterfaceModeEx.bit.sd4Bit;

  00048	e5b63540	 ldr         r3, [r6, #0x540]!
  0004c	e594108c	 ldr         r1, [r4, #0x8C]

; 883  :             m_SlotInterfaceEx.InterfaceModeEx.bit.sdWriteProtected = psdDevice->GetCardInterface().InterfaceModeEx.bit.sdWriteProtected;
; 884  :             if ( psdDevice->GetCardInterface().ClockRate < m_SlotInterfaceEx.ClockRate ) {

  00050	e5940090	 ldr         r0, [r4, #0x90]
  00054	e2032001	 and         r2, r3, #1
  00058	e3c13001	 bic         r3, r1, #1
  0005c	e1832002	 orr         r2, r3, r2
  00060	e584208c	 str         r2, [r4, #0x8C]
  00064	e5963000	 ldr         r3, [r6]
  00068	e0223003	 eor         r3, r2, r3
  0006c	e2033101	 and         r3, r3, #1, 2
  00070	e0233002	 eor         r3, r3, r2
  00074	e584308c	 str         r3, [r4, #0x8C]
  00078	e5963004	 ldr         r3, [r6, #4]
  0007c	e1530000	 cmp         r3, r0

; 885  :                 m_SlotInterfaceEx.ClockRate = psdDevice->GetCardInterface().ClockRate;

  00080	35843090	 strcc       r3, [r4, #0x90]
  00084		 |$LN4@SelectSlot|
  00084	e28ee004	 add         lr, lr, #4
  00088	e2555001	 subs        r5, r5, #1
  0008c	1affffea	 bne         |$LL5@SelectSlot|

; 886  :             }
; 887  :         }
; 888  :     }
; 889  :     m_SlotLock.Unlock();

  00090	e28400b4	 add         r0, r4, #0xB4
  00094	eb000000	 bl          LeaveCriticalSection

; 890  :     return SD_API_STATUS_SUCCESS;

  00098	e3a00000	 mov         r0, #0

; 891  : }

  0009c	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000a0	e12fff1e	 bx          lr
  000a4		 |$LN25@SelectSlot|
  000a4		 |$LN26@SelectSlot|
  000a4	03197500	 DCD         0x3197500
  000a8		 |$M37784|

			 ENDP  ; |?SelectSlotInterface@CSDSlot@@IAAJXZ|, CSDSlot::SelectSlotInterface

	EXPORT	|?SDSlotEnableSDIOInterrupts@CSDSlot@@QAAHXZ| ; CSDSlot::SDSlotEnableSDIOInterrupts
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T37823| DCD	|$LN19@SDSlotEnab|
	DCD	0x40002002
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SDSlotEnableSDIOInterrupts@CSDSlot@@QAAHXZ| PROC ; CSDSlot::SDSlotEnableSDIOInterrupts

; 894  : {

  00000		 |$LN19@SDSlotEnab|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M37820|
  00008	e1a05000	 mov         r5, r0

; 895  :     BOOL fRet = FALSE;
; 896  :     m_SlotLock.Lock();

  0000c	e28500b4	 add         r0, r5, #0xB4
  00010	e3a06000	 mov         r6, #0
  00014	eb000000	 bl          EnterCriticalSection

; 897  :     if (!IsSlotInterruptOn()) {

  00018	e5953088	 ldr         r3, [r5, #0x88]
  0001c	e3130001	 tst         r3, #1
  00020	1a000010	 bne         |$LN1@SDSlotEnab|

; 898  :         SD_API_STATUS status = m_SdHost.SlotOptionHandler(m_dwSlotIndex,SDHCDEnableSDIOInterrupts, NULL, 0);

  00024	e595307c	 ldr         r3, [r5, #0x7C]
  00028	e5951080	 ldr         r1, [r5, #0x80]

; 899  :         if (SD_API_SUCCESS(status)) {

  0002c	e3a07000	 mov         r7, #0
  00030	e3530000	 cmp         r3, #0
  00034	e5934044	 ldr         r4, [r3, #0x44]
  00038	12830008	 addne       r0, r3, #8
  0003c	03a00000	 moveq       r0, #0
  00040	e3a03000	 mov         r3, #0
  00044	e3a02002	 mov         r2, #2
  00048	e58d7000	 str         r7, [sp]
  0004c	e1a0e00f	 mov         lr, pc
  00050	e12fff14	 bx          r4
  00054	e3500000	 cmp         r0, #0

; 900  :             m_Flags|=SD_SLOT_FLAG_SDIO_INTERRUPTS_ENABLED;

  00058	55953088	 ldrpl       r3, [r5, #0x88]

; 901  :             fRet = TRUE;

  0005c	53a06001	 movpl       r6, #1
  00060	53833001	 orrpl       r3, r3, #1
  00064	55853088	 strpl       r3, [r5, #0x88]
  00068		 |$LN1@SDSlotEnab|

; 902  :         };
; 903  :     }
; 904  :     m_SlotLock.Unlock();

  00068	e28500b4	 add         r0, r5, #0xB4
  0006c	eb000000	 bl          LeaveCriticalSection

; 905  :     return fRet;
; 906  : }

  00070	e1a00006	 mov         r0, r6
  00074	e28dd004	 add         sp, sp, #4
  00078	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  0007c	e12fff1e	 bx          lr
  00080		 |$M37821|

			 ENDP  ; |?SDSlotEnableSDIOInterrupts@CSDSlot@@QAAHXZ|, CSDSlot::SDSlotEnableSDIOInterrupts

	EXPORT	|?SDSlotDisableSDIOInterrupts@CSDSlot@@QAAHXZ| ; CSDSlot::SDSlotDisableSDIOInterrupts
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T37859| DCD	|$LN20@SDSlotDisa|
	DCD	0x40002002
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SDSlotDisableSDIOInterrupts@CSDSlot@@QAAHXZ| PROC ; CSDSlot::SDSlotDisableSDIOInterrupts

; 909  : {

  00000		 |$LN20@SDSlotDisa|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M37856|
  00008	e1a05000	 mov         r5, r0

; 910  :     BOOL fRet = FALSE;
; 911  :     m_SlotLock.Lock();

  0000c	e28500b4	 add         r0, r5, #0xB4
  00010	e3a06000	 mov         r6, #0
  00014	eb000000	 bl          EnterCriticalSection

; 912  :     if (IsSlotInterruptOn()) {

  00018	e5953088	 ldr         r3, [r5, #0x88]
  0001c	e3130001	 tst         r3, #1
  00020	0a000010	 beq         |$LN1@SDSlotDisa|

; 913  :         SD_API_STATUS status = m_SdHost.SlotOptionHandler(m_dwSlotIndex,SDHCDDisableSDIOInterrupts, NULL, 0);

  00024	e595307c	 ldr         r3, [r5, #0x7C]
  00028	e5951080	 ldr         r1, [r5, #0x80]

; 914  :         if (SD_API_SUCCESS(status)) {

  0002c	e3a07000	 mov         r7, #0
  00030	e3530000	 cmp         r3, #0
  00034	e5934044	 ldr         r4, [r3, #0x44]
  00038	12830008	 addne       r0, r3, #8
  0003c	03a00000	 moveq       r0, #0
  00040	e3a03000	 mov         r3, #0
  00044	e3a02003	 mov         r2, #3
  00048	e58d7000	 str         r7, [sp]
  0004c	e1a0e00f	 mov         lr, pc
  00050	e12fff14	 bx          r4
  00054	e3500000	 cmp         r0, #0

; 915  :             m_Flags&=~SD_SLOT_FLAG_SDIO_INTERRUPTS_ENABLED;

  00058	55953088	 ldrpl       r3, [r5, #0x88]

; 916  :             fRet = TRUE;

  0005c	53a06001	 movpl       r6, #1
  00060	53c33001	 bicpl       r3, r3, #1
  00064	55853088	 strpl       r3, [r5, #0x88]
  00068		 |$LN1@SDSlotDisa|

; 917  :         };
; 918  :     }
; 919  :     m_SlotLock.Unlock();

  00068	e28500b4	 add         r0, r5, #0xB4
  0006c	eb000000	 bl          LeaveCriticalSection

; 920  :     return fRet;
; 921  : }

  00070	e1a00006	 mov         r0, r6
  00074	e28dd004	 add         sp, sp, #4
  00078	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  0007c	e12fff1e	 bx          lr
  00080		 |$M37857|

			 ENDP  ; |?SDSlotDisableSDIOInterrupts@CSDSlot@@QAAHXZ|, CSDSlot::SDSlotDisableSDIOInterrupts

	IMPORT	|?SetCardInterface@CSDDevice@@QAAJPAU_SD_CARD_INTERFACE_EX@@@Z| ; CSDDevice::SetCardInterface
	IMPORT	|?NotifyClient@CSDDevice@@QAAXW4_SD_SLOT_EVENT_TYPE@@@Z| ; CSDDevice::NotifyClient
	IMPORT	|?HandleDeviceSelectDeselect@CSDDevice@@QAAJW4_SD_SLOT_EVENT@@H@Z| ; CSDDevice::HandleDeviceSelectDeselect

  00000			 AREA	 |.pdata|, PDATA
|$T37908| DCD	|$LN48@HandleSlot|
	DCD	0x40007e02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?HandleSlotSelectDeselect@CSDSlot@@UAAHW4_SD_SLOT_EVENT@@@Z| PROC ; CSDSlot::HandleSlotSelectDeselect

; 923  : {

  00000		 |$LN48@HandleSlot|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004	e24dd020	 sub         sp, sp, #0x20
  00008		 |$M37905|
  00008	e1a07001	 mov         r7, r1
  0000c	e1a06000	 mov         r6, r0

; 924  :     SD_API_STATUS          status = SD_API_STATUS_SUCCESS;

  00010	e3a05000	 mov         r5, #0

; 925  :     SD_CARD_INTERFACE_EX   CurrentSlotInterface;
; 926  : 
; 927  : 
; 928  :     DbgPrintZo(SDBUS_ZONE_DEVICE, (TEXT("CSDSlot: HandleSlotSelectDeselect++: %d \n"),SlotEvent));    	    
; 929  :     // Deselect the card
; 930  :     if ((SlotEvent == SlotResetRequest) || (SlotEvent == SlotDeselectRequest)) {

  00014	e3570007	 cmp         r7, #7
  00018	0a000001	 beq         |$LN23@HandleSlot|
  0001c	e3570005	 cmp         r7, #5
  00020	1a00001a	 bne         |$LN17@HandleSlot|
  00024		 |$LN23@HandleSlot|

; 931  :         DbgPrintZo(SDBUS_ZONE_DEVICE, (TEXT("CSDSlot: Deselect the card\n")));
; 932  :         // Update RCA for all devices, start from parent device
; 933  :         for (DWORD dwIndex=0; dwIndex <= SD_MAXIMUM_DEVICE_PER_SLOT && SD_API_SUCCESS(status); dwIndex++) {

  00024	e3a04000	 mov         r4, #0
  00028		 |$LL22@HandleSlot|
  00028	e3550000	 cmp         r5, #0
  0002c	4a00006d	 bmi         |$LN27@HandleSlot|

; 934  :             CSDDevice * pCurrentDevice = GetFunctionDevice(dwIndex);

  00030	e1a01004	 mov         r1, r4
  00034	e1a00006	 mov         r0, r6
  00038	eb000000	 bl          |?GetFunctionDevice@CSDSlot@@QAAPAVCSDDevice@@K@Z|
  0003c	e1b08000	 movs        r8, r0

; 935  :             if (pCurrentDevice != NULL) {

  00040	0a000009	 beq         |$LN21@HandleSlot|

; 936  :                 status = pCurrentDevice->HandleDeviceSelectDeselect(SlotEvent, FALSE);  

  00044	e3a02000	 mov         r2, #0
  00048	e1a01007	 mov         r1, r7
  0004c	e1a00008	 mov         r0, r8
  00050	eb000000	 bl          |?HandleDeviceSelectDeselect@CSDDevice@@QAAJW4_SD_SLOT_EVENT@@H@Z|
  00054	e1b05000	 movs        r5, r0

; 937  :                 if (SD_API_SUCCESS(status)) {
; 938  :                     pCurrentDevice->NotifyClient(SDCardDeselected);

  00058	53a01003	 movpl       r1, #3
  0005c	51a00008	 movpl       r0, r8
  00060	5b000000	 blpl        |?NotifyClient@CSDDevice@@QAAXW4_SD_SLOT_EVENT_TYPE@@@Z|

; 939  :                 }
; 940  :                 pCurrentDevice->DeRef();

  00064	e1a00008	 mov         r0, r8
  00068	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  0006c		 |$LN21@HandleSlot|
  0006c	e2844001	 add         r4, r4, #1
  00070	e3540008	 cmp         r4, #8
  00074	9affffeb	 bls         |$LL22@HandleSlot|

; 941  :             }
; 942  :         }
; 943  :         if (SD_API_SUCCESS(status)) {

  00078	e3550000	 cmp         r5, #0
  0007c	4a000059	 bmi         |$LN27@HandleSlot|

; 944  :             m_SlotState = SlotDeselected; // Mark the slot as SlotDeselected to prevent further requests

  00080	e3a03005	 mov         r3, #5

; 945  :             m_AllocatedPower = 0;

  00084	e3a02000	 mov         r2, #0
  00088	e5863084	 str         r3, [r6, #0x84]
  0008c	e1c62bb0	 strh        r2, [r6, #0xB0]
  00090		 |$LN17@HandleSlot|

; 946  :         }
; 947  :         else {
; 948  :             DbgPrintZo(SDCARD_ZONE_ERROR, (TEXT("CSDSlot: Failed to deselect card status =%x\n"),status));  
; 949  :         }
; 950  :     }
; 951  : 
; 952  : 
; 953  :     // Select the card
; 954  :     if (SD_API_SUCCESS(status) &&
; 955  :             ((SlotEvent == SlotResetRequest) || (SlotEvent == SlotSelectRequest))) {

  00090	e3570007	 cmp         r7, #7
  00094	0a000001	 beq         |$LN14@HandleSlot|
  00098	e3570006	 cmp         r7, #6
  0009c	1a00004f	 bne         |$LN2@HandleSlot|
  000a0		 |$LN14@HandleSlot|

; 956  :         DbgPrintZo(SDBUS_ZONE_DEVICE, (TEXT("SDBusDriver: Select the card\n")));  
; 957  : 
; 958  :         // Save the current slot interface
; 959  :         CurrentSlotInterface.InterfaceModeEx = m_SlotInterfaceEx.InterfaceModeEx;

  000a0	e596408c	 ldr         r4, [r6, #0x8C]

; 960  :         CurrentSlotInterface.ClockRate = m_SlotInterfaceEx.ClockRate;

  000a4	e5965090	 ldr         r5, [r6, #0x90]

; 961  : 
; 962  :         // set the slot for 1 bit mode
; 963  :         m_SlotInterfaceEx.InterfaceModeEx.bit.sd4Bit = 0 ;
; 964  : 		m_SlotInterfaceEx.InterfaceModeEx.bit.sd8Bit = 0 ;
; 965  :         m_SlotInterfaceEx.ClockRate = SD_DEFAULT_CARD_ID_CLOCK_RATE;
; 966  : 
; 967  :         // set the card interface for the slot
; 968  :         status = SDSetCardInterfaceForSlot(&m_SlotInterfaceEx);

  000a8	e5961080	 ldr         r1, [r6, #0x80]
  000ac	e596007c	 ldr         r0, [r6, #0x7C]
  000b0	e3a02b61	 mov         r2, #0x61, 22
  000b4	e3c43005	 bic         r3, r4, #5
  000b8	e382ee2a	 orr         lr, r2, #0x2A, 28
  000bc	e286208c	 add         r2, r6, #0x8C
  000c0	e586308c	 str         r3, [r6, #0x8C]
  000c4	e58d4000	 str         r4, [sp]
  000c8	e58d5004	 str         r5, [sp, #4]
  000cc	e586e090	 str         lr, [r6, #0x90]
  000d0	eb000000	 bl          |?SlotSetupInterface@CSDHost@@IAAJKPAU_SD_CARD_INTERFACE_EX@@@Z|

; 969  :         // Mark slot status as SlotReseting, only this thread can send bus request.
; 970  :         m_SlotState = SlotResetting;

  000d4	e3a03006	 mov         r3, #6
  000d8	e5863084	 str         r3, [r6, #0x84]
  000dc	e1a05000	 mov         r5, r0

; 971  : 
; 972  :         for (DWORD dwIndex=0; dwIndex <= SD_MAXIMUM_DEVICE_PER_SLOT && SD_API_SUCCESS(status); dwIndex++) {

  000e0	e3a04000	 mov         r4, #0
  000e4		 |$LL13@HandleSlot|
  000e4	e3550000	 cmp         r5, #0
  000e8	4a00003e	 bmi         |$LN27@HandleSlot|

; 973  :             CSDDevice * pCurrentDevice = GetFunctionDevice(dwIndex);

  000ec	e1a01004	 mov         r1, r4
  000f0	e1a00006	 mov         r0, r6
  000f4	eb000000	 bl          |?GetFunctionDevice@CSDSlot@@QAAPAVCSDDevice@@K@Z|
  000f8	e1b08000	 movs        r8, r0

; 974  :             if (pCurrentDevice != NULL) {

  000fc	0a000006	 beq         |$LN12@HandleSlot|

; 975  :                 status = pCurrentDevice->HandleDeviceSelectDeselect(SlotEvent, TRUE);  

  00100	e3a02001	 mov         r2, #1
  00104	e1a01007	 mov         r1, r7
  00108	e1a00008	 mov         r0, r8
  0010c	eb000000	 bl          |?HandleDeviceSelectDeselect@CSDDevice@@QAAJW4_SD_SLOT_EVENT@@H@Z|
  00110	e1a05000	 mov         r5, r0

; 976  :                 pCurrentDevice->DeRef();

  00114	e1a00008	 mov         r0, r8
  00118	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  0011c		 |$LN12@HandleSlot|
  0011c	e2844001	 add         r4, r4, #1
  00120	e3540008	 cmp         r4, #8
  00124	9affffee	 bls         |$LL13@HandleSlot|

; 977  :             }
; 978  :         }
; 979  :         if (SD_API_SUCCESS(status)) {

  00128	e3550000	 cmp         r5, #0
  0012c	4a00002d	 bmi         |$LN27@HandleSlot|

; 980  :             // Set Slot state as ready
; 981  :             m_SlotState = Ready;
; 982  :             m_SlotInterfaceEx.InterfaceModeEx = CurrentSlotInterface.InterfaceModeEx;

  00130	e59d3000	 ldr         r3, [sp]

; 983  :             m_SlotInterfaceEx.ClockRate = CurrentSlotInterface.ClockRate;

  00134	e59d2004	 ldr         r2, [sp, #4]
  00138	e3a01002	 mov         r1, #2
  0013c	e586308c	 str         r3, [r6, #0x8C]
  00140	e5862090	 str         r2, [r6, #0x90]
  00144	e5861084	 str         r1, [r6, #0x84]

; 984  :             for (DWORD dwIndex=0; dwIndex <SD_MAXIMUM_DEVICE_PER_SLOT  && SD_API_SUCCESS(status); dwIndex++) {

  00148	e3a04000	 mov         r4, #0
  0014c		 |$LL8@HandleSlot|
  0014c	e3550000	 cmp         r5, #0
  00150	4a00000d	 bmi         |$LN6@HandleSlot|

; 985  :                 CSDDevice * pDevice = GetFunctionDevice(dwIndex);

  00154	e1a01004	 mov         r1, r4
  00158	e1a00006	 mov         r0, r6
  0015c	eb000000	 bl          |?GetFunctionDevice@CSDSlot@@QAAPAVCSDDevice@@K@Z|
  00160	e1b07000	 movs        r7, r0

; 986  :                 if (pDevice) {

  00164	0a000005	 beq         |$LN7@HandleSlot|

; 987  :                     status  =  pDevice->SetCardInterface(&CurrentSlotInterface);                    

  00168	e28d1000	 add         r1, sp, #0
  0016c	e1a00007	 mov         r0, r7
  00170	eb000000	 bl          |?SetCardInterface@CSDDevice@@QAAJPAU_SD_CARD_INTERFACE_EX@@@Z|
  00174	e1a05000	 mov         r5, r0

; 988  :                     pDevice->DeRef();

  00178	e1a00007	 mov         r0, r7
  0017c	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  00180		 |$LN7@HandleSlot|
  00180	e2844001	 add         r4, r4, #1
  00184	e3540008	 cmp         r4, #8
  00188	3affffef	 bcc         |$LL8@HandleSlot|
  0018c		 |$LN6@HandleSlot|

; 989  :                 }
; 990  :                 
; 991  :             }
; 992  :             status = SDSetCardInterfaceForSlot(&m_SlotInterfaceEx);

  0018c	e5961080	 ldr         r1, [r6, #0x80]
  00190	e596007c	 ldr         r0, [r6, #0x7C]
  00194	e286208c	 add         r2, r6, #0x8C
  00198	eb000000	 bl          |?SlotSetupInterface@CSDHost@@IAAJKPAU_SD_CARD_INTERFACE_EX@@@Z|
  0019c	e1a07000	 mov         r7, r0

; 993  :                 
; 994  :             for (DWORD dwIndex = 0 ; dwIndex <SD_MAXIMUM_DEVICE_PER_SLOT && SD_API_SUCCESS(status) ; dwIndex++) {

  001a0	e3a04000	 mov         r4, #0
  001a4		 |$LL4@HandleSlot|
  001a4	e3570000	 cmp         r7, #0
  001a8	4a00000e	 bmi         |$LN27@HandleSlot|

; 995  :                 CSDDevice * pDevice = GetFunctionDevice(dwIndex);

  001ac	e1a01004	 mov         r1, r4
  001b0	e1a00006	 mov         r0, r6
  001b4	eb000000	 bl          |?GetFunctionDevice@CSDSlot@@QAAPAVCSDDevice@@K@Z|
  001b8	e1b05000	 movs        r5, r0

; 996  :                 if (pDevice) {

  001bc	0a000004	 beq         |$LN3@HandleSlot|

; 997  :                     pDevice->NotifyClient(SDCardSelected);

  001c0	e3a01002	 mov         r1, #2
  001c4	e1a00005	 mov         r0, r5
  001c8	eb000000	 bl          |?NotifyClient@CSDDevice@@QAAXW4_SD_SLOT_EVENT_TYPE@@@Z|

; 998  :                     pDevice->DeRef();

  001cc	e1a00005	 mov         r0, r5
  001d0	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  001d4		 |$LN3@HandleSlot|
  001d4	e2844001	 add         r4, r4, #1
  001d8	e3540008	 cmp         r4, #8
  001dc	3afffff0	 bcc         |$LL4@HandleSlot|
  001e0		 |$LN2@HandleSlot|

; 999  :                 }
; 1000 :                 
; 1001 :             }
; 1002 :         }
; 1003 :     }
; 1004 :     ASSERT(SD_API_SUCCESS(status));
; 1005 :     DbgPrintZo(SDBUS_ZONE_DEVICE, (TEXT("SDBusDriver: HandleSlotSelectDeselect--status =%X\n"),status));  
; 1006 :     return (SD_API_SUCCESS(status));

  001e0	e3a00001	 mov         r0, #1
  001e4	ea000000	 b           |$LN28@HandleSlot|
  001e8		 |$LN27@HandleSlot|
  001e8	e3a00000	 mov         r0, #0
  001ec		 |$LN28@HandleSlot|

; 1007 : }

  001ec	e28dd020	 add         sp, sp, #0x20
  001f0	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  001f4	e12fff1e	 bx          lr
  001f8		 |$M37906|

			 ENDP  ; |?HandleSlotSelectDeselect@CSDSlot@@UAAHW4_SD_SLOT_EVENT@@@Z|, CSDSlot::HandleSlotSelectDeselect

	EXPORT	|?Detach@CSDBusReqAsyncQueue@@QAAHXZ|	; CSDBusReqAsyncQueue::Detach
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T37943| DCD	|$LN23@Detach@2|
	DCD	0x40002401
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Detach@CSDBusReqAsyncQueue@@QAAHXZ| PROC ; CSDBusReqAsyncQueue::Detach

; 61   : {

  00000		 |$LN23@Detach@2|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004		 |$M37940|
  00004	e1a04000	 mov         r4, r0

; 62   :     m_fAttached = FALSE;

  00008	e3a07000	 mov         r7, #0

; 63   :     RemoveAllRequest();

  0000c	e5847020	 str         r7, [r4, #0x20]
  00010	eb000000	 bl          |?RemoveAllRequest@CSDBusReqAsyncQueue@@QAAHXZ|

; 64   :     if (m_pQueueListHead!=NULL) { // I don't think HC are going to complete this one. So, let me do it here.

  00014	e5943018	 ldr         r3, [r4, #0x18]
  00018	e3530000	 cmp         r3, #0
  0001c	0a000018	 beq         |$LN16@Detach@2|

; 65   :         Lock();

  00020	e2840004	 add         r0, r4, #4
  00024	eb000000	 bl          EnterCriticalSection

; 66   :         CSDBusRequest *  pCur = m_pQueueListHead;

  00028	e5943018	 ldr         r3, [r4, #0x18]
  0002c	e1b05003	 movs        r5, r3

; 67   :         while(pCur) {

  00030	0a00000f	 beq         |$LN1@Detach@2|
  00034	e3a0814f	 mov         r8, #0x4F, 2
  00038	e3a09001	 mov         r9, #1
  0003c		 |$LL2@Detach@2|

; 68   :             CSDBusRequest *pNext = pCur->GetAsyncQueueNext();
; 69   :             pCur->SetAsyncQueueNext(NULL);
; 70   :             pCur->CompleteBusRequest(SD_API_STATUS_CANCELED);

  0003c	e595306c	 ldr         r3, [r5, #0x6C]
  00040	e5956064	 ldr         r6, [r5, #0x64]
  00044	e5857064	 str         r7, [r5, #0x64]
  00048	e3530000	 cmp         r3, #0
  0004c	11a00003	 movne       r0, r3
  00050	01a00005	 moveq       r0, r5
  00054	e585803c	 str         r8, [r5, #0x3C]
  00058	e5859080	 str         r9, [r5, #0x80]
  0005c	eb000000	 bl          |?CheckForCompletion@CSDBusRequest@@IAAHXZ|

; 71   :             pCur->DeRef();

  00060	e1a00005	 mov         r0, r5
  00064	eb000000	 bl          |?DeRef@CSDBusRequest@@QAAKXZ|

; 72   :             pCur = pNext;

  00068	e1a05006	 mov         r5, r6
  0006c	e3560000	 cmp         r6, #0
  00070	1afffff1	 bne         |$LL2@Detach@2|
  00074		 |$LN1@Detach@2|

; 73   :         }
; 74   :         m_pQueueListLast = m_pQueueListHead = NULL ;;
; 75   :         Unlock();

  00074	e2840004	 add         r0, r4, #4
  00078	e5847018	 str         r7, [r4, #0x18]
  0007c	e584701c	 str         r7, [r4, #0x1C]
  00080	eb000000	 bl          LeaveCriticalSection
  00084		 |$LN16@Detach@2|

; 76   :         
; 77   :     }
; 78   :     return TRUE;

  00084	e3a00001	 mov         r0, #1

; 79   : }

  00088	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  0008c	e12fff1e	 bx          lr
  00090		 |$M37941|

			 ENDP  ; |?Detach@CSDBusReqAsyncQueue@@QAAHXZ|, CSDBusReqAsyncQueue::Detach

	EXPORT	|?QueueBusRequest@CSDBusReqAsyncQueue@@QAAJPAVCSDBusRequest@@@Z| ; CSDBusReqAsyncQueue::QueueBusRequest
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T37987| DCD	|$LN35@QueueBusRe|
	DCD	0x40004201
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?QueueBusRequest@CSDBusReqAsyncQueue@@QAAJPAVCSDBusRequest@@@Z| PROC ; CSDBusReqAsyncQueue::QueueBusRequest

; 82   : {

  00000		 |$LN35@QueueBusRe|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M37984|
  00004	e1b04001	 movs        r4, r1
  00008	e1a05000	 mov         r5, r0

; 83   :     SD_API_STATUS status = SD_API_STATUS_UNSUCCESSFUL;

  0000c	e3a0610f	 mov         r6, #0xF, 2

; 84   :     if (pRequest && m_fAttached) {

  00010	0a000039	 beq         |$LN11@QueueBusRe|
  00014	e5953020	 ldr         r3, [r5, #0x20]
  00018	e3530000	 cmp         r3, #0
  0001c	0a000036	 beq         |$LN11@QueueBusRe|

; 85   :         BOOL fHeader = FALSE;
; 86   :         Lock();

  00020	e2850004	 add         r0, r5, #4
  00024	e3a06000	 mov         r6, #0
  00028	eb000000	 bl          EnterCriticalSection

; 87   :         pRequest->SetAsyncQueueNext(NULL);

  0002c	e3a08000	 mov         r8, #0
  00030	e5848064	 str         r8, [r4, #0x64]

; 88   :         if (m_pQueueListHead!=NULL && m_pQueueListLast!=NULL) {

  00034	e5953018	 ldr         r3, [r5, #0x18]

; 89   :             m_pQueueListLast->SetAsyncQueueNext(pRequest);
; 90   :             m_pQueueListLast = pRequest;
; 91   :         }
; 92   :         else {
; 93   :             ASSERT(m_pQueueListHead==m_pQueueListLast);
; 94   :             m_pQueueListHead = m_pQueueListLast = pRequest;
; 95   :             fHeader = TRUE;
; 96   :         }
; 97   :         pRequest->AddRef();

  00038	e284007c	 add         r0, r4, #0x7C
  0003c	e3530000	 cmp         r3, #0
  00040	1595301c	 ldrne       r3, [r5, #0x1C]
  00044	13530000	 cmpne       r3, #0
  00048	15834064	 strne       r4, [r3, #0x64]
  0004c	05854018	 streq       r4, [r5, #0x18]
  00050	e585401c	 str         r4, [r5, #0x1C]
  00054	03a06001	 moveq       r6, #1
  00058	eb000000	 bl          InterlockedIncrement

; 98   :         if (fHeader) {
; 99   :             BOOL fSync= ((pRequest->SystemFlags & SD_FAST_PATH_AVAILABLE)!=0);

  0005c	e5943010	 ldr         r3, [r4, #0x10]
  00060	e3560000	 cmp         r6, #0
  00064	0a00001f	 beq         |$LN8@QueueBusRe|
  00068	e3130102	 tst         r3, #2, 2

; 100  :             status = SubmitRequestToHC(pRequest);

  0006c	e5953000	 ldr         r3, [r5]
  00070	13a07001	 movne       r7, #1
  00074	03a07000	 moveq       r7, #0
  00078	e5933000	 ldr         r3, [r3]
  0007c	e1a01004	 mov         r1, r4
  00080	e1a00005	 mov         r0, r5
  00084	e1a0e00f	 mov         lr, pc
  00088	e12fff13	 bx          r3
  0008c	e1b06000	 movs        r6, r0

; 101  :             if (!SD_API_SUCCESS(status)  || status == SD_API_STATUS_FAST_PATH_SUCCESS ) { 

  00090	4a000001	 bmi         |$LN6@QueueBusRe|
  00094	e3560002	 cmp         r6, #2
  00098	1a000015	 bne         |$LN2@QueueBusRe|
  0009c		 |$LN6@QueueBusRe|

; 102  :                 ASSERT(pRequest == m_pQueueListHead);
; 103  :                 ASSERT( pRequest->GetAsyncQueueNext()==NULL);
; 104  :                 // Failed or Fast pass completion,  CompleteRequest is never happen.
; 105  :                 if (fSync) {

  0009c	e3570000	 cmp         r7, #0
  000a0	0a00000b	 beq         |$LN5@QueueBusRe|

; 106  :                     m_pQueueListHead = pRequest->GetAsyncQueueNext();

  000a4	e5943064	 ldr         r3, [r4, #0x64]

; 107  :                     if (m_pQueueListHead == NULL)
; 108  :                         m_pQueueListLast = NULL;
; 109  :                     pRequest->SetStatus(status);
; 110  :                     pRequest->DeRef();                    

  000a8	e1a00004	 mov         r0, r4
  000ac	e3530000	 cmp         r3, #0
  000b0	0585801c	 streq       r8, [r5, #0x1C]
  000b4	e3560001	 cmp         r6, #1
  000b8	e5853018	 str         r3, [r5, #0x18]
  000bc	13a03001	 movne       r3, #1
  000c0	03a03000	 moveq       r3, #0
  000c4	e5843080	 str         r3, [r4, #0x80]
  000c8	e584603c	 str         r6, [r4, #0x3C]
  000cc	eb000000	 bl          |?DeRef@CSDBusRequest@@QAAKXZ|

; 111  :                 }
; 112  :                 else 

  000d0	ea000007	 b           |$LN2@QueueBusRe|
  000d4		 |$LN5@QueueBusRe|

; 113  :                     CompleteRequest(pRequest,fSync);

  000d4	e3a02000	 mov         r2, #0
  000d8	e1a01004	 mov         r1, r4
  000dc	e1a00005	 mov         r0, r5
  000e0	eb000000	 bl          |?CompleteRequest@CSDBusReqAsyncQueue@@QAAPAVCSDBusRequest@@PAV2@J@Z|

; 114  :             }
; 115  :         }
; 116  :         else { // Async any always.

  000e4	ea000002	 b           |$LN2@QueueBusRe|
  000e8		 |$LN8@QueueBusRe|

; 117  :             pRequest->SystemFlags &= ~ SD_FAST_PATH_AVAILABLE;
; 118  :             status = SD_API_STATUS_PENDING ;

  000e8	e3c33102	 bic         r3, r3, #2, 2
  000ec	e5843010	 str         r3, [r4, #0x10]
  000f0	e3a06001	 mov         r6, #1
  000f4		 |$LN2@QueueBusRe|

; 119  :         }
; 120  :         Unlock();

  000f4	e2850004	 add         r0, r5, #4
  000f8	eb000000	 bl          LeaveCriticalSection
  000fc		 |$LN11@QueueBusRe|

; 121  :             
; 122  :     }
; 123  :     else
; 124  :         ASSERT(FALSE);
; 125  :     return status;
; 126  : };

  000fc	e1a00006	 mov         r0, r6
  00100	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00104	e12fff1e	 bx          lr
  00108		 |$M37985|

			 ENDP  ; |?QueueBusRequest@CSDBusReqAsyncQueue@@QAAJPAVCSDBusRequest@@@Z|, CSDBusReqAsyncQueue::QueueBusRequest

	EXPORT	|??1CSDSlot@@UAA@XZ|			; CSDSlot::~CSDSlot
	IMPORT	|??1CSDWorkItem@@QAA@XZ|		; CSDWorkItem::~CSDWorkItem
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T38003| DCD	|$LN11@CSDSlot@2|
	DCD	0x40001301
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CSDSlot@@UAA@XZ| PROC		; CSDSlot::~CSDSlot

; 244  : {

  00000		 |$LN11@CSDSlot@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M38000|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3038	 ldr         r3, [pc, #0x38]
  0000c	e59f2030	 ldr         r2, [pc, #0x30]

; 245  :     ASSERT(!(m_SdHost.m_fHostAttached));
; 246  :     RemoveAllDevice();

  00010	e5843000	 str         r3, [r4]
  00014	e5842044	 str         r2, [r4, #0x44]
  00018	eb000000	 bl          |?RemoveAllDevice@CSDSlot@@QAAHXZ|

; 247  :     ASSERT(m_curHCOwned==NULL);
; 248  : }

  0001c	e28400e8	 add         r0, r4, #0xE8
  00020	eb000000	 bl          DeleteCriticalSection
  00024	e28400b4	 add         r0, r4, #0xB4
  00028	eb000000	 bl          DeleteCriticalSection
  0002c	e2840044	 add         r0, r4, #0x44
  00030	eb000000	 bl          |??1CSDBusReqAsyncQueue@@QAA@XZ|
  00034	e1a00004	 mov         r0, r4
  00038	eb000000	 bl          |??1CSDWorkItem@@QAA@XZ|
  0003c	e8bd4010	 ldmia       sp!, {r4, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$LN12@CSDSlot@2|
  00044		 |$LN13@CSDSlot@2|
  00044	00000000	 DCD         |??_7CSDSlot@@6BCSDBusReqAsyncQueue@@@|
  00048		 |$LN14@CSDSlot@2|
  00048	00000000	 DCD         |??_7CSDSlot@@6BCSDWorkItem@@@|
  0004c		 |$M38001|

			 ENDP  ; |??1CSDSlot@@UAA@XZ|, CSDSlot::~CSDSlot

	IMPORT	|?SDLoadDevice@CSDDevice@@QAAJXZ|	; CSDDevice::SDLoadDevice
	IMPORT	|?SelectCardInterface@CSDDevice@@QAAJXZ| ; CSDDevice::SelectCardInterface
	IMPORT	|?DeactivateCardDetect@CSDDevice@@QAAJXZ| ; CSDDevice::DeactivateCardDetect
	IMPORT	|?GetCardRegisters@CSDDevice@@QAAJXZ|	; CSDDevice::GetCardRegisters
	IMPORT	|?DetectSDCard@CSDDevice@@QAAJAAK@Z|	; CSDDevice::DetectSDCard
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sddevice.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T38086| DCD	|$LN67@HandleAddD|
	DCD	0x4000b702
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?HandleAddDevice@CSDSlot@@UAAHXZ| PROC ; CSDSlot::HandleAddDevice

; 364  : {

  00000		 |$LN67@HandleAddD|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M38083|
  00008	e1a04000	 mov         r4, r0
  0000c	e3a03c05	 mov         r3, #5, 24

; 365  :     // Create Function Zero.
; 366  :     ASSERT(m_pFuncDevice[0]==NULL) ;
; 367  :     BOOL fResult = CSDBusReqAsyncQueue::Init();
; 368  :     ASSERT(fResult);
; 369  :     CSDDevice * psdDevice = new CSDDevice(0, *this);

  00010	e3a06001	 mov         r6, #1
  00014	e3830068	 orr         r0, r3, #0x68
  00018	e5846064	 str         r6, [r4, #0x64]
  0001c	eb000000	 bl          |??2@YAPAXI@Z|
  00020	e3500000	 cmp         r0, #0
  00024	0a000004	 beq         |$LN28@HandleAddD|
  00028	e1a02004	 mov         r2, r4
  0002c	e3a01000	 mov         r1, #0
  00030	eb000000	 bl          |??0CSDDevice@@QAA@KAAVCSDSlot@@@Z|
  00034	e1a05000	 mov         r5, r0
  00038	ea000000	 b           |$LN29@HandleAddD|
  0003c		 |$LN28@HandleAddD|
  0003c	e3a05000	 mov         r5, #0
  00040		 |$LN29@HandleAddD|

; 370  :     if (psdDevice && psdDevice->Init() && InsertDevice(0,psdDevice)) {

  00040	e3550000	 cmp         r5, #0
  00044	0a0000a0	 beq         |$LN30@HandleAddD|
  00048	e5953000	 ldr         r3, [r5]
  0004c	e1a00005	 mov         r0, r5
  00050	e5933004	 ldr         r3, [r3, #4]
  00054	e1a0e00f	 mov         lr, pc
  00058	e12fff13	 bx          r3
  0005c	e3500000	 cmp         r0, #0
  00060	0a000093	 beq         |$LN25@HandleAddD|
  00064	e1a02005	 mov         r2, r5
  00068	e3a01000	 mov         r1, #0
  0006c	e1a00004	 mov         r0, r4
  00070	eb000000	 bl          |?InsertDevice@CSDSlot@@QAAPAVCSDDevice@@KPAV2@@Z|
  00074	e3500000	 cmp         r0, #0
  00078	0a00008d	 beq         |$LN25@HandleAddD|

; 371  :         CSDDevice * psdDevice = GetFunctionDevice(0);

  0007c	e3a01000	 mov         r1, #0
  00080	e1a00004	 mov         r0, r4
  00084	eb000000	 bl          |?GetFunctionDevice@CSDSlot@@QAAPAVCSDDevice@@K@Z|
  00088	e1b05000	 movs        r5, r0

; 372  :         if (psdDevice ) {

  0008c	0a00008e	 beq         |$LN30@HandleAddD|

; 373  :             psdDevice->Attach();

  00090	e5953000	 ldr         r3, [r5]
  00094	e1a00005	 mov         r0, r5
  00098	e5933008	 ldr         r3, [r3, #8]
  0009c	e1a0e00f	 mov         lr, pc
  000a0	e12fff13	 bx          r3

; 374  :             m_SlotState = SlotIdle ;
; 375  :             DelayForPowerUp();

  000a4	e5943078	 ldr         r3, [r4, #0x78]
  000a8	e5846084	 str         r6, [r4, #0x84]
  000ac	e3530000	 cmp         r3, #0
  000b0	11a00003	 movne       r0, r3
  000b4	03a00f7d	 moveq       r0, #0x7D, 30
  000b8	eb000000	 bl          Sleep

; 376  :             // Default Value.
; 377  :             memset(&m_SlotInterfaceEx,0,sizeof(m_SlotInterfaceEx));

  000bc	e284008c	 add         r0, r4, #0x8C
  000c0	e3a02020	 mov         r2, #0x20
  000c4	e3a01000	 mov         r1, #0
  000c8	eb000000	 bl          memset

; 378  :             m_SlotInterfaceEx.ClockRate = SD_DEFAULT_CARD_ID_CLOCK_RATE;
; 379  :             DWORD dwNumOfFunc = 0;
; 380  :             if (SD_API_SUCCESS(SDSetCardInterfaceForSlot(&m_SlotInterfaceEx)) &&
; 381  :                     SD_API_SUCCESS(psdDevice->DetectSDCard(dwNumOfFunc))) {

  000cc	e5941080	 ldr         r1, [r4, #0x80]
  000d0	e594007c	 ldr         r0, [r4, #0x7C]
  000d4	e3a03b61	 mov         r3, #0x61, 22
  000d8	e3833e2a	 orr         r3, r3, #0x2A, 28
  000dc	e3a0e000	 mov         lr, #0
  000e0	e284208c	 add         r2, r4, #0x8C
  000e4	e5843090	 str         r3, [r4, #0x90]
  000e8	e58de000	 str         lr, [sp]
  000ec	eb000000	 bl          |?SlotSetupInterface@CSDHost@@IAAJKPAU_SD_CARD_INTERFACE_EX@@@Z|
  000f0	e3500000	 cmp         r0, #0
  000f4	4a00006b	 bmi         |$LN4@HandleAddD|
  000f8	e28d1000	 add         r1, sp, #0
  000fc	e1a00005	 mov         r0, r5
  00100	eb000000	 bl          |?DetectSDCard@CSDDevice@@QAAJAAK@Z|
  00104	e3500000	 cmp         r0, #0
  00108	4a000066	 bmi         |$LN4@HandleAddD|

; 382  :                 m_AllocatedPower = 0 ;

  0010c	e3a09000	 mov         r9, #0

; 383  :                 if (SD_API_SUCCESS ( psdDevice->GetCardRegisters()) && 
; 384  :                         SD_API_SUCCESS(psdDevice->DeactivateCardDetect())&&
; 385  :                         SD_API_SUCCESS(psdDevice->SDGetSDIOPnpInformation(*psdDevice)) &&
; 386  :                         SD_API_SUCCESS(EnumMultiFunction(*psdDevice,dwNumOfFunc ))) {

  00110	e1a00005	 mov         r0, r5
  00114	e1c49bb0	 strh        r9, [r4, #0xB0]
  00118	eb000000	 bl          |?GetCardRegisters@CSDDevice@@QAAJXZ|
  0011c	e3500000	 cmp         r0, #0
  00120	4a000060	 bmi         |$LN4@HandleAddD|
  00124	e1a00005	 mov         r0, r5
  00128	eb000000	 bl          |?DeactivateCardDetect@CSDDevice@@QAAJXZ|
  0012c	e3500000	 cmp         r0, #0
  00130	4a00005c	 bmi         |$LN4@HandleAddD|
  00134	e1a01005	 mov         r1, r5
  00138	e1a00005	 mov         r0, r5
  0013c	eb000000	 bl          |?SDGetSDIOPnpInformation@CSDDevice@@QAAJAAV1@@Z|
  00140	e3500000	 cmp         r0, #0
  00144	4a000057	 bmi         |$LN4@HandleAddD|
  00148	e59d2000	 ldr         r2, [sp]
  0014c	e1a01005	 mov         r1, r5
  00150	e1a00004	 mov         r0, r4
  00154	eb000000	 bl          |?EnumMultiFunction@CSDSlot@@IAAJAAVCSDDevice@@K@Z|
  00158	e3500000	 cmp         r0, #0
  0015c	4a000051	 bmi         |$LN4@HandleAddD|

; 387  :                         
; 388  :                     SD_API_STATUS status = SD_API_STATUS_SUCCESS; // status
; 389  :                     
; 390  :                     for (DWORD dwIndex = 0; dwIndex<dwNumOfFunc && SD_API_SUCCESS(status); dwIndex++) {

  00160	e59d3000	 ldr         r3, [sp]
  00164	e3a06000	 mov         r6, #0
  00168	e3a07000	 mov         r7, #0
  0016c	e3530000	 cmp         r3, #0
  00170	0a000011	 beq         |$LN62@HandleAddD|
  00174		 |$LL21@HandleAddD|
  00174	e3560000	 cmp         r6, #0
  00178	4a000013	 bmi         |$LN16@HandleAddD|

; 391  :                         CSDDevice * childDevice = GetFunctionDevice(dwIndex);

  0017c	e1a01007	 mov         r1, r7
  00180	e1a00004	 mov         r0, r4
  00184	eb000000	 bl          |?GetFunctionDevice@CSDSlot@@QAAPAVCSDDevice@@K@Z|
  00188	e1b08000	 movs        r8, r0

; 392  :                         if (childDevice) {

  0018c	0a000004	 beq         |$LN20@HandleAddD|

; 393  :                             status = childDevice->SelectCardInterface();

  00190	e1a00008	 mov         r0, r8
  00194	eb000000	 bl          |?SelectCardInterface@CSDDevice@@QAAJXZ|
  00198	e1a06000	 mov         r6, r0

; 394  :                             ASSERT(SD_API_SUCCESS(status));
; 395  :                             childDevice->DeRef();

  0019c	e1a00008	 mov         r0, r8
  001a0	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  001a4		 |$LN20@HandleAddD|
  001a4	e59d3000	 ldr         r3, [sp]
  001a8	e2877001	 add         r7, r7, #1
  001ac	e1570003	 cmp         r7, r3
  001b0	3affffef	 bcc         |$LL21@HandleAddD|

; 396  :                         }
; 397  :                         else 
; 398  :                             ASSERT(FALSE);
; 399  :                     }
; 400  :                     if (SD_API_SUCCESS(status))

  001b4	e3560000	 cmp         r6, #0
  001b8	4a000003	 bmi         |$LN16@HandleAddD|
  001bc		 |$LN62@HandleAddD|

; 401  :                         status = SelectSlotInterface();

  001bc	e1a00004	 mov         r0, r4
  001c0	eb000000	 bl          |?SelectSlotInterface@CSDSlot@@IAAJXZ|
  001c4	e59d3000	 ldr         r3, [sp]
  001c8	e1a06000	 mov         r6, r0
  001cc		 |$LN16@HandleAddD|

; 402  : 					
; 403  :                     ASSERT(SD_API_SUCCESS(status));
; 404  :                     
; 405  :                     for (dwIndex = 0; dwIndex<dwNumOfFunc &&SD_API_SUCCESS(status); dwIndex++) {

  001cc	e3a07000	 mov         r7, #0
  001d0	e3530000	 cmp         r3, #0
  001d4	0a000010	 beq         |$LN63@HandleAddD|
  001d8		 |$LL15@HandleAddD|
  001d8	e3560000	 cmp         r6, #0
  001dc	4a00000e	 bmi         |$LN63@HandleAddD|

; 406  :                         CSDDevice * childDevice = GetFunctionDevice(dwIndex);

  001e0	e1a01007	 mov         r1, r7
  001e4	e1a00004	 mov         r0, r4
  001e8	eb000000	 bl          |?GetFunctionDevice@CSDSlot@@QAAPAVCSDDevice@@K@Z|
  001ec	e1b08000	 movs        r8, r0

; 407  :                         if (childDevice) {

  001f0	0a000005	 beq         |$LN14@HandleAddD|

; 408  :                             status = childDevice->SetCardInterface(&m_SlotInterfaceEx);

  001f4	e284108c	 add         r1, r4, #0x8C
  001f8	e1a00008	 mov         r0, r8
  001fc	eb000000	 bl          |?SetCardInterface@CSDDevice@@QAAJPAU_SD_CARD_INTERFACE_EX@@@Z|
  00200	e1a06000	 mov         r6, r0

; 409  :                             ASSERT(SD_API_SUCCESS(status));
; 410  :                             childDevice->DeRef();

  00204	e1a00008	 mov         r0, r8
  00208	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  0020c		 |$LN14@HandleAddD|
  0020c	e59d3000	 ldr         r3, [sp]
  00210	e2877001	 add         r7, r7, #1
  00214	e1570003	 cmp         r7, r3
  00218	3affffee	 bcc         |$LL15@HandleAddD|
  0021c		 |$LN63@HandleAddD|

; 411  :                         }
; 412  :                         else 
; 413  :                             ASSERT(FALSE);
; 414  :                     }
; 415  :                     status = SDSetCardInterfaceForSlot(&m_SlotInterfaceEx);

  0021c	e5941080	 ldr         r1, [r4, #0x80]
  00220	e594007c	 ldr         r0, [r4, #0x7C]
  00224	e284208c	 add         r2, r4, #0x8C
  00228	eb000000	 bl          |?SlotSetupInterface@CSDHost@@IAAJKPAU_SD_CARD_INTERFACE_EX@@@Z|

; 416  :                     ASSERT(SD_API_SUCCESS(status));
; 417  :                     
; 418  :                     if (psdDevice->GetDeviceType() == Device_SD_IO) { // Remove First Function.

  0022c	e5953494	 ldr         r3, [r5, #0x494]
  00230	e3530003	 cmp         r3, #3

; 419  :                         psdDevice->SetDeviceType(Device_Unknown);

  00234	05859494	 streq       r9, [r5, #0x494]
  00238	0a000002	 beq         |$LN52@HandleAddD|

; 420  :                     }
; 421  :                     else if (psdDevice->GetDeviceType() == Device_SD_Combo) { // Remove First Function.

  0023c	e3530004	 cmp         r3, #4

; 422  :                         psdDevice->SetDeviceType(Device_SD_Memory);

  00240	03a03002	 moveq       r3, #2
  00244	05853494	 streq       r3, [r5, #0x494]
  00248		 |$LN52@HandleAddD|

; 423  :                     }
; 424  : /* Start Testing Code.
; 425  :                     else if (psdDevice->GetDeviceType() == Device_SD_Memory) { // we do some test
; 426  :                         if (Capabilities & SD_SLOT_HIGH_SPEED_CAPABLE) {
; 427  :                             SD_CARD_INTERFACE_EX sdCardInterface = m_SlotInterfaceEx;
; 428  :                             sdCardInterface.InterfaceModeEx.bit.sdHighSpeed = 1;
; 429  :                             SD_API_STATUS status = psdDevice->SDSetCardFeature_I(SD_SET_CARD_INTERFACE_EX, &sdCardInterface, sizeof(sdCardInterface));
; 430  :                             ASSERT(SD_API_SUCCESS(status));
; 431  :                         }
; 432  :                     }
; 433  : */                     
; 434  :                     if (SD_API_SUCCESS(status)) {

  00248	e3500000	 cmp         r0, #0
  0024c	4a000015	 bmi         |$LN4@HandleAddD|

; 435  :                         m_SlotState = SlotInitFailed;
; 436  :                         for (dwIndex = 0; dwIndex<dwNumOfFunc; dwIndex++) {

  00250	e59d3000	 ldr         r3, [sp]
  00254	e3a02004	 mov         r2, #4
  00258	e5842084	 str         r2, [r4, #0x84]
  0025c	e3530000	 cmp         r3, #0
  00260	e3a06000	 mov         r6, #0
  00264	0a00000f	 beq         |$LN4@HandleAddD|
  00268		 |$LL6@HandleAddD|

; 437  :                             CSDDevice * childDevice = GetFunctionDevice(dwIndex);

  00268	e1a01006	 mov         r1, r6
  0026c	e1a00004	 mov         r0, r4
  00270	eb000000	 bl          |?GetFunctionDevice@CSDSlot@@QAAPAVCSDDevice@@K@Z|
  00274	e1b07000	 movs        r7, r0

; 438  :                             DEBUGMSG(ZONE_ENABLE_INFO,(TEXT("HandleAddDevice: LoadDevice type = %d, slot %d"),
; 439  :                                 (childDevice!=NULL?childDevice->GetDeviceType():Device_Unknown),
; 440  :                                 m_dwSlotIndex));
; 441  :                             if (childDevice && childDevice->GetDeviceType()!=Device_Unknown ) {

  00278	0a000006	 beq         |$LN5@HandleAddD|
  0027c	e5973494	 ldr         r3, [r7, #0x494]
  00280	e3530000	 cmp         r3, #0
  00284	0a000003	 beq         |$LN5@HandleAddD|

; 442  :                                 status = childDevice->SDLoadDevice();

  00288	e1a00007	 mov         r0, r7
  0028c	eb000000	 bl          |?SDLoadDevice@CSDDevice@@QAAJXZ|

; 443  :                                 ASSERT(SD_API_SUCCESS(status));
; 444  :                                 childDevice->DeRef();

  00290	e1a00007	 mov         r0, r7
  00294	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  00298		 |$LN5@HandleAddD|
  00298	e59d3000	 ldr         r3, [sp]
  0029c	e2866001	 add         r6, r6, #1
  002a0	e1560003	 cmp         r6, r3
  002a4	3affffef	 bcc         |$LL6@HandleAddD|
  002a8		 |$LN4@HandleAddD|

; 445  :                             }
; 446  :                         }
; 447  :                     }
; 448  :                 }
; 449  :             }
; 450  :             psdDevice->DeRef();

  002a8	e1a00005	 mov         r0, r5
  002ac	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|

; 451  :         }
; 452  :     }

  002b0	ea000005	 b           |$LN30@HandleAddD|
  002b4		 |$LN25@HandleAddD|

; 453  :     else if (psdDevice) {
; 454  :         delete psdDevice;

  002b4	e5953000	 ldr         r3, [r5]
  002b8	e3a01001	 mov         r1, #1
  002bc	e1a00005	 mov         r0, r5
  002c0	e5933000	 ldr         r3, [r3]
  002c4	e1a0e00f	 mov         lr, pc
  002c8	e12fff13	 bx          r3
  002cc		 |$LN30@HandleAddD|

; 455  :     }
; 456  :     return TRUE;

  002cc	e3a00001	 mov         r0, #1

; 457  : }

  002d0	e28dd004	 add         sp, sp, #4
  002d4	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  002d8	e12fff1e	 bx          lr
  002dc		 |$M38084|

			 ENDP  ; |?HandleAddDevice@CSDSlot@@UAAHXZ|, CSDSlot::HandleAddDevice


  00000			 AREA	 |.pdata|, PDATA
|$T38096| DCD	|$LN5@HandleRemo|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?HandleRemoveDevice@CSDSlot@@UAAHXZ| PROC ; CSDSlot::HandleRemoveDevice

; 459  : {

  00000		 |$LN5@HandleRemo|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M38093|
  00004	e1a04000	 mov         r4, r0

; 460  :     CSDBusReqAsyncQueue::Detach();

  00008	e2840044	 add         r0, r4, #0x44
  0000c	eb000000	 bl          |?Detach@CSDBusReqAsyncQueue@@QAAHXZ|

; 461  :     RemoveAllDevice();

  00010	e1a00004	 mov         r0, r4
  00014	eb000000	 bl          |?RemoveAllDevice@CSDSlot@@QAAHXZ|

; 462  :     ASSERT(m_curHCOwned==NULL);
; 463  :     return TRUE;

  00018	e3a00001	 mov         r0, #1

; 464  : }

  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$M38094|

			 ENDP  ; |?HandleRemoveDevice@CSDSlot@@UAAHXZ|, CSDSlot::HandleRemoveDevice

	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$T38107| DCD	|$LN6@scalar|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GCSDSlot@@UAAPAXI@Z| PROC		; CSDSlot::`scalar deleting destructor'
  00000		 |$LN6@scalar|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M38104|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0
  0000c	eb000000	 bl          |??1CSDSlot@@UAA@XZ|
  00010	e3140001	 tst         r4, #1
  00014	11a00005	 movne       r0, r5
  00018	1b000000	 blne        |??3@YAXPAX@Z|
  0001c	e1a00005	 mov         r0, r5
  00020	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M38105|

			 ENDP  ; |??_GCSDSlot@@UAAPAXI@Z|, CSDSlot::`scalar deleting destructor'

	END
