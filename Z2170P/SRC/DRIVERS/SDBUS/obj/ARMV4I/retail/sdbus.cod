; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\Z2170P\SRC\DRIVERS\SDBUS\sdbus.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|?g_pSdContainer@CSDHostContainer@@0PAV1@A| [ DATA ] ; CSDHostContainer::g_pSdContainer

  00000			 AREA	 |.bss|, NOINIT
|?g_pSdContainer@CSDHostContainer@@0PAV1@A| % 0x4	; CSDHostContainer::g_pSdContainer
	EXPORT	|?Reset@MarshalledBuffer_t@@AAAXXZ|	; MarshalledBuffer_t::Reset
; File c:\wince600\public\common\oak\inc\marshal.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T37840| DCD	|$LN5@Reset|
	DCD	0x40000500
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Reset@MarshalledBuffer_t@@AAAXXZ| PROC ; MarshalledBuffer_t::Reset

; 32   :     void Reset() {

  00000		 |$LN5@Reset|
  00000		 |$M37837|

; 33   :         m_pLocalSyncMarshalled = NULL;

  00000	e3a03000	 mov         r3, #0
  00004	e5803004	 str         r3, [r0, #4]

; 34   :         m_pLocalAsync = NULL;

  00008	e5803000	 str         r3, [r0]

; 35   :         m_cbSize = 0;

  0000c	e580300c	 str         r3, [r0, #0xC]

; 36   :     }

  00010	e12fff1e	 bx          lr
  00014		 |$M37838|

			 ENDP  ; |?Reset@MarshalledBuffer_t@@AAAXXZ|, MarshalledBuffer_t::Reset

	EXPORT	|?Unmarshal@MarshalledBuffer_t@@QAAJXZ|	; MarshalledBuffer_t::Unmarshal
	IMPORT	|CeCloseCallerBuffer|
	IMPORT	|CeFreeAsynchronousBuffer|

  00000			 AREA	 |.pdata|, PDATA
|$T37854| DCD	|$LN9@Unmarshal|
	DCD	0x40001701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Unmarshal@MarshalledBuffer_t@@QAAJXZ| PROC ; MarshalledBuffer_t::Unmarshal

; 194  :     {

  00000		 |$LN9@Unmarshal|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37851|
  00004	e1a04000	 mov         r4, r0

; 195  :         HRESULT result = HRESULT_FROM_WIN32(ERROR_ALREADY_EXISTS);
; 196  :         if (m_pLocalSyncMarshalled) {

  00008	e5943004	 ldr         r3, [r4, #4]
  0000c	e59f0044	 ldr         r0, [pc, #0x44]
  00010	e1b01003	 movs        r1, r3
  00014	0a00000d	 beq         |$LN5@Unmarshal|

; 197  :             if (m_pLocalAsync) {

  00018	e5943000	 ldr         r3, [r4]
  0001c	e1b00003	 movs        r0, r3

; 198  :                 CeFreeAsynchronousBuffer(m_pLocalAsync, m_pLocalSyncMarshalled,
; 199  :                                          m_cbSize, m_ArgumentDescriptor);

  00020	15943010	 ldrne       r3, [r4, #0x10]
  00024	1594200c	 ldrne       r2, [r4, #0xC]
  00028	1b000000	 blne        CeFreeAsynchronousBuffer

; 200  :             }
; 201  : 
; 202  :             result = CeCloseCallerBuffer(m_pLocalSyncMarshalled,
; 203  :                                          m_pCallerUnmarshalled, m_cbSize,
; 204  :                                          m_ArgumentDescriptor);

  0002c	e5943010	 ldr         r3, [r4, #0x10]
  00030	e594200c	 ldr         r2, [r4, #0xC]
  00034	e5941008	 ldr         r1, [r4, #8]
  00038	e5940004	 ldr         r0, [r4, #4]
  0003c	eb000000	 bl          CeCloseCallerBuffer

; 205  :             Reset();

  00040	e3a03000	 mov         r3, #0
  00044	e5843004	 str         r3, [r4, #4]
  00048	e5843000	 str         r3, [r4]
  0004c	e584300c	 str         r3, [r4, #0xC]
  00050		 |$LN5@Unmarshal|

; 206  :         }
; 207  :         return result;
; 208  :     }

  00050	e8bd4010	 ldmia       sp!, {r4, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$LN10@Unmarshal|
  00058		 |$LN11@Unmarshal|
  00058	800700b7	 DCD         0x800700b7
  0005c		 |$M37852|

			 ENDP  ; |?Unmarshal@MarshalledBuffer_t@@QAAJXZ|, MarshalledBuffer_t::Unmarshal

	EXPORT	|?ptr@MarshalledBuffer_t@@QBAPAXXZ|	; MarshalledBuffer_t::ptr

  00000			 AREA	 |.pdata|, PDATA
|$T37866| DCD	|$LN6@ptr|
	DCD	0x40000500
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ptr@MarshalledBuffer_t@@QBAPAXXZ| PROC ; MarshalledBuffer_t::ptr

; 212  :     LPVOID ptr() const {

  00000		 |$LN6@ptr|
  00000		 |$M37863|

; 213  :         if (m_pLocalAsync) {

  00000	e5903000	 ldr         r3, [r0]
  00004	e3530000	 cmp         r3, #0

; 214  :             return m_pLocalAsync;
; 215  :         }
; 216  :         return m_pLocalSyncMarshalled;

  00008	05903004	 ldreq       r3, [r0, #4]

; 217  :     }

  0000c	e1a00003	 mov         r0, r3
  00010	e12fff1e	 bx          lr
  00014		 |$M37864|

			 ENDP  ; |?ptr@MarshalledBuffer_t@@QBAPAXXZ|, MarshalledBuffer_t::ptr

	EXPORT	|??0CLockObject@@QAA@XZ|		; CLockObject::CLockObject
	IMPORT	|InitializeCriticalSection|
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T37876| DCD	|$LN5@CLockObjec|
	DCD	0x40000601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CLockObject@@QAA@XZ| PROC		; CLockObject::CLockObject

; 36   :     CLockObject()

  00000		 |$LN5@CLockObjec|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37873|
  00004	e1a04000	 mov         r4, r0

; 37   :     {
; 38   :         InitializeCriticalSection( &m_CSection );

  00008	eb000000	 bl          InitializeCriticalSection

; 39   :     };

  0000c	e1a00004	 mov         r0, r4
  00010	e8bd4010	 ldmia       sp!, {r4, lr}
  00014	e12fff1e	 bx          lr
  00018		 |$M37874|

			 ENDP  ; |??0CLockObject@@QAA@XZ|, CLockObject::CLockObject

	EXPORT	|??1CLockObject@@QAA@XZ|		; CLockObject::~CLockObject
	IMPORT	|DeleteCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T37884| DCD	|$LN5@CLockObjec@2|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CLockObject@@QAA@XZ| PROC		; CLockObject::~CLockObject

; 41   :     {

  00000		 |$LN5@CLockObjec@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37881|

; 42   :         DeleteCriticalSection( &m_CSection );

  00004	eb000000	 bl          DeleteCriticalSection

; 43   :     };

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M37882|

			 ENDP  ; |??1CLockObject@@QAA@XZ|, CLockObject::~CLockObject

	EXPORT	|?Lock@CLockObject@@QAAXXZ|		; CLockObject::Lock
	IMPORT	|EnterCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T37892| DCD	|$LN5@Lock|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Lock@CLockObject@@QAAXXZ| PROC	; CLockObject::Lock

; 45   :     {

  00000		 |$LN5@Lock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37889|

; 46   :         EnterCriticalSection( &m_CSection );

  00004	eb000000	 bl          EnterCriticalSection

; 47   :     };

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M37890|

			 ENDP  ; |?Lock@CLockObject@@QAAXXZ|, CLockObject::Lock

	EXPORT	|?Unlock@CLockObject@@QAAXXZ|		; CLockObject::Unlock
	IMPORT	|LeaveCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T37900| DCD	|$LN5@Unlock|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Unlock@CLockObject@@QAAXXZ| PROC	; CLockObject::Unlock

; 49   :     {

  00000		 |$LN5@Unlock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37897|

; 50   :         LeaveCriticalSection( &m_CSection );

  00004	eb000000	 bl          LeaveCriticalSection

; 51   :     };

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M37898|

			 ENDP  ; |?Unlock@CLockObject@@QAAXXZ|, CLockObject::Unlock

	EXPORT	|??0CRefObject@@QAA@XZ|			; CRefObject::CRefObject
	EXPORT	|??_7CRefObject@@6B@| [ DATA ]		; CRefObject::`vftable'
	IMPORT	|??_ECRefObject@@UAAPAXI@Z|, WEAK |??_GCRefObject@@UAAPAXI@Z| ; CRefObject::`vector deleting destructor', CRefObject::`scalar deleting destructor'
; File c:\wince600\public\common\oak\inc\crefcon.h

  00000			 AREA	 |.pdata|, PDATA
|$T37910| DCD	|$LN5@CRefObject|
	DCD	0x40000600

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CRefObject@@6B@| DCD |??_ECRefObject@@UAAPAXI@Z|	; CRefObject::`vftable'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CRefObject@@QAA@XZ| PROC		; CRefObject::CRefObject

; 35   :     CRefObject()

  00000		 |$LN5@CRefObject|
  00000		 |$M37907|
  00000	e59f300c	 ldr         r3, [pc, #0xC]

; 36   :     {
; 37   :         m_lRefCount = 0;

  00004	e3a02000	 mov         r2, #0
  00008	e5802004	 str         r2, [r0, #4]
  0000c	e5803000	 str         r3, [r0]

; 38   :     };

  00010	e12fff1e	 bx          lr
  00014		 |$LN6@CRefObject|
  00014		 |$LN7@CRefObject|
  00014	00000000	 DCD         |??_7CRefObject@@6B@|
  00018		 |$M37908|

			 ENDP  ; |??0CRefObject@@QAA@XZ|, CRefObject::CRefObject

	EXPORT	|??1CRefObject@@UAA@XZ|			; CRefObject::~CRefObject

  00000			 AREA	 |.pdata|, PDATA
|$T37920| DCD	|$LN5@CRefObject@2|
	DCD	0x40000400
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CRefObject@@UAA@XZ| PROC		; CRefObject::~CRefObject

; 40   :     {

  00000		 |$LN5@CRefObject@2|
  00000		 |$M37917|
  00000	e59f3004	 ldr         r3, [pc, #4]
  00004	e5803000	 str         r3, [r0]

; 41   :         ;};

  00008	e12fff1e	 bx          lr
  0000c		 |$LN6@CRefObject@2|
  0000c		 |$LN7@CRefObject@2|
  0000c	00000000	 DCD         |??_7CRefObject@@6B@|
  00010		 |$M37918|

			 ENDP  ; |??1CRefObject@@UAA@XZ|, CRefObject::~CRefObject

	EXPORT	|?AddRef@CRefObject@@QAAKXZ|		; CRefObject::AddRef
	IMPORT	|InterlockedIncrement|

  00000			 AREA	 |.pdata|, PDATA
|$T37932| DCD	|$LN5@AddRef|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AddRef@CRefObject@@QAAKXZ| PROC	; CRefObject::AddRef

; 43   :     {

  00000		 |$LN5@AddRef|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37929|

; 44   :         return (DWORD)InterlockedIncrement(&m_lRefCount);

  00004	e2800004	 add         r0, r0, #4
  00008	eb000000	 bl          InterlockedIncrement

; 45   :     };

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M37930|

			 ENDP  ; |?AddRef@CRefObject@@QAAKXZ|, CRefObject::AddRef

	EXPORT	|?DeRef@CRefObject@@QAAKXZ|		; CRefObject::DeRef
	IMPORT	|InterlockedDecrement|

  00000			 AREA	 |.pdata|, PDATA
|$T37947| DCD	|$LN8@DeRef|
	DCD	0x40001101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DeRef@CRefObject@@QAAKXZ| PROC	; CRefObject::DeRef

; 47   :     {

  00000		 |$LN8@DeRef|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M37944|
  00004	e1a04000	 mov         r4, r0

; 48   :         LONG lReturn = InterlockedDecrement(&m_lRefCount);

  00008	e2840004	 add         r0, r4, #4
  0000c	eb000000	 bl          InterlockedDecrement
  00010	e1a05000	 mov         r5, r0

; 49   :         if( lReturn <= 0 ) {

  00014	e3550000	 cmp         r5, #0
  00018	ca000006	 bgt         |$LN4@DeRef|

; 50   :             delete this;

  0001c	e3540000	 cmp         r4, #0
  00020	15943000	 ldrne       r3, [r4]
  00024	13a01001	 movne       r1, #1
  00028	11a00004	 movne       r0, r4
  0002c	15933000	 ldrne       r3, [r3]
  00030	11a0e00f	 movne       lr, pc
  00034	112fff13	 bxne        r3
  00038		 |$LN4@DeRef|

; 51   :         }
; 52   :         return (DWORD)lReturn;
; 53   :     }

  00038	e1a00005	 mov         r0, r5
  0003c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M37945|

			 ENDP  ; |?DeRef@CRefObject@@QAAKXZ|, CRefObject::DeRef

	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$T37961| DCD	|$LN8@scalar|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GCRefObject@@UAAPAXI@Z| PROC	; CRefObject::`scalar deleting destructor'
  00000		 |$LN8@scalar|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37958|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3014	 ldr         r3, [pc, #0x14]
  0000c	e3110001	 tst         r1, #1
  00010	e5843000	 str         r3, [r4]
  00014	1b000000	 blne        |??3@YAXPAX@Z|
  00018	e1a00004	 mov         r0, r4
  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$LN9@scalar|
  00024		 |$LN10@scalar|
  00024	00000000	 DCD         |??_7CRefObject@@6B@|
  00028		 |$M37959|

			 ENDP  ; |??_GCRefObject@@UAAPAXI@Z|, CRefObject::`scalar deleting destructor'

	EXPORT	|??0CRegistryEdit@@QAA@PBG@Z|		; CRegistryEdit::CRegistryEdit
	IMPORT	|OpenDeviceKey|
; File c:\wince600\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.pdata|, PDATA
|$T37974| DCD	|$LN6@CRegistryE|
	DCD	0x40000c01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CRegistryEdit@@QAA@PBG@Z| PROC	; CRegistryEdit::CRegistryEdit

; 36   :     CRegistryEdit( LPCTSTR RegPath )

  00000		 |$LN6@CRegistryE|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M37971|
  00004	e3510000	 cmp         r1, #0
  00008	e1a04000	 mov         r4, r0

; 37   :     {
; 38   :         m_hDevKey = NULL;

  0000c	e3a03000	 mov         r3, #0
  00010	e5843000	 str         r3, [r4]

; 39   :         if( RegPath )

  00014	0a000002	 beq         |$LN1@CRegistryE|

; 40   :         {
; 41   :             m_hDevKey = OpenDeviceKey( RegPath );

  00018	e1a00001	 mov         r0, r1
  0001c	eb000000	 bl          OpenDeviceKey
  00020	e5840000	 str         r0, [r4]
  00024		 |$LN1@CRegistryE|

; 42   :         }
; 43   :     }

  00024	e1a00004	 mov         r0, r4
  00028	e8bd4010	 ldmia       sp!, {r4, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M37972|

			 ENDP  ; |??0CRegistryEdit@@QAA@PBG@Z|, CRegistryEdit::CRegistryEdit

	EXPORT	|??1CRegistryEdit@@QAA@XZ|		; CRegistryEdit::~CRegistryEdit
	IMPORT	|RegCloseKey|

  00000			 AREA	 |.pdata|, PDATA
|$T37982| DCD	|$LN6@CRegistryE@2|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CRegistryEdit@@QAA@XZ| PROC	; CRegistryEdit::~CRegistryEdit

; 80   :     {

  00000		 |$LN6@CRegistryE@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M37979|

; 81   :         if( m_hDevKey )

  00004	e5903000	 ldr         r3, [r0]
  00008	e3530000	 cmp         r3, #0

; 82   :         {
; 83   :             RegCloseKey( m_hDevKey );

  0000c	11a00003	 movne       r0, r3
  00010	1b000000	 blne        RegCloseKey

; 84   :         }
; 85   :     }

  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M37980|

			 ENDP  ; |??1CRegistryEdit@@QAA@XZ|, CRegistryEdit::~CRegistryEdit

	EXPORT	|?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z| ; CRegistryEdit::GetRegValue
	IMPORT	|RegQueryValueExW|

  00000			 AREA	 |.pdata|, PDATA
|$T37996| DCD	|$LN7@GetRegValu|
	DCD	0x40001404
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z| PROC ; CRegistryEdit::GetRegValue

; 130  :     {

  00000		 |$LN7@GetRegValu|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5030	 stmdb       sp!, {r4, r5, r12, lr}
  0000c	e24dd00c	 sub         sp, sp, #0xC
  00010		 |$M37993|
  00010	e1a04002	 mov         r4, r2

; 131  :         DWORD dwType = 0;
; 132  :         LONG status = ::RegQueryValueEx( m_hDevKey,
; 133  :                                            lpcName,
; 134  :                                            NULL,
; 135  :                                            &dwType,
; 136  :                                            lpData,
; 137  :                                            &dwDataLen );

  00014	e5900000	 ldr         r0, [r0]
  00018	e3a05000	 mov         r5, #0
  0001c	e28de028	 add         lr, sp, #0x28
  00020	e28d3008	 add         r3, sp, #8
  00024	e3a02000	 mov         r2, #0
  00028	e58d5008	 str         r5, [sp, #8]
  0002c	e58de004	 str         lr, [sp, #4]
  00030	e58d4000	 str         r4, [sp]
  00034	eb000000	 bl          RegQueryValueExW
  00038	e3500000	 cmp         r0, #0

; 138  :         return ( status == ERROR_SUCCESS );

  0003c	03a00001	 moveq       r0, #1
  00040	13a00000	 movne       r0, #0

; 139  :     }

  00044	e28dd00c	 add         sp, sp, #0xC
  00048	e89d6030	 ldmia       sp, {r4, r5, sp, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$M37994|

			 ENDP  ; |?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z|, CRegistryEdit::GetRegValue

	EXPORT	|?RegQueryValueExW@CRegistryEdit@@QAAHPBGPAKPAE1@Z| ; CRegistryEdit::RegQueryValueExW

  00000			 AREA	 |.pdata|, PDATA
|$T38011| DCD	|$LN7@RegQueryVa|
	DCD	0x40001002
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RegQueryValueExW@CRegistryEdit@@QAAHPBGPAKPAE1@Z| PROC ; CRegistryEdit::RegQueryValueExW

; 145  :     {

  00000		 |$LN7@RegQueryVa|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M38008|
  00008	e1a04003	 mov         r4, r3
  0000c	e1a03002	 mov         r3, r2

; 146  :         LONG status = ::RegQueryValueEx( m_hDevKey,
; 147  :                                            lpcName,
; 148  :                                            NULL,
; 149  :                                            pdwType,
; 150  :                                            lpData,
; 151  :                                            pdwDataLen );

  00010	e59de010	 ldr         lr, [sp, #0x10]
  00014	e5900000	 ldr         r0, [r0]
  00018	e3a02000	 mov         r2, #0
  0001c	e58de004	 str         lr, [sp, #4]
  00020	e58d4000	 str         r4, [sp]
  00024	eb000000	 bl          RegQueryValueExW
  00028	e3500000	 cmp         r0, #0

; 152  :         return ( status == ERROR_SUCCESS );

  0002c	03a00001	 moveq       r0, #1
  00030	13a00000	 movne       r0, #0

; 153  :     };

  00034	e28dd008	 add         sp, sp, #8
  00038	e8bd4010	 ldmia       sp!, {r4, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$M38009|

			 ENDP  ; |?RegQueryValueExW@CRegistryEdit@@QAAHPBGPAKPAE1@Z|, CRegistryEdit::RegQueryValueExW

	EXPORT	|?IsKeyOpened@CRegistryEdit@@QAAHXZ|	; CRegistryEdit::IsKeyOpened

  00000			 AREA	 |.pdata|, PDATA
|$T38023| DCD	|$LN7@IsKeyOpene|
	DCD	0x40000500
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsKeyOpened@CRegistryEdit@@QAAHXZ| PROC ; CRegistryEdit::IsKeyOpened

; 171  :     {

  00000		 |$LN7@IsKeyOpene|
  00000		 |$M38020|

; 172  :         return ( m_hDevKey != NULL );

  00000	e5903000	 ldr         r3, [r0]
  00004	e3530000	 cmp         r3, #0
  00008	13a00001	 movne       r0, #1
  0000c	03a00000	 moveq       r0, #0

; 173  :     }

  00010	e12fff1e	 bx          lr
  00014		 |$M38021|

			 ENDP  ; |?IsKeyOpened@CRegistryEdit@@QAAHXZ|, CRegistryEdit::IsKeyOpened

	EXPORT	|?IsDriverLoaded@DeviceFolder@@QAAHXZ|	; DeviceFolder::IsDriverLoaded
; File c:\wince600\public\common\oak\inc\defbus.h

  00000			 AREA	 |.pdata|, PDATA
|$T38033| DCD	|$LN5@IsDriverLo|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsDriverLoaded@DeviceFolder@@QAAHXZ| PROC ; DeviceFolder::IsDriverLoaded

; 85   :     BOOL    IsDriverLoaded() { return m_fDriverLoaded; };

  00000		 |$LN5@IsDriverLo|
  00000		 |$M38030|
  00000	e5900028	 ldr         r0, [r0, #0x28]
  00004	e12fff1e	 bx          lr
  00008		 |$M38031|

			 ENDP  ; |?IsDriverLoaded@DeviceFolder@@QAAHXZ|, DeviceFolder::IsDriverLoaded

	EXPORT	|?IOControl@DefaultBusDriver@@UAAHKPAEK0KPAK@Z| ; DefaultBusDriver::IOControl

  00000			 AREA	 |.pdata|, PDATA
|$T38046| DCD	|$LN5@IOControl|
	DCD	0x40001102
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IOControl@DefaultBusDriver@@UAAHKPAEK0KPAK@Z| PROC ; DefaultBusDriver::IOControl

; 152  :               PDWORD pdwActualOut) {

  00000		 |$LN5@IOControl|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004	e24dd010	 sub         sp, sp, #0x10
  00008		 |$M38043|

; 153  :         return FastIOControl(dwCode,pBufIn,dwLenIn, pBufOut, dwLenOut, pdwActualOut, NULL) ;

  00008	e590e000	 ldr         lr, [r0]
  0000c	e59d4030	 ldr         r4, [sp, #0x30]
  00010	e59d502c	 ldr         r5, [sp, #0x2C]
  00014	e59d6028	 ldr         r6, [sp, #0x28]
  00018	e59e7058	 ldr         r7, [lr, #0x58]
  0001c	e3a08000	 mov         r8, #0
  00020	e58d4008	 str         r4, [sp, #8]
  00024	e58d5004	 str         r5, [sp, #4]
  00028	e58d6000	 str         r6, [sp]
  0002c	e58d800c	 str         r8, [sp, #0xC]
  00030	e1a0e00f	 mov         lr, pc
  00034	e12fff17	 bx          r7

; 154  :     }

  00038	e28dd010	 add         sp, sp, #0x10
  0003c	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M38044|

			 ENDP  ; |?IOControl@DefaultBusDriver@@UAAHKPAEK0KPAK@Z|, DefaultBusDriver::IOControl

	EXPORT	|?ConvertFromEx@@YA?AU_SD_CARD_INTERFACE@@U_SD_CARD_INTERFACE_EX@@@Z| ; ConvertFromEx
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T38066| DCD	|$LN11@ConvertFro|
	DCD	0x40000d00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ConvertFromEx@@YA?AU_SD_CARD_INTERFACE@@U_SD_CARD_INTERFACE_EX@@@Z| PROC ; ConvertFromEx

; 91   : {

  00000		 |$LN11@ConvertFro|
  00000		 |$M38063|

; 92   : 	// default to 1 bit
; 93   : 	SD_INTERFACE_MODE bInterfaceMode = SD_INTERFACE_SD_MMC_1BIT;
; 94   : 
; 95   : 	// can we upgrade to 4 bits? if not use original value of bInterfaceMode
; 96   : 	bInterfaceMode = sdInterfaceEx.InterfaceModeEx.bit.sd4Bit!=0?SD_INTERFACE_SD_4BIT: bInterfaceMode;

  00000	e3110001	 tst         r1, #1
  00004	e3a03000	 mov         r3, #0
  00008	13a03001	 movne       r3, #1

; 97   : 
; 98   : 	// can we upgrade to 8 bits? if not use bInterfaceMode, which could be 4 or 1 at this point
; 99   : 	bInterfaceMode = sdInterfaceEx.InterfaceModeEx.bit.sd8Bit!=0?SD_INTERFACE_SD_MMC_8BIT: bInterfaceMode;

  0000c	e3110004	 tst         r1, #4
  00010	13a03002	 movne       r3, #2

; 100  : 
; 101  : 
; 102  : 
; 103  : 
; 104  :     SD_CARD_INTERFACE sdCardInterface = {
; 105  :         bInterfaceMode,
; 106  :         sdInterfaceEx.ClockRate,
; 107  :         sdInterfaceEx.InterfaceModeEx.bit.sdWriteProtected!=0
; 108  :     };

  00014	e3110101	 tst         r1, #1, 2
  00018	e5803000	 str         r3, [r0]
  0001c	13a03001	 movne       r3, #1
  00020	15803008	 strne       r3, [r0, #8]
  00024	e5802004	 str         r2, [r0, #4]
  00028	03a03000	 moveq       r3, #0
  0002c	05803008	 streq       r3, [r0, #8]

; 109  :     return sdCardInterface;
; 110  : }

  00030	e12fff1e	 bx          lr
  00034		 |$M38064|

			 ENDP  ; |?ConvertFromEx@@YA?AU_SD_CARD_INTERFACE@@U_SD_CARD_INTERFACE_EX@@@Z|, ConvertFromEx

	EXPORT	|?IsAttached@CSDHost@@QAAHXZ|		; CSDHost::IsAttached

  00000			 AREA	 |.pdata|, PDATA
|$T38076| DCD	|$LN5@IsAttached|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsAttached@CSDHost@@QAAHXZ| PROC	; CSDHost::IsAttached

; 128  :     BOOL    IsAttached() { return m_fHostAttached; };

  00000		 |$LN5@IsAttached|
  00000		 |$M38073|
  00000	e5900064	 ldr         r0, [r0, #0x64]
  00004	e12fff1e	 bx          lr
  00008		 |$M38074|

			 ENDP  ; |?IsAttached@CSDHost@@QAAHXZ|, CSDHost::IsAttached

	EXPORT	|?GetIndex@CSDHost@@QAAKXZ|		; CSDHost::GetIndex

  00000			 AREA	 |.pdata|, PDATA
|$T38086| DCD	|$LN5@GetIndex|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetIndex@CSDHost@@QAAKXZ| PROC	; CSDHost::GetIndex

; 131  :     DWORD   GetIndex() {    return m_dwSdHostIndex;  };

  00000		 |$LN5@GetIndex|
  00000		 |$M38083|
  00000	e590005c	 ldr         r0, [r0, #0x5C]
  00004	e12fff1e	 bx          lr
  00008		 |$M38084|

			 ENDP  ; |?GetIndex@CSDHost@@QAAKXZ|, CSDHost::GetIndex

	EXPORT	|?SetIndex@CSDHost@@QAAKK@Z|		; CSDHost::SetIndex

  00000			 AREA	 |.pdata|, PDATA
|$T38097| DCD	|$LN5@SetIndex|
	DCD	0x40000300
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetIndex@CSDHost@@QAAKK@Z| PROC	; CSDHost::SetIndex

; 132  :     DWORD   SetIndex (DWORD dwIndex)  { return (m_dwSdHostIndex= dwIndex);  };

  00000		 |$LN5@SetIndex|
  00000		 |$M38094|
  00000	e580105c	 str         r1, [r0, #0x5C]
  00004	e1a00001	 mov         r0, r1
  00008	e12fff1e	 bx          lr
  0000c		 |$M38095|

			 ENDP  ; |?SetIndex@CSDHost@@QAAKK@Z|, CSDHost::SetIndex

	EXPORT	|?GetSlotCount@CSDHost@@QAAKXZ|		; CSDHost::GetSlotCount

  00000			 AREA	 |.pdata|, PDATA
|$T38107| DCD	|$LN5@GetSlotCou|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetSlotCount@CSDHost@@QAAKXZ| PROC	; CSDHost::GetSlotCount

; 133  :     DWORD   GetSlotCount() { return m_dwNumOfSlot; };

  00000		 |$LN5@GetSlotCou|
  00000		 |$M38104|
  00000	e5900068	 ldr         r0, [r0, #0x68]
  00004	e12fff1e	 bx          lr
  00008		 |$M38105|

			 ENDP  ; |?GetSlotCount@CSDHost@@QAAKXZ|, CSDHost::GetSlotCount

	EXPORT	|?GetSlot@CSDHost@@QAAPAVCSDSlot@@K@Z|	; CSDHost::GetSlot

  00000			 AREA	 |.pdata|, PDATA
|$T38120| DCD	|$LN7@GetSlot|
	DCD	0x40000600
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetSlot@CSDHost@@QAAPAVCSDSlot@@K@Z| PROC ; CSDHost::GetSlot

; 134  :     CSDSlot * GetSlot(DWORD dwSlot) { return (dwSlot<m_dwNumOfSlot? m_SlotArray[dwSlot]: NULL) ; };

  00000		 |$LN7@GetSlot|
  00000		 |$M38117|
  00000	e5903068	 ldr         r3, [r0, #0x68]
  00004	e1510003	 cmp         r1, r3
  00008	30803101	 addcc       r3, r0, r1, lsl #2
  0000c	3593006c	 ldrcc       r0, [r3, #0x6C]
  00010	23a00000	 movcs       r0, #0
  00014	e12fff1e	 bx          lr
  00018		 |$M38118|

			 ENDP  ; |?GetSlot@CSDHost@@QAAPAVCSDSlot@@K@Z|, CSDHost::GetSlot

	EXPORT	|?SlotOptionHandler@CSDHost@@QAAJKW4_SD_SLOT_OPTION_CODE@@PAXK@Z| ; CSDHost::SlotOptionHandler

  00000			 AREA	 |.pdata|, PDATA
|$T38135| DCD	|$LN7@SlotOption|
	DCD	0x40000f02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SlotOptionHandler@CSDHost@@QAAJKW4_SD_SLOT_OPTION_CODE@@PAXK@Z| PROC ; CSDHost::SlotOptionHandler

; 139  :     SD_API_STATUS   SlotOptionHandler(DWORD dwSlot, SD_SLOT_OPTION_CODE sdSlotOption, PVOID pvParam, ULONG uSize) { // slot option handler

  00000		 |$LN7@SlotOption|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M38132|
  00008	e1a05002	 mov         r5, r2
  0000c	e1b0e000	 movs        lr, r0

; 140  :         return pSlotOptionHandler((PSDCARD_HC_CONTEXT)this,dwSlot,sdSlotOption,pvParam,uSize);

  00010	e59d2010	 ldr         r2, [sp, #0x10]
  00014	e59e4044	 ldr         r4, [lr, #0x44]
  00018	128e0008	 addne       r0, lr, #8
  0001c	e58d2000	 str         r2, [sp]
  00020	e1a02005	 mov         r2, r5
  00024	03a00000	 moveq       r0, #0
  00028	e1a0e00f	 mov         lr, pc
  0002c	e12fff14	 bx          r4

; 141  :     }

  00030	e28dd004	 add         sp, sp, #4
  00034	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$M38133|

			 ENDP  ; |?SlotOptionHandler@CSDHost@@QAAJKW4_SD_SLOT_OPTION_CODE@@PAXK@Z|, CSDHost::SlotOptionHandler

	EXPORT	|?InitHandler@CSDHost@@QAAJXZ|		; CSDHost::InitHandler

  00000			 AREA	 |.pdata|, PDATA
|$T38147| DCD	|$LN7@InitHandle|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InitHandler@CSDHost@@QAAJXZ| PROC	; CSDHost::InitHandler

; 145  :     SD_API_STATUS   InitHandler () { return pInitHandler((PSDCARD_HC_CONTEXT)this); };      // init handler       

  00000		 |$LN7@InitHandle|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M38144|
  00004	e1b03000	 movs        r3, r0
  00008	12830008	 addne       r0, r3, #8
  0000c	e593304c	 ldr         r3, [r3, #0x4C]
  00010	03a00000	 moveq       r0, #0
  00014	e1a0e00f	 mov         lr, pc
  00018	e12fff13	 bx          r3
  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M38145|

			 ENDP  ; |?InitHandler@CSDHost@@QAAJXZ|, CSDHost::InitHandler

	EXPORT	|?DeinitHandler@CSDHost@@QAAJXZ|	; CSDHost::DeinitHandler

  00000			 AREA	 |.pdata|, PDATA
|$T38159| DCD	|$LN7@DeinitHand|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DeinitHandler@CSDHost@@QAAJXZ| PROC	; CSDHost::DeinitHandler

; 146  :     SD_API_STATUS   DeinitHandler() { return pDeinitHandler((PSDCARD_HC_CONTEXT)this); };     // deinit handler

  00000		 |$LN7@DeinitHand|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M38156|
  00004	e1b03000	 movs        r3, r0
  00008	12830008	 addne       r0, r3, #8
  0000c	e5933050	 ldr         r3, [r3, #0x50]
  00010	03a00000	 moveq       r0, #0
  00014	e1a0e00f	 mov         lr, pc
  00018	e12fff13	 bx          r3
  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M38157|

			 ENDP  ; |?DeinitHandler@CSDHost@@QAAJXZ|, CSDHost::DeinitHandler

	EXPORT	|?GetDeviceKey@CSDHostContainer@@SAAAVCRegistryEdit@@XZ| ; CSDHostContainer::GetDeviceKey

  00000			 AREA	 |.pdata|, PDATA
|$T38168| DCD	|$LN5@GetDeviceK|
	DCD	0x40000500
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetDeviceKey@CSDHostContainer@@SAAAVCRegistryEdit@@XZ| PROC ; CSDHostContainer::GetDeviceKey

; 211  :     static CRegistryEdit& GetDeviceKey()  {

  00000		 |$LN5@GetDeviceK|
  00000		 |$M38165|

; 212  :         PREFAST_ASSERT(g_pSdContainer!=NULL);
; 213  :         return g_pSdContainer->m_deviceKey;

  00000	e59f3008	 ldr         r3, [pc, #8]
  00004	e5933000	 ldr         r3, [r3]
  00008	e28300a4	 add         r0, r3, #0xA4

; 214  :     }

  0000c	e12fff1e	 bx          lr
  00010		 |$LN6@GetDeviceK|
  00010		 |$LN7@GetDeviceK|
  00010	00000000	 DCD         |?g_pSdContainer@CSDHostContainer@@0PAV1@A|
  00014		 |$M38166|

			 ENDP  ; |?GetDeviceKey@CSDHostContainer@@SAAAVCRegistryEdit@@XZ|, CSDHostContainer::GetDeviceKey

	EXPORT	|?GetDeviceFuncionIndex@CSDDevice@@QAAKXZ| ; CSDDevice::GetDeviceFuncionIndex
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sddevice.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T38180| DCD	|$LN5@GetDeviceF|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetDeviceFuncionIndex@CSDDevice@@QAAKXZ| PROC ; CSDDevice::GetDeviceFuncionIndex

; 129  :     DWORD   GetDeviceFuncionIndex() { return m_FuncionIndex; };

  00000		 |$LN5@GetDeviceF|
  00000		 |$M38177|
  00000	e590043c	 ldr         r0, [r0, #0x43C]
  00004	e12fff1e	 bx          lr
  00008		 |$M38178|

			 ENDP  ; |?GetDeviceFuncionIndex@CSDDevice@@QAAKXZ|, CSDDevice::GetDeviceFuncionIndex

	EXPORT	|?GetReferenceIndex@CSDDevice@@QAAKXZ|	; CSDDevice::GetReferenceIndex

  00000			 AREA	 |.pdata|, PDATA
|$T38190| DCD	|$LN5@GetReferen|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetReferenceIndex@CSDDevice@@QAAKXZ| PROC ; CSDDevice::GetReferenceIndex

; 130  :     DWORD   GetReferenceIndex(){ return m_FuncRef; };

  00000		 |$LN5@GetReferen|
  00000		 |$M38187|
  00000	e5900440	 ldr         r0, [r0, #0x440]
  00004	e12fff1e	 bx          lr
  00008		 |$M38188|

			 ENDP  ; |?GetReferenceIndex@CSDDevice@@QAAKXZ|, CSDDevice::GetReferenceIndex

	EXPORT	|?GetDeviceType@CSDDevice@@QAA?AW4_SDCARD_DEVICE_TYPE@@XZ| ; CSDDevice::GetDeviceType

  00000			 AREA	 |.pdata|, PDATA
|$T38200| DCD	|$LN5@GetDeviceT|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetDeviceType@CSDDevice@@QAA?AW4_SDCARD_DEVICE_TYPE@@XZ| PROC ; CSDDevice::GetDeviceType

; 134  :     SDCARD_DEVICE_TYPE GetDeviceType() { return m_DeviceType; };

  00000		 |$LN5@GetDeviceT|
  00000		 |$M38197|
  00000	e5900494	 ldr         r0, [r0, #0x494]
  00004	e12fff1e	 bx          lr
  00008		 |$M38198|

			 ENDP  ; |?GetDeviceType@CSDDevice@@QAA?AW4_SDCARD_DEVICE_TYPE@@XZ|, CSDDevice::GetDeviceType

	EXPORT	|?GetCardInfo@CSDDevice@@QAAAAU_SDCARD_INFORMATION@@XZ| ; CSDDevice::GetCardInfo

  00000			 AREA	 |.pdata|, PDATA
|$T38210| DCD	|$LN5@GetCardInf|
	DCD	0x40000300
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetCardInfo@CSDDevice@@QAAAAU_SDCARD_INFORMATION@@XZ| PROC ; CSDDevice::GetCardInfo

; 149  :     SDCARD_INFORMATION& GetCardInfo() { return m_SDCardInfo; };

  00000		 |$LN5@GetCardInf|
  00000		 |$M38207|
  00000	e2803b01	 add         r3, r0, #1, 22
  00004	e28300d8	 add         r0, r3, #0xD8
  00008	e12fff1e	 bx          lr
  0000c		 |$M38208|

			 ENDP  ; |?GetCardInfo@CSDDevice@@QAAAAU_SDCARD_INFORMATION@@XZ|, CSDDevice::GetCardInfo

	EXPORT	|?GetSlot@CSDDevice@@QAAAAVCSDSlot@@XZ|	; CSDDevice::GetSlot

  00000			 AREA	 |.pdata|, PDATA
|$T38220| DCD	|$LN5@GetSlot@2|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetSlot@CSDDevice@@QAAAAVCSDSlot@@XZ| PROC ; CSDDevice::GetSlot

; 150  :     CSDSlot& GetSlot() { return m_sdSlot; };    

  00000		 |$LN5@GetSlot@2|
  00000		 |$M38217|
  00000	e5900438	 ldr         r0, [r0, #0x438]
  00004	e12fff1e	 bx          lr
  00008		 |$M38218|

			 ENDP  ; |?GetSlot@CSDDevice@@QAAAAVCSDSlot@@XZ|, CSDDevice::GetSlot

	EXPORT	|?IsDriverLoaded@CSDDevice@@QAAHXZ|	; CSDDevice::IsDriverLoaded
; File c:\wince600\public\common\oak\inc\defbus.h

  00000			 AREA	 |.pdata|, PDATA
|$T38236| DCD	|$LN9@IsDriverLo@2|
	DCD	0x40000500
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sddevice.hpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsDriverLoaded@CSDDevice@@QAAHXZ| PROC ; CSDDevice::IsDriverLoaded

; 171  :     BOOL IsDriverLoaded() { return (m_pDriverFolder!=NULL? m_pDriverFolder->IsDriverLoaded() : FALSE ); };

  00000		 |$LN9@IsDriverLo@2|
  00000		 |$M38233|
  00000	e5903420	 ldr         r3, [r0, #0x420]
  00004	e3530000	 cmp         r3, #0
  00008	15930028	 ldrne       r0, [r3, #0x28]
  0000c	03a00000	 moveq       r0, #0
  00010	e12fff1e	 bx          lr
  00014		 |$M38234|

			 ENDP  ; |?IsDriverLoaded@CSDDevice@@QAAHXZ|, CSDDevice::IsDriverLoaded

	EXPORT	|?GetClientName@CSDDevice@@QAAPBGXZ|	; CSDDevice::GetClientName

  00000			 AREA	 |.pdata|, PDATA
|$T38246| DCD	|$LN5@GetClientN|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetClientName@CSDDevice@@QAAPBGXZ| PROC ; CSDDevice::GetClientName

; 173  :     LPCTSTR GetClientName() { return m_ClientName; };

  00000		 |$LN5@GetClientN|
  00000		 |$M38243|
  00000	e2800e45	 add         r0, r0, #0x45, 28
  00004	e12fff1e	 bx          lr
  00008		 |$M38244|

			 ENDP  ; |?GetClientName@CSDDevice@@QAAPBGXZ|, CSDDevice::GetClientName

	EXPORT	|?GetCardInterface@CSDDevice@@QAAAAU_SD_CARD_INTERFACE_EX@@XZ| ; CSDDevice::GetCardInterface

  00000			 AREA	 |.pdata|, PDATA
|$T38256| DCD	|$LN5@GetCardInt|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetCardInterface@CSDDevice@@QAAAAU_SD_CARD_INTERFACE_EX@@XZ| PROC ; CSDDevice::GetCardInterface

; 175  :     SD_CARD_INTERFACE_EX& GetCardInterface() { return m_CardInterfaceEx;};

  00000		 |$LN5@GetCardInt|
  00000		 |$M38253|
  00000	e2800d15	 add         r0, r0, #0x15, 26
  00004	e12fff1e	 bx          lr
  00008		 |$M38254|

			 ENDP  ; |?GetCardInterface@CSDDevice@@QAAAAU_SD_CARD_INTERFACE_EX@@XZ|, CSDDevice::GetCardInterface

	EXPORT	|?GetOperationVoltage@CSDDevice@@QAAKXZ| ; CSDDevice::GetOperationVoltage

  00000			 AREA	 |.pdata|, PDATA
|$T38266| DCD	|$LN5@GetOperati|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetOperationVoltage@CSDDevice@@QAAKXZ| PROC ; CSDDevice::GetOperationVoltage

; 232  :     DWORD   GetOperationVoltage() { return m_OperatingVoltage; };

  00000		 |$LN5@GetOperati|
  00000		 |$M38263|
  00000	e59004d0	 ldr         r0, [r0, #0x4D0]
  00004	e12fff1e	 bx          lr
  00008		 |$M38264|

			 ENDP  ; |?GetOperationVoltage@CSDDevice@@QAAKXZ|, CSDDevice::GetOperationVoltage

	EXPORT	|?GetHost@CSDSlot@@QAAAAVCSDHost@@XZ|	; CSDSlot::GetHost
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T38276| DCD	|$LN5@GetHost|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetHost@CSDSlot@@QAAAAVCSDHost@@XZ| PROC ; CSDSlot::GetHost

; 99   :     CSDHost&    GetHost() { return m_SdHost; };

  00000		 |$LN5@GetHost|
  00000		 |$M38273|
  00000	e590007c	 ldr         r0, [r0, #0x7C]
  00004	e12fff1e	 bx          lr
  00008		 |$M38274|

			 ENDP  ; |?GetHost@CSDSlot@@QAAAAVCSDHost@@XZ|, CSDSlot::GetHost

	EXPORT	|?GetSlotIndex@CSDSlot@@QAAKXZ|		; CSDSlot::GetSlotIndex

  00000			 AREA	 |.pdata|, PDATA
|$T38286| DCD	|$LN5@GetSlotInd|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetSlotIndex@CSDSlot@@QAAKXZ| PROC	; CSDSlot::GetSlotIndex

; 106  :     DWORD   GetSlotIndex() { return m_dwSlotIndex; };

  00000		 |$LN5@GetSlotInd|
  00000		 |$M38283|
  00000	e5900080	 ldr         r0, [r0, #0x80]
  00004	e12fff1e	 bx          lr
  00008		 |$M38284|

			 ENDP  ; |?GetSlotIndex@CSDSlot@@QAAKXZ|, CSDSlot::GetSlotIndex

	EXPORT	|?GetSlotPower@CSDSlot@@QAAGXZ|		; CSDSlot::GetSlotPower

  00000			 AREA	 |.pdata|, PDATA
|$T38296| DCD	|$LN5@GetSlotPow|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetSlotPower@CSDSlot@@QAAGXZ| PROC	; CSDSlot::GetSlotPower

; 107  :     USHORT  GetSlotPower() { return m_AllocatedPower; };

  00000		 |$LN5@GetSlotPow|
  00000		 |$M38293|
  00000	e1d00bb0	 ldrh        r0, [r0, #0xB0]
  00004	e12fff1e	 bx          lr
  00008		 |$M38294|

			 ENDP  ; |?GetSlotPower@CSDSlot@@QAAGXZ|, CSDSlot::GetSlotPower

	EXPORT	|?CheckSlotReady@CSDSlot@@QAAJXZ|	; CSDSlot::CheckSlotReady

  00000			 AREA	 |.pdata|, PDATA
|$T38306| DCD	|$LN8@CheckSlotR|
	DCD	0x40000d00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CheckSlotReady@CSDSlot@@QAAJXZ| PROC	; CSDSlot::CheckSlotReady

; 132  :     inline SD_API_STATUS CheckSlotReady() {

  00000		 |$LN8@CheckSlotR|
  00000		 |$M38303|

; 133  :         if ((SlotIdle != m_SlotState) && (Ready != m_SlotState) && (SlotResetting != m_SlotState)) {

  00000	e5903084	 ldr         r3, [r0, #0x84]
  00004	e3530001	 cmp         r3, #1
  00008	0a000007	 beq         |$LN1@CheckSlotR|
  0000c	e3530002	 cmp         r3, #2
  00010	0a000005	 beq         |$LN1@CheckSlotR|
  00014	e3530006	 cmp         r3, #6
  00018	0a000003	 beq         |$LN1@CheckSlotR|

; 134  :             if (SlotDeviceEjected == m_SlotState) {

  0001c	e3530003	 cmp         r3, #3

; 135  :                 DEBUGMSG(SDCARD_ZONE_WARN, (TEXT("SDCard: Device in Slot:%d is about to be removed. Rejecting Request \n"), m_dwSlotIndex));    
; 136  :                 return SD_API_STATUS_DEVICE_REMOVED;

  00020	03a00147	 moveq       r0, #0x47, 2

; 137  :             } else {
; 138  :                 DEBUG_CHECK(FALSE,(TEXT("SubmitBusRequest: Slot is not ready. Current slot state is %d \n"),m_SlotState ));
; 139  :                 return SD_API_STATUS_UNSUCCESSFUL;

  00024	13a0010f	 movne       r0, #0xF, 2

; 143  :     }    

  00028	e12fff1e	 bx          lr
  0002c		 |$LN1@CheckSlotR|

; 140  :             }
; 141  :         }
; 142  :         return SD_API_STATUS_SUCCESS;

  0002c	e3a00000	 mov         r0, #0

; 143  :     }    

  00030	e12fff1e	 bx          lr
  00034		 |$M38304|

			 ENDP  ; |?CheckSlotReady@CSDSlot@@QAAJXZ|, CSDSlot::CheckSlotReady

	EXPORT	|?GetFunctionDevice@CSDSlot@@QAAPAVCSDDevice@@KK@Z| ; CSDSlot::GetFunctionDevice
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T38334| DCD	|$LN17@GetFunctio|
	DCD	0x40001801
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.hpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetFunctionDevice@CSDSlot@@QAAPAVCSDDevice@@KK@Z| PROC ; CSDSlot::GetFunctionDevice

; 144  :     inline CSDDevice * GetFunctionDevice(DWORD dwIndex, DWORD dwReference){

  00000		 |$LN17@GetFunctio|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M38331|
  00004	e1a06002	 mov         r6, r2
  00008	e1a04001	 mov         r4, r1
  0000c	e1a05000	 mov         r5, r0

; 145  :         m_SlotLock.Lock();

  00010	e28500b4	 add         r0, r5, #0xB4
  00014	eb000000	 bl          EnterCriticalSection

; 146  :         CSDDevice*  pReturn = dwIndex < SD_MAXIMUM_DEVICE_PER_SLOT ? m_pFuncDevice[dwIndex] : NULL;

  00018	e3540008	 cmp         r4, #8
  0001c	30853104	 addcc       r3, r5, r4, lsl #2
  00020	359340c8	 ldrcc       r4, [r3, #0xC8]
  00024	23a04000	 movcs       r4, #0

; 147  :         if( pReturn && pReturn->GetReferenceIndex() == dwReference )  {

  00028	e3540000	 cmp         r4, #0
  0002c	0a000005	 beq         |$LN2@GetFunctio|
  00030	e5943440	 ldr         r3, [r4, #0x440]
  00034	e1530006	 cmp         r3, r6
  00038	1a000002	 bne         |$LN2@GetFunctio|

; 148  :             pReturn->AddRef();

  0003c	e2840004	 add         r0, r4, #4
  00040	eb000000	 bl          InterlockedIncrement

; 149  :         }
; 150  :         else

  00044	ea000000	 b           |$LN1@GetFunctio|
  00048		 |$LN2@GetFunctio|

; 151  :             pReturn = NULL;

  00048	e3a04000	 mov         r4, #0
  0004c		 |$LN1@GetFunctio|

; 152  :         m_SlotLock.Unlock();

  0004c	e28500b4	 add         r0, r5, #0xB4
  00050	eb000000	 bl          LeaveCriticalSection

; 153  :         return pReturn;
; 154  :     }

  00054	e1a00004	 mov         r0, r4
  00058	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0005c	e12fff1e	 bx          lr
  00060		 |$M38332|

			 ENDP  ; |?GetFunctionDevice@CSDSlot@@QAAPAVCSDDevice@@KK@Z|, CSDSlot::GetFunctionDevice

	EXPORT	|?GetFunctionDevice@CSDSlot@@QAAPAVCSDDevice@@K@Z| ; CSDSlot::GetFunctionDevice
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T38357| DCD	|$LN15@GetFunctio@2|
	DCD	0x40001401
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.hpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetFunctionDevice@CSDSlot@@QAAPAVCSDDevice@@K@Z| PROC ; CSDSlot::GetFunctionDevice

; 155  :     inline CSDDevice * GetFunctionDevice(DWORD dwIndex){

  00000		 |$LN15@GetFunctio@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M38354|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0

; 156  :         m_SlotLock.Lock();

  0000c	e28500b4	 add         r0, r5, #0xB4
  00010	eb000000	 bl          EnterCriticalSection

; 157  :         CSDDevice*  pReturn = dwIndex < SD_MAXIMUM_DEVICE_PER_SLOT ? m_pFuncDevice[dwIndex] : NULL;

  00014	e3540008	 cmp         r4, #8
  00018	30853104	 addcc       r3, r5, r4, lsl #2
  0001c	359340c8	 ldrcc       r4, [r3, #0xC8]
  00020	23a04000	 movcs       r4, #0

; 158  :         if( pReturn )  {

  00024	e3540000	 cmp         r4, #0
  00028	0a000002	 beq         |$LN2@GetFunctio@2|

; 159  :             pReturn->AddRef();

  0002c	e2840004	 add         r0, r4, #4
  00030	eb000000	 bl          InterlockedIncrement

; 160  :         }
; 161  :         else

  00034	ea000000	 b           |$LN1@GetFunctio@2|
  00038		 |$LN2@GetFunctio@2|

; 162  :             pReturn = NULL;

  00038	e3a04000	 mov         r4, #0
  0003c		 |$LN1@GetFunctio@2|

; 163  :         m_SlotLock.Unlock();

  0003c	e28500b4	 add         r0, r5, #0xB4
  00040	eb000000	 bl          LeaveCriticalSection

; 164  :         return pReturn;
; 165  :     }

  00044	e1a00004	 mov         r0, r4
  00048	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0004c	e12fff1e	 bx          lr
  00050		 |$M38355|

			 ENDP  ; |?GetFunctionDevice@CSDSlot@@QAAPAVCSDDevice@@K@Z|, CSDSlot::GetFunctionDevice

	EXPORT	|?SetSlotPowerControl@CSDSlot@@QAAXH@Z|	; CSDSlot::SetSlotPowerControl

  00000			 AREA	 |.pdata|, PDATA
|$T38366| DCD	|$LN5@SetSlotPow|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetSlotPowerControl@CSDSlot@@QAAXH@Z| PROC ; CSDSlot::SetSlotPowerControl

; 167  :     void    SetSlotPowerControl(BOOL fSet) { m_fEnablePowerControl = fSet; };

  00000		 |$LN5@SetSlotPow|
  00000		 |$M38363|
  00000	e58010ac	 str         r1, [r0, #0xAC]
  00004	e12fff1e	 bx          lr
  00008		 |$M38364|

			 ENDP  ; |?SetSlotPowerControl@CSDSlot@@QAAXH@Z|, CSDSlot::SetSlotPowerControl

	EXPORT	|?GetDevice@CSDBusRequest@@QAAAAVCSDDevice@@XZ| ; CSDBusRequest::GetDevice
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbusreq.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T38376| DCD	|$LN5@GetDevice|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetDevice@CSDBusRequest@@QAAAAVCSDDevice@@XZ| PROC ; CSDBusRequest::GetDevice

; 105  :     CSDDevice& GetDevice() { return m_sdDevice; };

  00000		 |$LN5@GetDevice|
  00000		 |$M38373|
  00000	e5900068	 ldr         r0, [r0, #0x68]
  00004	e12fff1e	 bx          lr
  00008		 |$M38374|

			 ENDP  ; |?GetDevice@CSDBusRequest@@QAAAAVCSDDevice@@XZ|, CSDBusRequest::GetDevice

	EXPORT	|??0CSDHost@@QAA@K@Z|			; CSDHost::CSDHost
	EXPORT	|??_7CSDHost@@6B@| [ DATA ]		; CSDHost::`vftable'
	EXPORT	|?Init@CSDHost@@UAAHXZ|			; CSDHost::Init
	EXPORT	|?Attach@CSDHost@@UAAHXZ|		; CSDHost::Attach
	EXPORT	|?Detach@CSDHost@@UAAHXZ|		; CSDHost::Detach
	IMPORT	|memset|
	IMPORT	|??_ECSDHost@@UAAPAXI@Z|, WEAK |??_GCSDHost@@UAAPAXI@Z| ; CSDHost::`vector deleting destructor', CSDHost::`scalar deleting destructor'
; File c:\wince600\public\common\oak\inc\crefcon.h

  00000			 AREA	 |.pdata|, PDATA
|$T38399| DCD	|$LN18@CSDHost|
	DCD	0x40001f01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CSDHost@@6B@| DCD |??_ECSDHost@@UAAPAXI@Z|		; CSDHost::`vftable'
	DCD	|?Init@CSDHost@@UAAHXZ|
	DCD	|?Attach@CSDHost@@UAAHXZ|
	DCD	|?Detach@CSDHost@@UAAHXZ|
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CSDHost@@QAA@K@Z| PROC		; CSDHost::CSDHost

; 97   : {

  00000		 |$LN18@CSDHost|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M38396|
  00004	e1a0e001	 mov         lr, r1
  00008	e1a04000	 mov         r4, r0
  0000c	e59f3064	 ldr         r3, [pc, #0x64]
  00010	e3a05000	 mov         r5, #0
  00014	e35e0010	 cmp         lr, #0x10
  00018	e8840028	 stmia       r4, {r3, r5}

; 98   :     m_dwSdHostIndex = MAXDWORD;

  0001c	e3e03000	 mvn         r3, #0
  00020	23a0e010	 movcs       lr, #0x10

; 99   :     memset((SDCARD_HC_CONTEXT *)this, 00, sizeof(SDCARD_HC_CONTEXT));

  00024	e3a02054	 mov         r2, #0x54
  00028	e3a01000	 mov         r1, #0
  0002c	e2840008	 add         r0, r4, #8
  00030	e584305c	 str         r3, [r4, #0x5C]
  00034	e584e068	 str         lr, [r4, #0x68]
  00038	eb000000	 bl          memset

; 100  :     dwVersion = SDCARD_HC_BUS_INTERFACE_VERSION;

  0003c	e3a03801	 mov         r3, #1, 16

; 101  :     InitializeCriticalSection(&HCCritSection);

  00040	e284002c	 add         r0, r4, #0x2C
  00044	e5843008	 str         r3, [r4, #8]
  00048	eb000000	 bl          InitializeCriticalSection

; 102  :     
; 103  :     for (DWORD dwIndex = 0; dwIndex<SD_MAXIMUM_SLOT_PER_SDHOST; dwIndex ++ )
; 104  :         m_SlotArray[dwIndex] = NULL ;

  0004c	e284306c	 add         r3, r4, #0x6C
  00050	e2832040	 add         r2, r3, #0x40
  00054	e3a01000	 mov         r1, #0
  00058		 |$LN14@CSDHost|
  00058	e4831004	 str         r1, [r3], #4
  0005c	e1530002	 cmp         r3, r2
  00060	1afffffc	 bne         |$LN14@CSDHost|

; 105  :     m_fIntialized = FALSE;
; 106  :     m_fHostAttached = FALSE;

  00064	e5845064	 str         r5, [r4, #0x64]

; 107  :     m_fIntialized = FALSE;

  00068	e5845060	 str         r5, [r4, #0x60]

; 108  : }

  0006c	e1a00004	 mov         r0, r4
  00070	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00074	e12fff1e	 bx          lr
  00078		 |$LN19@CSDHost|
  00078		 |$LN20@CSDHost|
  00078	00000000	 DCD         |??_7CSDHost@@6B@|
  0007c		 |$M38397|

			 ENDP  ; |??0CSDHost@@QAA@K@Z|, CSDHost::CSDHost

	EXPORT	|??1CSDHost@@UAA@XZ|			; CSDHost::~CSDHost
; File c:\wince600\public\common\oak\inc\crefcon.h

  00000			 AREA	 |.pdata|, PDATA
|$T38420| DCD	|$LN15@CSDHost@2|
	DCD	0x40001d01
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CSDHost@@UAA@XZ| PROC		; CSDHost::~CSDHost

; 133  : {

  00000		 |$LN15@CSDHost@2|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M38417|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3060	 ldr         r3, [pc, #0x60]

; 134  :     ASSERT(!m_fHostAttached);
; 135  :     for (DWORD dwIndex= 0; dwIndex< m_dwNumOfSlot; dwIndex++) {

  0000c	e5942068	 ldr         r2, [r4, #0x68]
  00010	e3a06000	 mov         r6, #0
  00014	e5843000	 str         r3, [r4]
  00018	e3520000	 cmp         r2, #0
  0001c	9a00000c	 bls         |$LN2@CSDHost@2|

; 133  : {

  00020	e1a05004	 mov         r5, r4
  00024		 |$LL4@CSDHost@2|

; 136  :         if (m_SlotArray[ dwIndex ]) {

  00024	e595306c	 ldr         r3, [r5, #0x6C]
  00028	e1b00003	 movs        r0, r3

; 137  :             delete m_SlotArray[ dwIndex ];

  0002c	15903000	 ldrne       r3, [r0]
  00030	13a01001	 movne       r1, #1
  00034	15933008	 ldrne       r3, [r3, #8]
  00038	11a0e00f	 movne       lr, pc
  0003c	112fff13	 bxne        r3
  00040	e5943068	 ldr         r3, [r4, #0x68]
  00044	e2866001	 add         r6, r6, #1
  00048	e2855004	 add         r5, r5, #4
  0004c	e1560003	 cmp         r6, r3
  00050	3afffff3	 bcc         |$LL4@CSDHost@2|
  00054		 |$LN2@CSDHost@2|

; 138  :         }
; 139  :     };
; 140  :     DeleteCriticalSection(&HCCritSection);

  00054	e284002c	 add         r0, r4, #0x2C
  00058	eb000000	 bl          DeleteCriticalSection

; 141  : }

  0005c	e59f3008	 ldr         r3, [pc, #8]
  00060	e5843000	 str         r3, [r4]
  00064	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00068	e12fff1e	 bx          lr
  0006c		 |$LN16@CSDHost@2|
  0006c		 |$LN17@CSDHost@2|
  0006c	00000000	 DCD         |??_7CRefObject@@6B@|
  00070		 |$LN18@CSDHost@2|
  00070	00000000	 DCD         |??_7CSDHost@@6B@|
  00074		 |$M38418|

			 ENDP  ; |??1CSDHost@@UAA@XZ|, CSDHost::~CSDHost


  00000			 AREA	 |.pdata|, PDATA
|$T38436| DCD	|$LN12@Attach|
	DCD	0x40002101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Attach@CSDHost@@UAAHXZ| PROC		; CSDHost::Attach

; 144  : {

  00000		 |$LN12@Attach|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M38433|
  00004	e1a04000	 mov         r4, r0

; 145  :     if (m_fIntialized && !m_fHostAttached) {

  00008	e5943060	 ldr         r3, [r4, #0x60]
  0000c	e3530000	 cmp         r3, #0
  00010	0a000018	 beq         |$LN5@Attach|
  00014	e5943064	 ldr         r3, [r4, #0x64]
  00018	e3530000	 cmp         r3, #0
  0001c	1a000015	 bne         |$LN5@Attach|

; 147  :         for (DWORD dwIndex= 0; dwIndex< m_dwNumOfSlot; dwIndex++) {

  00020	e5943068	 ldr         r3, [r4, #0x68]
  00024	e3a02001	 mov         r2, #1
  00028	e5842064	 str         r2, [r4, #0x64]
  0002c	e3530000	 cmp         r3, #0
  00030	e3a06000	 mov         r6, #0
  00034	9a00000c	 bls         |$LN2@Attach|

; 146  :         m_fHostAttached = TRUE ;

  00038	e1a05004	 mov         r5, r4
  0003c		 |$LL4@Attach|

; 148  :             if (m_SlotArray[ dwIndex ]) {

  0003c	e595306c	 ldr         r3, [r5, #0x6C]
  00040	e3530000	 cmp         r3, #0

; 149  :                 m_SlotArray[ dwIndex ]->Attach();

  00044	11a00003	 movne       r0, r3
  00048	15903000	 ldrne       r3, [r0]
  0004c	15933010	 ldrne       r3, [r3, #0x10]
  00050	11a0e00f	 movne       lr, pc
  00054	112fff13	 bxne        r3
  00058	e5943068	 ldr         r3, [r4, #0x68]
  0005c	e2866001	 add         r6, r6, #1
  00060	e2855004	 add         r5, r5, #4
  00064	e1560003	 cmp         r6, r3
  00068	3afffff3	 bcc         |$LL4@Attach|
  0006c		 |$LN2@Attach|

; 150  :             }
; 151  :         };
; 152  :         return TRUE;

  0006c	e3a00001	 mov         r0, #1

; 155  : }

  00070	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00074	e12fff1e	 bx          lr
  00078		 |$LN5@Attach|

; 153  :     }
; 154  :     return FALSE;

  00078	e3a00000	 mov         r0, #0

; 155  : }

  0007c	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00080	e12fff1e	 bx          lr
  00084		 |$M38434|

			 ENDP  ; |?Attach@CSDHost@@UAAHXZ|, CSDHost::Attach


  00000			 AREA	 |.pdata|, PDATA
|$T38449| DCD	|$LN12@Detach|
	DCD	0x40001b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Detach@CSDHost@@UAAHXZ| PROC		; CSDHost::Detach

; 157  : {

  00000		 |$LN12@Detach|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M38446|
  00004	e1a04000	 mov         r4, r0

; 158  :     if (m_fHostAttached) {

  00008	e5943064	 ldr         r3, [r4, #0x64]
  0000c	e3530000	 cmp         r3, #0
  00010	0a000012	 beq         |$LN2@Detach|

; 160  :         for (DWORD dwIndex= 0; dwIndex< m_dwNumOfSlot; dwIndex++) {

  00014	e5943068	 ldr         r3, [r4, #0x68]
  00018	e3a02000	 mov         r2, #0
  0001c	e5842064	 str         r2, [r4, #0x64]
  00020	e3530000	 cmp         r3, #0
  00024	e3a06000	 mov         r6, #0
  00028	9a00000c	 bls         |$LN2@Detach|

; 159  :         m_fHostAttached = FALSE;

  0002c	e1a05004	 mov         r5, r4
  00030		 |$LL4@Detach|

; 161  :             if (m_SlotArray[ dwIndex ]) {

  00030	e595306c	 ldr         r3, [r5, #0x6C]
  00034	e3530000	 cmp         r3, #0

; 162  :                 m_SlotArray[ dwIndex ]->Detach();

  00038	11a00003	 movne       r0, r3
  0003c	15903000	 ldrne       r3, [r0]
  00040	15933014	 ldrne       r3, [r3, #0x14]
  00044	11a0e00f	 movne       lr, pc
  00048	112fff13	 bxne        r3
  0004c	e5943068	 ldr         r3, [r4, #0x68]
  00050	e2866001	 add         r6, r6, #1
  00054	e2855004	 add         r5, r5, #4
  00058	e1560003	 cmp         r6, r3
  0005c	3afffff3	 bcc         |$LL4@Detach|
  00060		 |$LN2@Detach|

; 163  :             }
; 164  :         };
; 165  :     };
; 166  :     return TRUE;

  00060	e3a00001	 mov         r0, #1

; 167  : }

  00064	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00068	e12fff1e	 bx          lr
  0006c		 |$M38447|

			 ENDP  ; |?Detach@CSDHost@@UAAHXZ|, CSDHost::Detach

	EXPORT	|?SlotSetupInterface@CSDHost@@IAAJKPAU_SD_CARD_INTERFACE_EX@@@Z| ; CSDHost::SlotSetupInterface
	IMPORT	|memcpy|
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T38510| DCD	|$LN31@SlotSetupI|
	DCD	0x40005602
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SlotSetupInterface@CSDHost@@IAAJKPAU_SD_CARD_INTERFACE_EX@@@Z| PROC ; CSDHost::SlotSetupInterface

; 169  : {

  00000		 |$LN31@SlotSetupI|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd030	 sub         sp, sp, #0x30
  00008		 |$M38507|
  00008	e1b05002	 movs        r5, r2
  0000c	e1a07001	 mov         r7, r1
  00010	e1a06000	 mov         r6, r0

; 170  :     SD_API_STATUS status = SD_API_STATUS_INVALID_PARAMETER;

  00014	e3a0e11f	 mov         lr, #0x1F, 2

; 171  :     if (psdCardInterfaceEx!= NULL && dwSlot < m_dwNumOfSlot && m_SlotArray[dwSlot]!=NULL) {

  00018	0a00004a	 beq         |$LN1@SlotSetupI|
  0001c	e5963068	 ldr         r3, [r6, #0x68]
  00020	e1570003	 cmp         r7, r3
  00024	2a000047	 bcs         |$LN1@SlotSetupI|
  00028	e0863107	 add         r3, r6, r7, lsl #2
  0002c	e593306c	 ldr         r3, [r3, #0x6C]
  00030	e3530000	 cmp         r3, #0
  00034	0a000043	 beq         |$LN1@SlotSetupI|

; 172  :         if (psdCardInterfaceEx->InterfaceModeEx.bit.sdHighSpeed == 0 ) { // we can do this on old API.

  00038	e5953000	 ldr         r3, [r5]
  0003c	e3130002	 tst         r3, #2
  00040	1a000036	 bne         |$LN3@SlotSetupI|

; 173  :             SD_CARD_INTERFACE sdCardInterface = ConvertFromEx(*psdCardInterfaceEx);

  00044	e28d0010	 add         r0, sp, #0x10
  00048	e3a02020	 mov         r2, #0x20
  0004c	e1a01005	 mov         r1, r5
  00050	eb000000	 bl          memcpy
  00054	e59d3010	 ldr         r3, [sp, #0x10]
  00058	e3a08000	 mov         r8, #0
  0005c	e59da014	 ldr         r10, [sp, #0x14]
  00060	e3130001	 tst         r3, #1
  00064	13a08001	 movne       r8, #1
  00068	e3130004	 tst         r3, #4
  0006c	13a08002	 movne       r8, #2
  00070	e3130101	 tst         r3, #1, 2
  00074	13a09001	 movne       r9, #1
  00078	03a09000	 moveq       r9, #0

; 174  :             status = SlotOptionHandler(dwSlot, SDHCDSetSlotInterface,&sdCardInterface,sizeof(sdCardInterface));

  0007c	e5964044	 ldr         r4, [r6, #0x44]
  00080	e3a0b00c	 mov         r11, #0xC
  00084	e58d900c	 str         r9, [sp, #0xC]
  00088	e28d3004	 add         r3, sp, #4
  0008c	e3a02001	 mov         r2, #1
  00090	e1a01007	 mov         r1, r7
  00094	e2860008	 add         r0, r6, #8
  00098	e58d8004	 str         r8, [sp, #4]
  0009c	e58da008	 str         r10, [sp, #8]
  000a0	e58db000	 str         r11, [sp]
  000a4	e1a0e00f	 mov         lr, pc
  000a8	e12fff14	 bx          r4
  000ac	e1b0e000	 movs        lr, r0

; 175  :             if (SD_API_SUCCESS(status)){

  000b0	4a000024	 bmi         |$LN1@SlotSetupI|

; 176  :                 psdCardInterfaceEx->InterfaceModeEx.bit.sd4Bit = (sdCardInterface.InterfaceMode == SD_INTERFACE_SD_4BIT? 1: 0);

  000b4	e59d1004	 ldr         r1, [sp, #4]
  000b8	e5953000	 ldr         r3, [r5]
  000bc	e3510001	 cmp         r1, #1
  000c0	03a02001	 moveq       r2, #1
  000c4	13a02000	 movne       r2, #0
  000c8	e2022001	 and         r2, r2, #1
  000cc	e3c33001	 bic         r3, r3, #1

; 177  : 				psdCardInterfaceEx->InterfaceModeEx.bit.sd8Bit = (sdCardInterface.InterfaceMode == SD_INTERFACE_SD_MMC_8BIT? 1: 0);

  000d0	e3510002	 cmp         r1, #2
  000d4	e1830002	 orr         r0, r3, r2
  000d8	03a03001	 moveq       r3, #1

; 178  :                 psdCardInterfaceEx->ClockRate = sdCardInterface.ClockRate;
; 179  :                 psdCardInterfaceEx->InterfaceModeEx.bit.sdWriteProtected = (sdCardInterface.WriteProtected?1:0);

  000dc	e59d100c	 ldr         r1, [sp, #0xC]
  000e0	13a03000	 movne       r3, #0
  000e4	e0203103	 eor         r3, r0, r3, lsl #2
  000e8	e2033004	 and         r3, r3, #4
  000ec	e5850000	 str         r0, [r5]
  000f0	e3510000	 cmp         r1, #0
  000f4	e0230000	 eor         r0, r3, r0
  000f8	13a03001	 movne       r3, #1
  000fc	03a03000	 moveq       r3, #0
  00100	e0203f03	 eor         r3, r0, r3, lsl #30
  00104	e59d2008	 ldr         r2, [sp, #8]
  00108	e2033101	 and         r3, r3, #1, 2
  0010c	e0233000	 eor         r3, r3, r0
  00110	e5850000	 str         r0, [r5]
  00114	e5853000	 str         r3, [r5]
  00118	e5852004	 str         r2, [r5, #4]

; 180  :             }
; 181  :         }
; 182  :         else 

  0011c	ea000009	 b           |$LN1@SlotSetupI|
  00120		 |$LN3@SlotSetupI|

; 183  :             status = SlotOptionHandler(dwSlot, SDHCDSetSlotInterfaceEx, psdCardInterfaceEx, sizeof(*psdCardInterfaceEx));

  00120	e3a08020	 mov         r8, #0x20
  00124	e5964044	 ldr         r4, [r6, #0x44]
  00128	e58d8000	 str         r8, [sp]
  0012c	e1a03005	 mov         r3, r5
  00130	e3a0200c	 mov         r2, #0xC
  00134	e1a01007	 mov         r1, r7
  00138	e2860008	 add         r0, r6, #8
  0013c	e1a0e00f	 mov         lr, pc
  00140	e12fff14	 bx          r4
  00144	e1a0e000	 mov         lr, r0
  00148		 |$LN1@SlotSetupI|

; 184  :     }
; 185  :     ASSERT(SD_API_SUCCESS(status));
; 186  :     return status;
; 187  : }

  00148	e1a0000e	 mov         r0, lr
  0014c	e28dd030	 add         sp, sp, #0x30
  00150	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00154	e12fff1e	 bx          lr
  00158		 |$M38508|

			 ENDP  ; |?SlotSetupInterface@CSDHost@@IAAJKPAU_SD_CARD_INTERFACE_EX@@@Z|, CSDHost::SlotSetupInterface

	EXPORT	|?GetBusNamePrefix@CSDHostContainer@@UAAKPAGK@Z| ; CSDHostContainer::GetBusNamePrefix
	EXPORT	|??_C@_1M@LGNNOKCO@?$AAS?$AAD?$AAB?$AAU?$AAS?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|StringCchCopyW|

  00000			 AREA	 |.pdata|, PDATA
|$T38524| DCD	|$LN10@GetBusName|
	DCD	0x40001701

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@LGNNOKCO@?$AAS?$AAD?$AAB?$AAU?$AAS?$AA?$AA@| DCB "S", 0x0, "D", 0x0
	DCB	"B", 0x0, "U", 0x0, "S", 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetBusNamePrefix@CSDHostContainer@@UAAKPAGK@Z| PROC ; CSDHostContainer::GetBusNamePrefix

; 229  : {

  00000		 |$LN10@GetBusName|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M38521|
  00004	e1a03002	 mov         r3, r2
  00008	e1a05001	 mov         r5, r1

; 230  :     DWORD dwUnitCopy = min(dwSizeInUnit,sizeof(SD_BUS_PREFIX)/sizeof(TCHAR));

  0000c	e3530006	 cmp         r3, #6
  00010	31a04003	 movcc       r4, r3
  00014	23a04006	 movcs       r4, #6

; 231  :     if ( lpReturnBusName && dwUnitCopy) {

  00018	e3550000	 cmp         r5, #0
  0001c	0a000009	 beq         |$LN3@GetBusName|
  00020	e3540000	 cmp         r4, #0
  00024	0a000007	 beq         |$LN3@GetBusName|

; 232  :         HRESULT hr = StringCchCopy( lpReturnBusName, dwSizeInUnit, SD_BUS_PREFIX);

  00028	e59f2028	 ldr         r2, [pc, #0x28]
  0002c	e1a01003	 mov         r1, r3
  00030	e1a00005	 mov         r0, r5
  00034	eb000000	 bl          StringCchCopyW
  00038	e3500000	 cmp         r0, #0

; 233  :         if ( !SUCCEEDED(hr)) {

  0003c	5a000002	 bpl         |$LN1@GetBusName|

; 234  :             lpReturnBusName[0]=0; // Terminate it.

  00040	e3a03000	 mov         r3, #0
  00044	e1c530b0	 strh        r3, [r5]
  00048		 |$LN3@GetBusName|

; 235  :             dwUnitCopy = 0 ;
; 236  :         }
; 237  :         return dwUnitCopy;
; 238  :     }
; 239  :     else
; 240  :         return 0;

  00048	e3a04000	 mov         r4, #0
  0004c		 |$LN1@GetBusName|

; 241  : }

  0004c	e1a00004	 mov         r0, r4
  00050	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$LN11@GetBusName|
  00058		 |$LN12@GetBusName|
  00058	00000000	 DCD         |??_C@_1M@LGNNOKCO@?$AAS?$AAD?$AAB?$AAU?$AAS?$AA?$AA@|
  0005c		 |$M38522|

			 ENDP  ; |?GetBusNamePrefix@CSDHostContainer@@UAAKPAGK@Z|, CSDHostContainer::GetBusNamePrefix

	EXPORT	|this$GSCopy$| [ DATA ]
	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|?GetSlotInfo@CSDHostContainer@@MAAKPAU_BUS_DRIVER_SLOT_INFO@@K@Z| ; CSDHostContainer::GetSlotInfo
	EXPORT	|??_C@_1BG@BJOLJCHI@?$AAE?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAS?$AAl?$AAo?$AAt?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|SDProcessException|
	IMPORT	|__GSHandlerCheck_SEH|
	IMPORT	|__security_cookie|
	IMPORT	|__security_check_cookie|
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T38717| DCD	|$LN119@GetSlotInf|
	DCD	0xc000d704

  00000			 AREA	 |.pdata|, PDATA
|$T38719| DCD	|$LN47@GetSlotInf|
	DCD	0x40000301

  00000			 AREA	 |.pdata|, PDATA
|$T38721| DCD	|$LN40@GetSlotInf|
	DCD	0x40000301

  00000			 AREA	 |.pdata|, PDATA
|$T38723| DCD	|$LN33@GetSlotInf|
	DCD	0x40000501

  00000			 AREA	 |.xdata|, DATA
|$T38715| DCD	0x3
	DCD	|$LN51@GetSlotInf|
	DCD	|$LN52@GetSlotInf|
	DCD	|$LN47@GetSlotInf|
	DCD	|$LN48@GetSlotInf|
	DCD	|$LN44@GetSlotInf|
	DCD	|$LN45@GetSlotInf|
	DCD	|$LN40@GetSlotInf|
	DCD	|$LN41@GetSlotInf|
	DCD	|$LN37@GetSlotInf|
	DCD	|$LN38@GetSlotInf|
	DCD	|$LN33@GetSlotInf|
	DCD	|$LN34@GetSlotInf|
	DCD	0xffffffd4

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@BJOLJCHI@?$AAE?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAS?$AAl?$AAo?$AAt?$AA?$AA@| DCB "E"
	DCB	0x0, "m", 0x0, "p", 0x0, "t", 0x0, "y", 0x0, " ", 0x0, "S"
	DCB	0x0, "l", 0x0, "o", 0x0, "t", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck_SEH|
  00004	00000000	 DCD         |$T38715|

  00008		 |?GetSlotInfo@CSDHostContainer@@MAAKPAU_BUS_DRIVER_SLOT_INFO@@K@Z| PROC ; CSDHostContainer::GetSlotInfo

; 290  : {

  00008		 |$LN119@GetSlotInf|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d5ff0	 stmdb       sp!, {r4 - r12, lr}
  00010	e28db028	 add         r11, sp, #0x28
  00014	e24dd0f8	 sub         sp, sp, #0xF8
  00018		 |$LN117@GetSlotInf|
  00018	e1a04002	 mov         r4, r2
  0001c	e1a05001	 mov         r5, r1
  00020	e59f3364	 ldr         r3, [pc, #0x364]
  00024	e5933000	 ldr         r3, [r3]
  00028	e50b302c	 str         r3, [r11, #-0x2C]
  0002c	e1b0a000	 movs        r10, r0

; 291  :     ULONG                   slotCount = 0;          // running slot count

  00030	e50ba108	 str         r10, [r11, #-0x108]
  00034	e3a06000	 mov         r6, #0

; 292  : 
; 293  :     ((CStaticContainer *)this)->Lock();

  00038	128a002c	 addne       r0, r10, #0x2C
  0003c	03a00000	 moveq       r0, #0
  00040	eb000000	 bl          EnterCriticalSection

; 294  :     for (DWORD dwIndex = 0 ; dwIndex < m_dwArraySize; dwIndex++) {

  00044	e59a3080	 ldr         r3, [r10, #0x80]
  00048	e1b01003	 movs        r1, r3
  0004c	0a000007	 beq         |$LN23@GetSlotInf|
  00050	e1a0200a	 mov         r2, r10
  00054		 |$LL25@GetSlotInf|

; 295  :         if (m_rgObjectArray[dwIndex]!=NULL) {

  00054	e5923040	 ldr         r3, [r2, #0x40]
  00058	e3530000	 cmp         r3, #0

; 296  :             slotCount += m_rgObjectArray[dwIndex]->GetSlotCount();

  0005c	15933068	 ldrne       r3, [r3, #0x68]
  00060	10866003	 addne       r6, r6, r3
  00064	e2822004	 add         r2, r2, #4
  00068	e2511001	 subs        r1, r1, #1
  0006c	1afffff8	 bne         |$LL25@GetSlotInf|
  00070		 |$LN23@GetSlotInf|

; 297  :         }
; 298  :     };
; 299  :     if (pslotInfoArray!=NULL && Length!=0) { // We need file out the information.

  00070	e3550000	 cmp         r5, #0
  00074	0a000006	 beq         |$LN16@GetSlotInf|
  00078	e3540000	 cmp         r4, #0
  0007c	0a000004	 beq         |$LN16@GetSlotInf|

; 300  :         // check the buffer
; 301  :         if (Length < slotCount * (sizeof(BUS_DRIVER_SLOT_INFO))) {

  00080	e3a0309c	 mov         r3, #0x9C
  00084	e0030396	 mul         r3, r6, r3
  00088	e1540003	 cmp         r4, r3
  0008c	2a000008	 bcs         |$LN20@GetSlotInf|

; 302  :             DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDBusDriver: GetSlotInfo : insufficient buffer  \n")));    
; 303  :             slotCount = 0;

  00090	e3a06000	 mov         r6, #0
  00094		 |$LN16@GetSlotInf|

; 363  :                     }
; 364  :                 }
; 365  :             };
; 366  :         }
; 367  :     }
; 368  :     ((CStaticContainer *)this)->Unlock();

  00094	e28a002c	 add         r0, r10, #0x2C
  00098	eb000000	 bl          LeaveCriticalSection

; 369  :     return slotCount;

  0009c	e51b002c	 ldr         r0, [r11, #-0x2C]
  000a0	eb000000	 bl          __security_check_cookie
  000a4		 |$LN26@GetSlotInf|

; 370  : }

  000a4	e1a00006	 mov         r0, r6
  000a8	e24bd028	 sub         sp, r11, #0x28
  000ac	e89d6ff0	 ldmia       sp, {r4 - r11, sp, lr}
  000b0	e12fff1e	 bx          lr
  000b4		 |$LN20@GetSlotInf|

; 304  :         }
; 305  :         else {
; 306  :             ULONG curSlotCount = slotCount;
; 307  :             PBUS_DRIVER_SLOT_INFO pCurSlotInfo = pslotInfoArray;
; 308  :             for (DWORD dwHostIndex = 0; dwHostIndex < m_dwArraySize && curSlotCount ; dwHostIndex++) {

  000b4	e3a07000	 mov         r7, #0
  000b8	e1a09006	 mov         r9, r6
  000bc	e50b9120	 str         r9, [r11, #-0x120]
  000c0	e50b5114	 str         r5, [r11, #-0x114]
  000c4		 |$LN116@GetSlotInf|
  000c4	e50b7118	 str         r7, [r11, #-0x118]
  000c8	e59a3080	 ldr         r3, [r10, #0x80]
  000cc	e1570003	 cmp         r7, r3
  000d0	2affffef	 bcs         |$LN16@GetSlotInf|
  000d4	e3590000	 cmp         r9, #0
  000d8	0affffed	 beq         |$LN16@GetSlotInf|

; 309  :                 if (m_rgObjectArray[dwHostIndex]!=NULL) {

  000dc	e08a3107	 add         r3, r10, r7, lsl #2
  000e0	e5933040	 ldr         r3, [r3, #0x40]
  000e4	e3530000	 cmp         r3, #0
  000e8	0a00009b	 beq         |$LN17@GetSlotInf|

; 310  :                     for (DWORD dwSlotIndex= 0; dwSlotIndex< m_rgObjectArray[dwHostIndex]->GetSlotCount() && curSlotCount; dwSlotIndex++) {

  000ec	e3a08000	 mov         r8, #0
  000f0		 |$LN115@GetSlotInf|
  000f0	e50b811c	 str         r8, [r11, #-0x11C]
  000f4	e08a3107	 add         r3, r10, r7, lsl #2
  000f8	e5932040	 ldr         r2, [r3, #0x40]
  000fc	e5923068	 ldr         r3, [r2, #0x68]
  00100	e1580003	 cmp         r8, r3
  00104	2a000094	 bcs         |$LN17@GetSlotInf|
  00108	e3590000	 cmp         r9, #0
  0010c	0a000092	 beq         |$LN17@GetSlotInf|

; 311  :                         CSDSlot * psdSlot = m_rgObjectArray[dwHostIndex]->GetSlot(dwSlotIndex);

  00110	e1580003	 cmp         r8, r3
  00114	30823108	 addcc       r3, r2, r8, lsl #2
  00118	3593406c	 ldrcc       r4, [r3, #0x6C]
  0011c	23a04000	 movcs       r4, #0
  00120	e50b40fc	 str         r4, [r11, #-0xFC]
  00124	e50b4110	 str         r4, [r11, #-0x110]

; 312  :                         WCHAR description[MAX_SD_DESCRIPTION_STRING];
; 313  :                         StringCchCopy(description,_countof(description), TEXT("Empty Slot"));

  00128	e59f2258	 ldr         r2, [pc, #0x258]
  0012c	e3a01040	 mov         r1, #0x40
  00130	e24b00ac	 sub         r0, r11, #0xAC
  00134	eb000000	 bl          StringCchCopyW

; 314  :                         if (psdSlot) {

  00138	e3540000	 cmp         r4, #0
  0013c	0a000071	 beq         |$LN3@GetSlotInf|

; 315  :                             BOOL fContinue = TRUE;
; 316  :                             for (DWORD dwFuncIndex = 0; dwFuncIndex< SD_MAXIMUM_DEVICE_PER_SLOT && fContinue; dwFuncIndex++) {

  00140	e3a09000	 mov         r9, #0
  00144	e3a04001	 mov         r4, #1
  00148		 |$LN114@GetSlotInf|
  00148	e50b9100	 str         r9, [r11, #-0x100]
  0014c	e3590008	 cmp         r9, #8
  00150	2a00003e	 bcs         |$LN8@GetSlotInf|
  00154	e3540000	 cmp         r4, #0
  00158	0a000069	 beq         |$LN111@GetSlotInf|

; 317  :                                 CSDDevice *  pDevice = psdSlot->GetFunctionDevice(dwFuncIndex);

  0015c	e1a01009	 mov         r1, r9
  00160	e51b0110	 ldr         r0, [r11, #-0x110]
  00164	eb000000	 bl          |?GetFunctionDevice@CSDSlot@@QAAPAVCSDDevice@@K@Z|
  00168	e1b02000	 movs        r2, r0
  0016c	e50b2104	 str         r2, [r11, #-0x104]
  00170	e50b210c	 str         r2, [r11, #-0x10C]

; 318  :                                 if (pDevice) {

  00174	0a000033	 beq         |$LN9@GetSlotInf|

; 319  :                                     if (pDevice->IsDriverLoaded()) {

  00178	e5923420	 ldr         r3, [r2, #0x420]
  0017c	e3530000	 cmp         r3, #0
  00180	15933028	 ldrne       r3, [r3, #0x28]
  00184	03a03000	 moveq       r3, #0
  00188	e3530000	 cmp         r3, #0
  0018c	0a00002b	 beq         |$LN6@GetSlotInf|

; 320  :                                         StringCchCopy(description,_countof(description), pDevice->GetClientName());

  00190	e2822e45	 add         r2, r2, #0x45, 28
  00194	e3a01040	 mov         r1, #0x40
  00198	e24b00ac	 sub         r0, r11, #0xAC
  0019c	eb000000	 bl          StringCchCopyW
  001a0		 |$LN37@GetSlotInf|

; 321  :                                         __try {
; 322  :                                             pCurSlotInfo->CardInterface = ConvertFromEx(pDevice->GetCardInterface());

  001a0	e51b3104	 ldr         r3, [r11, #-0x104]
  001a4	e2831d15	 add         r1, r3, #0x15, 26
  001a8	e24b00cc	 sub         r0, r11, #0xCC
  001ac	e3a02020	 mov         r2, #0x20
  001b0	eb000000	 bl          memcpy
  001b4	e51b30cc	 ldr         r3, [r11, #-0xCC]
  001b8	e3130001	 tst         r3, #1
  001bc	e3a01000	 mov         r1, #0
  001c0	13a01001	 movne       r1, #1
  001c4	e3130004	 tst         r3, #4
  001c8	13a01002	 movne       r1, #2
  001cc	e50b10f8	 str         r1, [r11, #-0xF8]
  001d0	e51b00c8	 ldr         r0, [r11, #-0xC8]
  001d4	e50b00f4	 str         r0, [r11, #-0xF4]
  001d8	e3130101	 tst         r3, #1, 2
  001dc	13a02001	 movne       r2, #1
  001e0	03a02000	 moveq       r2, #0
  001e4	e1a03005	 mov         r3, r5
  001e8	e50b20f0	 str         r2, [r11, #-0xF0]
  001ec	e5a31090	 str         r1, [r3, #0x90]!

; 323  :                                             pCurSlotInfo->CardPresent = TRUE;

  001f0	e3a01001	 mov         r1, #1
  001f4	e5851008	 str         r1, [r5, #8]
  001f8	e5830004	 str         r0, [r3, #4]
  001fc	e5832008	 str         r2, [r3, #8]

; 324  :                                             pCurSlotInfo->DeviceType = pDevice->GetDeviceType();

  00200	e51b2104	 ldr         r2, [r11, #-0x104]
  00204	e5923494	 ldr         r3, [r2, #0x494]
  00208	e585300c	 str         r3, [r5, #0xC]
  0020c		 |$LN38@GetSlotInf|

; 325  :                                         }

  0020c	ea00000a	 b           |$LN39@GetSlotInf|
  00210		 |$LN34@GetSlotInf|

; 327  :                                             slotCount = 0;

  00210	e3a06000	 mov         r6, #0

; 328  :                                             curSlotCount = 0;

  00214	e3a03000	 mov         r3, #0
  00218	e50b3120	 str         r3, [r11, #-0x120]
  0021c	e51b5114	 ldr         r5, [r11, #-0x114]
  00220	e51b7118	 ldr         r7, [r11, #-0x118]
  00224	e51b811c	 ldr         r8, [r11, #-0x11C]
  00228	e51b30fc	 ldr         r3, [r11, #-0xFC]
  0022c	e50b3110	 str         r3, [r11, #-0x110]
  00230	e51b9100	 ldr         r9, [r11, #-0x100]
  00234	e51b210c	 ldr         r2, [r11, #-0x10C]
  00238	e51ba108	 ldr         r10, [r11, #-0x108]
  0023c		 |$LN39@GetSlotInf|

; 329  :                                         }
; 330  :                                         fContinue = FALSE;

  0023c	e3a04000	 mov         r4, #0
  00240		 |$LN6@GetSlotInf|

; 331  :                                     }
; 332  :                                     pDevice->DeRef();

  00240	e1a00002	 mov         r0, r2
  00244	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  00248		 |$LN9@GetSlotInf|
  00248	e2899001	 add         r9, r9, #1
  0024c	eaffffbd	 b           |$LN114@GetSlotInf|
  00250		 |$LN8@GetSlotInf|

; 333  :                                 }
; 334  :                             }
; 335  :                             if (fContinue) {

  00250	e3540000	 cmp         r4, #0
  00254	0a00002a	 beq         |$LN111@GetSlotInf|

; 336  :                                 CSDDevice *  pDevice = psdSlot->GetFunctionDevice(0);// Master Device.

  00258	e3a01000	 mov         r1, #0
  0025c	e51b0110	 ldr         r0, [r11, #-0x110]
  00260	eb000000	 bl          |?GetFunctionDevice@CSDSlot@@QAAPAVCSDDevice@@K@Z|
  00264	e1b04000	 movs        r4, r0
  00268	e50b410c	 str         r4, [r11, #-0x10C]

; 337  :                                 if (pDevice) {

  0026c	0a000024	 beq         |$LN111@GetSlotInf|
  00270		 |$LN44@GetSlotInf|

; 338  :                                     __try {
; 339  :                                         pCurSlotInfo->CardInterface = ConvertFromEx(pDevice->GetCardInterface());

  00270	e2841d15	 add         r1, r4, #0x15, 26
  00274	e24b00ec	 sub         r0, r11, #0xEC
  00278	e3a02020	 mov         r2, #0x20
  0027c	eb000000	 bl          memcpy
  00280	e51b30ec	 ldr         r3, [r11, #-0xEC]
  00284	e3130001	 tst         r3, #1
  00288	e3a02000	 mov         r2, #0
  0028c	13a02001	 movne       r2, #1
  00290	e3130004	 tst         r3, #4
  00294	13a02002	 movne       r2, #2
  00298	e50b20f8	 str         r2, [r11, #-0xF8]
  0029c	e51b00e8	 ldr         r0, [r11, #-0xE8]
  002a0	e50b00f4	 str         r0, [r11, #-0xF4]
  002a4	e3130101	 tst         r3, #1, 2
  002a8	13a01001	 movne       r1, #1
  002ac	03a01000	 moveq       r1, #0
  002b0	e1a03005	 mov         r3, r5
  002b4	e50b10f0	 str         r1, [r11, #-0xF0]
  002b8	e5a32090	 str         r2, [r3, #0x90]!

; 340  :                                         pCurSlotInfo->CardPresent = TRUE;

  002bc	e3a02001	 mov         r2, #1
  002c0	e5852008	 str         r2, [r5, #8]
  002c4	e5830004	 str         r0, [r3, #4]
  002c8	e5831008	 str         r1, [r3, #8]

; 341  :                                         pCurSlotInfo->DeviceType = pDevice->GetDeviceType();

  002cc	e5943494	 ldr         r3, [r4, #0x494]
  002d0	e585300c	 str         r3, [r5, #0xC]
  002d4		 |$LN45@GetSlotInf|

; 342  :                                     }

  002d4	e51b9120	 ldr         r9, [r11, #-0x120]
  002d8	ea000006	 b           |$LN46@GetSlotInf|
  002dc		 |$LN41@GetSlotInf|

; 344  :                                         slotCount = 0;

  002dc	e3a06000	 mov         r6, #0

; 345  :                                         curSlotCount = 0;

  002e0	e3a09000	 mov         r9, #0
  002e4	e51b5114	 ldr         r5, [r11, #-0x114]
  002e8	e51b7118	 ldr         r7, [r11, #-0x118]
  002ec	e51b811c	 ldr         r8, [r11, #-0x11C]
  002f0	e51b410c	 ldr         r4, [r11, #-0x10C]
  002f4	e51ba108	 ldr         r10, [r11, #-0x108]
  002f8		 |$LN46@GetSlotInf|

; 346  :                                     }
; 347  :                                     
; 348  :                                     pDevice->DeRef();

  002f8	e1a00004	 mov         r0, r4
  002fc	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  00300	ea000000	 b           |$LN3@GetSlotInf|
  00304		 |$LN111@GetSlotInf|

; 360  :                         }
; 361  :                         curSlotCount--;
; 362  :                         pCurSlotInfo++;

  00304	e51b9120	 ldr         r9, [r11, #-0x120]

; 346  :                                     }
; 347  :                                     
; 348  :                                     pDevice->DeRef();

  00308		 |$LN3@GetSlotInf|
  00308		 |$LN51@GetSlotInf|

; 349  :                                 }
; 350  :                             }
; 351  :                         }
; 352  :                         __try {
; 353  :                             StringCchCopy(pCurSlotInfo->Description,_countof(pCurSlotInfo->Description),description);

  00308	e24b20ac	 sub         r2, r11, #0xAC
  0030c	e3a01040	 mov         r1, #0x40
  00310	e2850010	 add         r0, r5, #0x10
  00314	eb000000	 bl          StringCchCopyW

; 354  :                             pCurSlotInfo->HostIndex = dwHostIndex;

  00318	e5857000	 str         r7, [r5]

; 355  :                             pCurSlotInfo->SlotIndex = dwSlotIndex;

  0031c	e5858004	 str         r8, [r5, #4]
  00320		 |$LN52@GetSlotInf|

; 356  :                         }

  00320	ea000005	 b           |$LN53@GetSlotInf|
  00324		 |$LN48@GetSlotInf|

; 358  :                             slotCount = 0;

  00324	e3a06000	 mov         r6, #0

; 359  :                             curSlotCount = 0;

  00328	e3a09000	 mov         r9, #0
  0032c	e51b5114	 ldr         r5, [r11, #-0x114]
  00330	e51b7118	 ldr         r7, [r11, #-0x118]
  00334	e51b811c	 ldr         r8, [r11, #-0x11C]
  00338	e51ba108	 ldr         r10, [r11, #-0x108]
  0033c		 |$LN53@GetSlotInf|

; 360  :                         }
; 361  :                         curSlotCount--;
; 362  :                         pCurSlotInfo++;

  0033c	e285509c	 add         r5, r5, #0x9C
  00340	e2888001	 add         r8, r8, #1
  00344	e50b5114	 str         r5, [r11, #-0x114]
  00348	e2499001	 sub         r9, r9, #1
  0034c	e50b9120	 str         r9, [r11, #-0x120]
  00350	eaffff66	 b           |$LN115@GetSlotInf|
  00354		 |$LN109@GetSlotInf|

; 369  :     return slotCount;

  00354	e51b610c	 ldr         r6, [r11, #-0x10C]
  00358	eaffff51	 b           |$LN26@GetSlotInf|
  0035c		 |$LN17@GetSlotInf|

; 304  :         }
; 305  :         else {
; 306  :             ULONG curSlotCount = slotCount;
; 307  :             PBUS_DRIVER_SLOT_INFO pCurSlotInfo = pslotInfoArray;
; 308  :             for (DWORD dwHostIndex = 0; dwHostIndex < m_dwArraySize && curSlotCount ; dwHostIndex++) {

  0035c	e2877001	 add         r7, r7, #1
  00360	eaffff57	 b           |$LN116@GetSlotInf|

			 ENDP  ; |?GetSlotInfo@CSDHostContainer@@MAAKPAU_BUS_DRIVER_SLOT_INFO@@K@Z|, CSDHostContainer::GetSlotInfo

  00364		 |$LN47@GetSlotInf|
  00364		 |$LN118@GetSlotInf|

; 357  :                         __except (SDProcessException(GetExceptionInformation())) {

  00364	e52de004	 str         lr, [sp, #-4]!
  00368		 |$LN50@GetSlotInf|
  00368		 |$LN123@GetSlotInf|
  00368	eb000000	 bl          SDProcessException
  0036c		 |$LN49@GetSlotInf|
  0036c	e49df004	 ldr         pc, [sp], #4
  00370		 |$LN124@GetSlotInf|
  00370		 |$LN40@GetSlotInf|
  00370		 |$LN120@GetSlotInf|

; 343  :                                     __except (SDProcessException(GetExceptionInformation())) {

  00370	e52de004	 str         lr, [sp, #-4]!
  00374		 |$LN43@GetSlotInf|
  00374		 |$LN125@GetSlotInf|
  00374	eb000000	 bl          SDProcessException
  00378		 |$LN42@GetSlotInf|
  00378	e49df004	 ldr         pc, [sp], #4
  0037c		 |$LN126@GetSlotInf|
  0037c		 |$LN33@GetSlotInf|
  0037c		 |$LN121@GetSlotInf|

; 326  :                                         __except (SDProcessException(GetExceptionInformation())) {

  0037c	e52de004	 str         lr, [sp, #-4]!
  00380		 |$LN36@GetSlotInf|
  00380		 |$LN127@GetSlotInf|
  00380	eb000000	 bl          SDProcessException
  00384		 |$LN35@GetSlotInf|
  00384	e49df004	 ldr         pc, [sp], #4
  00388		 |$LN129@GetSlotInf|
  00388		 |$LN130@GetSlotInf|
  00388	00000000	 DCD         |??_C@_1BG@BJOLJCHI@?$AAE?$AAm?$AAp?$AAt?$AAy?$AA?5?$AAS?$AAl?$AAo?$AAt?$AA?$AA@|
  0038c		 |$LN131@GetSlotInf|
  0038c	00000000	 DCD         |__security_cookie|
  00390		 |$LN128@GetSlotInf|
  00390		 |$LN122@GetSlotInf|
	EXPORT	|?GetHCandSlotbySlotIndex@CSDHostContainer@@AAAHPAPAVCSDHost@@PAPAVCSDSlot@@K@Z| ; CSDHostContainer::GetHCandSlotbySlotIndex
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T38790| DCD	|$LN34@GetHCandSl|
	DCD	0x40003001
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetHCandSlotbySlotIndex@CSDHostContainer@@AAAHPAPAVCSDHost@@PAPAVCSDSlot@@K@Z| PROC ; CSDHostContainer::GetHCandSlotbySlotIndex

; 372  : {

  00000		 |$LN34@GetHCandSl|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M38787|
  00004	e1a05003	 mov         r5, r3
  00008	e1a07002	 mov         r7, r2
  0000c	e1b08001	 movs        r8, r1
  00010	e1a04000	 mov         r4, r0

; 373  :     BOOL fRet = FALSE;

  00014	e3a06000	 mov         r6, #0

; 374  :     if (ppHost && ppSlot) {

  00018	0a000025	 beq         |$LN26@GetHCandSl|
  0001c	e3570000	 cmp         r7, #0
  00020	0a000023	 beq         |$LN26@GetHCandSl|

; 375  :         ((CStaticContainer *)this)->Lock();

  00024	e3540000	 cmp         r4, #0
  00028	1284002c	 addne       r0, r4, #0x2C
  0002c	03a00000	 moveq       r0, #0
  00030	eb000000	 bl          EnterCriticalSection

; 376  :         for (DWORD dwIndex = 0 ; dwIndex < m_dwArraySize; dwIndex++) {

  00034	e5943080	 ldr         r3, [r4, #0x80]
  00038	e3a01000	 mov         r1, #0
  0003c	e1b00003	 movs        r0, r3
  00040	0a000019	 beq         |$LN31@GetHCandSl|

; 375  :         ((CStaticContainer *)this)->Lock();

  00044	e1a02004	 mov         r2, r4
  00048		 |$LL6@GetHCandSl|

; 377  :             if (m_rgObjectArray[dwIndex]!=NULL) {

  00048	e5923040	 ldr         r3, [r2, #0x40]
  0004c	e3530000	 cmp         r3, #0
  00050	0a000003	 beq         |$LN5@GetHCandSl|

; 378  :                 if (dwSlotIndex< m_rgObjectArray[dwIndex]->GetSlotCount()) {

  00054	e5933068	 ldr         r3, [r3, #0x68]
  00058	e1550003	 cmp         r5, r3
  0005c	3a000005	 bcc         |$LN29@GetHCandSl|

; 383  :                     break;
; 384  :                 }
; 385  :                 else {
; 386  :                     dwSlotIndex -= m_rgObjectArray[dwIndex]->GetSlotCount();

  00060	e0455003	 sub         r5, r5, r3
  00064		 |$LN5@GetHCandSl|

; 376  :         for (DWORD dwIndex = 0 ; dwIndex < m_dwArraySize; dwIndex++) {

  00064	e2811001	 add         r1, r1, #1
  00068	e1510000	 cmp         r1, r0
  0006c	e2822004	 add         r2, r2, #4
  00070	3afffff4	 bcc         |$LL6@GetHCandSl|
  00074	ea00000c	 b           |$LN31@GetHCandSl|
  00078		 |$LN29@GetHCandSl|

; 379  :                     *ppHost = m_rgObjectArray[dwIndex];

  00078	e0843101	 add         r3, r4, r1, lsl #2
  0007c	e5932040	 ldr         r2, [r3, #0x40]
  00080	e5882000	 str         r2, [r8]

; 380  :                     *ppSlot = (*ppHost)->GetSlot(dwSlotIndex);

  00084	e5923068	 ldr         r3, [r2, #0x68]
  00088	e1550003	 cmp         r5, r3
  0008c	30823105	 addcc       r3, r2, r5, lsl #2
  00090	3593306c	 ldrcc       r3, [r3, #0x6C]
  00094	23a03000	 movcs       r3, #0
  00098	e5873000	 str         r3, [r7]

; 381  :                     (*ppHost)->AddRef();

  0009c	e5983000	 ldr         r3, [r8]
  000a0	e2830004	 add         r0, r3, #4
  000a4	eb000000	 bl          InterlockedIncrement

; 382  :                     fRet = TRUE;

  000a8	e3a06001	 mov         r6, #1
  000ac		 |$LN31@GetHCandSl|

; 387  :                 }
; 388  :             }
; 389  :         };
; 390  :         ((CStaticContainer *)this)->Unlock();

  000ac	e284002c	 add         r0, r4, #0x2C
  000b0	eb000000	 bl          LeaveCriticalSection
  000b4		 |$LN26@GetHCandSl|

; 391  :     }
; 392  :     return fRet;
; 393  : }

  000b4	e1a00006	 mov         r0, r6
  000b8	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  000bc	e12fff1e	 bx          lr
  000c0		 |$M38788|

			 ENDP  ; |?GetHCandSlotbySlotIndex@CSDHostContainer@@AAAHPAPAVCSDHost@@PAPAVCSDSlot@@K@Z|, CSDHostContainer::GetHCandSlotbySlotIndex

	EXPORT	|?GetSlotPowerControlInfo@CSDHostContainer@@MAAJKPAU_SLOT_POWER_DATA@@@Z| ; CSDHostContainer::GetSlotPowerControlInfo
	IMPORT	|?GetNumOfFunctionDevice@CSDSlot@@QAAKXZ| ; CSDSlot::GetNumOfFunctionDevice
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sddevice.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T38831| DCD	|$LN25@GetSlotPow@2|
	DCD	0x40004b02
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetSlotPowerControlInfo@CSDHostContainer@@MAAJKPAU_SLOT_POWER_DATA@@@Z| PROC ; CSDHostContainer::GetSlotPowerControlInfo

; 405  : {

  00000		 |$LN25@GetSlotPow@2|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M38828|
  00008	e1a07002	 mov         r7, r2
  0000c	e1a03001	 mov         r3, r1

; 406  :     CSDHost *pHost = NULL;

  00010	e3a02000	 mov         r2, #0

; 407  :     CSDSlot *pSlot = NULL;

  00014	e3a01000	 mov         r1, #0
  00018	e58d2004	 str         r2, [sp, #4]
  0001c	e58d1000	 str         r1, [sp]

; 408  :     SD_API_STATUS status  = SD_API_STATUS_NO_SUCH_DEVICE;
; 409  :     if (GetHCandSlotbySlotIndex(&pHost,&pSlot,slotIndexWanted) && pSlot!=NULL) {

  00020	e28d2000	 add         r2, sp, #0
  00024	e28d1004	 add         r1, sp, #4
  00028	e3a04123	 mov         r4, #0x23, 2
  0002c	eb000000	 bl          |?GetHCandSlotbySlotIndex@CSDHostContainer@@AAAHPAPAVCSDHost@@PAPAVCSDSlot@@K@Z|
  00030	e3500000	 cmp         r0, #0
  00034	0a000035	 beq         |$LN3@GetSlotPow@2|
  00038	e59d5000	 ldr         r5, [sp]
  0003c	e3550000	 cmp         r5, #0
  00040	0a000032	 beq         |$LN3@GetSlotPow@2|

; 410  :         memset(pPCdata, 0, sizeof(SLOT_POWER_DATA));

  00044	e3a02020	 mov         r2, #0x20
  00048	e3a01000	 mov         r1, #0
  0004c	e1a00007	 mov         r0, r7
  00050	eb000000	 bl          memset

; 411  :         status = pSlot->CheckSlotReady();

  00054	e5953084	 ldr         r3, [r5, #0x84]
  00058	e3530001	 cmp         r3, #1
  0005c	0a000008	 beq         |$LN8@GetSlotPow@2|
  00060	e3530002	 cmp         r3, #2
  00064	0a000006	 beq         |$LN8@GetSlotPow@2|
  00068	e3530006	 cmp         r3, #6
  0006c	0a000004	 beq         |$LN8@GetSlotPow@2|
  00070	e3530003	 cmp         r3, #3
  00074	03a04147	 moveq       r4, #0x47, 2
  00078	0a000002	 beq         |$LN11@GetSlotPow@2|
  0007c	e3a0410f	 mov         r4, #0xF, 2
  00080	ea000000	 b           |$LN11@GetSlotPow@2|
  00084		 |$LN8@GetSlotPow@2|
  00084	e3a04000	 mov         r4, #0
  00088		 |$LN11@GetSlotPow@2|

; 412  :         if (SD_API_SUCCESS(status)) {

  00088	e3540000	 cmp         r4, #0
  0008c	4a00001f	 bmi         |$LN3@GetSlotPow@2|

; 413  :             status = SD_API_STATUS_UNSUCCESSFUL;
; 414  :             CSDDevice *  pDevice = pSlot->GetFunctionDevice(0);// Master Device.

  00090	e3a01000	 mov         r1, #0
  00094	e1a00005	 mov         r0, r5
  00098	e3a0410f	 mov         r4, #0xF, 2
  0009c	eb000000	 bl          |?GetFunctionDevice@CSDSlot@@QAAPAVCSDDevice@@K@Z|
  000a0	e1b06000	 movs        r6, r0

; 415  :             if (pDevice) {

  000a4	0a000019	 beq         |$LN3@GetSlotPow@2|

; 416  :                 if (pDevice->GetCardInfo().SDIOInformation.pCommonInformation!=NULL) {

  000a8	e59634ec	 ldr         r3, [r6, #0x4EC]
  000ac	e3530000	 cmp         r3, #0
  000b0	0a000014	 beq         |$LN2@GetSlotPow@2|

; 417  :                     pPCdata->fCardSupportsPowerControl = pDevice->GetCardInfo().SDIOInformation.pCommonInformation->fCardSupportsPowerControl;  
; 418  :                     pPCdata->fPowerControlEnabled      = pDevice->GetCardInfo().SDIOInformation.pCommonInformation->fPowerControlEnabled;  
; 419  :                     pPCdata->CurrentDrawOfSlot = pSlot->GetSlotPower(); 
; 420  :                     pPCdata->OperatingVoltage = pDevice->GetOperationVoltage();  
; 421  :                     pPCdata->CurrentTupleVoltageRange = SD_MASK_FOR_33V_POWER_CONTROL_TUPLE;

  000b4	e5933014	 ldr         r3, [r3, #0x14]
  000b8	e3a028ff	 mov         r2, #0xFF, 16
  000bc	e3822902	 orr         r2, r2, #2, 18

; 422  :                     pPCdata->NumberOfHighPowerTuples = 1;    // For SDIO 1.1 this is 1
; 423  :                     pPCdata->SizeOfFunctionRecord = sizeof(FUNCTION_POWER_DATA);

  000c0	e5873004	 str         r3, [r7, #4]
  000c4	e59634ec	 ldr         r3, [r6, #0x4EC]
  000c8	e3a01001	 mov         r1, #1
  000cc	e3a0e078	 mov         lr, #0x78

; 424  :                     pPCdata->Functions =(UCHAR) pSlot->GetNumOfFunctionDevice();

  000d0	e5933018	 ldr         r3, [r3, #0x18]
  000d4	e1a00005	 mov         r0, r5
  000d8	e5873008	 str         r3, [r7, #8]
  000dc	e1d53bb0	 ldrh        r3, [r5, #0xB0]
  000e0	e587300c	 str         r3, [r7, #0xC]
  000e4	e59634d0	 ldr         r3, [r6, #0x4D0]
  000e8	e5872014	 str         r2, [r7, #0x14]
  000ec	e5c71018	 strb        r1, [r7, #0x18]
  000f0	e5873010	 str         r3, [r7, #0x10]
  000f4	e587e01c	 str         lr, [r7, #0x1C]
  000f8	eb000000	 bl          |?GetNumOfFunctionDevice@CSDSlot@@QAAKXZ|
  000fc	e1a03000	 mov         r3, r0
  00100	e5c73000	 strb        r3, [r7]

; 425  :                     status = SD_API_STATUS_SUCCESS ;

  00104	e3a04000	 mov         r4, #0
  00108		 |$LN2@GetSlotPow@2|

; 426  :                 }
; 427  :                 pDevice->DeRef();

  00108	e1a00006	 mov         r0, r6
  0010c	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  00110		 |$LN3@GetSlotPow@2|

; 428  :             }
; 429  :         }
; 430  :     }
; 431  :     if (pHost)

  00110	e59d0004	 ldr         r0, [sp, #4]
  00114	e3500000	 cmp         r0, #0

; 432  :         pHost->DeRef();

  00118	1b000000	 blne        |?DeRef@CRefObject@@QAAKXZ|

; 433  : 
; 434  :     return status;
; 435  : }

  0011c	e1a00004	 mov         r0, r4
  00120	e28dd008	 add         sp, sp, #8
  00124	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00128	e12fff1e	 bx          lr
  0012c		 |$M38829|

			 ENDP  ; |?GetSlotPowerControlInfo@CSDHostContainer@@MAAJKPAU_SLOT_POWER_DATA@@@Z|, CSDHostContainer::GetSlotPowerControlInfo

	EXPORT	|?GetFunctionPowerControlInfo@CSDHostContainer@@MAAJKKPAU_FUNCTION_POWER_DATA@@@Z| ; CSDHostContainer::GetFunctionPowerControlInfo
	IMPORT	|?GetFunctionPowerState@CSDDevice@@QAAJPAU_FUNCTION_POWER_STATE@@@Z| ; CSDDevice::GetFunctionPowerState
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sddevice.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T38862| DCD	|$LN18@GetFunctio@3|
	DCD	0x40004102
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetFunctionPowerControlInfo@CSDHostContainer@@MAAJKKPAU_FUNCTION_POWER_DATA@@@Z| PROC ; CSDHostContainer::GetFunctionPowerControlInfo

; 448  : {

  00000		 |$LN18@GetFunctio@3|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M38859|
  00008	e1a06003	 mov         r6, r3
  0000c	e1a03001	 mov         r3, r1
  00010	e1a07002	 mov         r7, r2

; 449  :     CSDHost *pHost = NULL;

  00014	e3a02000	 mov         r2, #0

; 450  :     CSDSlot *pSlot = NULL;

  00018	e3a01000	 mov         r1, #0
  0001c	e58d2004	 str         r2, [sp, #4]
  00020	e58d1000	 str         r1, [sp]

; 451  :     SD_API_STATUS status  = SD_API_STATUS_NO_SUCH_DEVICE;
; 452  :     if (GetHCandSlotbySlotIndex(&pHost,&pSlot,slotIndexWanted) && pSlot!=NULL) {

  00024	e28d2000	 add         r2, sp, #0
  00028	e28d1004	 add         r1, sp, #4
  0002c	e3a04123	 mov         r4, #0x23, 2
  00030	eb000000	 bl          |?GetHCandSlotbySlotIndex@CSDHostContainer@@AAAHPAPAVCSDHost@@PAPAVCSDSlot@@K@Z|
  00034	e3500000	 cmp         r0, #0
  00038	0a00002a	 beq         |$LN2@GetFunctio@3|
  0003c	e59d5000	 ldr         r5, [sp]
  00040	e3550000	 cmp         r5, #0
  00044	0a000027	 beq         |$LN2@GetFunctio@3|

; 453  :         memset(pFPCdata, 0, sizeof(FUNCTION_POWER_DATA));

  00048	e3a02078	 mov         r2, #0x78
  0004c	e3a01000	 mov         r1, #0
  00050	e1a00006	 mov         r0, r6
  00054	eb000000	 bl          memset

; 454  :         status = pSlot->CheckSlotReady();

  00058	e5953084	 ldr         r3, [r5, #0x84]
  0005c	e3530001	 cmp         r3, #1
  00060	0a000008	 beq         |$LN7@GetFunctio@3|
  00064	e3530002	 cmp         r3, #2
  00068	0a000006	 beq         |$LN7@GetFunctio@3|
  0006c	e3530006	 cmp         r3, #6
  00070	0a000004	 beq         |$LN7@GetFunctio@3|
  00074	e3530003	 cmp         r3, #3
  00078	03a04147	 moveq       r4, #0x47, 2
  0007c	0a000002	 beq         |$LN10@GetFunctio@3|
  00080	e3a0410f	 mov         r4, #0xF, 2
  00084	ea000000	 b           |$LN10@GetFunctio@3|
  00088		 |$LN7@GetFunctio@3|
  00088	e3a04000	 mov         r4, #0
  0008c		 |$LN10@GetFunctio@3|

; 455  :         if (SD_API_SUCCESS(status)) {

  0008c	e3540000	 cmp         r4, #0
  00090	4a000014	 bmi         |$LN2@GetFunctio@3|

; 456  :             status = SD_API_STATUS_UNSUCCESSFUL;
; 457  :             CSDDevice *  pDevice = pSlot->GetFunctionDevice(FunctionIndexWanted);// Master Device.

  00094	e1a01007	 mov         r1, r7
  00098	e1a00005	 mov         r0, r5
  0009c	e3a0410f	 mov         r4, #0xF, 2
  000a0	eb000000	 bl          |?GetFunctionDevice@CSDSlot@@QAAPAVCSDDevice@@K@Z|
  000a4	e1b05000	 movs        r5, r0

; 458  :             if (pDevice) {

  000a8	0a00000e	 beq         |$LN2@GetFunctio@3|

; 459  :                 StringCchCopy(pFPCdata->ClientName,_countof(pFPCdata->ClientName), pDevice->GetClientName() );

  000ac	e2852e45	 add         r2, r5, #0x45, 28
  000b0	e3a01020	 mov         r1, #0x20
  000b4	e1a00006	 mov         r0, r6
  000b8	eb000000	 bl          StringCchCopyW

; 460  :                 status = pDevice->GetFunctionPowerState(&pFPCdata->PowerState);

  000bc	e2861040	 add         r1, r6, #0x40
  000c0	e1a00005	 mov         r0, r5
  000c4	eb000000	 bl          |?GetFunctionPowerState@CSDDevice@@QAAJPAU_FUNCTION_POWER_STATE@@@Z|

; 461  :                 pFPCdata->PowerTuples = pDevice->GetCardInfo().SDIOInformation.PowerDrawData;

  000c8	e2853c05	 add         r3, r5, #5, 24
  000cc	e1a04000	 mov         r4, r0
  000d0	e2860064	 add         r0, r6, #0x64
  000d4	e2831012	 add         r1, r3, #0x12
  000d8	e3a02012	 mov         r2, #0x12
  000dc	eb000000	 bl          memcpy

; 462  :                 pDevice->DeRef();

  000e0	e1a00005	 mov         r0, r5
  000e4	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  000e8		 |$LN2@GetFunctio@3|

; 463  :             }
; 464  :         }
; 465  :     }
; 466  :     if (pHost)

  000e8	e59d0004	 ldr         r0, [sp, #4]
  000ec	e3500000	 cmp         r0, #0

; 467  :         pHost->DeRef();

  000f0	1b000000	 blne        |?DeRef@CRefObject@@QAAKXZ|

; 468  :     return status;
; 469  : }

  000f4	e1a00004	 mov         r0, r4
  000f8	e28dd008	 add         sp, sp, #8
  000fc	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00100	e12fff1e	 bx          lr
  00104		 |$M38860|

			 ENDP  ; |?GetFunctionPowerControlInfo@CSDHostContainer@@MAAJKKPAU_FUNCTION_POWER_DATA@@@Z|, CSDHostContainer::GetFunctionPowerControlInfo

	EXPORT	|?SetSlotPowerControl@CSDHostContainer@@MAAJKH@Z| ; CSDHostContainer::SetSlotPowerControl
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T38881| DCD	|$LN9@SetSlotPow@2|
	DCD	0x40001802
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetSlotPowerControl@CSDHostContainer@@MAAJKH@Z| PROC ; CSDHostContainer::SetSlotPowerControl

; 480  : {

  00000		 |$LN9@SetSlotPow@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M38878|
  00008	e1a05002	 mov         r5, r2
  0000c	e1a03001	 mov         r3, r1

; 481  :     CSDHost *pHost = NULL;

  00010	e3a02000	 mov         r2, #0

; 482  :     CSDSlot *pSlot = NULL;

  00014	e3a01000	 mov         r1, #0
  00018	e58d2004	 str         r2, [sp, #4]
  0001c	e58d1000	 str         r1, [sp]

; 483  :     SD_API_STATUS status  = SD_API_STATUS_NO_SUCH_DEVICE;
; 484  :     if (GetHCandSlotbySlotIndex(&pHost,&pSlot,slotIndexWanted) && pSlot!=NULL) {

  00020	e28d2000	 add         r2, sp, #0
  00024	e28d1004	 add         r1, sp, #4
  00028	e3a04123	 mov         r4, #0x23, 2
  0002c	eb000000	 bl          |?GetHCandSlotbySlotIndex@CSDHostContainer@@AAAHPAPAVCSDHost@@PAPAVCSDSlot@@K@Z|
  00030	e3500000	 cmp         r0, #0
  00034	159d3000	 ldrne       r3, [sp]

; 485  :         pSlot->SetSlotPowerControl(fEnablePowerControl);
; 486  :         status = SD_API_STATUS_SUCCESS ;
; 487  :     }
; 488  :     if (pHost)

  00038	e59d0004	 ldr         r0, [sp, #4]
  0003c	13530000	 cmpne       r3, #0
  00040	158350ac	 strne       r5, [r3, #0xAC]
  00044	13a04000	 movne       r4, #0
  00048	e3500000	 cmp         r0, #0

; 489  :         pHost->DeRef();

  0004c	1b000000	 blne        |?DeRef@CRefObject@@QAAKXZ|

; 490  :     return status;
; 491  : }

  00050	e1a00004	 mov         r0, r4
  00054	e28dd008	 add         sp, sp, #8
  00058	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0005c	e12fff1e	 bx          lr
  00060		 |$M38879|

			 ENDP  ; |?SetSlotPowerControl@CSDHostContainer@@MAAJKH@Z|, CSDHostContainer::SetSlotPowerControl

	EXPORT	|?SlotCardSelectDeselect@CSDHostContainer@@MAAHKW4_SD_SLOT_EVENT@@@Z| ; CSDHostContainer::SlotCardSelectDeselect
	IMPORT	|?SlotCardSelectDeselect@CSDSlot@@QAAHW4_SD_SLOT_EVENT@@@Z| ; CSDSlot::SlotCardSelectDeselect

  00000			 AREA	 |.pdata|, PDATA
|$T38896| DCD	|$LN7@SlotCardSe|
	DCD	0x40001b02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SlotCardSelectDeselect@CSDHostContainer@@MAAHKW4_SD_SLOT_EVENT@@@Z| PROC ; CSDHostContainer::SlotCardSelectDeselect

; 500  : {

  00000		 |$LN7@SlotCardSe|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M38893|
  00008	e1a05002	 mov         r5, r2
  0000c	e1a03001	 mov         r3, r1

; 501  :     BOOL    retStatus = FALSE;          // return status
; 502  :     CSDHost *pHost = NULL;

  00010	e3a02000	 mov         r2, #0

; 503  :     CSDSlot *pSlot = NULL;

  00014	e3a01000	 mov         r1, #0
  00018	e58d2004	 str         r2, [sp, #4]
  0001c	e58d1000	 str         r1, [sp]

; 504  :     if (GetHCandSlotbySlotIndex(&pHost,&pSlot,SlotIndexWanted) && pSlot!=NULL) {

  00020	e28d2000	 add         r2, sp, #0
  00024	e28d1004	 add         r1, sp, #4
  00028	e3a04000	 mov         r4, #0
  0002c	eb000000	 bl          |?GetHCandSlotbySlotIndex@CSDHostContainer@@AAAHPAPAVCSDHost@@PAPAVCSDSlot@@K@Z|
  00030	e3500000	 cmp         r0, #0
  00034	0a000005	 beq         |$LN2@SlotCardSe|
  00038	e59d0000	 ldr         r0, [sp]
  0003c	e3500000	 cmp         r0, #0
  00040	0a000002	 beq         |$LN2@SlotCardSe|

; 505  :         retStatus= pSlot->SlotCardSelectDeselect(Event);

  00044	e1a01005	 mov         r1, r5
  00048	eb000000	 bl          |?SlotCardSelectDeselect@CSDSlot@@QAAHW4_SD_SLOT_EVENT@@@Z|
  0004c	e1a04000	 mov         r4, r0
  00050		 |$LN2@SlotCardSe|

; 506  :     }
; 507  :     if (pHost)

  00050	e59d0004	 ldr         r0, [sp, #4]
  00054	e3500000	 cmp         r0, #0

; 508  :         pHost->DeRef();

  00058	1b000000	 blne        |?DeRef@CRefObject@@QAAKXZ|

; 509  : 
; 510  :     return retStatus;
; 511  : }

  0005c	e1a00004	 mov         r0, r4
  00060	e28dd008	 add         sp, sp, #8
  00064	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00068	e12fff1e	 bx          lr
  0006c		 |$M38894|

			 ENDP  ; |?SlotCardSelectDeselect@CSDHostContainer@@MAAHKW4_SD_SLOT_EVENT@@@Z|, CSDHostContainer::SlotCardSelectDeselect

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|?SDC_IOControl@CSDHostContainer@@UAAHKPAEK0KPAK@Z| ; CSDHostContainer::SDC_IOControl
	IMPORT	|SetLastError|
	IMPORT	|__GSHandlerCheck|

  00000			 AREA	 |.pdata|, PDATA
|$T38938| DCD	|$LN56@SDC_IOCont|
	DCD	0xc000bd02

  00000			 AREA	 |.xdata|, DATA
|$T38934| DCD	0xffffffe4
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T38934|

  00008		 |?SDC_IOControl@CSDHostContainer@@UAAHKPAEK0KPAK@Z| PROC ; CSDHostContainer::SDC_IOControl

; 515  : {

  00008		 |$LN56@SDC_IOCont|
  00008	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  0000c	e24dd09c	 sub         sp, sp, #0x9C
  00010		 |$M38935|
  00010	e59fe2e0	 ldr         lr, [pc, #0x2E0]
  00014	e59ee000	 ldr         lr, [lr]
  00018	e58de098	 str         lr, [sp, #0x98]
  0001c	e59d60b4	 ldr         r6, [sp, #0xB4]
  00020	e59d80bc	 ldr         r8, [sp, #0xBC]

; 516  :     DWORD   dwErr = ERROR_SUCCESS;

  00024	e3a05000	 mov         r5, #0

; 517  :     DWORD   cbActualOut = -1; 

  00028	e3e07000	 mvn         r7, #0

; 518  : 
; 519  :     switch (dwCode) {

  0002c	e3510018	 cmp         r1, #0x18
  00030	8a000041	 bhi         |$LN47@SDC_IOCont|
  00034	0a000035	 beq         |$LN12@SDC_IOCont|
  00038	e3510008	 cmp         r1, #8
  0003c	0a000027	 beq         |$LN42@SDC_IOCont|
  00040	e351000c	 cmp         r1, #0xC
  00044	0a00001a	 beq         |$LN39@SDC_IOCont|
  00048	e3510010	 cmp         r1, #0x10
  0004c	0a00000f	 beq         |$LN19@SDC_IOCont|
  00050	e3510014	 cmp         r1, #0x14
  00054	1a00000b	 bne         |$LN15@SDC_IOCont|

; 602  : 
; 603  :        case IOCTL_SD_BUS_DRIVER_SLOT_CARD_RESET:
; 604  :         if (sizeof(DWORD) == dwLenIn && pBufIn) {

  00058	e3530004	 cmp         r3, #4
  0005c	1a000009	 bne         |$LN15@SDC_IOCont|
  00060	e3520000	 cmp         r2, #0
  00064	0a000007	 beq         |$LN15@SDC_IOCont|

; 605  :             DWORD dwSlotIndex = *(PDWORD)pBufIn;
; 606  :             if (!SlotCardSelectDeselect(dwSlotIndex, SlotResetRequest)) {

  00068	e5903000	 ldr         r3, [r0]
  0006c	e5921000	 ldr         r1, [r2]
  00070	e3a02007	 mov         r2, #7
  00074	e5933070	 ldr         r3, [r3, #0x70]
  00078	e1a0e00f	 mov         lr, pc
  0007c	e12fff13	 bx          r3
  00080		 |$LN52@SDC_IOCont|
  00080	e3500000	 cmp         r0, #0
  00084	1a000040	 bne         |$LN2@SDC_IOCont|
  00088		 |$LN15@SDC_IOCont|

; 607  :                 dwErr = ERROR_INVALID_PARAMETER;

  00088	e3a05057	 mov         r5, #0x57

; 608  :             }
; 609  :         }
; 610  :         else {

  0008c	ea000093	 b           |$LN48@SDC_IOCont|
  00090		 |$LN19@SDC_IOCont|

; 585  :                 dwErr = ERROR_INVALID_PARAMETER;
; 586  :             }
; 587  :         }
; 588  :         else {
; 589  :             dwErr = ERROR_INVALID_PARAMETER;
; 590  :         }
; 591  :         break;
; 592  :       case IOCTL_SD_BUS_DRIVER_GET_VERSION:
; 593  :         if (dwLenOut != sizeof(DWORD) && pBufOut) {

  00090	e59d30b8	 ldr         r3, [sp, #0xB8]
  00094	e3530004	 cmp         r3, #4
  00098	0a000001	 beq         |$LN18@SDC_IOCont|
  0009c	e3560000	 cmp         r6, #0

; 594  :             dwErr = ERROR_INVALID_PARAMETER;
; 595  :         } 
; 596  :         else {

  000a0	1afffff8	 bne         |$LN15@SDC_IOCont|
  000a4		 |$LN18@SDC_IOCont|

; 597  :             *(PDWORD)pBufOut = MAKELONG(CE_MINOR_VER, CE_MAJOR_VER);

  000a4	e3a03806	 mov         r3, #6, 16
  000a8	e5863000	 str         r3, [r6]

; 598  :             cbActualOut = sizeof(DWORD);

  000ac	e3a07004	 mov         r7, #4

; 599  :         }
; 600  : 
; 601  :         break;

  000b0	ea000083	 b           |$LN49@SDC_IOCont|
  000b4		 |$LN39@SDC_IOCont|

; 525  :             cbActualOut = sizeof(DWORD);
; 526  :         }
; 527  :         break;
; 528  : 
; 529  :       case IOCTL_SD_BUS_DRIVER_GET_SLOT_INFO:
; 530  :         if (0 == GetSlotInfo((PBUS_DRIVER_SLOT_INFO)pBufOut, dwLenOut)) {

  000b4	e5903000	 ldr         r3, [r0]
  000b8	e59d70b8	 ldr         r7, [sp, #0xB8]
  000bc	e1a01006	 mov         r1, r6
  000c0	e5933060	 ldr         r3, [r3, #0x60]
  000c4	e1a02007	 mov         r2, r7
  000c8	e1a0e00f	 mov         lr, pc
  000cc	e12fff13	 bx          r3
  000d0	e3500000	 cmp         r0, #0
  000d4	1a000078	 bne         |$LN5@SDC_IOCont|

; 607  :                 dwErr = ERROR_INVALID_PARAMETER;

  000d8	e3a05057	 mov         r5, #0x57

; 608  :             }
; 609  :         }
; 610  :         else {

  000dc	ea00007f	 b           |$LN48@SDC_IOCont|
  000e0		 |$LN42@SDC_IOCont|

; 520  :       case IOCTL_SD_BUS_DRIVER_GET_SLOT_COUNT:
; 521  :         if (dwLenOut != sizeof(DWORD)) {

  000e0	e59d30b8	 ldr         r3, [sp, #0xB8]
  000e4	e3530004	 cmp         r3, #4

; 522  :             dwErr = ERROR_INVALID_PARAMETER;
; 523  :         } else {

  000e8	1affffe6	 bne         |$LN15@SDC_IOCont|

; 524  :             *(PDWORD)pBufOut = GetSlotInfo(NULL, 0);

  000ec	e5903000	 ldr         r3, [r0]
  000f0	e3a02000	 mov         r2, #0
  000f4	e3a01000	 mov         r1, #0
  000f8	e5933060	 ldr         r3, [r3, #0x60]
  000fc	e1a0e00f	 mov         lr, pc
  00100	e12fff13	 bx          r3
  00104	e5860000	 str         r0, [r6]

; 598  :             cbActualOut = sizeof(DWORD);

  00108	e3a07004	 mov         r7, #4

; 599  :         }
; 600  : 
; 601  :         break;

  0010c	ea00006c	 b           |$LN49@SDC_IOCont|
  00110		 |$LN12@SDC_IOCont|

; 611  :             dwErr = ERROR_INVALID_PARAMETER;
; 612  :         }
; 613  :         break;
; 614  : 
; 615  :       case IOCTL_SD_BUS_DRIVER_SLOT_CARD_SELECT:
; 616  :         if (sizeof(DWORD) == dwLenIn && pBufIn) {

  00110	e3530004	 cmp         r3, #4
  00114	1affffdb	 bne         |$LN15@SDC_IOCont|
  00118	e3520000	 cmp         r2, #0
  0011c	0affffd9	 beq         |$LN15@SDC_IOCont|

; 617  :             DWORD dwSlotIndex = *(PDWORD)pBufIn;
; 618  :             if (!SlotCardSelectDeselect(dwSlotIndex, SlotSelectRequest)) {

  00120	e5903000	 ldr         r3, [r0]
  00124	e5921000	 ldr         r1, [r2]
  00128	e3a02006	 mov         r2, #6
  0012c	e5933070	 ldr         r3, [r3, #0x70]
  00130	e1a0e00f	 mov         lr, pc
  00134	e12fff13	 bx          r3

; 619  :                 dwErr = ERROR_INVALID_PARAMETER;
; 620  :             }
; 621  :         }
; 622  :         else {

  00138	eaffffd0	 b           |$LN52@SDC_IOCont|
  0013c		 |$LN47@SDC_IOCont|

; 518  : 
; 519  :     switch (dwCode) {

  0013c	e351001c	 cmp         r1, #0x1C
  00140	0a000051	 beq         |$LN8@SDC_IOCont|
  00144	e3510020	 cmp         r1, #0x20
  00148	0a000020	 beq         |$LN36@SDC_IOCont|
  0014c	e3510024	 cmp         r1, #0x24
  00150	0a000013	 beq         |$LN27@SDC_IOCont|
  00154	e3510028	 cmp         r1, #0x28

; 636  :         }
; 637  :         break;
; 638  :  
; 639  :       default:
; 640  :         dwErr = ERROR_INVALID_PARAMETER;
; 641  :         break;

  00158	1affffca	 bne         |$LN15@SDC_IOCont|

; 577  :             dwErr = ERROR_INVALID_PARAMETER;
; 578  :         }
; 579  : 
; 580  :         break;
; 581  :       case IOCTL_SD_BUS_DRIVER_ENABLE_SLOT_POWER_CONTROL:
; 582  :         if (sizeof(DWORD) == dwLenIn && pBufIn!=NULL ) {

  0015c	e3530004	 cmp         r3, #4
  00160	1affffc8	 bne         |$LN15@SDC_IOCont|
  00164	e3520000	 cmp         r2, #0
  00168	0affffc6	 beq         |$LN15@SDC_IOCont|

; 583  :             DWORD dwSlotIndex = *(PDWORD)pBufIn;
; 584  :             if (!SD_API_SUCCESS(SetSlotPowerControl(dwSlotIndex, TRUE))) {

  0016c	e5903000	 ldr         r3, [r0]
  00170	e5921000	 ldr         r1, [r2]
  00174	e3a02001	 mov         r2, #1
  00178	e593306c	 ldr         r3, [r3, #0x6C]
  0017c	e1a0e00f	 mov         lr, pc
  00180	e12fff13	 bx          r3
  00184		 |$LN53@SDC_IOCont|
  00184	e3500000	 cmp         r0, #0
  00188	4affffbe	 bmi         |$LN15@SDC_IOCont|
  0018c		 |$LN2@SDC_IOCont|

; 652  :     }
; 653  :     else
; 654  :         return TRUE;

  0018c	e59d0098	 ldr         r0, [sp, #0x98]
  00190	eb000000	 bl          __security_check_cookie
  00194	e3a00001	 mov         r0, #1
  00198		 |$LN1@SDC_IOCont|

; 655  : }

  00198	e28dd09c	 add         sp, sp, #0x9C
  0019c	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  001a0	e12fff1e	 bx          lr
  001a4		 |$LN27@SDC_IOCont|

; 561  :                 dwErr = ERROR_GEN_FAILURE;
; 562  :             }
; 563  :         }
; 564  :         else {
; 565  :             dwErr = ERROR_INVALID_PARAMETER;
; 566  :         }
; 567  : 
; 568  :         break;
; 569  :       case IOCTL_SD_BUS_DRIVER_DISABLE_SLOT_POWER_CONTROL:
; 570  :         if(sizeof(DWORD) == dwLenIn && pBufIn!=NULL){

  001a4	e3530004	 cmp         r3, #4
  001a8	1affffb6	 bne         |$LN15@SDC_IOCont|
  001ac	e3520000	 cmp         r2, #0
  001b0	0affffb4	 beq         |$LN15@SDC_IOCont|

; 571  :             DWORD dwSlotIndex = *(PDWORD)pBufIn;
; 572  :             if (!SD_API_SUCCESS(SetSlotPowerControl(dwSlotIndex, FALSE))) {

  001b4	e5903000	 ldr         r3, [r0]
  001b8	e5921000	 ldr         r1, [r2]
  001bc	e3a02000	 mov         r2, #0
  001c0	e593306c	 ldr         r3, [r3, #0x6C]
  001c4	e1a0e00f	 mov         lr, pc
  001c8	e12fff13	 bx          r3

; 573  :                 dwErr = ERROR_INVALID_PARAMETER;
; 574  :             }
; 575  :         }
; 576  :         else {

  001cc	eaffffec	 b           |$LN53@SDC_IOCont|
  001d0		 |$LN36@SDC_IOCont|

; 531  :             dwErr = ERROR_INVALID_PARAMETER;
; 532  :         } else {
; 533  :             cbActualOut = dwLenOut;
; 534  :         }
; 535  :         break;
; 536  :       case IOCTL_SD_BUS_DRIVER_GET_SLOT_POWER_CONTROL:
; 537  :         if ((sizeof(DWORD) == dwLenIn) && pBufIn!=NULL &&
; 538  :                 (sizeof(SLOT_POWER_DATA) == dwLenOut) && pBufOut!=NULL) {

  001d0	e3530004	 cmp         r3, #4
  001d4	1a000016	 bne         |$LN35@SDC_IOCont|
  001d8	e3520000	 cmp         r2, #0
  001dc	0affffa9	 beq         |$LN15@SDC_IOCont|
  001e0	e59d30b8	 ldr         r3, [sp, #0xB8]
  001e4	e3530020	 cmp         r3, #0x20
  001e8	1affffa6	 bne         |$LN15@SDC_IOCont|
  001ec	e3560000	 cmp         r6, #0
  001f0	0affffa4	 beq         |$LN15@SDC_IOCont|

; 539  :             DWORD dwSlotIndex = *(PDWORD)pBufIn;
; 540  :             SLOT_POWER_DATA slotPowerData;
; 541  :             cbActualOut = sizeof(slotPowerData);
; 542  :             SD_API_STATUS status = GetSlotPowerControlInfo(dwSlotIndex,&slotPowerData);
; 543  :             if (SD_API_SUCCESS(status)) {

  001f4	e5903000	 ldr         r3, [r0]
  001f8	e5921000	 ldr         r1, [r2]
  001fc	e28d2000	 add         r2, sp, #0
  00200	e5933064	 ldr         r3, [r3, #0x64]
  00204	e3a07020	 mov         r7, #0x20
  00208	e1a0e00f	 mov         lr, pc
  0020c	e12fff13	 bx          r3
  00210	e3500000	 cmp         r0, #0
  00214	4a000004	 bmi         |$LN34@SDC_IOCont|

; 544  :                 *(PSLOT_POWER_DATA)pBufOut = slotPowerData;

  00218	e28d1000	 add         r1, sp, #0
  0021c	e3a02020	 mov         r2, #0x20
  00220		 |$LN51@SDC_IOCont|
  00220	e1a00006	 mov         r0, r6
  00224	eb000000	 bl          memcpy

; 545  :             }
; 546  :             else {

  00228	ea000025	 b           |$LN49@SDC_IOCont|
  0022c		 |$LN34@SDC_IOCont|

; 547  :                 dwErr = ERROR_GEN_FAILURE;

  0022c	e3a0501f	 mov         r5, #0x1F

; 548  :             }
; 549  :         }
; 550  :         else if ( (sizeof(BUS_DRIVER_IN_SLOT_FUNCTION_POWER) == dwLenIn) && pBufIn!=NULL  &&

  00230	ea000023	 b           |$LN49@SDC_IOCont|
  00234		 |$LN35@SDC_IOCont|

; 551  :                   (sizeof(FUNCTION_POWER_DATA) == dwLenOut)&& pBufOut!=NULL ){

  00234	e3530008	 cmp         r3, #8
  00238	1affff92	 bne         |$LN15@SDC_IOCont|
  0023c	e3520000	 cmp         r2, #0
  00240	0affff90	 beq         |$LN15@SDC_IOCont|
  00244	e59d30b8	 ldr         r3, [sp, #0xB8]
  00248	e3530078	 cmp         r3, #0x78
  0024c	1affff8d	 bne         |$LN15@SDC_IOCont|
  00250	e3560000	 cmp         r6, #0
  00254	0affff8b	 beq         |$LN15@SDC_IOCont|

; 552  :             BUS_DRIVER_IN_SLOT_FUNCTION_POWER FuncPowerIn = *(BUS_DRIVER_IN_SLOT_FUNCTION_POWER *)pBufIn ;
; 553  :             FUNCTION_POWER_DATA FuncPowerData;
; 554  :             cbActualOut = sizeof(FuncPowerData);
; 555  :             SD_API_STATUS status = GetFunctionPowerControlInfo(
; 556  :                 FuncPowerIn.SlotIndex, FuncPowerIn.FunctionNumber, &FuncPowerData);
; 557  :             if ( SD_API_SUCCESS(status)) {

  00258	e5903000	 ldr         r3, [r0]
  0025c	e5921000	 ldr         r1, [r2]
  00260	e5922004	 ldr         r2, [r2, #4]
  00264	e5934068	 ldr         r4, [r3, #0x68]
  00268	e28d3020	 add         r3, sp, #0x20
  0026c	e3a07078	 mov         r7, #0x78
  00270	e1a0e00f	 mov         lr, pc
  00274	e12fff14	 bx          r4
  00278	e3500000	 cmp         r0, #0
  0027c	4affffea	 bmi         |$LN34@SDC_IOCont|

; 558  :                 *(PFUNCTION_POWER_DATA)pBufOut = FuncPowerData;

  00280	e28d1020	 add         r1, sp, #0x20
  00284	e3a02078	 mov         r2, #0x78

; 559  :             }
; 560  :             else {

  00288	eaffffe4	 b           |$LN51@SDC_IOCont|
  0028c		 |$LN8@SDC_IOCont|

; 623  :             dwErr = ERROR_INVALID_PARAMETER;
; 624  :         }
; 625  :         break;
; 626  :         
; 627  :       case IOCTL_SD_BUS_DRIVER_SLOT_CARD_DESELECT:
; 628  :         if (sizeof(DWORD) == dwLenIn && pBufIn) {

  0028c	e3530004	 cmp         r3, #4
  00290	1a000008	 bne         |$LN7@SDC_IOCont|
  00294	e3520000	 cmp         r2, #0
  00298	0a000006	 beq         |$LN7@SDC_IOCont|

; 629  :             DWORD dwSlotIndex = *(PDWORD)pBufIn;
; 630  :             if (!SlotCardSelectDeselect(dwSlotIndex, SlotDeselectRequest)) {

  0029c	e5903000	 ldr         r3, [r0]
  002a0	e5921000	 ldr         r1, [r2]
  002a4	e3a02005	 mov         r2, #5
  002a8	e5933070	 ldr         r3, [r3, #0x70]
  002ac	e1a0e00f	 mov         lr, pc
  002b0	e12fff13	 bx          r3

; 631  :                 dwErr = ERROR_INVALID_PARAMETER;
; 632  :             }
; 633  :         }
; 634  :         else {

  002b4	eaffff71	 b           |$LN52@SDC_IOCont|
  002b8		 |$LN7@SDC_IOCont|

; 635  :             dwErr = ERROR_INVALID_PARAMETER;

  002b8	e3a05057	 mov         r5, #0x57
  002bc		 |$LN5@SDC_IOCont|

; 642  :     }
; 643  : 
; 644  :     if (cbActualOut != -1 && pdwActualOut && dwErr == ERROR_SUCCESS) {

  002bc	e3770001	 cmn         r7, #1
  002c0	0a000004	 beq         |$LN3@SDC_IOCont|
  002c4		 |$LN49@SDC_IOCont|
  002c4	e3580000	 cmp         r8, #0
  002c8	0a000002	 beq         |$LN3@SDC_IOCont|
  002cc	e3550000	 cmp         r5, #0
  002d0	1a000002	 bne         |$LN48@SDC_IOCont|

; 645  :         *pdwActualOut = cbActualOut;

  002d4	e5887000	 str         r7, [r8]
  002d8		 |$LN3@SDC_IOCont|

; 646  :     }
; 647  : 
; 648  :     DEBUGMSG(SDCARD_ZONE_FUNC, (TEXT("SDBusDriver: -SDC_IOControl 0x%X\n"), dwErr));
; 649  :     if (dwErr != ERROR_SUCCESS) {

  002d8	e3550000	 cmp         r5, #0
  002dc	0affffaa	 beq         |$LN2@SDC_IOCont|
  002e0		 |$LN48@SDC_IOCont|

; 650  :         SetLastError(dwErr);

  002e0	e1a00005	 mov         r0, r5
  002e4	eb000000	 bl          SetLastError

; 651  :         return FALSE;

  002e8	e59d0098	 ldr         r0, [sp, #0x98]
  002ec	eb000000	 bl          __security_check_cookie
  002f0	e3a00000	 mov         r0, #0
  002f4	eaffffa7	 b           |$LN1@SDC_IOCont|
  002f8		 |$LN57@SDC_IOCont|
  002f8		 |$LN58@SDC_IOCont|
  002f8	00000000	 DCD         |__security_cookie|
  002fc		 |$M38936|

			 ENDP  ; |?SDC_IOControl@CSDHostContainer@@UAAHKPAEK0KPAK@Z|, CSDHostContainer::SDC_IOControl

	EXPORT	|?FreeBusRequestImp@CSDHostContainer@@AAAXPAVCSDBusRequest@@@Z| ; CSDHostContainer::FreeBusRequestImp
	IMPORT	|free|
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T38965| DCD	|$LN18@FreeBusReq|
	DCD	0x40001a01
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?FreeBusRequestImp@CSDHostContainer@@AAAXPAVCSDBusRequest@@@Z| PROC ; CSDHostContainer::FreeBusRequestImp

; 1042 : {

  00000		 |$LN18@FreeBusReq|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M38962|
  00004	e1b05001	 movs        r5, r1
  00008	e1a04000	 mov         r4, r0

; 1043 :     if (pBusRequest) {

  0000c	0a000012	 beq         |$LN14@FreeBusReq|

; 1044 :         ((CStaticContainer *)this)->Lock();

  00010	e3540000	 cmp         r4, #0
  00014	1284002c	 addne       r0, r4, #0x2C
  00018	03a00000	 moveq       r0, #0
  0001c	eb000000	 bl          EnterCriticalSection

; 1045 :         PFREE_BUS_REQUEST_SPACE pBusRequestFreeSpace = (PFREE_BUS_REQUEST_SPACE)pBusRequest;
; 1046 :         pBusRequestFreeSpace -- ; // move back to the header.

  00020	e2450010	 sub         r0, r5, #0x10

; 1047 :         if (pBusRequestFreeSpace->dwFreeSpaceTag== BUS_REQUEST_FREE_SPACE_TAG) {

  00024	e5902004	 ldr         r2, [r0, #4]
  00028	e59f3034	 ldr         r3, [pc, #0x34]
  0002c	e1520003	 cmp         r2, r3

; 1048 :             if (pBusRequestFreeSpace->dwSpaceSize != m_dwMinSize) { // Size has chnaged. So delete it directory.

  00030	05902008	 ldreq       r2, [r0, #8]
  00034	059430ac	 ldreq       r3, [r4, #0xAC]
  00038	01520003	 cmpeq       r2, r3

; 1049 :                 DEBUGMSG(SDCARD_ZONE_WARN,(L"free space because size changed.%x ",pBusRequestFreeSpace) );
; 1050 :                 free(pBusRequestFreeSpace);
; 1051 :             }
; 1052 :             else {
; 1053 :                 pBusRequestFreeSpace->pNextFreeTransfer = m_pFreeBusRequestSpace;

  0003c	059430a8	 ldreq       r3, [r4, #0xA8]
  00040	05803000	 streq       r3, [r0]

; 1054 :                 m_pFreeBusRequestSpace = pBusRequestFreeSpace;

  00044	058400a8	 streq       r0, [r4, #0xA8]

; 1055 :             }
; 1056 :         }
; 1057 :         else {// trashed point. Do know what to do except free it direct free it
; 1058 :             ASSERT(FALSE);
; 1059 :             DEBUGMSG(SDCARD_ZONE_ERROR,(L"DeleteTransfer detect garbage pointer %x ",pBusRequestFreeSpace) );
; 1060 :             free(pBusRequestFreeSpace);

  00048	1b000000	 blne        free

; 1061 :         }
; 1062 :         ((CStaticContainer *)this)->Unlock();

  0004c	e3540000	 cmp         r4, #0
  00050	1284002c	 addne       r0, r4, #0x2C
  00054	03a00000	 moveq       r0, #0
  00058	eb000000	 bl          LeaveCriticalSection
  0005c		 |$LN14@FreeBusReq|

; 1063 :     }
; 1064 : }

  0005c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$LN19@FreeBusReq|
  00064		 |$LN20@FreeBusReq|
  00064	daada5cc	 DCD         0xdaada5cc
  00068		 |$M38963|

			 ENDP  ; |?FreeBusRequestImp@CSDHostContainer@@AAAXPAVCSDBusRequest@@@Z|, CSDHostContainer::FreeBusRequestImp

	EXPORT	|?FreeBusRequest@CSDHostContainer@@SAXPAVCSDBusRequest@@@Z| ; CSDHostContainer::FreeBusRequest

  00000			 AREA	 |.pdata|, PDATA
|$T38975| DCD	|$LN8@FreeBusReq@2|
	DCD	0x40001101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?FreeBusRequest@CSDHostContainer@@SAXPAVCSDBusRequest@@@Z| PROC ; CSDHostContainer::FreeBusRequest

; 1066 : {

  00000		 |$LN8@FreeBusReq@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M38972|
  00004	e3500000	 cmp         r0, #0

; 1067 :     if (pBusRequest) {

  00008	0a00000a	 beq         |$LN1@FreeBusReq@2|

; 1068 :         if (g_pSdContainer != NULL ) {

  0000c	e59f302c	 ldr         r3, [pc, #0x2C]
  00010	e5933000	 ldr         r3, [r3]
  00014	e3530000	 cmp         r3, #0
  00018	0a000004	 beq         |$LN2@FreeBusReq@2|

; 1069 :             g_pSdContainer->FreeBusRequestImp(pBusRequest);

  0001c	e1a01000	 mov         r1, r0
  00020	e1a00003	 mov         r0, r3
  00024	eb000000	 bl          |?FreeBusRequestImp@CSDHostContainer@@AAAXPAVCSDBusRequest@@@Z|

; 1075 :         }
; 1076 :     }
; 1077 :     
; 1078 : }

  00028	e49de004	 ldr         lr, [sp], #4
  0002c	e12fff1e	 bx          lr
  00030		 |$LN2@FreeBusReq@2|

; 1070 :         }
; 1071 :         else { // this is best we can do.
; 1072 :             PFREE_BUS_REQUEST_SPACE pBusRequestFreeSpace = (PFREE_BUS_REQUEST_SPACE)pBusRequest;
; 1073 :             pBusRequestFreeSpace -- ; // move back to the header.

  00030	e2400010	 sub         r0, r0, #0x10

; 1074 :             free(pBusRequestFreeSpace);

  00034	eb000000	 bl          free
  00038		 |$LN1@FreeBusReq@2|

; 1075 :         }
; 1076 :     }
; 1077 :     
; 1078 : }

  00038	e49de004	 ldr         lr, [sp], #4
  0003c	e12fff1e	 bx          lr
  00040		 |$LN9@FreeBusReq@2|
  00040		 |$LN10@FreeBusReq@2|
  00040	00000000	 DCD         |?g_pSdContainer@CSDHostContainer@@0PAV1@A|
  00044		 |$M38973|

			 ENDP  ; |?FreeBusRequest@CSDHostContainer@@SAXPAVCSDBusRequest@@@Z|, CSDHostContainer::FreeBusRequest

	EXPORT	|?DeleteAllTransferSpace@CSDHostContainer@@AAAXXZ| ; CSDHostContainer::DeleteAllTransferSpace
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T39004| DCD	|$LN19@DeleteAllT|
	DCD	0x40001501
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DeleteAllTransferSpace@CSDHostContainer@@AAAXXZ| PROC ; CSDHostContainer::DeleteAllTransferSpace

; 1080 : {

  00000		 |$LN19@DeleteAllT|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M39001|
  00004	e1b05000	 movs        r5, r0

; 1081 :     ((CStaticContainer *)this)->Lock();

  00008	0a000002	 beq         |$LN5@DeleteAllT|
  0000c	e285002c	 add         r0, r5, #0x2C
  00010	eb000000	 bl          EnterCriticalSection

; 1082 :     while (m_pFreeBusRequestSpace) {

  00014	ea000007	 b           |$LN16@DeleteAllT|
  00018		 |$LN5@DeleteAllT|

; 1081 :     ((CStaticContainer *)this)->Lock();

  00018	e3a00000	 mov         r0, #0
  0001c	eb000000	 bl          EnterCriticalSection

; 1082 :     while (m_pFreeBusRequestSpace) {

  00020	ea000004	 b           |$LN16@DeleteAllT|
  00024		 |$LL2@DeleteAllT|

; 1083 :         PFREE_BUS_REQUEST_SPACE pRequestNextFreeSpace = m_pFreeBusRequestSpace->pNextFreeTransfer;

  00024	e59530a8	 ldr         r3, [r5, #0xA8]

; 1084 :         free(m_pFreeBusRequestSpace);

  00028	e5934000	 ldr         r4, [r3]
  0002c	e1a00003	 mov         r0, r3
  00030	eb000000	 bl          free

; 1085 :         m_pFreeBusRequestSpace = pRequestNextFreeSpace;

  00034	e58540a8	 str         r4, [r5, #0xA8]
  00038		 |$LN16@DeleteAllT|
  00038	e59530a8	 ldr         r3, [r5, #0xA8]
  0003c	e3530000	 cmp         r3, #0
  00040	1afffff7	 bne         |$LL2@DeleteAllT|

; 1086 :     }
; 1087 :     ((CStaticContainer *)this)->Unlock();

  00044	e285002c	 add         r0, r5, #0x2C
  00048	eb000000	 bl          LeaveCriticalSection

; 1088 : }

  0004c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$M39002|

			 ENDP  ; |?DeleteAllTransferSpace@CSDHostContainer@@AAAXXZ|, CSDHostContainer::DeleteAllTransferSpace

	EXPORT	|?DriverDeInit@CSDHostContainer@@SAXPAX@Z| ; CSDHostContainer::DriverDeInit

  00000			 AREA	 |.pdata|, PDATA
|$T39016| DCD	|$LN9@DriverDeIn|
	DCD	0x40001201
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DriverDeInit@CSDHostContainer@@SAXPAX@Z| PROC ; CSDHostContainer::DriverDeInit

; 1107 : {

  00000		 |$LN9@DriverDeIn|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M39013|
  00004	e1a03000	 mov         r3, r0

; 1108 :     if (g_pSdContainer && g_pSdContainer == pContent ) {

  00008	e59f4034	 ldr         r4, [pc, #0x34]
  0000c	e5940000	 ldr         r0, [r4]
  00010	e3500000	 cmp         r0, #0
  00014	0a000008	 beq         |$LN2@DriverDeIn|
  00018	e1500003	 cmp         r0, r3
  0001c	1a000006	 bne         |$LN2@DriverDeIn|

; 1109 :         delete g_pSdContainer;

  00020	e5903000	 ldr         r3, [r0]
  00024	e3a01001	 mov         r1, #1
  00028	e5933008	 ldr         r3, [r3, #8]
  0002c	e1a0e00f	 mov         lr, pc
  00030	e12fff13	 bx          r3

; 1110 :         g_pSdContainer = NULL;

  00034	e3a03000	 mov         r3, #0
  00038	e5843000	 str         r3, [r4]
  0003c		 |$LN2@DriverDeIn|

; 1111 :     }
; 1112 :     else 
; 1113 :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDBusDriver: DeInit called with wrong content\n")));
; 1114 : };

  0003c	e8bd4010	 ldmia       sp!, {r4, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$LN10@DriverDeIn|
  00044		 |$LN11@DriverDeIn|
  00044	00000000	 DCD         |?g_pSdContainer@CSDHostContainer@@0PAV1@A|
  00048		 |$M39014|

			 ENDP  ; |?DriverDeInit@CSDHostContainer@@SAXPAX@Z|, CSDHostContainer::DriverDeInit

	EXPORT	|?RegValueDWORD@CSDHostContainer@@SAKPAGK@Z| ; CSDHostContainer::RegValueDWORD
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T39034| DCD	|$LN10@RegValueDW|
	DCD	0x40001402
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RegValueDWORD@CSDHostContainer@@SAKPAGK@Z| PROC ; CSDHostContainer::RegValueDWORD

; 1116 : {

  00000		 |$LN10@RegValueDW|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M39031|
  00008	e1a04001	 mov         r4, r1

; 1117 :     DWORD dwReturn = dwDefault;
; 1118 :     if (g_pSdContainer ) {

  0000c	e59f3038	 ldr         r3, [pc, #0x38]
  00010	e58d4000	 str         r4, [sp]
  00014	e593e000	 ldr         lr, [r3]
  00018	e35e0000	 cmp         lr, #0
  0001c	0a000006	 beq         |$LN1@RegValueDW|

; 1119 :         if (!g_pSdContainer->GetDeviceKey().GetRegValue(lpRegName,(LPBYTE)&dwReturn,  sizeof(dwReturn))) {

  00020	e1a01000	 mov         r1, r0
  00024	e28e00a4	 add         r0, lr, #0xA4
  00028	e3a03004	 mov         r3, #4
  0002c	e28d2000	 add         r2, sp, #0
  00030	eb000000	 bl          |?GetRegValue@CRegistryEdit@@QAAHPBGPAEK@Z|
  00034	e3500000	 cmp         r0, #0

; 1120 :             dwReturn = dwDefault;

  00038	159d4000	 ldrne       r4, [sp]
  0003c		 |$LN1@RegValueDW|

; 1121 :         }
; 1122 :     }
; 1123 :     return dwReturn;
; 1124 : }

  0003c	e1a00004	 mov         r0, r4
  00040	e28dd004	 add         sp, sp, #4
  00044	e8bd4010	 ldmia       sp!, {r4, lr}
  00048	e12fff1e	 bx          lr
  0004c		 |$LN11@RegValueDW|
  0004c		 |$LN12@RegValueDW|
  0004c	00000000	 DCD         |?g_pSdContainer@CSDHostContainer@@0PAV1@A|
  00050		 |$M39032|

			 ENDP  ; |?RegValueDWORD@CSDHostContainer@@SAKPAGK@Z|, CSDHostContainer::RegValueDWORD

	EXPORT	|?GetSubBusNamePrefix@CSDHostContainer@@QAAPBGXZ| ; CSDHostContainer::GetSubBusNamePrefix
	EXPORT	|??_C@_1M@BBEDEACG@?$AAS?$AAD?$AAB?$AAu?$AAs?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T39046| DCD	|$LN7@GetSubBusN|
	DCD	0x40000600

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1M@BBEDEACG@?$AAS?$AAD?$AAB?$AAu?$AAs?$AA?$AA@| DCB "S", 0x0, "D", 0x0
	DCB	"B", 0x0, "u", 0x0, "s", 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetSubBusNamePrefix@CSDHostContainer@@QAAPBGXZ| PROC ; CSDHostContainer::GetSubBusNamePrefix

; 1127 : {

  00000		 |$LN7@GetSubBusN|
  00000		 |$M39043|

; 1128 :     if (m_szSubBusNamePrefix[0])

  00000	e1d038b4	 ldrh        r3, [r0, #0x84]
  00004	e3530000	 cmp         r3, #0

; 1129 :         return m_szSubBusNamePrefix;

  00008	12800084	 addne       r0, r0, #0x84

; 1130 :     else
; 1131 :         return SD_SUB_BUSNAME_DEFAULT;

  0000c	059f0000	 ldreq       r0, [pc]

; 1132 : }

  00010	e12fff1e	 bx          lr
  00014		 |$LN8@GetSubBusN|
  00014		 |$LN9@GetSubBusN|
  00014	00000000	 DCD         |??_C@_1M@BBEDEACG@?$AAS?$AAD?$AAB?$AAu?$AAs?$AA?$AA@|
  00018		 |$M39044|

			 ENDP  ; |?GetSubBusNamePrefix@CSDHostContainer@@QAAPBGXZ|, CSDHostContainer::GetSubBusNamePrefix

	EXPORT	|??0?$CStaticContainer@VCSDHost@@$0BA@@@QAA@XZ| ; CStaticContainer<CSDHost,16>::CStaticContainer<CSDHost,16>
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T39064| DCD	|$LN12@CStaticCon|
	DCD	0x40001101
; Function compile flags: /Ogspy
; File c:\wince600\public\common\oak\inc\crefcon.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0?$CStaticContainer@VCSDHost@@$0BA@@@QAA@XZ| PROC ; CStaticContainer<CSDHost,16>::CStaticContainer<CSDHost,16>

; 64   :     CStaticContainer()

  00000		 |$LN12@CStaticCon|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M39061|
  00004	e1a04000	 mov         r4, r0
  00008	eb000000	 bl          InitializeCriticalSection

; 65   :     {
; 66   :         m_dwArraySize = dwNumArray;

  0000c	e3a03010	 mov         r3, #0x10
  00010	e5843054	 str         r3, [r4, #0x54]

; 67   :         for( DWORD dwIndex = 0; dwIndex < m_dwArraySize; dwIndex++ )

  00014	e3a02000	 mov         r2, #0
  00018	e1a01004	 mov         r1, r4
  0001c	e3a00000	 mov         r0, #0
  00020		 |$LL3@CStaticCon|

; 68   :         {
; 69   :             m_rgObjectArray[dwIndex] = NULL;

  00020	e5810014	 str         r0, [r1, #0x14]
  00024	e5943054	 ldr         r3, [r4, #0x54]
  00028	e2822001	 add         r2, r2, #1
  0002c	e2811004	 add         r1, r1, #4
  00030	e1520003	 cmp         r2, r3
  00034	3afffff9	 bcc         |$LL3@CStaticCon|

; 70   :         }
; 71   :     }

  00038	e1a00004	 mov         r0, r4
  0003c	e8bd4010	 ldmia       sp!, {r4, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M39062|

			 ENDP  ; |??0?$CStaticContainer@VCSDHost@@$0BA@@@QAA@XZ|, CStaticContainer<CSDHost,16>::CStaticContainer<CSDHost,16>

	EXPORT	|??1?$CStaticContainer@VCSDHost@@$0BA@@@QAA@XZ| ; CStaticContainer<CSDHost,16>::~CStaticContainer<CSDHost,16>
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T39089| DCD	|$LN19@CStaticCon@2|
	DCD	0x40001a01
; Function compile flags: /Ogspy
; File c:\wince600\public\common\oak\inc\crefcon.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1?$CStaticContainer@VCSDHost@@$0BA@@@QAA@XZ| PROC ; CStaticContainer<CSDHost,16>::~CStaticContainer<CSDHost,16>

; 73   :     {

  00000		 |$LN19@CStaticCon@2|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M39086|
  00004	e1a04000	 mov         r4, r0

; 74   :         Lock();

  00008	eb000000	 bl          EnterCriticalSection

; 75   :         for( DWORD dwIndex = 0; dwIndex < m_dwArraySize; dwIndex++ )

  0000c	e5943054	 ldr         r3, [r4, #0x54]
  00010	e3a06000	 mov         r6, #0
  00014	e3530000	 cmp         r3, #0
  00018	9a00000c	 bls         |$LN2@CStaticCon@2|

; 74   :         Lock();

  0001c	e1a05004	 mov         r5, r4
  00020		 |$LL4@CStaticCon@2|

; 76   :         {
; 77   :             if( m_rgObjectArray[dwIndex] != NULL )

  00020	e5953014	 ldr         r3, [r5, #0x14]
  00024	e1b00003	 movs        r0, r3

; 78   :             {
; 79   :                 delete m_rgObjectArray[dwIndex];

  00028	15903000	 ldrne       r3, [r0]
  0002c	13a01001	 movne       r1, #1
  00030	15933000	 ldrne       r3, [r3]
  00034	11a0e00f	 movne       lr, pc
  00038	112fff13	 bxne        r3
  0003c	e5943054	 ldr         r3, [r4, #0x54]
  00040	e2866001	 add         r6, r6, #1
  00044	e2855004	 add         r5, r5, #4
  00048	e1560003	 cmp         r6, r3
  0004c	3afffff3	 bcc         |$LL4@CStaticCon@2|
  00050		 |$LN2@CStaticCon@2|

; 80   :             }
; 81   :         };
; 82   :         Unlock();

  00050	e1a00004	 mov         r0, r4
  00054	eb000000	 bl          LeaveCriticalSection

; 83   :     }

  00058	e1a00004	 mov         r0, r4
  0005c	eb000000	 bl          DeleteCriticalSection
  00060	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00064	e12fff1e	 bx          lr
  00068		 |$M39087|

			 ENDP  ; |??1?$CStaticContainer@VCSDHost@@$0BA@@@QAA@XZ|, CStaticContainer<CSDHost,16>::~CStaticContainer<CSDHost,16>

	EXPORT	|?ObjectIndex@?$CStaticContainer@VCSDHost@@$0BA@@@QAAPAVCSDHost@@K@Z| ; CStaticContainer<CSDHost,16>::ObjectIndex
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T39112| DCD	|$LN14@ObjectInde|
	DCD	0x40001101
; Function compile flags: /Ogspy
; File c:\wince600\public\common\oak\inc\crefcon.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ObjectIndex@?$CStaticContainer@VCSDHost@@$0BA@@@QAAPAVCSDHost@@K@Z| PROC ; CStaticContainer<CSDHost,16>::ObjectIndex

; 105  :     {

  00000		 |$LN14@ObjectInde|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M39109|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0

; 106  :         Lock();

  0000c	eb000000	 bl          EnterCriticalSection

; 107  :         T*  pReturn = dwIndex <
; 108  :                       m_dwArraySize ?
; 109  :                       m_rgObjectArray[dwIndex] :
; 110  :                       NULL;

  00010	e5953054	 ldr         r3, [r5, #0x54]
  00014	e1540003	 cmp         r4, r3
  00018	30853104	 addcc       r3, r5, r4, lsl #2
  0001c	35934014	 ldrcc       r4, [r3, #0x14]
  00020	23a04000	 movcs       r4, #0

; 111  :         if( pReturn )

  00024	e3540000	 cmp         r4, #0

; 112  :         {
; 113  :             pReturn->AddRef();

  00028	12840004	 addne       r0, r4, #4
  0002c	1b000000	 blne        InterlockedIncrement

; 114  :         }
; 115  :         Unlock();

  00030	e1a00005	 mov         r0, r5
  00034	eb000000	 bl          LeaveCriticalSection

; 116  :         return pReturn;
; 117  :     }

  00038	e1a00004	 mov         r0, r4
  0003c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M39110|

			 ENDP  ; |?ObjectIndex@?$CStaticContainer@VCSDHost@@$0BA@@@QAAPAVCSDHost@@K@Z|, CStaticContainer<CSDHost,16>::ObjectIndex

	EXPORT	|?RemoveObjectBy@?$CStaticContainer@VCSDHost@@$0BA@@@QAAPAVCSDHost@@K@Z| ; CStaticContainer<CSDHost,16>::RemoveObjectBy
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T39130| DCD	|$LN11@RemoveObje|
	DCD	0x40001301
; Function compile flags: /Ogspy
; File c:\wince600\public\common\oak\inc\crefcon.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RemoveObjectBy@?$CStaticContainer@VCSDHost@@$0BA@@@QAAPAVCSDHost@@K@Z| PROC ; CStaticContainer<CSDHost,16>::RemoveObjectBy

; 119  :     {

  00000		 |$LN11@RemoveObje|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M39127|
  00004	e1a06001	 mov         r6, r1
  00008	e1a05000	 mov         r5, r0

; 120  :         Lock();

  0000c	eb000000	 bl          EnterCriticalSection

; 121  :         T*  pReturn = NULL;
; 122  :         if( dwIndex < m_dwArraySize )

  00010	e5953054	 ldr         r3, [r5, #0x54]
  00014	e3a04000	 mov         r4, #0

; 123  :         {
; 124  :             pReturn = m_rgObjectArray[dwIndex];
; 125  :             m_rgObjectArray[dwIndex] = NULL;
; 126  :         };
; 127  :         Unlock();

  00018	e1a00005	 mov         r0, r5
  0001c	e1560003	 cmp         r6, r3
  00020	30853106	 addcc       r3, r5, r6, lsl #2
  00024	35934014	 ldrcc       r4, [r3, #0x14]
  00028	33a02000	 movcc       r2, #0
  0002c	35832014	 strcc       r2, [r3, #0x14]
  00030	eb000000	 bl          LeaveCriticalSection

; 128  :         if( pReturn )

  00034	e3540000	 cmp         r4, #0

; 129  :         {
; 130  :             pReturn->DeRef();

  00038	11a00004	 movne       r0, r4
  0003c	1b000000	 blne        |?DeRef@CRefObject@@QAAKXZ|

; 131  :         }
; 132  :         return pReturn;
; 133  :     }

  00040	e1a00004	 mov         r0, r4
  00044	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00048	e12fff1e	 bx          lr
  0004c		 |$M39128|

			 ENDP  ; |?RemoveObjectBy@?$CStaticContainer@VCSDHost@@$0BA@@@QAAPAVCSDHost@@K@Z|, CStaticContainer<CSDHost,16>::RemoveObjectBy

	EXPORT	|?InsertObjectAtEmpty@?$CStaticContainer@VCSDHost@@$0BA@@@QAAPAVCSDHost@@PAKPAV2@@Z| ; CStaticContainer<CSDHost,16>::InsertObjectAtEmpty
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T39157| DCD	|$LN23@InsertObje|
	DCD	0x40002301
; Function compile flags: /Ogspy
; File c:\wince600\public\common\oak\inc\crefcon.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InsertObjectAtEmpty@?$CStaticContainer@VCSDHost@@$0BA@@@QAAPAVCSDHost@@PAKPAV2@@Z| PROC ; CStaticContainer<CSDHost,16>::InsertObjectAtEmpty

; 151  :     {

  00000		 |$LN23@InsertObje|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M39154|
  00004	e1b08002	 movs        r8, r2
  00008	e1a07001	 mov         r7, r1
  0000c	e1a06000	 mov         r6, r0

; 152  :         if( pObject )

  00010	0a000019	 beq         |$LN8@InsertObje|

; 153  :         {
; 154  :             Lock();

  00014	eb000000	 bl          EnterCriticalSection

; 155  :             T*  pReturn = NULL;
; 156  :             for( DWORD dwIndex = 0; dwIndex < m_dwArraySize; dwIndex++ )

  00018	e5963054	 ldr         r3, [r6, #0x54]
  0001c	e3a05000	 mov         r5, #0
  00020	e3a04000	 mov         r4, #0
  00024	e1b02003	 movs        r2, r3
  00028	0a000007	 beq         |$LN20@InsertObje|

; 153  :         {
; 154  :             Lock();

  0002c	e1a00006	 mov         r0, r6
  00030		 |$LL7@InsertObje|

; 157  :                 if( m_rgObjectArray[dwIndex] == NULL )

  00030	e5903014	 ldr         r3, [r0, #0x14]
  00034	e3530000	 cmp         r3, #0
  00038	0a000003	 beq         |$LN20@InsertObje|
  0003c	e2844001	 add         r4, r4, #1
  00040	e1540002	 cmp         r4, r2
  00044	e2800004	 add         r0, r0, #4
  00048	3afffff8	 bcc         |$LL7@InsertObje|
  0004c		 |$LN20@InsertObje|

; 158  :                     break;
; 159  :             if( dwIndex < m_dwArraySize )

  0004c	e1540002	 cmp         r4, r2
  00050	2a000006	 bcs         |$LN2@InsertObje|

; 160  :             {
; 161  :                 pReturn = m_rgObjectArray[dwIndex] = pObject;

  00054	e0863104	 add         r3, r6, r4, lsl #2

; 162  :                 pReturn->AddRef();

  00058	e2880004	 add         r0, r8, #4
  0005c	e5838014	 str         r8, [r3, #0x14]
  00060	e1a05008	 mov         r5, r8
  00064	eb000000	 bl          InterlockedIncrement

; 163  :                 if( pdwIndex )

  00068	e3570000	 cmp         r7, #0

; 164  :                     *( pdwIndex ) = dwIndex;

  0006c	15874000	 strne       r4, [r7]
  00070		 |$LN2@InsertObje|

; 165  :             };
; 166  :             Unlock();

  00070	e1a00006	 mov         r0, r6
  00074	eb000000	 bl          LeaveCriticalSection

; 167  :             return pReturn;

  00078	ea000000	 b           |$LN1@InsertObje|
  0007c		 |$LN8@InsertObje|

; 168  :         }
; 169  :         else
; 170  :         {
; 171  :             return NULL;

  0007c	e3a05000	 mov         r5, #0
  00080		 |$LN1@InsertObje|

; 172  :         }
; 173  :     }

  00080	e1a00005	 mov         r0, r5
  00084	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00088	e12fff1e	 bx          lr
  0008c		 |$M39155|

			 ENDP  ; |?InsertObjectAtEmpty@?$CStaticContainer@VCSDHost@@$0BA@@@QAAPAVCSDHost@@PAKPAV2@@Z|, CStaticContainer<CSDHost,16>::InsertObjectAtEmpty

	EXPORT	|??1MarshalledBuffer_t@@QAA@XZ|		; MarshalledBuffer_t::~MarshalledBuffer_t
; File c:\wince600\public\common\oak\inc\marshal.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T39165| DCD	|$LN5@Marshalled|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1MarshalledBuffer_t@@QAA@XZ| PROC	; MarshalledBuffer_t::~MarshalledBuffer_t

; 59   :     ~MarshalledBuffer_t() {

  00000		 |$LN5@Marshalled|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M39162|

; 60   :         Unmarshal();

  00004	eb000000	 bl          |?Unmarshal@MarshalledBuffer_t@@QAAJXZ|

; 61   :     }

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M39163|

			 ENDP  ; |??1MarshalledBuffer_t@@QAA@XZ|, MarshalledBuffer_t::~MarshalledBuffer_t

	EXPORT	|?Marshal@MarshalledBuffer_t@@QAAJPAXKKHH@Z| ; MarshalledBuffer_t::Marshal
	IMPORT	|CeAllocAsynchronousBuffer|
	IMPORT	|CeOpenCallerBuffer|

  00000			 AREA	 |.pdata|, PDATA
|$T39179| DCD	|$LN9@Marshal|
	DCD	0x40002502
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Marshal@MarshalledBuffer_t@@QAAJPAXKKHH@Z| PROC ; MarshalledBuffer_t::Marshal

; 116  :     {

  00000		 |$LN9@Marshal|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M39176|
  00008	e1a06003	 mov         r6, r3
  0000c	e1a07002	 mov         r7, r2
  00010	e1a08001	 mov         r8, r1
  00014	e1a04000	 mov         r4, r0

; 117  :         HRESULT result = HRESULT_FROM_WIN32(ERROR_ALREADY_EXISTS);
; 118  : 
; 119  :         if (!m_pLocalSyncMarshalled) {

  00018	e594e004	 ldr         lr, [r4, #4]
  0001c	e59f506c	 ldr         r5, [pc, #0x6C]
  00020	e35e0000	 cmp         lr, #0
  00024	1a000015	 bne         |$LN1@Marshal|

; 120  :             // First do the synchronous marshalling
; 121  :             result = CeOpenCallerBuffer(&m_pLocalSyncMarshalled,
; 122  :                                         pSrcUnmarshalled, cbSrc,
; 123  :                                         ArgumentDescriptor, ForceDuplicate);

  00028	e59de01c	 ldr         lr, [sp, #0x1C]
  0002c	e2840004	 add         r0, r4, #4
  00030	e58de000	 str         lr, [sp]
  00034	eb000000	 bl          CeOpenCallerBuffer
  00038	e1b05000	 movs        r5, r0

; 124  :             if (SUCCEEDED(result)) {

  0003c	4a00000f	 bmi         |$LN1@Marshal|

; 125  :                 // These values will now be required in order to clean up
; 126  :                 m_pLocalAsync = NULL;
; 127  :                 m_pCallerUnmarshalled = pSrcUnmarshalled;
; 128  :                 m_cbSize = cbSrc;
; 129  :                 m_ArgumentDescriptor = ArgumentDescriptor;
; 130  : 
; 131  :                 if (Asynchronous) {

  00040	e59de020	 ldr         lr, [sp, #0x20]
  00044	e3a03000	 mov         r3, #0
  00048	e5843000	 str         r3, [r4]
  0004c	e35e0000	 cmp         lr, #0
  00050	e5848008	 str         r8, [r4, #8]
  00054	e584700c	 str         r7, [r4, #0xC]
  00058	e5846010	 str         r6, [r4, #0x10]
  0005c	0a000007	 beq         |$LN1@Marshal|

; 132  :                     result = CeAllocAsynchronousBuffer(&m_pLocalAsync,
; 133  :                                                        m_pLocalSyncMarshalled,
; 134  :                                                        cbSrc, ArgumentDescriptor);

  00060	e5941004	 ldr         r1, [r4, #4]
  00064	e1a03006	 mov         r3, r6
  00068	e1a02007	 mov         r2, r7
  0006c	e1a00004	 mov         r0, r4
  00070	eb000000	 bl          CeAllocAsynchronousBuffer
  00074	e1b05000	 movs        r5, r0

; 135  :                     if (!SUCCEEDED(result)) {
; 136  :                         Unmarshal();

  00078	41a00004	 movmi       r0, r4
  0007c	4b000000	 blmi        |?Unmarshal@MarshalledBuffer_t@@QAAJXZ|
  00080		 |$LN1@Marshal|

; 137  :                     }
; 138  :                 }
; 139  :             }
; 140  :         }
; 141  :         return result;
; 142  :     }

  00080	e1a00005	 mov         r0, r5
  00084	e28dd004	 add         sp, sp, #4
  00088	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  0008c	e12fff1e	 bx          lr
  00090		 |$LN10@Marshal|
  00090		 |$LN11@Marshal|
  00090	800700b7	 DCD         0x800700b7
  00094		 |$M39177|

			 ENDP  ; |?Marshal@MarshalledBuffer_t@@QAAJPAXKKHH@Z|, MarshalledBuffer_t::Marshal

	EXPORT	|?GetSDHost@CSDHostContainer@@SAPAVCSDHost@@K@Z| ; CSDHostContainer::GetSDHost
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T39191| DCD	|$LN5@GetSDHost|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetSDHost@CSDHostContainer@@SAPAVCSDHost@@K@Z| PROC ; CSDHostContainer::GetSDHost

; 215  :     static CSDHost * GetSDHost(DWORD dwIndex) {

  00000		 |$LN5@GetSDHost|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M39188|
  00004	e1a01000	 mov         r1, r0

; 216  :         PREFAST_ASSERT(g_pSdContainer!=NULL);
; 217  :         return g_pSdContainer->ObjectIndex(dwIndex);

  00008	e59f3010	 ldr         r3, [pc, #0x10]
  0000c	e5933000	 ldr         r3, [r3]
  00010	e283002c	 add         r0, r3, #0x2C
  00014	eb000000	 bl          |?ObjectIndex@?$CStaticContainer@VCSDHost@@$0BA@@@QAAPAVCSDHost@@K@Z|

; 218  :     }

  00018	e49de004	 ldr         lr, [sp], #4
  0001c	e12fff1e	 bx          lr
  00020		 |$LN6@GetSDHost|
  00020		 |$LN7@GetSDHost|
  00020	00000000	 DCD         |?g_pSdContainer@CSDHostContainer@@0PAV1@A|
  00024		 |$M39189|

			 ENDP  ; |?GetSDHost@CSDHostContainer@@SAPAVCSDHost@@K@Z|, CSDHostContainer::GetSDHost

	EXPORT	|?InsertSDHost@CSDHostContainer@@SAPAVCSDHost@@PAV2@@Z| ; CSDHostContainer::InsertSDHost
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T39217| DCD	|$LN16@InsertSDHo|
	DCD	0x40001b02
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.hpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InsertSDHost@CSDHostContainer@@SAPAVCSDHost@@PAV2@@Z| PROC ; CSDHostContainer::InsertSDHost

; 225  :     static CSDHost * InsertSDHost(CSDHost * psdHost ) {

  00000		 |$LN16@InsertSDHo|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M39214|
  00008	e1b04000	 movs        r4, r0

; 226  :         PREFAST_ASSERT(g_pSdContainer!=NULL);
; 227  :         DWORD dwIndex;
; 228  :         if (psdHost) {

  0000c	0a000010	 beq         |$LN3@InsertSDHo|

; 229  :             CStaticContainer * pHostContainer = g_pSdContainer;

  00010	e59f3050	 ldr         r3, [pc, #0x50]
  00014	e5933000	 ldr         r3, [r3]
  00018	e3530000	 cmp         r3, #0
  0001c	1283502c	 addne       r5, r3, #0x2C
  00020	03a05000	 moveq       r5, #0

; 230  :             pHostContainer->Lock();

  00024	e1a00005	 mov         r0, r5
  00028	eb000000	 bl          EnterCriticalSection

; 231  :             psdHost = pHostContainer->InsertObjectAtEmpty(&dwIndex,psdHost);

  0002c	e1a02004	 mov         r2, r4
  00030	e28d1000	 add         r1, sp, #0
  00034	e1a00005	 mov         r0, r5
  00038	eb000000	 bl          |?InsertObjectAtEmpty@?$CStaticContainer@VCSDHost@@$0BA@@@QAAPAVCSDHost@@PAKPAV2@@Z|
  0003c	e1b04000	 movs        r4, r0

; 232  :             if (psdHost)
; 233  :                 psdHost->SetIndex(dwIndex);

  00040	159d3000	 ldrne       r3, [sp]

; 234  :             pHostContainer->Unlock();

  00044	e1a00005	 mov         r0, r5
  00048	1584305c	 strne       r3, [r4, #0x5C]
  0004c	eb000000	 bl          LeaveCriticalSection

; 235  :             return psdHost;

  00050	ea000000	 b           |$LN1@InsertSDHo|
  00054		 |$LN3@InsertSDHo|

; 236  :         }
; 237  :         else
; 238  :             return NULL;

  00054	e3a04000	 mov         r4, #0
  00058		 |$LN1@InsertSDHo|

; 239  :             
; 240  :     }

  00058	e1a00004	 mov         r0, r4
  0005c	e28dd004	 add         sp, sp, #4
  00060	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00064	e12fff1e	 bx          lr
  00068		 |$LN17@InsertSDHo|
  00068		 |$LN18@InsertSDHo|
  00068	00000000	 DCD         |?g_pSdContainer@CSDHostContainer@@0PAV1@A|
  0006c		 |$M39215|

			 ENDP  ; |?InsertSDHost@CSDHostContainer@@SAPAVCSDHost@@PAV2@@Z|, CSDHostContainer::InsertSDHost

	EXPORT	|?RemoveSDHostBy@CSDHostContainer@@SAPAVCSDHost@@K@Z| ; CSDHostContainer::RemoveSDHostBy

  00000			 AREA	 |.pdata|, PDATA
|$T39229| DCD	|$LN5@RemoveSDHo|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RemoveSDHostBy@CSDHostContainer@@SAPAVCSDHost@@K@Z| PROC ; CSDHostContainer::RemoveSDHostBy

; 241  :     static CSDHost * RemoveSDHostBy(DWORD dwIndex) {

  00000		 |$LN5@RemoveSDHo|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M39226|
  00004	e1a01000	 mov         r1, r0

; 242  :         PREFAST_ASSERT(g_pSdContainer!=NULL);
; 243  :         return g_pSdContainer->RemoveObjectBy(dwIndex);

  00008	e59f3010	 ldr         r3, [pc, #0x10]
  0000c	e5933000	 ldr         r3, [r3]
  00010	e283002c	 add         r0, r3, #0x2C
  00014	eb000000	 bl          |?RemoveObjectBy@?$CStaticContainer@VCSDHost@@$0BA@@@QAAPAVCSDHost@@K@Z|

; 244  :     }

  00018	e49de004	 ldr         lr, [sp], #4
  0001c	e12fff1e	 bx          lr
  00020		 |$LN6@RemoveSDHo|
  00020		 |$LN7@RemoveSDHo|
  00020	00000000	 DCD         |?g_pSdContainer@CSDHostContainer@@0PAV1@A|
  00024		 |$M39227|

			 ENDP  ; |?RemoveSDHostBy@CSDHostContainer@@SAPAVCSDHost@@K@Z|, CSDHostContainer::RemoveSDHostBy

	EXPORT	|?DefaultChangeCardPower@CSDHost@@KAJPAU_SDCARD_HC_CONTEXT@@KH@Z| ; CSDHost::DefaultChangeCardPower
	IMPORT	|__C_specific_handler|
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdslot.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T39282| DCD	|$LN36@DefaultCha|
	DCD	0xc0003605

  00000			 AREA	 |.pdata|, PDATA
|$T39284| DCD	|$LN15@DefaultCha|
	DCD	0x40000401

  00000			 AREA	 |.xdata|, DATA
|$T39280| DCD	0x1
	DCD	|$LN19@DefaultCha|
	DCD	|$LN20@DefaultCha|
	DCD	|$LN15@DefaultCha|
	DCD	|$LN16@DefaultCha|
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T39280|

  00008		 |?DefaultChangeCardPower@CSDHost@@KAJPAU_SDCARD_HC_CONTEXT@@KH@Z| PROC ; CSDHost::DefaultChangeCardPower

; 53   : {

  00008		 |$LN36@DefaultCha|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d0007	 stmdb       sp!, {r0 - r2}
  00010	e92d58f0	 stmdb       sp!, {r4 - r7, r11, r12, lr}
  00014	e28db01c	 add         r11, sp, #0x1C
  00018	e24dd008	 sub         sp, sp, #8
  0001c		 |$LN34@DefaultCha|
  0001c	e1a07002	 mov         r7, r2
  00020	e58b7008	 str         r7, [r11, #8]
  00024	e1a06001	 mov         r6, r1
  00028	e58b6004	 str         r6, [r11, #4]
  0002c	e1b05000	 movs        r5, r0
  00030	e58b5000	 str         r5, [r11]

; 54   :     USHORT  SlotPower = 0;
; 55   :     INT     NewSlotPower = 0;
; 56   :     PREFAST_ASSERT(pHCCardContext!=NULL);
; 57   :     CSDHost * pHost = (CSDHost *) pHCCardContext;

  00034	12453008	 subne       r3, r5, #8
  00038	03a03000	 moveq       r3, #0

; 58   :     DWORD dwHostIndex = MAXDWORD;
; 59   :     SD_API_STATUS status = SD_API_STATUS_NO_SUCH_DEVICE;

  0003c	e3a04123	 mov         r4, #0x23, 2
  00040	e50b4020	 str         r4, [r11, #-0x20]
  00044		 |$LN19@DefaultCha|

; 60   :     __try {
; 61   :         dwHostIndex = pHost->m_dwSdHostIndex ;

  00044	e593105c	 ldr         r1, [r3, #0x5C]
  00048	e50b1024	 str         r1, [r11, #-0x24]
  0004c		 |$LN20@DefaultCha|

; 62   :     }

  0004c	ea000005	 b           |$LN21@DefaultCha|
  00050		 |$LN16@DefaultCha|

; 64   :         dwHostIndex = MAXDWORD;

  00050	e3e01000	 mvn         r1, #0
  00054	e50b1024	 str         r1, [r11, #-0x24]
  00058	e59b7008	 ldr         r7, [r11, #8]
  0005c	e59b6004	 ldr         r6, [r11, #4]
  00060	e59b5000	 ldr         r5, [r11]
  00064	e51b4020	 ldr         r4, [r11, #-0x20]
  00068		 |$LN21@DefaultCha|

; 65   :     }
; 66   :     pHost = CSDHostContainer::GetSDHost(dwHostIndex);

  00068	e59f307c	 ldr         r3, [pc, #0x7C]
  0006c	e5933000	 ldr         r3, [r3]
  00070	e283002c	 add         r0, r3, #0x2C
  00074	eb000000	 bl          |?ObjectIndex@?$CStaticContainer@VCSDHost@@$0BA@@@QAAPAVCSDHost@@K@Z|
  00078	e3500000	 cmp         r0, #0

; 67   :     if (pHost && (PSDCARD_HC_CONTEXT)pHost == pHCCardContext) {

  0007c	0a000013	 beq         |$LN8@DefaultCha|
  00080	e2803008	 add         r3, r0, #8
  00084	e1530005	 cmp         r3, r5
  00088	1a00000b	 bne         |$LN4@DefaultCha|

; 68   :         CSDSlot *pSlot = pHost->GetSlot(Slot);

  0008c	e5903068	 ldr         r3, [r0, #0x68]
  00090	e1560003	 cmp         r6, r3
  00094	30803106	 addcc       r3, r0, r6, lsl #2
  00098	3593306c	 ldrcc       r3, [r3, #0x6C]
  0009c	23a03000	 movcs       r3, #0

; 69   :         if (pSlot) {

  000a0	e3530000	 cmp         r3, #0
  000a4	0a000004	 beq         |$LN4@DefaultCha|

; 70   :             SlotPower = pSlot->GetSlotPower();
; 71   :             NewSlotPower = ((INT) SlotPower) + CurrentDelta;
; 72   :             status = SD_API_STATUS_SUCCESS ;
; 73   :             if(NewSlotPower > DEFAULT_MAX_SLOT_CURRENT) {

  000a8	e1d33bb0	 ldrh        r3, [r3, #0xB0]
  000ac	e3a04000	 mov         r4, #0
  000b0	e0833007	 add         r3, r3, r7
  000b4	e35300c8	 cmp         r3, #0xC8

; 74   :                 DbgPrintZo(SDCARD_ZONE_WARN, 
; 75   :                            (TEXT("SDBusDriver: Power change denied, current over limmit by %dmA\n"),
; 76   :                                                NewSlotPower - DEFAULT_MAX_SLOT_CURRENT));
; 77   :                 status = SD_API_STATUS_INSUFFICIENT_HOST_POWER;

  000b8	c3a04167	 movgt       r4, #0x67, 2
  000bc		 |$LN4@DefaultCha|

; 78   :             }
; 79   :             else if(NewSlotPower < 0) {
; 80   :                 DbgPrintZo(SDCARD_ZONE_WARN, (TEXT("SDBusDriver: Power change math issue, current under limmit by %dmA\n"), NewSlotPower));
; 81   :             }
; 82   :         }
; 83   :     }
; 84   :     if (pHost)

  000bc	e3500000	 cmp         r0, #0
  000c0	0a000002	 beq         |$LN8@DefaultCha|

; 85   :         pHost->DeRef();

  000c4	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|

; 86   :     
; 87   :     // Do not change SlotPower in this function.
; 88   :     // It will be tracked by the bus driver's calling function.
; 89   : 
; 90   :     return status;

  000c8	ea000000	 b           |$LN8@DefaultCha|
  000cc		 |$LN32@DefaultCha|
  000cc	e51b4020	 ldr         r4, [r11, #-0x20]
  000d0		 |$LN8@DefaultCha|

; 91   : }

  000d0	e1a00004	 mov         r0, r4
  000d4	e24bd01c	 sub         sp, r11, #0x1C
  000d8	e89d68f0	 ldmia       sp, {r4 - r7, r11, sp, lr}
  000dc	e12fff1e	 bx          lr

			 ENDP  ; |?DefaultChangeCardPower@CSDHost@@KAJPAU_SDCARD_HC_CONTEXT@@KH@Z|, CSDHost::DefaultChangeCardPower

  000e0		 |$LN15@DefaultCha|
  000e0		 |$LN35@DefaultCha|

; 63   :     __except (SDProcessException(GetExceptionInformation())) {

  000e0	e52de004	 str         lr, [sp, #-4]!
  000e4		 |$LN18@DefaultCha|
  000e4		 |$LN38@DefaultCha|
  000e4	eb000000	 bl          SDProcessException
  000e8		 |$LN17@DefaultCha|
  000e8	e49df004	 ldr         pc, [sp], #4
  000ec		 |$LN40@DefaultCha|
  000ec		 |$LN41@DefaultCha|
  000ec	00000000	 DCD         |?g_pSdContainer@CSDHostContainer@@0PAV1@A|
  000f0		 |$LN39@DefaultCha|
  000f0		 |$LN37@DefaultCha|

  00000			 AREA	 |.pdata|, PDATA
|$T39301| DCD	|$LN6@scalar@2|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GCSDHost@@UAAPAXI@Z| PROC		; CSDHost::`scalar deleting destructor'
  00000		 |$LN6@scalar@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M39298|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0
  0000c	eb000000	 bl          |??1CSDHost@@UAA@XZ|
  00010	e3140001	 tst         r4, #1
  00014	11a00005	 movne       r0, r5
  00018	1b000000	 blne        |??3@YAXPAX@Z|
  0001c	e1a00005	 mov         r0, r5
  00020	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M39299|

			 ENDP  ; |??_GCSDHost@@UAAPAXI@Z|, CSDHost::`scalar deleting destructor'

	EXPORT	|??_C@_1BA@NIOOIDBC@?$AAV?$AAE?$AAR?$AA?5?$AA2?$AA?4?$AA0?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|??0CSDSlot@@QAA@KAAVCSDHost@@@Z|	; CSDSlot::CSDSlot
	IMPORT	|??2@YAPAXI@Z|				; operator new

  00000			 AREA	 |.pdata|, PDATA
|$T39319| DCD	|$LN16@Init|
	DCD	0x40003301

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@NIOOIDBC@?$AAV?$AAE?$AAR?$AA?5?$AA2?$AA?4?$AA0?$AA?$AA@| DCB "V"
	DCB	0x0, "E", 0x0, "R", 0x0, " ", 0x0, "2", 0x0, ".", 0x0, "0"
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Init@CSDHost@@UAAHXZ| PROC		; CSDHost::Init

; 111  : {

  00000		 |$LN16@Init|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M39316|
  00004	e1a04000	 mov         r4, r0

; 112  :     if (!m_fIntialized) {

  00008	e5943060	 ldr         r3, [r4, #0x60]
  0000c	e3530000	 cmp         r3, #0
  00010	1a000028	 bne         |$LN6@Init|

; 113  :         // set the number of slots
; 114  :         // such that the host can detect the version of the bus driver
; 115  :         StringCchCopy(HostControllerName,_countof(HostControllerName),  BUS_VER_FOR_HOST);

  00014	e59f20ac	 ldr         r2, [pc, #0xAC]
  00018	e3a01010	 mov         r1, #0x10
  0001c	e284000c	 add         r0, r4, #0xC
  00020	eb000000	 bl          StringCchCopyW

; 116  :         // set the default power control handler function
; 117  :         pChangeCardPowerHandler = DefaultChangeCardPower;

  00024	e59f3098	 ldr         r3, [pc, #0x98]

; 118  :         dwVersion = SDCARD_HC_BUS_INTERFACE_VERSION ;
; 119  :         
; 120  :         for (DWORD dwIndex = 0;  dwIndex<m_dwNumOfSlot; dwIndex ++) {

  00028	e5942068	 ldr         r2, [r4, #0x68]
  0002c	e3a01801	 mov         r1, #1, 16
  00030	e5843058	 str         r3, [r4, #0x58]
  00034	e3520000	 cmp         r2, #0
  00038	e5841008	 str         r1, [r4, #8]
  0003c	e3a06000	 mov         r6, #0
  00040	9a000017	 bls         |$LN3@Init|

; 113  :         // set the number of slots
; 114  :         // such that the host can detect the version of the bus driver
; 115  :         StringCchCopy(HostControllerName,_countof(HostControllerName),  BUS_VER_FOR_HOST);

  00044	e1a05004	 mov         r5, r4
  00048		 |$LL5@Init|

; 121  :             m_SlotArray[dwIndex] = new CSDSlot(dwIndex,*this);

  00048	e3a00f42	 mov         r0, #0x42, 30
  0004c	eb000000	 bl          |??2@YAPAXI@Z|
  00050	e3500000	 cmp         r0, #0
  00054	0a000003	 beq         |$LN9@Init|
  00058	e1a02004	 mov         r2, r4
  0005c	e1a01006	 mov         r1, r6
  00060	eb000000	 bl          |??0CSDSlot@@QAA@KAAVCSDHost@@@Z|
  00064	ea000000	 b           |$LN10@Init|
  00068		 |$LN9@Init|
  00068	e3a00000	 mov         r0, #0
  0006c		 |$LN10@Init|
  0006c	e585006c	 str         r0, [r5, #0x6C]

; 122  :             if (!(m_SlotArray[dwIndex] && m_SlotArray[dwIndex]->Init())) {

  00070	e3500000	 cmp         r0, #0
  00074	0a00000f	 beq         |$LN6@Init|
  00078	e5903000	 ldr         r3, [r0]
  0007c	e593300c	 ldr         r3, [r3, #0xC]
  00080	e1a0e00f	 mov         lr, pc
  00084	e12fff13	 bx          r3
  00088	e3500000	 cmp         r0, #0
  0008c	0a000009	 beq         |$LN6@Init|
  00090	e5943068	 ldr         r3, [r4, #0x68]
  00094	e2866001	 add         r6, r6, #1
  00098	e2855004	 add         r5, r5, #4
  0009c	e1560003	 cmp         r6, r3
  000a0	3affffe8	 bcc         |$LL5@Init|
  000a4		 |$LN3@Init|

; 123  :                 ASSERT(FALSE);
; 124  :                 return FALSE;
; 125  :             }
; 126  :         }
; 127  :         m_fIntialized = TRUE;

  000a4	e3a03001	 mov         r3, #1
  000a8	e5843060	 str         r3, [r4, #0x60]

; 128  :         return TRUE;

  000ac	e3a00001	 mov         r0, #1

; 131  : }

  000b0	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000b4	e12fff1e	 bx          lr
  000b8		 |$LN6@Init|

; 129  :     }
; 130  :     return FALSE;

  000b8	e3a00000	 mov         r0, #0

; 131  : }

  000bc	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000c0	e12fff1e	 bx          lr
  000c4		 |$LN17@Init|
  000c4		 |$LN18@Init|
  000c4	00000000	 DCD         |?DefaultChangeCardPower@CSDHost@@KAJPAU_SDCARD_HC_CONTEXT@@KH@Z|
  000c8		 |$LN19@Init|
  000c8	00000000	 DCD         |??_C@_1BA@NIOOIDBC@?$AAV?$AAE?$AAR?$AA?5?$AA2?$AA?4?$AA0?$AA?$AA@|
  000cc		 |$M39317|

			 ENDP  ; |?Init@CSDHost@@UAAHXZ|, CSDHost::Init

	EXPORT	|??0CSDHostContainer@@QAA@PBG@Z|	; CSDHostContainer::CSDHostContainer
	EXPORT	|??_C@_1BG@LLCGHDBL@?$AAS?$AAu?$AAb?$AAB?$AAu?$AAs?$AAN?$AAa?$AAm?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_7CSDHostContainer@@6B@| [ DATA ]	; CSDHostContainer::`vftable'
	EXPORT	|?Init@CSDHostContainer@@UAAHXZ|	; CSDHostContainer::Init
	EXPORT	|?PostInit@DefaultBusDriver@@UAAHXZ|	; DefaultBusDriver::PostInit
	EXPORT	|?PowerUp@DefaultBusDriver@@UAAHXZ|	; DefaultBusDriver::PowerUp
	EXPORT	|?PowerDown@DefaultBusDriver@@UAAHXZ|	; DefaultBusDriver::PowerDown
	EXPORT	|?Close@DefaultBusDriver@@UAAHXZ|	; DefaultBusDriver::Close
	EXPORT	|?IOControl@CSDHostContainer@@UAAHKPAEK0KPAK@Z| ; CSDHostContainer::IOControl
	EXPORT	|?IsChildRemoved@DefaultBusDriver@@UAAHPBG@Z| ; DefaultBusDriver::IsChildRemoved
	IMPORT	|??0DefaultBusDriver@@QAA@PBG@Z|	; DefaultBusDriver::DefaultBusDriver
	IMPORT	|??_ECSDHostContainer@@UAAPAXI@Z|, WEAK |??_GCSDHostContainer@@UAAPAXI@Z| ; CSDHostContainer::`vector deleting destructor', CSDHostContainer::`scalar deleting destructor'
	IMPORT	|?TranslateChildBusAddr@DefaultBusDriver@@UAAHPAU_CE_BUS_TRANSLATE_BUS_ADDR@@@Z| ; DefaultBusDriver::TranslateChildBusAddr
	IMPORT	|?TranslateChildSystemAddr@DefaultBusDriver@@UAAHPAU_CE_BUS_TRANSLATE_SYSTEM_ADDR@@@Z| ; DefaultBusDriver::TranslateChildSystemAddr
	IMPORT	|?SetChildDevicePowerState@DefaultBusDriver@@UAAHPAU_CE_BUS_POWER_STATE@@PAPAVDeviceFolder@@@Z| ; DefaultBusDriver::SetChildDevicePowerState
	IMPORT	|?GetChildDevicePowerState@DefaultBusDriver@@UAAHPAU_CE_BUS_POWER_STATE@@PAPAVDeviceFolder@@@Z| ; DefaultBusDriver::GetChildDevicePowerState
	IMPORT	|?SetChildDeviceConfigurationData@DefaultBusDriver@@UAAHPAU_CE_BUS_DEVICE_CONFIGURATION_DATA@@PAPAVDeviceFolder@@@Z| ; DefaultBusDriver::SetChildDeviceConfigurationData
	IMPORT	|?GetChildDeviceConfigurationData@DefaultBusDriver@@UAAHPAU_CE_BUS_DEVICE_CONFIGURATION_DATA@@PAPAVDeviceFolder@@@Z| ; DefaultBusDriver::GetChildDeviceConfigurationData
	IMPORT	|?ActivateChild@DefaultBusDriver@@UAAHPBG@Z| ; DefaultBusDriver::ActivateChild
	IMPORT	|?DeactivateChild@DefaultBusDriver@@UAAHPBG@Z| ; DefaultBusDriver::DeactivateChild
	IMPORT	|?Open@DefaultBusDriver@@UAAHKK@Z|	; DefaultBusDriver::Open
	IMPORT	|?GetChildByName@DefaultBusDriver@@UAAPAVDeviceFolder@@PBGPAPAV2@@Z| ; DefaultBusDriver::GetChildByName
	IMPORT	|?InsertChild@DefaultBusDriver@@UAAHPAVDeviceFolder@@@Z| ; DefaultBusDriver::InsertChild
	IMPORT	|?RemoveChildByName@DefaultBusDriver@@UAAHPBG@Z| ; DefaultBusDriver::RemoveChildByName
	IMPORT	|?RemoveChildByFolder@DefaultBusDriver@@UAAHPAVDeviceFolder@@@Z| ; DefaultBusDriver::RemoveChildByFolder
	IMPORT	|?FastIOControl@DefaultBusDriver@@UAAHKPAEK0KPAKPAPAVDeviceFolder@@@Z| ; DefaultBusDriver::FastIOControl
; File c:\wince600\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.pdata|, PDATA
|$T39356| DCD	|$LN20@CSDHostCon|
	DCD	0x40002d02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@LLCGHDBL@?$AAS?$AAu?$AAb?$AAB?$AAu?$AAs?$AAN?$AAa?$AAm?$AAe?$AA?$AA@| DCB "S"
	DCB	0x0, "u", 0x0, "b", 0x0, "B", 0x0, "u", 0x0, "s", 0x0, "N"
	DCB	0x0, "a", 0x0, "m", 0x0, "e", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CSDHostContainer@@6B@| DCD |?Init@CSDHostContainer@@UAAHXZ| ; CSDHostContainer::`vftable'
	DCD	|?PostInit@DefaultBusDriver@@UAAHXZ|
	DCD	|??_ECSDHostContainer@@UAAPAXI@Z|
	DCD	|?TranslateChildBusAddr@DefaultBusDriver@@UAAHPAU_CE_BUS_TRANSLATE_BUS_ADDR@@@Z|
	DCD	|?TranslateChildSystemAddr@DefaultBusDriver@@UAAHPAU_CE_BUS_TRANSLATE_SYSTEM_ADDR@@@Z|
	DCD	|?SetChildDevicePowerState@DefaultBusDriver@@UAAHPAU_CE_BUS_POWER_STATE@@PAPAVDeviceFolder@@@Z|
	DCD	|?GetChildDevicePowerState@DefaultBusDriver@@UAAHPAU_CE_BUS_POWER_STATE@@PAPAVDeviceFolder@@@Z|
	DCD	|?SetChildDeviceConfigurationData@DefaultBusDriver@@UAAHPAU_CE_BUS_DEVICE_CONFIGURATION_DATA@@PAPAVDeviceFolder@@@Z|
	DCD	|?GetChildDeviceConfigurationData@DefaultBusDriver@@UAAHPAU_CE_BUS_DEVICE_CONFIGURATION_DATA@@PAPAVDeviceFolder@@@Z|
	DCD	|?ActivateChild@DefaultBusDriver@@UAAHPBG@Z|
	DCD	|?DeactivateChild@DefaultBusDriver@@UAAHPBG@Z|
	DCD	|?PowerUp@DefaultBusDriver@@UAAHXZ|
	DCD	|?PowerDown@DefaultBusDriver@@UAAHXZ|
	DCD	|?Open@DefaultBusDriver@@UAAHKK@Z|
	DCD	|?Close@DefaultBusDriver@@UAAHXZ|
	DCD	|?IOControl@CSDHostContainer@@UAAHKPAEK0KPAK@Z|
	DCD	|?GetChildByName@DefaultBusDriver@@UAAPAVDeviceFolder@@PBGPAPAV2@@Z|
	DCD	|?InsertChild@DefaultBusDriver@@UAAHPAVDeviceFolder@@@Z|
	DCD	|?RemoveChildByName@DefaultBusDriver@@UAAHPBG@Z|
	DCD	|?RemoveChildByFolder@DefaultBusDriver@@UAAHPAVDeviceFolder@@@Z|
	DCD	|?IsChildRemoved@DefaultBusDriver@@UAAHPBG@Z|
	DCD	|?GetBusNamePrefix@CSDHostContainer@@UAAKPAGK@Z|
	DCD	|?FastIOControl@DefaultBusDriver@@UAAHKPAEK0KPAKPAPAVDeviceFolder@@@Z|
	DCD	|?SDC_IOControl@CSDHostContainer@@UAAHKPAEK0KPAK@Z|
	DCD	|?GetSlotInfo@CSDHostContainer@@MAAKPAU_BUS_DRIVER_SLOT_INFO@@K@Z|
	DCD	|?GetSlotPowerControlInfo@CSDHostContainer@@MAAJKPAU_SLOT_POWER_DATA@@@Z|
	DCD	|?GetFunctionPowerControlInfo@CSDHostContainer@@MAAJKKPAU_FUNCTION_POWER_DATA@@@Z|
	DCD	|?SetSlotPowerControl@CSDHostContainer@@MAAJKH@Z|
	DCD	|?SlotCardSelectDeselect@CSDHostContainer@@MAAHKW4_SD_SLOT_EVENT@@@Z|
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CSDHostContainer@@QAA@PBG@Z| PROC	; CSDHostContainer::CSDHostContainer

; 194  : {

  00000		 |$LN20@CSDHostCon|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd010	 sub         sp, sp, #0x10
  00008		 |$M39353|
  00008	e1a06001	 mov         r6, r1
  0000c	e1a05000	 mov         r5, r0
  00010	eb000000	 bl          |??0DefaultBusDriver@@QAA@PBG@Z|
  00014	e285002c	 add         r0, r5, #0x2C
  00018	eb000000	 bl          |??0?$CStaticContainer@VCSDHost@@$0BA@@@QAA@XZ|
  0001c	e59f308c	 ldr         r3, [pc, #0x8C]
  00020	e1a04005	 mov         r4, r5
  00024	e3a07000	 mov         r7, #0
  00028	e48430a4	 str         r3, [r4], #0xA4
  0002c	e3560000	 cmp         r6, #0
  00030	e5847000	 str         r7, [r4]
  00034	0a000002	 beq         |$LN5@CSDHostCon|
  00038	e1a00006	 mov         r0, r6
  0003c	eb000000	 bl          OpenDeviceKey
  00040	e5840000	 str         r0, [r4]
  00044		 |$LN5@CSDHostCon|

; 195  :     m_pFreeBusRequestSpace = NULL ;
; 196  :     m_dwMinSize=0;
; 197  :     m_szSubBusNamePrefix[0] = 0 ;
; 198  :     DWORD dwType;
; 199  :     DWORD dwDataLen = sizeof(m_szSubBusNamePrefix) ;
; 200  :     if (m_deviceKey.IsKeyOpened() && 
; 201  :             m_deviceKey.RegQueryValueEx(SD_SUB_BUSNAME_VALNAME,&dwType,(PBYTE)m_szSubBusNamePrefix,&dwDataLen) &&
; 202  :             dwType == SD_SUB_BUSNAME_VALTYPE ) {

  00044	e59530a4	 ldr         r3, [r5, #0xA4]
  00048	e3a02020	 mov         r2, #0x20
  0004c	e58570a8	 str         r7, [r5, #0xA8]
  00050	e1b00003	 movs        r0, r3
  00054	e58570ac	 str         r7, [r5, #0xAC]
  00058	e1c578b4	 strh        r7, [r5, #0x84]
  0005c	e58d2008	 str         r2, [sp, #8]
  00060	0a00000c	 beq         |$LN2@CSDHostCon|
  00064	e59f1040	 ldr         r1, [pc, #0x40]
  00068	e28de008	 add         lr, sp, #8
  0006c	e2854084	 add         r4, r5, #0x84
  00070	e28d300c	 add         r3, sp, #0xC
  00074	e3a02000	 mov         r2, #0
  00078	e58de004	 str         lr, [sp, #4]
  0007c	e58d4000	 str         r4, [sp]
  00080	eb000000	 bl          RegQueryValueExW
  00084	e3500000	 cmp         r0, #0
  00088	059d300c	 ldreq       r3, [sp, #0xC]
  0008c	03530001	 cmpeq       r3, #1

; 203  :         m_szSubBusNamePrefix[_countof(m_szSubBusNamePrefix)-1] = 0 ;

  00090	01c57ab2	 streqh      r7, [r5, #0xA2]
  00094	0a000000	 beq         |$LN1@CSDHostCon|
  00098		 |$LN2@CSDHostCon|

; 204  :     }
; 205  :     else 
; 206  :         m_szSubBusNamePrefix[0] = 0 ;

  00098	e1c578b4	 strh        r7, [r5, #0x84]
  0009c		 |$LN1@CSDHostCon|

; 207  : }

  0009c	e1a00005	 mov         r0, r5
  000a0	e28dd010	 add         sp, sp, #0x10
  000a4	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  000a8	e12fff1e	 bx          lr
  000ac		 |$LN21@CSDHostCon|
  000ac		 |$LN22@CSDHostCon|
  000ac	00000000	 DCD         |??_C@_1BG@LLCGHDBL@?$AAS?$AAu?$AAb?$AAB?$AAu?$AAs?$AAN?$AAa?$AAm?$AAe?$AA?$AA@|
  000b0		 |$LN23@CSDHostCon|
  000b0	00000000	 DCD         |??_7CSDHostContainer@@6B@|
  000b4		 |$M39354|

			 ENDP  ; |??0CSDHostContainer@@QAA@PBG@Z|, CSDHostContainer::CSDHostContainer

; File c:\wince600\public\common\oak\inc\defbus.h

  00000			 AREA	 |.pdata|, PDATA
|$T39368| DCD	|$LN5@PostInit|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PostInit@DefaultBusDriver@@UAAHXZ| PROC ; DefaultBusDriver::PostInit

; 135  :     virtual BOOL PostInit() { return TRUE; };

  00000		 |$LN5@PostInit|
  00000		 |$M39365|
  00000	e3a00001	 mov         r0, #1
  00004	e12fff1e	 bx          lr
  00008		 |$M39366|

			 ENDP  ; |?PostInit@DefaultBusDriver@@UAAHXZ|, DefaultBusDriver::PostInit


  00000			 AREA	 |.pdata|, PDATA
|$T39377| DCD	|$LN5@PowerUp|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PowerUp@DefaultBusDriver@@UAAHXZ| PROC ; DefaultBusDriver::PowerUp

; 147  :     virtual BOOL PowerUp() { return TRUE;};

  00000		 |$LN5@PowerUp|
  00000		 |$M39374|
  00000	e3a00001	 mov         r0, #1
  00004	e12fff1e	 bx          lr
  00008		 |$M39375|

			 ENDP  ; |?PowerUp@DefaultBusDriver@@UAAHXZ|, DefaultBusDriver::PowerUp


  00000			 AREA	 |.pdata|, PDATA
|$T39386| DCD	|$LN5@PowerDown|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PowerDown@DefaultBusDriver@@UAAHXZ| PROC ; DefaultBusDriver::PowerDown

; 148  :     virtual BOOL PowerDown(){ return TRUE;};

  00000		 |$LN5@PowerDown|
  00000		 |$M39383|
  00000	e3a00001	 mov         r0, #1
  00004	e12fff1e	 bx          lr
  00008		 |$M39384|

			 ENDP  ; |?PowerDown@DefaultBusDriver@@UAAHXZ|, DefaultBusDriver::PowerDown


  00000			 AREA	 |.pdata|, PDATA
|$T39395| DCD	|$LN5@Close|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Close@DefaultBusDriver@@UAAHXZ| PROC	; DefaultBusDriver::Close

; 150  :     virtual BOOL  Close() { return TRUE; };

  00000		 |$LN5@Close|
  00000		 |$M39392|
  00000	e3a00001	 mov         r0, #1
  00004	e12fff1e	 bx          lr
  00008		 |$M39393|

			 ENDP  ; |?Close@DefaultBusDriver@@UAAHXZ|, DefaultBusDriver::Close


  00000			 AREA	 |.pdata|, PDATA
|$T39404| DCD	|$LN5@IsChildRem|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsChildRemoved@DefaultBusDriver@@UAAHPBG@Z| PROC ; DefaultBusDriver::IsChildRemoved

; 162  :     virtual BOOL IsChildRemoved(LPCTSTR lpChildName) { return FALSE; }; // Can not be removed for default driver.

  00000		 |$LN5@IsChildRem|
  00000		 |$M39401|
  00000	e3a00000	 mov         r0, #0
  00004	e12fff1e	 bx          lr
  00008		 |$M39402|

			 ENDP  ; |?IsChildRemoved@DefaultBusDriver@@UAAHPBG@Z|, DefaultBusDriver::IsChildRemoved

	EXPORT	|??1CSDHostContainer@@UAA@XZ|		; CSDHostContainer::~CSDHostContainer
	IMPORT	|??1DefaultBusDriver@@UAA@XZ|		; DefaultBusDriver::~DefaultBusDriver
; File c:\wince600\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.pdata|, PDATA
|$T39439| DCD	|$LN24@CSDHostCon@2|
	DCD	0x40001e01
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CSDHostContainer@@UAA@XZ| PROC	; CSDHostContainer::~CSDHostContainer

; 209  : {

  00000		 |$LN24@CSDHostCon@2|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M39436|
  00004	e1a05000	 mov         r5, r0
  00008	e59f3064	 ldr         r3, [pc, #0x64]

; 210  :     ((CStaticContainer *)this)->Lock();

  0000c	e1a06005	 mov         r6, r5
  00010	e486302c	 str         r3, [r6], #0x2C
  00014	e1a00006	 mov         r0, r6
  00018	eb000000	 bl          EnterCriticalSection

; 211  :     while (m_pFreeBusRequestSpace) {

  0001c	ea000004	 b           |$LN21@CSDHostCon@2|
  00020		 |$LL2@CSDHostCon@2|

; 212  :         PFREE_BUS_REQUEST_SPACE pNext = m_pFreeBusRequestSpace->pNextFreeTransfer ;

  00020	e59530a8	 ldr         r3, [r5, #0xA8]

; 213  :         free(m_pFreeBusRequestSpace);

  00024	e5934000	 ldr         r4, [r3]
  00028	e1a00003	 mov         r0, r3
  0002c	eb000000	 bl          free

; 214  :         m_pFreeBusRequestSpace = pNext;

  00030	e58540a8	 str         r4, [r5, #0xA8]
  00034		 |$LN21@CSDHostCon@2|
  00034	e59530a8	 ldr         r3, [r5, #0xA8]
  00038	e3530000	 cmp         r3, #0
  0003c	1afffff7	 bne         |$LL2@CSDHostCon@2|

; 215  :     }
; 216  :     ((CStaticContainer *)this)->Unlock();

  00040	e1a00006	 mov         r0, r6
  00044	eb000000	 bl          LeaveCriticalSection

; 217  : }

  00048	e1a03005	 mov         r3, r5
  0004c	e5b320a4	 ldr         r2, [r3, #0xA4]!
  00050	e3520000	 cmp         r2, #0
  00054	11a00002	 movne       r0, r2
  00058	1b000000	 blne        RegCloseKey
  0005c	e1a00006	 mov         r0, r6
  00060	eb000000	 bl          |??1?$CStaticContainer@VCSDHost@@$0BA@@@QAA@XZ|
  00064	e1a00005	 mov         r0, r5
  00068	eb000000	 bl          |??1DefaultBusDriver@@UAA@XZ|
  0006c	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00070	e12fff1e	 bx          lr
  00074		 |$LN25@CSDHostCon@2|
  00074		 |$LN26@CSDHostCon@2|
  00074	00000000	 DCD         |??_7CSDHostContainer@@6B@|
  00078		 |$M39437|

			 ENDP  ; |??1CSDHostContainer@@UAA@XZ|, CSDHostContainer::~CSDHostContainer

	EXPORT	|??_C@_1CE@HJJHBJHC@?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAR?$AAe?$AAt?$AAr?$AAy?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|?Init@DefaultBusDriver@@UAAHXZ|	; DefaultBusDriver::Init
; File c:\wince600\public\common\oak\inc\cregedit.h

  00000			 AREA	 |.pdata|, PDATA
|$T39459| DCD	|$LN12@Init@2|
	DCD	0x40001301

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@HJJHBJHC@?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAR?$AAe?$AAt?$AAr?$AAy?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t"
	DCB	0x0, "R", 0x0, "e", 0x0, "t", 0x0, "r", 0x0, "y", 0x0, "C"
	DCB	0x0, "o", 0x0, "u", 0x0, "n", 0x0, "t", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Init@CSDHostContainer@@UAAHXZ| PROC	; CSDHostContainer::Init

; 219  : {

  00000		 |$LN12@Init@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M39456|
  00004	e1a04000	 mov         r4, r0

; 220  :     if (DefaultBusDriver::Init() && m_deviceKey.IsKeyOpened()) {

  00008	eb000000	 bl          |?Init@DefaultBusDriver@@UAAHXZ|
  0000c	e3500000	 cmp         r0, #0
  00010	0a000009	 beq         |$LN2@Init@2|
  00014	e59430a4	 ldr         r3, [r4, #0xA4]
  00018	e3530000	 cmp         r3, #0
  0001c	0a000006	 beq         |$LN2@Init@2|

; 221  :         m_BusRequestRetryCount = RegValueDWORD (SDCARD_REQUEST_RETRY_KEY, DEFAULT_BUS_REQUEST_RETRY_COUNT);

  00020	e59f0020	 ldr         r0, [pc, #0x20]
  00024	e3a01003	 mov         r1, #3
  00028	eb000000	 bl          |?RegValueDWORD@CSDHostContainer@@SAKPAGK@Z|
  0002c	e58400b0	 str         r0, [r4, #0xB0]

; 222  :         return TRUE;

  00030	e3a00001	 mov         r0, #1

; 226  : }

  00034	e8bd4010	 ldmia       sp!, {r4, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$LN2@Init@2|

; 223  :     }
; 224  :     else
; 225  :         return FALSE;

  0003c	e3a00000	 mov         r0, #0

; 226  : }

  00040	e8bd4010	 ldmia       sp!, {r4, lr}
  00044	e12fff1e	 bx          lr
  00048		 |$LN13@Init@2|
  00048		 |$LN14@Init@2|
  00048	00000000	 DCD         |??_C@_1CE@HJJHBJHC@?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AAR?$AAe?$AAt?$AAr?$AAy?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$AA@|
  0004c		 |$M39457|

			 ENDP  ; |?Init@CSDHostContainer@@UAAHXZ|, CSDHostContainer::Init

	EXPORT	|?AllocateBusRequestImp@CSDHostContainer@@AAAPAXI@Z| ; CSDHostContainer::AllocateBusRequestImp
	IMPORT	|malloc|
; File c:\wince600\public\common\oak\inc\csync.h

  00000			 AREA	 |.pdata|, PDATA
|$T39488| DCD	|$LN18@AllocateBu|
	DCD	0x40002a01
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AllocateBusRequestImp@CSDHostContainer@@AAAPAXI@Z| PROC ; CSDHostContainer::AllocateBusRequestImp

; 243  : {

  00000		 |$LN18@AllocateBu|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M39485|
  00004	e1a05001	 mov         r5, r1
  00008	e1b04000	 movs        r4, r0

; 244  :     PVOID pReturn = NULL ;
; 245  :     ((CStaticContainer *)this)->Lock();

  0000c	1284002c	 addne       r0, r4, #0x2C
  00010	03a00000	 moveq       r0, #0
  00014	e3a06000	 mov         r6, #0
  00018	eb000000	 bl          EnterCriticalSection

; 246  :     if (stSize> m_dwMinSize) {

  0001c	e59430ac	 ldr         r3, [r4, #0xAC]
  00020	e1550003	 cmp         r5, r3
  00024	9a000002	 bls         |$LN4@AllocateBu|

; 247  :         DEBUGMSG(SDCARD_ZONE_WARN && m_dwMinSize!=0,(L"AllocateBusRequest Changed From %d, to %d",m_dwMinSize,stSize) );
; 248  :         DeleteAllTransferSpace();

  00028	e1a00004	 mov         r0, r4
  0002c	eb000000	 bl          |?DeleteAllTransferSpace@CSDHostContainer@@AAAXXZ|

; 249  :         m_dwMinSize= stSize;

  00030	e58450ac	 str         r5, [r4, #0xAC]
  00034		 |$LN4@AllocateBu|

; 250  :     }
; 251  :     if (m_pFreeBusRequestSpace==NULL) {

  00034	e59430a8	 ldr         r3, [r4, #0xA8]
  00038	e1b02003	 movs        r2, r3
  0003c	1a000010	 bne         |$LN15@AllocateBu|

; 252  :         m_pFreeBusRequestSpace =(PFREE_BUS_REQUEST_SPACE) malloc(sizeof(FREE_BUS_REQUEST_SPACE)+m_dwMinSize);

  00040	e59430ac	 ldr         r3, [r4, #0xAC]
  00044	e2830010	 add         r0, r3, #0x10
  00048	eb000000	 bl          malloc
  0004c	e3500000	 cmp         r0, #0
  00050	e58400a8	 str         r0, [r4, #0xA8]

; 253  :         if (m_pFreeBusRequestSpace) {

  00054	0a00000d	 beq         |$LN1@AllocateBu|

; 254  :             m_pFreeBusRequestSpace->dwFreeSpaceTag = BUS_REQUEST_FREE_SPACE_TAG;

  00058	e59f3044	 ldr         r3, [pc, #0x44]

; 255  :             m_pFreeBusRequestSpace->dwSpaceSize = m_dwMinSize;
; 256  :             m_pFreeBusRequestSpace->pNextFreeTransfer = NULL;

  0005c	e3a01000	 mov         r1, #0
  00060	e5803004	 str         r3, [r0, #4]
  00064	e59420a8	 ldr         r2, [r4, #0xA8]
  00068	e59430ac	 ldr         r3, [r4, #0xAC]
  0006c	e5823008	 str         r3, [r2, #8]
  00070	e59430a8	 ldr         r3, [r4, #0xA8]
  00074	e5831000	 str         r1, [r3]

; 257  :         }
; 258  :     }
; 259  :     if (m_pFreeBusRequestSpace) {

  00078	e59430a8	 ldr         r3, [r4, #0xA8]
  0007c	e1b02003	 movs        r2, r3
  00080	0a000002	 beq         |$LN1@AllocateBu|
  00084		 |$LN15@AllocateBu|

; 260  :         ASSERT(m_pFreeBusRequestSpace->dwFreeSpaceTag == BUS_REQUEST_FREE_SPACE_TAG);
; 261  :         ASSERT(m_pFreeBusRequestSpace->dwSpaceSize>=stSize);
; 262  :         pReturn = (PVOID)(m_pFreeBusRequestSpace+1);
; 263  :         m_pFreeBusRequestSpace = m_pFreeBusRequestSpace->pNextFreeTransfer ;

  00084	e5923000	 ldr         r3, [r2]
  00088	e2826010	 add         r6, r2, #0x10
  0008c	e58430a8	 str         r3, [r4, #0xA8]
  00090		 |$LN1@AllocateBu|

; 264  :     };
; 265  :     ((CStaticContainer *)this)->Unlock();

  00090	e284002c	 add         r0, r4, #0x2C
  00094	eb000000	 bl          LeaveCriticalSection

; 266  :     return pReturn;
; 267  : }

  00098	e1a00006	 mov         r0, r6
  0009c	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000a0	e12fff1e	 bx          lr
  000a4		 |$LN19@AllocateBu|
  000a4		 |$LN20@AllocateBu|
  000a4	daada5cc	 DCD         0xdaada5cc
  000a8		 |$M39486|

			 ENDP  ; |?AllocateBusRequestImp@CSDHostContainer@@AAAPAXI@Z|, CSDHostContainer::AllocateBusRequestImp

	EXPORT	|?GetSDHost@CSDHostContainer@@SAPAVCSDHost@@PAV2@@Z| ; CSDHostContainer::GetSDHost
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T39522| DCD	|$LN22@GetSDHost@2|
	DCD	0xc0001604

  00000			 AREA	 |.pdata|, PDATA
|$T39524| DCD	|$LN6@GetSDHost@2|
	DCD	0x40000401

  00000			 AREA	 |.xdata|, DATA
|$T39520| DCD	0x1
	DCD	|$LN10@GetSDHost@2|
	DCD	|$LN11@GetSDHost@2|
	DCD	|$LN6@GetSDHost@2|
	DCD	|$LN7@GetSDHost@2|
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T39520|

  00008		 |?GetSDHost@CSDHostContainer@@SAPAVCSDHost@@PAV2@@Z| PROC ; CSDHostContainer::GetSDHost

; 269  : {

  00008		 |$LN22@GetSDHost@2|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d5800	 stmdb       sp!, {r11, r12, lr}
  00010	e28db00c	 add         r11, sp, #0xC
  00014	e24dd008	 sub         sp, sp, #8
  00018		 |$LN20@GetSDHost@2|
  00018	e3500000	 cmp         r0, #0

; 270  :     DWORD dwIndex = MAXDWORD;

  0001c	e3e01000	 mvn         r1, #0

; 271  :     if (pUnknowHost) {

  00020	0a000007	 beq         |$LN12@GetSDHost@2|
  00024		 |$LN10@GetSDHost@2|

; 272  :         __try { dwIndex = pUnknowHost->GetIndex(); }

  00024	e590105c	 ldr         r1, [r0, #0x5C]
  00028	e50b1014	 str         r1, [r11, #-0x14]
  0002c		 |$LN11@GetSDHost@2|
  0002c	ea000004	 b           |$LN12@GetSDHost@2|
  00030		 |$LN7@GetSDHost@2|

; 274  :             dwIndex = MAXDWORD;

  00030	e3e01000	 mvn         r1, #0
  00034	e50b1014	 str         r1, [r11, #-0x14]
  00038	ea000001	 b           |$LN12@GetSDHost@2|
  0003c		 |$LN19@GetSDHost@2|

; 275  :         }
; 276  :     }
; 277  :     return GetSDHost(dwIndex);

  0003c	e51b0010	 ldr         r0, [r11, #-0x10]
  00040	ea000003	 b           |$LN3@GetSDHost@2|
  00044		 |$LN12@GetSDHost@2|
  00044	e59f3020	 ldr         r3, [pc, #0x20]
  00048	e5933000	 ldr         r3, [r3]
  0004c	e283002c	 add         r0, r3, #0x2C
  00050	eb000000	 bl          |?ObjectIndex@?$CStaticContainer@VCSDHost@@$0BA@@@QAAPAVCSDHost@@K@Z|
  00054		 |$LN3@GetSDHost@2|

; 278  :     
; 279  : }

  00054	e24bd00c	 sub         sp, r11, #0xC
  00058	e89d6800	 ldmia       sp, {r11, sp, lr}
  0005c	e12fff1e	 bx          lr

			 ENDP  ; |?GetSDHost@CSDHostContainer@@SAPAVCSDHost@@PAV2@@Z|, CSDHostContainer::GetSDHost

  00060		 |$LN6@GetSDHost@2|
  00060		 |$LN21@GetSDHost@2|

; 273  :         __except(SDProcessException(GetExceptionInformation())) {

  00060	e52de004	 str         lr, [sp, #-4]!
  00064		 |$LN9@GetSDHost@2|
  00064		 |$LN24@GetSDHost@2|
  00064	eb000000	 bl          SDProcessException
  00068		 |$LN8@GetSDHost@2|
  00068	e49df004	 ldr         pc, [sp], #4
  0006c		 |$LN26@GetSDHost@2|
  0006c		 |$LN27@GetSDHost@2|
  0006c	00000000	 DCD         |?g_pSdContainer@CSDHostContainer@@0PAV1@A|
  00070		 |$LN25@GetSDHost@2|
  00070		 |$LN23@GetSDHost@2|
	EXPORT	|?GetDeviceByDevice@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z| ; CSDHostContainer::GetDeviceByDevice
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T39555| DCD	|$LN14@GetDeviceB|
	DCD	0x40002401
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetDeviceByDevice@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z| PROC ; CSDHostContainer::GetDeviceByDevice

; 658  : {

  00000		 |$LN14@GetDeviceB|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M39552|
  00004	e1a05000	 mov         r5, r0

; 659  :     SDBUS_DEVICE_HANDLE deviceHandle;
; 660  :     deviceHandle.hValue = hDevice;
; 661  :     
; 662  :     CSDDevice * pReturn = NULL;
; 663  :     CSDHost *pHost = GetSDHost(deviceHandle.bit.sdBusIndex);

  00008	e59f307c	 ldr         r3, [pc, #0x7C]
  0000c	e205100f	 and         r1, r5, #0xF
  00010	e3a06000	 mov         r6, #0
  00014	e5933000	 ldr         r3, [r3]
  00018	e283002c	 add         r0, r3, #0x2C
  0001c	eb000000	 bl          |?ObjectIndex@?$CStaticContainer@VCSDHost@@$0BA@@@QAAPAVCSDHost@@K@Z|
  00020	e1a04000	 mov         r4, r0

; 664  :     if (hDevice!=NULL && deviceHandle.bit.sdF == 0xf) {

  00024	e3550000	 cmp         r5, #0
  00028	0a000014	 beq         |$LN2@GetDeviceB|
  0002c	e2053b3e	 and         r3, r5, #0x3E, 22
  00030	e3530b1e	 cmp         r3, #0x1E, 22
  00034	1a000011	 bne         |$LN2@GetDeviceB|

; 665  :         if (pHost) {

  00038	e3540000	 cmp         r4, #0
  0003c	0a00000f	 beq         |$LN2@GetDeviceB|

; 666  :             CSDSlot * pSlot = pHost->GetSlot(deviceHandle.bit.sdSlotIndex);

  00040	e5942068	 ldr         r2, [r4, #0x68]
  00044	e1a03c05	 mov         r3, r5, lsl #24
  00048	e1a03e23	 mov         r3, r3, lsr #28
  0004c	e1530002	 cmp         r3, r2
  00050	30843103	 addcc       r3, r4, r3, lsl #2
  00054	3593006c	 ldrcc       r0, [r3, #0x6C]
  00058	23a00000	 movcs       r0, #0

; 667  :             if (pSlot) {

  0005c	e3500000	 cmp         r0, #0
  00060	0a000004	 beq         |$LN1@GetDeviceB|

; 668  :                 pReturn = pSlot->GetFunctionDevice(deviceHandle.bit.sdFunctionIndex,deviceHandle.bit.sdRandamNumber);

  00064	e1a03a85	 mov         r3, r5, lsl #21
  00068	e1a01ea3	 mov         r1, r3, lsr #29
  0006c	e1a02825	 mov         r2, r5, lsr #16
  00070	eb000000	 bl          |?GetFunctionDevice@CSDSlot@@QAAPAVCSDDevice@@KK@Z|
  00074	e1a06000	 mov         r6, r0
  00078		 |$LN1@GetDeviceB|

; 669  :                 
; 670  :             }
; 671  :             pHost->DeRef();

  00078	e1a00004	 mov         r0, r4
  0007c	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  00080		 |$LN2@GetDeviceB|

; 672  :         }
; 673  :     }
; 674  :     return pReturn;
; 675  : }

  00080	e1a00006	 mov         r0, r6
  00084	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00088	e12fff1e	 bx          lr
  0008c		 |$LN15@GetDeviceB|
  0008c		 |$LN16@GetDeviceB|
  0008c	00000000	 DCD         |?g_pSdContainer@CSDHostContainer@@0PAV1@A|
  00090		 |$M39553|

			 ENDP  ; |?GetDeviceByDevice@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z|, CSDHostContainer::GetDeviceByDevice

	EXPORT	|?GetDeviceByRequest@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z| ; CSDHostContainer::GetDeviceByRequest
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T39582| DCD	|$LN15@GetDeviceB@2|
	DCD	0x40002301
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetDeviceByRequest@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z| PROC ; CSDHostContainer::GetDeviceByRequest

; 677  : {

  00000		 |$LN15@GetDeviceB@2|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M39579|
  00004	e1a05000	 mov         r5, r0

; 678  :     SDBUS_REQUEST_HANDLE requestHandle;
; 679  :     requestHandle.hValue = hRequest;
; 680  :     
; 681  :     CSDDevice * pReturn = NULL;
; 682  :     CSDHost *pHost = GetSDHost(requestHandle.bit.sdBusIndex);

  00008	e59f3078	 ldr         r3, [pc, #0x78]
  0000c	e205100f	 and         r1, r5, #0xF
  00010	e3a06000	 mov         r6, #0
  00014	e5933000	 ldr         r3, [r3]
  00018	e283002c	 add         r0, r3, #0x2C
  0001c	eb000000	 bl          |?ObjectIndex@?$CStaticContainer@VCSDHost@@$0BA@@@QAAPAVCSDHost@@K@Z|
  00020	e1a04000	 mov         r4, r0

; 683  :     if (hRequest!=NULL && requestHandle.bit.sd1f == 0x1f) {

  00024	e3550000	 cmp         r5, #0
  00028	0a000013	 beq         |$LN3@GetDeviceB@2|
  0002c	e2053b3e	 and         r3, r5, #0x3E, 22
  00030	e3530b3e	 cmp         r3, #0x3E, 22
  00034	1a000010	 bne         |$LN3@GetDeviceB@2|

; 684  :         if (pHost) {

  00038	e3540000	 cmp         r4, #0
  0003c	0a00000e	 beq         |$LN3@GetDeviceB@2|

; 685  :             CSDSlot * pSlot = pHost->GetSlot(requestHandle.bit.sdSlotIndex);

  00040	e5942068	 ldr         r2, [r4, #0x68]
  00044	e1a03c05	 mov         r3, r5, lsl #24
  00048	e1a03e23	 mov         r3, r3, lsr #28
  0004c	e1530002	 cmp         r3, r2
  00050	30843103	 addcc       r3, r4, r3, lsl #2
  00054	3593006c	 ldrcc       r0, [r3, #0x6C]
  00058	23a00000	 movcs       r0, #0

; 686  :             if (pSlot) {

  0005c	e3500000	 cmp         r0, #0
  00060	0a000003	 beq         |$LN2@GetDeviceB@2|

; 687  :                 pReturn = pSlot->GetFunctionDevice(requestHandle.bit.sdFunctionIndex);                

  00064	e1a03a85	 mov         r3, r5, lsl #21
  00068	e1a01ea3	 mov         r1, r3, lsr #29
  0006c	eb000000	 bl          |?GetFunctionDevice@CSDSlot@@QAAPAVCSDDevice@@K@Z|
  00070	e1a06000	 mov         r6, r0
  00074		 |$LN2@GetDeviceB@2|

; 688  :             }
; 689  :             pHost->DeRef();

  00074	e1a00004	 mov         r0, r4
  00078	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  0007c		 |$LN3@GetDeviceB@2|

; 690  :         }
; 691  :     }
; 692  :     else
; 693  :         ASSERT(FALSE);
; 694  :     return pReturn;
; 695  : }

  0007c	e1a00006	 mov         r0, r6
  00080	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00084	e12fff1e	 bx          lr
  00088		 |$LN16@GetDeviceB@2|
  00088		 |$LN17@GetDeviceB@2|
  00088	00000000	 DCD         |?g_pSdContainer@CSDHostContainer@@0PAV1@A|
  0008c		 |$M39580|

			 ENDP  ; |?GetDeviceByRequest@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z|, CSDHostContainer::GetDeviceByRequest

	EXPORT	|?AllocateBusRequest@CSDHostContainer@@SAPAXI@Z| ; CSDHostContainer::AllocateBusRequest

  00000			 AREA	 |.pdata|, PDATA
|$T39595| DCD	|$LN6@AllocateBu@2|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AllocateBusRequest@CSDHostContainer@@SAPAXI@Z| PROC ; CSDHostContainer::AllocateBusRequest

; 1029 : {

  00000		 |$LN6@AllocateBu@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M39592|
  00004	e1a01000	 mov         r1, r0

; 1030 :     PVOID pReturn = NULL;
; 1031 :     if (g_pSdContainer != NULL ) {

  00008	e59f3018	 ldr         r3, [pc, #0x18]
  0000c	e3a00000	 mov         r0, #0
  00010	e5933000	 ldr         r3, [r3]
  00014	e3530000	 cmp         r3, #0

; 1032 :         pReturn  = g_pSdContainer->AllocateBusRequestImp(stSize);

  00018	11a00003	 movne       r0, r3
  0001c	1b000000	 blne        |?AllocateBusRequestImp@CSDHostContainer@@AAAPAXI@Z|

; 1033 : #ifdef DEBUG
; 1034 :         if (pReturn){
; 1035 :             memset(pReturn,0xcc,stSize);
; 1036 :         }
; 1037 : #endif
; 1038 :     }
; 1039 :     return pReturn;
; 1040 : }

  00020	e49de004	 ldr         lr, [sp], #4
  00024	e12fff1e	 bx          lr
  00028		 |$LN7@AllocateBu@2|
  00028		 |$LN8@AllocateBu@2|
  00028	00000000	 DCD         |?g_pSdContainer@CSDHostContainer@@0PAV1@A|
  0002c		 |$M39593|

			 ENDP  ; |?AllocateBusRequest@CSDHostContainer@@SAPAXI@Z|, CSDHostContainer::AllocateBusRequest

	EXPORT	|?DriverInit@CSDHostContainer@@SAPAXPBG@Z| ; CSDHostContainer::DriverInit

  00000			 AREA	 |.pdata|, PDATA
|$T39616| DCD	|$LN12@DriverInit|
	DCD	0x40002601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DriverInit@CSDHostContainer@@SAPAXPBG@Z| PROC ; CSDHostContainer::DriverInit

; 1091 : {

  00000		 |$LN12@DriverInit|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M39613|
  00004	e1a04000	 mov         r4, r0

; 1092 :     if (g_pSdContainer == NULL ) {

  00008	e59f5084	 ldr         r5, [pc, #0x84]
  0000c	e5953000	 ldr         r3, [r5]
  00010	e3530000	 cmp         r3, #0
  00014	1a00001a	 bne         |$LN3@DriverInit|

; 1093 :         CSDHostContainer * pHostContainer = new CSDHostContainer(pszActiveKey);

  00018	e3a000b4	 mov         r0, #0xB4
  0001c	eb000000	 bl          |??2@YAPAXI@Z|
  00020	e3500000	 cmp         r0, #0
  00024	0a000003	 beq         |$LN6@DriverInit|
  00028	e1a01004	 mov         r1, r4
  0002c	eb000000	 bl          |??0CSDHostContainer@@QAA@PBG@Z|
  00030	e1a04000	 mov         r4, r0
  00034	ea000000	 b           |$LN7@DriverInit|
  00038		 |$LN6@DriverInit|
  00038	e3a04000	 mov         r4, #0
  0003c		 |$LN7@DriverInit|

; 1094 :         if (pHostContainer!=NULL && !pHostContainer->Init()) { // Failed during inti.

  0003c	e3540000	 cmp         r4, #0
  00040	0a00000d	 beq         |$LN2@DriverInit|
  00044	e5943000	 ldr         r3, [r4]
  00048	e1a00004	 mov         r0, r4
  0004c	e5933000	 ldr         r3, [r3]
  00050	e1a0e00f	 mov         lr, pc
  00054	e12fff13	 bx          r3
  00058	e3500000	 cmp         r0, #0
  0005c	1a000006	 bne         |$LN2@DriverInit|

; 1095 :             delete pHostContainer;

  00060	e5943000	 ldr         r3, [r4]
  00064	e3a01001	 mov         r1, #1
  00068	e1a00004	 mov         r0, r4
  0006c	e5933008	 ldr         r3, [r3, #8]
  00070	e1a0e00f	 mov         lr, pc
  00074	e12fff13	 bx          r3

; 1096 :             pHostContainer = NULL;

  00078	e3a04000	 mov         r4, #0
  0007c		 |$LN2@DriverInit|

; 1097 :         }
; 1098 :         g_pSdContainer = pHostContainer;

  0007c	e5854000	 str         r4, [r5]

; 1099 :         return ((PVOID)g_pSdContainer);

  00080	ea000000	 b           |$LN1@DriverInit|
  00084		 |$LN3@DriverInit|

; 1100 :     }
; 1101 :     else {
; 1102 :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDBusDriver: Init called more than once\n")));
; 1103 :         return NULL;

  00084	e3a04000	 mov         r4, #0
  00088		 |$LN1@DriverInit|

; 1104 :     }
; 1105 : }

  00088	e1a00004	 mov         r0, r4
  0008c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00090	e12fff1e	 bx          lr
  00094		 |$LN13@DriverInit|
  00094		 |$LN14@DriverInit|
  00094	00000000	 DCD         |?g_pSdContainer@CSDHostContainer@@0PAV1@A|
  00098		 |$M39614|

			 ENDP  ; |?DriverInit@CSDHostContainer@@SAPAXPBG@Z|, CSDHostContainer::DriverInit

	EXPORT	|?SDHCDAllocateContext__X@CSDHostContainer@@SAJKPAPAU_SDCARD_HC_CONTEXT@@@Z| ; CSDHostContainer::SDHCDAllocateContext__X

  00000			 AREA	 |.pdata|, PDATA
|$T39640| DCD	|$LN16@SDHCDAlloc|
	DCD	0x40002901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SDHCDAllocateContext__X@CSDHostContainer@@SAJKPAPAU_SDCARD_HC_CONTEXT@@@Z| PROC ; CSDHostContainer::SDHCDAllocateContext__X

; 1147 : {

  00000		 |$LN16@SDHCDAlloc|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M39637|
  00004	e1b05001	 movs        r5, r1
  00008	e1a04000	 mov         r4, r0

; 1148 :     // check parameters, at least one slot must be allocated
; 1149 :     if ((ppExternalHCContext == NULL) || (NumberOfSlots == 0)) {

  0000c	0a000021	 beq         |$LN4@SDHCDAlloc|
  00010	e3540000	 cmp         r4, #0
  00014	0a00001f	 beq         |$LN4@SDHCDAlloc|

; 1152 :     }
; 1153 :     CSDHost * pNewHost = new CSDHost(NumberOfSlots);

  00018	e3a000ac	 mov         r0, #0xAC
  0001c	eb000000	 bl          |??2@YAPAXI@Z|
  00020	e3500000	 cmp         r0, #0
  00024	0a000003	 beq         |$LN8@SDHCDAlloc|
  00028	e1a01004	 mov         r1, r4
  0002c	eb000000	 bl          |??0CSDHost@@QAA@K@Z|
  00030	e1a04000	 mov         r4, r0
  00034	ea000000	 b           |$LN9@SDHCDAlloc|
  00038		 |$LN8@SDHCDAlloc|
  00038	e3a04000	 mov         r4, #0
  0003c		 |$LN9@SDHCDAlloc|

; 1154 :     if (pNewHost && pNewHost->Init() && InsertSDHost(pNewHost)) {

  0003c	e3540000	 cmp         r4, #0
  00040	0a000014	 beq         |$LN4@SDHCDAlloc|
  00044	e5943000	 ldr         r3, [r4]
  00048	e1a00004	 mov         r0, r4
  0004c	e5933004	 ldr         r3, [r3, #4]
  00050	e1a0e00f	 mov         lr, pc
  00054	e12fff13	 bx          r3
  00058	e3500000	 cmp         r0, #0
  0005c	0a000007	 beq         |$LN3@SDHCDAlloc|
  00060	e1a00004	 mov         r0, r4
  00064	eb000000	 bl          |?InsertSDHost@CSDHostContainer@@SAPAVCSDHost@@PAV2@@Z|
  00068	e3500000	 cmp         r0, #0

; 1155 :         *ppExternalHCContext = pNewHost;

  0006c	12843008	 addne       r3, r4, #8
  00070	15853000	 strne       r3, [r5]

; 1156 :         return SD_API_STATUS_SUCCESS ;

  00074	13a00000	 movne       r0, #0

; 1161 :     }
; 1162 :     return SD_API_STATUS_INVALID_PARAMETER;
; 1163 : 
; 1164 : };

  00078	18bd4030	 ldmneia     sp!, {r4, r5, lr}
  0007c	112fff1e	 bxne        lr
  00080		 |$LN3@SDHCDAlloc|

; 1157 :     }
; 1158 :     else { 
; 1159 :         if (pNewHost)
; 1160 :             delete pNewHost;

  00080	e5943000	 ldr         r3, [r4]
  00084	e3a01001	 mov         r1, #1
  00088	e1a00004	 mov         r0, r4
  0008c	e5933000	 ldr         r3, [r3]
  00090	e1a0e00f	 mov         lr, pc
  00094	e12fff13	 bx          r3
  00098		 |$LN4@SDHCDAlloc|

; 1150 :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDHCDAllocateContext: invalid parameter \n")));
; 1151 :         return SD_API_STATUS_INVALID_PARAMETER;

  00098	e3a0011f	 mov         r0, #0x1F, 2

; 1161 :     }
; 1162 :     return SD_API_STATUS_INVALID_PARAMETER;
; 1163 : 
; 1164 : };

  0009c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000a0	e12fff1e	 bx          lr
  000a4		 |$M39638|

			 ENDP  ; |?SDHCDAllocateContext__X@CSDHostContainer@@SAJKPAPAU_SDCARD_HC_CONTEXT@@@Z|, CSDHostContainer::SDHCDAllocateContext__X

	EXPORT	|?SDHCDRegisterHostController__X@CSDHostContainer@@SAJPAU_SDCARD_HC_CONTEXT@@@Z| ; CSDHostContainer::SDHCDRegisterHostController__X
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T39661| DCD	|$LN14@SDHCDRegis|
	DCD	0x40001b01
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SDHCDRegisterHostController__X@CSDHostContainer@@SAJPAU_SDCARD_HC_CONTEXT@@@Z| PROC ; CSDHostContainer::SDHCDRegisterHostController__X

; 1179 : {

  00000		 |$LN14@SDHCDRegis|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M39658|
  00004	e1b04000	 movs        r4, r0

; 1180 :     CSDHost * pHost = GetSDHost((CSDHost *)pExternalHCContext);

  00008	12440008	 subne       r0, r4, #8
  0000c	03a00000	 moveq       r0, #0
  00010	eb000000	 bl          |?GetSDHost@CSDHostContainer@@SAPAVCSDHost@@PAV2@@Z|
  00014	e1b05000	 movs        r5, r0

; 1181 :     SD_API_STATUS status = SD_API_STATUS_UNSUCCESSFUL ;

  00018	e3a0610f	 mov         r6, #0xF, 2

; 1182 :     if (pHost) {

  0001c	0a00000f	 beq         |$LN3@SDHCDRegis|

; 1183 :         if (pExternalHCContext->dwVersion > SDCARD_HC_BUS_INTERFACE_VERSION)  {

  00020	e5943000	 ldr         r3, [r4]
  00024	e3530801	 cmp         r3, #1, 16
  00028	8a00000a	 bhi         |$LN1@SDHCDRegis|

; 1184 :             DEBUGMSG(SDCARD_ZONE_ERROR, 
; 1185 :                 (TEXT("SDBusDriver: Host controller interface version (%x) does not match bus driver (%x)\n"),
; 1186 :                 pExternalHCContext->dwVersion, SDCARD_HC_BUS_INTERFACE_VERSION));
; 1187 :         }
; 1188 :         else {
; 1189 :             BOOL fRet = pHost->Attach();
; 1190 :             ASSERT(fRet);
; 1191 :             status = pHost->InitHandler();

  0002c	e1a04005	 mov         r4, r5
  00030	e4943008	 ldr         r3, [r4], #8
  00034	e1a00005	 mov         r0, r5
  00038	e5933008	 ldr         r3, [r3, #8]
  0003c	e1a0e00f	 mov         lr, pc
  00040	e12fff13	 bx          r3
  00044	e595304c	 ldr         r3, [r5, #0x4C]
  00048	e1a00004	 mov         r0, r4
  0004c	e1a0e00f	 mov         lr, pc
  00050	e12fff13	 bx          r3
  00054	e1a06000	 mov         r6, r0
  00058		 |$LN1@SDHCDRegis|

; 1192 :         }
; 1193 :         pHost->DeRef();

  00058	e1a00005	 mov         r0, r5
  0005c	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  00060		 |$LN3@SDHCDRegis|

; 1194 :     }
; 1195 :     ASSERT(SD_API_SUCCESS(status));
; 1196 :     return status;
; 1197 : }

  00060	e1a00006	 mov         r0, r6
  00064	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00068	e12fff1e	 bx          lr
  0006c		 |$M39659|

			 ENDP  ; |?SDHCDRegisterHostController__X@CSDHostContainer@@SAJPAU_SDCARD_HC_CONTEXT@@@Z|, CSDHostContainer::SDHCDRegisterHostController__X

	EXPORT	|?SDHCDDeregisterHostController__X@CSDHostContainer@@SAJPAU_SDCARD_HC_CONTEXT@@@Z| ; CSDHostContainer::SDHCDDeregisterHostController__X
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T39690| DCD	|$LN17@SDHCDDereg|
	DCD	0x40001e01
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SDHCDDeregisterHostController__X@CSDHostContainer@@SAJPAU_SDCARD_HC_CONTEXT@@@Z| PROC ; CSDHostContainer::SDHCDDeregisterHostController__X

; 1211 : {

  00000		 |$LN17@SDHCDDereg|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M39687|
  00004	e3500000	 cmp         r0, #0

; 1212 :     SD_API_STATUS status = SD_API_STATUS_UNSUCCESSFUL;
; 1213 :     CSDHost * psdHost = GetSDHost((CSDHost *)pExternalHCContext);

  00008	12400008	 subne       r0, r0, #8
  0000c	03a00000	 moveq       r0, #0
  00010	e3a0410f	 mov         r4, #0xF, 2
  00014	eb000000	 bl          |?GetSDHost@CSDHostContainer@@SAPAVCSDHost@@PAV2@@Z|
  00018	e1b05000	 movs        r5, r0

; 1214 :     if (psdHost) {

  0001c	0a000011	 beq         |$LN2@SDHCDDereg|

; 1215 :         CSDHost * psdRemovedHost = RemoveSDHostBy(psdHost->GetIndex());

  00020	e59f304c	 ldr         r3, [pc, #0x4C]
  00024	e595105c	 ldr         r1, [r5, #0x5C]
  00028	e5933000	 ldr         r3, [r3]
  0002c	e283002c	 add         r0, r3, #0x2C
  00030	eb000000	 bl          |?RemoveObjectBy@?$CStaticContainer@VCSDHost@@$0BA@@@QAAPAVCSDHost@@K@Z|

; 1216 :         ASSERT(psdRemovedHost!=NULL);
; 1217 :         BOOL fRet = psdHost->Detach();
; 1218 :         ASSERT(fRet);
; 1219 :         status = psdHost->DeinitHandler();

  00034	e1a04005	 mov         r4, r5
  00038	e4943008	 ldr         r3, [r4], #8
  0003c	e1a00005	 mov         r0, r5
  00040	e593300c	 ldr         r3, [r3, #0xC]
  00044	e1a0e00f	 mov         lr, pc
  00048	e12fff13	 bx          r3
  0004c	e5953050	 ldr         r3, [r5, #0x50]
  00050	e1a00004	 mov         r0, r4
  00054	e1a0e00f	 mov         lr, pc
  00058	e12fff13	 bx          r3
  0005c	e1a04000	 mov         r4, r0

; 1220 :         psdHost->DeRef();

  00060	e1a00005	 mov         r0, r5
  00064	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  00068		 |$LN2@SDHCDDereg|

; 1221 :     }
; 1222 :     else {
; 1223 :         ASSERT(FALSE);
; 1224 :     }
; 1225 :     return status;
; 1226 : }

  00068	e1a00004	 mov         r0, r4
  0006c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00070	e12fff1e	 bx          lr
  00074		 |$LN18@SDHCDDereg|
  00074		 |$LN19@SDHCDDereg|
  00074	00000000	 DCD         |?g_pSdContainer@CSDHostContainer@@0PAV1@A|
  00078		 |$M39688|

			 ENDP  ; |?SDHCDDeregisterHostController__X@CSDHostContainer@@SAJPAU_SDCARD_HC_CONTEXT@@@Z|, CSDHostContainer::SDHCDDeregisterHostController__X

	EXPORT	|?SDHCDDeleteContext__X@CSDHostContainer@@SAXPAU_SDCARD_HC_CONTEXT@@@Z| ; CSDHostContainer::SDHCDDeleteContext__X
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T39711| DCD	|$LN12@SDHCDDelet|
	DCD	0x40001101
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SDHCDDeleteContext__X@CSDHostContainer@@SAXPAU_SDCARD_HC_CONTEXT@@@Z| PROC ; CSDHostContainer::SDHCDDeleteContext__X

; 1236 : {

  00000		 |$LN12@SDHCDDelet|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M39708|
  00004	e3500000	 cmp         r0, #0

; 1237 :     CSDHost * psdHost  = GetSDHost((CSDHost *)pExternalHCContext);

  00008	12400008	 subne       r0, r0, #8
  0000c	03a00000	 moveq       r0, #0
  00010	eb000000	 bl          |?GetSDHost@CSDHostContainer@@SAPAVCSDHost@@PAV2@@Z|
  00014	e1b04000	 movs        r4, r0

; 1238 :     if (psdHost) {

  00018	0a000006	 beq         |$LN1@SDHCDDelet|

; 1239 :         ASSERT(FALSE); // This should not happens because it has been deleted from container.
; 1240 :         CSDHost * psdRemovedHost = RemoveSDHostBy(psdHost->GetIndex());

  0001c	e59f301c	 ldr         r3, [pc, #0x1C]
  00020	e594105c	 ldr         r1, [r4, #0x5C]
  00024	e5933000	 ldr         r3, [r3]
  00028	e283002c	 add         r0, r3, #0x2C
  0002c	eb000000	 bl          |?RemoveObjectBy@?$CStaticContainer@VCSDHost@@$0BA@@@QAAPAVCSDHost@@K@Z|

; 1241 :         ASSERT(psdRemovedHost!=NULL);
; 1242 :         psdHost->DeRef();

  00030	e1a00004	 mov         r0, r4
  00034	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  00038		 |$LN1@SDHCDDelet|

; 1243 :     }
; 1244 : }

  00038	e8bd4010	 ldmia       sp!, {r4, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN13@SDHCDDelet|
  00040		 |$LN14@SDHCDDelet|
  00040	00000000	 DCD         |?g_pSdContainer@CSDHostContainer@@0PAV1@A|
  00044		 |$M39709|

			 ENDP  ; |?SDHCDDeleteContext__X@CSDHostContainer@@SAXPAU_SDCARD_HC_CONTEXT@@@Z|, CSDHostContainer::SDHCDDeleteContext__X

	EXPORT	|?SDHCDIndicateSlotStateChange__X@CSDHostContainer@@SAXPAU_SDCARD_HC_CONTEXT@@KW4_SD_SLOT_EVENT@@@Z| ; CSDHostContainer::SDHCDIndicateSlotStateChange__X
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T39740| DCD	|$LN19@SDHCDIndic|
	DCD	0x40001f01
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SDHCDIndicateSlotStateChange__X@CSDHostContainer@@SAXPAU_SDCARD_HC_CONTEXT@@KW4_SD_SLOT_EVENT@@@Z| PROC ; CSDHostContainer::SDHCDIndicateSlotStateChange__X

; 1261 : {

  00000		 |$LN19@SDHCDIndic|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M39737|
  00004	e1a07002	 mov         r7, r2
  00008	e1a06001	 mov         r6, r1
  0000c	e1b05000	 movs        r5, r0

; 1262 :     CSDHost * psdHost = GetSDHost((CSDHost *)pExternalHCContext);

  00010	12450008	 subne       r0, r5, #8
  00014	03a00000	 moveq       r0, #0
  00018	eb000000	 bl          |?GetSDHost@CSDHostContainer@@SAPAVCSDHost@@PAV2@@Z|
  0001c	e1b04000	 movs        r4, r0

; 1263 :     if (psdHost ) {

  00020	0a000013	 beq         |$LN4@SDHCDIndic|

; 1264 :         if ((CSDHost *) pExternalHCContext == psdHost ) {

  00024	e3550000	 cmp         r5, #0
  00028	12453008	 subne       r3, r5, #8
  0002c	03a03000	 moveq       r3, #0
  00030	e1530004	 cmp         r3, r4
  00034	1a00000c	 bne         |$LN2@SDHCDIndic|

; 1265 :             CSDSlot * psdSlot = psdHost->GetSlot(SlotNumber) ;

  00038	e5943068	 ldr         r3, [r4, #0x68]
  0003c	e1560003	 cmp         r6, r3
  00040	30843106	 addcc       r3, r4, r6, lsl #2
  00044	3593006c	 ldrcc       r0, [r3, #0x6C]

; 1266 :             if (psdHost->IsAttached() && psdSlot) {

  00048	e5943064	 ldr         r3, [r4, #0x64]
  0004c	23a00000	 movcs       r0, #0
  00050	e3530000	 cmp         r3, #0
  00054	13500000	 cmpne       r0, #0

; 1267 :                 psdSlot->SlotStateChange(Event);

  00058	15903000	 ldrne       r3, [r0]
  0005c	11a01007	 movne       r1, r7
  00060	15933020	 ldrne       r3, [r3, #0x20]
  00064	11a0e00f	 movne       lr, pc
  00068	112fff13	 bxne        r3
  0006c		 |$LN2@SDHCDIndic|

; 1268 :             }
; 1269 :         }
; 1270 :         else {
; 1271 :             ASSERT(FALSE);
; 1272 :         }
; 1273 :         psdHost->DeRef();

  0006c	e1a00004	 mov         r0, r4
  00070	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  00074		 |$LN4@SDHCDIndic|

; 1274 :     }
; 1275 : }

  00074	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00078	e12fff1e	 bx          lr
  0007c		 |$M39738|

			 ENDP  ; |?SDHCDIndicateSlotStateChange__X@CSDHostContainer@@SAXPAU_SDCARD_HC_CONTEXT@@KW4_SD_SLOT_EVENT@@@Z|, CSDHostContainer::SDHCDIndicateSlotStateChange__X

	EXPORT	|?SDHCDPowerUpDown__X@CSDHostContainer@@SAXPAU_SDCARD_HC_CONTEXT@@HHK@Z| ; CSDHostContainer::SDHCDPowerUpDown__X
	EXPORT	|??_C@_1GA@JBBACNBJ@?$AAS?$AAD?$AAB?$AAu?$AAs?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?3?$AA?5?$AAP?$AAa?$AAs?$AAs?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAS?$AAD?$AAC?$AAA@| [ DATA ] ; `string'
	IMPORT	|NKDbgPrintfW|
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T39768| DCD	|$LN20@SDHCDPower|
	DCD	0x40002801

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@JBBACNBJ@?$AAS?$AAD?$AAB?$AAu?$AAs?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?3?$AA?5?$AAP?$AAa?$AAs?$AAs?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAS?$AAD?$AAC?$AAA@| DCB "S"
	DCB	0x0, "D", 0x0, "B", 0x0, "u", 0x0, "s", 0x0, "D", 0x0, "r"
	DCB	0x0, "i", 0x0, "v", 0x0, "e", 0x0, "r", 0x0, ":", 0x0, " "
	DCB	0x0, "P", 0x0, "a", 0x0, "s", 0x0, "s", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l"
	DCB	0x0, "i", 0x0, "d", 0x0, " ", 0x0, "S", 0x0, "D", 0x0, "C"
	DCB	0x0, "A", 0x0, "R", 0x0, "D", 0x0, "_", 0x0, "H", 0x0, "C"
	DCB	0x0, "_", 0x0, "C", 0x0, "O", 0x0, "N", 0x0, "T", 0x0, "E"
	DCB	0x0, "X", 0x0, "T", 0x0, " ", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SDHCDPowerUpDown__X@CSDHostContainer@@SAXPAU_SDCARD_HC_CONTEXT@@HHK@Z| PROC ; CSDHostContainer::SDHCDPowerUpDown__X

; 1296 : {

  00000		 |$LN20@SDHCDPower|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M39765|
  00004	e1a05003	 mov         r5, r3
  00008	e1a07002	 mov         r7, r2
  0000c	e1a06001	 mov         r6, r1
  00010	e3500000	 cmp         r0, #0

; 1297 :     
; 1298 :     CSDHost * psdHost  = GetSDHost((CSDHost *)pExternalHCContext) ;

  00014	12400008	 subne       r0, r0, #8
  00018	03a00000	 moveq       r0, #0
  0001c	eb000000	 bl          |?GetSDHost@CSDHostContainer@@SAPAVCSDHost@@PAV2@@Z|
  00020	e1b04000	 movs        r4, r0

; 1299 :     if (psdHost ) {

  00024	0a000018	 beq         |$LN5@SDHCDPower|

; 1300 :         CSDSlot * psdSlot = psdHost->GetSlot(SlotIndex) ;

  00028	e5943068	 ldr         r3, [r4, #0x68]
  0002c	e1550003	 cmp         r5, r3
  00030	30843105	 addcc       r3, r4, r5, lsl #2
  00034	3593006c	 ldrcc       r0, [r3, #0x6C]

; 1301 :         if (psdHost->IsAttached() && psdSlot) {

  00038	e5943064	 ldr         r3, [r4, #0x64]
  0003c	23a00000	 movcs       r0, #0
  00040	e3530000	 cmp         r3, #0
  00044	0a00000c	 beq         |$LN2@SDHCDPower|
  00048	e3500000	 cmp         r0, #0
  0004c	0a00000a	 beq         |$LN2@SDHCDPower|

; 1302 :             if (PowerUp){
; 1303 :                 psdSlot->PowerUp();        

  00050	e5903000	 ldr         r3, [r0]
  00054	e3560000	 cmp         r6, #0
  00058	0a000003	 beq         |$LN3@SDHCDPower|
  0005c	e5933018	 ldr         r3, [r3, #0x18]
  00060	e1a0e00f	 mov         lr, pc
  00064	e12fff13	 bx          r3

; 1304 :             } else {

  00068	ea000003	 b           |$LN2@SDHCDPower|
  0006c		 |$LN3@SDHCDPower|

; 1305 :                 psdSlot->PowerDown(SlotKeepPower);

  0006c	e593301c	 ldr         r3, [r3, #0x1C]
  00070	e1a01007	 mov         r1, r7
  00074	e1a0e00f	 mov         lr, pc
  00078	e12fff13	 bx          r3
  0007c		 |$LN2@SDHCDPower|

; 1306 :             }
; 1307 :         }
; 1308 :         psdHost->DeRef();

  0007c	e1a00004	 mov         r0, r4
  00080	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|

; 1312 :         DEBUGCHK(FALSE);
; 1313 :         return;
; 1314 :     }
; 1315 : }

  00084	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00088	e12fff1e	 bx          lr
  0008c		 |$LN5@SDHCDPower|

; 1309 :     }
; 1310 :     else {
; 1311 :         RETAILMSG(1, (TEXT("SDBusDriver: Passed invalid SDCARD_HC_CONTEXT \n")));

  0008c	e59f0008	 ldr         r0, [pc, #8]
  00090	eb000000	 bl          NKDbgPrintfW

; 1312 :         DEBUGCHK(FALSE);
; 1313 :         return;
; 1314 :     }
; 1315 : }

  00094	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00098	e12fff1e	 bx          lr
  0009c		 |$LN21@SDHCDPower|
  0009c		 |$LN22@SDHCDPower|
  0009c	00000000	 DCD         |??_C@_1GA@JBBACNBJ@?$AAS?$AAD?$AAB?$AAu?$AAs?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AA?3?$AA?5?$AAP?$AAa?$AAs?$AAs?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAS?$AAD?$AAC?$AAA@|
  000a0		 |$M39766|

			 ENDP  ; |?SDHCDPowerUpDown__X@CSDHostContainer@@SAXPAU_SDCARD_HC_CONTEXT@@HHK@Z|, CSDHostContainer::SDHCDPowerUpDown__X

	EXPORT	|?SDHCDIndicateBusRequestComplete__X@CSDHostContainer@@SAXPAU_SDCARD_HC_CONTEXT@@PAU_SD_BUS_REQUEST@@J@Z| ; CSDHostContainer::SDHCDIndicateBusRequestComplete__X
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T39849| DCD	|$LN45@SDHCDIndic@2|
	DCD	0xc0003c05

  00000			 AREA	 |.pdata|, PDATA
|$T39851| DCD	|$LN13@SDHCDIndic@2|
	DCD	0x40000401

  00000			 AREA	 |.xdata|, DATA
|$T39847| DCD	0x1
	DCD	|$LN17@SDHCDIndic@2|
	DCD	|$LN18@SDHCDIndic@2|
	DCD	|$LN13@SDHCDIndic@2|
	DCD	|$LN14@SDHCDIndic@2|
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T39847|

  00008		 |?SDHCDIndicateBusRequestComplete__X@CSDHostContainer@@SAXPAU_SDCARD_HC_CONTEXT@@PAU_SD_BUS_REQUEST@@J@Z| PROC ; CSDHostContainer::SDHCDIndicateBusRequestComplete__X

; 1331 : {

  00008		 |$LN45@SDHCDIndic@2|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d0007	 stmdb       sp!, {r0 - r2}
  00010	e92d59f0	 stmdb       sp!, {r4 - r8, r11, r12, lr}
  00014	e28db020	 add         r11, sp, #0x20
  00018	e24dd00c	 sub         sp, sp, #0xC
  0001c		 |$LN43@SDHCDIndic@2|
  0001c	e1a08002	 mov         r8, r2
  00020	e58b8008	 str         r8, [r11, #8]
  00024	e3510000	 cmp         r1, #0
  00028	e1a07000	 mov         r7, r0
  0002c	e58b7000	 str         r7, [r11]

; 1332 :     CSDBusRequest * pBusRequest = (CSDBusRequest *) pRequest;

  00030	12415004	 subne       r5, r1, #4
  00034	03a05000	 moveq       r5, #0
  00038	e50b502c	 str         r5, [r11, #-0x2C]

; 1333 :     DWORD   dwSDHCIndex = MAXDWORD;

  0003c	e3e01000	 mvn         r1, #0

; 1334 :     DWORD   dwSlotIndex = MAXDWORD;

  00040	e1a06001	 mov         r6, r1
  00044	e50b1028	 str         r1, [r11, #-0x28]
  00048	e50b1024	 str         r1, [r11, #-0x24]

; 1335 :     BOOL    fResult = FALSE;
; 1336 :     if (pBusRequest) {

  0004c	e3550000	 cmp         r5, #0
  00050	0a00000d	 beq         |$LN19@SDHCDIndic@2|
  00054		 |$LN17@SDHCDIndic@2|

; 1337 :         __try {
; 1338 :             dwSDHCIndex = pBusRequest->GetDevice().GetSlot().GetHost().GetIndex();

  00054	e5952068	 ldr         r2, [r5, #0x68]
  00058	e5923438	 ldr         r3, [r2, #0x438]
  0005c	e593307c	 ldr         r3, [r3, #0x7C]
  00060	e593105c	 ldr         r1, [r3, #0x5C]
  00064	e50b1028	 str         r1, [r11, #-0x28]

; 1339 :             dwSlotIndex = pBusRequest->GetDevice().GetSlot().GetSlotIndex();

  00068	e5923438	 ldr         r3, [r2, #0x438]
  0006c	e5936080	 ldr         r6, [r3, #0x80]
  00070	e50b6024	 str         r6, [r11, #-0x24]
  00074		 |$LN18@SDHCDIndic@2|

; 1340 :         }

  00074	ea000004	 b           |$LN19@SDHCDIndic@2|
  00078		 |$LN14@SDHCDIndic@2|

; 1341 :         __except(EXCEPTION_EXECUTE_HANDLER)  {

  00078	e59b8008	 ldr         r8, [r11, #8]
  0007c	e59b7000	 ldr         r7, [r11]
  00080	e51b502c	 ldr         r5, [r11, #-0x2C]
  00084	e51b1028	 ldr         r1, [r11, #-0x28]
  00088	e51b6024	 ldr         r6, [r11, #-0x24]
  0008c		 |$LN19@SDHCDIndic@2|

; 1342 :         }
; 1343 :     }
; 1344 :     CSDHost * psdHost  = GetSDHost( dwSDHCIndex ) ;

  0008c	e59f3070	 ldr         r3, [pc, #0x70]
  00090	e5933000	 ldr         r3, [r3]
  00094	e283002c	 add         r0, r3, #0x2C
  00098	eb000000	 bl          |?ObjectIndex@?$CStaticContainer@VCSDHost@@$0BA@@@QAAPAVCSDHost@@K@Z|
  0009c	e1b04000	 movs        r4, r0

; 1345 :     if (psdHost && (PSDCARD_HC_CONTEXT)psdHost == pExternalHCContext) {

  000a0	0a00000e	 beq         |$LN2@SDHCDIndic@2|
  000a4	e2843008	 add         r3, r4, #8
  000a8	e1530007	 cmp         r3, r7
  000ac	1a00000b	 bne         |$LN2@SDHCDIndic@2|

; 1346 :         CSDSlot * psdSlot = psdHost->GetSlot(dwSlotIndex) ;

  000b0	e5943068	 ldr         r3, [r4, #0x68]
  000b4	e1560003	 cmp         r6, r3
  000b8	30843106	 addcc       r3, r4, r6, lsl #2
  000bc	3593006c	 ldrcc       r0, [r3, #0x6C]
  000c0	23a00000	 movcs       r0, #0

; 1347 :         if (psdSlot) {

  000c4	e3500000	 cmp         r0, #0

; 1348 :             fResult = psdSlot->CompleteRequestFromHC(pBusRequest, Status);

  000c8	15903000	 ldrne       r3, [r0]
  000cc	11a02008	 movne       r2, r8
  000d0	11a01005	 movne       r1, r5
  000d4	15933038	 ldrne       r3, [r3, #0x38]
  000d8	11a0e00f	 movne       lr, pc
  000dc	112fff13	 bxne        r3
  000e0		 |$LN2@SDHCDIndic@2|

; 1349 :         }
; 1350 :     }
; 1351 :     ASSERT(fResult);
; 1352 :     if (psdHost ) {

  000e0	e3540000	 cmp         r4, #0

; 1353 :         psdHost->DeRef();

  000e4	11a00004	 movne       r0, r4
  000e8	1b000000	 blne        |?DeRef@CRefObject@@QAAKXZ|
  000ec		 |$LN1@SDHCDIndic@2|

; 1354 :     }
; 1355 :     
; 1356 :     
; 1357 : }

  000ec	e24bd020	 sub         sp, r11, #0x20
  000f0	e89d69f0	 ldmia       sp, {r4 - r8, r11, sp, lr}
  000f4	e12fff1e	 bx          lr

			 ENDP  ; |?SDHCDIndicateBusRequestComplete__X@CSDHostContainer@@SAXPAU_SDCARD_HC_CONTEXT@@PAU_SD_BUS_REQUEST@@J@Z|, CSDHostContainer::SDHCDIndicateBusRequestComplete__X

  000f8		 |$LN13@SDHCDIndic@2|
  000f8		 |$LN44@SDHCDIndic@2|

; 1341 :         __except(EXCEPTION_EXECUTE_HANDLER)  {

  000f8	e52de004	 str         lr, [sp, #-4]!
  000fc		 |$LN16@SDHCDIndic@2|
  000fc		 |$LN47@SDHCDIndic@2|
  000fc	e3a00001	 mov         r0, #1
  00100		 |$LN15@SDHCDIndic@2|
  00100	e49df004	 ldr         pc, [sp], #4
  00104		 |$LN49@SDHCDIndic@2|
  00104		 |$LN50@SDHCDIndic@2|
  00104	00000000	 DCD         |?g_pSdContainer@CSDHostContainer@@0PAV1@A|
  00108		 |$LN48@SDHCDIndic@2|
  00108		 |$LN46@SDHCDIndic@2|
	EXPORT	|?SDHCDGetAndLockCurrentRequest__X@CSDHostContainer@@SAPAU_SD_BUS_REQUEST@@PAU_SDCARD_HC_CONTEXT@@K@Z| ; CSDHostContainer::SDHCDGetAndLockCurrentRequest__X
	IMPORT	|?SDHCGetAndLockCurrentRequest_I@CSDSlot@@QAAPAVCSDBusRequest@@XZ| ; CSDSlot::SDHCGetAndLockCurrentRequest_I
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T39908| DCD	|$LN37@SDHCDGetAn|
	DCD	0xc0003305

  00000			 AREA	 |.pdata|, PDATA
|$T39910| DCD	|$LN17@SDHCDGetAn|
	DCD	0x40000401

  00000			 AREA	 |.xdata|, DATA
|$T39906| DCD	0x1
	DCD	|$LN21@SDHCDGetAn|
	DCD	|$LN22@SDHCDGetAn|
	DCD	|$LN17@SDHCDGetAn|
	DCD	|$LN18@SDHCDGetAn|
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T39906|

  00008		 |?SDHCDGetAndLockCurrentRequest__X@CSDHostContainer@@SAPAU_SD_BUS_REQUEST@@PAU_SDCARD_HC_CONTEXT@@K@Z| PROC ; CSDHostContainer::SDHCDGetAndLockCurrentRequest__X

; 1374 : {

  00008		 |$LN37@SDHCDGetAn|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d0003	 stmdb       sp!, {r0, r1}
  00010	e92d58f0	 stmdb       sp!, {r4 - r7, r11, r12, lr}
  00014	e28db01c	 add         r11, sp, #0x1C
  00018	e24dd008	 sub         sp, sp, #8
  0001c		 |$LN35@SDHCDGetAn|
  0001c	e1a06001	 mov         r6, r1
  00020	e58b6004	 str         r6, [r11, #4]
  00024	e1b07000	 movs        r7, r0
  00028	e58b7000	 str         r7, [r11]

; 1375 :     DWORD   dwSDHCIndex = MAXDWORD;
; 1376 :     CSDBusRequest * pBusRequest = NULL;

  0002c	e3a05000	 mov         r5, #0
  00030	e3e01000	 mvn         r1, #0
  00034	e50b5020	 str         r5, [r11, #-0x20]
  00038	e50b1024	 str         r1, [r11, #-0x24]

; 1377 :     if (pExternalHCContext) {

  0003c	0a000009	 beq         |$LN23@SDHCDGetAn|
  00040		 |$LN21@SDHCDGetAn|

; 1378 :         __try {
; 1379 :             dwSDHCIndex =( (CSDHost *) pExternalHCContext)->GetIndex();

  00040	e5971054	 ldr         r1, [r7, #0x54]
  00044	e50b1024	 str         r1, [r11, #-0x24]
  00048		 |$LN22@SDHCDGetAn|

; 1380 :         }

  00048	ea000006	 b           |$LN23@SDHCDGetAn|
  0004c		 |$LN18@SDHCDGetAn|

; 1381 :         __except(EXCEPTION_EXECUTE_HANDLER)  {

  0004c	e59b6004	 ldr         r6, [r11, #4]
  00050	e59b7000	 ldr         r7, [r11]
  00054	e51b1024	 ldr         r1, [r11, #-0x24]
  00058	e51b5020	 ldr         r5, [r11, #-0x20]
  0005c	ea000001	 b           |$LN23@SDHCDGetAn|
  00060		 |$LN34@SDHCDGetAn|

; 1394 :     }
; 1395 :     return (pBusRequest!=NULL? (PSD_BUS_REQUEST)pBusRequest: NULL);

  00060	e51b0020	 ldr         r0, [r11, #-0x20]
  00064	ea000017	 b           |$LN15@SDHCDGetAn|
  00068		 |$LN23@SDHCDGetAn|

; 1382 :         }
; 1383 :     }
; 1384 :     CSDHost * psdHost  = GetSDHost( dwSDHCIndex ) ;

  00068	e59f3070	 ldr         r3, [pc, #0x70]
  0006c	e5933000	 ldr         r3, [r3]
  00070	e283002c	 add         r0, r3, #0x2C
  00074	eb000000	 bl          |?ObjectIndex@?$CStaticContainer@VCSDHost@@$0BA@@@QAAPAVCSDHost@@K@Z|
  00078	e1b04000	 movs        r4, r0

; 1385 :     if (psdHost && (PSDCARD_HC_CONTEXT)psdHost == pExternalHCContext) {

  0007c	0a00000b	 beq         |$LN2@SDHCDGetAn|
  00080	e2843008	 add         r3, r4, #8
  00084	e1530007	 cmp         r3, r7
  00088	1a000008	 bne         |$LN2@SDHCDGetAn|

; 1386 :         CSDSlot * psdSlot = psdHost->GetSlot(SlotIndex) ;

  0008c	e5943068	 ldr         r3, [r4, #0x68]
  00090	e1560003	 cmp         r6, r3
  00094	30843106	 addcc       r3, r4, r6, lsl #2
  00098	3593006c	 ldrcc       r0, [r3, #0x6C]
  0009c	23a00000	 movcs       r0, #0

; 1387 :         if (psdSlot) {

  000a0	e3500000	 cmp         r0, #0
  000a4	0a000001	 beq         |$LN2@SDHCDGetAn|

; 1388 :             pBusRequest = psdSlot->SDHCGetAndLockCurrentRequest_I();

  000a8	eb000000	 bl          |?SDHCGetAndLockCurrentRequest_I@CSDSlot@@QAAPAVCSDBusRequest@@XZ|
  000ac	e1a05000	 mov         r5, r0
  000b0		 |$LN2@SDHCDGetAn|

; 1389 :         }
; 1390 :     }
; 1391 :     //ASSERT(pBusRequest);
; 1392 :     if (psdHost ) {

  000b0	e3540000	 cmp         r4, #0

; 1393 :         psdHost->DeRef();

  000b4	11a00004	 movne       r0, r4
  000b8	1b000000	 blne        |?DeRef@CRefObject@@QAAKXZ|

; 1394 :     }
; 1395 :     return (pBusRequest!=NULL? (PSD_BUS_REQUEST)pBusRequest: NULL);

  000bc	e3550000	 cmp         r5, #0
  000c0	12850004	 addne       r0, r5, #4
  000c4	03a00000	 moveq       r0, #0
  000c8		 |$LN15@SDHCDGetAn|

; 1396 : }

  000c8	e24bd01c	 sub         sp, r11, #0x1C
  000cc	e89d68f0	 ldmia       sp, {r4 - r7, r11, sp, lr}
  000d0	e12fff1e	 bx          lr

			 ENDP  ; |?SDHCDGetAndLockCurrentRequest__X@CSDHostContainer@@SAPAU_SD_BUS_REQUEST@@PAU_SDCARD_HC_CONTEXT@@K@Z|, CSDHostContainer::SDHCDGetAndLockCurrentRequest__X

  000d4		 |$LN17@SDHCDGetAn|
  000d4		 |$LN36@SDHCDGetAn|

; 1381 :         __except(EXCEPTION_EXECUTE_HANDLER)  {

  000d4	e52de004	 str         lr, [sp, #-4]!
  000d8		 |$LN20@SDHCDGetAn|
  000d8		 |$LN39@SDHCDGetAn|
  000d8	e3a00001	 mov         r0, #1
  000dc		 |$LN19@SDHCDGetAn|
  000dc	e49df004	 ldr         pc, [sp], #4
  000e0		 |$LN41@SDHCDGetAn|
  000e0		 |$LN42@SDHCDGetAn|
  000e0	00000000	 DCD         |?g_pSdContainer@CSDHostContainer@@0PAV1@A|
  000e4		 |$LN40@SDHCDGetAn|
  000e4		 |$LN38@SDHCDGetAn|
	EXPORT	|?SDHCDUnlockRequest__X@CSDHostContainer@@SAXPAU_SDCARD_HC_CONTEXT@@PAU_SD_BUS_REQUEST@@@Z| ; CSDHostContainer::SDHCDUnlockRequest__X
	IMPORT	|?SDHCDUnlockRequest_I@CSDSlot@@QAAXPAU_SD_BUS_REQUEST@@@Z| ; CSDSlot::SDHCDUnlockRequest_I
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T39980| DCD	|$LN40@SDHCDUnloc|
	DCD	0xc0003305

  00000			 AREA	 |.pdata|, PDATA
|$T39982| DCD	|$LN15@SDHCDUnloc|
	DCD	0x40000401

  00000			 AREA	 |.xdata|, DATA
|$T39978| DCD	0x1
	DCD	|$LN19@SDHCDUnloc|
	DCD	|$LN20@SDHCDUnloc|
	DCD	|$LN15@SDHCDUnloc|
	DCD	|$LN16@SDHCDUnloc|
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T39978|

  00008		 |?SDHCDUnlockRequest__X@CSDHostContainer@@SAXPAU_SDCARD_HC_CONTEXT@@PAU_SD_BUS_REQUEST@@@Z| PROC ; CSDHostContainer::SDHCDUnlockRequest__X

; 1410 : {

  00008		 |$LN40@SDHCDUnloc|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d0003	 stmdb       sp!, {r0, r1}
  00010	e92d58f0	 stmdb       sp!, {r4 - r7, r11, r12, lr}
  00014	e28db01c	 add         r11, sp, #0x1C
  00018	e24dd008	 sub         sp, sp, #8
  0001c		 |$LN38@SDHCDUnloc|
  0001c	e1a06001	 mov         r6, r1
  00020	e58b6004	 str         r6, [r11, #4]
  00024	e1b07000	 movs        r7, r0
  00028	e58b7000	 str         r7, [r11]

; 1411 :     DWORD   dwSDHCIndex = MAXDWORD;

  0002c	e3e01000	 mvn         r1, #0

; 1412 :     DWORD   dwSlotIndex = MAXDWORD;

  00030	e1a05001	 mov         r5, r1
  00034	e50b1024	 str         r1, [r11, #-0x24]
  00038	e50b1020	 str         r1, [r11, #-0x20]

; 1413 :     BOOL    fSuccess = FALSE;
; 1414 :     if (pExternalHCContext) {

  0003c	0a00000d	 beq         |$LN21@SDHCDUnloc|
  00040		 |$LN19@SDHCDUnloc|

; 1415 :         __try {
; 1416 :             dwSDHCIndex =( (CSDHost *) pExternalHCContext)->GetIndex();

  00040	e5971054	 ldr         r1, [r7, #0x54]
  00044	e50b1024	 str         r1, [r11, #-0x24]

; 1417 :             dwSlotIndex = ((CSDBusRequest *)pRequest)->GetDevice().GetSlot().GetSlotIndex();

  00048	e3560000	 cmp         r6, #0
  0004c	12463004	 subne       r3, r6, #4
  00050	03a03000	 moveq       r3, #0
  00054	e5933068	 ldr         r3, [r3, #0x68]
  00058	e5933438	 ldr         r3, [r3, #0x438]
  0005c	e5935080	 ldr         r5, [r3, #0x80]
  00060	e50b5020	 str         r5, [r11, #-0x20]
  00064		 |$LN20@SDHCDUnloc|

; 1418 :         }

  00064	ea000003	 b           |$LN21@SDHCDUnloc|
  00068		 |$LN16@SDHCDUnloc|

; 1419 :         __except(EXCEPTION_EXECUTE_HANDLER)  {

  00068	e59b6004	 ldr         r6, [r11, #4]
  0006c	e59b7000	 ldr         r7, [r11]
  00070	e51b1024	 ldr         r1, [r11, #-0x24]
  00074	e51b5020	 ldr         r5, [r11, #-0x20]
  00078		 |$LN21@SDHCDUnloc|

; 1420 :         }
; 1421 :     }
; 1422 :     CSDHost * psdHost  = GetSDHost( dwSDHCIndex ) ;

  00078	e59f3060	 ldr         r3, [pc, #0x60]
  0007c	e5933000	 ldr         r3, [r3]
  00080	e283002c	 add         r0, r3, #0x2C
  00084	eb000000	 bl          |?ObjectIndex@?$CStaticContainer@VCSDHost@@$0BA@@@QAAPAVCSDHost@@K@Z|
  00088	e1b04000	 movs        r4, r0

; 1423 :     if (psdHost && (PSDCARD_HC_CONTEXT)psdHost == pExternalHCContext) {

  0008c	0a00000a	 beq         |$LN2@SDHCDUnloc|
  00090	e2843008	 add         r3, r4, #8
  00094	e1530007	 cmp         r3, r7
  00098	1a000007	 bne         |$LN2@SDHCDUnloc|

; 1424 :         CSDSlot * psdSlot = psdHost->GetSlot(dwSlotIndex) ;

  0009c	e5943068	 ldr         r3, [r4, #0x68]
  000a0	e1550003	 cmp         r5, r3
  000a4	30843105	 addcc       r3, r4, r5, lsl #2
  000a8	3593006c	 ldrcc       r0, [r3, #0x6C]
  000ac	23a00000	 movcs       r0, #0

; 1425 :         if (psdSlot) {

  000b0	e3500000	 cmp         r0, #0

; 1426 :             psdSlot->SDHCDUnlockRequest_I(pRequest) ;

  000b4	11a01006	 movne       r1, r6
  000b8	1b000000	 blne        |?SDHCDUnlockRequest_I@CSDSlot@@QAAXPAU_SD_BUS_REQUEST@@@Z|
  000bc		 |$LN2@SDHCDUnloc|

; 1427 :             fSuccess = TRUE;
; 1428 :         }
; 1429 :     }
; 1430 :     if (psdHost ) {

  000bc	e3540000	 cmp         r4, #0

; 1431 :         psdHost->DeRef();

  000c0	11a00004	 movne       r0, r4
  000c4	1b000000	 blne        |?DeRef@CRefObject@@QAAKXZ|
  000c8		 |$LN1@SDHCDUnloc|

; 1432 :     }
; 1433 :     ASSERT(fSuccess);
; 1434 : }

  000c8	e24bd01c	 sub         sp, r11, #0x1C
  000cc	e89d68f0	 ldmia       sp, {r4 - r7, r11, sp, lr}
  000d0	e12fff1e	 bx          lr

			 ENDP  ; |?SDHCDUnlockRequest__X@CSDHostContainer@@SAXPAU_SDCARD_HC_CONTEXT@@PAU_SD_BUS_REQUEST@@@Z|, CSDHostContainer::SDHCDUnlockRequest__X

  000d4		 |$LN15@SDHCDUnloc|
  000d4		 |$LN39@SDHCDUnloc|

; 1419 :         __except(EXCEPTION_EXECUTE_HANDLER)  {

  000d4	e52de004	 str         lr, [sp, #-4]!
  000d8		 |$LN18@SDHCDUnloc|
  000d8		 |$LN42@SDHCDUnloc|
  000d8	e3a00001	 mov         r0, #1
  000dc		 |$LN17@SDHCDUnloc|
  000dc	e49df004	 ldr         pc, [sp], #4
  000e0		 |$LN44@SDHCDUnloc|
  000e0		 |$LN45@SDHCDUnloc|
  000e0	00000000	 DCD         |?g_pSdContainer@CSDHostContainer@@0PAV1@A|
  000e4		 |$LN43@SDHCDUnloc|
  000e4		 |$LN41@SDHCDUnloc|
	EXPORT	|?SDRegisterClient__X@@YAJPAX0PAU_SDCARD_CLIENT_REGISTRATION_INFO@@@Z| ; SDRegisterClient__X
	IMPORT	|?RegisterClient@CSDDevice@@QAAJPAX0PAU_SDCARD_CLIENT_REGISTRATION_INFO@@@Z| ; CSDDevice::RegisterClient

  00000			 AREA	 |.pdata|, PDATA
|$T40016| DCD	|$LN18@SDRegister|
	DCD	0xc0001e04

  00000			 AREA	 |.pdata|, PDATA
|$T40018| DCD	|$LN6@SDRegister|
	DCD	0x40000301

  00000			 AREA	 |.xdata|, DATA
|$T40014| DCD	0x1
	DCD	|$LN10@SDRegister|
	DCD	|$LN11@SDRegister|
	DCD	|$LN6@SDRegister|
	DCD	|$LN7@SDRegister|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T40014|

  00008		 |?SDRegisterClient__X@@YAJPAX0PAU_SDCARD_CLIENT_REGISTRATION_INFO@@@Z| PROC ; SDRegisterClient__X

; 1449 : {

  00008		 |$LN18@SDRegister|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d58f0	 stmdb       sp!, {r4 - r7, r11, r12, lr}
  00010	e28db01c	 add         r11, sp, #0x1C
  00014	e24dd008	 sub         sp, sp, #8
  00018		 |$LN16@SDRegister|
  00018	e1a06002	 mov         r6, r2
  0001c	e1a07001	 mov         r7, r1

; 1450 :     SD_API_STATUS   status = SD_API_STATUS_INVALID_PARAMETER;  // intermediate status
; 1451 :     CSDDevice *     pDevice  = CSDHostContainer::GetDeviceByDevice(hDevice);

  00020	e3a0411f	 mov         r4, #0x1F, 2
  00024	eb000000	 bl          |?GetDeviceByDevice@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z|
  00028	e1b05000	 movs        r5, r0
  0002c	e50b5020	 str         r5, [r11, #-0x20]

; 1452 :     if (pDevice) {

  00030	0a00000e	 beq         |$LN2@SDRegister|
  00034		 |$LN10@SDRegister|

; 1453 :         __try {
; 1454 :             status = pDevice->RegisterClient(NULL,pDeviceContext, pInfo);

  00034	e1a03006	 mov         r3, r6
  00038	e1a02007	 mov         r2, r7
  0003c	e3a01000	 mov         r1, #0
  00040	e1a00005	 mov         r0, r5
  00044	eb000000	 bl          |?RegisterClient@CSDDevice@@QAAJPAX0PAU_SDCARD_CLIENT_REGISTRATION_INFO@@@Z|
  00048	e1a04000	 mov         r4, r0
  0004c	e50b4024	 str         r4, [r11, #-0x24]
  00050		 |$LN11@SDRegister|

; 1455 :         }

  00050	ea000002	 b           |$LN12@SDRegister|
  00054		 |$LN7@SDRegister|

; 1457 :             status = SD_API_STATUS_ACCESS_VIOLATION;

  00054	e3a04117	 mov         r4, #0x17, 2
  00058	e50b4024	 str         r4, [r11, #-0x24]
  0005c	e51b5020	 ldr         r5, [r11, #-0x20]
  00060		 |$LN12@SDRegister|

; 1458 :         }
; 1459 :         pDevice->DeRef();

  00060	e1a00005	 mov         r0, r5
  00064	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  00068	ea000000	 b           |$LN2@SDRegister|
  0006c		 |$LN15@SDRegister|

; 1460 :     }
; 1461 :     DEBUGMSG(SDCARD_ZONE_ERROR && !SD_API_SUCCESS(status), (TEXT("SDRegisterClient: Failed to register client 0x%08X \n"),status));
; 1462 :     return status;

  0006c	e51b4020	 ldr         r4, [r11, #-0x20]

; 1458 :         }
; 1459 :         pDevice->DeRef();

  00070		 |$LN2@SDRegister|

; 1463 : }

  00070	e1a00004	 mov         r0, r4
  00074	e24bd01c	 sub         sp, r11, #0x1C
  00078	e89d68f0	 ldmia       sp, {r4 - r7, r11, sp, lr}
  0007c	e12fff1e	 bx          lr

			 ENDP  ; |?SDRegisterClient__X@@YAJPAX0PAU_SDCARD_CLIENT_REGISTRATION_INFO@@@Z|, SDRegisterClient__X

  00080		 |$LN6@SDRegister|
  00080		 |$LN17@SDRegister|

; 1456 :         __except (SDProcessException(GetExceptionInformation())) {

  00080	e52de004	 str         lr, [sp, #-4]!
  00084		 |$LN9@SDRegister|
  00084		 |$LN20@SDRegister|
  00084	eb000000	 bl          SDProcessException
  00088		 |$LN8@SDRegister|
  00088	e49df004	 ldr         pc, [sp], #4
  0008c		 |$LN21@SDRegister|
  0008c		 |$LN19@SDRegister|
	EXPORT	|?SDSynchronousBusRequest__X@@YAJPAXEKW4SD_TRANSFER_CLASS@@W4_SD_RESPONSE_TYPE@@PAU_SD_COMMAND_RESPONSE@@KKPAEKKPAU__PHYS_BUFF_LIST@@@Z| ; SDSynchronousBusRequest__X

  00000			 AREA	 |.pdata|, PDATA
|$T40051| DCD	|$LN18@SDSynchron|
	DCD	0xc0003404

  00000			 AREA	 |.pdata|, PDATA
|$T40053| DCD	|$LN6@SDSynchron|
	DCD	0x40000502

  00000			 AREA	 |.xdata|, DATA
|$T40049| DCD	0x1
	DCD	|$LN10@SDSynchron|
	DCD	|$LN11@SDSynchron|
	DCD	|$LN6@SDSynchron|
	DCD	|$LN7@SDSynchron|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T40049|

  00008		 |?SDSynchronousBusRequest__X@@YAJPAXEKW4SD_TRANSFER_CLASS@@W4_SD_RESPONSE_TYPE@@PAU_SD_COMMAND_RESPONSE@@KKPAEKKPAU__PHYS_BUFF_LIST@@@Z| PROC ; SDSynchronousBusRequest__X

; 1494 : {

  00008		 |$LN18@SDSynchron|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d5ff0	 stmdb       sp!, {r4 - r12, lr}
  00010	e28db028	 add         r11, sp, #0x28
  00014	e24dd03c	 sub         sp, sp, #0x3C
  00018		 |$LN16@SDSynchron|
  00018	e50b3040	 str         r3, [r11, #-0x40]
  0001c	e50b203c	 str         r2, [r11, #-0x3C]
  00020	e54b1044	 strb        r1, [r11, #-0x44]

; 1495 :     SD_API_STATUS   status = SD_API_STATUS_INVALID_PARAMETER;  // intermediate status
; 1496 :     CSDDevice *     pDevice = CSDHostContainer::GetDeviceByDevice((HANDLE)hDevice);

  00024	e3a0411f	 mov         r4, #0x1F, 2
  00028	eb000000	 bl          |?GetDeviceByDevice@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z|
  0002c	e3500000	 cmp         r0, #0
  00030	e50b0034	 str         r0, [r11, #-0x34]
  00034	e50b002c	 str         r0, [r11, #-0x2C]

; 1497 :     if (pDevice) {

  00038	0a000022	 beq         |$LN2@SDSynchron|
  0003c		 |$LN10@SDSynchron|

; 1498 :         __try {
; 1499 :             status = pDevice->SDSynchronousBusRequest_I(Command,Argument,TransferClass,ResponseType,pResponse,NumBlocks,BlockSize,pBuffer,Flags,cbSize,pPhysBuffList);

  0003c	e590e000	 ldr         lr, [r0]
  00040	e59b401c	 ldr         r4, [r11, #0x1C]
  00044	e59b5018	 ldr         r5, [r11, #0x18]
  00048	e59b6014	 ldr         r6, [r11, #0x14]
  0004c	e59b7010	 ldr         r7, [r11, #0x10]
  00050	e59b800c	 ldr         r8, [r11, #0xC]
  00054	e59b9008	 ldr         r9, [r11, #8]
  00058	e59ba004	 ldr         r10, [r11, #4]
  0005c	e59e3014	 ldr         r3, [lr, #0x14]
  00060	e50b3038	 str         r3, [r11, #-0x38]
  00064	e51b3040	 ldr         r3, [r11, #-0x40]
  00068	e51b203c	 ldr         r2, [r11, #-0x3C]
  0006c	e55b1044	 ldrb        r1, [r11, #-0x44]
  00070	e58d401c	 str         r4, [sp, #0x1C]
  00074	e58d5018	 str         r5, [sp, #0x18]
  00078	e58d6014	 str         r6, [sp, #0x14]
  0007c	e58d7010	 str         r7, [sp, #0x10]
  00080	e58d800c	 str         r8, [sp, #0xC]
  00084	e58d9008	 str         r9, [sp, #8]
  00088	e58da004	 str         r10, [sp, #4]
  0008c	e59b4000	 ldr         r4, [r11]
  00090	e58d4000	 str         r4, [sp]
  00094	e51b4038	 ldr         r4, [r11, #-0x38]
  00098	e1a0e00f	 mov         lr, pc
  0009c	e12fff14	 bx          r4
  000a0	e1a04000	 mov         r4, r0
  000a4	e50b4030	 str         r4, [r11, #-0x30]
  000a8		 |$LN11@SDSynchron|

; 1500 :         }

  000a8	e51b0034	 ldr         r0, [r11, #-0x34]
  000ac	ea000002	 b           |$LN12@SDSynchron|
  000b0		 |$LN7@SDSynchron|

; 1502 :             status = SD_API_STATUS_ACCESS_VIOLATION;

  000b0	e3a04117	 mov         r4, #0x17, 2
  000b4	e50b4030	 str         r4, [r11, #-0x30]
  000b8	e51b002c	 ldr         r0, [r11, #-0x2C]
  000bc		 |$LN12@SDSynchron|

; 1503 :         }
; 1504 :         pDevice->DeRef();

  000bc	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  000c0	ea000000	 b           |$LN2@SDSynchron|
  000c4		 |$LN15@SDSynchron|

; 1505 :     }
; 1506 :     DEBUGMSG(SDCARD_ZONE_ERROR && !SD_API_SUCCESS(status), (TEXT("SDSynchronousBusRequest__X: Failed status 0x%08X \n"),status));
; 1507 :     return status;

  000c4	e51b402c	 ldr         r4, [r11, #-0x2C]

; 1503 :         }
; 1504 :         pDevice->DeRef();

  000c8		 |$LN2@SDSynchron|

; 1508 : }

  000c8	e1a00004	 mov         r0, r4
  000cc	e24bd028	 sub         sp, r11, #0x28
  000d0	e89d6ff0	 ldmia       sp, {r4 - r11, sp, lr}
  000d4	e12fff1e	 bx          lr

			 ENDP  ; |?SDSynchronousBusRequest__X@@YAJPAXEKW4SD_TRANSFER_CLASS@@W4_SD_RESPONSE_TYPE@@PAU_SD_COMMAND_RESPONSE@@KKPAEKKPAU__PHYS_BUFF_LIST@@@Z|, SDSynchronousBusRequest__X

  000d8		 |$LN6@SDSynchron|
  000d8		 |$LN17@SDSynchron|

; 1501 :         __except (SDProcessException(GetExceptionInformation())) {

  000d8	e52de004	 str         lr, [sp, #-4]!
  000dc	e24dd020	 sub         sp, sp, #0x20
  000e0		 |$LN9@SDSynchron|
  000e0		 |$LN20@SDSynchron|
  000e0	eb000000	 bl          SDProcessException
  000e4		 |$LN8@SDSynchron|
  000e4	e28dd020	 add         sp, sp, #0x20
  000e8	e49df004	 ldr         pc, [sp], #4
  000ec		 |$LN21@SDSynchron|
  000ec		 |$LN19@SDSynchron|
	EXPORT	|?SDBusRequest__X@@YAJPAXEKW4SD_TRANSFER_CLASS@@W4_SD_RESPONSE_TYPE@@KKPAEP6AX0PAU_SD_BUS_REQUEST@@0K@ZKPAPAXKKPAU__PHYS_BUFF_LIST@@@Z| ; SDBusRequest__X

  00000			 AREA	 |.pdata|, PDATA
|$T40086| DCD	|$LN18@SDBusReque|
	DCD	0xc0003804

  00000			 AREA	 |.pdata|, PDATA
|$T40088| DCD	|$LN6@SDBusReque|
	DCD	0x40000502

  00000			 AREA	 |.xdata|, DATA
|$T40084| DCD	0x1
	DCD	|$LN10@SDBusReque|
	DCD	|$LN11@SDBusReque|
	DCD	|$LN6@SDBusReque|
	DCD	|$LN7@SDBusReque|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T40084|

  00008		 |?SDBusRequest__X@@YAJPAXEKW4SD_TRANSFER_CLASS@@W4_SD_RESPONSE_TYPE@@KKPAEP6AX0PAU_SD_BUS_REQUEST@@0K@ZKPAPAXKKPAU__PHYS_BUFF_LIST@@@Z| PROC ; SDBusRequest__X

; 1542 : {

  00008		 |$LN18@SDBusReque|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d5ff0	 stmdb       sp!, {r4 - r12, lr}
  00010	e28db028	 add         r11, sp, #0x28
  00014	e24dd044	 sub         sp, sp, #0x44
  00018		 |$LN16@SDBusReque|
  00018	e50b3040	 str         r3, [r11, #-0x40]
  0001c	e50b203c	 str         r2, [r11, #-0x3C]
  00020	e54b1044	 strb        r1, [r11, #-0x44]

; 1543 :     SD_API_STATUS   status = SD_API_STATUS_INVALID_PARAMETER;  // intermediate status
; 1544 :     CSDDevice *     pDevice = CSDHostContainer::GetDeviceByDevice((HANDLE)hDevice);

  00024	e3a0411f	 mov         r4, #0x1F, 2
  00028	eb000000	 bl          |?GetDeviceByDevice@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z|
  0002c	e3500000	 cmp         r0, #0
  00030	e50b0034	 str         r0, [r11, #-0x34]
  00034	e50b002c	 str         r0, [r11, #-0x2C]

; 1545 :     if (pDevice) {

  00038	0a000026	 beq         |$LN2@SDBusReque|
  0003c		 |$LN10@SDBusReque|

; 1546 :         __try {
; 1547 :             status = pDevice->SDBusRequest_I(Command,Argument,TransferClass,ResponseType,NumBlocks,BlockSize,pBuffer,
; 1548 :                     pCallback,RequestParam,phRequest,Flags,cbSize,pPhysBuffList);

  0003c	e590e000	 ldr         lr, [r0]
  00040	e59b4024	 ldr         r4, [r11, #0x24]
  00044	e59b5020	 ldr         r5, [r11, #0x20]
  00048	e59b601c	 ldr         r6, [r11, #0x1C]
  0004c	e59b7018	 ldr         r7, [r11, #0x18]
  00050	e59b8014	 ldr         r8, [r11, #0x14]
  00054	e59b9010	 ldr         r9, [r11, #0x10]
  00058	e59ba00c	 ldr         r10, [r11, #0xC]
  0005c	e59e3018	 ldr         r3, [lr, #0x18]
  00060	e50b3038	 str         r3, [r11, #-0x38]
  00064	e51b3040	 ldr         r3, [r11, #-0x40]
  00068	e51b203c	 ldr         r2, [r11, #-0x3C]
  0006c	e55b1044	 ldrb        r1, [r11, #-0x44]
  00070	e58d4024	 str         r4, [sp, #0x24]
  00074	e58d5020	 str         r5, [sp, #0x20]
  00078	e58d601c	 str         r6, [sp, #0x1C]
  0007c	e58d7018	 str         r7, [sp, #0x18]
  00080	e58d8014	 str         r8, [sp, #0x14]
  00084	e58d9010	 str         r9, [sp, #0x10]
  00088	e58da00c	 str         r10, [sp, #0xC]
  0008c	e59b4008	 ldr         r4, [r11, #8]
  00090	e58d4008	 str         r4, [sp, #8]
  00094	e59b4004	 ldr         r4, [r11, #4]
  00098	e58d4004	 str         r4, [sp, #4]
  0009c	e59b4000	 ldr         r4, [r11]
  000a0	e58d4000	 str         r4, [sp]
  000a4	e51b4038	 ldr         r4, [r11, #-0x38]
  000a8	e1a0e00f	 mov         lr, pc
  000ac	e12fff14	 bx          r4
  000b0	e1a04000	 mov         r4, r0
  000b4	e50b4030	 str         r4, [r11, #-0x30]
  000b8		 |$LN11@SDBusReque|

; 1549 :         }

  000b8	e51b0034	 ldr         r0, [r11, #-0x34]
  000bc	ea000002	 b           |$LN12@SDBusReque|
  000c0		 |$LN7@SDBusReque|

; 1551 :             status = SD_API_STATUS_ACCESS_VIOLATION;

  000c0	e3a04117	 mov         r4, #0x17, 2
  000c4	e50b4030	 str         r4, [r11, #-0x30]
  000c8	e51b002c	 ldr         r0, [r11, #-0x2C]
  000cc		 |$LN12@SDBusReque|

; 1552 :         }
; 1553 :         pDevice->DeRef();

  000cc	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  000d0	ea000000	 b           |$LN2@SDBusReque|
  000d4		 |$LN15@SDBusReque|

; 1554 :     }
; 1555 :     DEBUGMSG(SDCARD_ZONE_ERROR && !SD_API_SUCCESS(status), (TEXT("SDBusRequest__X: Failed status 0x%08X \n"),status));
; 1556 :     return status;

  000d4	e51b402c	 ldr         r4, [r11, #-0x2C]

; 1552 :         }
; 1553 :         pDevice->DeRef();

  000d8		 |$LN2@SDBusReque|

; 1557 : }

  000d8	e1a00004	 mov         r0, r4
  000dc	e24bd028	 sub         sp, r11, #0x28
  000e0	e89d6ff0	 ldmia       sp, {r4 - r11, sp, lr}
  000e4	e12fff1e	 bx          lr

			 ENDP  ; |?SDBusRequest__X@@YAJPAXEKW4SD_TRANSFER_CLASS@@W4_SD_RESPONSE_TYPE@@KKPAEP6AX0PAU_SD_BUS_REQUEST@@0K@ZKPAPAXKKPAU__PHYS_BUFF_LIST@@@Z|, SDBusRequest__X

  000e8		 |$LN6@SDBusReque|
  000e8		 |$LN17@SDBusReque|

; 1550 :         __except (SDProcessException(GetExceptionInformation())) {

  000e8	e52de004	 str         lr, [sp, #-4]!
  000ec	e24dd028	 sub         sp, sp, #0x28
  000f0		 |$LN9@SDBusReque|
  000f0		 |$LN20@SDBusReque|
  000f0	eb000000	 bl          SDProcessException
  000f4		 |$LN8@SDBusReque|
  000f4	e28dd028	 add         sp, sp, #0x28
  000f8	e49df004	 ldr         pc, [sp], #4
  000fc		 |$LN21@SDBusReque|
  000fc		 |$LN19@SDBusReque|
	EXPORT	|?SDFreeBusRequest__X@@YAXPAX@Z|	; SDFreeBusRequest__X

  00000			 AREA	 |.pdata|, PDATA
|$T40101| DCD	|$LN7@SDFreeBusR|
	DCD	0x40000f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SDFreeBusRequest__X@@YAXPAX@Z| PROC	; SDFreeBusRequest__X

; 1568 : {

  00000		 |$LN7@SDFreeBusR|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M40098|
  00004	e1a04000	 mov         r4, r0

; 1569 :     CSDDevice *     pDevice = CSDHostContainer::GetDeviceByRequest((HANDLE)hRequest);

  00008	eb000000	 bl          |?GetDeviceByRequest@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z|
  0000c	e1b05000	 movs        r5, r0

; 1570 :     if (pDevice) {

  00010	0a000007	 beq         |$LN2@SDFreeBusR|

; 1571 :         pDevice->SDFreeBusRequest_I((HANDLE)hRequest);

  00014	e5953000	 ldr         r3, [r5]
  00018	e1a01004	 mov         r1, r4
  0001c	e1a00005	 mov         r0, r5
  00020	e593301c	 ldr         r3, [r3, #0x1C]
  00024	e1a0e00f	 mov         lr, pc
  00028	e12fff13	 bx          r3

; 1572 :         pDevice->DeRef();

  0002c	e1a00005	 mov         r0, r5
  00030	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  00034		 |$LN2@SDFreeBusR|

; 1573 :     }
; 1574 :     else
; 1575 :         DEBUGMSG(SDCARD_ZONE_ERROR , (TEXT("SDFreeBusRequest__X: Failed:wrong Handle 0x%08X \n"),hRequest));
; 1576 : }

  00034	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$M40099|

			 ENDP  ; |?SDFreeBusRequest__X@@YAXPAX@Z|, SDFreeBusRequest__X

	EXPORT	|?SDCardInfoQuery__X@@YAJPAXW4SD_INFO_TYPE@@0K@Z| ; SDCardInfoQuery__X

  00000			 AREA	 |.pdata|, PDATA
|$T40130| DCD	|$LN18@SDCardInfo|
	DCD	0xc0002204

  00000			 AREA	 |.pdata|, PDATA
|$T40132| DCD	|$LN6@SDCardInfo|
	DCD	0x40000301

  00000			 AREA	 |.xdata|, DATA
|$T40128| DCD	0x1
	DCD	|$LN10@SDCardInfo|
	DCD	|$LN11@SDCardInfo|
	DCD	|$LN6@SDCardInfo|
	DCD	|$LN7@SDCardInfo|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T40128|

  00008		 |?SDCardInfoQuery__X@@YAJPAXW4SD_INFO_TYPE@@0K@Z| PROC ; SDCardInfoQuery__X

; 1590 : {

  00008		 |$LN18@SDCardInfo|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d59f0	 stmdb       sp!, {r4 - r8, r11, r12, lr}
  00010	e28db020	 add         r11, sp, #0x20
  00014	e24dd008	 sub         sp, sp, #8
  00018		 |$LN16@SDCardInfo|
  00018	e1a06003	 mov         r6, r3
  0001c	e1a07002	 mov         r7, r2
  00020	e1a08001	 mov         r8, r1

; 1591 : 
; 1592 :     SD_API_STATUS   status = SD_API_STATUS_INVALID_PARAMETER;  // intermediate status
; 1593 :     CSDDevice *     pDevice = CSDHostContainer::GetDeviceByDevice((HANDLE)hDevice);

  00024	e3a0411f	 mov         r4, #0x1F, 2
  00028	eb000000	 bl          |?GetDeviceByDevice@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z|
  0002c	e1b05000	 movs        r5, r0
  00030	e50b5024	 str         r5, [r11, #-0x24]

; 1594 :     if (pDevice) {

  00034	0a000011	 beq         |$LN2@SDCardInfo|
  00038		 |$LN10@SDCardInfo|

; 1595 :         __try {
; 1596 :             status = pDevice->SDCardInfoQuery_I(InfoType,pCardInfo,StructureSize);

  00038	e595e000	 ldr         lr, [r5]
  0003c	e1a03006	 mov         r3, r6
  00040	e1a02007	 mov         r2, r7
  00044	e59e4034	 ldr         r4, [lr, #0x34]
  00048	e1a01008	 mov         r1, r8
  0004c	e1a00005	 mov         r0, r5
  00050	e1a0e00f	 mov         lr, pc
  00054	e12fff14	 bx          r4
  00058	e1a04000	 mov         r4, r0
  0005c	e50b4028	 str         r4, [r11, #-0x28]
  00060		 |$LN11@SDCardInfo|

; 1597 :         }

  00060	ea000002	 b           |$LN12@SDCardInfo|
  00064		 |$LN7@SDCardInfo|

; 1599 :             status = SD_API_STATUS_ACCESS_VIOLATION;

  00064	e3a04117	 mov         r4, #0x17, 2
  00068	e50b4028	 str         r4, [r11, #-0x28]
  0006c	e51b5024	 ldr         r5, [r11, #-0x24]
  00070		 |$LN12@SDCardInfo|

; 1600 :         }
; 1601 :         pDevice->DeRef();

  00070	e1a00005	 mov         r0, r5
  00074	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  00078	ea000000	 b           |$LN2@SDCardInfo|
  0007c		 |$LN15@SDCardInfo|

; 1602 :     }
; 1603 :     DEBUGMSG(SDCARD_ZONE_ERROR && !SD_API_SUCCESS(status), (TEXT("SDCardInfoQuery__X: Failed status 0x%08X \n"),status));
; 1604 :     return status;

  0007c	e51b4024	 ldr         r4, [r11, #-0x24]

; 1600 :         }
; 1601 :         pDevice->DeRef();

  00080		 |$LN2@SDCardInfo|

; 1605 : };

  00080	e1a00004	 mov         r0, r4
  00084	e24bd020	 sub         sp, r11, #0x20
  00088	e89d69f0	 ldmia       sp, {r4 - r8, r11, sp, lr}
  0008c	e12fff1e	 bx          lr

			 ENDP  ; |?SDCardInfoQuery__X@@YAJPAXW4SD_INFO_TYPE@@0K@Z|, SDCardInfoQuery__X

  00090		 |$LN6@SDCardInfo|
  00090		 |$LN17@SDCardInfo|

; 1598 :         __except (SDProcessException(GetExceptionInformation())) {

  00090	e52de004	 str         lr, [sp, #-4]!
  00094		 |$LN9@SDCardInfo|
  00094		 |$LN20@SDCardInfo|
  00094	eb000000	 bl          SDProcessException
  00098		 |$LN8@SDCardInfo|
  00098	e49df004	 ldr         pc, [sp], #4
  0009c		 |$LN21@SDCardInfo|
  0009c		 |$LN19@SDCardInfo|
	EXPORT	|?SDReadWriteRegistersDirect__X@@YAJPAXW4SD_IO_TRANSFER_TYPE@@EKEPAEK@Z| ; SDReadWriteRegistersDirect__X
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sddevice.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T40174| DCD	|$LN24@SDReadWrit|
	DCD	0xc0003404

  00000			 AREA	 |.pdata|, PDATA
|$T40176| DCD	|$LN8@SDReadWrit|
	DCD	0x40000502

  00000			 AREA	 |.xdata|, DATA
|$T40172| DCD	0x1
	DCD	|$LN12@SDReadWrit|
	DCD	|$LN13@SDReadWrit|
	DCD	|$LN8@SDReadWrit|
	DCD	|$LN9@SDReadWrit|
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T40172|

  00008		 |?SDReadWriteRegistersDirect__X@@YAJPAXW4SD_IO_TRANSFER_TYPE@@EKEPAEK@Z| PROC ; SDReadWriteRegistersDirect__X

; 1632 : {

  00008		 |$LN24@SDReadWrit|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d5bf0	 stmdb       sp!, {r4 - r9, r11, r12, lr}
  00010	e28db024	 add         r11, sp, #0x24
  00014	e24dd010	 sub         sp, sp, #0x10
  00018		 |$LN22@SDReadWrit|
  00018	e1a08003	 mov         r8, r3
  0001c	e1a05002	 mov         r5, r2
  00020	e1a09001	 mov         r9, r1

; 1633 :     SD_API_STATUS   status = SD_API_STATUS_INVALID_PARAMETER;  // intermediate status
; 1634 :     CSDDevice *     pDevice = CSDHostContainer::GetDeviceByDevice((HANDLE)hDevice);

  00024	e3a0411f	 mov         r4, #0x1F, 2
  00028	eb000000	 bl          |?GetDeviceByDevice@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z|
  0002c	e1b07000	 movs        r7, r0
  00030	e50b702c	 str         r7, [r11, #-0x2C]

; 1635 :     if (pDevice) {

  00034	0a000023	 beq         |$LN4@SDReadWrit|

; 1636 :         if (pDevice->GetDeviceFuncionIndex()!= 0 && Function == 0) { // Customer are doing function zero.

  00038	e597e43c	 ldr         lr, [r7, #0x43C]
  0003c	e35e0000	 cmp         lr, #0
  00040	0a00000a	 beq         |$LN2@SDReadWrit|
  00044	e3550000	 cmp         r5, #0
  00048	1a000008	 bne         |$LN2@SDReadWrit|

; 1637 :             CSDDevice*  pDevice0 =  pDevice->GetSlot().GetFunctionDevice(0);

  0004c	e5970438	 ldr         r0, [r7, #0x438]
  00050	e3a01000	 mov         r1, #0
  00054	eb000000	 bl          |?GetFunctionDevice@CSDSlot@@QAAPAVCSDDevice@@K@Z|
  00058	e1b04000	 movs        r4, r0

; 1638 :             if (pDevice0!=NULL) {

  0005c	0a000003	 beq         |$LN2@SDReadWrit|

; 1639 :                 pDevice->DeRef();

  00060	e1a00007	 mov         r0, r7
  00064	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|

; 1640 :                 pDevice = pDevice0; // Switch to function 0;

  00068	e1a07004	 mov         r7, r4
  0006c	e50b402c	 str         r4, [r11, #-0x2C]
  00070		 |$LN2@SDReadWrit|
  00070		 |$LN12@SDReadWrit|

; 1641 :             }
; 1642 :         }
; 1643 :         ASSERT(pDevice->GetDeviceFuncionIndex()== Function);
; 1644 :         __try {
; 1645 :             status = pDevice->SDReadWriteRegistersDirect_I(ReadWrite,Address,ReadAfterWrite,pBuffer,BufferLength);

  00070	e5973000	 ldr         r3, [r7]
  00074	e59b4008	 ldr         r4, [r11, #8]
  00078	e59b5004	 ldr         r5, [r11, #4]
  0007c	e5936010	 ldr         r6, [r3, #0x10]
  00080	e5db3000	 ldrb        r3, [r11]
  00084	e1a02008	 mov         r2, r8
  00088	e1a01009	 mov         r1, r9
  0008c	e1a00007	 mov         r0, r7
  00090	e58d4004	 str         r4, [sp, #4]
  00094	e58d5000	 str         r5, [sp]
  00098	e1a0e00f	 mov         lr, pc
  0009c	e12fff16	 bx          r6
  000a0	e1a04000	 mov         r4, r0
  000a4	e50b4028	 str         r4, [r11, #-0x28]
  000a8		 |$LN13@SDReadWrit|

; 1646 :         }

  000a8	ea000002	 b           |$LN14@SDReadWrit|
  000ac		 |$LN9@SDReadWrit|

; 1648 :             status = SD_API_STATUS_ACCESS_VIOLATION;

  000ac	e3a04117	 mov         r4, #0x17, 2
  000b0	e50b4028	 str         r4, [r11, #-0x28]
  000b4	e51b702c	 ldr         r7, [r11, #-0x2C]
  000b8		 |$LN14@SDReadWrit|

; 1649 :         }
; 1650 :         pDevice->DeRef();

  000b8	e1a00007	 mov         r0, r7
  000bc	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  000c0	ea000000	 b           |$LN4@SDReadWrit|
  000c4		 |$LN21@SDReadWrit|

; 1651 :     }
; 1652 :     DEBUGMSG(SDCARD_ZONE_ERROR && !SD_API_SUCCESS(status), (TEXT("SDReadWriteRegistersDirect__X: Failed status 0x%08X \n"),status));
; 1653 :     return status;

  000c4	e51b402c	 ldr         r4, [r11, #-0x2C]

; 1649 :         }
; 1650 :         pDevice->DeRef();

  000c8		 |$LN4@SDReadWrit|

; 1654 : };            

  000c8	e1a00004	 mov         r0, r4
  000cc	e24bd024	 sub         sp, r11, #0x24
  000d0	e89d6bf0	 ldmia       sp, {r4 - r9, r11, sp, lr}
  000d4	e12fff1e	 bx          lr

			 ENDP  ; |?SDReadWriteRegistersDirect__X@@YAJPAXW4SD_IO_TRANSFER_TYPE@@EKEPAEK@Z|, SDReadWriteRegistersDirect__X

  000d8		 |$LN8@SDReadWrit|
  000d8		 |$LN23@SDReadWrit|

; 1647 :         __except (SDProcessException(GetExceptionInformation())) {

  000d8	e52de004	 str         lr, [sp, #-4]!
  000dc	e24dd008	 sub         sp, sp, #8
  000e0		 |$LN11@SDReadWrit|
  000e0		 |$LN26@SDReadWrit|
  000e0	eb000000	 bl          SDProcessException
  000e4		 |$LN10@SDReadWrit|
  000e4	e28dd008	 add         sp, sp, #8
  000e8	e49df004	 ldr         pc, [sp], #4
  000ec		 |$LN27@SDReadWrit|
  000ec		 |$LN25@SDReadWrit|
	EXPORT	|?SDCancelBusRequest__X@@YAEPAX@Z|	; SDCancelBusRequest__X

  00000			 AREA	 |.pdata|, PDATA
|$T40192| DCD	|$LN6@SDCancelBu|
	DCD	0x40001201
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SDCancelBusRequest__X@@YAEPAX@Z| PROC ; SDCancelBusRequest__X

; 1665 : {

  00000		 |$LN6@SDCancelBu|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M40189|
  00004	e1a05000	 mov         r5, r0

; 1666 :     BOOL fReturn = FALSE;
; 1667 :     CSDDevice *     pDevice = CSDHostContainer::GetDeviceByRequest((HANDLE)hRequest);

  00008	e3a04000	 mov         r4, #0
  0000c	eb000000	 bl          |?GetDeviceByRequest@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z|
  00010	e1b06000	 movs        r6, r0

; 1668 :     if (pDevice) {

  00014	0a000008	 beq         |$LN1@SDCancelBu|

; 1669 :         fReturn = pDevice->SDCancelBusRequest_I((HANDLE)hRequest);

  00018	e5963000	 ldr         r3, [r6]
  0001c	e1a01005	 mov         r1, r5
  00020	e1a00006	 mov         r0, r6
  00024	e5933024	 ldr         r3, [r3, #0x24]
  00028	e1a0e00f	 mov         lr, pc
  0002c	e12fff13	 bx          r3
  00030	e1a04000	 mov         r4, r0

; 1670 :         pDevice->DeRef();

  00034	e1a00006	 mov         r0, r6
  00038	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  0003c		 |$LN1@SDCancelBu|

; 1671 :     }
; 1672 :     DEBUGMSG(SDCARD_ZONE_ERROR && fReturn , (TEXT("SDCancelBusRequest__X: Failed:wrong Handle 0x%08X \n"),hRequest));
; 1673 :     return fReturn;

  0003c	e20400ff	 and         r0, r4, #0xFF

; 1674 : };

  00040	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00044	e12fff1e	 bx          lr
  00048		 |$M40190|

			 ENDP  ; |?SDCancelBusRequest__X@@YAEPAX@Z|, SDCancelBusRequest__X

	EXPORT	|?SDGetTuple__X@@YAJPAXEPAEPAKH@Z|	; SDGetTuple__X

  00000			 AREA	 |.pdata|, PDATA
|$T40221| DCD	|$LN18@SDGetTuple|
	DCD	0xc0002404

  00000			 AREA	 |.pdata|, PDATA
|$T40223| DCD	|$LN6@SDGetTuple|
	DCD	0x40000502

  00000			 AREA	 |.xdata|, DATA
|$T40219| DCD	0x1
	DCD	|$LN10@SDGetTuple|
	DCD	|$LN11@SDGetTuple|
	DCD	|$LN6@SDGetTuple|
	DCD	|$LN7@SDGetTuple|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T40219|

  00008		 |?SDGetTuple__X@@YAJPAXEPAEPAKH@Z| PROC ; SDGetTuple__X

; 1700 : {

  00008		 |$LN18@SDGetTuple|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d5bf0	 stmdb       sp!, {r4 - r9, r11, r12, lr}
  00010	e28db024	 add         r11, sp, #0x24
  00014	e24dd00c	 sub         sp, sp, #0xC
  00018		 |$LN16@SDGetTuple|
  00018	e1a07003	 mov         r7, r3
  0001c	e1a08002	 mov         r8, r2
  00020	e1a09001	 mov         r9, r1

; 1701 :     SD_API_STATUS   status = SD_API_STATUS_INVALID_PARAMETER;  // intermediate status
; 1702 :     CSDDevice *     pDevice = CSDHostContainer::GetDeviceByDevice((HANDLE)hDevice);

  00024	e3a0411f	 mov         r4, #0x1F, 2
  00028	eb000000	 bl          |?GetDeviceByDevice@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z|
  0002c	e1b06000	 movs        r6, r0
  00030	e50b6028	 str         r6, [r11, #-0x28]

; 1703 :     if (pDevice) {

  00034	0a000013	 beq         |$LN2@SDGetTuple|
  00038		 |$LN10@SDGetTuple|

; 1704 :         __try {
; 1705 :             status = pDevice->SDGetTuple_I(TupleCode,pBuffer,pBufferSize,CommonCIS);

  00038	e596e000	 ldr         lr, [r6]
  0003c	e59b5000	 ldr         r5, [r11]
  00040	e1a03007	 mov         r3, r7
  00044	e59e4030	 ldr         r4, [lr, #0x30]
  00048	e1a02008	 mov         r2, r8
  0004c	e1a01009	 mov         r1, r9
  00050	e1a00006	 mov         r0, r6
  00054	e58d5000	 str         r5, [sp]
  00058	e1a0e00f	 mov         lr, pc
  0005c	e12fff14	 bx          r4
  00060	e1a04000	 mov         r4, r0
  00064	e50b402c	 str         r4, [r11, #-0x2C]
  00068		 |$LN11@SDGetTuple|

; 1706 :         }

  00068	ea000002	 b           |$LN12@SDGetTuple|
  0006c		 |$LN7@SDGetTuple|

; 1708 :             status = SD_API_STATUS_ACCESS_VIOLATION;

  0006c	e3a04117	 mov         r4, #0x17, 2
  00070	e50b402c	 str         r4, [r11, #-0x2C]
  00074	e51b6028	 ldr         r6, [r11, #-0x28]
  00078		 |$LN12@SDGetTuple|

; 1709 :         }
; 1710 :         pDevice->DeRef();

  00078	e1a00006	 mov         r0, r6
  0007c	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  00080	ea000000	 b           |$LN2@SDGetTuple|
  00084		 |$LN15@SDGetTuple|

; 1711 :     }
; 1712 :     DEBUGMSG(SDCARD_ZONE_ERROR && !SD_API_SUCCESS(status), (TEXT("SDGetTuple_I: Failed status 0x%08X \n"),status));
; 1713 :     return status;

  00084	e51b4028	 ldr         r4, [r11, #-0x28]

; 1709 :         }
; 1710 :         pDevice->DeRef();

  00088		 |$LN2@SDGetTuple|

; 1714 : 
; 1715 : }

  00088	e1a00004	 mov         r0, r4
  0008c	e24bd024	 sub         sp, r11, #0x24
  00090	e89d6bf0	 ldmia       sp, {r4 - r9, r11, sp, lr}
  00094	e12fff1e	 bx          lr

			 ENDP  ; |?SDGetTuple__X@@YAJPAXEPAEPAKH@Z|, SDGetTuple__X

  00098		 |$LN6@SDGetTuple|
  00098		 |$LN17@SDGetTuple|

; 1707 :         __except (SDProcessException(GetExceptionInformation())) {

  00098	e52de004	 str         lr, [sp, #-4]!
  0009c	e24dd004	 sub         sp, sp, #4
  000a0		 |$LN9@SDGetTuple|
  000a0		 |$LN20@SDGetTuple|
  000a0	eb000000	 bl          SDProcessException
  000a4		 |$LN8@SDGetTuple|
  000a4	e28dd004	 add         sp, sp, #4
  000a8	e49df004	 ldr         pc, [sp], #4
  000ac		 |$LN21@SDGetTuple|
  000ac		 |$LN19@SDGetTuple|
	EXPORT	|?SDIOConnectInterrupt__X@@YAJPAXP6AJ00@Z@Z| ; SDIOConnectInterrupt__X

  00000			 AREA	 |.pdata|, PDATA
|$T40254| DCD	|$LN18@SDIOConnec|
	DCD	0xc0001f04

  00000			 AREA	 |.pdata|, PDATA
|$T40256| DCD	|$LN6@SDIOConnec|
	DCD	0x40000301

  00000			 AREA	 |.xdata|, DATA
|$T40252| DCD	0x1
	DCD	|$LN10@SDIOConnec|
	DCD	|$LN11@SDIOConnec|
	DCD	|$LN6@SDIOConnec|
	DCD	|$LN7@SDIOConnec|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T40252|

  00008		 |?SDIOConnectInterrupt__X@@YAJPAXP6AJ00@Z@Z| PROC ; SDIOConnectInterrupt__X

; 1738 : {

  00008		 |$LN18@SDIOConnec|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d5870	 stmdb       sp!, {r4 - r6, r11, r12, lr}
  00010	e28db018	 add         r11, sp, #0x18
  00014	e24dd008	 sub         sp, sp, #8
  00018		 |$LN16@SDIOConnec|
  00018	e1a06001	 mov         r6, r1

; 1739 :     SD_API_STATUS   status = SD_API_STATUS_INVALID_PARAMETER;  // intermediate status
; 1740 :     CSDDevice *     pDevice = CSDHostContainer::GetDeviceByDevice((HANDLE)hDevice);

  0001c	e3a0411f	 mov         r4, #0x1F, 2
  00020	eb000000	 bl          |?GetDeviceByDevice@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z|
  00024	e1b05000	 movs        r5, r0
  00028	e50b501c	 str         r5, [r11, #-0x1C]

; 1741 :     if (pDevice) {

  0002c	0a000010	 beq         |$LN2@SDIOConnec|
  00030		 |$LN10@SDIOConnec|

; 1742 :         __try {
; 1743 :             status = pDevice->SDIOConnectDisconnectInterrupt( pIsrFunction,TRUE);

  00030	e5953000	 ldr         r3, [r5]
  00034	e3a02001	 mov         r2, #1
  00038	e1a01006	 mov         r1, r6
  0003c	e5933028	 ldr         r3, [r3, #0x28]
  00040	e1a00005	 mov         r0, r5
  00044	e1a0e00f	 mov         lr, pc
  00048	e12fff13	 bx          r3
  0004c	e1a04000	 mov         r4, r0
  00050	e50b4020	 str         r4, [r11, #-0x20]
  00054		 |$LN11@SDIOConnec|

; 1744 :         }

  00054	ea000002	 b           |$LN12@SDIOConnec|
  00058		 |$LN7@SDIOConnec|

; 1746 :             status = SD_API_STATUS_ACCESS_VIOLATION;

  00058	e3a04117	 mov         r4, #0x17, 2
  0005c	e50b4020	 str         r4, [r11, #-0x20]
  00060	e51b501c	 ldr         r5, [r11, #-0x1C]
  00064		 |$LN12@SDIOConnec|

; 1747 :         }
; 1748 :         pDevice->DeRef();

  00064	e1a00005	 mov         r0, r5
  00068	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  0006c	ea000000	 b           |$LN2@SDIOConnec|
  00070		 |$LN15@SDIOConnec|

; 1749 :     }
; 1750 :     DEBUGMSG(SDCARD_ZONE_ERROR && !SD_API_SUCCESS(status), (TEXT("SDIOConnectInterrupt__X: Failed status 0x%08X \n"),status));
; 1751 :     return status;

  00070	e51b401c	 ldr         r4, [r11, #-0x1C]

; 1747 :         }
; 1748 :         pDevice->DeRef();

  00074		 |$LN2@SDIOConnec|

; 1752 : }

  00074	e1a00004	 mov         r0, r4
  00078	e24bd018	 sub         sp, r11, #0x18
  0007c	e89d6870	 ldmia       sp, {r4 - r6, r11, sp, lr}
  00080	e12fff1e	 bx          lr

			 ENDP  ; |?SDIOConnectInterrupt__X@@YAJPAXP6AJ00@Z@Z|, SDIOConnectInterrupt__X

  00084		 |$LN6@SDIOConnec|
  00084		 |$LN17@SDIOConnec|

; 1745 :         __except (SDProcessException(GetExceptionInformation())) {

  00084	e52de004	 str         lr, [sp, #-4]!
  00088		 |$LN9@SDIOConnec|
  00088		 |$LN20@SDIOConnec|
  00088	eb000000	 bl          SDProcessException
  0008c		 |$LN8@SDIOConnec|
  0008c	e49df004	 ldr         pc, [sp], #4
  00090		 |$LN21@SDIOConnec|
  00090		 |$LN19@SDIOConnec|
	EXPORT	|?SDIODisconnectInterrupt__X@@YAXPAX@Z|	; SDIODisconnectInterrupt__X

  00000			 AREA	 |.pdata|, PDATA
|$T40282| DCD	|$LN17@SDIODiscon|
	DCD	0xc0001604

  00000			 AREA	 |.pdata|, PDATA
|$T40284| DCD	|$LN6@SDIODiscon|
	DCD	0x40000301

  00000			 AREA	 |.xdata|, DATA
|$T40280| DCD	0x1
	DCD	|$LN10@SDIODiscon|
	DCD	|$LN11@SDIODiscon|
	DCD	|$LN6@SDIODiscon|
	DCD	|$LN7@SDIODiscon|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T40280|

  00008		 |?SDIODisconnectInterrupt__X@@YAXPAX@Z| PROC ; SDIODisconnectInterrupt__X

; 1764 : {

  00008		 |$LN17@SDIODiscon|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d5810	 stmdb       sp!, {r4, r11, r12, lr}
  00010	e28db010	 add         r11, sp, #0x10
  00014	e24dd004	 sub         sp, sp, #4
  00018		 |$LN15@SDIODiscon|

; 1765 :     SD_API_STATUS   status = SD_API_STATUS_INVALID_PARAMETER;  // intermediate status
; 1766 :     CSDDevice *     pDevice = CSDHostContainer::GetDeviceByDevice((HANDLE)hDevice);

  00018	eb000000	 bl          |?GetDeviceByDevice@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z|
  0001c	e1b04000	 movs        r4, r0
  00020	e50b4014	 str         r4, [r11, #-0x14]

; 1767 :     if (pDevice) {

  00024	0a00000a	 beq         |$LN2@SDIODiscon|
  00028		 |$LN10@SDIODiscon|

; 1768 :         __try {
; 1769 :             status = pDevice->SDIOConnectDisconnectInterrupt( NULL,FALSE);

  00028	e5943000	 ldr         r3, [r4]
  0002c	e3a02000	 mov         r2, #0
  00030	e3a01000	 mov         r1, #0
  00034	e5933028	 ldr         r3, [r3, #0x28]
  00038	e1a00004	 mov         r0, r4
  0003c	e1a0e00f	 mov         lr, pc
  00040	e12fff13	 bx          r3
  00044		 |$LN11@SDIODiscon|

; 1770 :         }

  00044	ea000000	 b           |$LN12@SDIODiscon|
  00048		 |$LN7@SDIODiscon|

; 1771 :         __except (SDProcessException(GetExceptionInformation())) {

  00048	e51b4014	 ldr         r4, [r11, #-0x14]
  0004c		 |$LN12@SDIODiscon|

; 1772 :             status = SD_API_STATUS_ACCESS_VIOLATION;
; 1773 :         }
; 1774 :         pDevice->DeRef();

  0004c	e1a00004	 mov         r0, r4
  00050	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  00054		 |$LN2@SDIODiscon|

; 1775 :     }
; 1776 :     DEBUGMSG(SDCARD_ZONE_ERROR && !SD_API_SUCCESS(status), (TEXT("SDIODisconnectInterrupt__X: Failed status 0x%08X \n"),status));
; 1777 : }

  00054	e24bd010	 sub         sp, r11, #0x10
  00058	e89d6810	 ldmia       sp, {r4, r11, sp, lr}
  0005c	e12fff1e	 bx          lr

			 ENDP  ; |?SDIODisconnectInterrupt__X@@YAXPAX@Z|, SDIODisconnectInterrupt__X

  00060		 |$LN6@SDIODiscon|
  00060		 |$LN16@SDIODiscon|

; 1771 :         __except (SDProcessException(GetExceptionInformation())) {

  00060	e52de004	 str         lr, [sp, #-4]!
  00064		 |$LN9@SDIODiscon|
  00064		 |$LN19@SDIODiscon|
  00064	eb000000	 bl          SDProcessException
  00068		 |$LN8@SDIODiscon|
  00068	e49df004	 ldr         pc, [sp], #4
  0006c		 |$LN20@SDIODiscon|
  0006c		 |$LN18@SDIODiscon|
	EXPORT	|?SDSetCardFeature__X@@YAJPAXW4SD_SET_FEATURE_TYPE@@0K@Z| ; SDSetCardFeature__X
	IMPORT	|?SDSetCardFeature_I@CSDDevice@@QAAJW4SD_SET_FEATURE_TYPE@@PAXK@Z| ; CSDDevice::SDSetCardFeature_I

  00000			 AREA	 |.pdata|, PDATA
|$T40317| DCD	|$LN18@SDSetCardF|
	DCD	0xc0001f04

  00000			 AREA	 |.pdata|, PDATA
|$T40319| DCD	|$LN6@SDSetCardF|
	DCD	0x40000301

  00000			 AREA	 |.xdata|, DATA
|$T40315| DCD	0x1
	DCD	|$LN10@SDSetCardF|
	DCD	|$LN11@SDSetCardF|
	DCD	|$LN6@SDSetCardF|
	DCD	|$LN7@SDSetCardF|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T40315|

  00008		 |?SDSetCardFeature__X@@YAJPAXW4SD_SET_FEATURE_TYPE@@0K@Z| PROC ; SDSetCardFeature__X

; 1797 : {

  00008		 |$LN18@SDSetCardF|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d59f0	 stmdb       sp!, {r4 - r8, r11, r12, lr}
  00010	e28db020	 add         r11, sp, #0x20
  00014	e24dd008	 sub         sp, sp, #8
  00018		 |$LN16@SDSetCardF|
  00018	e1a06003	 mov         r6, r3
  0001c	e1a07002	 mov         r7, r2
  00020	e1a08001	 mov         r8, r1

; 1798 :     SD_API_STATUS   status = SD_API_STATUS_INVALID_PARAMETER;  // intermediate status
; 1799 :     CSDDevice *     pDevice = CSDHostContainer::GetDeviceByDevice((HANDLE)hDevice);

  00024	e3a0411f	 mov         r4, #0x1F, 2
  00028	eb000000	 bl          |?GetDeviceByDevice@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z|
  0002c	e1b05000	 movs        r5, r0
  00030	e50b5024	 str         r5, [r11, #-0x24]

; 1800 :     if (pDevice) {

  00034	0a00000e	 beq         |$LN2@SDSetCardF|
  00038		 |$LN10@SDSetCardF|

; 1801 :         __try {
; 1802 :             status = pDevice->SDSetCardFeature_I(CardFeature,pCardInfo,StructureSize);

  00038	e1a03006	 mov         r3, r6
  0003c	e1a02007	 mov         r2, r7
  00040	e1a01008	 mov         r1, r8
  00044	e1a00005	 mov         r0, r5
  00048	eb000000	 bl          |?SDSetCardFeature_I@CSDDevice@@QAAJW4SD_SET_FEATURE_TYPE@@PAXK@Z|
  0004c	e1a04000	 mov         r4, r0
  00050	e50b4028	 str         r4, [r11, #-0x28]
  00054		 |$LN11@SDSetCardF|

; 1803 :         }

  00054	ea000002	 b           |$LN12@SDSetCardF|
  00058		 |$LN7@SDSetCardF|

; 1805 :             status = SD_API_STATUS_ACCESS_VIOLATION;

  00058	e3a04117	 mov         r4, #0x17, 2
  0005c	e50b4028	 str         r4, [r11, #-0x28]
  00060	e51b5024	 ldr         r5, [r11, #-0x24]
  00064		 |$LN12@SDSetCardF|

; 1806 :         }
; 1807 :         pDevice->DeRef();

  00064	e1a00005	 mov         r0, r5
  00068	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  0006c	ea000000	 b           |$LN2@SDSetCardF|
  00070		 |$LN15@SDSetCardF|

; 1808 :     }
; 1809 :     DEBUGMSG(SDCARD_ZONE_ERROR && !SD_API_SUCCESS(status), (TEXT("SDSetCardFeature__X: Failed status 0x%08X \n"),status));
; 1810 :     return status;

  00070	e51b4024	 ldr         r4, [r11, #-0x24]

; 1806 :         }
; 1807 :         pDevice->DeRef();

  00074		 |$LN2@SDSetCardF|

; 1811 : }

  00074	e1a00004	 mov         r0, r4
  00078	e24bd020	 sub         sp, r11, #0x20
  0007c	e89d69f0	 ldmia       sp, {r4 - r8, r11, sp, lr}
  00080	e12fff1e	 bx          lr

			 ENDP  ; |?SDSetCardFeature__X@@YAJPAXW4SD_SET_FEATURE_TYPE@@0K@Z|, SDSetCardFeature__X

  00084		 |$LN6@SDSetCardF|
  00084		 |$LN17@SDSetCardF|

; 1804 :         __except (SDProcessException(GetExceptionInformation())) {

  00084	e52de004	 str         lr, [sp, #-4]!
  00088		 |$LN9@SDSetCardF|
  00088		 |$LN20@SDSetCardF|
  00088	eb000000	 bl          SDProcessException
  0008c		 |$LN8@SDSetCardF|
  0008c	e49df004	 ldr         pc, [sp], #4
  00090		 |$LN21@SDSetCardF|
  00090		 |$LN19@SDSetCardF|
	EXPORT	|?SDBusRequestResponse__X@@YAJPAXPAU_SD_COMMAND_RESPONSE@@@Z| ; SDBusRequestResponse__X

  00000			 AREA	 |.pdata|, PDATA
|$T40350| DCD	|$LN18@SDBusReque@2|
	DCD	0xc0002004

  00000			 AREA	 |.pdata|, PDATA
|$T40352| DCD	|$LN6@SDBusReque@2|
	DCD	0x40000301

  00000			 AREA	 |.xdata|, DATA
|$T40348| DCD	0x1
	DCD	|$LN10@SDBusReque@2|
	DCD	|$LN11@SDBusReque@2|
	DCD	|$LN6@SDBusReque@2|
	DCD	|$LN7@SDBusReque@2|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T40348|

  00008		 |?SDBusRequestResponse__X@@YAJPAXPAU_SD_COMMAND_RESPONSE@@@Z| PROC ; SDBusRequestResponse__X

; 1814 : {

  00008		 |$LN18@SDBusReque@2|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d58f0	 stmdb       sp!, {r4 - r7, r11, r12, lr}
  00010	e28db01c	 add         r11, sp, #0x1C
  00014	e24dd008	 sub         sp, sp, #8
  00018		 |$LN16@SDBusReque@2|
  00018	e1a07001	 mov         r7, r1
  0001c	e1a06000	 mov         r6, r0

; 1815 :     SD_API_STATUS   status = SD_API_STATUS_INVALID_PARAMETER;  // intermediate status
; 1816 :     CSDDevice *     pDevice = CSDHostContainer::GetDeviceByRequest((HANDLE)hRequest);

  00020	e3a0411f	 mov         r4, #0x1F, 2
  00024	eb000000	 bl          |?GetDeviceByRequest@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z|
  00028	e1b05000	 movs        r5, r0
  0002c	e50b5020	 str         r5, [r11, #-0x20]

; 1817 :     if (pDevice) {

  00030	0a000010	 beq         |$LN2@SDBusReque@2|
  00034		 |$LN10@SDBusReque@2|

; 1818 :         __try {
; 1819 :             status = pDevice->SDBusRequestResponse_I((HANDLE)hRequest,pSdCmdResp);

  00034	e5953000	 ldr         r3, [r5]
  00038	e1a02007	 mov         r2, r7
  0003c	e1a01006	 mov         r1, r6
  00040	e5933020	 ldr         r3, [r3, #0x20]
  00044	e1a00005	 mov         r0, r5
  00048	e1a0e00f	 mov         lr, pc
  0004c	e12fff13	 bx          r3
  00050	e1a04000	 mov         r4, r0
  00054	e50b4024	 str         r4, [r11, #-0x24]
  00058		 |$LN11@SDBusReque@2|

; 1820 :         }

  00058	ea000002	 b           |$LN12@SDBusReque@2|
  0005c		 |$LN7@SDBusReque@2|

; 1822 :             status = SD_API_STATUS_ACCESS_VIOLATION;

  0005c	e3a04117	 mov         r4, #0x17, 2
  00060	e50b4024	 str         r4, [r11, #-0x24]
  00064	e51b5020	 ldr         r5, [r11, #-0x20]
  00068		 |$LN12@SDBusReque@2|

; 1823 :         }
; 1824 :         pDevice->DeRef();

  00068	e1a00005	 mov         r0, r5
  0006c	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  00070	ea000000	 b           |$LN2@SDBusReque@2|
  00074		 |$LN15@SDBusReque@2|

; 1825 :     }
; 1826 :     DEBUGMSG(SDCARD_ZONE_ERROR && !SD_API_SUCCESS(status) , (TEXT("SDBusRequestResponse__X: Failed:wrong Handle 0x%08X \n"),hRequest));
; 1827 :     return status;

  00074	e51b4020	 ldr         r4, [r11, #-0x20]

; 1823 :         }
; 1824 :         pDevice->DeRef();

  00078		 |$LN2@SDBusReque@2|

; 1828 : }

  00078	e1a00004	 mov         r0, r4
  0007c	e24bd01c	 sub         sp, r11, #0x1C
  00080	e89d68f0	 ldmia       sp, {r4 - r7, r11, sp, lr}
  00084	e12fff1e	 bx          lr

			 ENDP  ; |?SDBusRequestResponse__X@@YAJPAXPAU_SD_COMMAND_RESPONSE@@@Z|, SDBusRequestResponse__X

  00088		 |$LN6@SDBusReque@2|
  00088		 |$LN17@SDBusReque@2|

; 1821 :         __except (SDProcessException(GetExceptionInformation())) {

  00088	e52de004	 str         lr, [sp, #-4]!
  0008c		 |$LN9@SDBusReque@2|
  0008c		 |$LN20@SDBusReque@2|
  0008c	eb000000	 bl          SDProcessException
  00090		 |$LN8@SDBusReque@2|
  00090	e49df004	 ldr         pc, [sp], #4
  00094		 |$LN21@SDBusReque@2|
  00094		 |$LN19@SDBusReque@2|
	EXPORT	|SDGetClientFunctions|

  00000			 AREA	 |.pdata|, PDATA
|$T40367| DCD	|$LN7@SDGetClien|
	DCD	0x40002901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SDGetClientFunctions| PROC

; 1835 : {    

  00000		 |$LN7@SDGetClien|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004		 |$M40364|
  00004	e3500000	 cmp         r0, #0

; 1836 :     SD_API_STATUS status = SD_API_STATUS_INVALID_PARAMETER;

  00008	e3a0211f	 mov         r2, #0x1F, 2

; 1837 : 
; 1838 :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("SDGetClientFunctions: +Init\n")));
; 1839 : 
; 1840 :     if ( pFunctions && (pFunctions->dwSize == sizeof(*pFunctions)) ) {

  0000c	0a000015	 beq         |$LN2@SDGetClien|
  00010	e5903000	 ldr         r3, [r0]
  00014	e3530034	 cmp         r3, #0x34
  00018	1a000012	 bne         |$LN2@SDGetClien|

; 1841 :         pFunctions->pSDRegisterClient = SDRegisterClient__X;
; 1842 :         pFunctions->pSDSynchronousBusRequest = SDSynchronousBusRequest__X;

  0001c	e59f207c	 ldr         r2, [pc, #0x7C]
  00020	e59f3074	 ldr         r3, [pc, #0x74]

; 1843 :         pFunctions->pSDBusRequest = (PSDBUS_REQUEST)SDBusRequest__X;

  00024	e59f106c	 ldr         r1, [pc, #0x6C]

; 1844 :         pFunctions->pSDFreeBusRequest = (PSD_FREE_BUS_REQUEST)SDFreeBusRequest__X;

  00028	e59fe064	 ldr         lr, [pc, #0x64]

; 1845 :         pFunctions->pSDCardInfoQuery = SDCardInfoQuery__X;

  0002c	e59f405c	 ldr         r4, [pc, #0x5C]

; 1846 :         pFunctions->pSDReadWriteRegistersDirect = SDReadWriteRegistersDirect__X;

  00030	e59f5054	 ldr         r5, [pc, #0x54]

; 1847 :         pFunctions->pSDCancelBusRequest = (PSD_CANCEL_BUS_REQUEST)SDCancelBusRequest__X;

  00034	e59f604c	 ldr         r6, [pc, #0x4C]

; 1848 :         pFunctions->pSDGetTuple = SDGetTuple__X;

  00038	e59f7044	 ldr         r7, [pc, #0x44]

; 1849 :         pFunctions->pSDIOConnectInterrupt  = SDIOConnectInterrupt__X;

  0003c	e59f803c	 ldr         r8, [pc, #0x3C]

; 1850 :         pFunctions->pSDIODisconnectInterrupt = SDIODisconnectInterrupt__X;

  00040	e59f9034	 ldr         r9, [pc, #0x34]

; 1851 :         pFunctions->pSDSetCardFeature = SDSetCardFeature__X;

  00044	e59fa02c	 ldr         r10, [pc, #0x2C]

; 1852 :         pFunctions->pSdBusRequestResponse = SDBusRequestResponse__X;

  00048	e59fb024	 ldr         r11, [pc, #0x24]
  0004c	e5802008	 str         r2, [r0, #8]

; 1853 : 
; 1854 :         status = SD_API_STATUS_SUCCESS;

  00050	e3a02000	 mov         r2, #0
  00054	e5803004	 str         r3, [r0, #4]
  00058	e280c00c	 add         r12, r0, #0xC
  0005c	e88c4002	 stmia       r12, {r1, lr}
  00060	e280c014	 add         r12, r0, #0x14
  00064	e88c0ff0	 stmia       r12, {r4 - r11}
  00068		 |$LN2@SDGetClien|

; 1855 :     }
; 1856 :     else {
; 1857 :         DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDGetClientFunctions: Invalid parameter\n")));
; 1858 :     }
; 1859 : 
; 1860 :     DEBUGMSG(SDCARD_ZONE_INIT, (TEXT("SDGetClientFunctions: -Init\n")));
; 1861 : 
; 1862 :     return status;
; 1863 : };

  00068	e1a00002	 mov         r0, r2
  0006c	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00070	e12fff1e	 bx          lr
  00074		 |$LN8@SDGetClien|
  00074		 |$LN9@SDGetClien|
  00074	00000000	 DCD         |?SDBusRequestResponse__X@@YAJPAXPAU_SD_COMMAND_RESPONSE@@@Z|
  00078		 |$LN10@SDGetClien|
  00078	00000000	 DCD         |?SDSetCardFeature__X@@YAJPAXW4SD_SET_FEATURE_TYPE@@0K@Z|
  0007c		 |$LN11@SDGetClien|
  0007c	00000000	 DCD         |?SDIODisconnectInterrupt__X@@YAXPAX@Z|
  00080		 |$LN12@SDGetClien|
  00080	00000000	 DCD         |?SDIOConnectInterrupt__X@@YAJPAXP6AJ00@Z@Z|
  00084		 |$LN13@SDGetClien|
  00084	00000000	 DCD         |?SDGetTuple__X@@YAJPAXEPAEPAKH@Z|
  00088		 |$LN14@SDGetClien|
  00088	00000000	 DCD         |?SDCancelBusRequest__X@@YAEPAX@Z|
  0008c		 |$LN15@SDGetClien|
  0008c	00000000	 DCD         |?SDReadWriteRegistersDirect__X@@YAJPAXW4SD_IO_TRANSFER_TYPE@@EKEPAEK@Z|
  00090		 |$LN16@SDGetClien|
  00090	00000000	 DCD         |?SDCardInfoQuery__X@@YAJPAXW4SD_INFO_TYPE@@0K@Z|
  00094		 |$LN17@SDGetClien|
  00094	00000000	 DCD         |?SDFreeBusRequest__X@@YAXPAX@Z|
  00098		 |$LN18@SDGetClien|
  00098	00000000	 DCD         |?SDBusRequest__X@@YAJPAXEKW4SD_TRANSFER_CLASS@@W4_SD_RESPONSE_TYPE@@KKPAEP6AX0PAU_SD_BUS_REQUEST@@0K@ZKPAPAXKKPAU__PHYS_BUFF_LIST@@@Z|
  0009c		 |$LN19@SDGetClien|
  0009c	00000000	 DCD         |?SDRegisterClient__X@@YAJPAX0PAU_SDCARD_CLIENT_REGISTRATION_INFO@@@Z|
  000a0		 |$LN20@SDGetClien|
  000a0	00000000	 DCD         |?SDSynchronousBusRequest__X@@YAJPAXEKW4SD_TRANSFER_CLASS@@W4_SD_RESPONSE_TYPE@@PAU_SD_COMMAND_RESPONSE@@KKPAEKKPAU__PHYS_BUFF_LIST@@@Z|
  000a4		 |$M40365|

			 ENDP  ; |SDGetClientFunctions|

	EXPORT	|??0MarshalledBuffer_t@@QAA@PAXKKHH@Z|	; MarshalledBuffer_t::MarshalledBuffer_t
; File c:\wince600\public\common\oak\inc\marshal.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T40396| DCD	|$LN7@Marshalled@2|
	DCD	0x40001002
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0MarshalledBuffer_t@@QAA@PAXKKHH@Z| PROC ; MarshalledBuffer_t::MarshalledBuffer_t

; 69   :     MarshalledBuffer_t(

  00000		 |$LN7@Marshalled@2|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M40393|
  00008	e1a05000	 mov         r5, r0

; 70   :         PVOID pSrcUnmarshalled,
; 71   :         DWORD cbSrc,
; 72   :         DWORD ArgumentDescriptor,
; 73   :         BOOL  ForceDuplicate = TRUE,
; 74   :         BOOL  Asynchronous = FALSE
; 75   :         )
; 76   :     {
; 77   :         Reset();
; 78   :         Marshal(pSrcUnmarshalled, cbSrc, ArgumentDescriptor, ForceDuplicate,
; 79   :                 Asynchronous);

  0000c	e59de01c	 ldr         lr, [sp, #0x1C]
  00010	e59d4018	 ldr         r4, [sp, #0x18]
  00014	e3a06000	 mov         r6, #0
  00018	e58de004	 str         lr, [sp, #4]
  0001c	e58d4000	 str         r4, [sp]
  00020	e5856004	 str         r6, [r5, #4]
  00024	e5856000	 str         r6, [r5]
  00028	e585600c	 str         r6, [r5, #0xC]
  0002c	eb000000	 bl          |?Marshal@MarshalledBuffer_t@@QAAJPAXKKHH@Z|

; 80   :     }

  00030	e1a00005	 mov         r0, r5
  00034	e28dd008	 add         sp, sp, #8
  00038	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$M40394|

			 ENDP  ; |??0MarshalledBuffer_t@@QAA@PAXKKHH@Z|, MarshalledBuffer_t::MarshalledBuffer_t


  00000			 AREA	 |.pdata|, PDATA
|$T40407| DCD	|$LN6@scalar@3|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GCSDHostContainer@@UAAPAXI@Z| PROC	; CSDHostContainer::`scalar deleting destructor'
  00000		 |$LN6@scalar@3|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M40404|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0
  0000c	eb000000	 bl          |??1CSDHostContainer@@UAA@XZ|
  00010	e3140001	 tst         r4, #1
  00014	11a00005	 movne       r0, r5
  00018	1b000000	 blne        |??3@YAXPAX@Z|
  0001c	e1a00005	 mov         r0, r5
  00020	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M40405|

			 ENDP  ; |??_GCSDHostContainer@@UAAPAXI@Z|, CSDHostContainer::`scalar deleting destructor'

	EXPORT	|pdwActualOut$GSCopy$| [ DATA ]
	EXPORT	|__$ArrayPad$| [ DATA ]
; File c:\wince600\public\common\oak\inc\defbus.h

  00000			 AREA	 |.pdata|, PDATA
|$T40715| DCD	|$LN220@IOControl@2|
	DCD	0xc0030e04

  00000			 AREA	 |.pdata|, PDATA
|$T40717| DCD	|$LN120@IOControl@2|
	DCD	0x40000502

  00000			 AREA	 |.pdata|, PDATA
|$T40719| DCD	|$LN113@IOControl@2|
	DCD	0x40001102

  00000			 AREA	 |.xdata|, DATA
|$T40713| DCD	0x2
	DCD	|$LN124@IOControl@2|
	DCD	|$LN125@IOControl@2|
	DCD	|$LN120@IOControl@2|
	DCD	|$LN121@IOControl@2|
	DCD	|$LN117@IOControl@2|
	DCD	|$LN118@IOControl@2|
	DCD	|$LN113@IOControl@2|
	DCD	|$LN114@IOControl@2|
	DCD	0xffffffd4
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\sdbus\sdbus.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck_SEH|
  00004	00000000	 DCD         |$T40713|

  00008		 |?IOControl@CSDHostContainer@@UAAHKPAEK0KPAK@Z| PROC ; CSDHostContainer::IOControl

; 699  : {

  00008		 |$LN220@IOControl@2|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d5ff0	 stmdb       sp!, {r4 - r12, lr}
  00010	e28db028	 add         r11, sp, #0x28
  00014	e24ddf57	 sub         sp, sp, #0x57, 30
  00018		 |$LN218@IOControl@2|
  00018	e1a07003	 mov         r7, r3
  0001c	e1a06002	 mov         r6, r2
  00020	e59fec6c	 ldr         lr, [pc, #0xC6C]
  00024	e59ee000	 ldr         lr, [lr]
  00028	e50be02c	 str         lr, [r11, #-0x2C]
  0002c	e59b8008	 ldr         r8, [r11, #8]
  00030	e59ba000	 ldr         r10, [r11]

; 700  :     BOOL fRet = FALSE;
; 701  : 
; 702  :     switch (dwCode) {

  00034	e3a0382a	 mov         r3, #0x2A, 16
  00038	e3833e51	 orr         r3, r3, #0x51, 28
  0003c	e50b8154	 str         r8, [r11, #-0x154]
  00040	e3a04000	 mov         r4, #0
  00044	e1510003	 cmp         r1, r3
  00048	8a00010c	 bhi         |$LN109@IOControl@2|
  0004c	0a0000f2	 beq         |$LN29@IOControl@2|
  00050	e3a0382a	 mov         r3, #0x2A, 16
  00054	e3833044	 orr         r3, r3, #0x44
  00058	e1510003	 cmp         r1, r3
  0005c	8a000018	 bhi         |$LN110@IOControl@2|
  00060	0a000013	 beq         |$LN70@IOControl@2|
  00064	e3a0382a	 mov         r3, #0x2A, 16
  00068	e3833004	 orr         r3, r3, #4
  0006c	e1510003	 cmp         r1, r3
  00070	0a00000f	 beq         |$LN70@IOControl@2|
  00074	e3a0382a	 mov         r3, #0x2A, 16
  00078	e3833008	 orr         r3, r3, #8
  0007c	e1510003	 cmp         r1, r3
  00080	0a00000b	 beq         |$LN70@IOControl@2|
  00084	e3a0382a	 mov         r3, #0x2A, 16
  00088	e3833014	 orr         r3, r3, #0x14
  0008c	e1510003	 cmp         r1, r3
  00090	0a000007	 beq         |$LN70@IOControl@2|
  00094	e3a0382a	 mov         r3, #0x2A, 16
  00098	e3833018	 orr         r3, r3, #0x18
  0009c	e1510003	 cmp         r1, r3
  000a0	0a000003	 beq         |$LN70@IOControl@2|
  000a4	e3a0382a	 mov         r3, #0x2A, 16
  000a8	e3833040	 orr         r3, r3, #0x40
  000ac	e1510003	 cmp         r1, r3
  000b0	1a0001d5	 bne         |$LN1@IOControl@2|
  000b4		 |$LN70@IOControl@2|

; 703  :     case IOCTL_BUS_TRANSLATE_BUS_ADDRESS:        
; 704  :     case IOCTL_BUS_TRANSLATE_SYSTEM_ADDRESS:
; 705  :     case IOCTL_BUS_ACTIVATE_CHILD:
; 706  :     case IOCTL_BUS_DEACTIVATE_CHILD:
; 707  :     case IOCTL_BUS_IS_CHILD_REMOVED:
; 708  :     case IOCTL_BUS_GET_CONFIGURE_DATA:        
; 709  :     case IOCTL_BUS_SET_CONFIGURE_DATA:
; 710  :         SetLastError(ERROR_NOT_SUPPORTED);

  000b4	e3a00032	 mov         r0, #0x32
  000b8	eb000000	 bl          SetLastError

; 914  :             fRet = SD_API_SUCCESS(status);

  000bc	e3a04000	 mov         r4, #0

; 915  :         }
; 916  :         else

  000c0	ea0002d8	 b           |$LN30@IOControl@2|
  000c4		 |$LN110@IOControl@2|

; 700  :     BOOL fRet = FALSE;
; 701  : 
; 702  :     switch (dwCode) {

  000c4	e3a0382a	 mov         r3, #0x2A, 16
  000c8	e3833080	 orr         r3, r3, #0x80
  000cc	e1510003	 cmp         r1, r3
  000d0	0afffff7	 beq         |$LN70@IOControl@2|
  000d4	e3a0382a	 mov         r3, #0x2A, 16
  000d8	e3833c05	 orr         r3, r3, #5, 24
  000dc	e1510003	 cmp         r1, r3
  000e0	0a0000b7	 beq         |$LN60@IOControl@2|
  000e4	e59f3ba4	 ldr         r3, [pc, #0xBA4]
  000e8	e1510003	 cmp         r1, r3
  000ec	0a000069	 beq         |$LN55@IOControl@2|
  000f0	e59f3b94	 ldr         r3, [pc, #0xB94]
  000f4	e1510003	 cmp         r1, r3
  000f8	0a000015	 beq         |$LN50@IOControl@2|
  000fc	e59f3b84	 ldr         r3, [pc, #0xB84]
  00100	e1510003	 cmp         r1, r3
  00104	1a0001c0	 bne         |$LN1@IOControl@2|

; 883  :             SetLastError(status);
; 884  :             fRet = SD_API_SUCCESS(status);
; 885  :         }
; 886  :         else
; 887  :             SetLastError(SD_API_STATUS_INVALID_PARAMETER);
; 888  :         break;
; 889  :     case IOCTL_BUS_SD_FREE_BUS_REQUEST: 
; 890  :         if (pBufIn && dwLenIn>= sizeof(HANDLE)) {

  00108	e3560000	 cmp         r6, #0
  0010c	0a0002c5	 beq         |$LN30@IOControl@2|
  00110	e3570004	 cmp         r7, #4
  00114	3a0002c3	 bcc         |$LN30@IOControl@2|

; 891  :             HANDLE hRequest = *(HANDLE *)pBufIn;

  00118	e5966000	 ldr         r6, [r6]

; 892  :             CSDDevice * pDevice =  GetDeviceByRequest(hRequest);

  0011c	e1a00006	 mov         r0, r6
  00120	eb000000	 bl          |?GetDeviceByRequest@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z|
  00124	e1b05000	 movs        r5, r0

; 893  :             if (pDevice) {

  00128	0a0002be	 beq         |$LN30@IOControl@2|

; 894  :                 pDevice->SDFreeBusRequest_I(hRequest );

  0012c	e5953000	 ldr         r3, [r5]
  00130	e1a01006	 mov         r1, r6
  00134	e1a00005	 mov         r0, r5
  00138	e593301c	 ldr         r3, [r3, #0x1C]
  0013c	e1a0e00f	 mov         lr, pc
  00140	e12fff13	 bx          r3

; 895  :                 pDevice->DeRef();

  00144	e1a00005	 mov         r0, r5
  00148		 |$LN215@IOControl@2|
  00148	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  0014c		 |$LN214@IOControl@2|

; 896  :                 fRet = TRUE;

  0014c	e3a04001	 mov         r4, #1

; 897  :             }
; 898  :         }
; 899  :         break;

  00150	ea0002b4	 b           |$LN30@IOControl@2|
  00154		 |$LN50@IOControl@2|

; 795  :             SetLastError(status);
; 796  :             fRet = SD_API_SUCCESS(status);
; 797  :         }
; 798  :         else
; 799  :             SetLastError(SD_API_STATUS_INVALID_PARAMETER);
; 800  :         break;
; 801  :     case IOCTL_BUS_SD_BUS_REQUEST:
; 802  :         if (pBufIn && dwLenIn>= sizeof(IO_SD_BUS_REQUEST) && pBufOut && dwLenOut>= sizeof(HANDLE)) {

  00154	e3560000	 cmp         r6, #0
  00158	0a0002b0	 beq         |$LN33@IOControl@2|
  0015c	e3570038	 cmp         r7, #0x38
  00160	3a0002ae	 bcc         |$LN33@IOControl@2|
  00164	e35a0000	 cmp         r10, #0
  00168	0a0002ac	 beq         |$LN33@IOControl@2|
  0016c	e59b3004	 ldr         r3, [r11, #4]
  00170	e3530004	 cmp         r3, #4
  00174	3a0002a9	 bcc         |$LN33@IOControl@2|

; 803  :             SD_API_STATUS status = SD_API_STATUS_INVALID_PARAMETER; 
; 804  :             IO_SD_BUS_REQUEST SdBusRequest = *(PIO_SD_BUS_REQUEST)pBufIn;

  00178	e24b00a4	 sub         r0, r11, #0xA4
  0017c	e3a02038	 mov         r2, #0x38
  00180	e1a01006	 mov         r1, r6
  00184	e3a0411f	 mov         r4, #0x1F, 2
  00188	eb000000	 bl          memcpy

; 805  :             HANDLE hBusRequest = NULL ;
; 806  :             // Mapping Embedded pointer.
; 807  :             CSDDevice * pDevice = GetDeviceByDevice(SdBusRequest.hDevice);

  0018c	e51b00a4	 ldr         r0, [r11, #-0xA4]
  00190	e3a03000	 mov         r3, #0
  00194	e50b315c	 str         r3, [r11, #-0x15C]
  00198	eb000000	 bl          |?GetDeviceByDevice@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z|
  0019c	e1b05000	 movs        r5, r0
  001a0	e50b5154	 str         r5, [r11, #-0x154]

; 808  :             if (pDevice) {

  001a4	0a000297	 beq         |$LN31@IOControl@2|

; 809  :                 MarshalledBuffer_t UserBuffer((PVOID)SdBusRequest.pBuffer,
; 810  :                     SdBusRequest.BlockSize* SdBusRequest.NumBlocks,
; 811  :                     SdBusRequest.TransferClass==SD_READ ? ARG_O_PTR: ARG_I_PTR, FALSE,FALSE); // no duplicate and no Async , read & write.

  001a8	e51b3098	 ldr         r3, [r11, #-0x98]
  001ac	e3530000	 cmp         r3, #0
  001b0	03a03008	 moveq       r3, #8
  001b4	13a03004	 movne       r3, #4
  001b8	e51b0090	 ldr         r0, [r11, #-0x90]
  001bc	e51b208c	 ldr         r2, [r11, #-0x8C]
  001c0	e51b1088	 ldr         r1, [r11, #-0x88]
  001c4	e3a04000	 mov         r4, #0
  001c8	e3a06000	 mov         r6, #0
  001cc	e3a07000	 mov         r7, #0
  001d0	e0020290	 mul         r2, r0, r2
  001d4	e3a0e000	 mov         lr, #0
  001d8	e24b0f51	 sub         r0, r11, #0x51, 30
  001dc	e50b4140	 str         r4, [r11, #-0x140]
  001e0	e50b6144	 str         r6, [r11, #-0x144]
  001e4	e50b7138	 str         r7, [r11, #-0x138]
  001e8	e58de004	 str         lr, [sp, #4]
  001ec	e58de000	 str         lr, [sp]
  001f0	eb000000	 bl          |?Marshal@MarshalledBuffer_t@@QAAJPAXKKHH@Z|

; 812  :                 DEBUGMSG(SDCARD_ZONE_ERROR && (SdBusRequest.pBuffer!=NULL && UserBuffer.ptr()==0 ), 
; 813  :                     (TEXT("IOCTL_BUS_SD_BUS_REQUEST: Failed to marshal point 0x%x \n"),SdBusRequest.pBuffer));
; 814  :                 ASSERT(pDevice->GetCallbackHandle()!= NULL);
; 815  :                 status =  pDevice->SDBusRequest_I(SdBusRequest.Command,SdBusRequest.Argument,
; 816  :                     SdBusRequest.TransferClass,SdBusRequest.ResponseType,
; 817  :                     SdBusRequest.NumBlocks,SdBusRequest.BlockSize,(PUCHAR)UserBuffer.ptr(),
; 818  :                     SdBusRequest.ceDriverCallbackParam.pRequestCallback, SdBusRequest.ceDriverCallbackParam.dwRequestParam,
; 819  :                     &hBusRequest,SdBusRequest.Flags & ~SD_BUS_REQUEST_PHYS_BUFFER, 0, NULL);

  001f4	e51b3144	 ldr         r3, [r11, #-0x144]
  001f8	e50b3150	 str         r3, [r11, #-0x150]
  001fc	e3530000	 cmp         r3, #0
  00200	051b3140	 ldreq       r3, [r11, #-0x140]
  00204	050b3150	 streq       r3, [r11, #-0x150]
  00208	e5952000	 ldr         r2, [r5]
  0020c	e51b0070	 ldr         r0, [r11, #-0x70]
  00210	e51b6074	 ldr         r6, [r11, #-0x74]
  00214	e51b7084	 ldr         r7, [r11, #-0x84]
  00218	e51b8094	 ldr         r8, [r11, #-0x94]
  0021c	e5929018	 ldr         r9, [r2, #0x18]
  00220	e51b209c	 ldr         r2, [r11, #-0x9C]
  00224	e55b10a0	 ldrb        r1, [r11, #-0xA0]
  00228	e3c04902	 bic         r4, r0, #2, 18
  0022c	e51b3098	 ldr         r3, [r11, #-0x98]
  00230	e51b0154	 ldr         r0, [r11, #-0x154]
  00234	e3a05000	 mov         r5, #0
  00238	e58d5024	 str         r5, [sp, #0x24]
  0023c	e58d5020	 str         r5, [sp, #0x20]
  00240	e58d401c	 str         r4, [sp, #0x1C]
  00244	e24b5f57	 sub         r5, r11, #0x57, 30
  00248	e58d5018	 str         r5, [sp, #0x18]
  0024c	e58d6014	 str         r6, [sp, #0x14]
  00250	e58d7010	 str         r7, [sp, #0x10]
  00254	e51b4150	 ldr         r4, [r11, #-0x150]
  00258	e58d400c	 str         r4, [sp, #0xC]
  0025c	e51b408c	 ldr         r4, [r11, #-0x8C]
  00260	e58d4008	 str         r4, [sp, #8]
  00264	e51b4090	 ldr         r4, [r11, #-0x90]
  00268	e58d4004	 str         r4, [sp, #4]
  0026c	e58d8000	 str         r8, [sp]
  00270	e1a0e00f	 mov         lr, pc
  00274	e12fff19	 bx          r9
  00278	e1a04000	 mov         r4, r0

; 820  :                 pDevice->DeRef();

  0027c	e51b0154	 ldr         r0, [r11, #-0x154]
  00280	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|

; 821  :                 * (HANDLE *)pBufOut  = hBusRequest ;

  00284	e51b315c	 ldr         r3, [r11, #-0x15C]

; 822  :             }

  00288	e24b0f51	 sub         r0, r11, #0x51, 30
  0028c	e58a3000	 str         r3, [r10]
  00290	eb000000	 bl          |?Unmarshal@MarshalledBuffer_t@@QAAJXZ|

; 823  :             SetLastError(status);
; 824  :             fRet = SD_API_SUCCESS(status);
; 825  :         }
; 826  :         else
; 827  :             SetLastError(SD_API_STATUS_INVALID_PARAMETER);
; 828  :         break;

  00294	ea00025b	 b           |$LN31@IOControl@2|
  00298		 |$LN55@IOControl@2|

; 772  :     case IOCTL_BUS_SD_SYNCHRONOUS_BUS_REQUEST:
; 773  :         if (pBufIn && dwLenIn>= sizeof(IO_SD_SYNCHRONOUS_BUS_REQUEST)) {

  00298	e3560000	 cmp         r6, #0
  0029c	0a00025f	 beq         |$LN33@IOControl@2|
  002a0	e3570024	 cmp         r7, #0x24
  002a4	3a00025d	 bcc         |$LN33@IOControl@2|

; 774  :             SD_API_STATUS status = SD_API_STATUS_INVALID_PARAMETER; 
; 775  :             IO_SD_SYNCHRONOUS_BUS_REQUEST SdSyncBusRequest = *(PIO_SD_SYNCHRONOUS_BUS_REQUEST)pBufIn;

  002a8	e24b00a4	 sub         r0, r11, #0xA4
  002ac	e3a02024	 mov         r2, #0x24
  002b0	e1a01006	 mov         r1, r6
  002b4	e3a0411f	 mov         r4, #0x1F, 2
  002b8	eb000000	 bl          memcpy

; 776  :             SD_COMMAND_RESPONSE sdResponse;
; 777  :             // Mapping Embedded pointer.
; 778  :             CSDDevice * pDevice = GetDeviceByDevice(SdSyncBusRequest.hDevice);

  002bc	e51b00a4	 ldr         r0, [r11, #-0xA4]
  002c0	eb000000	 bl          |?GetDeviceByDevice@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z|
  002c4	e1b09000	 movs        r9, r0

; 779  :             if (pDevice) {

  002c8	0a00024e	 beq         |$LN31@IOControl@2|

; 780  :                 MarshalledBuffer_t UserBuffer((PVOID)SdSyncBusRequest.pBuffer,
; 781  :                     SdSyncBusRequest.BlockSize* SdSyncBusRequest.NumBlocks,
; 782  :                     SdSyncBusRequest.TransferClass==SD_READ ? ARG_O_PTR: ARG_I_PTR, FALSE, TRUE); // no duplicate and Async(because it could call BusRequest , read & write.            

  002cc	e51b3098	 ldr         r3, [r11, #-0x98]
  002d0	e3530000	 cmp         r3, #0
  002d4	03a03008	 moveq       r3, #8
  002d8	13a03004	 movne       r3, #4
  002dc	e51b0090	 ldr         r0, [r11, #-0x90]
  002e0	e51b208c	 ldr         r2, [r11, #-0x8C]
  002e4	e51b1088	 ldr         r1, [r11, #-0x88]
  002e8	e3a0e000	 mov         lr, #0
  002ec	e3a04000	 mov         r4, #0
  002f0	e3a05000	 mov         r5, #0
  002f4	e3a06001	 mov         r6, #1
  002f8	e0020290	 mul         r2, r0, r2
  002fc	e3a08000	 mov         r8, #0
  00300	e24b0f47	 sub         r0, r11, #0x47, 30
  00304	e50be118	 str         lr, [r11, #-0x118]
  00308	e50b411c	 str         r4, [r11, #-0x11C]
  0030c	e50b5110	 str         r5, [r11, #-0x110]
  00310	e58d6004	 str         r6, [sp, #4]
  00314	e58d8000	 str         r8, [sp]
  00318	eb000000	 bl          |?Marshal@MarshalledBuffer_t@@QAAJPAXKKHH@Z|

; 783  :                 DEBUGMSG(SDCARD_ZONE_ERROR && (SdSyncBusRequest.pBuffer!=NULL && UserBuffer.ptr()==0 ), 
; 784  :                     (TEXT("IOCTL_BUS_SD_SYNCHRONOUS_BUS_REQUEST: Failed to marshal point 0x%x \n"),SdSyncBusRequest.pBuffer));
; 785  :                 status =  pDevice->SDSynchronousBusRequest_I(
; 786  :                     SdSyncBusRequest.Command,SdSyncBusRequest.Argument,
; 787  :                     SdSyncBusRequest.TransferClass,SdSyncBusRequest.ResponseType,&sdResponse,
; 788  :                     SdSyncBusRequest.NumBlocks,SdSyncBusRequest.BlockSize,(PUCHAR)UserBuffer.ptr(),
; 789  :                     SdSyncBusRequest.Flags &~SD_BUS_REQUEST_PHYS_BUFFER, 0, NULL);

  0031c	e51b311c	 ldr         r3, [r11, #-0x11C]
  00320	e50b315c	 str         r3, [r11, #-0x15C]
  00324	e3530000	 cmp         r3, #0
  00328	051b3118	 ldreq       r3, [r11, #-0x118]
  0032c	050b315c	 streq       r3, [r11, #-0x15C]
  00330	e5992000	 ldr         r2, [r9]
  00334	e51be084	 ldr         lr, [r11, #-0x84]
  00338	e51b6094	 ldr         r6, [r11, #-0x94]
  0033c	e5927014	 ldr         r7, [r2, #0x14]
  00340	e51b209c	 ldr         r2, [r11, #-0x9C]
  00344	e55b10a0	 ldrb        r1, [r11, #-0xA0]
  00348	e3ce4902	 bic         r4, lr, #2, 18
  0034c	e24b5048	 sub         r5, r11, #0x48
  00350	e51b3098	 ldr         r3, [r11, #-0x98]
  00354	e1a00009	 mov         r0, r9
  00358	e58d801c	 str         r8, [sp, #0x1C]
  0035c	e58d8018	 str         r8, [sp, #0x18]
  00360	e58d4014	 str         r4, [sp, #0x14]
  00364	e51b415c	 ldr         r4, [r11, #-0x15C]
  00368	e58d4010	 str         r4, [sp, #0x10]
  0036c	e51b408c	 ldr         r4, [r11, #-0x8C]
  00370	e58d400c	 str         r4, [sp, #0xC]
  00374	e51b4090	 ldr         r4, [r11, #-0x90]
  00378	e58d4008	 str         r4, [sp, #8]
  0037c	e58d5004	 str         r5, [sp, #4]
  00380	e58d6000	 str         r6, [sp]
  00384	e1a0e00f	 mov         lr, pc
  00388	e12fff17	 bx          r7
  0038c	e1a04000	 mov         r4, r0

; 790  :                 if (pBufOut && dwLenOut>= sizeof(SD_COMMAND_RESPONSE)) { // Response can be optional.

  00390	e35a0000	 cmp         r10, #0
  00394	0a000005	 beq         |$LN52@IOControl@2|
  00398	e59b3004	 ldr         r3, [r11, #4]
  0039c	e3530018	 cmp         r3, #0x18

; 791  :                     *(PSD_COMMAND_RESPONSE)pBufOut = sdResponse ;

  003a0	224b1048	 subcs       r1, r11, #0x48
  003a4	23a02018	 movcs       r2, #0x18
  003a8	21a0000a	 movcs       r0, r10
  003ac	2b000000	 blcs        memcpy
  003b0		 |$LN52@IOControl@2|

; 792  :                 }
; 793  :                 pDevice->DeRef();

  003b0	e1a00009	 mov         r0, r9
  003b4	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|

; 794  :             }

  003b8	e24b0f47	 sub         r0, r11, #0x47, 30

; 822  :             }

  003bc	eb000000	 bl          |?Unmarshal@MarshalledBuffer_t@@QAAJXZ|

; 823  :             SetLastError(status);
; 824  :             fRet = SD_API_SUCCESS(status);
; 825  :         }
; 826  :         else
; 827  :             SetLastError(SD_API_STATUS_INVALID_PARAMETER);
; 828  :         break;

  003c0	ea000210	 b           |$LN31@IOControl@2|
  003c4		 |$LN60@IOControl@2|

; 746  :             SetLastError(status);
; 747  :             fRet = SD_API_SUCCESS(status);
; 748  :         }
; 749  :         else 
; 750  :             SetLastError(SD_API_STATUS_INVALID_PARAMETER);
; 751  :         break;         
; 752  :     case IOCTL_BUS_SD_REGISTER_CLIENT:
; 753  :         if (pBufIn && dwLenIn>=sizeof(IO_SD_REGISTERCLIENTDEVICE)) {

  003c4	e3560000	 cmp         r6, #0
  003c8	0a000214	 beq         |$LN33@IOControl@2|
  003cc	e357005c	 cmp         r7, #0x5C
  003d0	3a000212	 bcc         |$LN33@IOControl@2|

; 754  :             IO_SD_REGISTERCLIENTDEVICE RegisterClientDriver = *(PIO_SD_REGISTERCLIENTDEVICE) pBufIn;

  003d4	e24b00a4	 sub         r0, r11, #0xA4
  003d8	e3a0205c	 mov         r2, #0x5C
  003dc	e1a01006	 mov         r1, r6
  003e0	eb000000	 bl          memcpy

; 755  :             SD_API_STATUS status = SD_API_STATUS_INVALID_PARAMETER; 
; 756  :             CSDDevice * pDevice = GetDeviceByDevice(RegisterClientDriver.hDevice);

  003e4	e51b00a4	 ldr         r0, [r11, #-0xA4]
  003e8	e3a0411f	 mov         r4, #0x1F, 2
  003ec	eb000000	 bl          |?GetDeviceByDevice@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z|
  003f0	e1b05000	 movs        r5, r0

; 757  :             if (pDevice) {

  003f4	0a000203	 beq         |$LN31@IOControl@2|

; 758  :                 status = pDevice->RegisterClient(RegisterClientDriver.hCallbackAPI,
; 759  :                     RegisterClientDriver.pDeviceContext, &RegisterClientDriver.sdClientRegistrationInfo);

  003f8	e51b20a0	 ldr         r2, [r11, #-0xA0]
  003fc	e51b109c	 ldr         r1, [r11, #-0x9C]
  00400	e24b3098	 sub         r3, r11, #0x98
  00404	e1a00005	 mov         r0, r5
  00408	eb000000	 bl          |?RegisterClient@CSDDevice@@QAAJPAX0PAU_SDCARD_CLIENT_REGISTRATION_INFO@@@Z|
  0040c		 |$LN213@IOControl@2|
  0040c	e1a04000	 mov         r4, r0
  00410		 |$LN119@IOControl@2|

; 760  :                 if (status != SD_API_STATUS_SUCCESS) {
; 761  :                     DEBUGMSG(SDCARD_ZONE_ERROR, (TEXT("SDRegisterClient: Failed to register client 0x%08X \n"),status));
; 762  :                 }
; 763  :                 pDevice->DeRef();

  00410	e1a00005	 mov         r0, r5
  00414	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|

; 764  :             }
; 765  :             SetLastError(status);
; 766  :             fRet = SD_API_SUCCESS(status);
; 767  :             
; 768  :         }
; 769  :         else
; 770  :             SetLastError(SD_API_STATUS_INVALID_PARAMETER);
; 771  :         break;

  00418	ea0001fa	 b           |$LN31@IOControl@2|
  0041c		 |$LN29@IOControl@2|

; 918  :         break;
; 919  :     case IOCTL_BUS_SD_CARD_INFO_QUERY:
; 920  :         if (pBufIn && dwLenIn>= sizeof(IO_SD_CARD_INFO_QUERY)) {

  0041c	e3560000	 cmp         r6, #0
  00420	0a0001fe	 beq         |$LN33@IOControl@2|
  00424	e3570008	 cmp         r7, #8
  00428	3a0001fc	 bcc         |$LN33@IOControl@2|

; 921  :             SD_API_STATUS status = SD_API_STATUS_INVALID_PARAMETER; 
; 922  :             PIO_SD_CARD_INFO_QUERY pSdCardInfoQuery = (PIO_SD_CARD_INFO_QUERY)pBufIn;
; 923  :             CSDDevice * pDevice =  GetDeviceByDevice(pSdCardInfoQuery->hDevice);

  0042c	e5960000	 ldr         r0, [r6]
  00430	e3a0411f	 mov         r4, #0x1F, 2
  00434	e50b414c	 str         r4, [r11, #-0x14C]
  00438	eb000000	 bl          |?GetDeviceByDevice@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z|
  0043c	e1b05000	 movs        r5, r0
  00440	e50b5158	 str         r5, [r11, #-0x158]

; 924  :             if (pDevice) {

  00444	0a0001ef	 beq         |$LN31@IOControl@2|
  00448		 |$LN117@IOControl@2|

; 925  :                 __try {
; 926  :                     status = pDevice->SDCardInfoQuery_I(pSdCardInfoQuery->InfoType,pBufOut,dwLenOut);

  00448	e5952000	 ldr         r2, [r5]
  0044c	e59b3004	 ldr         r3, [r11, #4]
  00450	e5961004	 ldr         r1, [r6, #4]
  00454	e5924034	 ldr         r4, [r2, #0x34]
  00458	e1a0200a	 mov         r2, r10
  0045c	e1a00005	 mov         r0, r5
  00460	e1a0e00f	 mov         lr, pc
  00464	e12fff14	 bx          r4
  00468	e1a04000	 mov         r4, r0
  0046c	e50b414c	 str         r4, [r11, #-0x14C]
  00470		 |$LN118@IOControl@2|

; 927  :                 }

  00470	eaffffe6	 b           |$LN119@IOControl@2|
  00474		 |$LN114@IOControl@2|

; 928  :                 __except(SDProcessException(GetExceptionInformation())) {

  00474	e51b414c	 ldr         r4, [r11, #-0x14C]
  00478	e51b5158	 ldr         r5, [r11, #-0x158]
  0047c	eaffffe3	 b           |$LN119@IOControl@2|
  00480		 |$LN109@IOControl@2|

; 700  :     BOOL fRet = FALSE;
; 701  : 
; 702  :     switch (dwCode) {

  00480	e59f37fc	 ldr         r3, [pc, #0x7FC]
  00484	e1510003	 cmp         r1, r3
  00488	8a0000d2	 bhi         |$LN111@IOControl@2|
  0048c	0a0000aa	 beq         |$LN69@IOControl@2|
  00490	e59f37e8	 ldr         r3, [pc, #0x7E8]
  00494	e1510003	 cmp         r1, r3
  00498	0a000072	 beq         |$LN65@IOControl@2|
  0049c	e59f37d8	 ldr         r3, [pc, #0x7D8]
  004a0	e1510003	 cmp         r1, r3
  004a4	0a00005d	 beq         |$LN24@IOControl@2|
  004a8	e59f37c8	 ldr         r3, [pc, #0x7C8]
  004ac	e1510003	 cmp         r1, r3
  004b0	0a00002d	 beq         |$LN19@IOControl@2|
  004b4	e3a0382a	 mov         r3, #0x2A, 16
  004b8	e3833e52	 orr         r3, r3, #0x52, 28
  004bc	e1510003	 cmp         r1, r3
  004c0	0a000013	 beq         |$LN13@IOControl@2|
  004c4	e59f37a8	 ldr         r3, [pc, #0x7A8]
  004c8	e1510003	 cmp         r1, r3
  004cc	1a0000ce	 bne         |$LN1@IOControl@2|

; 991  :     case IOCTL_BUS_SD_IO_DISCONNECT_INTERRUPT:
; 992  :         if (pBufIn && dwLenIn>=sizeof(SD_DEVICE_HANDLE) ) {

  004d0	e3560000	 cmp         r6, #0
  004d4	0a0001d1	 beq         |$LN33@IOControl@2|
  004d8	e3570004	 cmp         r7, #4
  004dc	3a0001cf	 bcc         |$LN33@IOControl@2|

; 993  :             HANDLE hDevice = *(HANDLE *)pBufIn;

  004e0	e5960000	 ldr         r0, [r6]

; 994  :             CSDDevice * pDevice = GetDeviceByDevice (hDevice);

  004e4	eb000000	 bl          |?GetDeviceByDevice@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z|
  004e8	e1b04000	 movs        r4, r0

; 995  :             if (pDevice) {

  004ec	0affff16	 beq         |$LN214@IOControl@2|

; 996  :                 pDevice->SDIOConnectDisconnectInterrupt(NULL,FALSE);

  004f0	e5943000	 ldr         r3, [r4]
  004f4	e3a02000	 mov         r2, #0
  004f8	e3a01000	 mov         r1, #0
  004fc	e5933028	 ldr         r3, [r3, #0x28]
  00500	e1a00004	 mov         r0, r4
  00504	e1a0e00f	 mov         lr, pc
  00508	e12fff13	 bx          r3

; 997  :                 pDevice->DeRef();

  0050c	e1a00004	 mov         r0, r4

; 998  :             }
; 999  :             fRet = TRUE;
; 1000 :         }
; 1001 :         else 
; 1002 :             SetLastError(SD_API_STATUS_INVALID_PARAMETER);
; 1003 :         break;         

  00510	eaffff0c	 b           |$LN215@IOControl@2|
  00514		 |$LN13@IOControl@2|

; 976  :     case IOCTL_BUS_SD_IO_CONNECT_INTERRUPT:
; 977  :         if (pBufIn && dwLenIn>=sizeof(IO_SD_IO_CONNECT_INTERRUPT) ) {

  00514	e3560000	 cmp         r6, #0
  00518	0a0001c0	 beq         |$LN33@IOControl@2|
  0051c	e3570010	 cmp         r7, #0x10
  00520	3a0001be	 bcc         |$LN33@IOControl@2|

; 978  :             SD_API_STATUS status = SD_API_STATUS_INVALID_PARAMETER; 
; 979  :             IO_SD_IO_CONNECT_INTERRUPT SdConnectInterrupt = *(PIO_SD_IO_CONNECT_INTERRUPT)pBufIn;

  00524	e5963008	 ldr         r3, [r6, #8]
  00528	e596200c	 ldr         r2, [r6, #0xC]
  0052c	e5960000	 ldr         r0, [r6]
  00530	e50b3040	 str         r3, [r11, #-0x40]
  00534	e50b203c	 str         r2, [r11, #-0x3C]
  00538	e5966004	 ldr         r6, [r6, #4]
  0053c	e3a0411f	 mov         r4, #0x1F, 2

; 980  :             CSDDevice * pDevice = GetDeviceByDevice (SdConnectInterrupt.hDevice);

  00540	eb000000	 bl          |?GetDeviceByDevice@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z|
  00544	e1b05000	 movs        r5, r0

; 981  :             if (pDevice) {

  00548	0a0001ae	 beq         |$LN31@IOControl@2|

; 982  :                 status = pDevice->SDIOConnectDisconnectInterrupt(SdConnectInterrupt.sdInterruptCallback.pSdInterruptCallback,TRUE);

  0054c	e5953000	 ldr         r3, [r5]
  00550	e3a02001	 mov         r2, #1
  00554	e1a01006	 mov         r1, r6
  00558	e5933028	 ldr         r3, [r3, #0x28]
  0055c	e1a00005	 mov         r0, r5
  00560	e1a0e00f	 mov         lr, pc
  00564	e12fff13	 bx          r3

; 983  :                 pDevice->DeRef();
; 984  :             }
; 985  :             SetLastError(status);
; 986  :             fRet = SD_API_SUCCESS(status);
; 987  :         }
; 988  :         else 
; 989  :             SetLastError(SD_API_STATUS_INVALID_PARAMETER);
; 990  :         break;         

  00568	eaffffa7	 b           |$LN213@IOControl@2|
  0056c		 |$LN19@IOControl@2|

; 950  :             SetLastError(ERROR_INVALID_PARAMETER);
; 951  :         break;
; 952  :     case IOCTL_BUS_SD_GET_TUPLE:
; 953  :         if (pBufIn && dwLenIn>=sizeof(IO_BUS_SD_GET_TUPLE) ) {

  0056c	e3560000	 cmp         r6, #0
  00570	0a0001aa	 beq         |$LN33@IOControl@2|
  00574	e357000c	 cmp         r7, #0xC
  00578	3a0001a8	 bcc         |$LN33@IOControl@2|

; 954  :             SD_API_STATUS status = SD_API_STATUS_INVALID_PARAMETER; 
; 955  :             IO_BUS_SD_GET_TUPLE BusSdGetTuple = *(PIO_BUS_SD_GET_TUPLE)pBufIn;

  0057c	e5963004	 ldr         r3, [r6, #4]

; 956  :             DWORD dwBufferSize = dwLenOut;

  00580	e59b2004	 ldr         r2, [r11, #4]
  00584	e5960000	 ldr         r0, [r6]
  00588	e3a0411f	 mov         r4, #0x1F, 2
  0058c	e50b3044	 str         r3, [r11, #-0x44]
  00590	e50b215c	 str         r2, [r11, #-0x15C]
  00594	e5966008	 ldr         r6, [r6, #8]
  00598	e50b4148	 str         r4, [r11, #-0x148]

; 957  :             CSDDevice * pDevice = GetDeviceByDevice (BusSdGetTuple.hDevice);

  0059c	eb000000	 bl          |?GetDeviceByDevice@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z|
  005a0	e1b05000	 movs        r5, r0
  005a4	e50b5158	 str         r5, [r11, #-0x158]

; 958  :             if (pDevice) {

  005a8	0a000010	 beq         |$LN17@IOControl@2|
  005ac		 |$LN124@IOControl@2|

; 959  :                 __try {
; 960  :                     status = pDevice->SDGetTuple_I(BusSdGetTuple.TupleCode, pBufOut,&dwBufferSize, BusSdGetTuple.CommonCIS);

  005ac	e5952000	 ldr         r2, [r5]
  005b0	e55b1044	 ldrb        r1, [r11, #-0x44]
  005b4	e24b3f57	 sub         r3, r11, #0x57, 30
  005b8	e5924030	 ldr         r4, [r2, #0x30]
  005bc	e1a0200a	 mov         r2, r10
  005c0	e1a00005	 mov         r0, r5
  005c4	e58d6000	 str         r6, [sp]
  005c8	e1a0e00f	 mov         lr, pc
  005cc	e12fff14	 bx          r4
  005d0	e1a04000	 mov         r4, r0
  005d4	e50b4148	 str         r4, [r11, #-0x148]
  005d8		 |$LN125@IOControl@2|

; 961  :                 }

  005d8	ea000002	 b           |$LN126@IOControl@2|
  005dc		 |$LN121@IOControl@2|

; 962  :                 __except(SDProcessException(GetExceptionInformation())) {

  005dc	e51b4148	 ldr         r4, [r11, #-0x148]
  005e0	e51b5158	 ldr         r5, [r11, #-0x158]
  005e4	e51b8154	 ldr         r8, [r11, #-0x154]
  005e8		 |$LN126@IOControl@2|

; 963  :                     SD_API_STATUS status = SD_API_STATUS_ACCESS_VIOLATION; 
; 964  :                 }
; 965  :                 pDevice->DeRef();

  005e8	e1a00005	 mov         r0, r5
  005ec	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|
  005f0		 |$LN17@IOControl@2|

; 966  :             }
; 967  :             SetLastError(status);

  005f0	e1a00004	 mov         r0, r4
  005f4	eb000000	 bl          SetLastError

; 968  :             fRet = SD_API_SUCCESS(status);

  005f8	e3540000	 cmp         r4, #0
  005fc	4a000185	 bmi         |$LN99@IOControl@2|
  00600	e3a04001	 mov         r4, #1

; 969  :             if (fRet && pdwActualOut) {

  00604	e3580000	 cmp         r8, #0
  00608	0a000186	 beq         |$LN30@IOControl@2|

; 970  :                 *pdwActualOut = dwBufferSize;

  0060c	e51b315c	 ldr         r3, [r11, #-0x15C]
  00610	e5883000	 str         r3, [r8]

; 971  :             }
; 972  :         }
; 973  :         else 
; 974  :             SetLastError(SD_API_STATUS_INVALID_PARAMETER);
; 975  :         break;         

  00614	ea000183	 b           |$LN30@IOControl@2|
  00618		 |$LN207@IOControl@2|

; 1021 :     };
; 1022 : 
; 1023 :     return fRet;

  00618	e51b4158	 ldr         r4, [r11, #-0x158]
  0061c	ea000183	 b           |$LN73@IOControl@2|
  00620		 |$LN24@IOControl@2|

; 929  :                     SD_API_STATUS status = SD_API_STATUS_ACCESS_VIOLATION; 
; 930  :                 }
; 931  :                 pDevice->DeRef();
; 932  :             }
; 933  :             SetLastError(status);
; 934  :             fRet = SD_API_SUCCESS(status);
; 935  :         }
; 936  :         else 
; 937  :             SetLastError(SD_API_STATUS_INVALID_PARAMETER);
; 938  :         break;            
; 939  :     case IOCTL_BUS_SD_CANCEL_BUS_REQUEST:
; 940  :         if (pBufIn && dwLenIn>=sizeof(HANDLE)) {

  00620	e3560000	 cmp         r6, #0
  00624	0a00000d	 beq         |$LN22@IOControl@2|
  00628	e3570004	 cmp         r7, #4
  0062c	3a00000b	 bcc         |$LN22@IOControl@2|

; 941  :             HANDLE hRequest = *(HANDLE *)pBufIn;

  00630	e5965000	 ldr         r5, [r6]

; 942  :             CSDDevice * pDevice = GetDeviceByRequest(hRequest);

  00634	e1a00005	 mov         r0, r5
  00638	eb000000	 bl          |?GetDeviceByRequest@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z|
  0063c	e3500000	 cmp         r0, #0

; 943  :             if (pDevice) {

  00640	0a000006	 beq         |$LN22@IOControl@2|

; 944  :                 fRet = pDevice->SDCancelBusRequest_I(hRequest);

  00644	e5903000	 ldr         r3, [r0]
  00648	e1a01005	 mov         r1, r5
  0064c	e5933024	 ldr         r3, [r3, #0x24]
  00650	e1a0e00f	 mov         lr, pc
  00654	e12fff13	 bx          r3

; 1011 :             }
; 1012 :             
; 1013 :         }
; 1014 :         else
; 1015 :             SetLastError(SD_API_STATUS_INVALID_PARAMETER);
; 1016 :         break;
; 1017 :     default:
; 1018 :         fRet = DefaultBusDriver::IOControl(dwCode, pBufIn, dwLenIn, pBufOut, 
; 1019 :             dwLenOut, pdwActualOut);

  00658	e1a04000	 mov         r4, r0

; 1020 :         break;

  0065c	ea000171	 b           |$LN30@IOControl@2|
  00660		 |$LN22@IOControl@2|

; 945  :             }
; 946  :             else 
; 947  :                 SetLastError(ERROR_INVALID_PARAMETER);

  00660	e3a00057	 mov         r0, #0x57

; 948  :         }
; 949  :         else

  00664	ea00016e	 b           |$LN211@IOControl@2|
  00668		 |$LN65@IOControl@2|

; 723  :             SetLastError(status);
; 724  :             fRet = SD_API_SUCCESS(status);
; 725  :         }
; 726  :         else 
; 727  :             SetLastError(SD_API_STATUS_INVALID_PARAMETER);
; 728  :         break;
; 729  :     case IOCTL_BUS_SD_READ_WRITE_REGISTERS_DIRECT: 
; 730  :         if (pBufIn && dwLenIn>= sizeof(IO_SD_CARD_INFO_QUERY)) {

  00668	e3560000	 cmp         r6, #0
  0066c	0a00016b	 beq         |$LN33@IOControl@2|
  00670	e3570008	 cmp         r7, #8
  00674	3a000169	 bcc         |$LN33@IOControl@2|

; 731  :             SD_API_STATUS status = SD_API_STATUS_INVALID_PARAMETER; 
; 732  :             IO_SD_READ_WRITE_REGISTERS_DIRECT ReadWriteRegisterDirect = *(PIO_SD_READ_WRITE_REGISTERS_DIRECT) pBufIn;

  00678	e24b0048	 sub         r0, r11, #0x48
  0067c	e3a0201c	 mov         r2, #0x1C
  00680	e1a01006	 mov         r1, r6
  00684	e3a0411f	 mov         r4, #0x1F, 2
  00688	eb000000	 bl          memcpy

; 733  :             CSDDevice * pDevice = GetDeviceByDevice(ReadWriteRegisterDirect.hDevice);

  0068c	e51b0048	 ldr         r0, [r11, #-0x48]
  00690	eb000000	 bl          |?GetDeviceByDevice@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z|
  00694	e1b07000	 movs        r7, r0

; 734  :             if (pDevice) {

  00698	0a00015a	 beq         |$LN31@IOControl@2|

; 735  :                 DWORD dwArg = (ReadWriteRegisterDirect.ReadWrite==SD_IO_WRITE? ARG_I_PTR: ARG_O_PTR);

  0069c	e51b6044	 ldr         r6, [r11, #-0x44]
  006a0	e3560001	 cmp         r6, #1
  006a4	03a03004	 moveq       r3, #4
  006a8	13a03008	 movne       r3, #8

; 736  :                 if (ReadWriteRegisterDirect.ReadAfterWrite)

  006ac	e55b4038	 ldrb        r4, [r11, #-0x38]
  006b0	e3540000	 cmp         r4, #0

; 737  :                     dwArg|= ARG_O_PTR ;

  006b4	13833008	 orrne       r3, r3, #8

; 738  :                 MarshalledBuffer_t UserBuffer((PVOID)ReadWriteRegisterDirect.pBuffer,ReadWriteRegisterDirect.Length,dwArg,FALSE,FALSE);

  006b8	e51b1034	 ldr         r1, [r11, #-0x34]
  006bc	e51b8030	 ldr         r8, [r11, #-0x30]
  006c0	e3a05000	 mov         r5, #0
  006c4	e3a09000	 mov         r9, #0
  006c8	e3a0a000	 mov         r10, #0
  006cc	e3a0e000	 mov         lr, #0
  006d0	e1a02008	 mov         r2, r8
  006d4	e24b0f42	 sub         r0, r11, #0x42, 30
  006d8	e50b5104	 str         r5, [r11, #-0x104]
  006dc	e50b9108	 str         r9, [r11, #-0x108]
  006e0	e50ba0fc	 str         r10, [r11, #-0xFC]
  006e4	e58de004	 str         lr, [sp, #4]
  006e8	e58de000	 str         lr, [sp]
  006ec	eb000000	 bl          |?Marshal@MarshalledBuffer_t@@QAAJPAXKKHH@Z|

; 739  :                 DEBUGMSG(SDCARD_ZONE_ERROR && (ReadWriteRegisterDirect.pBuffer!=NULL && UserBuffer.ptr()==0 ), 
; 740  :                     (TEXT("IOCTL_BUS_SD_READ_WRITE_REGISTERS_DIRECT: Failed to marshal point 0x%x \n"),ReadWriteRegisterDirect.pBuffer));
; 741  :                 status = pDevice->SDReadWriteRegistersDirect_I(ReadWriteRegisterDirect.ReadWrite,
; 742  :                             ReadWriteRegisterDirect.Address,ReadWriteRegisterDirect.ReadAfterWrite,
; 743  :                             (PUCHAR)UserBuffer.ptr(),ReadWriteRegisterDirect.Length);

  006f0	e51b5108	 ldr         r5, [r11, #-0x108]
  006f4	e3550000	 cmp         r5, #0
  006f8	051b5104	 ldreq       r5, [r11, #-0x104]
  006fc	e5970000	 ldr         r0, [r7]
  00700	e51b203c	 ldr         r2, [r11, #-0x3C]
  00704	e1a03004	 mov         r3, r4
  00708	e5904010	 ldr         r4, [r0, #0x10]
  0070c	e1a01006	 mov         r1, r6
  00710	e1a00007	 mov         r0, r7
  00714	e58d8004	 str         r8, [sp, #4]
  00718	e58d5000	 str         r5, [sp]
  0071c	e1a0e00f	 mov         lr, pc
  00720	e12fff14	 bx          r4
  00724	e1a04000	 mov         r4, r0

; 744  :                 pDevice->DeRef();

  00728	e1a00007	 mov         r0, r7
  0072c	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|

; 745  :             }

  00730	e24b0f42	 sub         r0, r11, #0x42, 30

; 822  :             }

  00734	eb000000	 bl          |?Unmarshal@MarshalledBuffer_t@@QAAJXZ|

; 823  :             SetLastError(status);
; 824  :             fRet = SD_API_SUCCESS(status);
; 825  :         }
; 826  :         else
; 827  :             SetLastError(SD_API_STATUS_INVALID_PARAMETER);
; 828  :         break;

  00738	ea000132	 b           |$LN31@IOControl@2|
  0073c		 |$LN69@IOControl@2|

; 711  :         fRet = FALSE;
; 712  :         break;
; 713  :     case IOCTL_BUS_SD_SET_CARD_FEATURE:
; 714  :         if (pBufIn && dwLenIn>=sizeof(IO_SD_SET_CARD_FEATURE) ) {

  0073c	e3560000	 cmp         r6, #0
  00740	0a000136	 beq         |$LN33@IOControl@2|
  00744	e3570010	 cmp         r7, #0x10
  00748	3a000134	 bcc         |$LN33@IOControl@2|

; 715  :             SD_API_STATUS status = SD_API_STATUS_INVALID_PARAMETER; 
; 716  :             IO_SD_SET_CARD_FEATURE SdSetCardFeature = *(PIO_SD_SET_CARD_FEATURE) pBufIn;

  0074c	e5960000	 ldr         r0, [r6]
  00750	e5967004	 ldr         r7, [r6, #4]
  00754	e5968008	 ldr         r8, [r6, #8]
  00758	e596600c	 ldr         r6, [r6, #0xC]
  0075c	e3a0411f	 mov         r4, #0x1F, 2

; 717  :             CSDDevice * pDevice = GetDeviceByDevice (SdSetCardFeature.hDevice);

  00760	eb000000	 bl          |?GetDeviceByDevice@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z|
  00764	e1b05000	 movs        r5, r0

; 718  :             if (pDevice) {

  00768	0a000126	 beq         |$LN31@IOControl@2|

; 719  :                 MarshalledBuffer_t UserBuffer((PVOID) SdSetCardFeature.pInBuf,SdSetCardFeature.nInBufSize,ARG_I_PTR, FALSE, FALSE);

  0076c	e3a03000	 mov         r3, #0
  00770	e3a02000	 mov         r2, #0
  00774	e3a01000	 mov         r1, #0
  00778	e50b30c8	 str         r3, [r11, #-0xC8]
  0077c	e50b20cc	 str         r2, [r11, #-0xCC]
  00780	e50b10c0	 str         r1, [r11, #-0xC0]
  00784	e3a0e000	 mov         lr, #0
  00788	e3a03004	 mov         r3, #4
  0078c	e1a02006	 mov         r2, r6
  00790	e1a01008	 mov         r1, r8
  00794	e24b00cc	 sub         r0, r11, #0xCC
  00798	e58de004	 str         lr, [sp, #4]
  0079c	e58de000	 str         lr, [sp]
  007a0	eb000000	 bl          |?Marshal@MarshalledBuffer_t@@QAAJPAXKKHH@Z|

; 720  :                 status = pDevice->SDSetCardFeature_I(SdSetCardFeature.CardFeature,UserBuffer.ptr(),SdSetCardFeature.nInBufSize) ;

  007a4	e51b20cc	 ldr         r2, [r11, #-0xCC]
  007a8	e3520000	 cmp         r2, #0
  007ac	051b20c8	 ldreq       r2, [r11, #-0xC8]
  007b0	e1a03006	 mov         r3, r6
  007b4	e1a01007	 mov         r1, r7
  007b8	e1a00005	 mov         r0, r5
  007bc	eb000000	 bl          |?SDSetCardFeature_I@CSDDevice@@QAAJW4SD_SET_FEATURE_TYPE@@PAXK@Z|
  007c0	e1a04000	 mov         r4, r0

; 721  :                 pDevice->DeRef();

  007c4	e1a00005	 mov         r0, r5
  007c8	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|

; 722  :             }

  007cc	e24b00cc	 sub         r0, r11, #0xCC

; 822  :             }

  007d0	eb000000	 bl          |?Unmarshal@MarshalledBuffer_t@@QAAJXZ|

; 823  :             SetLastError(status);
; 824  :             fRet = SD_API_SUCCESS(status);
; 825  :         }
; 826  :         else
; 827  :             SetLastError(SD_API_STATUS_INVALID_PARAMETER);
; 828  :         break;

  007d4	ea00010b	 b           |$LN31@IOControl@2|
  007d8		 |$LN111@IOControl@2|

; 700  :     BOOL fRet = FALSE;
; 701  : 
; 702  :     switch (dwCode) {

  007d8	e59f3490	 ldr         r3, [pc, #0x490]
  007dc	e1510003	 cmp         r1, r3
  007e0	0a0000ea	 beq         |$LN34@IOControl@2|
  007e4	e3a0382a	 mov         r3, #0x2A, 16
  007e8	e3833e53	 orr         r3, r3, #0x53, 28
  007ec	e1510003	 cmp         r1, r3
  007f0	0a0000d5	 beq         |$LN5@IOControl@2|
  007f4	e59f3470	 ldr         r3, [pc, #0x470]
  007f8	e1510003	 cmp         r1, r3
  007fc	0a000075	 beq         |$LN46@IOControl@2|
  00800	e59f3460	 ldr         r3, [pc, #0x460]
  00804	e1510003	 cmp         r1, r3
  00808	0a00000d	 beq         |$LN41@IOControl@2|
  0080c		 |$LN1@IOControl@2|

; 1011 :             }
; 1012 :             
; 1013 :         }
; 1014 :         else
; 1015 :             SetLastError(SD_API_STATUS_INVALID_PARAMETER);
; 1016 :         break;
; 1017 :     default:
; 1018 :         fRet = DefaultBusDriver::IOControl(dwCode, pBufIn, dwLenIn, pBufOut, 
; 1019 :             dwLenOut, pdwActualOut);

  0080c	e5903000	 ldr         r3, [r0]
  00810	e59b4004	 ldr         r4, [r11, #4]
  00814	e3a09000	 mov         r9, #0
  00818	e5935058	 ldr         r5, [r3, #0x58]
  0081c	e1a03007	 mov         r3, r7
  00820	e1a02006	 mov         r2, r6
  00824	e58d900c	 str         r9, [sp, #0xC]
  00828	e58d8008	 str         r8, [sp, #8]
  0082c	e58d4004	 str         r4, [sp, #4]
  00830	e58da000	 str         r10, [sp]
  00834	e1a0e00f	 mov         lr, pc
  00838	e12fff15	 bx          r5
  0083c	e1a04000	 mov         r4, r0

; 1020 :         break;

  00840	ea0000f8	 b           |$LN30@IOControl@2|
  00844		 |$LN41@IOControl@2|

; 853  :             SetLastError(status);
; 854  :             fRet = SD_API_SUCCESS(status);
; 855  :         }
; 856  :         else
; 857  :             SetLastError(SD_API_STATUS_INVALID_PARAMETER);
; 858  :         break;
; 859  :     case IOCTL_BUS_SD_BUS_REQUEST_EX:
; 860  :         if (pBufIn && dwLenIn>= sizeof(IO_SD_BUS_REQUEST_EX) && pBufOut && dwLenOut>= sizeof(HANDLE)) {

  00844	e3560000	 cmp         r6, #0
  00848	0a0000f4	 beq         |$LN33@IOControl@2|
  0084c	e3570040	 cmp         r7, #0x40
  00850	3a0000f2	 bcc         |$LN33@IOControl@2|
  00854	e35a0000	 cmp         r10, #0
  00858	0a0000f0	 beq         |$LN33@IOControl@2|
  0085c	e59b3004	 ldr         r3, [r11, #4]
  00860	e3530004	 cmp         r3, #4
  00864	3a0000ed	 bcc         |$LN33@IOControl@2|

; 861  :             SD_API_STATUS status = SD_API_STATUS_INVALID_PARAMETER; 
; 862  :             IO_SD_BUS_REQUEST_EX SdBusRequest = *(PIO_SD_BUS_REQUEST_EX)pBufIn;

  00868	e24b00a4	 sub         r0, r11, #0xA4
  0086c	e3a02040	 mov         r2, #0x40
  00870	e1a01006	 mov         r1, r6
  00874	e3a0411f	 mov         r4, #0x1F, 2
  00878	eb000000	 bl          memcpy

; 863  :             HANDLE hBusRequest = NULL ;
; 864  :             // Mapping Embedded pointer.
; 865  :             CSDDevice * pDevice = GetDeviceByDevice(SdBusRequest.hDevice);

  0087c	e51b00a4	 ldr         r0, [r11, #-0xA4]
  00880	e3a03000	 mov         r3, #0
  00884	e50b3158	 str         r3, [r11, #-0x158]
  00888	eb000000	 bl          |?GetDeviceByDevice@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z|
  0088c	e1b05000	 movs        r5, r0
  00890	e50b5150	 str         r5, [r11, #-0x150]

; 866  :             if (pDevice) {

  00894	0a0000db	 beq         |$LN31@IOControl@2|

; 867  :                 MarshalledBuffer_t UserBuffer((PVOID)SdBusRequest.pBuffer,
; 868  :                     SdBusRequest.BlockSize* SdBusRequest.NumBlocks,
; 869  :                     SdBusRequest.TransferClass==SD_READ ? ARG_O_PTR: ARG_I_PTR, FALSE,FALSE); // no duplicate and no Async , read & write.

  00898	e51b3098	 ldr         r3, [r11, #-0x98]
  0089c	e3530000	 cmp         r3, #0
  008a0	03a03008	 moveq       r3, #8
  008a4	13a03004	 movne       r3, #4
  008a8	e51b0090	 ldr         r0, [r11, #-0x90]
  008ac	e51b208c	 ldr         r2, [r11, #-0x8C]
  008b0	e51b1088	 ldr         r1, [r11, #-0x88]
  008b4	e3a0e000	 mov         lr, #0
  008b8	e3a06000	 mov         r6, #0
  008bc	e3a07000	 mov         r7, #0
  008c0	e0020290	 mul         r2, r0, r2
  008c4	e3a04000	 mov         r4, #0
  008c8	e24b00e0	 sub         r0, r11, #0xE0
  008cc	e50be0dc	 str         lr, [r11, #-0xDC]
  008d0	e50b60e0	 str         r6, [r11, #-0xE0]
  008d4	e50b70d4	 str         r7, [r11, #-0xD4]
  008d8	e58d4004	 str         r4, [sp, #4]
  008dc	e58d4000	 str         r4, [sp]
  008e0	eb000000	 bl          |?Marshal@MarshalledBuffer_t@@QAAJPAXKKHH@Z|

; 870  :                 MarshalledBuffer_t UserDmaBuffer (SdBusRequest.pPhysBuffList,SdBusRequest.cbSize,ARG_I_PTR,FALSE,FALSE);

  008e4	e51b1068	 ldr         r1, [r11, #-0x68]
  008e8	e51b206c	 ldr         r2, [r11, #-0x6C]
  008ec	e3a0e000	 mov         lr, #0
  008f0	e3a06000	 mov         r6, #0
  008f4	e3a07000	 mov         r7, #0
  008f8	e3a03004	 mov         r3, #4
  008fc	e24b0e13	 sub         r0, r11, #0x13, 28
  00900	e50be12c	 str         lr, [r11, #-0x12C]
  00904	e50b6130	 str         r6, [r11, #-0x130]
  00908	e50b7124	 str         r7, [r11, #-0x124]
  0090c	e58d4004	 str         r4, [sp, #4]
  00910	e58d4000	 str         r4, [sp]
  00914	eb000000	 bl          |?Marshal@MarshalledBuffer_t@@QAAJPAXKKHH@Z|

; 871  :                     
; 872  :                 DEBUGMSG(SDCARD_ZONE_ERROR && (SdBusRequest.pBuffer!=NULL && UserBuffer.ptr()==0 ), 
; 873  :                     (TEXT("IOCTL_BUS_SD_BUS_REQUEST: Failed to marshal point 0x%x \n"),SdBusRequest.pBuffer));
; 874  :                 ASSERT(pDevice->GetCallbackHandle()!= NULL);
; 875  :                 status =  pDevice->SDBusRequest_I(SdBusRequest.Command,SdBusRequest.Argument,
; 876  :                     SdBusRequest.TransferClass,SdBusRequest.ResponseType,
; 877  :                     SdBusRequest.NumBlocks,SdBusRequest.BlockSize,(PUCHAR)UserBuffer.ptr(),
; 878  :                     SdBusRequest.ceDriverCallbackParam.pRequestCallback, SdBusRequest.ceDriverCallbackParam.dwRequestParam,
; 879  :                     &hBusRequest,SdBusRequest.Flags,SdBusRequest.cbSize,(PPHYS_BUFF_LIST)UserDmaBuffer.ptr() );

  00918	e51b2130	 ldr         r2, [r11, #-0x130]
  0091c	e50b215c	 str         r2, [r11, #-0x15C]
  00920	e3520000	 cmp         r2, #0
  00924	051b312c	 ldreq       r3, [r11, #-0x12C]
  00928	050b315c	 streq       r3, [r11, #-0x15C]
  0092c	e51b30e0	 ldr         r3, [r11, #-0xE0]
  00930	e50b3154	 str         r3, [r11, #-0x154]
  00934	e3530000	 cmp         r3, #0
  00938	051b30dc	 ldreq       r3, [r11, #-0xDC]
  0093c	050b3154	 streq       r3, [r11, #-0x154]
  00940	e5952000	 ldr         r2, [r5]
  00944	e51b5070	 ldr         r5, [r11, #-0x70]
  00948	e51b6074	 ldr         r6, [r11, #-0x74]
  0094c	e51b7084	 ldr         r7, [r11, #-0x84]
  00950	e51b8094	 ldr         r8, [r11, #-0x94]
  00954	e5929018	 ldr         r9, [r2, #0x18]
  00958	e51b209c	 ldr         r2, [r11, #-0x9C]
  0095c	e55b10a0	 ldrb        r1, [r11, #-0xA0]
  00960	e51b3098	 ldr         r3, [r11, #-0x98]
  00964	e51b0150	 ldr         r0, [r11, #-0x150]
  00968	e51b415c	 ldr         r4, [r11, #-0x15C]
  0096c	e58d4024	 str         r4, [sp, #0x24]
  00970	e51b406c	 ldr         r4, [r11, #-0x6C]
  00974	e58d4020	 str         r4, [sp, #0x20]
  00978	e58d501c	 str         r5, [sp, #0x1C]
  0097c	e24b4f56	 sub         r4, r11, #0x56, 30
  00980	e58d4018	 str         r4, [sp, #0x18]
  00984	e58d6014	 str         r6, [sp, #0x14]
  00988	e58d7010	 str         r7, [sp, #0x10]
  0098c	e51b4154	 ldr         r4, [r11, #-0x154]
  00990	e58d400c	 str         r4, [sp, #0xC]
  00994	e51b408c	 ldr         r4, [r11, #-0x8C]
  00998	e58d4008	 str         r4, [sp, #8]
  0099c	e51b4090	 ldr         r4, [r11, #-0x90]
  009a0	e58d4004	 str         r4, [sp, #4]
  009a4	e58d8000	 str         r8, [sp]
  009a8	e1a0e00f	 mov         lr, pc
  009ac	e12fff19	 bx          r9
  009b0	e1a04000	 mov         r4, r0

; 880  :                 pDevice->DeRef();

  009b4	e51b0150	 ldr         r0, [r11, #-0x150]
  009b8	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|

; 881  :                 * (HANDLE *)pBufOut  = hBusRequest ;

  009bc	e51b3158	 ldr         r3, [r11, #-0x158]

; 882  :             }

  009c0	e24b0e13	 sub         r0, r11, #0x13, 28
  009c4	e58a3000	 str         r3, [r10]
  009c8	eb000000	 bl          |?Unmarshal@MarshalledBuffer_t@@QAAJXZ|
  009cc	e24b00e0	 sub         r0, r11, #0xE0

; 822  :             }

  009d0	eb000000	 bl          |?Unmarshal@MarshalledBuffer_t@@QAAJXZ|

; 823  :             SetLastError(status);
; 824  :             fRet = SD_API_SUCCESS(status);
; 825  :         }
; 826  :         else
; 827  :             SetLastError(SD_API_STATUS_INVALID_PARAMETER);
; 828  :         break;

  009d4	ea00008b	 b           |$LN31@IOControl@2|
  009d8		 |$LN46@IOControl@2|

; 829  :     case IOCTL_BUS_SD_SYNCHRONOUS_BUS_REQUEST_EX:
; 830  :         if (pBufIn && dwLenIn>= sizeof(IO_SD_SYNCHRONOUS_BUS_REQUEST_EX)) {

  009d8	e3560000	 cmp         r6, #0
  009dc	0a00008f	 beq         |$LN33@IOControl@2|
  009e0	e357002c	 cmp         r7, #0x2C
  009e4	3a00008d	 bcc         |$LN33@IOControl@2|

; 831  :             SD_API_STATUS status = SD_API_STATUS_INVALID_PARAMETER; 
; 832  :             IO_SD_SYNCHRONOUS_BUS_REQUEST_EX SdSyncBusRequest = *(PIO_SD_SYNCHRONOUS_BUS_REQUEST_EX)pBufIn;

  009e8	e24b00a4	 sub         r0, r11, #0xA4
  009ec	e3a0202c	 mov         r2, #0x2C
  009f0	e1a01006	 mov         r1, r6
  009f4	e3a0411f	 mov         r4, #0x1F, 2
  009f8	eb000000	 bl          memcpy

; 833  :             SD_COMMAND_RESPONSE sdResponse;
; 834  :             // Mapping Embedded pointer.
; 835  :             CSDDevice * pDevice = GetDeviceByDevice(SdSyncBusRequest.hDevice);

  009fc	e51b00a4	 ldr         r0, [r11, #-0xA4]
  00a00	eb000000	 bl          |?GetDeviceByDevice@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z|
  00a04	e1b09000	 movs        r9, r0

; 836  :             if (pDevice) {

  00a08	0a00007e	 beq         |$LN31@IOControl@2|

; 837  :                 MarshalledBuffer_t UserBuffer((PVOID)SdSyncBusRequest.pBuffer,
; 838  :                     SdSyncBusRequest.BlockSize* SdSyncBusRequest.NumBlocks,
; 839  :                     SdSyncBusRequest.TransferClass==SD_READ ? ARG_O_PTR: ARG_I_PTR, FALSE, TRUE); // no duplicate and Async(because it could call BusRequest , read & write.            

  00a0c	e51b3098	 ldr         r3, [r11, #-0x98]
  00a10	e3530000	 cmp         r3, #0
  00a14	03a03008	 moveq       r3, #8
  00a18	13a03004	 movne       r3, #4
  00a1c	e51b0090	 ldr         r0, [r11, #-0x90]
  00a20	e51b208c	 ldr         r2, [r11, #-0x8C]
  00a24	e51b1088	 ldr         r1, [r11, #-0x88]
  00a28	e3a0e000	 mov         lr, #0
  00a2c	e3a05000	 mov         r5, #0
  00a30	e3a06000	 mov         r6, #0
  00a34	e3a07001	 mov         r7, #1
  00a38	e0020290	 mul         r2, r0, r2
  00a3c	e3a04000	 mov         r4, #0
  00a40	e24b00f4	 sub         r0, r11, #0xF4
  00a44	e50be0f0	 str         lr, [r11, #-0xF0]
  00a48	e50b50f4	 str         r5, [r11, #-0xF4]
  00a4c	e50b60e8	 str         r6, [r11, #-0xE8]
  00a50	e58d7004	 str         r7, [sp, #4]
  00a54	e58d4000	 str         r4, [sp]
  00a58	eb000000	 bl          |?Marshal@MarshalledBuffer_t@@QAAJPAXKKHH@Z|

; 840  :                 MarshalledBuffer_t UserDmaBuffer (SdSyncBusRequest.pPhysBuffList,SdSyncBusRequest.cbSize,ARG_I_PTR,FALSE,FALSE);

  00a5c	e51b107c	 ldr         r1, [r11, #-0x7C]
  00a60	e51b2080	 ldr         r2, [r11, #-0x80]
  00a64	e3a0e000	 mov         lr, #0
  00a68	e3a05000	 mov         r5, #0
  00a6c	e3a06000	 mov         r6, #0
  00a70	e3a03004	 mov         r3, #4
  00a74	e24b00b8	 sub         r0, r11, #0xB8
  00a78	e50be0b4	 str         lr, [r11, #-0xB4]
  00a7c	e50b50b8	 str         r5, [r11, #-0xB8]
  00a80	e50b60ac	 str         r6, [r11, #-0xAC]
  00a84	e58d4004	 str         r4, [sp, #4]
  00a88	e58d4000	 str         r4, [sp]
  00a8c	eb000000	 bl          |?Marshal@MarshalledBuffer_t@@QAAJPAXKKHH@Z|

; 841  :                 DEBUGMSG(SDCARD_ZONE_ERROR && (SdSyncBusRequest.pBuffer!=NULL && UserBuffer.ptr()==0 ), 
; 842  :                     (TEXT("IOCTL_BUS_SD_SYNCHRONOUS_BUS_REQUEST: Failed to marshal point 0x%x \n"),SdSyncBusRequest.pBuffer));
; 843  :                 status =  pDevice->SDSynchronousBusRequest_I(
; 844  :                     SdSyncBusRequest.Command,SdSyncBusRequest.Argument,
; 845  :                     SdSyncBusRequest.TransferClass,SdSyncBusRequest.ResponseType,&sdResponse,
; 846  :                     SdSyncBusRequest.NumBlocks,SdSyncBusRequest.BlockSize,(PUCHAR)UserBuffer.ptr(),
; 847  :                     SdSyncBusRequest.Flags,SdSyncBusRequest.cbSize, (PPHYS_BUFF_LIST)UserDmaBuffer.ptr());

  00a90	e51b30b8	 ldr         r3, [r11, #-0xB8]
  00a94	e50b3158	 str         r3, [r11, #-0x158]
  00a98	e3530000	 cmp         r3, #0
  00a9c	051b30b4	 ldreq       r3, [r11, #-0xB4]
  00aa0	050b3158	 streq       r3, [r11, #-0x158]
  00aa4	e51b80f4	 ldr         r8, [r11, #-0xF4]
  00aa8	e3580000	 cmp         r8, #0
  00aac	051b80f0	 ldreq       r8, [r11, #-0xF0]
  00ab0	e5992000	 ldr         r2, [r9]
  00ab4	e51b5084	 ldr         r5, [r11, #-0x84]
  00ab8	e51b6094	 ldr         r6, [r11, #-0x94]
  00abc	e5927014	 ldr         r7, [r2, #0x14]
  00ac0	e51b209c	 ldr         r2, [r11, #-0x9C]
  00ac4	e55b10a0	 ldrb        r1, [r11, #-0xA0]
  00ac8	e51b3098	 ldr         r3, [r11, #-0x98]
  00acc	e1a00009	 mov         r0, r9
  00ad0	e51b4158	 ldr         r4, [r11, #-0x158]
  00ad4	e58d401c	 str         r4, [sp, #0x1C]
  00ad8	e51b4080	 ldr         r4, [r11, #-0x80]
  00adc	e58d4018	 str         r4, [sp, #0x18]
  00ae0	e58d5014	 str         r5, [sp, #0x14]
  00ae4	e58d8010	 str         r8, [sp, #0x10]
  00ae8	e51b408c	 ldr         r4, [r11, #-0x8C]
  00aec	e58d400c	 str         r4, [sp, #0xC]
  00af0	e51b4090	 ldr         r4, [r11, #-0x90]
  00af4	e58d4008	 str         r4, [sp, #8]
  00af8	e24b4048	 sub         r4, r11, #0x48
  00afc	e58d4004	 str         r4, [sp, #4]
  00b00	e58d6000	 str         r6, [sp]
  00b04	e1a0e00f	 mov         lr, pc
  00b08	e12fff17	 bx          r7
  00b0c	e1a04000	 mov         r4, r0

; 848  :                 if (pBufOut && dwLenOut>= sizeof(SD_COMMAND_RESPONSE)) { // Response can be optional.

  00b10	e35a0000	 cmp         r10, #0
  00b14	0a000005	 beq         |$LN43@IOControl@2|
  00b18	e59b3004	 ldr         r3, [r11, #4]
  00b1c	e3530018	 cmp         r3, #0x18

; 849  :                     *(PSD_COMMAND_RESPONSE)pBufOut = sdResponse ;

  00b20	224b1048	 subcs       r1, r11, #0x48
  00b24	23a02018	 movcs       r2, #0x18
  00b28	21a0000a	 movcs       r0, r10
  00b2c	2b000000	 blcs        memcpy
  00b30		 |$LN43@IOControl@2|

; 850  :                 }
; 851  :                 pDevice->DeRef();

  00b30	e1a00009	 mov         r0, r9
  00b34	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|

; 852  :             }

  00b38	e24b00b8	 sub         r0, r11, #0xB8
  00b3c	eb000000	 bl          |?Unmarshal@MarshalledBuffer_t@@QAAJXZ|
  00b40	e24b00f4	 sub         r0, r11, #0xF4

; 822  :             }

  00b44	eb000000	 bl          |?Unmarshal@MarshalledBuffer_t@@QAAJXZ|

; 823  :             SetLastError(status);
; 824  :             fRet = SD_API_SUCCESS(status);
; 825  :         }
; 826  :         else
; 827  :             SetLastError(SD_API_STATUS_INVALID_PARAMETER);
; 828  :         break;

  00b48	ea00002e	 b           |$LN31@IOControl@2|
  00b4c		 |$LN5@IOControl@2|

; 1004 :     case IOCTL_BUS_SD_GETCLIENT_FUNCTION:
; 1005 :         if (pBufOut && dwLenOut>=sizeof(SDCARD_API_FUNCTIONS)) {

  00b4c	e35a0000	 cmp         r10, #0
  00b50	0a000032	 beq         |$LN33@IOControl@2|
  00b54	e59b3004	 ldr         r3, [r11, #4]
  00b58	e3530034	 cmp         r3, #0x34
  00b5c	3a00002f	 bcc         |$LN33@IOControl@2|

; 1006 :             SD_API_STATUS status= SDGetClientFunctions((SDCARD_API_FUNCTIONS *)pBufOut);

  00b60	e1a0000a	 mov         r0, r10
  00b64	eb000000	 bl          SDGetClientFunctions
  00b68	e1a04000	 mov         r4, r0

; 1007 :             SetLastError(status);

  00b6c	eb000000	 bl          SetLastError

; 1008 :             fRet = SD_API_SUCCESS(status);

  00b70	e3540000	 cmp         r4, #0
  00b74	4a000027	 bmi         |$LN99@IOControl@2|
  00b78	e3a04001	 mov         r4, #1

; 1009 :             if (fRet && pdwActualOut) {

  00b7c	e3580000	 cmp         r8, #0
  00b80	0a000028	 beq         |$LN30@IOControl@2|

; 1010 :                 *pdwActualOut = sizeof(SDCARD_API_FUNCTIONS) ;

  00b84	e3a03034	 mov         r3, #0x34

; 970  :                 *pdwActualOut = dwBufferSize;

  00b88	e5883000	 str         r3, [r8]

; 971  :             }
; 972  :         }
; 973  :         else 
; 974  :             SetLastError(SD_API_STATUS_INVALID_PARAMETER);
; 975  :         break;         

  00b8c	ea000025	 b           |$LN30@IOControl@2|
  00b90		 |$LN34@IOControl@2|

; 900  :     case IOCTL_BUS_SD_REQUEST_RESPONSE: 
; 901  :         if (pBufIn && dwLenIn>= sizeof(HANDLE) && pBufOut && dwLenOut>=sizeof(SD_COMMAND_RESPONSE)) {

  00b90	e3560000	 cmp         r6, #0
  00b94	0a000021	 beq         |$LN33@IOControl@2|
  00b98	e3570004	 cmp         r7, #4
  00b9c	3a00001f	 bcc         |$LN33@IOControl@2|
  00ba0	e35a0000	 cmp         r10, #0
  00ba4	0a00001d	 beq         |$LN33@IOControl@2|
  00ba8	e59b3004	 ldr         r3, [r11, #4]
  00bac	e3530018	 cmp         r3, #0x18
  00bb0	3a00001a	 bcc         |$LN33@IOControl@2|

; 902  :             SD_API_STATUS status = SD_API_STATUS_INVALID_PARAMETER; 
; 903  :             HANDLE hRequest = *(HANDLE *)pBufIn;

  00bb4	e5966000	 ldr         r6, [r6]
  00bb8	e3a0411f	 mov         r4, #0x1F, 2

; 904  :             SD_COMMAND_RESPONSE Response;
; 905  :             CSDDevice * pDevice =  GetDeviceByRequest(hRequest);

  00bbc	e1a00006	 mov         r0, r6
  00bc0	eb000000	 bl          |?GetDeviceByRequest@CSDHostContainer@@SAPAVCSDDevice@@PAX@Z|
  00bc4	e1b05000	 movs        r5, r0

; 906  :             if (pDevice) {

  00bc8	0a00000e	 beq         |$LN31@IOControl@2|

; 907  :                 status = pDevice->SDBusRequestResponse_I(hRequest,&Response );

  00bcc	e5953000	 ldr         r3, [r5]
  00bd0	e24b2048	 sub         r2, r11, #0x48
  00bd4	e1a01006	 mov         r1, r6
  00bd8	e5933020	 ldr         r3, [r3, #0x20]
  00bdc	e1a00005	 mov         r0, r5
  00be0	e1a0e00f	 mov         lr, pc
  00be4	e12fff13	 bx          r3
  00be8	e1a04000	 mov         r4, r0

; 908  :                 pDevice->DeRef();

  00bec	e1a00005	 mov         r0, r5
  00bf0	eb000000	 bl          |?DeRef@CRefObject@@QAAKXZ|

; 909  :                 if (SD_API_SUCCESS(status)) {

  00bf4	e3540000	 cmp         r4, #0

; 910  :                     *(PSD_COMMAND_RESPONSE)pBufOut = Response;

  00bf8	524b1048	 subpl       r1, r11, #0x48
  00bfc	53a02018	 movpl       r2, #0x18
  00c00	51a0000a	 movpl       r0, r10
  00c04	5b000000	 blpl        memcpy
  00c08		 |$LN31@IOControl@2|

; 911  :                 }
; 912  :             }
; 913  :             SetLastError(status);

  00c08	e1a00004	 mov         r0, r4
  00c0c	eb000000	 bl          SetLastError

; 914  :             fRet = SD_API_SUCCESS(status);

  00c10	e3540000	 cmp         r4, #0
  00c14	5afffd4c	 bpl         |$LN214@IOControl@2|
  00c18		 |$LN99@IOControl@2|
  00c18	e3a04000	 mov         r4, #0

; 915  :         }
; 916  :         else

  00c1c	ea000001	 b           |$LN30@IOControl@2|
  00c20		 |$LN33@IOControl@2|

; 917  :             SetLastError(SD_API_STATUS_INVALID_PARAMETER);

  00c20	e3a0011f	 mov         r0, #0x1F, 2
  00c24		 |$LN211@IOControl@2|
  00c24	eb000000	 bl          SetLastError
  00c28		 |$LN30@IOControl@2|

; 1021 :     };
; 1022 : 
; 1023 :     return fRet;

  00c28	e51b002c	 ldr         r0, [r11, #-0x2C]
  00c2c	eb000000	 bl          __security_check_cookie
  00c30		 |$LN73@IOControl@2|

; 1024 : }

  00c30	e1a00004	 mov         r0, r4
  00c34	e24bd028	 sub         sp, r11, #0x28
  00c38	e89d6ff0	 ldmia       sp, {r4 - r11, sp, lr}
  00c3c	e12fff1e	 bx          lr

			 ENDP  ; |?IOControl@CSDHostContainer@@UAAHKPAEK0KPAK@Z|, CSDHostContainer::IOControl

  00c40		 |$LN120@IOControl@2|
  00c40		 |$LN219@IOControl@2|

; 962  :                 __except(SDProcessException(GetExceptionInformation())) {

  00c40	e52de004	 str         lr, [sp, #-4]!
  00c44	e24dd028	 sub         sp, sp, #0x28
  00c48		 |$LN123@IOControl@2|
  00c48		 |$LN223@IOControl@2|
  00c48	eb000000	 bl          SDProcessException
  00c4c		 |$LN122@IOControl@2|
  00c4c	e28dd028	 add         sp, sp, #0x28
  00c50	e49df004	 ldr         pc, [sp], #4
  00c54		 |$LN224@IOControl@2|
  00c54		 |$LN113@IOControl@2|
  00c54		 |$LN221@IOControl@2|

; 928  :                 __except(SDProcessException(GetExceptionInformation())) {

  00c54	e52de004	 str         lr, [sp, #-4]!
  00c58	e24dd028	 sub         sp, sp, #0x28
  00c5c		 |$LN116@IOControl@2|
  00c5c		 |$LN225@IOControl@2|
  00c5c	eb000000	 bl          SDProcessException
  00c60		 |$LN115@IOControl@2|
  00c60	e28dd028	 add         sp, sp, #0x28
  00c64	e49df004	 ldr         pc, [sp], #4
  00c68		 |$LN227@IOControl@2|
  00c68		 |$LN228@IOControl@2|
  00c68	002a0538	 DCD         0x2a0538
  00c6c		 |$LN229@IOControl@2|
  00c6c	002a0534	 DCD         0x2a0534
  00c70		 |$LN230@IOControl@2|
  00c70	002a052c	 DCD         0x2a052c
  00c74		 |$LN231@IOControl@2|
  00c74	002a0524	 DCD         0x2a0524
  00c78		 |$LN232@IOControl@2|
  00c78	002a051c	 DCD         0x2a051c
  00c7c		 |$LN233@IOControl@2|
  00c7c	002a0518	 DCD         0x2a0518
  00c80		 |$LN234@IOControl@2|
  00c80	002a0514	 DCD         0x2a0514
  00c84		 |$LN235@IOControl@2|
  00c84	002a0528	 DCD         0x2a0528
  00c88		 |$LN236@IOControl@2|
  00c88	002a050c	 DCD         0x2a050c
  00c8c		 |$LN237@IOControl@2|
  00c8c	002a0508	 DCD         0x2a0508
  00c90		 |$LN238@IOControl@2|
  00c90	002a0504	 DCD         0x2a0504
  00c94		 |$LN239@IOControl@2|
  00c94	00000000	 DCD         |__security_cookie|
  00c98		 |$LN226@IOControl@2|
  00c98		 |$LN222@IOControl@2|
	END
