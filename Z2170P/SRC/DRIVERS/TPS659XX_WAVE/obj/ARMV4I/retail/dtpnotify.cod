; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\Z2170P\SRC\DRIVERS\TPS659XX_WAVE\dtpnotify.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|?LockList@DtpNotify@@AAAXXZ|		; DtpNotify::LockList
	IMPORT	|EnterCriticalSection|
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dtpnotify.h

  00000			 AREA	 |.pdata|, PDATA
|$T32205| DCD	|$LN5@LockList|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?LockList@DtpNotify@@AAAXXZ| PROC	; DtpNotify::LockList

; 47   :     VOID LockList() { EnterCriticalSection(&m_csListLock); }

  00000		 |$LN5@LockList|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M32202|
  00004	e280000c	 add         r0, r0, #0xC
  00008	eb000000	 bl          EnterCriticalSection
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M32203|

			 ENDP  ; |?LockList@DtpNotify@@AAAXXZ|, DtpNotify::LockList

	EXPORT	|?UnlockList@DtpNotify@@AAAXXZ|		; DtpNotify::UnlockList
	IMPORT	|LeaveCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T32213| DCD	|$LN5@UnlockList|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UnlockList@DtpNotify@@AAAXXZ| PROC	; DtpNotify::UnlockList

; 48   :     VOID UnlockList() { LeaveCriticalSection(&m_csListLock); }

  00000		 |$LN5@UnlockList|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M32210|
  00004	e280000c	 add         r0, r0, #0xC
  00008	eb000000	 bl          LeaveCriticalSection
  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M32211|

			 ENDP  ; |?UnlockList@DtpNotify@@AAAXXZ|, DtpNotify::UnlockList

	EXPORT	|??0DtpNotify@@QAA@XZ|			; DtpNotify::DtpNotify
	EXPORT	|??_7DtpNotify@@6B@| [ DATA ]		; DtpNotify::`vftable'
	IMPORT	|InitializeCriticalSection|
	IMPORT	|??_EDtpNotify@@UAAPAXI@Z|, WEAK |??_GDtpNotify@@UAAPAXI@Z| ; DtpNotify::`vector deleting destructor', DtpNotify::`scalar deleting destructor'
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dtpnotify.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T32223| DCD	|$LN5@DtpNotify|
	DCD	0x40000c01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7DtpNotify@@6B@| DCD |??_EDtpNotify@@UAAPAXI@Z|	; DtpNotify::`vftable'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0DtpNotify@@QAA@XZ| PROC		; DtpNotify::DtpNotify

; 33   : {

  00000		 |$LN5@DtpNotify|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M32220|
  00004	e1a04000	 mov         r4, r0
  00008	e59f301c	 ldr         r3, [pc, #0x1C]

; 34   :     InitializeCriticalSection(&m_csListLock);

  0000c	e480300c	 str         r3, [r0], #0xC
  00010	eb000000	 bl          InitializeCriticalSection

; 35   :     InitializeListHead(&m_NotifyList);

  00014	e2843004	 add         r3, r4, #4
  00018	e5843008	 str         r3, [r4, #8]
  0001c	e5843004	 str         r3, [r4, #4]

; 36   : }

  00020	e1a00004	 mov         r0, r4
  00024	e8bd4010	 ldmia       sp!, {r4, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$LN6@DtpNotify|
  0002c		 |$LN7@DtpNotify|
  0002c	00000000	 DCD         |??_7DtpNotify@@6B@|
  00030		 |$M32221|

			 ENDP  ; |??0DtpNotify@@QAA@XZ|, DtpNotify::DtpNotify

	EXPORT	|?RegisterDtpMsgQueue@DtpNotify@@QAAKPAX0@Z| ; DtpNotify::RegisterDtpMsgQueue
	IMPORT	|??2@YAPAXI@Z|				; operator new
	IMPORT	|OpenMsgQueue|
	IMPORT	|memset|
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dtpnotify.h

  00000			 AREA	 |.pdata|, PDATA
|$T32250| DCD	|$LN19@RegisterDt|
	DCD	0x40003102
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dtpnotify.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RegisterDtpMsgQueue@DtpNotify@@QAAKPAX0@Z| PROC ; DtpNotify::RegisterDtpMsgQueue

; 49   : {

  00000		 |$LN19@RegisterDt|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004	e24dd014	 sub         sp, sp, #0x14
  00008		 |$M32247|
  00008	e1a06002	 mov         r6, r2
  0000c	e1b08001	 movs        r8, r1
  00010	e1a07000	 mov         r7, r0

; 50   :     DWORD mmRet = MMSYSERR_NOERROR;

  00014	e3a04000	 mov         r4, #0

; 51   : 
; 52   :     if ((NULL == hMsgQueue) || (NULL == hClientProc))

  00018	0a000024	 beq         |$LN9@RegisterDt|
  0001c	e3560000	 cmp         r6, #0
  00020	0a000022	 beq         |$LN9@RegisterDt|

; 55   :         goto Error;
; 56   :     }
; 57   : 
; 58   :     // Open the message queue for write access.
; 59   :     MSGQUEUEOPTIONS msgopts;
; 60   :     ZeroMemory(&msgopts, sizeof(msgopts));

  00024	e3a02014	 mov         r2, #0x14
  00028	e3a01000	 mov         r1, #0
  0002c	e28d0000	 add         r0, sp, #0
  00030	eb000000	 bl          memset

; 61   :     msgopts.dwSize = sizeof(msgopts);
; 62   :     msgopts.bReadAccess = FALSE;

  00034	e3a02000	 mov         r2, #0
  00038	e58d2010	 str         r2, [sp, #0x10]
  0003c	e3a03014	 mov         r3, #0x14

; 63   :     HANDLE hMsgQueueWrite = OpenMsgQueue(hClientProc, hMsgQueue, &msgopts);

  00040	e28d2000	 add         r2, sp, #0
  00044	e1a01008	 mov         r1, r8
  00048	e1a00006	 mov         r0, r6
  0004c	e58d3000	 str         r3, [sp]
  00050	eb000000	 bl          OpenMsgQueue
  00054	e1b09000	 movs        r9, r0

; 64   :     if (NULL == hMsgQueueWrite)
; 65   :     {
; 66   :         mmRet = MMSYSERR_ERROR;

  00058	03a04001	 moveq       r4, #1
  0005c	0a000014	 beq         |$Error$32092|

; 67   :         goto Error;
; 68   :     }
; 69   : 
; 70   :     // Create sink object and add to list.  Keep the client proc msg queue for
; 71   :     // unregister.
; 72   :     PDTP_NOTIFY_SINK pDtpNotifySink = new DTP_NOTIFY_SINK;

  00060	e3a00014	 mov         r0, #0x14
  00064	eb000000	 bl          |??2@YAPAXI@Z|
  00068	e1b05000	 movs        r5, r0

; 73   :     if (NULL == pDtpNotifySink)
; 74   :     {
; 75   :         mmRet = MMSYSERR_NOMEM;

  0006c	03a04007	 moveq       r4, #7
  00070	0a00000f	 beq         |$Error$32092|

; 76   :         goto Error;
; 77   :     }
; 78   : 
; 79   :     pDtpNotifySink->hMsgQueue = hMsgQueueWrite;
; 80   :     pDtpNotifySink->hMsgQueueClientProc = hMsgQueue;
; 81   :     pDtpNotifySink->hClientProc = hClientProc;
; 82   : 
; 83   :     LockList();

  00074	e287000c	 add         r0, r7, #0xC
  00078	e5859000	 str         r9, [r5]
  0007c	e5858004	 str         r8, [r5, #4]
  00080	e5856008	 str         r6, [r5, #8]
  00084	eb000000	 bl          EnterCriticalSection

; 84   : #pragma warning(push)
; 85   : #pragma warning(disable:4127)
; 86   :     InsertTailList(&m_NotifyList, &pDtpNotifySink->Link);

  00088	e2871004	 add         r1, r7, #4
  0008c	e5913004	 ldr         r3, [r1, #4]
  00090	e285200c	 add         r2, r5, #0xC
  00094	e585100c	 str         r1, [r5, #0xC]
  00098	e5853010	 str         r3, [r5, #0x10]
  0009c	e5832000	 str         r2, [r3]

; 87   : #pragma warning(pop)
; 88   :     UnlockList();

  000a0	e287000c	 add         r0, r7, #0xC
  000a4	e5812004	 str         r2, [r1, #4]
  000a8	eb000000	 bl          LeaveCriticalSection
  000ac	ea000000	 b           |$Error$32092|
  000b0		 |$LN9@RegisterDt|

; 53   :     {
; 54   :         mmRet = MMSYSERR_INVALPARAM;

  000b0	e3a0400b	 mov         r4, #0xB
  000b4		 |$Error$32092|

; 89   : 
; 90   : Error:
; 91   : 
; 92   :     return mmRet;
; 93   : }

  000b4	e1a00004	 mov         r0, r4
  000b8	e28dd014	 add         sp, sp, #0x14
  000bc	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  000c0	e12fff1e	 bx          lr
  000c4		 |$M32248|

			 ENDP  ; |?RegisterDtpMsgQueue@DtpNotify@@QAAKPAX0@Z|, DtpNotify::RegisterDtpMsgQueue

	EXPORT	|?UnregisterDtpMsgQueue@DtpNotify@@QAAKPAX0@Z| ; DtpNotify::UnregisterDtpMsgQueue
	IMPORT	|??3@YAXPAX@Z|				; operator delete
	IMPORT	|CloseHandle|
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dtpnotify.h

  00000			 AREA	 |.pdata|, PDATA
|$T32279| DCD	|$LN24@Unregister|
	DCD	0x40002c01
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dtpnotify.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UnregisterDtpMsgQueue@DtpNotify@@QAAKPAX0@Z| PROC ; DtpNotify::UnregisterDtpMsgQueue

; 100  : {

  00000		 |$LN24@Unregister|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004		 |$M32276|
  00004	e1a07002	 mov         r7, r2
  00008	e1b0a001	 movs        r10, r1
  0000c	e1a06000	 mov         r6, r0

; 101  :     DWORD mmRet = MMSYSERR_NOERROR;

  00010	e3a04000	 mov         r4, #0

; 102  : 
; 103  :     if ((NULL == hMsgQueue) || (NULL == hClientProc))

  00014	0a000021	 beq         |$LN9@Unregister|
  00018	e3570000	 cmp         r7, #0
  0001c	0a00001f	 beq         |$LN9@Unregister|

; 106  :     }
; 107  : 
; 108  :     LockList();

  00020	e286900c	 add         r9, r6, #0xC
  00024	e1a00009	 mov         r0, r9
  00028	eb000000	 bl          EnterCriticalSection

; 109  : 
; 110  :     // Search for the sink object to remove.
; 111  :     BOOL fUnregistered = FALSE;
; 112  :     PLIST_ENTRY pListEntry;
; 113  :     for (pListEntry = m_NotifyList.Flink;
; 114  :          pListEntry != &m_NotifyList;
; 115  :          pListEntry = pListEntry->Flink)

  0002c	e5b6e004	 ldr         lr, [r6, #4]!
  00030	e3a08000	 mov         r8, #0
  00034	ea000007	 b           |$LN21@Unregister|
  00038		 |$LL8@Unregister|

; 116  :     {
; 117  :         PDTP_NOTIFY_SINK pDtpNotifySink = CONTAINING_RECORD(
; 118  :                                                 pListEntry,
; 119  :                                                 DTP_NOTIFY_SINK,
; 120  :                                                 Link);

  00038	e24e500c	 sub         r5, lr, #0xC

; 121  :         // Compare the client proc message queue handle.
; 122  :         if ((hMsgQueue == pDtpNotifySink->hMsgQueueClientProc) &&
; 123  :             (hClientProc == pDtpNotifySink->hClientProc))

  0003c	e5953004	 ldr         r3, [r5, #4]
  00040	e15a0003	 cmp         r10, r3
  00044	1a000002	 bne         |$LN7@Unregister|
  00048	e5953008	 ldr         r3, [r5, #8]
  0004c	e1570003	 cmp         r7, r3
  00050	0a000003	 beq         |$LN18@Unregister|
  00054		 |$LN7@Unregister|

; 109  : 
; 110  :     // Search for the sink object to remove.
; 111  :     BOOL fUnregistered = FALSE;
; 112  :     PLIST_ENTRY pListEntry;
; 113  :     for (pListEntry = m_NotifyList.Flink;
; 114  :          pListEntry != &m_NotifyList;
; 115  :          pListEntry = pListEntry->Flink)

  00054	e59ee000	 ldr         lr, [lr]
  00058		 |$LN21@Unregister|
  00058	e15e0006	 cmp         lr, r6
  0005c	1afffff5	 bne         |$LL8@Unregister|
  00060	ea00000a	 b           |$LN20@Unregister|
  00064		 |$LN18@Unregister|

; 124  :         {
; 125  :             // Remove from list and clean up.
; 126  : #pragma warning(push)
; 127  : #pragma warning(disable:4127)
; 128  :             RemoveEntryList(&pDtpNotifySink->Link);

  00064	e5952010	 ldr         r2, [r5, #0x10]
  00068	e595300c	 ldr         r3, [r5, #0xC]
  0006c	e5823000	 str         r3, [r2]
  00070	e595200c	 ldr         r2, [r5, #0xC]
  00074	e5953010	 ldr         r3, [r5, #0x10]
  00078	e5823004	 str         r3, [r2, #4]

; 129  : #pragma warning(pop)
; 130  :             CloseHandle(pDtpNotifySink->hMsgQueue);

  0007c	e5950000	 ldr         r0, [r5]
  00080	eb000000	 bl          CloseHandle

; 131  :             delete pDtpNotifySink;

  00084	e1a00005	 mov         r0, r5
  00088	eb000000	 bl          |??3@YAXPAX@Z|

; 132  : 
; 133  :             fUnregistered = TRUE;

  0008c	e3a08001	 mov         r8, #1
  00090		 |$LN20@Unregister|

; 134  :             break;
; 135  :         }
; 136  :     }
; 137  : 
; 138  :     UnlockList();

  00090	e1a00009	 mov         r0, r9
  00094	eb000000	 bl          LeaveCriticalSection

; 139  : 
; 140  :     if (!fUnregistered)

  00098	e3580000	 cmp         r8, #0
  0009c	1a000000	 bne         |$LN11@Unregister|
  000a0		 |$LN9@Unregister|

; 104  :     {
; 105  :         return MMSYSERR_INVALPARAM;

  000a0	e3a0400b	 mov         r4, #0xB
  000a4		 |$LN11@Unregister|

; 141  :     {
; 142  :         mmRet = MMSYSERR_INVALPARAM;
; 143  :     }
; 144  : 
; 145  :     return mmRet;
; 146  : }

  000a4	e1a00004	 mov         r0, r4
  000a8	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  000ac	e12fff1e	 bx          lr
  000b0		 |$M32277|

			 ENDP  ; |?UnregisterDtpMsgQueue@DtpNotify@@QAAKPAX0@Z|, DtpNotify::UnregisterDtpMsgQueue

	EXPORT	|?SendDtpNotifications@DtpNotify@@QAAKQAXK@Z| ; DtpNotify::SendDtpNotifications
	IMPORT	|WriteMsgQueue|
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dtpnotify.h

  00000			 AREA	 |.pdata|, PDATA
|$T32300| DCD	|$LN14@SendDtpNot|
	DCD	0x40001b02
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dtpnotify.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SendDtpNotifications@DtpNotify@@QAAKQAXK@Z| PROC ; DtpNotify::SendDtpNotifications

; 153  : {

  00000		 |$LN14@SendDtpNot|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M32297|
  00008	e1a07002	 mov         r7, r2
  0000c	e1a08001	 mov         r8, r1
  00010	e1a05000	 mov         r5, r0

; 154  :     LockList();

  00014	e285400c	 add         r4, r5, #0xC
  00018	e1a00004	 mov         r0, r4
  0001c	eb000000	 bl          EnterCriticalSection

; 155  : 
; 156  :     // Send notification to all registered clients.
; 157  :     PLIST_ENTRY pListEntry;
; 158  :     for (pListEntry = m_NotifyList.Flink;
; 159  :          pListEntry != &m_NotifyList;
; 160  :          pListEntry = pListEntry->Flink)

  00020	e5b56004	 ldr         r6, [r5, #4]!
  00024	e1560005	 cmp         r6, r5
  00028	0a000009	 beq         |$LN1@SendDtpNot|
  0002c	e3a09000	 mov         r9, #0
  00030		 |$LL3@SendDtpNot|

; 161  :     {
; 162  :         PDTP_NOTIFY_SINK pDtpNotifySink = CONTAINING_RECORD(
; 163  :                                                 pListEntry,
; 164  :                                                 DTP_NOTIFY_SINK,
; 165  :                                                 Link);
; 166  :         WriteMsgQueue(pDtpNotifySink->hMsgQueue, pvMsg, cbMsg, 0, 0);

  00030	e516000c	 ldr         r0, [r6, #-0xC]
  00034	e3a03000	 mov         r3, #0
  00038	e1a02007	 mov         r2, r7
  0003c	e1a01008	 mov         r1, r8
  00040	e58d9000	 str         r9, [sp]
  00044	eb000000	 bl          WriteMsgQueue
  00048	e5966000	 ldr         r6, [r6]
  0004c	e1560005	 cmp         r6, r5
  00050	1afffff6	 bne         |$LL3@SendDtpNot|
  00054		 |$LN1@SendDtpNot|

; 167  :     }
; 168  : 
; 169  :     UnlockList();

  00054	e1a00004	 mov         r0, r4
  00058	eb000000	 bl          LeaveCriticalSection

; 170  : 
; 171  :     return MMSYSERR_NOERROR;

  0005c	e3a00000	 mov         r0, #0

; 172  : }

  00060	e28dd004	 add         sp, sp, #4
  00064	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  00068	e12fff1e	 bx          lr
  0006c		 |$M32298|

			 ENDP  ; |?SendDtpNotifications@DtpNotify@@QAAKQAXK@Z|, DtpNotify::SendDtpNotifications

	EXPORT	|?DeleteNotifyList@DtpNotify@@AAAXXZ|	; DtpNotify::DeleteNotifyList
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dtpnotify.h

  00000			 AREA	 |.pdata|, PDATA
|$T32322| DCD	|$LN15@DeleteNoti|
	DCD	0x40001501
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dtpnotify.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DeleteNotifyList@DtpNotify@@AAAXXZ| PROC ; DtpNotify::DeleteNotifyList

; 176  : {

  00000		 |$LN15@DeleteNoti|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M32319|
  00004	e1a04000	 mov         r4, r0

; 177  :     LockList();

  00008	e284000c	 add         r0, r4, #0xC
  0000c	eb000000	 bl          EnterCriticalSection
  00010	e2846004	 add         r6, r4, #4
  00014		 |$LL2@DeleteNoti|

; 178  : 
; 179  :     while (!IsListEmpty(&m_NotifyList))

  00014	e5945004	 ldr         r5, [r4, #4]
  00018	e1550006	 cmp         r5, r6
  0001c	0a000008	 beq         |$LN12@DeleteNoti|

; 180  :     {
; 181  :         // Remove from list and clean up.
; 182  :         PLIST_ENTRY pListEntry = RemoveHeadList(&m_NotifyList);

  00020	e5953000	 ldr         r3, [r5]

; 183  :         PDTP_NOTIFY_SINK pDtpNotifySink = CONTAINING_RECORD(
; 184  :                                                 pListEntry,
; 185  :                                                 DTP_NOTIFY_SINK,
; 186  :                                                 Link);

  00024	e5836004	 str         r6, [r3, #4]
  00028	e5953000	 ldr         r3, [r5]
  0002c	e5843004	 str         r3, [r4, #4]

; 187  :         CloseHandle(pDtpNotifySink->hMsgQueue);

  00030	e535000c	 ldr         r0, [r5, #-0xC]!
  00034	eb000000	 bl          CloseHandle

; 188  :         delete pDtpNotifySink;

  00038	e1a00005	 mov         r0, r5
  0003c	eb000000	 bl          |??3@YAXPAX@Z|

; 189  :     }

  00040	eafffff3	 b           |$LL2@DeleteNoti|
  00044		 |$LN12@DeleteNoti|

; 190  : 
; 191  :     UnlockList();

  00044	e284000c	 add         r0, r4, #0xC
  00048	eb000000	 bl          LeaveCriticalSection

; 192  : }

  0004c	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$M32320|

			 ENDP  ; |?DeleteNotifyList@DtpNotify@@AAAXXZ|, DtpNotify::DeleteNotifyList

	EXPORT	|??1DtpNotify@@UAA@XZ|			; DtpNotify::~DtpNotify
	IMPORT	|DeleteCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T32330| DCD	|$LN5@DtpNotify@2|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1DtpNotify@@UAA@XZ| PROC		; DtpNotify::~DtpNotify

; 39   : {

  00000		 |$LN5@DtpNotify@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M32327|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3014	 ldr         r3, [pc, #0x14]

; 40   :     DeleteNotifyList();

  0000c	e5843000	 str         r3, [r4]
  00010	eb000000	 bl          |?DeleteNotifyList@DtpNotify@@AAAXXZ|

; 41   :     DeleteCriticalSection(&m_csListLock);

  00014	e284000c	 add         r0, r4, #0xC
  00018	eb000000	 bl          DeleteCriticalSection

; 42   : }

  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$LN6@DtpNotify@2|
  00024		 |$LN7@DtpNotify@2|
  00024	00000000	 DCD         |??_7DtpNotify@@6B@|
  00028		 |$M32328|

			 ENDP  ; |??1DtpNotify@@UAA@XZ|, DtpNotify::~DtpNotify


  00000			 AREA	 |.pdata|, PDATA
|$T32346| DCD	|$LN8@scalar|
	DCD	0x40000f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GDtpNotify@@UAAPAXI@Z| PROC	; DtpNotify::`scalar deleting destructor'
  00000		 |$LN8@scalar|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M32343|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0
  0000c	e59f3024	 ldr         r3, [pc, #0x24]
  00010	e5853000	 str         r3, [r5]
  00014	eb000000	 bl          |?DeleteNotifyList@DtpNotify@@AAAXXZ|
  00018	e285000c	 add         r0, r5, #0xC
  0001c	eb000000	 bl          DeleteCriticalSection
  00020	e3140001	 tst         r4, #1
  00024	11a00005	 movne       r0, r5
  00028	1b000000	 blne        |??3@YAXPAX@Z|
  0002c	e1a00005	 mov         r0, r5
  00030	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$LN9@scalar|
  00038		 |$LN10@scalar|
  00038	00000000	 DCD         |??_7DtpNotify@@6B@|
  0003c		 |$M32344|

			 ENDP  ; |??_GDtpNotify@@UAAPAXI@Z|, DtpNotify::`scalar deleting destructor'

	END
