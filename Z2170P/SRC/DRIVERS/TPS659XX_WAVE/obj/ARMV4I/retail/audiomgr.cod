; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\Z2170P\SRC\DRIVERS\TPS659XX_WAVE\audiomgr.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|?get_AudioMixerManager@CAudioManager@@QBAPAVCAudioMixerManager@@XZ| ; CAudioManager::get_AudioMixerManager
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\audiomgr.h

  00000			 AREA	 |.pdata|, PDATA
|$T41521| DCD	|$LN5@get_AudioM|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_AudioMixerManager@CAudioManager@@QBAPAVCAudioMixerManager@@XZ| PROC ; CAudioManager::get_AudioMixerManager

; 140  :     {

  00000		 |$LN5@get_AudioM|
  00000		 |$M41518|

; 141  :         return m_pAudioMixerManager;

  00000	e5900028	 ldr         r0, [r0, #0x28]

; 142  :     }

  00004	e12fff1e	 bx          lr
  00008		 |$M41519|

			 ENDP  ; |?get_AudioMixerManager@CAudioManager@@QBAPAVCAudioMixerManager@@XZ|, CAudioManager::get_AudioMixerManager

	EXPORT	|?get_InputStreamManager@CAudioManager@@QBAPAVCStreamManager@@I@Z| ; CAudioManager::get_InputStreamManager

  00000			 AREA	 |.pdata|, PDATA
|$T41531| DCD	|$LN5@get_InputS|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_InputStreamManager@CAudioManager@@QBAPAVCStreamManager@@I@Z| PROC ; CAudioManager::get_InputStreamManager

; 155  :     {

  00000		 |$LN5@get_InputS|
  00000		 |$M41528|

; 156  :         UNREFERENCED_PARAMETER(DeviceId);
; 157  :         return m_pInputStreamManager;

  00000	e590002c	 ldr         r0, [r0, #0x2C]

; 158  :     }

  00004	e12fff1e	 bx          lr
  00008		 |$M41529|

			 ENDP  ; |?get_InputStreamManager@CAudioManager@@QBAPAVCStreamManager@@I@Z|, CAudioManager::get_InputStreamManager

	EXPORT	|?get_OutputStreamManager@CAudioManager@@QBAPAVCStreamManager@@I@Z| ; CAudioManager::get_OutputStreamManager

  00000			 AREA	 |.pdata|, PDATA
|$T41541| DCD	|$LN5@get_Output|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_OutputStreamManager@CAudioManager@@QBAPAVCStreamManager@@I@Z| PROC ; CAudioManager::get_OutputStreamManager

; 161  :     {

  00000		 |$LN5@get_Output|
  00000		 |$M41538|

; 162  :         UNREFERENCED_PARAMETER(DeviceId);
; 163  :         return m_pOutputStreamManager;

  00000	e5900030	 ldr         r0, [r0, #0x30]

; 164  :     }

  00004	e12fff1e	 bx          lr
  00008		 |$M41539|

			 ENDP  ; |?get_OutputStreamManager@CAudioManager@@QBAPAVCStreamManager@@I@Z|, CAudioManager::get_OutputStreamManager

	EXPORT	|?get_HardwareAudioBridge@CAudioManager@@QBAPAVCHardwareAudioBridge@@XZ| ; CAudioManager::get_HardwareAudioBridge

  00000			 AREA	 |.pdata|, PDATA
|$T41551| DCD	|$LN5@get_Hardwa|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_HardwareAudioBridge@CAudioManager@@QBAPAVCHardwareAudioBridge@@XZ| PROC ; CAudioManager::get_HardwareAudioBridge

; 172  :     {

  00000		 |$LN5@get_Hardwa|
  00000		 |$M41548|

; 173  :         return m_pHardwareBridge;

  00000	e5900024	 ldr         r0, [r0, #0x24]

; 174  :     }

  00004	e12fff1e	 bx          lr
  00008		 |$M41549|

			 ENDP  ; |?get_HardwareAudioBridge@CAudioManager@@QBAPAVCHardwareAudioBridge@@XZ|, CAudioManager::get_HardwareAudioBridge

	EXPORT	|?get_OutStreamManager@CAudioManager@@QAAPAVCStreamManager@@XZ| ; CAudioManager::get_OutStreamManager

  00000			 AREA	 |.pdata|, PDATA
|$T41561| DCD	|$LN5@get_OutStr|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_OutStreamManager@CAudioManager@@QAAPAVCStreamManager@@XZ| PROC ; CAudioManager::get_OutStreamManager

; 177  :         {

  00000		 |$LN5@get_OutStr|
  00000		 |$M41558|

; 178  :         return m_pOutputStreamManager;

  00000	e5900030	 ldr         r0, [r0, #0x30]

; 179  :         }

  00004	e12fff1e	 bx          lr
  00008		 |$M41559|

			 ENDP  ; |?get_OutStreamManager@CAudioManager@@QAAPAVCStreamManager@@XZ|, CAudioManager::get_OutStreamManager

	EXPORT	|?GetStreamManager@StreamContext@@QAAPAVCStreamManager@@XZ| ; StreamContext::GetStreamManager
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\strmctxt.h

  00000			 AREA	 |.pdata|, PDATA
|$T41571| DCD	|$LN5@GetStreamM|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetStreamManager@StreamContext@@QAAPAVCStreamManager@@XZ| PROC ; StreamContext::GetStreamManager

; 76   :     CStreamManager *GetStreamManager() { return m_pStreamManager; }

  00000		 |$LN5@GetStreamM|
  00000		 |$M41568|
  00000	e5900050	 ldr         r0, [r0, #0x50]
  00004	e12fff1e	 bx          lr
  00008		 |$M41569|

			 ENDP  ; |?GetStreamManager@StreamContext@@QAAPAVCStreamManager@@XZ|, StreamContext::GetStreamManager

	EXPORT	|?GetGain@StreamContext@@QAAKXZ|	; StreamContext::GetGain

  00000			 AREA	 |.pdata|, PDATA
|$T41581| DCD	|$LN5@GetGain|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetGain@StreamContext@@QAAKXZ| PROC	; StreamContext::GetGain

; 110  :     {

  00000		 |$LN5@GetGain|
  00000		 |$M41578|

; 111  :         return m_dwGain;

  00000	e5900058	 ldr         r0, [r0, #0x58]

; 112  :     }

  00004	e12fff1e	 bx          lr
  00008		 |$M41579|

			 ENDP  ; |?GetGain@StreamContext@@QAAKXZ|, StreamContext::GetGain

	EXPORT	|?SetGain@StreamContext@@QAAKK@Z|	; StreamContext::SetGain

  00000			 AREA	 |.pdata|, PDATA
|$T41592| DCD	|$LN5@SetGain|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetGain@StreamContext@@QAAKK@Z| PROC	; StreamContext::SetGain

; 115  :     {

  00000		 |$LN5@SetGain|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M41589|
  00004	e1a02000	 mov         r2, r0

; 116  :         m_dwGain = dwGain;
; 117  :         GainChange();

  00008	e5923000	 ldr         r3, [r2]
  0000c	e5821058	 str         r1, [r2, #0x58]
  00010	e5933040	 ldr         r3, [r3, #0x40]
  00014	e1a0e00f	 mov         lr, pc
  00018	e12fff13	 bx          r3

; 118  :         return MMSYSERR_NOERROR;

  0001c	e3a00000	 mov         r0, #0

; 119  :     }

  00020	e49de004	 ldr         lr, [sp], #4
  00024	e12fff1e	 bx          lr
  00028		 |$M41590|

			 ENDP  ; |?SetGain@StreamContext@@QAAKK@Z|, StreamContext::SetGain

	EXPORT	|??0CAudioManager@@QAA@XZ|		; CAudioManager::CAudioManager
	EXPORT	|??_7CAudioManager@@6B@| [ DATA ]	; CAudioManager::`vftable'
	EXPORT	|?get_InputDeviceCount@CAudioManager@@UAAKXZ| ; CAudioManager::get_InputDeviceCount
	EXPORT	|?get_OutputDeviceCount@CAudioManager@@UAAKXZ| ; CAudioManager::get_OutputDeviceCount
	EXPORT	|?OutputStreamOpened@CAudioManager@@UAAHXZ| ; CAudioManager::OutputStreamOpened
	EXPORT	|?OutputStreamClosed@CAudioManager@@UAAHXZ| ; CAudioManager::OutputStreamClosed
	EXPORT	|?InputStreamOpened@CAudioManager@@UAAHXZ| ; CAudioManager::InputStreamOpened
	EXPORT	|?InputStreamClosed@CAudioManager@@UAAHXZ| ; CAudioManager::InputStreamClosed
	EXPORT	|?put_OutputGain@CAudioManager@@UAAKK@Z| ; CAudioManager::put_OutputGain
	EXPORT	|?get_OutputGain@CAudioManager@@UAAKXZ|	; CAudioManager::get_OutputGain
	EXPORT	|?put_InputGain@CAudioManager@@UAAKK@Z|	; CAudioManager::put_InputGain
	EXPORT	|?get_InputGain@CAudioManager@@UAAKXZ|	; CAudioManager::get_InputGain
	EXPORT	|?put_OutputMute@CAudioManager@@UAAKH@Z| ; CAudioManager::put_OutputMute
	EXPORT	|?get_OutputMute@CAudioManager@@UAAKXZ|	; CAudioManager::get_OutputMute
	EXPORT	|?put_InputMute@CAudioManager@@UAAKH@Z|	; CAudioManager::put_InputMute
	EXPORT	|?get_InputMute@CAudioManager@@UAAKXZ|	; CAudioManager::get_InputMute
	EXPORT	|?initialize@CAudioManager@@UAAHPBGPBX@Z| ; CAudioManager::initialize
	EXPORT	|?deinitialize@CAudioManager@@UAAHXZ|	; CAudioManager::deinitialize
	EXPORT	|?process_AudioStreamMessage@CAudioManager@@UAAHPAUMMDRV_MESSAGE_PARAMS@@PAK@Z| ; CAudioManager::process_AudioStreamMessage
	EXPORT	|?process_PowerManagementMessage@CAudioManager@@UAAHKPAEK0KPAK@Z| ; CAudioManager::process_PowerManagementMessage
	EXPORT	|?process_MiscellaneousMessage@CAudioManager@@UAAHKPAEK0KPAK@Z| ; CAudioManager::process_MiscellaneousMessage
	IMPORT	|??0CAudioMixerManager@@QAA@PAVCAudioManager@@@Z| ; CAudioMixerManager::CAudioMixerManager
	IMPORT	|??2@YAPAXI@Z|				; operator new
	IMPORT	|??_ECAudioManager@@UAAPAXI@Z|, WEAK |??_GCAudioManager@@UAAPAXI@Z| ; CAudioManager::`vector deleting destructor', CAudioManager::`scalar deleting destructor'
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\audiomgr.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T41606| DCD	|$LN7@CAudioMana|
	DCD	0x40001701

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_7CAudioManager@@6B@| DCD |??_ECAudioManager@@UAAPAXI@Z| ; CAudioManager::`vftable'
	DCD	|?get_InputDeviceCount@CAudioManager@@UAAKXZ|
	DCD	|?get_OutputDeviceCount@CAudioManager@@UAAKXZ|
	DCD	|?OutputStreamOpened@CAudioManager@@UAAHXZ|
	DCD	|?OutputStreamClosed@CAudioManager@@UAAHXZ|
	DCD	|?InputStreamOpened@CAudioManager@@UAAHXZ|
	DCD	|?InputStreamClosed@CAudioManager@@UAAHXZ|
	DCD	|?put_OutputGain@CAudioManager@@UAAKK@Z|
	DCD	|?get_OutputGain@CAudioManager@@UAAKXZ|
	DCD	|?put_InputGain@CAudioManager@@UAAKK@Z|
	DCD	|?get_InputGain@CAudioManager@@UAAKXZ|
	DCD	|?put_OutputMute@CAudioManager@@UAAKH@Z|
	DCD	|?get_OutputMute@CAudioManager@@UAAKXZ|
	DCD	|?put_InputMute@CAudioManager@@UAAKH@Z|
	DCD	|?get_InputMute@CAudioManager@@UAAKXZ|
	DCD	|?initialize@CAudioManager@@UAAHPBGPBX@Z|
	DCD	|?deinitialize@CAudioManager@@UAAHXZ|
	DCD	|?process_AudioStreamMessage@CAudioManager@@UAAHPAUMMDRV_MESSAGE_PARAMS@@PAK@Z|
	DCD	|?process_PowerManagementMessage@CAudioManager@@UAAHKPAEK0KPAK@Z|
	DCD	|?process_MiscellaneousMessage@CAudioManager@@UAAHKPAEK0KPAK@Z|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CAudioManager@@QAA@XZ| PROC	; CAudioManager::CAudioManager

; 57   : {

  00000		 |$LN7@CAudioMana|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M41603|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3048	 ldr         r3, [pc, #0x48]
  0000c	e3a02000	 mov         r2, #0

; 58   :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+CAudioManager()\r\n"));
; 59   :     m_pAudioMixerManager = new CAudioMixerManager(this);

  00010	e3a00024	 mov         r0, #0x24
  00014	e5843000	 str         r3, [r4]
  00018	e5842004	 str         r2, [r4, #4]
  0001c	e5842010	 str         r2, [r4, #0x10]
  00020	e5842024	 str         r2, [r4, #0x24]
  00024	e584202c	 str         r2, [r4, #0x2C]
  00028	e5842030	 str         r2, [r4, #0x30]
  0002c	eb000000	 bl          |??2@YAPAXI@Z|
  00030	e3500000	 cmp         r0, #0
  00034	0a000002	 beq         |$LN3@CAudioMana|
  00038	e1a01004	 mov         r1, r4
  0003c	eb000000	 bl          |??0CAudioMixerManager@@QAA@PAVCAudioManager@@@Z|
  00040	ea000000	 b           |$LN4@CAudioMana|
  00044		 |$LN3@CAudioMana|
  00044	e3a00000	 mov         r0, #0
  00048		 |$LN4@CAudioMana|
  00048	e5840028	 str         r0, [r4, #0x28]

; 60   : 
; 61   :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-CAudioManager()\r\n"));
; 62   : }

  0004c	e1a00004	 mov         r0, r4
  00050	e8bd4010	 ldmia       sp!, {r4, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$LN8@CAudioMana|
  00058		 |$LN9@CAudioMana|
  00058	00000000	 DCD         |??_7CAudioManager@@6B@|
  0005c		 |$M41604|

			 ENDP  ; |??0CAudioManager@@QAA@XZ|, CAudioManager::CAudioManager

	EXPORT	|?get_AudioLine@CAudioControlBase@@QBAPAVCAudioLineBase@@XZ| ; CAudioControlBase::get_AudioLine
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\audioctrl.h

  00000			 AREA	 |.pdata|, PDATA
|$T41618| DCD	|$LN5@get_AudioL|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_AudioLine@CAudioControlBase@@QBAPAVCAudioLineBase@@XZ| PROC ; CAudioControlBase::get_AudioLine

; 79   :     CAudioLineBase* get_AudioLine() const       { return m_pAudioLine; }

  00000		 |$LN5@get_AudioL|
  00000		 |$M41615|
  00000	e5900008	 ldr         r0, [r0, #8]
  00004	e12fff1e	 bx          lr
  00008		 |$M41616|

			 ENDP  ; |?get_AudioLine@CAudioControlBase@@QBAPAVCAudioLineBase@@XZ|, CAudioControlBase::get_AudioLine

	EXPORT	|?get_ControlId@CAudioControlBase@@QBAKXZ| ; CAudioControlBase::get_ControlId

  00000			 AREA	 |.pdata|, PDATA
|$T41628| DCD	|$LN5@get_Contro|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_ControlId@CAudioControlBase@@QBAKXZ| PROC ; CAudioControlBase::get_ControlId

; 81   :     DWORD get_ControlId() const                 { return m_ControlId; }

  00000		 |$LN5@get_Contro|
  00000		 |$M41625|
  00000	e590000c	 ldr         r0, [r0, #0xC]
  00004	e12fff1e	 bx          lr
  00008		 |$M41626|

			 ENDP  ; |?get_ControlId@CAudioControlBase@@QBAKXZ|, CAudioControlBase::get_ControlId

	EXPORT	|?get_ChannelCount@CAudioLineBase@@QBAKXZ| ; CAudioLineBase::get_ChannelCount
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\audiolin.h

  00000			 AREA	 |.pdata|, PDATA
|$T41638| DCD	|$LN5@get_Channe|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_ChannelCount@CAudioLineBase@@QBAKXZ| PROC ; CAudioLineBase::get_ChannelCount

; 102  :     DWORD get_ChannelCount() const          { return m_countChannels; }

  00000		 |$LN5@get_Channe|
  00000		 |$M41635|
  00000	e5900020	 ldr         r0, [r0, #0x20]
  00004	e12fff1e	 bx          lr
  00008		 |$M41636|

			 ENDP  ; |?get_ChannelCount@CAudioLineBase@@QBAKXZ|, CAudioLineBase::get_ChannelCount

	EXPORT	|?put_AudioVolume@CAudioMixerManager@@QBAKW4AudioMixerControl@1@K@Z| ; CAudioMixerManager::put_AudioVolume
	IMPORT	|?notify_AudioMixerCallbacks@CAudioMixerManager@@QBAXKK@Z| ; CAudioMixerManager::notify_AudioMixerCallbacks
	IMPORT	|memset|
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\audioctrl.h

  00000			 AREA	 |.pdata|, PDATA
|$T41673| DCD	|$LN21@put_AudioV|
	DCD	0x40003802
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\mixermgr.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?put_AudioVolume@CAudioMixerManager@@QBAKW4AudioMixerControl@1@K@Z| PROC ; CAudioMixerManager::put_AudioVolume

; 112  :     {

  00000		 |$LN21@put_AudioV|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004	e24dd020	 sub         sp, sp, #0x20
  00008		 |$M41670|
  00008	e1a05002	 mov         r5, r2
  0000c	e1a04001	 mov         r4, r1
  00010	e1a07000	 mov         r7, r0

; 113  :         DWORD mmRet = MMSYSERR_NOERROR;
; 114  : 
; 115  :         ASSERT(m_prgAudioMixerControls[id]);
; 116  :         MIXERCONTROLDETAILS ctrlDetail = {0};

  00014	e3a03000	 mov         r3, #0
  00018	e3a02014	 mov         r2, #0x14
  0001c	e3a01000	 mov         r1, #0
  00020	e28d000c	 add         r0, sp, #0xC
  00024	e58d3008	 str         r3, [sp, #8]
  00028	eb000000	 bl          memset
  0002c	e0876104	 add         r6, r7, r4, lsl #2

; 117  :         MIXERCONTROLDETAILS_UNSIGNED rgValue[2];
; 118  :         DWORD cChannels = m_prgAudioMixerControls[id]->get_AudioLine()->get_ChannelCount();

  00030	e5961010	 ldr         r1, [r6, #0x10]

; 119  : 
; 120  :         ctrlDetail.cbStruct = sizeof(MIXERCONTROLDETAILS);

  00034	e3a02018	 mov         r2, #0x18
  00038	e3a00cff	 mov         r0, #0xFF, 24
  0003c	e5913008	 ldr         r3, [r1, #8]

; 121  :         ctrlDetail.dwControlID = m_prgAudioMixerControls[id]->get_ControlId();
; 122  :         ctrlDetail.cChannels = cChannels;
; 123  :         ctrlDetail.cbDetails = sizeof(MIXERCONTROLDETAILS_UNSIGNED);

  00040	e3a08004	 mov         r8, #4

; 124  :         ctrlDetail.paDetails = rgValue;

  00044	e28de000	 add         lr, sp, #0
  00048	e5934020	 ldr         r4, [r3, #0x20]
  0004c	e58d2008	 str         r2, [sp, #8]
  00050	e591300c	 ldr         r3, [r1, #0xC]

; 125  : 
; 126  :         DWORD dwGainL = dwGain & 0xFFFF;

  00054	e38010ff	 orr         r1, r0, #0xFF
  00058	e58d4010	 str         r4, [sp, #0x10]
  0005c	e58d300c	 str         r3, [sp, #0xC]
  00060	e0053001	 and         r3, r5, r1
  00064	e58d8018	 str         r8, [sp, #0x18]
  00068	e58de01c	 str         lr, [sp, #0x1C]

; 127  :         DWORD dwGainR = (dwGain >> 16) & 0xFFFF;

  0006c	e1a02825	 mov         r2, r5, lsr #16

; 128  : 
; 129  :         switch (cChannels)

  00070	e3540001	 cmp         r4, #1
  00074	0a000004	 beq         |$LN4@put_AudioV|
  00078	e3540002	 cmp         r4, #2

; 139  :             break;
; 140  :         default:
; 141  :             mmRet = MMSYSERR_INVALPARAM;

  0007c	13a0400b	 movne       r4, #0xB
  00080	1a000012	 bne         |$Error$39028|

; 130  :         {
; 131  :         case 2:
; 132  :             // rgValue[0] is left channel and rgValue[1] is right channel.
; 133  :             rgValue[0].dwValue = dwGainL;
; 134  :             rgValue[1].dwValue = dwGainR;

  00084	e58d2004	 str         r2, [sp, #4]

; 135  :             break;

  00088	ea000001	 b           |$LN18@put_AudioV|
  0008c		 |$LN4@put_AudioV|

; 136  :         case 1:
; 137  :             // rgValue[0] is average of left and right channels.
; 138  :             rgValue[0].dwValue = (dwGainL + dwGainR) / 2;

  0008c	e0823003	 add         r3, r2, r3
  00090	e1a030a3	 mov         r3, r3, lsr #1
  00094		 |$LN18@put_AudioV|

; 142  :             goto Error;
; 143  :         }
; 144  : 
; 145  :         // Set the control details.
; 146  :         mmRet = m_prgAudioMixerControls[id]->put_Value(&ctrlDetail, 0);

  00094	e5960010	 ldr         r0, [r6, #0x10]
  00098	e58d3000	 str         r3, [sp]
  0009c	e3a02000	 mov         r2, #0
  000a0	e5903000	 ldr         r3, [r0]
  000a4	e28d1008	 add         r1, sp, #8
  000a8	e593300c	 ldr         r3, [r3, #0xC]
  000ac	e1a0e00f	 mov         lr, pc
  000b0	e12fff13	 bx          r3
  000b4	e1b04000	 movs        r4, r0

; 147  :         if (mmRet == MMSYSERR_NOERROR)
; 148  :         {
; 149  :             notify_AudioMixerCallbacks(MM_MIXM_CONTROL_CHANGE,
; 150  :                 m_prgAudioMixerControls[id]->get_ControlId()
; 151  :                 );

  000b8	05963010	 ldreq       r3, [r6, #0x10]
  000bc	03a02c03	 moveq       r2, #3, 24
  000c0	038210d1	 orreq       r1, r2, #0xD1
  000c4	0593200c	 ldreq       r2, [r3, #0xC]
  000c8	01a00007	 moveq       r0, r7
  000cc	0b000000	 bleq        |?notify_AudioMixerCallbacks@CAudioMixerManager@@QBAXKK@Z|
  000d0		 |$Error$39028|

; 152  :         }
; 153  : 
; 154  : Error:
; 155  : 
; 156  :         return mmRet;
; 157  :     }

  000d0	e1a00004	 mov         r0, r4
  000d4	e28dd020	 add         sp, sp, #0x20
  000d8	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  000dc	e12fff1e	 bx          lr
  000e0		 |$M41671|

			 ENDP  ; |?put_AudioVolume@CAudioMixerManager@@QBAKW4AudioMixerControl@1@K@Z|, CAudioMixerManager::put_AudioVolume

	EXPORT	|?get_AudioVolume@CAudioMixerManager@@QBAKW4AudioMixerControl@1@PAK@Z| ; CAudioMixerManager::get_AudioVolume
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\audioctrl.h

  00000			 AREA	 |.pdata|, PDATA
|$T41702| DCD	|$LN18@get_AudioV|
	DCD	0x40003202
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\mixermgr.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_AudioVolume@CAudioMixerManager@@QBAKW4AudioMixerControl@1@PAK@Z| PROC ; CAudioMixerManager::get_AudioVolume

; 161  :     {

  00000		 |$LN18@get_AudioV|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd020	 sub         sp, sp, #0x20
  00008		 |$M41699|
  00008	e1a06002	 mov         r6, r2
  0000c	e1a05001	 mov         r5, r1
  00010	e1a04000	 mov         r4, r0

; 162  :         ASSERT(m_prgAudioMixerControls[id]);
; 163  :         MIXERCONTROLDETAILS ctrlDetail = {0};

  00014	e3a03000	 mov         r3, #0
  00018	e3a02014	 mov         r2, #0x14
  0001c	e3a01000	 mov         r1, #0
  00020	e28d000c	 add         r0, sp, #0xC
  00024	e58d3008	 str         r3, [sp, #8]
  00028	eb000000	 bl          memset

; 164  :         MIXERCONTROLDETAILS_UNSIGNED rgValue[2] = {0};
; 165  :         DWORD cChannels = m_prgAudioMixerControls[id]->get_AudioLine()->get_ChannelCount();

  0002c	e0843105	 add         r3, r4, r5, lsl #2
  00030	e5930010	 ldr         r0, [r3, #0x10]
  00034	e3a03000	 mov         r3, #0
  00038	e3a02000	 mov         r2, #0
  0003c	e58d3004	 str         r3, [sp, #4]
  00040	e58d2000	 str         r2, [sp]
  00044	e5903008	 ldr         r3, [r0, #8]

; 166  : 
; 167  :         ctrlDetail.cbStruct = sizeof(MIXERCONTROLDETAILS);

  00048	e3a02018	 mov         r2, #0x18

; 168  :         ctrlDetail.dwControlID = m_prgAudioMixerControls[id]->get_ControlId();
; 169  :         ctrlDetail.cChannels = cChannels;
; 170  :         ctrlDetail.cbDetails = sizeof(MIXERCONTROLDETAILS_UNSIGNED);

  0004c	e3a0e004	 mov         lr, #4
  00050	e5934020	 ldr         r4, [r3, #0x20]
  00054	e58d2008	 str         r2, [sp, #8]
  00058	e590300c	 ldr         r3, [r0, #0xC]

; 171  :         ctrlDetail.paDetails = rgValue;

  0005c	e28d1000	 add         r1, sp, #0
  00060	e58d4010	 str         r4, [sp, #0x10]
  00064	e58d300c	 str         r3, [sp, #0xC]
  00068	e58de018	 str         lr, [sp, #0x18]
  0006c	e58d101c	 str         r1, [sp, #0x1C]

; 172  : 
; 173  :         DWORD mmRet = m_prgAudioMixerControls[id]->get_Value(&ctrlDetail, 0);

  00070	e5903000	 ldr         r3, [r0]
  00074	e3a02000	 mov         r2, #0
  00078	e28d1008	 add         r1, sp, #8
  0007c	e5933010	 ldr         r3, [r3, #0x10]
  00080	e1a0e00f	 mov         lr, pc
  00084	e12fff13	 bx          r3
  00088	e3500000	 cmp         r0, #0

; 174  :         if (mmRet == MMSYSERR_NOERROR)

  0008c	1a00000a	 bne         |$Error$39050|

; 175  :         {
; 176  :             DWORD dwGainL, dwGainR;
; 177  : 
; 178  :             switch (cChannels)

  00090	e59d2000	 ldr         r2, [sp]
  00094	e3540001	 cmp         r4, #1
  00098	0a000004	 beq         |$LN3@get_AudioV|
  0009c	e3540002	 cmp         r4, #2

; 189  :                 break;
; 190  :             default:
; 191  :                 mmRet = MMSYSERR_INVALPARAM;

  000a0	13a0000b	 movne       r0, #0xB
  000a4	1a000004	 bne         |$Error$39050|

; 179  :             {
; 180  :             case 2:
; 181  :                 // rgValue[0] is left channel
; 182  :                 // rgValue[1] is right channel
; 183  :                 dwGainL = rgValue[0].dwValue;
; 184  :                 dwGainR = rgValue[1].dwValue;

  000a8	e59d3004	 ldr         r3, [sp, #4]

; 185  :                 break;

  000ac	ea000000	 b           |$LN5@get_AudioV|
  000b0		 |$LN3@get_AudioV|

; 186  :             case 1:
; 187  :                 // rgValue[0] is mono gain.
; 188  :                 dwGainL = dwGainR = rgValue[0].dwValue;

  000b0	e1a03002	 mov         r3, r2
  000b4		 |$LN5@get_AudioV|

; 192  :                 goto Error;
; 193  :             }
; 194  : 
; 195  :             // Construct wave gain.  Low word is left channel, and high word is right.
; 196  :             *pdwGain = (dwGainR << 16) | dwGainL;

  000b4	e1823803	 orr         r3, r2, r3, lsl #16
  000b8	e5863000	 str         r3, [r6]
  000bc		 |$Error$39050|

; 197  :         }
; 198  : 
; 199  : Error:
; 200  : 
; 201  :         return mmRet;
; 202  :     }

  000bc	e28dd020	 add         sp, sp, #0x20
  000c0	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000c4	e12fff1e	 bx          lr
  000c8		 |$M41700|

			 ENDP  ; |?get_AudioVolume@CAudioMixerManager@@QBAKW4AudioMixerControl@1@PAK@Z|, CAudioMixerManager::get_AudioVolume

	EXPORT	|?put_AudioMute@CAudioMixerManager@@QBAKW4AudioMixerControl@1@H@Z| ; CAudioMixerManager::put_AudioMute
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\audioctrl.h

  00000			 AREA	 |.pdata|, PDATA
|$T41719| DCD	|$LN8@put_AudioM|
	DCD	0x40001d02
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\mixermgr.h

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?put_AudioMute@CAudioMixerManager@@QBAKW4AudioMixerControl@1@H@Z| PROC ; CAudioMixerManager::put_AudioMute

; 205  :     {

  00000		 |$LN8@put_AudioM|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd01c	 sub         sp, sp, #0x1C
  00008		 |$M41716|
  00008	e1a05000	 mov         r5, r0

; 206  :         ASSERT(m_prgAudioMixerControls[id]);
; 207  :         MIXERCONTROLDETAILS ctrlDetail;
; 208  :         MIXERCONTROLDETAILS_BOOLEAN BooleanValue;
; 209  : 
; 210  :         ctrlDetail.cbStruct = sizeof(MIXERCONTROLDETAILS);
; 211  :         ctrlDetail.cChannels = 1;
; 212  :         ctrlDetail.paDetails = &BooleanValue;
; 213  :         BooleanValue.fValue = bMute;
; 214  : 
; 215  :         DWORD mmRet = m_prgAudioMixerControls[id]->put_Value(&ctrlDetail, 0);

  0000c	e0856101	 add         r6, r5, r1, lsl #2
  00010	e5960010	 ldr         r0, [r6, #0x10]
  00014	e3a01018	 mov         r1, #0x18
  00018	e3a0e001	 mov         lr, #1
  0001c	e28d3000	 add         r3, sp, #0
  00020	e58d1004	 str         r1, [sp, #4]
  00024	e58de00c	 str         lr, [sp, #0xC]
  00028	e58d3018	 str         r3, [sp, #0x18]
  0002c	e58d2000	 str         r2, [sp]
  00030	e5903000	 ldr         r3, [r0]
  00034	e3a02000	 mov         r2, #0
  00038	e28d1004	 add         r1, sp, #4
  0003c	e593300c	 ldr         r3, [r3, #0xC]
  00040	e1a0e00f	 mov         lr, pc
  00044	e12fff13	 bx          r3
  00048	e1b04000	 movs        r4, r0

; 216  :         if (mmRet == MMSYSERR_NOERROR)
; 217  :             {
; 218  :             notify_AudioMixerCallbacks(MM_MIXM_CONTROL_CHANGE,
; 219  :                 m_prgAudioMixerControls[id]->get_ControlId()
; 220  :                 );

  0004c	05963010	 ldreq       r3, [r6, #0x10]
  00050	03a02c03	 moveq       r2, #3, 24
  00054	038210d1	 orreq       r1, r2, #0xD1
  00058	0593200c	 ldreq       r2, [r3, #0xC]
  0005c	01a00005	 moveq       r0, r5
  00060	0b000000	 bleq        |?notify_AudioMixerCallbacks@CAudioMixerManager@@QBAXKK@Z|

; 221  :             }
; 222  : 
; 223  :         return mmRet;
; 224  :     }

  00064	e1a00004	 mov         r0, r4
  00068	e28dd01c	 add         sp, sp, #0x1C
  0006c	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00070	e12fff1e	 bx          lr
  00074		 |$M41717|

			 ENDP  ; |?put_AudioMute@CAudioMixerManager@@QBAKW4AudioMixerControl@1@H@Z|, CAudioMixerManager::put_AudioMute

	EXPORT	|?get_AudioMute@CAudioMixerManager@@QBAKW4AudioMixerControl@1@PAH@Z| ; CAudioMixerManager::get_AudioMute

  00000			 AREA	 |.pdata|, PDATA
|$T41732| DCD	|$LN6@get_AudioM@2|
	DCD	0x40001702
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_AudioMute@CAudioMixerManager@@QBAKW4AudioMixerControl@1@PAH@Z| PROC ; CAudioMixerManager::get_AudioMute

; 227  :     {

  00000		 |$LN6@get_AudioM@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004	e24dd01c	 sub         sp, sp, #0x1C
  00008		 |$M41729|
  00008	e1a04002	 mov         r4, r2

; 228  :         ASSERT(m_prgAudioMixerControls[id]);
; 229  :         MIXERCONTROLDETAILS ctrlDetail;
; 230  :         MIXERCONTROLDETAILS_BOOLEAN BooleanValue;
; 231  : 
; 232  :         ctrlDetail.cbStruct = sizeof(MIXERCONTROLDETAILS);
; 233  :         ctrlDetail.cChannels = 1;
; 234  :         ctrlDetail.paDetails = &BooleanValue;
; 235  : 
; 236  :         DWORD mmRet = m_prgAudioMixerControls[id]->put_Value(&ctrlDetail, 0);

  0000c	e0803101	 add         r3, r0, r1, lsl #2
  00010	e5930010	 ldr         r0, [r3, #0x10]
  00014	e28d3000	 add         r3, sp, #0
  00018	e3a02018	 mov         r2, #0x18
  0001c	e3a01001	 mov         r1, #1
  00020	e58d3018	 str         r3, [sp, #0x18]
  00024	e58d2004	 str         r2, [sp, #4]
  00028	e58d100c	 str         r1, [sp, #0xC]
  0002c	e5903000	 ldr         r3, [r0]
  00030	e3a02000	 mov         r2, #0
  00034	e28d1004	 add         r1, sp, #4
  00038	e593300c	 ldr         r3, [r3, #0xC]
  0003c	e1a0e00f	 mov         lr, pc
  00040	e12fff13	 bx          r3
  00044	e3500000	 cmp         r0, #0

; 237  :         if (mmRet == MMSYSERR_NOERROR)
; 238  :             {
; 239  : // disable PREFAST warning for Using uninitialized memory 'BooleanValue'
; 240  : #pragma warning (push)
; 241  : #pragma warning (disable: 6001)
; 242  :             *pbMute = BooleanValue.fValue;

  00048	059d3000	 ldreq       r3, [sp]
  0004c	05843000	 streq       r3, [r4]

; 243  : #pragma warning (pop)
; 244  :             }
; 245  : 
; 246  :         return mmRet;
; 247  :     }

  00050	e28dd01c	 add         sp, sp, #0x1C
  00054	e8bd4010	 ldmia       sp!, {r4, lr}
  00058	e12fff1e	 bx          lr
  0005c		 |$M41730|

			 ENDP  ; |?get_AudioMute@CAudioMixerManager@@QBAKW4AudioMixerControl@1@PAH@Z|, CAudioMixerManager::get_AudioMute

; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\audiomgr.h

  00000			 AREA	 |.pdata|, PDATA
|$T41741| DCD	|$LN5@get_InputD|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_InputDeviceCount@CAudioManager@@UAAKXZ| PROC ; CAudioManager::get_InputDeviceCount

; 191  :     virtual DWORD get_InputDeviceCount()        {return 1;}

  00000		 |$LN5@get_InputD|
  00000		 |$M41738|
  00000	e3a00001	 mov         r0, #1
  00004	e12fff1e	 bx          lr
  00008		 |$M41739|

			 ENDP  ; |?get_InputDeviceCount@CAudioManager@@UAAKXZ|, CAudioManager::get_InputDeviceCount


  00000			 AREA	 |.pdata|, PDATA
|$T41750| DCD	|$LN5@get_Output@2|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_OutputDeviceCount@CAudioManager@@UAAKXZ| PROC ; CAudioManager::get_OutputDeviceCount

; 192  :     virtual DWORD get_OutputDeviceCount()       {return 1;}

  00000		 |$LN5@get_Output@2|
  00000		 |$M41747|
  00000	e3a00001	 mov         r0, #1
  00004	e12fff1e	 bx          lr
  00008		 |$M41748|

			 ENDP  ; |?get_OutputDeviceCount@CAudioManager@@UAAKXZ|, CAudioManager::get_OutputDeviceCount


  00000			 AREA	 |.pdata|, PDATA
|$T41759| DCD	|$LN5@OutputStre|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?OutputStreamOpened@CAudioManager@@UAAHXZ| PROC ; CAudioManager::OutputStreamOpened

; 194  :     virtual BOOL OutputStreamOpened()           { return TRUE;}

  00000		 |$LN5@OutputStre|
  00000		 |$M41756|
  00000	e3a00001	 mov         r0, #1
  00004	e12fff1e	 bx          lr
  00008		 |$M41757|

			 ENDP  ; |?OutputStreamOpened@CAudioManager@@UAAHXZ|, CAudioManager::OutputStreamOpened


  00000			 AREA	 |.pdata|, PDATA
|$T41768| DCD	|$LN5@OutputStre@2|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?OutputStreamClosed@CAudioManager@@UAAHXZ| PROC ; CAudioManager::OutputStreamClosed

; 195  :     virtual BOOL OutputStreamClosed()           { return TRUE;}

  00000		 |$LN5@OutputStre@2|
  00000		 |$M41765|
  00000	e3a00001	 mov         r0, #1
  00004	e12fff1e	 bx          lr
  00008		 |$M41766|

			 ENDP  ; |?OutputStreamClosed@CAudioManager@@UAAHXZ|, CAudioManager::OutputStreamClosed


  00000			 AREA	 |.pdata|, PDATA
|$T41777| DCD	|$LN5@InputStrea|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InputStreamOpened@CAudioManager@@UAAHXZ| PROC ; CAudioManager::InputStreamOpened

; 196  :     virtual BOOL InputStreamOpened()            { return TRUE;}

  00000		 |$LN5@InputStrea|
  00000		 |$M41774|
  00000	e3a00001	 mov         r0, #1
  00004	e12fff1e	 bx          lr
  00008		 |$M41775|

			 ENDP  ; |?InputStreamOpened@CAudioManager@@UAAHXZ|, CAudioManager::InputStreamOpened


  00000			 AREA	 |.pdata|, PDATA
|$T41786| DCD	|$LN5@InputStrea@2|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InputStreamClosed@CAudioManager@@UAAHXZ| PROC ; CAudioManager::InputStreamClosed

; 197  :     virtual BOOL InputStreamClosed()            { return TRUE;}

  00000		 |$LN5@InputStrea@2|
  00000		 |$M41783|
  00000	e3a00001	 mov         r0, #1
  00004	e12fff1e	 bx          lr
  00008		 |$M41784|

			 ENDP  ; |?InputStreamClosed@CAudioManager@@UAAHXZ|, CAudioManager::InputStreamClosed


  00000			 AREA	 |.pdata|, PDATA
|$T41801| DCD	|$LN7@put_Output|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?put_OutputGain@CAudioManager@@UAAKK@Z| PROC ; CAudioManager::put_OutputGain

; 202  :     {

  00000		 |$LN7@put_Output|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M41798|
  00004	e1a02001	 mov         r2, r1

; 203  :         return get_AudioMixerManager()->put_AudioVolume(
; 204  :                     CAudioMixerManager::kWavOutVolumeControl, dwGain);

  00008	e5900028	 ldr         r0, [r0, #0x28]
  0000c	e3a01001	 mov         r1, #1
  00010	eb000000	 bl          |?put_AudioVolume@CAudioMixerManager@@QBAKW4AudioMixerControl@1@K@Z|

; 205  :     }

  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M41799|

			 ENDP  ; |?put_OutputGain@CAudioManager@@UAAKK@Z|, CAudioManager::put_OutputGain


  00000			 AREA	 |.pdata|, PDATA
|$T41815| DCD	|$LN7@get_Output@3|
	DCD	0x40000a02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_OutputGain@CAudioManager@@UAAKXZ| PROC ; CAudioManager::get_OutputGain

; 208  :     {

  00000		 |$LN7@get_Output@3|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M41812|

; 209  :         DWORD dwGain;
; 210  :         get_AudioMixerManager()->get_AudioVolume(
; 211  :             CAudioMixerManager::kWavOutVolumeControl, &dwGain);

  00008	e5900028	 ldr         r0, [r0, #0x28]
  0000c	e28d2000	 add         r2, sp, #0
  00010	e3a01001	 mov         r1, #1
  00014	eb000000	 bl          |?get_AudioVolume@CAudioMixerManager@@QBAKW4AudioMixerControl@1@PAK@Z|

; 212  :         return dwGain;

  00018	e59d0000	 ldr         r0, [sp]

; 213  :     }

  0001c	e28dd004	 add         sp, sp, #4
  00020	e49de004	 ldr         lr, [sp], #4
  00024	e12fff1e	 bx          lr
  00028		 |$M41813|

			 ENDP  ; |?get_OutputGain@CAudioManager@@UAAKXZ|, CAudioManager::get_OutputGain


  00000			 AREA	 |.pdata|, PDATA
|$T41830| DCD	|$LN7@put_InputG|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?put_InputGain@CAudioManager@@UAAKK@Z| PROC ; CAudioManager::put_InputGain

; 216  :     {

  00000		 |$LN7@put_InputG|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M41827|
  00004	e1a02001	 mov         r2, r1

; 217  :         return get_AudioMixerManager()->put_AudioVolume(
; 218  :                     CAudioMixerManager::kWavInVolumeControl, dwGain);

  00008	e5900028	 ldr         r0, [r0, #0x28]
  0000c	e3a01000	 mov         r1, #0
  00010	eb000000	 bl          |?put_AudioVolume@CAudioMixerManager@@QBAKW4AudioMixerControl@1@K@Z|

; 219  :     }

  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M41828|

			 ENDP  ; |?put_InputGain@CAudioManager@@UAAKK@Z|, CAudioManager::put_InputGain


  00000			 AREA	 |.pdata|, PDATA
|$T41844| DCD	|$LN7@get_InputG|
	DCD	0x40000a02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_InputGain@CAudioManager@@UAAKXZ| PROC ; CAudioManager::get_InputGain

; 222  :     {

  00000		 |$LN7@get_InputG|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M41841|

; 223  :         DWORD dwGain;
; 224  :         get_AudioMixerManager()->get_AudioVolume(
; 225  :             CAudioMixerManager::kWavInVolumeControl, &dwGain);

  00008	e5900028	 ldr         r0, [r0, #0x28]
  0000c	e28d2000	 add         r2, sp, #0
  00010	e3a01000	 mov         r1, #0
  00014	eb000000	 bl          |?get_AudioVolume@CAudioMixerManager@@QBAKW4AudioMixerControl@1@PAK@Z|

; 226  :         return dwGain;

  00018	e59d0000	 ldr         r0, [sp]

; 227  :     }

  0001c	e28dd004	 add         sp, sp, #4
  00020	e49de004	 ldr         lr, [sp], #4
  00024	e12fff1e	 bx          lr
  00028		 |$M41842|

			 ENDP  ; |?get_InputGain@CAudioManager@@UAAKXZ|, CAudioManager::get_InputGain


  00000			 AREA	 |.pdata|, PDATA
|$T41859| DCD	|$LN7@put_Output@2|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?put_OutputMute@CAudioManager@@UAAKH@Z| PROC ; CAudioManager::put_OutputMute

; 230  :     {

  00000		 |$LN7@put_Output@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M41856|
  00004	e1a02001	 mov         r2, r1

; 231  :         return get_AudioMixerManager()->put_AudioMute(
; 232  :                     CAudioMixerManager::kWavOutMuteControl, Mute);

  00008	e5900028	 ldr         r0, [r0, #0x28]
  0000c	e3a01003	 mov         r1, #3
  00010	eb000000	 bl          |?put_AudioMute@CAudioMixerManager@@QBAKW4AudioMixerControl@1@H@Z|

; 233  :     }

  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M41857|

			 ENDP  ; |?put_OutputMute@CAudioManager@@UAAKH@Z|, CAudioManager::put_OutputMute


  00000			 AREA	 |.pdata|, PDATA
|$T41873| DCD	|$LN7@get_Output@4|
	DCD	0x40000a02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_OutputMute@CAudioManager@@UAAKXZ| PROC ; CAudioManager::get_OutputMute

; 236  :     {

  00000		 |$LN7@get_Output@4|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M41870|

; 237  :         BOOL bMute;
; 238  :         get_AudioMixerManager()->get_AudioMute(
; 239  :             CAudioMixerManager::kWavOutMuteControl, &bMute);

  00008	e5900028	 ldr         r0, [r0, #0x28]
  0000c	e28d2000	 add         r2, sp, #0
  00010	e3a01003	 mov         r1, #3
  00014	eb000000	 bl          |?get_AudioMute@CAudioMixerManager@@QBAKW4AudioMixerControl@1@PAH@Z|

; 240  :         return bMute;

  00018	e59d0000	 ldr         r0, [sp]

; 241  :     }

  0001c	e28dd004	 add         sp, sp, #4
  00020	e49de004	 ldr         lr, [sp], #4
  00024	e12fff1e	 bx          lr
  00028		 |$M41871|

			 ENDP  ; |?get_OutputMute@CAudioManager@@UAAKXZ|, CAudioManager::get_OutputMute


  00000			 AREA	 |.pdata|, PDATA
|$T41888| DCD	|$LN7@put_InputM|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?put_InputMute@CAudioManager@@UAAKH@Z| PROC ; CAudioManager::put_InputMute

; 244  :     {

  00000		 |$LN7@put_InputM|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M41885|
  00004	e1a02001	 mov         r2, r1

; 245  :         return get_AudioMixerManager()->put_AudioMute(
; 246  :                     CAudioMixerManager::kWavInMuteControl, bMute);

  00008	e5900028	 ldr         r0, [r0, #0x28]
  0000c	e3a01002	 mov         r1, #2
  00010	eb000000	 bl          |?put_AudioMute@CAudioMixerManager@@QBAKW4AudioMixerControl@1@H@Z|

; 247  :     }

  00014	e49de004	 ldr         lr, [sp], #4
  00018	e12fff1e	 bx          lr
  0001c		 |$M41886|

			 ENDP  ; |?put_InputMute@CAudioManager@@UAAKH@Z|, CAudioManager::put_InputMute


  00000			 AREA	 |.pdata|, PDATA
|$T41902| DCD	|$LN7@get_InputM|
	DCD	0x40000a02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_InputMute@CAudioManager@@UAAKXZ| PROC ; CAudioManager::get_InputMute

; 250  :     {

  00000		 |$LN7@get_InputM|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M41899|

; 251  :         BOOL bMute;
; 252  :         get_AudioMixerManager()->get_AudioMute(
; 253  :             CAudioMixerManager::kWavInMuteControl, &bMute);

  00008	e5900028	 ldr         r0, [r0, #0x28]
  0000c	e28d2000	 add         r2, sp, #0
  00010	e3a01002	 mov         r1, #2
  00014	eb000000	 bl          |?get_AudioMute@CAudioMixerManager@@QBAKW4AudioMixerControl@1@PAH@Z|

; 254  :         return bMute;

  00018	e59d0000	 ldr         r0, [sp]

; 255  :     }

  0001c	e28dd004	 add         sp, sp, #4
  00020	e49de004	 ldr         lr, [sp], #4
  00024	e12fff1e	 bx          lr
  00028		 |$M41900|

			 ENDP  ; |?get_InputMute@CAudioManager@@UAAKXZ|, CAudioManager::get_InputMute

	EXPORT	|?InternalCleanUp@CAudioManager@@IAAXXZ| ; CAudioManager::InternalCleanUp
	IMPORT	|CloseBusAccessHandle|
	IMPORT	|SetDevicePowerState|
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\audiomgr.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T41910| DCD	|$LN7@InternalCl|
	DCD	0x40001201
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InternalCleanUp@CAudioManager@@IAAXXZ| PROC ; CAudioManager::InternalCleanUp

; 85   : {

  00000		 |$LN7@InternalCl|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M41907|
  00004	e1a04000	 mov         r4, r0

; 86   :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+InternalCleanUp()\r\n"));
; 87   : 
; 88   :     if (m_state != kUninitialized)

  00008	e5943004	 ldr         r3, [r4, #4]
  0000c	e3530000	 cmp         r3, #0
  00010	0a00000a	 beq         |$LN2@InternalCl|

; 89   :         {
; 90   :         // clean-up some resources
; 91   :         //
; 92   :         if (m_hParentBus)

  00014	e5943010	 ldr         r3, [r4, #0x10]
  00018	e3530000	 cmp         r3, #0
  0001c	0a000005	 beq         |$LN1@InternalCl|

; 93   :             {
; 94   :             SetDevicePowerState(m_hParentBus, D4 , NULL);

  00020	e3a02000	 mov         r2, #0
  00024	e3a01004	 mov         r1, #4
  00028	e1a00003	 mov         r0, r3
  0002c	eb000000	 bl          SetDevicePowerState

; 95   :             CloseBusAccessHandle(m_hParentBus) ;

  00030	e5940010	 ldr         r0, [r4, #0x10]
  00034	eb000000	 bl          CloseBusAccessHandle
  00038		 |$LN1@InternalCl|

; 96   :             }
; 97   : 
; 98   :         m_state = kUninitialized;

  00038	e3a03000	 mov         r3, #0
  0003c	e5843004	 str         r3, [r4, #4]
  00040		 |$LN2@InternalCl|

; 99   :         }
; 100  : 
; 101  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-InternalCleanUp()\r\n"));
; 102  : }

  00040	e8bd4010	 ldmia       sp!, {r4, lr}
  00044	e12fff1e	 bx          lr
  00048		 |$M41908|

			 ENDP  ; |?InternalCleanUp@CAudioManager@@IAAXXZ|, CAudioManager::InternalCleanUp

	IMPORT	|InitializeMixers|
	IMPORT	|CreateBusAccessHandle|

  00000			 AREA	 |.pdata|, PDATA
|$T41921| DCD	|$LN5@initialize|
	DCD	0x40001901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?initialize@CAudioManager@@UAAHPBGPBX@Z| PROC ; CAudioManager::initialize

; 113  : {

  00000		 |$LN5@initialize|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M41918|
  00004	e1a04000	 mov         r4, r0

; 114  :     UNREFERENCED_PARAMETER(pBusContext);
; 115  :     UNREFERENCED_PARAMETER(szContext);
; 116  : 
; 117  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+initialize(szContext=%d)\r\n", szContext));
; 118  : 
; 119  :     m_hParentBus = CreateBusAccessHandle((LPCTSTR) szContext);

  00008	e1a00001	 mov         r0, r1
  0000c	eb000000	 bl          CreateBusAccessHandle
  00010	e1a03000	 mov         r3, r0

; 120  :     m_CurPowerState = PwrDeviceUnspecified;
; 121  :     m_bSuspend = FALSE;
; 122  : 	
; 123  :     m_DriverIndex = 0;
; 124  :     m_counterForcedQuality = 0;
; 125  : 
; 126  :     // default input and output profiles are the handset
; 127  :     //
; 128  :     m_ffOutputAudioProfile = AUDIO_PROFILE_OUT_HANDSET;
; 129  :     m_ffInputAudioProfile = AUDIO_PROFILE_IN_HANDSET_MIC;
; 130  : 
; 131  :     m_dwStreamAttenMax = kMaximumAudioAttenuation;
; 132  :     m_dwDeviceAttenMax = kMaximumAudioAttenuation;
; 133  :     m_dwClassAttenMax  = kMaximumAudioAttenuation;
; 134  : 
; 135  :     m_state = kInitialized;
; 136  : 
; 137  :     InitializeMixers(this);

  00014	e5843010	 str         r3, [r4, #0x10]
  00018	e3a03000	 mov         r3, #0
  0001c	e3e02000	 mvn         r2, #0
  00020	e3a0e002	 mov         lr, #2
  00024	e3a05001	 mov         r5, #1
  00028	e3a01902	 mov         r1, #2, 18
  0002c	e1a00004	 mov         r0, r4
  00030	e284c008	 add         r12, r4, #8
  00034	e88c000c	 stmia       r12, {r2, r3}
  00038	e5843014	 str         r3, [r4, #0x14]
  0003c	e284c018	 add         r12, r4, #0x18
  00040	e88c4028	 stmia       r12, {r3, r5, lr}
  00044	e5841034	 str         r1, [r4, #0x34]
  00048	e5841038	 str         r1, [r4, #0x38]
  0004c	e584103c	 str         r1, [r4, #0x3C]
  00050	e5845004	 str         r5, [r4, #4]
  00054	eb000000	 bl          InitializeMixers

; 138  : 
; 139  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-initialize()\r\n"));
; 140  : 
; 141  :     return TRUE;

  00058	e3a00001	 mov         r0, #1

; 142  : }

  0005c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$M41919|

			 ENDP  ; |?initialize@CAudioManager@@UAAHPBGPBX@Z|, CAudioManager::initialize


  00000			 AREA	 |.pdata|, PDATA
|$T41931| DCD	|$LN6@deinitiali|
	DCD	0x40001001
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?deinitialize@CAudioManager@@UAAHXZ| PROC ; CAudioManager::deinitialize

; 149  : {

  00000		 |$LN6@deinitiali|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M41928|
  00004	e1a04000	 mov         r4, r0

; 150  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+deinitialize()\r\n"));
; 151  : 
; 152  :     if (m_hParentBus)

  00008	e5943010	 ldr         r3, [r4, #0x10]
  0000c	e3530000	 cmp         r3, #0
  00010	0a000007	 beq         |$LN1@deinitiali|

; 153  :         {
; 154  :         SetDevicePowerState(m_hParentBus, D4 , NULL);

  00014	e3a02000	 mov         r2, #0
  00018	e3a01004	 mov         r1, #4
  0001c	e1a00003	 mov         r0, r3
  00020	eb000000	 bl          SetDevicePowerState

; 155  :         CloseBusAccessHandle(m_hParentBus);

  00024	e5940010	 ldr         r0, [r4, #0x10]
  00028	eb000000	 bl          CloseBusAccessHandle

; 156  :         m_hParentBus = NULL;

  0002c	e3a03000	 mov         r3, #0
  00030	e5843010	 str         r3, [r4, #0x10]
  00034		 |$LN1@deinitiali|

; 157  :         }
; 158  : 
; 159  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-deinitialize()\r\n"));
; 160  : 
; 161  :     return TRUE;

  00034	e3a00001	 mov         r0, #1

; 162  : }

  00038	e8bd4010	 ldmia       sp!, {r4, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$M41929|

			 ENDP  ; |?deinitialize@CAudioManager@@UAAHXZ|, CAudioManager::deinitialize

	EXPORT	|?process_IOControlMsg@CAudioManager@@QAAHKPAEK0KPAK@Z| ; CAudioManager::process_IOControlMsg
	IMPORT	|?process_MixerMessage@CAudioMixerManager@@QAAHPAUMMDRV_MESSAGE_PARAMS@@PAK@Z| ; CAudioMixerManager::process_MixerMessage
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\audiomgr.h

  00000			 AREA	 |.pdata|, PDATA
|$T41965| DCD	|$LN26@process_IO|
	DCD	0x40006f02
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\audiomgr.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?process_IOControlMsg@CAudioManager@@QAAHKPAEK0KPAK@Z| PROC ; CAudioManager::process_IOControlMsg

; 177  : {

  00000		 |$LN26@process_IO|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M41962|
  00008	e1a0a003	 mov         r10, r3
  0000c	e1a09002	 mov         r9, r2
  00010	e1a08000	 mov         r8, r0

; 178  :     DEBUGMSG(ZONE_FUNCTION,
; 179  :         (L"WAV:+process_IOControlMsg(dwCode=%d)\r\n", dwCode)
; 180  :         );
; 181  : 
; 182  :     BOOL bResult = FALSE;
; 183  :     IOCTL_WAV_AUDIORENDER_QUERYPORT_OUT *pDataOut = NULL;
; 184  :     IOCTL_WAV_AUDIORENDER_QUERYPORT_IN *pDataIn = NULL;
; 185  : 
; 186  :     switch (dwCode)

  00014	e59f219c	 ldr         r2, [pc, #0x19C]
  00018	e3a04000	 mov         r4, #0
  0001c	e1510002	 cmp         r1, r2
  00020	8a000045	 bhi         |$LN14@process_IO|
  00024	0a00000f	 beq         |$LN5@process_IO|
  00028	e3a0381d	 mov         r3, #0x1D, 16
  0002c	e383e00c	 orr         lr, r3, #0xC
  00030	e151000e	 cmp         r1, lr
  00034	0a000038	 beq         |$LN7@process_IO|
  00038	e3a03822	 mov         r3, #0x22, 16
  0003c	e383ef66	 orr         lr, r3, #0x66, 30
  00040	e151000e	 cmp         r1, lr
  00044	0a000021	 beq         |$LN4@process_IO|
  00048	e3a03822	 mov         r3, #0x22, 16
  0004c	e3833f67	 orr         r3, r3, #0x67, 30
  00050	e1510003	 cmp         r1, r3
  00054	0a000015	 beq         |$LN2@process_IO|
  00058	e3a03832	 mov         r3, #0x32, 16
  0005c	e3833a01	 orr         r3, r3, #1, 20
  00060	e1510003	 cmp         r1, r3
  00064	1a00003e	 bne         |$LN1@process_IO|
  00068		 |$LN5@process_IO|

; 201  : 
; 202  :             // power management messages
; 203  :             //
; 204  :         case IOCTL_POWER_CAPABILITIES:
; 205  :         case IOCTL_POWER_QUERY:
; 206  :         case IOCTL_POWER_SET:
; 207  :         case IOCTL_POWER_GET:
; 208  :             bResult = process_PowerManagementMessage(dwCode, pBufIn, dwLenIn,
; 209  :                         pBufOut, dwLenOut, pdwActualOut);

  00068	e5983000	 ldr         r3, [r8]
  0006c	e59d4034	 ldr         r4, [sp, #0x34]
  00070	e59d5030	 ldr         r5, [sp, #0x30]
  00074	e59d602c	 ldr         r6, [sp, #0x2C]
  00078	e5937048	 ldr         r7, [r3, #0x48]
  0007c	e1a0300a	 mov         r3, r10
  00080	e1a02009	 mov         r2, r9
  00084	e1a00008	 mov         r0, r8
  00088	e58d4008	 str         r4, [sp, #8]
  0008c	e58d5004	 str         r5, [sp, #4]
  00090	e58d6000	 str         r6, [sp]
  00094	e1a0e00f	 mov         lr, pc
  00098	e12fff17	 bx          r7
  0009c		 |$LN23@process_IO|
  0009c	e1a04000	 mov         r4, r0
  000a0		 |$LN8@process_IO|

; 239  :         }
; 240  : 
; 241  :     DEBUGMSG(ZONE_FUNCTION,
; 242  :         (L"WAV:-process_IOControlMsg(bResult=%d)\r\n", bResult)
; 243  :         );
; 244  :     return bResult;
; 245  : }

  000a0	e1a00004	 mov         r0, r4
  000a4	e28dd00c	 add         sp, sp, #0xC
  000a8	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  000ac	e12fff1e	 bx          lr
  000b0		 |$LN2@process_IO|

; 229  : 
; 230  :          case IOCTL_WAV_AUDIORENDER_QUERYPORT:
; 231  :             pDataOut = (IOCTL_WAV_AUDIORENDER_QUERYPORT_OUT*)pBufOut;
; 232  :             pDataOut->bActivePort = get_HardwareAudioBridge()->query_AudioStreamPort();

  000b0	e5980024	 ldr         r0, [r8, #0x24]
  000b4	e5903000	 ldr         r3, [r0]
  000b8	e5933024	 ldr         r3, [r3, #0x24]
  000bc	e1a0e00f	 mov         lr, pc
  000c0	e12fff13	 bx          r3
  000c4	e59d302c	 ldr         r3, [sp, #0x2C]
  000c8	e5830000	 str         r0, [r3]

; 233  : 
; 234  :             break;

  000cc	eafffff3	 b           |$LN8@process_IO|
  000d0		 |$LN4@process_IO|

; 210  :             break;
; 211  : 
; 212  :          case IOCTL_WAV_AUDIORENDER_PORT:
; 213  :             pDataIn = (IOCTL_WAV_AUDIORENDER_QUERYPORT_IN*)pBufIn;
; 214  : 
; 215  :             // Turn on/off DASF clocks.
; 216  :             //
; 217  :             get_HardwareAudioBridge()->enable_I2SClocks(
; 218  :                                  pDataIn->bPortRequest == OMAP35XX_HwAudioBridge::kAudioDASFPort);

  000d0	e5993000	 ldr         r3, [r9]
  000d4	e5980024	 ldr         r0, [r8, #0x24]
  000d8	e3530001	 cmp         r3, #1
  000dc	e5903000	 ldr         r3, [r0]
  000e0	03a01001	 moveq       r1, #1
  000e4	13a01000	 movne       r1, #0
  000e8	e5933028	 ldr         r3, [r3, #0x28]
  000ec	e1a0e00f	 mov         lr, pc
  000f0	e12fff13	 bx          r3

; 219  : 
; 220  :             // Switch to DSP/ARM path audio rendering.
; 221  :             //
; 222  :             bResult = get_HardwareAudioBridge()->switch_AudioStreamPort(pDataIn->bPortRequest);

  000f4	e5980024	 ldr         r0, [r8, #0x24]
  000f8	e5991000	 ldr         r1, [r9]
  000fc	e5903000	 ldr         r3, [r0]
  00100	e5933020	 ldr         r3, [r3, #0x20]
  00104	e1a0e00f	 mov         lr, pc
  00108	e12fff13	 bx          r3
  0010c	e1b04000	 movs        r4, r0

; 223  :             if (bResult == FALSE)

  00110	1affffe2	 bne         |$LN8@process_IO|

; 224  :                 {
; 225  :                 DEBUGMSG(ZONE_FUNCTION, (L"Requested audio port is busy now, try later\r\n"));
; 226  :                 bResult = FALSE;

  00114	e3a04000	 mov         r4, #0

; 227  :                 }
; 228  :             break;

  00118	eaffffe0	 b           |$LN8@process_IO|
  0011c		 |$LN7@process_IO|

; 187  :         {
; 188  :             // audio stream messages
; 189  :             //
; 190  :         case IOCTL_WAV_MESSAGE:
; 191  :             bResult = process_AudioStreamMessage((PMMDRV_MESSAGE_PARAMS)pBufIn,
; 192  :                             (DWORD*)pBufOut);

  0011c	e5983000	 ldr         r3, [r8]
  00120	e59d202c	 ldr         r2, [sp, #0x2C]
  00124	e1a01009	 mov         r1, r9
  00128	e5933044	 ldr         r3, [r3, #0x44]
  0012c	e1a00008	 mov         r0, r8
  00130	e1a0e00f	 mov         lr, pc
  00134	e12fff13	 bx          r3

; 193  :             break;

  00138	eaffffd7	 b           |$LN23@process_IO|
  0013c		 |$LN14@process_IO|

; 178  :     DEBUGMSG(ZONE_FUNCTION,
; 179  :         (L"WAV:+process_IOControlMsg(dwCode=%d)\r\n", dwCode)
; 180  :         );
; 181  : 
; 182  :     BOOL bResult = FALSE;
; 183  :     IOCTL_WAV_AUDIORENDER_QUERYPORT_OUT *pDataOut = NULL;
; 184  :     IOCTL_WAV_AUDIORENDER_QUERYPORT_IN *pDataIn = NULL;
; 185  : 
; 186  :     switch (dwCode)

  0013c	e59f3070	 ldr         r3, [pc, #0x70]
  00140	e1510003	 cmp         r1, r3
  00144	0affffc7	 beq         |$LN5@process_IO|
  00148	e59f3060	 ldr         r3, [pc, #0x60]
  0014c	e1510003	 cmp         r1, r3
  00150	0affffc4	 beq         |$LN5@process_IO|
  00154	e3a03102	 mov         r3, #2, 2
  00158	e3833c01	 orr         r3, r3, #1, 24
  0015c	e1510003	 cmp         r1, r3
  00160	0a00000d	 beq         |$LN6@process_IO|
  00164		 |$LN1@process_IO|

; 235  : 
; 236  :         default:
; 237  :             bResult = process_MiscellaneousMessage(dwCode, pBufIn, dwLenIn,
; 238  :                         pBufOut, dwLenOut, pdwActualOut);

  00164	e5983000	 ldr         r3, [r8]
  00168	e59d4034	 ldr         r4, [sp, #0x34]
  0016c	e59d5030	 ldr         r5, [sp, #0x30]
  00170	e59d602c	 ldr         r6, [sp, #0x2C]
  00174	e593704c	 ldr         r7, [r3, #0x4C]
  00178	e1a0300a	 mov         r3, r10
  0017c	e1a02009	 mov         r2, r9
  00180	e1a00008	 mov         r0, r8
  00184	e58d4008	 str         r4, [sp, #8]
  00188	e58d5004	 str         r5, [sp, #4]
  0018c	e58d6000	 str         r6, [sp]
  00190	e1a0e00f	 mov         lr, pc
  00194	e12fff17	 bx          r7
  00198	eaffffbf	 b           |$LN23@process_IO|
  0019c		 |$LN6@process_IO|

; 194  : 
; 195  :             // audio mixer messages
; 196  :             //
; 197  :         case IOCTL_MIX_MESSAGE:
; 198  :             bResult = get_AudioMixerManager()->process_MixerMessage(
; 199  :                             (PMMDRV_MESSAGE_PARAMS)pBufIn, (DWORD*)pBufOut);

  0019c	e59d202c	 ldr         r2, [sp, #0x2C]
  001a0	e5980028	 ldr         r0, [r8, #0x28]
  001a4	e1a01009	 mov         r1, r9
  001a8	eb000000	 bl          |?process_MixerMessage@CAudioMixerManager@@QAAHPAUMMDRV_MESSAGE_PARAMS@@PAK@Z|

; 200  :             break;

  001ac	eaffffba	 b           |$LN23@process_IO|
  001b0		 |$LN27@process_IO|
  001b0		 |$LN28@process_IO|
  001b0	0032100c	 DCD         0x32100c
  001b4		 |$LN29@process_IO|
  001b4	00321008	 DCD         0x321008
  001b8		 |$LN30@process_IO|
  001b8	00321004	 DCD         0x321004
  001bc		 |$M41963|

			 ENDP  ; |?process_IOControlMsg@CAudioManager@@QAAHKPAEK0KPAK@Z|, CAudioManager::process_IOControlMsg

	EXPORT	|??_C@_1DG@EDLBLBEC@?$AAW?$AAA?$AAV?$AAE?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAp?$AAa?$AAr?$AAa?$AAm?$AAe?$AAt?$AAe?$AAr?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@GDFMBKEH@?$AAW?$AAA?$AAV?$AA?3?$AA?$CB?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?9?$AA?5?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@GHKHKPDJ@?$AAW?$AAA?$AAV?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAp?$AAa?$AAr?$AAa?$AAm?$AAe?$AAt?$AAe?$AAr?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@ECDDIICB@?$AAW?$AAA?$AAV?$AA?3?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAQ?$AAU?$AAE?$AAR?$AAY?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAp?$AAo@| [ DATA ] ; `string'
	IMPORT	|SetLastError|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|
	IMPORT	|CeSafeCopyMemory|
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\audiomgr.h

  00000			 AREA	 |.pdata|, PDATA
|$T42008| DCD	|$LN45@process_Po|
	DCD	0x40009c02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DG@EDLBLBEC@?$AAW?$AAA?$AAV?$AAE?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAp?$AAa?$AAr?$AAa?$AAm?$AAe?$AAt?$AAe?$AAr?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| DCB "W"
	DCB	0x0, "A", 0x0, "V", 0x0, "E", 0x0, ":", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, ".", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@GDFMBKEH@?$AAW?$AAA?$AAV?$AA?3?$AA?$CB?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?9?$AA?5?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@| DCB "W"
	DCB	0x0, "A", 0x0, "V", 0x0, ":", 0x0, "!", 0x0, "E", 0x0, "R"
	DCB	0x0, "R", 0x0, "O", 0x0, "R", 0x0, " ", 0x0, "-", 0x0, " "
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "t", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "p", 0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, "(", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@GHKHKPDJ@?$AAW?$AAA?$AAV?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAp?$AAa?$AAr?$AAa?$AAm?$AAe?$AAt?$AAe?$AAr?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| DCB "W"
	DCB	0x0, "A", 0x0, "V", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n"
	DCB	0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, " "
	DCB	0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, ".", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@ECDDIICB@?$AAW?$AAA?$AAV?$AA?3?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAQ?$AAU?$AAE?$AAR?$AAY?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAp?$AAo@| DCB "W"
	DCB	0x0, "A", 0x0, "V", 0x0, ":", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "T", 0x0, "L", 0x0, "_", 0x0, "P", 0x0, "O", 0x0, "W"
	DCB	0x0, "E", 0x0, "R", 0x0, "_", 0x0, "Q", 0x0, "U", 0x0, "E"
	DCB	0x0, "R", 0x0, "Y", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "v"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "p"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "s"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, ".", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\audiomgr.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?process_PowerManagementMessage@CAudioManager@@UAAHKPAEK0KPAK@Z| PROC ; CAudioManager::process_PowerManagementMessage

; 261  : {

  00000		 |$LN45@process_Po|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd034	 sub         sp, sp, #0x34
  00008		 |$M42005|
  00008	e1a04000	 mov         r4, r0
  0000c	e3a03832	 mov         r3, #0x32, 16

; 262  :     UNREFERENCED_PARAMETER(dwLenIn);
; 263  :     UNREFERENCED_PARAMETER(pBufIn);
; 264  : 
; 265  :     DEBUGMSG(ZONE_FUNCTION,
; 266  :         (L"WAV:+process_PowerManagementMessage(dwCode=%d)\r\n", dwCode)
; 267  :         );
; 268  : 
; 269  :     BOOL bResult = FALSE;
; 270  :     POWER_CAPABILITIES powerCaps;
; 271  :     CEDEVICE_POWER_STATE dxState;
; 272  :     switch (dwCode)

  00010	e3833a01	 orr         r3, r3, #1, 20
  00014	e1510003	 cmp         r1, r3
  00018	e3a05000	 mov         r5, #0
  0001c	0a000068	 beq         |$LN23@process_Po|
  00020	e59f3244	 ldr         r3, [pc, #0x244]
  00024	e1510003	 cmp         r1, r3
  00028	0a00004b	 beq         |$LN4@process_Po|
  0002c	e59f3234	 ldr         r3, [pc, #0x234]
  00030	e1510003	 cmp         r1, r3
  00034	0a00001f	 beq         |$LN11@process_Po|
  00038	e59f3224	 ldr         r3, [pc, #0x224]
  0003c	e1510003	 cmp         r1, r3
  00040	1a00007e	 bne         |$LN28@process_Po|

; 309  : 
; 310  :         // Indicate if the device is ready to enter a new device power state.
; 311  :         case IOCTL_POWER_QUERY:
; 312  :             DEBUGMSG(ZONE_PM,
; 313  :                 (L"WAV:IOCTL_POWER_QUERY = %d\r\n", m_CurPowerState));
; 314  : 
; 315  :             // Check arguments.
; 316  :             //
; 317  :             if (pBufOut == NULL || dwLenOut < sizeof(CEDEVICE_POWER_STATE))

  00044	e59d0040	 ldr         r0, [sp, #0x40]
  00048	e3500000	 cmp         r0, #0
  0004c	0a000075	 beq         |$LN21@process_Po|
  00050	e59d3044	 ldr         r3, [sp, #0x44]
  00054	e3530004	 cmp         r3, #4
  00058	3a000072	 bcc         |$LN21@process_Po|

; 318  :                 {
; 319  :                 RETAILMSG(ZONE_WARN, (L"WAV: Invalid parameter.\r\n"));
; 320  :                 break;
; 321  :                 }
; 322  : 
; 323  :             if (CeSafeCopyMemory(pBufOut, &m_CurPowerState, sizeof(CEDEVICE_POWER_STATE)) == 0)

  0005c	e3a02004	 mov         r2, #4
  00060	e2841008	 add         r1, r4, #8
  00064	eb000000	 bl          CeSafeCopyMemory
  00068	e3500000	 cmp         r0, #0
  0006c	0a000073	 beq         |$LN28@process_Po|

; 324  :                 {
; 325  :                 break;
; 326  :                 }
; 327  : 
; 328  :             if (!VALID_DX(m_CurPowerState))

  00070	e5943008	 ldr         r3, [r4, #8]
  00074	e3730001	 cmn         r3, #1
  00078	da000008	 ble         |$LN13@process_Po|
  0007c	e3530005	 cmp         r3, #5
  00080	aa000006	 bge         |$LN13@process_Po|

; 333  :                 }
; 334  : 
; 335  :             if (pdwActualOut)

  00084	e59d3048	 ldr         r3, [sp, #0x48]
  00088	e3530000	 cmp         r3, #0
  0008c	0a000047	 beq         |$LN12@process_Po|

; 336  :                 {
; 337  :                 *pdwActualOut = sizeof(CEDEVICE_POWER_STATE);

  00090	e3a02004	 mov         r2, #4
  00094	e5832000	 str         r2, [r3]

; 402  :                 }
; 403  : 
; 404  :             DEBUGMSG(ZONE_PM,
; 405  :                 (L"WAV:IOCTL_POWER_GET=%d (%d).\r\n",
; 406  :                 dxState, m_CurPowerState));
; 407  : 
; 408  :             bResult = TRUE;

  00098	e3a05001	 mov         r5, #1
  0009c	ea000067	 b           |$LN28@process_Po|
  000a0		 |$LN13@process_Po|

; 329  :                 {
; 330  :                 RETAILMSG(ZONE_ERROR,
; 331  :                     (L"WAV:IOCTL_POWER_QUERY invalid power state.\r\n"));

  000a0	e59f31ac	 ldr         r3, [pc, #0x1AC]
  000a4	e5933440	 ldr         r3, [r3, #0x440]
  000a8	e3130902	 tst         r3, #2, 18
  000ac	0a000063	 beq         |$LN28@process_Po|
  000b0	e59f01a8	 ldr         r0, [pc, #0x1A8]

; 332  :                 break;

  000b4	ea000060	 b           |$LN42@process_Po|
  000b8		 |$LN11@process_Po|

; 338  :                 }
; 339  : 
; 340  :             bResult = TRUE;
; 341  :             break;
; 342  : 
; 343  :         // Request a change from one device power state to another.
; 344  :         //
; 345  :         case IOCTL_POWER_SET:
; 346  : 
; 347  :             DEBUGMSG(ZONE_PM, (L"WAV:IOCTL_POWER_QUERY\r\n"));
; 348  : 
; 349  :             // Check arguments.
; 350  :             if (pBufOut == NULL || dwLenOut < sizeof(CEDEVICE_POWER_STATE))

  000b8	e59d1040	 ldr         r1, [sp, #0x40]
  000bc	e3510000	 cmp         r1, #0
  000c0	0a00001f	 beq         |$LN9@process_Po|
  000c4	e59d3044	 ldr         r3, [sp, #0x44]
  000c8	e3530004	 cmp         r3, #4
  000cc	3a00001c	 bcc         |$LN9@process_Po|

; 354  :                 }
; 355  : 
; 356  :             if (CeSafeCopyMemory(&dxState, pBufOut, sizeof(dxState)) == 0)

  000d0	e3a02004	 mov         r2, #4
  000d4	e28d0000	 add         r0, sp, #0
  000d8	eb000000	 bl          CeSafeCopyMemory
  000dc	e3500000	 cmp         r0, #0
  000e0	0a000056	 beq         |$LN28@process_Po|

; 357  :                 {
; 358  :                 break;
; 359  :                 }
; 360  : 
; 361  :             DEBUGMSG(ZONE_PM, (L"WAV:IOCTL_POWER_SET = %d.\r\n", dxState));
; 362  :             RETAILMSG(!VALID_DX(dxState),
; 363  :                 (L"WAV:!ERROR - Setting to invalid power state(%d)", dxState)
; 364  :                 );

  000e4	e59d1000	 ldr         r1, [sp]
  000e8	e3710001	 cmn         r1, #1
  000ec	da000001	 ble         |$LN36@process_Po|
  000f0	e3510005	 cmp         r1, #5
  000f4	ba000002	 blt         |$LN37@process_Po|
  000f8		 |$LN36@process_Po|
  000f8	e59f015c	 ldr         r0, [pc, #0x15C]
  000fc	eb000000	 bl          NKDbgPrintfW
  00100	e59d1000	 ldr         r1, [sp]
  00104		 |$LN37@process_Po|

; 365  : 
; 366  :             if (dxState == D4)

  00104	e3510004	 cmp         r1, #4

; 367  :                 {
; 368  :                 m_bSuspend = TRUE;

  00108	03a03001	 moveq       r3, #1
  0010c	0584300c	 streq       r3, [r4, #0xC]

; 369  :                 }
; 370  : 
; 371  :             if (D0==dxState)

  00110	e3510000	 cmp         r1, #0

; 372  :                 {
; 373  :                 m_bSuspend = FALSE;

  00114	03a03000	 moveq       r3, #0
  00118	0584300c	 streq       r3, [r4, #0xC]

; 374  :                 }
; 375  : 
; 376  :             // Check for any valid power state.
; 377  :             if (VALID_DX(dxState))

  0011c	e3510004	 cmp         r1, #4
  00120	8a000046	 bhi         |$LN28@process_Po|

; 378  :                 {
; 379  :                 m_CurPowerState = dxState;
; 380  :                 get_HardwareAudioBridge()->request_PowerState(dxState);

  00124	e5940024	 ldr         r0, [r4, #0x24]
  00128	e5841008	 str         r1, [r4, #8]
  0012c	e5903000	 ldr         r3, [r0]
  00130	e593302c	 ldr         r3, [r3, #0x2C]
  00134	e1a0e00f	 mov         lr, pc
  00138	e12fff13	 bx          r3

; 402  :                 }
; 403  : 
; 404  :             DEBUGMSG(ZONE_PM,
; 405  :                 (L"WAV:IOCTL_POWER_GET=%d (%d).\r\n",
; 406  :                 dxState, m_CurPowerState));
; 407  : 
; 408  :             bResult = TRUE;

  0013c	e3a05001	 mov         r5, #1
  00140	ea00003e	 b           |$LN28@process_Po|
  00144		 |$LN9@process_Po|

; 351  :                 {
; 352  :                 RETAILMSG(ZONE_ERROR, (L"WAVE: Invalid parameter.\r\n"));

  00144	e59f3108	 ldr         r3, [pc, #0x108]
  00148	e5933440	 ldr         r3, [r3, #0x440]
  0014c	e3130902	 tst         r3, #2, 18
  00150	0a00003a	 beq         |$LN28@process_Po|
  00154	e59f00fc	 ldr         r0, [pc, #0xFC]

; 353  :                 break;

  00158	ea000037	 b           |$LN42@process_Po|
  0015c		 |$LN4@process_Po|

; 381  :                 bResult = TRUE;
; 382  :                 }
; 383  :             break;
; 384  : 
; 385  :         // Return the current device power state.
; 386  :         case IOCTL_POWER_GET:
; 387  :             DEBUGMSG(ZONE_PM, (L"WAV:IOCTL_POWER_GET\r\n"));
; 388  : 
; 389  :             dxState = get_HardwareAudioBridge()->get_CurrentPowerState();

  0015c	e5940024	 ldr         r0, [r4, #0x24]
  00160	e5903000	 ldr         r3, [r0]
  00164	e5933030	 ldr         r3, [r3, #0x30]
  00168	e1a0e00f	 mov         lr, pc
  0016c	e12fff13	 bx          r3

; 390  : 
; 391  :             // Check input parameters
; 392  :             if (pdwActualOut != NULL)

  00170	e59d3048	 ldr         r3, [sp, #0x48]
  00174	e58d0000	 str         r0, [sp]

; 393  :                 {
; 394  :                 *pdwActualOut = sizeof(CEDEVICE_POWER_STATE);
; 395  :                 }
; 396  : 
; 397  :             if (pBufOut == NULL || dwLenOut < sizeof(dxState) ||
; 398  :                 !CeSafeCopyMemory(pBufOut, &dxState, sizeof(dxState)))

  00178	e59d0040	 ldr         r0, [sp, #0x40]
  0017c	e3530000	 cmp         r3, #0
  00180	13a02004	 movne       r2, #4
  00184	15832000	 strne       r2, [r3]
  00188	e3500000	 cmp         r0, #0
  0018c	0a000009	 beq         |$LN1@process_Po|
  00190	e59d3044	 ldr         r3, [sp, #0x44]
  00194	e3530004	 cmp         r3, #4
  00198	3a000006	 bcc         |$LN1@process_Po|
  0019c	e3a02004	 mov         r2, #4
  001a0	e28d1000	 add         r1, sp, #0
  001a4	eb000000	 bl          CeSafeCopyMemory
  001a8	e3500000	 cmp         r0, #0
  001ac	0a000001	 beq         |$LN1@process_Po|

; 336  :                 {
; 337  :                 *pdwActualOut = sizeof(CEDEVICE_POWER_STATE);

  001b0		 |$LN12@process_Po|

; 402  :                 }
; 403  : 
; 404  :             DEBUGMSG(ZONE_PM,
; 405  :                 (L"WAV:IOCTL_POWER_GET=%d (%d).\r\n",
; 406  :                 dxState, m_CurPowerState));
; 407  : 
; 408  :             bResult = TRUE;

  001b0	e3a05001	 mov         r5, #1
  001b4	ea000021	 b           |$LN28@process_Po|
  001b8		 |$LN1@process_Po|

; 399  :                 {
; 400  :                     SetLastError(ERROR_INVALID_PARAMETER);

  001b8	e3a00057	 mov         r0, #0x57
  001bc	eb000000	 bl          SetLastError

; 401  :                     break;

  001c0	ea00001e	 b           |$LN28@process_Po|
  001c4		 |$LN23@process_Po|

; 273  :         {
; 274  :         // Return device specific power capabilities.
; 275  :         case IOCTL_POWER_CAPABILITIES:
; 276  :             DEBUGMSG(ZONE_PM, (L"WAV:IOCTL_POWER_CAPABILITIES\r\n"));
; 277  : 
; 278  :             // Check arguments.
; 279  :             //
; 280  :             if ( pBufOut == NULL || dwLenOut < sizeof(POWER_CAPABILITIES))

  001c4	e59d4040	 ldr         r4, [sp, #0x40]
  001c8	e3540000	 cmp         r4, #0
  001cc	0a000015	 beq         |$LN21@process_Po|
  001d0	e59d3044	 ldr         r3, [sp, #0x44]
  001d4	e3530030	 cmp         r3, #0x30
  001d8	3a000012	 bcc         |$LN21@process_Po|

; 283  :                 break;
; 284  :             }
; 285  : 
; 286  :             // Clear capabilities structure.
; 287  :             //
; 288  :             memset(&powerCaps, 0, sizeof(POWER_CAPABILITIES));

  001dc	e3a02030	 mov         r2, #0x30
  001e0	e3a01000	 mov         r1, #0
  001e4	e28d0004	 add         r0, sp, #4
  001e8	eb000000	 bl          memset

; 289  : 
; 290  :             // Set power capabilities. Supports D0 and D4.
; 291  :             //
; 292  :             powerCaps.DeviceDx = DX_MASK(D0)|DX_MASK(D4);

  001ec	e3a03011	 mov         r3, #0x11

; 293  : 
; 294  :             DEBUGMSG(ZONE_PM,
; 295  :                 (L"WAV:IOCTL_POWER_CAPABILITIES = 0x%x\r\n", powerCaps.DeviceDx)
; 296  :                 );
; 297  : 
; 298  :             if (CeSafeCopyMemory(pBufOut, &powerCaps,
; 299  :                 sizeof(POWER_CAPABILITIES))
; 300  :                 )

  001f0	e3a02030	 mov         r2, #0x30
  001f4	e28d1004	 add         r1, sp, #4
  001f8	e1a00004	 mov         r0, r4
  001fc	e5cd3004	 strb        r3, [sp, #4]
  00200	eb000000	 bl          CeSafeCopyMemory
  00204	e3500000	 cmp         r0, #0
  00208	0a00000c	 beq         |$LN28@process_Po|

; 301  :                 {
; 302  :                 bResult = TRUE;
; 303  :                 if (pdwActualOut)

  0020c	e59d3048	 ldr         r3, [sp, #0x48]
  00210	e3a05001	 mov         r5, #1
  00214	e3530000	 cmp         r3, #0
  00218	0a000008	 beq         |$LN28@process_Po|

; 304  :                     {
; 305  :                     *pdwActualOut = sizeof(POWER_CAPABILITIES);

  0021c	e3a02030	 mov         r2, #0x30
  00220	e5832000	 str         r2, [r3]

; 306  :                     }
; 307  :                 }
; 308  :             break;

  00224	ea000005	 b           |$LN28@process_Po|
  00228		 |$LN21@process_Po|

; 281  :             {
; 282  :                 RETAILMSG(ZONE_WARN, (L"WAV: Invalid parameter.\r\n"));

  00228	e59f3024	 ldr         r3, [pc, #0x24]
  0022c	e5933440	 ldr         r3, [r3, #0x440]
  00230	e3130901	 tst         r3, #1, 18
  00234	0a000001	 beq         |$LN28@process_Po|
  00238	e59f0010	 ldr         r0, [pc, #0x10]
  0023c		 |$LN42@process_Po|
  0023c	eb000000	 bl          NKDbgPrintfW
  00240		 |$LN28@process_Po|

; 409  :         }
; 410  : 
; 411  :     DEBUGMSG(ZONE_FUNCTION,
; 412  :         (L"WAV:-process_PowerManagementMessage(bResult=%d)\r\n", bResult)
; 413  :         );
; 414  :     return bResult;
; 415  : }

  00240	e1a00005	 mov         r0, r5
  00244	e28dd034	 add         sp, sp, #0x34
  00248	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0024c	e12fff1e	 bx          lr
  00250		 |$LN46@process_Po|
  00250		 |$LN47@process_Po|
  00250	00000000	 DCD         |??_C@_1DE@GHKHKPDJ@?$AAW?$AAA?$AAV?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAp?$AAa?$AAr?$AAa?$AAm?$AAe?$AAt?$AAe?$AAr?$AA?4?$AA?$AN?$AA?6?$AA?$AA@|
  00254		 |$LN48@process_Po|
  00254	00000000	 DCD         |dpCurSettings|
  00258		 |$LN49@process_Po|
  00258	00000000	 DCD         |??_C@_1DG@EDLBLBEC@?$AAW?$AAA?$AAV?$AAE?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAp?$AAa?$AAr?$AAa?$AAm?$AAe?$AAt?$AAe?$AAr?$AA?4?$AA?$AN?$AA?6?$AA?$AA@|
  0025c		 |$LN50@process_Po|
  0025c	00000000	 DCD         |??_C@_1GA@GDFMBKEH@?$AAW?$AAA?$AAV?$AA?3?$AA?$CB?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?5?$AA?9?$AA?5?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAt?$AAo?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5@|
  00260		 |$LN51@process_Po|
  00260	00000000	 DCD         |??_C@_1FK@ECDDIICB@?$AAW?$AAA?$AAV?$AA?3?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAQ?$AAU?$AAE?$AAR?$AAY?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAp?$AAo@|
  00264		 |$LN52@process_Po|
  00264	0032100c	 DCD         0x32100c
  00268		 |$LN53@process_Po|
  00268	00321008	 DCD         0x321008
  0026c		 |$LN54@process_Po|
  0026c	00321004	 DCD         0x321004
  00270		 |$M42006|

			 ENDP  ; |?process_PowerManagementMessage@CAudioManager@@UAAHKPAEK0KPAK@Z|, CAudioManager::process_PowerManagementMessage

	IMPORT	|?NotifyHeadsetAttached@CStreamManager@@QAAKH@Z| ; CStreamManager::NotifyHeadsetAttached
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\audiomgr.h

  00000			 AREA	 |.pdata|, PDATA
|$T42045| DCD	|$LN19@process_Mi|
	DCD	0x40002c01
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\audiomgr.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?process_MiscellaneousMessage@CAudioManager@@UAAHKPAEK0KPAK@Z| PROC ; CAudioManager::process_MiscellaneousMessage

; 430  : {

  00000		 |$LN19@process_Mi|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M42042|
  00004	e3a037da	 mov         r3, #0xDA, 14

; 431  : 
; 432  :     UNREFERENCED_PARAMETER(pdwActualOut);
; 433  :     UNREFERENCED_PARAMETER(dwLenIn);
; 434  :     UNREFERENCED_PARAMETER(dwLenOut);
; 435  :     UNREFERENCED_PARAMETER(pBufOut);
; 436  :     DEBUGMSG(ZONE_FUNCTION,
; 437  :         (L"WAV:+process_MiscellaneousMessage(dwCode=%d)\r\n", dwCode)
; 438  :         );
; 439  : 
; 440  :     switch (dwCode)

  00008	e3833028	 orr         r3, r3, #0x28
  0000c	e1510003	 cmp         r1, r3
  00010	0a000020	 beq         |$LN3@process_Mi|
  00014	e3a037da	 mov         r3, #0xDA, 14
  00018	e3833030	 orr         r3, r3, #0x30
  0001c	e1510003	 cmp         r1, r3
  00020	0a000015	 beq         |$LN4@process_Mi|
  00024	e3a037da	 mov         r3, #0xDA, 14
  00028	e383305c	 orr         r3, r3, #0x5C
  0002c	e1510003	 cmp         r1, r3
  00030	0a00000a	 beq         |$LN1@process_Mi|
  00034	e3a037da	 mov         r3, #0xDA, 14
  00038	e3833060	 orr         r3, r3, #0x60
  0003c	e1510003	 cmp         r1, r3
  00040	1a000017	 bne         |$LN5@process_Mi|

; 448  :             break;
; 449  : 
; 450  :         case IOCTL_NOTIFY_AUXHEADSET:
; 451  :             get_HardwareAudioBridge()->enable_AuxHeadset(*pBufIn);

  00044	e5900024	 ldr         r0, [r0, #0x24]
  00048	e5d21000	 ldrb        r1, [r2]
  0004c	e5903000	 ldr         r3, [r0]
  00050	e5933040	 ldr         r3, [r3, #0x40]
  00054	e1a0e00f	 mov         lr, pc
  00058	e12fff13	 bx          r3

; 452  :             break;

  0005c	ea000010	 b           |$LN5@process_Mi|
  00060		 |$LN1@process_Mi|

; 453  : 
; 454  :         case IOCTL_NOTIFY_HDMI:
; 455  :             get_HardwareAudioBridge()->notify_HdmiAudioAttached(*pBufIn);

  00060	e5900024	 ldr         r0, [r0, #0x24]
  00064	e5d21000	 ldrb        r1, [r2]
  00068	e5903000	 ldr         r3, [r0]
  0006c	e5933038	 ldr         r3, [r3, #0x38]
  00070	e1a0e00f	 mov         lr, pc
  00074	e12fff13	 bx          r3

; 456  :             break;

  00078	ea000009	 b           |$LN5@process_Mi|
  0007c		 |$LN4@process_Mi|

; 441  :         {
; 442  :         case IOCTL_NOTIFY_BT_HEADSET:
; 443  :             get_HardwareAudioBridge()->notify_BTHeadsetAttached(*(DWORD *)pBufIn);

  0007c	e5900024	 ldr         r0, [r0, #0x24]
  00080	e5921000	 ldr         r1, [r2]
  00084	e5903000	 ldr         r3, [r0]
  00088	e5933034	 ldr         r3, [r3, #0x34]
  0008c	e1a0e00f	 mov         lr, pc
  00090	e12fff13	 bx          r3

; 444  :             break;

  00094	ea000002	 b           |$LN5@process_Mi|
  00098		 |$LN3@process_Mi|

; 445  : 
; 446  :         case IOCTL_NOTIFY_HEADSET:
; 447  :             get_OutStreamManager()->NotifyHeadsetAttached(*pBufIn);

  00098	e5d21000	 ldrb        r1, [r2]
  0009c	e5900030	 ldr         r0, [r0, #0x30]
  000a0	eb000000	 bl          |?NotifyHeadsetAttached@CStreamManager@@QAAKH@Z|
  000a4		 |$LN5@process_Mi|

; 457  :         }
; 458  : 
; 459  :     DEBUGMSG(ZONE_FUNCTION,
; 460  :         (L"WAV:-process_MiscellaneousMessage(bResult=%d)\r\n", 0)
; 461  :         );
; 462  : 
; 463  :     return FALSE;

  000a4	e3a00000	 mov         r0, #0

; 464  : }

  000a8	e49de004	 ldr         lr, [sp], #4
  000ac	e12fff1e	 bx          lr
  000b0		 |$M42043|

			 ENDP  ; |?process_MiscellaneousMessage@CAudioManager@@UAAHKPAEK0KPAK@Z|, CAudioManager::process_MiscellaneousMessage

	IMPORT	|?ForceQuality@StreamContext@@QAAKH@Z|	; StreamContext::ForceQuality
	IMPORT	|?SetProperty@StreamContext@@QAAKPAUtag_WAVEPROPINFO@@@Z| ; StreamContext::SetProperty
	IMPORT	|?GetProperty@StreamContext@@QAAKPAUtag_WAVEPROPINFO@@@Z| ; StreamContext::GetProperty
	IMPORT	|?open_Stream@CStreamManager@@QAAKPAUwaveopendesc_tag@@KPAPAVStreamContext@@@Z| ; CStreamManager::open_Stream
	IMPORT	|?Release@StreamContext@@QAAJXZ|	; StreamContext::Release
	IMPORT	|?BreakLoop@StreamContext@@QAAKXZ|	; StreamContext::BreakLoop
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\audiomgr.h

  00000			 AREA	 |.pdata|, PDATA
|$T42211| DCD	|$LN156@process_Au|
	DCD	0x40010201
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\audiomgr.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?process_AudioStreamMessage@CAudioManager@@UAAHPAUMMDRV_MESSAGE_PARAMS@@PAK@Z| PROC ; CAudioManager::process_AudioStreamMessage

; 476  : {

  00000		 |$LN156@process_Au|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M42208|
  00004	e1a07002	 mov         r7, r2
  00008	e1a04001	 mov         r4, r1
  0000c	e1a05000	 mov         r5, r0

; 477  :     DEBUGMSG(ZONE_FUNCTION,
; 478  :         (L"WAV:+process_AudioStreamMessage(uMsg=%d)\r\n", pParams->uMsg)
; 479  :         );
; 480  : 
; 481  :     //  set the error code to be no error first
; 482  :     SetLastError(MMSYSERR_NOERROR);

  00010	e3a00000	 mov         r0, #0
  00014	eb000000	 bl          SetLastError

; 483  : 
; 484  :     CStreamManager *pStreamManager;
; 485  :     WaveStreamContext *pWaveStream;
; 486  : 
; 487  : 
; 488  :     PDWORD pdwGain;
; 489  :     UINT uMsg = pParams->uMsg;
; 490  :     UINT uDeviceId = pParams->uDeviceId;
; 491  :     DWORD dwParam1 = pParams->dwParam1;
; 492  :     DWORD dwParam2 = pParams->dwParam2;
; 493  :     DWORD dwUser   = pParams->dwUser;
; 494  :     StreamContext *pStreamContext = (StreamContext *)dwUser;
; 495  :     DWORD dwRet=MMSYSERR_NOTSUPPORTED;
; 496  : 
; 497  :     switch (uMsg)

  00018	e5941004	 ldr         r1, [r4, #4]
  0001c	e594600c	 ldr         r6, [r4, #0xC]
  00020	e5942010	 ldr         r2, [r4, #0x10]
  00024	e5944008	 ldr         r4, [r4, #8]
  00028	e3510f7d	 cmp         r1, #0x7D, 30
  0002c	8a0000de	 bhi         |$LN54@process_Au|
  00030	0a0000d5	 beq         |$LN24@process_Au|
  00034	e2411003	 sub         r1, r1, #3
  00038	e351003b	 cmp         r1, #0x3B
  0003c	8a0000de	 bhi         |$LN2@process_Au|
  00040	e1a03081	 mov         r3, r1, lsl #1
  00044	e083300f	 add         r3, r3, pc
  00048	e1d330b4	 ldrh        r3, [r3, #4]
  0004c	e08ff003	 add         pc, pc, r3
  00050		 |$LN93@process_Au|
  00050		 |$LN92@process_Au|
  00050		 |$LN94@process_Au|
  00050	0278		 DCW         0x278
  00052		 |$LN95@process_Au|
  00052	01f4		 DCW         0x1f4
  00054		 |$LN96@process_Au|
  00054	01d8		 DCW         0x1d8
  00056		 |$LN97@process_Au|
  00056	01b0		 DCW         0x1b0
  00058		 |$LN98@process_Au|
  00058	0368		 DCW         0x368
  0005a		 |$LN99@process_Au|
  0005a	0368		 DCW         0x368
  0005c		 |$LN100@process_Au|
  0005c	011c		 DCW         0x11c
  0005e		 |$LN101@process_Au|
  0005e	00d0		 DCW         0xd0
  00060		 |$LN102@process_Au|
  00060	00b8		 DCW         0xb8
  00062		 |$LN103@process_Au|
  00062	0104		 DCW         0x104
  00064		 |$LN104@process_Au|
  00064	00e8		 DCW         0xe8
  00066		 |$LN105@process_Au|
  00066	0368		 DCW         0x368
  00068		 |$LN106@process_Au|
  00068	0368		 DCW         0x368
  0006a		 |$LN107@process_Au|
  0006a	0144		 DCW         0x144
  0006c		 |$LN108@process_Au|
  0006c	0074		 DCW         0x74
  0006e		 |$LN109@process_Au|
  0006e	0194		 DCW         0x194
  00070		 |$LN110@process_Au|
  00070	0178		 DCW         0x178
  00072		 |$LN111@process_Au|
  00072	016c		 DCW         0x16c
  00074		 |$LN112@process_Au|
  00074	0368		 DCW         0x368
  00076		 |$LN113@process_Au|
  00076	023c		 DCW         0x23c
  00078		 |$LN114@process_Au|
  00078	0290		 DCW         0x290
  0007a		 |$LN115@process_Au|
  0007a	02e4		 DCW         0x2e4
  0007c		 |$LN116@process_Au|
  0007c	0368		 DCW         0x368
  0007e		 |$LN117@process_Au|
  0007e	0368		 DCW         0x368
  00080		 |$LN118@process_Au|
  00080	0368		 DCW         0x368
  00082		 |$LN119@process_Au|
  00082	0368		 DCW         0x368
  00084		 |$LN120@process_Au|
  00084	0368		 DCW         0x368
  00086		 |$LN121@process_Au|
  00086	0368		 DCW         0x368
  00088		 |$LN122@process_Au|
  00088	0368		 DCW         0x368
  0008a		 |$LN123@process_Au|
  0008a	0368		 DCW         0x368
  0008c		 |$LN124@process_Au|
  0008c	0368		 DCW         0x368
  0008e		 |$LN125@process_Au|
  0008e	0368		 DCW         0x368
  00090		 |$LN126@process_Au|
  00090	0368		 DCW         0x368
  00092		 |$LN127@process_Au|
  00092	0368		 DCW         0x368
  00094		 |$LN128@process_Au|
  00094	0368		 DCW         0x368
  00096		 |$LN129@process_Au|
  00096	0368		 DCW         0x368
  00098		 |$LN130@process_Au|
  00098	0368		 DCW         0x368
  0009a		 |$LN131@process_Au|
  0009a	0368		 DCW         0x368
  0009c		 |$LN132@process_Au|
  0009c	0368		 DCW         0x368
  0009e		 |$LN133@process_Au|
  0009e	0368		 DCW         0x368
  000a0		 |$LN134@process_Au|
  000a0	0368		 DCW         0x368
  000a2		 |$LN135@process_Au|
  000a2	0368		 DCW         0x368
  000a4		 |$LN136@process_Au|
  000a4	0368		 DCW         0x368
  000a6		 |$LN137@process_Au|
  000a6	0368		 DCW         0x368
  000a8		 |$LN138@process_Au|
  000a8	0368		 DCW         0x368
  000aa		 |$LN139@process_Au|
  000aa	0368		 DCW         0x368
  000ac		 |$LN140@process_Au|
  000ac	0368		 DCW         0x368
  000ae		 |$LN141@process_Au|
  000ae	0260		 DCW         0x260
  000b0		 |$LN142@process_Au|
  000b0	0218		 DCW         0x218
  000b2		 |$LN143@process_Au|
  000b2	01ec		 DCW         0x1ec
  000b4		 |$LN144@process_Au|
  000b4	01b0		 DCW         0x1b0
  000b6		 |$LN145@process_Au|
  000b6	0368		 DCW         0x368
  000b8		 |$LN146@process_Au|
  000b8	0368		 DCW         0x368
  000ba		 |$LN147@process_Au|
  000ba	011c		 DCW         0x11c
  000bc		 |$LN148@process_Au|
  000bc	00b8		 DCW         0xb8
  000be		 |$LN149@process_Au|
  000be	00d0		 DCW         0xd0
  000c0		 |$LN150@process_Au|
  000c0	0104		 DCW         0x104
  000c2		 |$LN151@process_Au|
  000c2	00e8		 DCW         0xe8
  000c4		 |$LN152@process_Au|
  000c4	02c0		 DCW         0x2c0
  000c6		 |$LN153@process_Au|
  000c6	0314		 DCW         0x314
  000c8		 |$LN39@process_Au|

; 498  :         {
; 499  :         case WODM_SETVOLUME:
; 500  :             DEBUGMSG(ZONE_WODM, (L"WAV:WODM_SETVOLUME\r\n"));
; 501  :             dwRet = (pStreamContext) ? pStreamContext->SetGain(dwParam1) :
; 502  :                             put_OutputGain(dwParam1);

  000c8	e3540000	 cmp         r4, #0
  000cc	0a000007	 beq         |$LN44@process_Au|
  000d0	e5943000	 ldr         r3, [r4]
  000d4	e1a00004	 mov         r0, r4
  000d8	e5846058	 str         r6, [r4, #0x58]
  000dc	e5933040	 ldr         r3, [r3, #0x40]
  000e0	e1a0e00f	 mov         lr, pc
  000e4	e12fff13	 bx          r3

; 547  : 
; 548  :             dwRet = MMSYSERR_NOERROR;

  000e8	e3a05000	 mov         r5, #0

; 549  :             break;

  000ec	ea0000c0	 b           |$LN25@process_Au|
  000f0		 |$LN44@process_Au|

; 498  :         {
; 499  :         case WODM_SETVOLUME:
; 500  :             DEBUGMSG(ZONE_WODM, (L"WAV:WODM_SETVOLUME\r\n"));
; 501  :             dwRet = (pStreamContext) ? pStreamContext->SetGain(dwParam1) :
; 502  :                             put_OutputGain(dwParam1);

  000f0	e5953000	 ldr         r3, [r5]
  000f4	e1a01006	 mov         r1, r6
  000f8	e1a00005	 mov         r0, r5
  000fc	e593301c	 ldr         r3, [r3, #0x1C]
  00100	e1a0e00f	 mov         lr, pc
  00104	e12fff13	 bx          r3

; 503  :             break;

  00108	ea0000b8	 b           |$LN87@process_Au|
  0010c		 |$LN38@process_Au|

; 504  : 
; 505  :         case WODM_RESTART:
; 506  :         case WIDM_START:
; 507  :             DEBUGMSG(ZONE_WODM|ZONE_WIDM, (L"WAV:WODM_RESTART/WIDM_START\r\n"));
; 508  :             dwRet = pStreamContext->Run();

  0010c	e5943000	 ldr         r3, [r4]
  00110	e1a00004	 mov         r0, r4
  00114	e5933014	 ldr         r3, [r3, #0x14]
  00118	e1a0e00f	 mov         lr, pc
  0011c	e12fff13	 bx          r3

; 509  :             break;

  00120	ea0000b2	 b           |$LN87@process_Au|
  00124		 |$LN37@process_Au|

; 510  : 
; 511  :         case WODM_PAUSE:
; 512  :         case WIDM_STOP:
; 513  :             DEBUGMSG(ZONE_WODM|ZONE_WIDM, (L"WAV:WODM_PAUSE/WIDM_STOP\r\n"));
; 514  :             dwRet = pStreamContext->Stop();

  00124	e5943000	 ldr         r3, [r4]
  00128	e1a00004	 mov         r0, r4
  0012c	e5933018	 ldr         r3, [r3, #0x18]
  00130	e1a0e00f	 mov         lr, pc
  00134	e12fff13	 bx          r3

; 515  :             break;

  00138	ea0000ac	 b           |$LN87@process_Au|
  0013c		 |$LN36@process_Au|

; 516  : 
; 517  :         case WODM_GETPOS:
; 518  :         case WIDM_GETPOS:
; 519  :             DEBUGMSG(ZONE_WODM|ZONE_WIDM, (L"WAV:WODM_GETPOS/WIDM_GETPOS\r\n"));
; 520  :             dwRet = pStreamContext->GetPos((PMMTIME)dwParam1);

  0013c	e5943000	 ldr         r3, [r4]
  00140	e1a01006	 mov         r1, r6
  00144	e1a00004	 mov         r0, r4
  00148	e5933010	 ldr         r3, [r3, #0x10]
  0014c	e1a0e00f	 mov         lr, pc
  00150	e12fff13	 bx          r3

; 521  :             break;

  00154	ea0000a5	 b           |$LN87@process_Au|
  00158		 |$LN35@process_Au|

; 522  : 
; 523  :         case WODM_RESET:
; 524  :         case WIDM_RESET:
; 525  :             DEBUGMSG(ZONE_WODM|ZONE_WIDM, (L"WAV:WODM_RESET/WIDM_RESET\r\n"));
; 526  :             dwRet = pStreamContext->Reset();

  00158	e5943000	 ldr         r3, [r4]
  0015c	e1a00004	 mov         r0, r4
  00160	e593301c	 ldr         r3, [r3, #0x1C]
  00164	e1a0e00f	 mov         lr, pc
  00168	e12fff13	 bx          r3

; 527  :             break;

  0016c	ea00009f	 b           |$LN87@process_Au|
  00170		 |$LN34@process_Au|

; 528  : 
; 529  :         case WODM_WRITE:
; 530  :         case WIDM_ADDBUFFER:
; 531  :             DEBUGMSG(ZONE_WODM|ZONE_WIDM,
; 532  :                 (L"WAV:WODM_WRITE/WIDM_ADDBUFFER\r\n")
; 533  :                 );
; 534  : 
; 535  :             if(m_bSuspend==TRUE)

  00170	e595300c	 ldr         r3, [r5, #0xC]
  00174	e3530001	 cmp         r3, #1

; 536  :                 dwRet=MMSYSERR_NOERROR;
; 537  :             else

  00178	0a00000e	 beq         |$LN91@process_Au|

; 538  :                 dwRet = pStreamContext->QueueBuffer((LPWAVEHDR)dwParam1);

  0017c	e5943000	 ldr         r3, [r4]
  00180	e1a01006	 mov         r1, r6
  00184	e1a00004	 mov         r0, r4
  00188	e5933030	 ldr         r3, [r3, #0x30]
  0018c	e1a0e00f	 mov         lr, pc
  00190	e12fff13	 bx          r3

; 539  : 
; 540  :             break;

  00194	ea000095	 b           |$LN87@process_Au|
  00198		 |$LN31@process_Au|

; 541  : 
; 542  :         case WODM_GETVOLUME:
; 543  :             DEBUGMSG(ZONE_WODM, (L"WAV:WODM_GETVOLUME\r\n"));
; 544  :             pdwGain = (PDWORD)dwParam1;
; 545  :             *pdwGain = (pStreamContext) ? pStreamContext->GetGain() :
; 546  :                             get_OutputGain();

  00198	e3540000	 cmp         r4, #0
  0019c	05953000	 ldreq       r3, [r5]
  001a0	15940058	 ldrne       r0, [r4, #0x58]
  001a4	01a00005	 moveq       r0, r5
  001a8	05933020	 ldreq       r3, [r3, #0x20]
  001ac	01a0e00f	 moveq       lr, pc
  001b0	012fff13	 bxeq        r3
  001b4	e5860000	 str         r0, [r6]
  001b8		 |$LN91@process_Au|

; 547  : 
; 548  :             dwRet = MMSYSERR_NOERROR;

  001b8	e3a05000	 mov         r5, #0

; 549  :             break;

  001bc	ea00008c	 b           |$LN25@process_Au|
  001c0		 |$LN30@process_Au|

; 550  : 
; 551  :         case WODM_BREAKLOOP:
; 552  :             DEBUGMSG(ZONE_WODM, (L"WAV:WODM_BREAKLOOP\r\n"));
; 553  :             dwRet = pStreamContext->BreakLoop();

  001c0	e1a00004	 mov         r0, r4
  001c4	eb000000	 bl          |?BreakLoop@StreamContext@@QAAKXZ|

; 554  :             break;

  001c8	ea000088	 b           |$LN87@process_Au|
  001cc		 |$LN29@process_Au|

; 555  : 
; 556  :         case WODM_SETPLAYBACKRATE:
; 557  :             DEBUGMSG(ZONE_WODM, (L"WAV:WODM_SETPLAYBACKRATE\r\n"));
; 558  :             pWaveStream = (WaveStreamContext *)dwUser;
; 559  :             dwRet = pWaveStream->SetRate(dwParam1);

  001cc	e5943000	 ldr         r3, [r4]
  001d0	e1a01006	 mov         r1, r6
  001d4	e1a00004	 mov         r0, r4
  001d8	e5933038	 ldr         r3, [r3, #0x38]
  001dc	e1a0e00f	 mov         lr, pc
  001e0	e12fff13	 bx          r3

; 560  :             break;

  001e4	ea000081	 b           |$LN87@process_Au|
  001e8		 |$LN28@process_Au|

; 561  : 
; 562  :         case WODM_GETPLAYBACKRATE:
; 563  :             DEBUGMSG(ZONE_WODM, (L"WAV:WODM_GETPLAYBACKRATE\r\n"));
; 564  :             pWaveStream = (WaveStreamContext *)dwUser;
; 565  :             dwRet = pWaveStream->GetRate((DWORD *)dwParam1);

  001e8	e5943000	 ldr         r3, [r4]
  001ec	e1a01006	 mov         r1, r6
  001f0	e1a00004	 mov         r0, r4
  001f4	e5933034	 ldr         r3, [r3, #0x34]
  001f8	e1a0e00f	 mov         lr, pc
  001fc	e12fff13	 bx          r3

; 566  :             break;

  00200	ea00007a	 b           |$LN87@process_Au|
  00204		 |$LN23@process_Au|

; 589  : 
; 590  :         case WODM_CLOSE:
; 591  :         case WIDM_CLOSE:
; 592  :             DEBUGMSG(ZONE_WODM|ZONE_WIDM, (L"WAV:WIDM_CLOSE/WODM_CLOSE\r\n"));
; 593  : 
; 594  :             // Release stream context here, rather than inside
; 595  :             // StreamContext::Close, so that if someone
; 596  :             // has subclassed Close there's no chance that the object
; 597  :             // will get released out from under them.
; 598  :             //
; 599  :             dwRet = pStreamContext->Close();

  00204	e5943000	 ldr         r3, [r4]
  00208	e1a00004	 mov         r0, r4
  0020c	e593300c	 ldr         r3, [r3, #0xC]
  00210	e1a0e00f	 mov         lr, pc
  00214	e12fff13	 bx          r3
  00218	e1b05000	 movs        r5, r0

; 600  :             if (dwRet == MMSYSERR_NOERROR)

  0021c	1a000074	 bne         |$LN25@process_Au|

; 601  :                 {
; 602  :                 pStreamContext->Release();

  00220	e1a00004	 mov         r0, r4
  00224	eb000000	 bl          |?Release@StreamContext@@QAAJXZ|

; 603  :                 }
; 604  :             break;

  00228	ea000071	 b           |$LN25@process_Au|
  0022c		 |$LN21@process_Au|

; 605  : 
; 606  :         case WODM_OPEN:
; 607  :             DEBUGMSG(ZONE_WODM, (L"WAV:WODM_OPEN\r\n"));
; 608  :             pStreamManager = get_OutputStreamManager(uDeviceId);

  0022c	e5950030	 ldr         r0, [r5, #0x30]
  00230		 |$LN88@process_Au|

; 609  :             dwRet = pStreamManager->open_Stream((LPWAVEOPENDESC)dwParam1,
; 610  :                         dwParam2, (StreamContext **)dwUser
; 611  :                         );

  00230	e1a03004	 mov         r3, r4
  00234	e1a01006	 mov         r1, r6
  00238	eb000000	 bl          |?open_Stream@CStreamManager@@QAAKPAUwaveopendesc_tag@@KPAPAVStreamContext@@@Z|

; 612  :             break;

  0023c	ea00006b	 b           |$LN87@process_Au|
  00240		 |$LN20@process_Au|

; 613  : 
; 614  :         case WIDM_OPEN:
; 615  :             DEBUGMSG(ZONE_WODM, (L"WAV:WIDM_OPEN\r\n"));
; 616  :             pStreamManager = get_InputStreamManager(uDeviceId);

  00240	e595002c	 ldr         r0, [r5, #0x2C]

; 617  :             dwRet = pStreamManager->open_Stream((LPWAVEOPENDESC)dwParam1,
; 618  :                         dwParam2, (StreamContext **)dwUser
; 619  :                         );
; 620  :             break;

  00244	eafffff9	 b           |$LN88@process_Au|
  00248		 |$LN19@process_Au|

; 621  : 
; 622  :         case WODM_GETDEVCAPS:
; 623  :             DEBUGMSG(ZONE_WODM, (L"WAV:WODM_GETDEVCAPS\r\n"));
; 624  :             pStreamManager = (pStreamContext) ?
; 625  :                                 pStreamContext->GetStreamManager() :
; 626  :                                 get_OutputStreamManager(uDeviceId);

  00248	e3540000	 cmp         r4, #0
  0024c	15940050	 ldrne       r0, [r4, #0x50]
  00250	05950030	 ldreq       r0, [r5, #0x30]

; 627  : 
; 628  :             dwRet = pStreamManager->get_DevCaps((PVOID)dwParam1, dwParam2);

  00254	e1a01006	 mov         r1, r6
  00258	e5903000	 ldr         r3, [r0]
  0025c	e593301c	 ldr         r3, [r3, #0x1C]
  00260	e1a0e00f	 mov         lr, pc
  00264	e12fff13	 bx          r3

; 629  :             break;

  00268	ea000060	 b           |$LN87@process_Au|
  0026c		 |$LN18@process_Au|

; 630  : 
; 631  :         case WIDM_GETDEVCAPS:
; 632  :             DEBUGMSG(ZONE_WIDM, (L"WAV:WIDM_GETDEVCAPS\r\n"));
; 633  :             pStreamManager = (pStreamContext) ?
; 634  :                                 pStreamContext->GetStreamManager() :
; 635  :                                 get_InputStreamManager(uDeviceId);

  0026c	e3540000	 cmp         r4, #0
  00270	15940050	 ldrne       r0, [r4, #0x50]
  00274	0595002c	 ldreq       r0, [r5, #0x2C]

; 636  : 
; 637  :             dwRet = pStreamManager->get_DevCaps((PVOID)dwParam1, dwParam2);

  00278	e1a01006	 mov         r1, r6
  0027c	e5903000	 ldr         r3, [r0]
  00280	e593301c	 ldr         r3, [r3, #0x1C]
  00284	e1a0e00f	 mov         lr, pc
  00288	e12fff13	 bx          r3

; 638  :             break;

  0028c	ea000057	 b           |$LN87@process_Au|
  00290		 |$LN17@process_Au|

; 639  : 
; 640  :         case WODM_GETEXTDEVCAPS:
; 641  :             DEBUGMSG(ZONE_WODM, (L"WAV:WODM_GETEXTDEVCAPS\r\n"));
; 642  : 
; 643  :             pStreamManager = (pStreamContext) ?
; 644  :                                 pStreamContext->GetStreamManager() :
; 645  :                                 get_OutputStreamManager(uDeviceId);

  00290	e3540000	 cmp         r4, #0
  00294	15940050	 ldrne       r0, [r4, #0x50]
  00298	05950030	 ldreq       r0, [r5, #0x30]

; 646  : 
; 647  :             dwRet = pStreamManager->get_ExtDevCaps((PVOID)dwParam1, dwParam2);

  0029c	e1a01006	 mov         r1, r6
  002a0	e5903000	 ldr         r3, [r0]
  002a4	e5933018	 ldr         r3, [r3, #0x18]
  002a8	e1a0e00f	 mov         lr, pc
  002ac	e12fff13	 bx          r3

; 648  :             break;

  002b0	ea00004e	 b           |$LN87@process_Au|
  002b4		 |$LN16@process_Au|

; 649  : 
; 650  :         case WIDM_GETNUMDEVS:
; 651  :             DEBUGMSG(ZONE_WODM, (L"WAV:WIDM_GETNUMDEVS\r\n"));
; 652  :             dwRet = get_InputDeviceCount();

  002b4	e5953000	 ldr         r3, [r5]
  002b8	e1a00005	 mov         r0, r5
  002bc	e5933004	 ldr         r3, [r3, #4]
  002c0	e1a0e00f	 mov         lr, pc
  002c4	e12fff13	 bx          r3

; 653  :             break;

  002c8	ea000048	 b           |$LN87@process_Au|
  002cc		 |$LN15@process_Au|

; 654  : 
; 655  :         case WODM_GETNUMDEVS:
; 656  :             DEBUGMSG(ZONE_WIDM, (L"WAV:WODM_GETNUMDEVS\r\n"));
; 657  :             dwRet = get_OutputDeviceCount();

  002cc	e5953000	 ldr         r3, [r5]
  002d0	e1a00005	 mov         r0, r5
  002d4	e5933008	 ldr         r3, [r3, #8]
  002d8	e1a0e00f	 mov         lr, pc
  002dc	e12fff13	 bx          r3

; 658  :             break;

  002e0	ea000042	 b           |$LN87@process_Au|
  002e4		 |$LN14@process_Au|

; 659  : 
; 660  :         case WODM_GETPROP:
; 661  :             {
; 662  :                 // DEBUGMSG(ZONE_WODM, (TEXT("WODM_GETPROP\r\n")));
; 663  : 
; 664  :                 PWAVEPROPINFO pPropInfo = (PWAVEPROPINFO) dwParam1;
; 665  :                 if (pStreamContext)

  002e4	e3540000	 cmp         r4, #0

; 666  :                 {
; 667  :                     dwRet = pStreamContext->GetProperty(pPropInfo);

  002e8	e1a01006	 mov         r1, r6
  002ec	0a000002	 beq         |$LN13@process_Au|
  002f0		 |$LN89@process_Au|
  002f0	e1a00004	 mov         r0, r4
  002f4	eb000000	 bl          |?GetProperty@StreamContext@@QAAKPAUtag_WAVEPROPINFO@@@Z|

; 668  :                 }
; 669  :                 else

  002f8	ea00003c	 b           |$LN87@process_Au|
  002fc		 |$LN13@process_Au|

; 670  :                 {
; 671  :                     pStreamManager = get_OutputStreamManager(uDeviceId);

  002fc	e5950030	 ldr         r0, [r5, #0x30]

; 672  :                     dwRet = pStreamManager->GetProperty(pPropInfo);

  00300	e5903000	 ldr         r3, [r0]
  00304	e5933028	 ldr         r3, [r3, #0x28]
  00308	e1a0e00f	 mov         lr, pc
  0030c	e12fff13	 bx          r3

; 673  :                 }
; 674  :                 break;

  00310	ea000036	 b           |$LN87@process_Au|
  00314		 |$LN11@process_Au|

; 675  :             }
; 676  : 
; 677  :         case WIDM_GETPROP:
; 678  :             {
; 679  :                 // DEBUGMSG(ZONE_WODM, (TEXT("WIDM_GETPROP\r\n")));
; 680  : 
; 681  :                 PWAVEPROPINFO pPropInfo = (PWAVEPROPINFO) dwParam1;
; 682  :                 if (pStreamContext)

  00314	e3540000	 cmp         r4, #0

; 683  :                 {
; 684  :                     dwRet = pStreamContext->GetProperty(pPropInfo);

  00318	e1a01006	 mov         r1, r6

; 685  :                 }
; 686  :                 else

  0031c	1afffff3	 bne         |$LN89@process_Au|

; 687  :                 {
; 688  :                     pStreamManager = get_InputStreamManager(uDeviceId);

  00320	e595002c	 ldr         r0, [r5, #0x2C]

; 689  :                     dwRet = pStreamManager->GetProperty(pPropInfo);

  00324	e5903000	 ldr         r3, [r0]
  00328	e5933028	 ldr         r3, [r3, #0x28]
  0032c	e1a0e00f	 mov         lr, pc
  00330	e12fff13	 bx          r3

; 690  :                 }
; 691  :                 break;

  00334	ea00002d	 b           |$LN87@process_Au|
  00338		 |$LN8@process_Au|

; 692  :             }
; 693  : 
; 694  :         case WODM_SETPROP:
; 695  :             {
; 696  :                 // DEBUGMSG(ZONE_WODM, (TEXT("WODM_SETPROP\r\n")));
; 697  : 
; 698  :                 PWAVEPROPINFO pPropInfo = (PWAVEPROPINFO) dwParam1;
; 699  :                 if (pStreamContext)

  00338	e3540000	 cmp         r4, #0

; 700  :                 {
; 701  :                     dwRet = pStreamContext->SetProperty(pPropInfo);

  0033c	e1a01006	 mov         r1, r6
  00340	0a000002	 beq         |$LN7@process_Au|
  00344		 |$LN90@process_Au|
  00344	e1a00004	 mov         r0, r4
  00348	eb000000	 bl          |?SetProperty@StreamContext@@QAAKPAUtag_WAVEPROPINFO@@@Z|

; 702  :                 }
; 703  :                 else

  0034c	ea000027	 b           |$LN87@process_Au|
  00350		 |$LN7@process_Au|

; 704  :                 {
; 705  :                     pStreamManager = get_OutputStreamManager(uDeviceId);

  00350	e5950030	 ldr         r0, [r5, #0x30]

; 706  :                     dwRet = pStreamManager->SetProperty(pPropInfo);

  00354	e5903000	 ldr         r3, [r0]
  00358	e593302c	 ldr         r3, [r3, #0x2C]
  0035c	e1a0e00f	 mov         lr, pc
  00360	e12fff13	 bx          r3

; 707  :                 }
; 708  :                 break;

  00364	ea000021	 b           |$LN87@process_Au|
  00368		 |$LN5@process_Au|

; 709  :             }
; 710  : 
; 711  :         case WIDM_SETPROP:
; 712  :             {
; 713  :                 // DEBUGMSG(ZONE_WODM, (TEXT("WIDM_SETPROP\r\n")));
; 714  : 
; 715  :                 PWAVEPROPINFO pPropInfo = (PWAVEPROPINFO) dwParam1;
; 716  :                 if (pStreamContext)

  00368	e3540000	 cmp         r4, #0

; 717  :                 {
; 718  :                     dwRet = pStreamContext->SetProperty(pPropInfo);

  0036c	e1a01006	 mov         r1, r6

; 719  :                 }
; 720  :                 else

  00370	1afffff3	 bne         |$LN90@process_Au|

; 721  :                 {
; 722  :                     pStreamManager = get_InputStreamManager(uDeviceId);

  00374	e595002c	 ldr         r0, [r5, #0x2C]

; 723  :                     dwRet = pStreamManager->SetProperty(pPropInfo);

  00378	e5903000	 ldr         r3, [r0]
  0037c	e593302c	 ldr         r3, [r3, #0x2C]
  00380	e1a0e00f	 mov         lr, pc
  00384	e12fff13	 bx          r3

; 724  :                 }
; 725  :                 break;

  00388	ea000018	 b           |$LN87@process_Au|
  0038c		 |$LN24@process_Au|

; 579  :             }
; 580  :             break;
; 581  : 
; 582  :         case WODM_BT_SCO_AUDIO_CONTROL:
; 583  :             DEBUGMSG(ZONE_WODM, (L"WAV:WODM_BT_SCO_AUDIO_CONTROL\r\n"));
; 584  :             get_HardwareAudioBridge()->notify_BTHeadsetAttached(
; 585  :                 pParams->dwParam2
; 586  :                 );

  0038c	e5950024	 ldr         r0, [r5, #0x24]
  00390	e1a01002	 mov         r1, r2
  00394	e5903000	 ldr         r3, [r0]
  00398	e5933034	 ldr         r3, [r3, #0x34]
  0039c	e1a0e00f	 mov         lr, pc
  003a0	e12fff13	 bx          r3
  003a4	e3a05000	 mov         r5, #0
  003a8	ea000011	 b           |$LN25@process_Au|
  003ac		 |$LN54@process_Au|

; 587  :             dwRet = MMSYSERR_NOERROR;
; 588  :             break;

  003ac	e3a03b01	 mov         r3, #1, 22
  003b0	e3833003	 orr         r3, r3, #3
  003b4	e1510003	 cmp         r1, r3
  003b8	0a000001	 beq         |$LN27@process_Au|
  003bc		 |$LN2@process_Au|

; 726  :             }
; 727  : 
; 728  :         case WODM_GETPITCH:
; 729  :         case WODM_SETPITCH:
; 730  :         case WODM_PREPARE:
; 731  :         case WODM_UNPREPARE:
; 732  :         case WIDM_PREPARE:
; 733  :         case WIDM_UNPREPARE:
; 734  :         default:
; 735  :             dwRet  = MMSYSERR_NOTSUPPORTED;

  003bc	e3a05008	 mov         r5, #8
  003c0	ea00000b	 b           |$LN25@process_Au|
  003c4		 |$LN27@process_Au|

; 567  : 
; 568  :        case MM_WOM_FORCEQUALITY:
; 569  :             DEBUGMSG(ZONE_WODM, (L"WAV:MM_WOM_FORCEQUALITY\r\n"));
; 570  :             if (pStreamContext)

  003c4	e3540000	 cmp         r4, #0

; 571  :             {
; 572  :                 dwRet = pStreamContext->ForceQuality((BOOL)dwParam1);

  003c8	e1a01006	 mov         r1, r6
  003cc	0a000002	 beq         |$LN26@process_Au|
  003d0	e1a00004	 mov         r0, r4
  003d4	eb000000	 bl          |?ForceQuality@StreamContext@@QAAKH@Z|

; 573  :             }
; 574  :             else

  003d8	ea000004	 b           |$LN87@process_Au|
  003dc		 |$LN26@process_Au|

; 575  :             {
; 576  :                 dwRet = get_HardwareAudioBridge()->enable_WideBand(
; 577  :                     (BOOL)dwParam1
; 578  :                     );

  003dc	e5950024	 ldr         r0, [r5, #0x24]
  003e0	e5903000	 ldr         r3, [r0]
  003e4	e5933048	 ldr         r3, [r3, #0x48]
  003e8	e1a0e00f	 mov         lr, pc
  003ec	e12fff13	 bx          r3
  003f0		 |$LN87@process_Au|
  003f0	e1a05000	 mov         r5, r0
  003f4		 |$LN25@process_Au|

; 736  :         }
; 737  : 
; 738  :     if (pdwResult)

  003f4	e3570000	 cmp         r7, #0

; 739  :         {
; 740  :         *pdwResult = dwRet;

  003f8	15875000	 strne       r5, [r7]

; 741  :         }
; 742  : 
; 743  :     DEBUGMSG(ZONE_FUNCTION,
; 744  :         (L"WAV:-process_AudioStreamMessage(bResult=%d)\r\n", TRUE)
; 745  :         );
; 746  : 
; 747  :     return TRUE;

  003fc	e3a00001	 mov         r0, #1

; 748  : }

  00400	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00404	e12fff1e	 bx          lr
  00408		 |$M42209|

			 ENDP  ; |?process_AudioStreamMessage@CAudioManager@@UAAHPAUMMDRV_MESSAGE_PARAMS@@PAK@Z|, CAudioManager::process_AudioStreamMessage

	EXPORT	|??1CAudioManager@@UAA@XZ|		; CAudioManager::~CAudioManager
	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$T42220| DCD	|$LN5@CAudioMana@2|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CAudioManager@@UAA@XZ| PROC	; CAudioManager::~CAudioManager

; 69   : {

  00000		 |$LN5@CAudioMana@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M42217|
  00004	e1a04000	 mov         r4, r0
  00008	e59f3014	 ldr         r3, [pc, #0x14]

; 70   :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+~CAudioManager()\r\n"));
; 71   : 
; 72   :     InternalCleanUp();

  0000c	e5843000	 str         r3, [r4]
  00010	eb000000	 bl          |?InternalCleanUp@CAudioManager@@IAAXXZ|

; 73   : 
; 74   :     delete m_pAudioMixerManager;

  00014	e5940028	 ldr         r0, [r4, #0x28]
  00018	eb000000	 bl          |??3@YAXPAX@Z|

; 75   : 
; 76   :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-~CAudioManager()\r\n"));
; 77   : }

  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$LN6@CAudioMana@2|
  00024		 |$LN7@CAudioMana@2|
  00024	00000000	 DCD         |??_7CAudioManager@@6B@|
  00028		 |$M42218|

			 ENDP  ; |??1CAudioManager@@UAA@XZ|, CAudioManager::~CAudioManager


  00000			 AREA	 |.pdata|, PDATA
|$T42238| DCD	|$LN8@scalar|
	DCD	0x40000f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GCAudioManager@@UAAPAXI@Z| PROC	; CAudioManager::`scalar deleting destructor'
  00000		 |$LN8@scalar|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M42235|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0
  0000c	e59f3024	 ldr         r3, [pc, #0x24]
  00010	e5853000	 str         r3, [r5]
  00014	eb000000	 bl          |?InternalCleanUp@CAudioManager@@IAAXXZ|
  00018	e5950028	 ldr         r0, [r5, #0x28]
  0001c	eb000000	 bl          |??3@YAXPAX@Z|
  00020	e3140001	 tst         r4, #1
  00024	11a00005	 movne       r0, r5
  00028	1b000000	 blne        |??3@YAXPAX@Z|
  0002c	e1a00005	 mov         r0, r5
  00030	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$LN9@scalar|
  00038		 |$LN10@scalar|
  00038	00000000	 DCD         |??_7CAudioManager@@6B@|
  0003c		 |$M42236|

			 ENDP  ; |??_GCAudioManager@@UAAPAXI@Z|, CAudioManager::`scalar deleting destructor'

	END
