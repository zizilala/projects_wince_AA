; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\Z2170P\SRC\DRIVERS\TPS659XX_WAVE\mixermgr.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|?get_DestinationId@CAudioLineBase@@QBAGXZ| ; CAudioLineBase::get_DestinationId
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\audiolin.h

  00000			 AREA	 |.pdata|, PDATA
|$T34542| DCD	|$LN5@get_Destin|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_DestinationId@CAudioLineBase@@QBAGXZ| PROC ; CAudioLineBase::get_DestinationId

; 95   :     WORD get_DestinationId() const          { return m_DestinationId; }

  00000		 |$LN5@get_Destin|
  00000		 |$M34539|
  00000	e1d000b8	 ldrh        r0, [r0, #8]
  00004	e12fff1e	 bx          lr
  00008		 |$M34540|

			 ENDP  ; |?get_DestinationId@CAudioLineBase@@QBAGXZ|, CAudioLineBase::get_DestinationId

	EXPORT	|?get_LineId@CAudioLineBase@@QBAGXZ|	; CAudioLineBase::get_LineId

  00000			 AREA	 |.pdata|, PDATA
|$T34552| DCD	|$LN5@get_LineId|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_LineId@CAudioLineBase@@QBAGXZ| PROC ; CAudioLineBase::get_LineId

; 97   :     WORD get_LineId() const                 { return m_LineId; }

  00000		 |$LN5@get_LineId|
  00000		 |$M34549|
  00000	e1d000bc	 ldrh        r0, [r0, #0xC]
  00004	e12fff1e	 bx          lr
  00008		 |$M34550|

			 ENDP  ; |?get_LineId@CAudioLineBase@@QBAGXZ|, CAudioLineBase::get_LineId

	EXPORT	|?get_ConnectionCount@CAudioLineBase@@QBAGXZ| ; CAudioLineBase::get_ConnectionCount

  00000			 AREA	 |.pdata|, PDATA
|$T34562| DCD	|$LN5@get_Connec|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_ConnectionCount@CAudioLineBase@@QBAGXZ| PROC ; CAudioLineBase::get_ConnectionCount

; 98   :     WORD get_ConnectionCount() const        { return m_countConnections; }

  00000		 |$LN5@get_Connec|
  00000		 |$M34559|
  00000	e1d000be	 ldrh        r0, [r0, #0xE]
  00004	e12fff1e	 bx          lr
  00008		 |$M34560|

			 ENDP  ; |?get_ConnectionCount@CAudioLineBase@@QBAGXZ|, CAudioLineBase::get_ConnectionCount

	EXPORT	|?get_ComponentType@CAudioLineBase@@QBAKXZ| ; CAudioLineBase::get_ComponentType

  00000			 AREA	 |.pdata|, PDATA
|$T34572| DCD	|$LN5@get_Compon|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_ComponentType@CAudioLineBase@@QBAKXZ| PROC ; CAudioLineBase::get_ComponentType

; 99   :     DWORD get_ComponentType() const         { return m_ComponentType; }

  00000		 |$LN5@get_Compon|
  00000		 |$M34569|
  00000	e590001c	 ldr         r0, [r0, #0x1C]
  00004	e12fff1e	 bx          lr
  00008		 |$M34570|

			 ENDP  ; |?get_ComponentType@CAudioLineBase@@QBAKXZ|, CAudioLineBase::get_ComponentType

	EXPORT	|?get_TargetType@CAudioLineBase@@QBAKXZ| ; CAudioLineBase::get_TargetType

  00000			 AREA	 |.pdata|, PDATA
|$T34582| DCD	|$LN5@get_Target|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_TargetType@CAudioLineBase@@QBAKXZ| PROC ; CAudioLineBase::get_TargetType

; 100  :     DWORD get_TargetType() const            { return m_TargetType; }

  00000		 |$LN5@get_Target|
  00000		 |$M34579|
  00000	e5900024	 ldr         r0, [r0, #0x24]
  00004	e12fff1e	 bx          lr
  00008		 |$M34580|

			 ENDP  ; |?get_TargetType@CAudioLineBase@@QBAKXZ|, CAudioLineBase::get_TargetType

	EXPORT	|?get_ControlCount@CAudioLineBase@@QBAGXZ| ; CAudioLineBase::get_ControlCount

  00000			 AREA	 |.pdata|, PDATA
|$T34592| DCD	|$LN5@get_Contro|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_ControlCount@CAudioLineBase@@QBAGXZ| PROC ; CAudioLineBase::get_ControlCount

; 101  :     WORD get_ControlCount() const           { return m_countControls; }

  00000		 |$LN5@get_Contro|
  00000		 |$M34589|
  00000	e1d001b0	 ldrh        r0, [r0, #0x10]
  00004	e12fff1e	 bx          lr
  00008		 |$M34590|

			 ENDP  ; |?get_ControlCount@CAudioLineBase@@QBAGXZ|, CAudioLineBase::get_ControlCount

	EXPORT	|?get_ControlId@CAudioControlBase@@QBAKXZ| ; CAudioControlBase::get_ControlId
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\audioctrl.h

  00000			 AREA	 |.pdata|, PDATA
|$T34602| DCD	|$LN5@get_Contro@2|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_ControlId@CAudioControlBase@@QBAKXZ| PROC ; CAudioControlBase::get_ControlId

; 81   :     DWORD get_ControlId() const                 { return m_ControlId; }

  00000		 |$LN5@get_Contro@2|
  00000		 |$M34599|
  00000	e590000c	 ldr         r0, [r0, #0xC]
  00004	e12fff1e	 bx          lr
  00008		 |$M34600|

			 ENDP  ; |?get_ControlId@CAudioControlBase@@QBAKXZ|, CAudioControlBase::get_ControlId

	EXPORT	|?get_AudioMixerVersion@CAudioMixerManager@@QBAKXZ| ; CAudioMixerManager::get_AudioMixerVersion
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\mixermgr.h

  00000			 AREA	 |.pdata|, PDATA
|$T34611| DCD	|$LN5@get_AudioM|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_AudioMixerVersion@CAudioMixerManager@@QBAKXZ| PROC ; CAudioMixerManager::get_AudioMixerVersion

; 99   :     DWORD get_AudioMixerVersion() const     { return kDriverVersion;}

  00000		 |$LN5@get_AudioM|
  00000		 |$M34608|
  00000	e3a00064	 mov         r0, #0x64
  00004	e12fff1e	 bx          lr
  00008		 |$M34609|

			 ENDP  ; |?get_AudioMixerVersion@CAudioMixerManager@@QBAKXZ|, CAudioMixerManager::get_AudioMixerVersion

	EXPORT	|?pDeviceName@?1??get_AudioMixerName@CAudioMixerManager@@QBAPBGXZ@4PBGB| [ DATA ] ; `CAudioMixerManager::get_AudioMixerName'::`2'::pDeviceName
	EXPORT	|?get_AudioMixerName@CAudioMixerManager@@QBAPBGXZ| ; CAudioMixerManager::get_AudioMixerName
	EXPORT	|??_C@_1BI@DKACBKCL@?$AAA?$AAu?$AAd?$AAi?$AAo?$AA?5?$AAM?$AAi?$AAx?$AAe?$AAr?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T34620| DCD	|$LN5@get_AudioM@2|
	DCD	0x40000400

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@DKACBKCL@?$AAA?$AAu?$AAd?$AAi?$AAo?$AA?5?$AAM?$AAi?$AAx?$AAe?$AAr?$AA?$AA@| DCB "A"
	DCB	0x0, "u", 0x0, "d", 0x0, "i", 0x0, "o", 0x0, " ", 0x0, "M"
	DCB	0x0, "i", 0x0, "x", 0x0, "e", 0x0, "r", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.data|, DATA
|?pDeviceName@?1??get_AudioMixerName@CAudioMixerManager@@QBAPBGXZ@4PBGB| DCD |??_C@_1BI@DKACBKCL@?$AAA?$AAu?$AAd?$AAi?$AAo?$AA?5?$AAM?$AAi?$AAx?$AAe?$AAr?$AA?$AA@| ; `CAudioMixerManager::get_AudioMixerName'::`2'::pDeviceName
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_AudioMixerName@CAudioMixerManager@@QBAPBGXZ| PROC ; CAudioMixerManager::get_AudioMixerName

; 102  :     {

  00000		 |$LN5@get_AudioM@2|
  00000		 |$M34617|

; 103  :         static WCHAR const* pDeviceName = L"Audio Mixer";
; 104  :         return pDeviceName;

  00000	e59f3004	 ldr         r3, [pc, #4]
  00004	e5930000	 ldr         r0, [r3]

; 105  :     }

  00008	e12fff1e	 bx          lr
  0000c		 |$LN6@get_AudioM@2|
  0000c		 |$LN7@get_AudioM@2|
  0000c	00000000	 DCD         |?pDeviceName@?1??get_AudioMixerName@CAudioMixerManager@@QBAPBGXZ@4PBGB|
  00010		 |$M34618|

			 ENDP  ; |?get_AudioMixerName@CAudioMixerManager@@QBAPBGXZ|, CAudioMixerManager::get_AudioMixerName

	EXPORT	|??0CAudioMixerManager@@QAA@PAVCAudioManager@@@Z| ; CAudioMixerManager::CAudioMixerManager
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\mixermgr.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T34633| DCD	|$LN5@CAudioMixe|
	DCD	0x40000f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CAudioMixerManager@@QAA@PAVCAudioManager@@@Z| PROC ; CAudioMixerManager::CAudioMixerManager

; 36   : {

  00000		 |$LN5@CAudioMixe|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M34630|

; 37   :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+CAudioMixerManager()\r\n"));
; 38   : 
; 39   :     m_counterDestinationLines = 0;
; 40   : 
; 41   :     memset(m_prgAudioMixerControls, 0,
; 42   :         sizeof(CAudioControlBase*)*kMixerControlCount
; 43   :         );

  00004	e1a03000	 mov         r3, r0
  00008	e3a02000	 mov         r2, #0
  0000c	e0c321b0	 strh        r2, [r3], #0x10
  00010	e3a0e000	 mov         lr, #0
  00014	e5801004	 str         r1, [r0, #4]
  00018	e5802008	 str         r2, [r0, #8]
  0001c	e580200c	 str         r2, [r0, #0xC]
  00020	e5802020	 str         r2, [r0, #0x20]
  00024	e583e000	 str         lr, [r3]
  00028	e583e004	 str         lr, [r3, #4]
  0002c	e583e008	 str         lr, [r3, #8]
  00030	e583e00c	 str         lr, [r3, #0xC]

; 44   : 
; 45   :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-CAudioMixerManager()\r\n"));
; 46   : }

  00034	e49de004	 ldr         lr, [sp], #4
  00038	e12fff1e	 bx          lr
  0003c		 |$M34631|

			 ENDP  ; |??0CAudioMixerManager@@QAA@PAVCAudioManager@@@Z|, CAudioMixerManager::CAudioMixerManager

	EXPORT	|?put_AudioMixerControl@CAudioMixerManager@@QAAXW4AudioMixerControl@1@PAVCAudioControlBase@@@Z| ; CAudioMixerManager::put_AudioMixerControl

  00000			 AREA	 |.pdata|, PDATA
|$T34643| DCD	|$LN5@put_AudioM|
	DCD	0x40000300
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?put_AudioMixerControl@CAudioMixerManager@@QAAXW4AudioMixerControl@1@PAVCAudioControlBase@@@Z| PROC ; CAudioMixerManager::put_AudioMixerControl

; 55   : {

  00000		 |$LN5@put_AudioM|
  00000		 |$M34640|

; 56   :     DEBUGMSG(ZONE_FUNCTION,
; 57   :         (L"WAV:+put_AudioMixerControl(id=%d, ctrl=0x%08X)\r\n", id, pCtrl));
; 58   : 
; 59   :     ASSERT(id < kMixerControlCount);
; 60   :     m_prgAudioMixerControls[id] = pCtrl;

  00000	e0803101	 add         r3, r0, r1, lsl #2
  00004	e5832010	 str         r2, [r3, #0x10]

; 61   : 
; 62   :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-put_AudioMixerControl()\r\n"));
; 63   : }

  00008	e12fff1e	 bx          lr
  0000c		 |$M34641|

			 ENDP  ; |?put_AudioMixerControl@CAudioMixerManager@@QAAXW4AudioMixerControl@1@PAVCAudioControlBase@@@Z|, CAudioMixerManager::put_AudioMixerControl

	EXPORT	|?register_DestinationAudioLine@CAudioMixerManager@@QAAHPAVCAudioLineBase@@@Z| ; CAudioMixerManager::register_DestinationAudioLine
	IMPORT	|?put_AudioLineIds@CAudioLineBase@@AAAXGGG@Z| ; CAudioLineBase::put_AudioLineIds

  00000			 AREA	 |.pdata|, PDATA
|$T34663| DCD	|$LN20@register_D|
	DCD	0x40002301
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?register_DestinationAudioLine@CAudioMixerManager@@QAAHPAVCAudioLineBase@@@Z| PROC ; CAudioMixerManager::register_DestinationAudioLine

; 79   : {

  00000		 |$LN20@register_D|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M34660|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0

; 80   :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+register_DestinationAudioLine()\r\n"));
; 81   : 
; 82   :     // generate a unique destination id and use that as the basis
; 83   :     // for the line id
; 84   :     //
; 85   :     pDestination->put_AudioLineIds(
; 86   :         MXLINEID(m_counterDestinationLines, kNoSource),
; 87   :         m_counterDestinationLines,
; 88   :         0);

  0000c	e1d5e0b0	 ldrh        lr, [r5]
  00010	e3a03000	 mov         r3, #0
  00014	e1a00004	 mov         r0, r4
  00018	e1a0200e	 mov         r2, lr
  0001c	e38e1cff	 orr         r1, lr, #0xFF, 24
  00020	eb000000	 bl          |?put_AudioLineIds@CAudioLineBase@@AAAXGGG@Z|

; 89   : 
; 90   :     ++m_counterDestinationLines;

  00024	e1d530b0	 ldrh        r3, [r5]

; 91   : #pragma warning(push)
; 92   : #pragma warning (disable:4127)
; 93   :     InsertTail(m_pDestinationAudioLines, pDestination);

  00028	e595200c	 ldr         r2, [r5, #0xC]
  0002c	e3a01000	 mov         r1, #0
  00030	e2833001	 add         r3, r3, #1
  00034	e1c530b0	 strh        r3, [r5]
  00038	e5841004	 str         r1, [r4, #4]
  0003c	e3520000	 cmp         r2, #0
  00040	1a00000b	 bne         |$LN17@register_D|
  00044	e2843004	 add         r3, r4, #4
  00048	e585300c	 str         r3, [r5, #0xC]
  0004c		 |$LN6@register_D|

; 94   : #pragma warning(pop)
; 95   :     pDestination->initialize_AudioLine(this);

  0004c	e5943000	 ldr         r3, [r4]
  00050	e1a01005	 mov         r1, r5
  00054	e1a00004	 mov         r0, r4
  00058	e5933004	 ldr         r3, [r3, #4]
  0005c	e1a0e00f	 mov         lr, pc
  00060	e12fff13	 bx          r3

; 96   : 
; 97   :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-register_DestinationAudioLine()\r\n"));
; 98   : 
; 99   :     return TRUE;

  00064	e3a00001	 mov         r0, #1

; 100  : }

  00068	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0006c	e12fff1e	 bx          lr
  00070		 |$LL3@register_D|

; 91   : #pragma warning(push)
; 92   : #pragma warning (disable:4127)
; 93   :     InsertTail(m_pDestinationAudioLines, pDestination);

  00070	e5922000	 ldr         r2, [r2]
  00074		 |$LN17@register_D|
  00074	e5923000	 ldr         r3, [r2]
  00078	e3530000	 cmp         r3, #0
  0007c	1afffffb	 bne         |$LL3@register_D|
  00080	e2843004	 add         r3, r4, #4
  00084	e5823000	 str         r3, [r2]
  00088	eaffffef	 b           |$LN6@register_D|
  0008c		 |$M34661|

			 ENDP  ; |?register_DestinationAudioLine@CAudioMixerManager@@QAAHPAVCAudioLineBase@@@Z|, CAudioMixerManager::register_DestinationAudioLine

	EXPORT	|?register_SourceAudioLine@CAudioMixerManager@@QAAHPAVCAudioLineBase@@0@Z| ; CAudioMixerManager::register_SourceAudioLine
	IMPORT	|?increment_ConnectionCount@CAudioLineBase@@AAAXXZ| ; CAudioLineBase::increment_ConnectionCount
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\audiolin.h

  00000			 AREA	 |.pdata|, PDATA
|$T34697| DCD	|$LN26@register_S|
	DCD	0x40002501
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\mixermgr.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?register_SourceAudioLine@CAudioMixerManager@@QAAHPAVCAudioLineBase@@0@Z| PROC ; CAudioMixerManager::register_SourceAudioLine

; 112  : {

  00000		 |$LN26@register_S|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M34694|
  00004	e1a04002	 mov         r4, r2
  00008	e1a05001	 mov         r5, r1
  0000c	e1a06000	 mov         r6, r0

; 113  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+register_SourceAudioLine()\r\n"));
; 114  : 
; 115  :     // the id's for a source AudioLine is based on the id of the destination
; 116  :     // AudioLine concatonated with the current number of connections to
; 117  :     // the destination AudioLine
; 118  :     //
; 119  :     WORD SourceId = pDestination->get_ConnectionCount();

  00010	e1d4e0be	 ldrh        lr, [r4, #0xE]

; 120  : 
; 121  :     pSource->put_AudioLineIds(
; 122  :         MXLINEID(pDestination->get_DestinationId(), SourceId),
; 123  :         pDestination->get_DestinationId(),
; 124  :         SourceId);

  00014	e1d420b8	 ldrh        r2, [r4, #8]
  00018	e1a00005	 mov         r0, r5
  0001c	e1a0300e	 mov         r3, lr
  00020	e182e40e	 orr         lr, r2, lr, lsl #8
  00024	e1a0180e	 mov         r1, lr, lsl #16
  00028	e1a01821	 mov         r1, r1, lsr #16
  0002c	eb000000	 bl          |?put_AudioLineIds@CAudioLineBase@@AAAXGGG@Z|

; 125  : 
; 126  :     pDestination->increment_ConnectionCount();

  00030	e1a00004	 mov         r0, r4
  00034	eb000000	 bl          |?increment_ConnectionCount@CAudioLineBase@@AAAXXZ|

; 127  : 
; 128  : #pragma warning(push)
; 129  : #pragma warning (disable:4127)
; 130  :     InsertTail(m_pSourceAudioLines, pSource);

  00038	e5963008	 ldr         r3, [r6, #8]
  0003c	e3a02000	 mov         r2, #0
  00040	e5852004	 str         r2, [r5, #4]
  00044	e1b02003	 movs        r2, r3
  00048	1a00000b	 bne         |$LN23@register_S|
  0004c	e2853004	 add         r3, r5, #4
  00050	e5863008	 str         r3, [r6, #8]
  00054		 |$LN6@register_S|

; 131  : #pragma warning(pop)
; 132  : 
; 133  :     pSource->initialize_AudioLine(this);

  00054	e5953000	 ldr         r3, [r5]
  00058	e1a01006	 mov         r1, r6
  0005c	e1a00005	 mov         r0, r5
  00060	e5933004	 ldr         r3, [r3, #4]
  00064	e1a0e00f	 mov         lr, pc
  00068	e12fff13	 bx          r3

; 134  : 
; 135  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-register_SourceAudioLine()\r\n"));
; 136  : 
; 137  :     return TRUE;

  0006c	e3a00001	 mov         r0, #1

; 138  : }

  00070	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00074	e12fff1e	 bx          lr
  00078		 |$LL3@register_S|

; 127  : 
; 128  : #pragma warning(push)
; 129  : #pragma warning (disable:4127)
; 130  :     InsertTail(m_pSourceAudioLines, pSource);

  00078	e5922000	 ldr         r2, [r2]
  0007c		 |$LN23@register_S|
  0007c	e5923000	 ldr         r3, [r2]
  00080	e3530000	 cmp         r3, #0
  00084	1afffffb	 bne         |$LL3@register_S|
  00088	e2853004	 add         r3, r5, #4
  0008c	e5823000	 str         r3, [r2]
  00090	eaffffef	 b           |$LN6@register_S|
  00094		 |$M34695|

			 ENDP  ; |?register_SourceAudioLine@CAudioMixerManager@@QAAHPAVCAudioLineBase@@0@Z|, CAudioMixerManager::register_SourceAudioLine

	EXPORT	|?query_AudioLineBySourceAndDestinationId@CAudioMixerManager@@IBAPAVCAudioLineBase@@GG@Z| ; CAudioMixerManager::query_AudioLineBySourceAndDestinationId
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\audiolin.h

  00000			 AREA	 |.pdata|, PDATA
|$T34725| DCD	|$LN21@query_Audi|
	DCD	0x40001601
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\mixermgr.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?query_AudioLineBySourceAndDestinationId@CAudioMixerManager@@IBAPAVCAudioLineBase@@GG@Z| PROC ; CAudioMixerManager::query_AudioLineBySourceAndDestinationId

; 220  : {

  00000		 |$LN21@query_Audi|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M34722|
  00004	e1a04000	 mov         r4, r0

; 221  :     DEBUGMSG(ZONE_FUNCTION,
; 222  :         (L"WAV:+query_AudioLineBySourceAndDestinationId"
; 223  :          L"(SourceId=%d, DestinationId=%d)\r\n",
; 224  :          SourceId, DestinationId)
; 225  :          );
; 226  : 
; 227  :     // the simplist and quickest way to find a AudioLine with matching
; 228  :     // sourceid and destination id is to search based on its line
; 229  :     // id since the line id is the concatonation of the two
; 230  :     //
; 231  :     WORD LineId = MXLINEID(DestinationId, SourceId);
; 232  :     CAudioLineBase* pAudioLine = NULL;
; 233  :     if (DestinationId < m_counterDestinationLines)

  00008	e1d4e0b0	 ldrh        lr, [r4]
  0000c	e1823401	 orr         r3, r2, r1, lsl #8
  00010	e1a01803	 mov         r1, r3, lsl #16
  00014	e1a01821	 mov         r1, r1, lsr #16
  00018	e152000e	 cmp         r2, lr
  0001c	e3a00000	 mov         r0, #0
  00020	2a00000a	 bcs         |$LN16@query_Audi|

; 234  :         {
; 235  :         pAudioLine = (CAudioLineBase*)m_pSourceAudioLines;

  00024	e5943008	 ldr         r3, [r4, #8]
  00028	ea000003	 b           |$LN18@query_Audi|
  0002c		 |$LL3@query_Audi|

; 236  :         while (pAudioLine)
; 237  :             {
; 238  :             if (pAudioLine->get_LineId() == LineId)

  0002c	e1d030bc	 ldrh        r3, [r0, #0xC]
  00030	e1530001	 cmp         r3, r1
  00034	0a000005	 beq         |$LN16@query_Audi|

; 239  :                 {
; 240  :                 break;
; 241  :                 }
; 242  :             pAudioLine = (CAudioLineBase*)pAudioLine->Blink;

  00038	e5903004	 ldr         r3, [r0, #4]
  0003c		 |$LN18@query_Audi|
  0003c	e3530000	 cmp         r3, #0
  00040	12430004	 subne       r0, r3, #4
  00044	03a00000	 moveq       r0, #0
  00048	e3500000	 cmp         r0, #0
  0004c	1afffff6	 bne         |$LL3@query_Audi|
  00050		 |$LN16@query_Audi|

; 243  :             }
; 244  :         }
; 245  : 
; 246  :     DEBUGMSG(ZONE_FUNCTION,
; 247  :         (L"WAV:-query_AudioLineByLineId(pAudioLine=0x%08X)\r\n", pAudioLine)
; 248  :         );
; 249  : 
; 250  :     return pAudioLine;
; 251  : }

  00050	e8bd4010	 ldmia       sp!, {r4, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$M34723|

			 ENDP  ; |?query_AudioLineBySourceAndDestinationId@CAudioMixerManager@@IBAPAVCAudioLineBase@@GG@Z|, CAudioMixerManager::query_AudioLineBySourceAndDestinationId

	EXPORT	|?query_AudioLineByDestinationId@CAudioMixerManager@@IBAPAVCAudioLineBase@@G@Z| ; CAudioMixerManager::query_AudioLineByDestinationId

  00000			 AREA	 |.pdata|, PDATA
|$T34747| DCD	|$LN18@query_Audi@2|
	DCD	0x40001200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?query_AudioLineByDestinationId@CAudioMixerManager@@IBAPAVCAudioLineBase@@G@Z| PROC ; CAudioMixerManager::query_AudioLineByDestinationId

; 262  : {

  00000		 |$LN18@query_Audi@2|
  00000		 |$M34744|
  00000	e1a02000	 mov         r2, r0

; 263  :     DEBUGMSG(ZONE_FUNCTION,
; 264  :         (L"WAV:+query_AudioLineByDestinationId(idDestination=%d)\r\n",
; 265  :         DestinationId)
; 266  :         );
; 267  : 
; 268  :     // the idDestination is really the ordinal position
; 269  :     // of the AudioLine in the destination AudioLine array
; 270  :     //
; 271  :     CAudioLineBase* pAudioLine = NULL;
; 272  :     if (DestinationId < m_counterDestinationLines)

  00004	e1d230b0	 ldrh        r3, [r2]
  00008	e3a00000	 mov         r0, #0
  0000c	e1510003	 cmp         r1, r3
  00010	2a00000b	 bcs         |$LN13@query_Audi@2|

; 273  :     {
; 274  :         int i = DestinationId;
; 275  :         pAudioLine = (CAudioLineBase*)m_pDestinationAudioLines;

  00014	e592300c	 ldr         r3, [r2, #0xC]
  00018	e1a02001	 mov         r2, r1
  0001c	ea000003	 b           |$LN15@query_Audi@2|
  00020		 |$LL3@query_Audi@2|

; 276  :         while (pAudioLine && i--)

  00020	e3520000	 cmp         r2, #0
  00024	e2422001	 sub         r2, r2, #1
  00028	0a000005	 beq         |$LN13@query_Audi@2|

; 277  :         {
; 278  :             pAudioLine = (CAudioLineBase*)pAudioLine->Blink;

  0002c	e5903004	 ldr         r3, [r0, #4]
  00030		 |$LN15@query_Audi@2|
  00030	e3530000	 cmp         r3, #0
  00034	12430004	 subne       r0, r3, #4
  00038	03a00000	 moveq       r0, #0
  0003c	e3500000	 cmp         r0, #0
  00040	1afffff6	 bne         |$LL3@query_Audi@2|
  00044		 |$LN13@query_Audi@2|

; 279  :         }
; 280  : 
; 281  :         ASSERT(pAudioLine);
; 282  :         if (pAudioLine){
; 283  :             ASSERT(pAudioLine->get_DestinationId() == DestinationId);
; 284  :         }
; 285  :     }
; 286  : 
; 287  :     DEBUGMSG(ZONE_FUNCTION,
; 288  :         (L"WAV:-query_AudioLineByDestinationId(pAudioLine=0x%08X)\r\n",
; 289  :         pAudioLine)
; 290  :         );
; 291  : 
; 292  :     return pAudioLine;
; 293  : }

  00044	e12fff1e	 bx          lr
  00048		 |$M34745|

			 ENDP  ; |?query_AudioLineByDestinationId@CAudioMixerManager@@IBAPAVCAudioLineBase@@G@Z|, CAudioMixerManager::query_AudioLineByDestinationId

	EXPORT	|?query_AudioLineByComponentType@CAudioMixerManager@@IBAPAVCAudioLineBase@@K@Z| ; CAudioMixerManager::query_AudioLineByComponentType
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\audiolin.h

  00000			 AREA	 |.pdata|, PDATA
|$T34776| DCD	|$LN26@query_Audi@3|
	DCD	0x40001400
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\mixermgr.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?query_AudioLineByComponentType@CAudioMixerManager@@IBAPAVCAudioLineBase@@K@Z| PROC ; CAudioMixerManager::query_AudioLineByComponentType

; 304  : {

  00000		 |$LN26@query_Audi@3|
  00000		 |$M34773|
  00000	e1a02000	 mov         r2, r0

; 305  :     DEBUGMSG(ZONE_FUNCTION,
; 306  :         (L"WAV:+query_AudioLineByComponentType(ComponentType=%d)\r\n",
; 307  :         ComponentType)
; 308  :         );
; 309  : 
; 310  :     // check if the requested component type is in regards to
; 311  :     // destination or source and then search respective list
; 312  :     //
; 313  :     CAudioLineBase* pAudioLine = NULL;
; 314  :     if (MIXERLINE_COMPONENTTYPE_DST_FIRST <= ComponentType &&
; 315  :         MIXERLINE_COMPONENTTYPE_DST_LAST >= ComponentType)

  00004	e3510008	 cmp         r1, #8

; 316  :         {
; 317  :         pAudioLine = (CAudioLineBase*)m_pDestinationAudioLines;

  00008	9592300c	 ldrls       r3, [r2, #0xC]
  0000c	e3a00000	 mov         r0, #0
  00010	9a000008	 bls         |$LN22@query_Audi@3|

; 318  :         }
; 319  :     else if (MIXERLINE_COMPONENTTYPE_SRC_FIRST <= ComponentType &&
; 320  :              MIXERLINE_COMPONENTTYPE_SRC_LAST >= ComponentType)

  00014	e2413a01	 sub         r3, r1, #1, 20
  00018	e353000a	 cmp         r3, #0xA
  0001c	8a00000a	 bhi         |$LN20@query_Audi@3|

; 321  :         {
; 322  :         pAudioLine = (CAudioLineBase*)m_pSourceAudioLines;

  00020	e5923008	 ldr         r3, [r2, #8]
  00024	ea000003	 b           |$LN22@query_Audi@3|
  00028		 |$LL3@query_Audi@3|

; 323  :         }
; 324  : 
; 325  :     // search the list
; 326  :     //
; 327  :     while (pAudioLine)
; 328  :         {
; 329  :         if (pAudioLine->get_ComponentType() == ComponentType)

  00028	e590301c	 ldr         r3, [r0, #0x1C]
  0002c	e1530001	 cmp         r3, r1
  00030	0a000005	 beq         |$LN20@query_Audi@3|

; 330  :             {
; 331  :             break;
; 332  :             }
; 333  :         pAudioLine = (CAudioLineBase*)pAudioLine->Blink;

  00034	e5903004	 ldr         r3, [r0, #4]
  00038		 |$LN22@query_Audi@3|
  00038	e3530000	 cmp         r3, #0
  0003c	12430004	 subne       r0, r3, #4
  00040	03a00000	 moveq       r0, #0
  00044	e3500000	 cmp         r0, #0
  00048	1afffff6	 bne         |$LL3@query_Audi@3|
  0004c		 |$LN20@query_Audi@3|

; 334  :         }
; 335  : 
; 336  :     DEBUGMSG(ZONE_FUNCTION,
; 337  :         (L"WAV:-query_AudioLineByComponentType(pAudioLine=0x%08X)\r\n",
; 338  :          pAudioLine)
; 339  :         );
; 340  : 
; 341  :     return pAudioLine;
; 342  : }

  0004c	e12fff1e	 bx          lr
  00050		 |$M34774|

			 ENDP  ; |?query_AudioLineByComponentType@CAudioMixerManager@@IBAPAVCAudioLineBase@@K@Z|, CAudioMixerManager::query_AudioLineByComponentType

	EXPORT	|?query_AudioLineByTargetType@CAudioMixerManager@@IBAPAVCAudioLineBase@@K@Z| ; CAudioMixerManager::query_AudioLineByTargetType
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\audiolin.h

  00000			 AREA	 |.pdata|, PDATA
|$T34802| DCD	|$LN20@query_Audi@4|
	DCD	0x40000c00
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\mixermgr.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?query_AudioLineByTargetType@CAudioMixerManager@@IBAPAVCAudioLineBase@@K@Z| PROC ; CAudioMixerManager::query_AudioLineByTargetType

; 352  : {

  00000		 |$LN20@query_Audi@4|
  00000		 |$M34799|

; 353  :     DEBUGMSG(ZONE_FUNCTION,
; 354  :         (L"WAV:+query_AudioLineByTargetType(TargetType=%d)\r\n", TargetType)
; 355  :         );
; 356  : 
; 357  :     // for right now we only check the destination list for matching
; 358  :     // target types
; 359  :     //
; 360  :     CAudioLineBase *pAudioLine = (CAudioLineBase*)m_pDestinationAudioLines;

  00000	e590300c	 ldr         r3, [r0, #0xC]
  00004	ea000003	 b           |$LN17@query_Audi@4|
  00008		 |$LL3@query_Audi@4|

; 361  :     while (pAudioLine)
; 362  :         {
; 363  :         if (pAudioLine->get_TargetType() == TargetType)

  00008	e5903024	 ldr         r3, [r0, #0x24]
  0000c	e1530001	 cmp         r3, r1
  00010	0a000005	 beq         |$LN15@query_Audi@4|

; 364  :             {
; 365  :             break;
; 366  :             }
; 367  :         pAudioLine = (CAudioLineBase*)pAudioLine->Blink;

  00014	e5903004	 ldr         r3, [r0, #4]
  00018		 |$LN17@query_Audi@4|
  00018	e3530000	 cmp         r3, #0
  0001c	12430004	 subne       r0, r3, #4
  00020	03a00000	 moveq       r0, #0
  00024	e3500000	 cmp         r0, #0
  00028	1afffff6	 bne         |$LL3@query_Audi@4|
  0002c		 |$LN15@query_Audi@4|

; 368  :         }
; 369  : 
; 370  :     DEBUGMSG(ZONE_FUNCTION,
; 371  :         (L"WAV:-query_AudioLineByTargetType(pAudioLine=0x%08X)\r\n",
; 372  :         pAudioLine));
; 373  : 
; 374  :     return pAudioLine;
; 375  : }

  0002c	e12fff1e	 bx          lr
  00030		 |$M34800|

			 ENDP  ; |?query_AudioLineByTargetType@CAudioMixerManager@@IBAPAVCAudioLineBase@@K@Z|, CAudioMixerManager::query_AudioLineByTargetType

	EXPORT	|?close_Device@CAudioMixerManager@@IAAKPAUAudioMixerCallback_t@1@@Z| ; CAudioMixerManager::close_Device
	IMPORT	|LocalFree|

  00000			 AREA	 |.pdata|, PDATA
|$T34819| DCD	|$LN15@close_Devi|
	DCD	0x40001301
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?close_Device@CAudioMixerManager@@IAAKPAUAudioMixerCallback_t@1@@Z| PROC ; CAudioMixerManager::close_Device

; 656  : {

  00000		 |$LN15@close_Devi|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M34816|
  00004	e1a0e000	 mov         lr, r0

; 657  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+close_Device()\r\n"));
; 658  : 
; 659  :     AudioMixerCallback_t *pCurr;
; 660  :     AudioMixerCallback_t *pPrev = NULL;
; 661  :     for (pCurr = m_pAudioMixerCallbacks; pCurr != NULL; pCurr = pCurr->pNext)

  00008	e59e3020	 ldr         r3, [lr, #0x20]
  0000c	e3a02000	 mov         r2, #0
  00010	ea000003	 b           |$LN12@close_Devi|
  00014		 |$LL6@close_Devi|

; 662  :         {
; 663  :         if (pCurr == pAudioCB)

  00014	e5903008	 ldr         r3, [r0, #8]
  00018	e1500001	 cmp         r0, r1
  0001c	0a000003	 beq         |$LN10@close_Devi|

; 675  :             break;
; 676  :             }
; 677  :         pPrev = pCurr;

  00020	e1a02000	 mov         r2, r0
  00024		 |$LN12@close_Devi|
  00024	e1b00003	 movs        r0, r3
  00028	1afffff9	 bne         |$LL6@close_Devi|

; 662  :         {
; 663  :         if (pCurr == pAudioCB)

  0002c	ea000003	 b           |$LN4@close_Devi|
  00030		 |$LN10@close_Devi|

; 664  :             {
; 665  :             if (pPrev == NULL)

  00030	e3520000	 cmp         r2, #0

; 666  :                 {
; 667  :                 // we're deleting the first item
; 668  :                 m_pAudioMixerCallbacks = pCurr->pNext;

  00034	058e3020	 streq       r3, [lr, #0x20]

; 669  :                 }
; 670  :             else
; 671  :                 {
; 672  :                 pPrev->pNext = pCurr->pNext;

  00038	15823008	 strne       r3, [r2, #8]

; 673  :                 }
; 674  :             LocalFree(pCurr);

  0003c	eb000000	 bl          LocalFree
  00040		 |$LN4@close_Devi|

; 678  :         }
; 679  : 
; 680  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-close_Device()\r\n"));
; 681  : 
; 682  :     return MMSYSERR_NOERROR;

  00040	e3a00000	 mov         r0, #0

; 683  : }

  00044	e49de004	 ldr         lr, [sp], #4
  00048	e12fff1e	 bx          lr
  0004c		 |$M34817|

			 ENDP  ; |?close_Device@CAudioMixerManager@@IAAKPAUAudioMixerCallback_t@1@@Z|, CAudioMixerManager::close_Device

	EXPORT	|?open_Device@CAudioMixerManager@@IAAKPAKPAUtMIXEROPENDESC@@K@Z| ; CAudioMixerManager::open_Device
	IMPORT	|LocalAlloc|

  00000			 AREA	 |.pdata|, PDATA
|$T34835| DCD	|$LN8@open_Devic|
	DCD	0x40002501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?open_Device@CAudioMixerManager@@IAAKPAKPAUtMIXEROPENDESC@@K@Z| PROC ; CAudioMixerManager::open_Device

; 695  : {

  00000		 |$LN8@open_Devic|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M34832|
  00004	e1a07003	 mov         r7, r3
  00008	e1a04002	 mov         r4, r2
  0000c	e1a06001	 mov         r6, r1
  00010	e1a05000	 mov         r5, r0

; 696  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+open_Device()\r\n"));
; 697  : 
; 698  :     AudioMixerCallback_t *pAudioCB;
; 699  :     pAudioCB = (AudioMixerCallback_t*)LocalAlloc(LMEM_FIXED,
; 700  :                     sizeof(AudioMixerCallback_t)
; 701  :                     );

  00014	e3a0100c	 mov         r1, #0xC
  00018	e3a00000	 mov         r0, #0
  0001c	eb000000	 bl          LocalAlloc
  00020	e1b0e000	 movs        lr, r0

; 702  : 
; 703  :     if (pAudioCB == NULL)
; 704  :         {
; 705  :         DEBUGMSG(ZONE_ERROR,
; 706  :             (L"WAV:!ERROR-open_Device: out of memory\r\n")
; 707  :             );
; 708  : 
; 709  :         return MMSYSERR_NOMEM;

  00024	03a00007	 moveq       r0, #7

; 724  : }

  00028	08bd40f0	 ldmeqia     sp!, {r4 - r7, lr}
  0002c	012fff1e	 bxeq        lr

; 710  :         }
; 711  : 
; 712  :     pAudioCB->hmx = (DWORD)pMOD->hmx;

  00030	e5d40000	 ldrb        r0, [r4]
  00034	e5d43001	 ldrb        r3, [r4, #1]
  00038	e5d42002	 ldrb        r2, [r4, #2]
  0003c	e5d41003	 ldrb        r1, [r4, #3]
  00040	e1803403	 orr         r3, r0, r3, lsl #8
  00044	e1833802	 orr         r3, r3, r2, lsl #16
  00048	e1833c01	 orr         r3, r3, r1, lsl #24
  0004c	e58e3000	 str         r3, [lr]

; 713  :     pAudioCB->pfnCallback = (dwFlags & CALLBACK_FUNCTION) ?
; 714  :                                 (fnAudioMixerCallback*)pMOD->dwCallback :
; 715  :                                 NULL;

  00050	e3170803	 tst         r7, #3, 16
  00054	15d40008	 ldrneb      r0, [r4, #8]
  00058	15d43009	 ldrneb      r3, [r4, #9]
  0005c	15d4200a	 ldrneb      r2, [r4, #0xA]
  00060	15d4100b	 ldrneb      r1, [r4, #0xB]
  00064	11803403	 orrne       r3, r0, r3, lsl #8
  00068	11833802	 orrne       r3, r3, r2, lsl #16
  0006c	11833c01	 orrne       r3, r3, r1, lsl #24
  00070	03a03000	 moveq       r3, #0
  00074	e58e3004	 str         r3, [lr, #4]

; 716  : 
; 717  :     pAudioCB->pNext = m_pAudioMixerCallbacks;

  00078	e5953020	 ldr         r3, [r5, #0x20]

; 718  :     m_pAudioMixerCallbacks = pAudioCB;
; 719  :     *phDeviceId = (DWORD)pAudioCB;
; 720  : 
; 721  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-open_Device()\r\n"));
; 722  : 
; 723  :     return MMSYSERR_NOERROR;

  0007c	e3a00000	 mov         r0, #0
  00080	e58e3008	 str         r3, [lr, #8]
  00084	e585e020	 str         lr, [r5, #0x20]
  00088	e586e000	 str         lr, [r6]

; 724  : }

  0008c	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00090	e12fff1e	 bx          lr
  00094		 |$M34833|

			 ENDP  ; |?open_Device@CAudioMixerManager@@IAAKPAKPAUtMIXEROPENDESC@@K@Z|, CAudioMixerManager::open_Device

	EXPORT	|?get_DeviceCaps@CAudioMixerManager@@IAAKPAUtagMIXERCAPS@@K@Z| ; CAudioMixerManager::get_DeviceCaps
	IMPORT	|wcscpy|
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\mixermgr.h

  00000			 AREA	 |.pdata|, PDATA
|$T34854| DCD	|$LN9@get_Device|
	DCD	0x40002301
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\mixermgr.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_DeviceCaps@CAudioMixerManager@@IAAKPAUtagMIXERCAPS@@K@Z| PROC ; CAudioMixerManager::get_DeviceCaps

; 735  : {

  00000		 |$LN9@get_Device|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M34851|
  00004	e1a05001	 mov         r5, r1
  00008	e1a04000	 mov         r4, r0

; 736  :     UNREFERENCED_PARAMETER(dwSize);
; 737  : 
; 738  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+get_DeviceCaps()\r\n"));
; 739  : 
; 740  :     pCaps->wMid = MM_MICROSOFT;
; 741  :     pCaps->wPid = MM_MSFT_WSS_MIXER;
; 742  :     wcscpy(pCaps->szPname, get_AudioMixerName());

  0000c	e59f3074	 ldr         r3, [pc, #0x74]
  00010	e3a02001	 mov         r2, #1
  00014	e3a01011	 mov         r1, #0x11
  00018	e3a06000	 mov         r6, #0
  0001c	e5c52000	 strb        r2, [r5]
  00020	e5c56001	 strb        r6, [r5, #1]
  00024	e5c51002	 strb        r1, [r5, #2]
  00028	e5c56003	 strb        r6, [r5, #3]
  0002c	e5931000	 ldr         r1, [r3]
  00030	e2850008	 add         r0, r5, #8
  00034	eb000000	 bl          wcscpy

; 743  :     pCaps->vDriverVersion = get_AudioMixerVersion();

  00038	e3a03064	 mov         r3, #0x64
  0003c	e5c53004	 strb        r3, [r5, #4]
  00040	e5c56005	 strb        r6, [r5, #5]
  00044	e5c56006	 strb        r6, [r5, #6]
  00048	e5c56007	 strb        r6, [r5, #7]

; 744  :     pCaps->cDestinations = m_counterDestinationLines;

  0004c	e1d400b0	 ldrh        r0, [r4]

; 745  :     pCaps->fdwSupport = 0;

  00050	e5c56048	 strb        r6, [r5, #0x48]
  00054	e5c56049	 strb        r6, [r5, #0x49]
  00058	e1a03420	 mov         r3, r0, lsr #8
  0005c	e1a02820	 mov         r2, r0, lsr #16
  00060	e1a01c20	 mov         r1, r0, lsr #24
  00064	e5c5004c	 strb        r0, [r5, #0x4C]
  00068	e5c5304d	 strb        r3, [r5, #0x4D]
  0006c	e5c5204e	 strb        r2, [r5, #0x4E]
  00070	e5c5104f	 strb        r1, [r5, #0x4F]
  00074	e5c5604a	 strb        r6, [r5, #0x4A]
  00078	e5c5604b	 strb        r6, [r5, #0x4B]

; 746  : 
; 747  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-get_DeviceCaps()\r\n"));
; 748  : 
; 749  :     return MMSYSERR_NOERROR;

  0007c	e3a00000	 mov         r0, #0

; 750  : }

  00080	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00084	e12fff1e	 bx          lr
  00088		 |$LN10@get_Device|
  00088		 |$LN11@get_Device|
  00088	00000000	 DCD         |?pDeviceName@?1??get_AudioMixerName@CAudioMixerManager@@QBAPBGXZ@4PBGB|
  0008c		 |$M34852|

			 ENDP  ; |?get_DeviceCaps@CAudioMixerManager@@IAAKPAUtagMIXERCAPS@@K@Z|, CAudioMixerManager::get_DeviceCaps

	EXPORT	|?notify_AudioMixerCallbacks@CAudioMixerManager@@QBAXKK@Z| ; CAudioMixerManager::notify_AudioMixerCallbacks

  00000			 AREA	 |.pdata|, PDATA
|$T34869| DCD	|$LN10@notify_Aud|
	DCD	0x40001702
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?notify_AudioMixerCallbacks@CAudioMixerManager@@QBAXKK@Z| PROC ; CAudioMixerManager::notify_AudioMixerCallbacks

; 761  : {

  00000		 |$LN10@notify_Aud|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M34866|
  00008	e1a06002	 mov         r6, r2
  0000c	e1a07001	 mov         r7, r1

; 762  :     DEBUGMSG(ZONE_FUNCTION,
; 763  :         (L"WAV:+notify_AudioMixerCallbacks(msg=%d, ControlId=0x%08X)\r\n",
; 764  :         msg, ControlId));
; 765  : 
; 766  :     AudioMixerCallback_t *pAudioCB = m_pAudioMixerCallbacks;

  00010	e5903020	 ldr         r3, [r0, #0x20]
  00014	e1b04003	 movs        r4, r3

; 767  :     while (pAudioCB)

  00018	0a00000c	 beq         |$LN2@notify_Aud|
  0001c	e3a08000	 mov         r8, #0
  00020		 |$LL3@notify_Aud|

; 768  :         {
; 769  :         if (pAudioCB->pfnCallback)

  00020	e5943004	 ldr         r3, [r4, #4]
  00024	e1b05003	 movs        r5, r3

; 770  :             {
; 771  :             pAudioCB->pfnCallback(pAudioCB->hmx, msg, 0, ControlId, 0);

  00028	15940000	 ldrne       r0, [r4]
  0002c	11a03006	 movne       r3, r6
  00030	13a02000	 movne       r2, #0
  00034	11a01007	 movne       r1, r7
  00038	158d8000	 strne       r8, [sp]
  0003c	11a0e00f	 movne       lr, pc
  00040	112fff15	 bxne        r5

; 772  :             }
; 773  :         pAudioCB = pAudioCB->pNext;

  00044	e5943008	 ldr         r3, [r4, #8]
  00048	e1b04003	 movs        r4, r3
  0004c	1afffff3	 bne         |$LL3@notify_Aud|
  00050		 |$LN2@notify_Aud|

; 774  :         }
; 775  : 
; 776  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-notify_AudioMixerCallbacks()\r\n"));
; 777  : 
; 778  : }

  00050	e28dd004	 add         sp, sp, #4
  00054	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00058	e12fff1e	 bx          lr
  0005c		 |$M34867|

			 ENDP  ; |?notify_AudioMixerCallbacks@CAudioMixerManager@@QBAXKK@Z|, CAudioMixerManager::notify_AudioMixerCallbacks

	EXPORT	|?query_AudioLineByLineId@CAudioMixerManager@@IBAPAVCAudioLineBase@@G@Z| ; CAudioMixerManager::query_AudioLineByLineId

  00000			 AREA	 |.pdata|, PDATA
|$T34881| DCD	|$LN7@query_Audi@5|
	DCD	0x40001001
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?query_AudioLineByLineId@CAudioMixerManager@@IBAPAVCAudioLineBase@@G@Z| PROC ; CAudioMixerManager::query_AudioLineByLineId

; 179  : {

  00000		 |$LN7@query_Audi@5|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M34878|
  00004	e1a02001	 mov         r2, r1

; 180  :     DEBUGMSG(ZONE_FUNCTION,
; 181  :         (L"WAV:+query_AudioLineByLineId(LineId=%d)\r\n", LineId)
; 182  :         );
; 183  : 
; 184  :     // check if the AudioLine is a source or destination AudioLine
; 185  :     //
; 186  :     CAudioLineBase* pAudioLine = NULL;
; 187  :     if (MXSOURCEID(LineId) == kNoSource)

  00008	e3c230ff	 bic         r3, r2, #0xFF
  0000c	e3530cff	 cmp         r3, #0xFF, 24
  00010	1a000003	 bne         |$LN2@query_Audi@5|

; 188  :         {
; 189  :         // destination AudioLine
; 190  :         //
; 191  :         pAudioLine = query_AudioLineByDestinationId(MXDESTINATIONID(LineId));

  00014	e20210ff	 and         r1, r2, #0xFF
  00018	eb000000	 bl          |?query_AudioLineByDestinationId@CAudioMixerManager@@IBAPAVCAudioLineBase@@G@Z|

; 201  :         }
; 202  : 
; 203  :     DEBUGMSG(ZONE_FUNCTION,
; 204  :         (L"WAV:-query_AudioLineByLineId(pAudioLine=0x%08X)\r\n", pAudioLine)
; 205  :         );
; 206  : 
; 207  :     return pAudioLine;
; 208  : }

  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$LN2@query_Audi@5|

; 192  :         }
; 193  :     else
; 194  :         {
; 195  :         // source/destination AudioLine
; 196  :         //
; 197  :         pAudioLine = query_AudioLineBySourceAndDestinationId(
; 198  :                         MXSOURCEID(LineId),
; 199  :                         MXDESTINATIONID(LineId)
; 200  :                         );

  00024	e1a03422	 mov         r3, r2, lsr #8
  00028	e1a01803	 mov         r1, r3, lsl #16
  0002c	e1a01821	 mov         r1, r1, lsr #16
  00030	e20220ff	 and         r2, r2, #0xFF
  00034	eb000000	 bl          |?query_AudioLineBySourceAndDestinationId@CAudioMixerManager@@IBAPAVCAudioLineBase@@GG@Z|

; 201  :         }
; 202  : 
; 203  :     DEBUGMSG(ZONE_FUNCTION,
; 204  :         (L"WAV:-query_AudioLineByLineId(pAudioLine=0x%08X)\r\n", pAudioLine)
; 205  :         );
; 206  : 
; 207  :     return pAudioLine;
; 208  : }

  00038	e49de004	 ldr         lr, [sp], #4
  0003c	e12fff1e	 bx          lr
  00040		 |$M34879|

			 ENDP  ; |?query_AudioLineByLineId@CAudioMixerManager@@IBAPAVCAudioLineBase@@G@Z|, CAudioMixerManager::query_AudioLineByLineId

	EXPORT	|?get_LineInfo@CAudioMixerManager@@IAAKPAUtMIXERLINE@@K@Z| ; CAudioMixerManager::get_LineInfo
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\audiolin.h

  00000			 AREA	 |.pdata|, PDATA
|$T34923| DCD	|$LN31@get_LineIn|
	DCD	0x40006901
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\mixermgr.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_LineInfo@CAudioMixerManager@@IAAKPAUtMIXERLINE@@K@Z| PROC ; CAudioMixerManager::get_LineInfo

; 588  : {

  00000		 |$LN31@get_LineIn|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M34920|
  00004	e1a06001	 mov         r6, r1
  00008	e1a07000	 mov         r7, r0

; 589  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+get_LineInfo()\r\n"));
; 590  : 
; 591  :     // NOTE:
; 592  :     //   pDetail is validated by API - points to accessible,
; 593  :     // properly sized MIXERLINE structure
; 594  : 
; 595  :     CAudioLineBase const* pAudioLine = NULL;
; 596  :     MMRESULT mmRet = MIXERR_INVALLINE;

  0000c	e3a08b01	 mov         r8, #1, 22

; 597  : 
; 598  :     switch (dwFlags & MIXER_GETLINEINFOF_QUERYMASK)

  00010	e212300f	 ands        r3, r2, #0xF
  00014	0a00004a	 beq         |$LN7@get_LineIn|
  00018	e3530001	 cmp         r3, #1
  0001c	0a000033	 beq         |$LN5@get_LineIn|
  00020	e3530002	 cmp         r3, #2
  00024	0a000025	 beq         |$LN6@get_LineIn|
  00028	e3530003	 cmp         r3, #3
  0002c	0a000019	 beq         |$LN4@get_LineIn|
  00030	e3530004	 cmp         r3, #4

; 631  : 
; 632  :         default:
; 633  :             DEBUGMSG(ZONE_MIXER, (L"WAV:get_LineInfo\r\n"));
; 634  :             mmRet = MMSYSERR_INVALPARAM;

  00034	13a0800b	 movne       r8, #0xB
  00038	1a000056	 bne         |$LN1@get_LineIn|
  0003c	e597300c	 ldr         r3, [r7, #0xC]
  00040	e3530000	 cmp         r3, #0
  00044	1243e004	 subne       lr, r3, #4
  00048	03a0e000	 moveq       lr, #0
  0004c	e35e0000	 cmp         lr, #0
  00050	0a000050	 beq         |$LN1@get_LineIn|
  00054	e5d600c8	 ldrb        r0, [r6, #0xC8]
  00058	e5d630c9	 ldrb        r3, [r6, #0xC9]
  0005c	e5d620ca	 ldrb        r2, [r6, #0xCA]
  00060	e5d610cb	 ldrb        r1, [r6, #0xCB]
  00064	e1803403	 orr         r3, r0, r3, lsl #8
  00068	e1833802	 orr         r3, r3, r2, lsl #16
  0006c	e1832c01	 orr         r2, r3, r1, lsl #24
  00070		 |$LL14@get_LineIn|
  00070	e59e3024	 ldr         r3, [lr, #0x24]
  00074	e1530002	 cmp         r3, r2
  00078	0a00003d	 beq         |$LN8@get_LineIn|
  0007c	e59e3004	 ldr         r3, [lr, #4]
  00080	e3530000	 cmp         r3, #0
  00084	1243e004	 subne       lr, r3, #4
  00088	03a0e000	 moveq       lr, #0
  0008c	e35e0000	 cmp         lr, #0
  00090	1afffff6	 bne         |$LL14@get_LineIn|

; 626  : 
; 627  :         case MIXER_GETLINEINFOF_TARGETTYPE:
; 628  :             DEBUGMSG(ZONE_MIXER, (L"WAV:MXDM_SETCONTROLDETAILS\r\n"));
; 629  :             pAudioLine = query_AudioLineByTargetType(pDetail->Target.dwType);
; 630  :             break;

  00094	ea000036	 b           |$LN8@get_LineIn|
  00098		 |$LN4@get_LineIn|

; 619  : 
; 620  :         case MIXER_GETLINEINFOF_COMPONENTTYPE:
; 621  :             DEBUGMSG(ZONE_MIXER, (L"WAV:MXDM_SETCONTROLDETAILS\r\n"));
; 622  :             pAudioLine = query_AudioLineByComponentType(
; 623  :                             pDetail->dwComponentType
; 624  :                             );

  00098	e5d60018	 ldrb        r0, [r6, #0x18]
  0009c	e5d63019	 ldrb        r3, [r6, #0x19]
  000a0	e5d6201a	 ldrb        r2, [r6, #0x1A]
  000a4	e5d6101b	 ldrb        r1, [r6, #0x1B]
  000a8	e1803403	 orr         r3, r0, r3, lsl #8
  000ac	e1833802	 orr         r3, r3, r2, lsl #16
  000b0	e1831c01	 orr         r1, r3, r1, lsl #24
  000b4	e1a00007	 mov         r0, r7
  000b8	eb000000	 bl          |?query_AudioLineByComponentType@CAudioMixerManager@@IBAPAVCAudioLineBase@@K@Z|

; 625  :             break;

  000bc	ea00002b	 b           |$LN28@get_LineIn|
  000c0		 |$LN6@get_LineIn|

; 605  :             break;
; 606  : 
; 607  :         case MIXER_GETLINEINFOF_LINEID:
; 608  :             DEBUGMSG(ZONE_MIXER, (L"WAV:MIXER_GETLINEINFOF_LINEID\r\n"));
; 609  :             pAudioLine = query_AudioLineByLineId((WORD)pDetail->dwLineID);

  000c0	e5d6000c	 ldrb        r0, [r6, #0xC]
  000c4	e5d6300d	 ldrb        r3, [r6, #0xD]
  000c8	e5d6200e	 ldrb        r2, [r6, #0xE]
  000cc	e5d6100f	 ldrb        r1, [r6, #0xF]
  000d0	e1803403	 orr         r3, r0, r3, lsl #8
  000d4	e1833802	 orr         r3, r3, r2, lsl #16
  000d8	e1833c01	 orr         r3, r3, r1, lsl #24
  000dc	e1a01803	 mov         r1, r3, lsl #16
  000e0	e1a01821	 mov         r1, r1, lsr #16
  000e4	e1a00007	 mov         r0, r7
  000e8	eb000000	 bl          |?query_AudioLineByLineId@CAudioMixerManager@@IBAPAVCAudioLineBase@@G@Z|

; 610  :             break;

  000ec	ea00001f	 b           |$LN28@get_LineIn|
  000f0		 |$LN5@get_LineIn|

; 611  : 
; 612  :         case MIXER_GETLINEINFOF_SOURCE:
; 613  :             DEBUGMSG(ZONE_MIXER, (L"WAV:MIXER_GETLINEINFOF_SOURCE\r\n"));
; 614  :             pAudioLine = query_AudioLineBySourceAndDestinationId(
; 615  :                             (WORD)pDetail->dwSource,
; 616  :                             (WORD)pDetail->dwDestination
; 617  :                             );

  000f0	e5d60004	 ldrb        r0, [r6, #4]
  000f4	e5d62005	 ldrb        r2, [r6, #5]
  000f8	e5d61008	 ldrb        r1, [r6, #8]
  000fc	e5d63009	 ldrb        r3, [r6, #9]
  00100	e5d64006	 ldrb        r4, [r6, #6]
  00104	e5d6500a	 ldrb        r5, [r6, #0xA]
  00108	e5d6e00b	 ldrb        lr, [r6, #0xB]
  0010c	e1802402	 orr         r2, r0, r2, lsl #8
  00110	e5d60007	 ldrb        r0, [r6, #7]
  00114	e1811403	 orr         r1, r1, r3, lsl #8
  00118	e1823804	 orr         r3, r2, r4, lsl #16
  0011c	e1812805	 orr         r2, r1, r5, lsl #16
  00120	e1833c00	 orr         r3, r3, r0, lsl #24
  00124	e1821c0e	 orr         r1, r2, lr, lsl #24
  00128	e1a02803	 mov         r2, r3, lsl #16
  0012c	e1a01801	 mov         r1, r1, lsl #16
  00130	e1a02822	 mov         r2, r2, lsr #16
  00134	e1a01821	 mov         r1, r1, lsr #16
  00138	e1a00007	 mov         r0, r7
  0013c	eb000000	 bl          |?query_AudioLineBySourceAndDestinationId@CAudioMixerManager@@IBAPAVCAudioLineBase@@GG@Z|

; 618  :             break;

  00140	ea00000a	 b           |$LN28@get_LineIn|
  00144		 |$LN7@get_LineIn|

; 599  :         {
; 600  :         case MIXER_GETLINEINFOF_DESTINATION:
; 601  :             DEBUGMSG(ZONE_MIXER, (L"WAV:MIXER_GETLINEINFOF_DESTINATION\r\n"));
; 602  :             pAudioLine = query_AudioLineByDestinationId(
; 603  :                              (WORD)pDetail->dwDestination
; 604  :                              );

  00144	e5d60004	 ldrb        r0, [r6, #4]
  00148	e5d63005	 ldrb        r3, [r6, #5]
  0014c	e5d62006	 ldrb        r2, [r6, #6]
  00150	e5d61007	 ldrb        r1, [r6, #7]
  00154	e1803403	 orr         r3, r0, r3, lsl #8
  00158	e1833802	 orr         r3, r3, r2, lsl #16
  0015c	e1833c01	 orr         r3, r3, r1, lsl #24
  00160	e1a01803	 mov         r1, r3, lsl #16
  00164	e1a01821	 mov         r1, r1, lsr #16
  00168	e1a00007	 mov         r0, r7
  0016c	eb000000	 bl          |?query_AudioLineByDestinationId@CAudioMixerManager@@IBAPAVCAudioLineBase@@G@Z|
  00170		 |$LN28@get_LineIn|
  00170	e1a0e000	 mov         lr, r0
  00174		 |$LN8@get_LineIn|

; 635  :         }
; 636  : 
; 637  :     if (pAudioLine)

  00174	e35e0000	 cmp         lr, #0
  00178	0a000006	 beq         |$LN1@get_LineIn|

; 638  :         {
; 639  :         pAudioLine->copy_LineInfo(pDetail);

  0017c	e59e3000	 ldr         r3, [lr]
  00180	e1a01006	 mov         r1, r6
  00184	e1a0000e	 mov         r0, lr
  00188	e5933010	 ldr         r3, [r3, #0x10]
  0018c	e1a0e00f	 mov         lr, pc
  00190	e12fff13	 bx          r3

; 640  :         mmRet = MMSYSERR_NOERROR;

  00194	e3a08000	 mov         r8, #0
  00198		 |$LN1@get_LineIn|

; 641  :         }
; 642  : 
; 643  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-get_LineInfo(mmRet=%d)\r\n", mmRet));
; 644  : 
; 645  :     return mmRet;
; 646  : }

  00198	e1a00008	 mov         r0, r8
  0019c	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  001a0	e12fff1e	 bx          lr
  001a4		 |$M34921|

			 ENDP  ; |?get_LineInfo@CAudioMixerManager@@IAAKPAUtMIXERLINE@@K@Z|, CAudioMixerManager::get_LineInfo

	EXPORT	|?query_ControlByControlId@CAudioMixerManager@@IBAPAVCAudioControlBase@@K@Z| ; CAudioMixerManager::query_ControlByControlId
	IMPORT	|?query_ControlByIndex@CAudioLineBase@@QBAPAVCAudioControlBase@@H@Z| ; CAudioLineBase::query_ControlByIndex

  00000			 AREA	 |.pdata|, PDATA
|$T34936| DCD	|$LN6@query_Cont|
	DCD	0x40000e01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?query_ControlByControlId@CAudioMixerManager@@IBAPAVCAudioControlBase@@K@Z| PROC ; CAudioMixerManager::query_ControlByControlId

; 148  : {

  00000		 |$LN6@query_Cont|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M34933|
  00004	e1a05001	 mov         r5, r1

; 149  :     DEBUGMSG(ZONE_FUNCTION,
; 150  :         (L"WAV:+query_ControlByControlId(ControlId=0x%08X)\r\n", ControlId)
; 151  :         );
; 152  : 
; 153  :     // control id is composed of LineId and the ordinal position
; 154  :     // in the Audio Line
; 155  :     //
; 156  :     CAudioControlBase *pControl = NULL;
; 157  :     WORD LineId = MXCONTROLLINEID(ControlId);

  00008	e1a01825	 mov         r1, r5, lsr #16

; 158  :     CAudioLineBase *pLine = query_AudioLineByLineId(LineId);

  0000c	e3a04000	 mov         r4, #0
  00010	eb000000	 bl          |?query_AudioLineByLineId@CAudioMixerManager@@IBAPAVCAudioLineBase@@G@Z|
  00014	e3500000	 cmp         r0, #0

; 159  :     if (pLine)

  00018	0a000003	 beq         |$LN1@query_Cont|

; 160  :         {
; 161  :         pControl = pLine->query_ControlByIndex(MXCONTROLINDEX(ControlId));

  0001c	e1a01805	 mov         r1, r5, lsl #16
  00020	e1a01821	 mov         r1, r1, lsr #16
  00024	eb000000	 bl          |?query_ControlByIndex@CAudioLineBase@@QBAPAVCAudioControlBase@@H@Z|
  00028	e1a04000	 mov         r4, r0
  0002c		 |$LN1@query_Cont|

; 162  :         }
; 163  : 
; 164  :     DEBUGMSG(ZONE_FUNCTION,
; 165  :         (L"WAV:-query_ControlByControlId(pContro=0x%08X)\r\n", pControl)
; 166  :         );
; 167  : 
; 168  :     return pControl;
; 169  : }

  0002c	e1a00004	 mov         r0, r4
  00030	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00034	e12fff1e	 bx          lr
  00038		 |$M34934|

			 ENDP  ; |?query_ControlByControlId@CAudioMixerManager@@IBAPAVCAudioControlBase@@K@Z|, CAudioMixerManager::query_ControlByControlId

	EXPORT	|?put_ControlDetails@CAudioMixerManager@@IAAKPAUtMIXERCONTROLDETAILS@@K@Z| ; CAudioMixerManager::put_ControlDetails
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\audioctrl.h

  00000			 AREA	 |.pdata|, PDATA
|$T34954| DCD	|$LN8@put_Contro|
	DCD	0x40002001
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\mixermgr.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?put_ControlDetails@CAudioMixerManager@@IAAKPAUtMIXERCONTROLDETAILS@@K@Z| PROC ; CAudioMixerManager::put_ControlDetails

; 386  : {

  00000		 |$LN8@put_Contro|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M34951|
  00004	e1a08002	 mov         r8, r2
  00008	e1a06001	 mov         r6, r1
  0000c	e1a07000	 mov         r7, r0

; 387  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+put_ControlDetails(%d)\r\n",
; 388  :         pDetail->dwControlID));
; 389  : 
; 390  :     // NOTE:
; 391  :     //   API guarantees that pDetail points to accessible, aligned, properly
; 392  :     // sized MIXERCONTROLDETAILS structure
; 393  :     //
; 394  :     DWORD mmRet = MIXERR_INVALCONTROL;
; 395  :     CAudioControlBase *pControl = query_ControlByControlId(
; 396  :                                       pDetail->dwControlID
; 397  :                                       );

  00010	e5d64004	 ldrb        r4, [r6, #4]
  00014	e5d63005	 ldrb        r3, [r6, #5]
  00018	e5d6e006	 ldrb        lr, [r6, #6]
  0001c	e5d65007	 ldrb        r5, [r6, #7]
  00020	e1843403	 orr         r3, r4, r3, lsl #8
  00024	e183380e	 orr         r3, r3, lr, lsl #16
  00028	e3a02b01	 mov         r2, #1, 22
  0002c	e1831c05	 orr         r1, r3, r5, lsl #24
  00030	e3824001	 orr         r4, r2, #1
  00034	eb000000	 bl          |?query_ControlByControlId@CAudioMixerManager@@IBAPAVCAudioControlBase@@K@Z|
  00038	e1b05000	 movs        r5, r0

; 398  :     if (pControl)

  0003c	0a00000c	 beq         |$LN1@put_Contro|

; 399  :     {
; 400  :         mmRet = pControl->put_Value(pDetail, dwFlags);

  00040	e5953000	 ldr         r3, [r5]
  00044	e1a02008	 mov         r2, r8
  00048	e1a01006	 mov         r1, r6
  0004c	e593300c	 ldr         r3, [r3, #0xC]
  00050	e1a00005	 mov         r0, r5
  00054	e1a0e00f	 mov         lr, pc
  00058	e12fff13	 bx          r3

; 401  :         notify_AudioMixerCallbacks(MM_MIXM_CONTROL_CHANGE,
; 402  :             pControl->get_ControlId());

  0005c	e595200c	 ldr         r2, [r5, #0xC]
  00060	e3a03c03	 mov         r3, #3, 24
  00064	e1a04000	 mov         r4, r0
  00068	e38310d1	 orr         r1, r3, #0xD1
  0006c	e1a00007	 mov         r0, r7
  00070	eb000000	 bl          |?notify_AudioMixerCallbacks@CAudioMixerManager@@QBAXKK@Z|
  00074		 |$LN1@put_Contro|

; 403  :     }
; 404  : 
; 405  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-put_ControlDetails(mmRet=0x%08X)\r\n",
; 406  :         mmRet));
; 407  : 
; 408  :     return mmRet;
; 409  : }

  00074	e1a00004	 mov         r0, r4
  00078	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  0007c	e12fff1e	 bx          lr
  00080		 |$M34952|

			 ENDP  ; |?put_ControlDetails@CAudioMixerManager@@IAAKPAUtMIXERCONTROLDETAILS@@K@Z|, CAudioMixerManager::put_ControlDetails

	EXPORT	|?get_ControlDetails@CAudioMixerManager@@IAAKPAUtMIXERCONTROLDETAILS@@K@Z| ; CAudioMixerManager::get_ControlDetails

  00000			 AREA	 |.pdata|, PDATA
|$T34968| DCD	|$LN6@get_Contro@3|
	DCD	0x40001901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_ControlDetails@CAudioMixerManager@@IAAKPAUtMIXERCONTROLDETAILS@@K@Z| PROC ; CAudioMixerManager::get_ControlDetails

; 420  : {

  00000		 |$LN6@get_Contro@3|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M34965|
  00004	e1a07002	 mov         r7, r2
  00008	e1a06001	 mov         r6, r1

; 421  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+get_ControlDetails(%d)\r\n",
; 422  :         pDetail->dwControlID));
; 423  : 
; 424  :     // NOTE:
; 425  :     //   API guarantees that pDetail points to accessible, aligned, properly
; 426  :     // sized MIXERCONTROLDETAILS structure
; 427  :     //
; 428  :     DWORD mmRet = MIXERR_INVALCONTROL;
; 429  :     CAudioControlBase *pControl = query_ControlByControlId(
; 430  :                                     pDetail->dwControlID
; 431  :                                     );

  0000c	e5d64004	 ldrb        r4, [r6, #4]
  00010	e5d63005	 ldrb        r3, [r6, #5]
  00014	e5d6e006	 ldrb        lr, [r6, #6]
  00018	e5d65007	 ldrb        r5, [r6, #7]
  0001c	e1843403	 orr         r3, r4, r3, lsl #8
  00020	e183380e	 orr         r3, r3, lr, lsl #16
  00024	e3a02b01	 mov         r2, #1, 22
  00028	e1831c05	 orr         r1, r3, r5, lsl #24
  0002c	e3824001	 orr         r4, r2, #1
  00030	eb000000	 bl          |?query_ControlByControlId@CAudioMixerManager@@IBAPAVCAudioControlBase@@K@Z|
  00034	e3500000	 cmp         r0, #0

; 432  :     if (pControl)

  00038	0a000006	 beq         |$LN1@get_Contro@3|

; 433  :     {
; 434  :         mmRet = pControl->get_Value(pDetail, dwFlags);

  0003c	e5903000	 ldr         r3, [r0]
  00040	e1a02007	 mov         r2, r7
  00044	e1a01006	 mov         r1, r6
  00048	e5933010	 ldr         r3, [r3, #0x10]
  0004c	e1a0e00f	 mov         lr, pc
  00050	e12fff13	 bx          r3
  00054	e1a04000	 mov         r4, r0
  00058		 |$LN1@get_Contro@3|

; 435  :     }
; 436  : 
; 437  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-get_ControlDetails(mmRet=0x%08X)\r\n",
; 438  :         mmRet));
; 439  : 
; 440  :     return mmRet;
; 441  : }

  00058	e1a00004	 mov         r0, r4
  0005c	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$M34966|

			 ENDP  ; |?get_ControlDetails@CAudioMixerManager@@IAAKPAUtMIXERCONTROLDETAILS@@K@Z|, CAudioMixerManager::get_ControlDetails

	EXPORT	|?get_LineControls@CAudioMixerManager@@IAAKPAUtMIXERLINECONTROLS@@K@Z| ; CAudioMixerManager::get_LineControls
	EXPORT	|??_C@_1IE@EDFAIJA@?$AAW?$AAA?$AAV?$AA?3?$AAg?$AAe?$AAt?$AA_?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@EHPNOELP@?$AAW?$AAA?$AAV?$AA?3?$AAg?$AAe?$AAt?$AA_?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1MI@CJACGEIB@?$AAW?$AAA?$AAV?$AA?3?$AAg?$AAe?$AAt?$AA_?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAu?$AAn?$AAa?$AAb?$AAl?$AAe?$AAt?$AAo?$AA?5?$AAf@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@PBDJNCIJ@?$AAW?$AAA?$AAV?$AA?3?$AAg?$AAe?$AAt?$AA_?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAl?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@CMCLLJCP@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AAc?$AAo@| [ DATA ] ; `string'
	IMPORT	|?query_ControlByControlType@CAudioLineBase@@QBAPAVCAudioControlBase@@K@Z| ; CAudioLineBase::query_ControlByControlType
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\audioctrl.h

  00000			 AREA	 |.pdata|, PDATA
|$T35012| DCD	|$LN40@get_LineCo|
	DCD	0x4000c801

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IE@EDFAIJA@?$AAW?$AAA?$AAV?$AA?3?$AAg?$AAe?$AAt?$AA_?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo@| DCB "W"
	DCB	0x0, "A", 0x0, "V", 0x0, ":", 0x0, "g", 0x0, "e", 0x0, "t"
	DCB	0x0, "_", 0x0, "L", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "v"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "c"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "u", 0x0, "n", 0x0, "t"
	DCB	0x0, ",", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "p", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, "=", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "f", 0x0, "o", 0x0, "u", 0x0, "n", 0x0, "d"
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@EHPNOELP@?$AAW?$AAA?$AAV?$AA?3?$AAg?$AAe?$AAt?$AA_?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo@| DCB "W"
	DCB	0x0, "A", 0x0, "V", 0x0, ":", 0x0, "g", 0x0, "e", 0x0, "t"
	DCB	0x0, "_", 0x0, "L", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "v"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "c"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, " ", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1MI@CJACGEIB@?$AAW?$AAA?$AAV?$AA?3?$AAg?$AAe?$AAt?$AA_?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAu?$AAn?$AAa?$AAb?$AAl?$AAe?$AAt?$AAo?$AA?5?$AAf@| DCB "W"
	DCB	0x0, "A", 0x0, "V", 0x0, ":", 0x0, "g", 0x0, "e", 0x0, "t"
	DCB	0x0, "_", 0x0, "L", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "u", 0x0, "n", 0x0, "a"
	DCB	0x0, "b", 0x0, "l", 0x0, "e", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "f", 0x0, "i", 0x0, "n", 0x0, "d", 0x0, " ", 0x0, "c"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, " ", 0x0, "w", 0x0, "i", 0x0, "t", 0x0, "h", 0x0, " "
	DCB	0x0, "m", 0x0, "a", 0x0, "t", 0x0, "c", 0x0, "h", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "t", 0x0, "y", 0x0, "p"
	DCB	0x0, "e", 0x0, ",", 0x0, " ", 0x0, "L", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, "I", 0x0, "d", 0x0, "=", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X", 0x0, ",", 0x0, " "
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "T", 0x0, "y", 0x0, "p", 0x0, "e", 0x0, "="
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@PBDJNCIJ@?$AAW?$AAA?$AAV?$AA?3?$AAg?$AAe?$AAt?$AA_?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAl?$AAi@| DCB "W"
	DCB	0x0, "A", 0x0, "V", 0x0, ":", 0x0, "g", 0x0, "e", 0x0, "t"
	DCB	0x0, "_", 0x0, "L", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "v"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "l"
	DCB	0x0, "i", 0x0, "n", 0x0, "e", 0x0, " ", 0x0, "I", 0x0, "D"
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@CMCLLJCP@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AAc?$AAo@| DCB "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "M", 0x0, "i", 0x0, "x", 0x0, "e"
	DCB	0x0, "r", 0x0, "L", 0x0, "i", 0x0, "n", 0x0, "e", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "s", 0x0, ":", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, " ", 0x0, "c"
	DCB	0x0, "o", 0x0, "u", 0x0, "n", 0x0, "t", 0x0, " ", 0x0, "m"
	DCB	0x0, "u", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "b", 0x0, "e"
	DCB	0x0, " ", 0x0, "n", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "z"
	DCB	0x0, "e", 0x0, "r", 0x0, "o", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\mixermgr.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?get_LineControls@CAudioMixerManager@@IAAKPAUtMIXERLINECONTROLS@@K@Z| PROC ; CAudioMixerManager::get_LineControls

; 452  : {

  00000		 |$LN40@get_LineCo|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M35009|
  00004	e1a07001	 mov         r7, r1
  00008	e1a06000	 mov         r6, r0

; 453  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+get_LineControls()\r\n"));
; 454  : 
; 455  :     WORD ControlCount;
; 456  :     PMIXERCONTROL pamxctrl;
; 457  :     CAudioLineBase *pAudioLine = NULL;
; 458  :     CAudioControlBase *pControl = NULL;
; 459  :     MMRESULT mmRet = MIXERR_INVALLINE;
; 460  : 
; 461  :     if (pDetail->cControls < 1)

  0000c	e5d7500c	 ldrb        r5, [r7, #0xC]
  00010	e5d7300d	 ldrb        r3, [r7, #0xD]
  00014	e5d7e00e	 ldrb        lr, [r7, #0xE]
  00018	e5d7400f	 ldrb        r4, [r7, #0xF]
  0001c	e1853403	 orr         r3, r5, r3, lsl #8
  00020	e183380e	 orr         r3, r3, lr, lsl #16
  00024	e1835c04	 orr         r5, r3, r4, lsl #24
  00028	e3550001	 cmp         r5, #1
  0002c	e3a04b01	 mov         r4, #1, 22
  00030	2a000006	 bcs         |$LN15@get_LineCo|

; 462  :         {
; 463  :         RETAILMSG(ZONE_ERROR, (L"GetMixerLineControls: control count must "
; 464  :             L"be non zero\r\n"));

  00034	e59f32d0	 ldr         r3, [pc, #0x2D0]
  00038	e5933440	 ldr         r3, [r3, #0x440]
  0003c	e3130902	 tst         r3, #2, 18
  00040	0a0000ad	 beq         |$cleanUp$34177|
  00044	e59f02d0	 ldr         r0, [pc, #0x2D0]
  00048	eb000000	 bl          NKDbgPrintfW

; 465  :         goto cleanUp;

  0004c	ea0000aa	 b           |$cleanUp$34177|
  00050		 |$LN15@get_LineCo|

; 466  :         }
; 467  : 
; 468  :     switch (dwFlags & MIXER_GETLINECONTROLSF_QUERYMASK)

  00050	e212300f	 ands        r3, r2, #0xF
  00054	0a00006b	 beq         |$LN11@get_LineCo|
  00058	e3530001	 cmp         r3, #1
  0005c	0a00003a	 beq         |$LN5@get_LineCo|
  00060	e3530002	 cmp         r3, #2
  00064	1a0000a4	 bne         |$cleanUp$34177|

; 536  : 
; 537  :         case MIXER_GETLINECONTROLSF_ONEBYTYPE:
; 538  :             DEBUGMSG(ZONE_MIXER, (L"WAV:MIXER_GETLINECONTROLSF_ONEBYTYPE\r\n"));
; 539  : 
; 540  :             // get matching audio line id
; 541  :             //
; 542  :             pAudioLine = query_AudioLineByLineId((WORD)pDetail->dwLineID);

  00068	e5d70004	 ldrb        r0, [r7, #4]
  0006c	e5d73005	 ldrb        r3, [r7, #5]
  00070	e5d72006	 ldrb        r2, [r7, #6]
  00074	e5d71007	 ldrb        r1, [r7, #7]
  00078	e1803403	 orr         r3, r0, r3, lsl #8
  0007c	e1833802	 orr         r3, r3, r2, lsl #16
  00080	e1834c01	 orr         r4, r3, r1, lsl #24
  00084	e1a01804	 mov         r1, r4, lsl #16
  00088	e1a01821	 mov         r1, r1, lsr #16
  0008c	e1a00006	 mov         r0, r6
  00090	eb000000	 bl          |?query_AudioLineByLineId@CAudioMixerManager@@IBAPAVCAudioLineBase@@G@Z|
  00094	e1b0e000	 movs        lr, r0

; 543  :             if (pAudioLine == NULL)
; 544  :                 {
; 545  :                 RETAILMSG(ZONE_ERROR, (L"WAV:get_LineControls: "
; 546  :                     L"invalid line ID 0x%08X\r\n", pDetail->dwLineID)
; 547  :                     );
; 548  :                 mmRet = MIXERR_INVALLINE;
; 549  :                 break;

  00098	0a000067	 beq         |$LN36@get_LineCo|

; 550  :                 }
; 551  : 
; 552  :             // get control first control which matches the control type
; 553  :             //
; 554  :             pControl = pAudioLine->query_ControlByControlType(
; 555  :                             pDetail->dwControlType
; 556  :                             );

  0009c	e5d70008	 ldrb        r0, [r7, #8]
  000a0	e5d73009	 ldrb        r3, [r7, #9]
  000a4	e5d7200a	 ldrb        r2, [r7, #0xA]
  000a8	e5d7100b	 ldrb        r1, [r7, #0xB]
  000ac	e1803403	 orr         r3, r0, r3, lsl #8
  000b0	e1833802	 orr         r3, r3, r2, lsl #16
  000b4	e1831c01	 orr         r1, r3, r1, lsl #24
  000b8	e1a0000e	 mov         r0, lr
  000bc	eb000000	 bl          |?query_ControlByControlType@CAudioLineBase@@QBAPAVCAudioControlBase@@K@Z|
  000c0	e1b0e000	 movs        lr, r0

; 557  : 
; 558  :             if (pControl == NULL)

  000c4	1a000013	 bne         |$LN1@get_LineCo|

; 559  :                 {
; 560  :                 RETAILMSG(ZONE_ERROR, (L"WAV:get_LineControls: "
; 561  :                     L"unableto find control with matching type, "
; 562  :                     L"LineId=0x%08X, ControlType=0x%08X\r\n",
; 563  :                     pDetail->dwLineID, pDetail->dwControlType)
; 564  :                     );

  000c8	e59f323c	 ldr         r3, [pc, #0x23C]
  000cc	e5933440	 ldr         r3, [r3, #0x440]
  000d0	e3130902	 tst         r3, #2, 18
  000d4	0a00006b	 beq         |$LN22@get_LineCo|
  000d8	e5d70008	 ldrb        r0, [r7, #8]
  000dc	e5d72009	 ldrb        r2, [r7, #9]
  000e0	e5d71004	 ldrb        r1, [r7, #4]
  000e4	e5d73005	 ldrb        r3, [r7, #5]
  000e8	e5d7500a	 ldrb        r5, [r7, #0xA]
  000ec	e5d76006	 ldrb        r6, [r7, #6]
  000f0	e5d7e00b	 ldrb        lr, [r7, #0xB]
  000f4	e5d74007	 ldrb        r4, [r7, #7]
  000f8	e1802402	 orr         r2, r0, r2, lsl #8
  000fc	e1811403	 orr         r1, r1, r3, lsl #8
  00100	e1823805	 orr         r3, r2, r5, lsl #16
  00104	e1811806	 orr         r1, r1, r6, lsl #16
  00108	e59f0208	 ldr         r0, [pc, #0x208]
  0010c	e1832c0e	 orr         r2, r3, lr, lsl #24
  00110	e1811c04	 orr         r1, r1, r4, lsl #24

; 565  :                 mmRet = MMSYSERR_INVALPARAM;
; 566  :                 break;

  00114	ea00005a	 b           |$LN37@get_LineCo|
  00118		 |$LN1@get_LineCo|

; 567  :                 }
; 568  : 
; 569  :             pControl->copy_ControlInfo(pDetail->pamxctrl);

  00118	e5d72014	 ldrb        r2, [r7, #0x14]
  0011c	e5d73015	 ldrb        r3, [r7, #0x15]
  00120	e5d71016	 ldrb        r1, [r7, #0x16]
  00124	e59e0000	 ldr         r0, [lr]
  00128	e1823403	 orr         r3, r2, r3, lsl #8
  0012c	e5d72017	 ldrb        r2, [r7, #0x17]
  00130	e5904008	 ldr         r4, [r0, #8]
  00134	e1833801	 orr         r3, r3, r1, lsl #16
  00138	e1831c02	 orr         r1, r3, r2, lsl #24
  0013c	e1a0000e	 mov         r0, lr
  00140	e1a0e00f	 mov         lr, pc
  00144	e12fff14	 bx          r4

; 570  :             mmRet = MMSYSERR_NOERROR;

  00148	ea00006a	 b           |$LN6@get_LineCo|
  0014c		 |$LN5@get_LineCo|

; 511  :             break;
; 512  : 
; 513  :         case MIXER_GETLINECONTROLSF_ONEBYID:
; 514  :             DEBUGMSG(ZONE_MIXER, (L"WAV:MIXER_GETLINECONTROLSF_ONEBYID\r\n"));
; 515  : 
; 516  :             // go through the list of all registered controls and
; 517  :             // get the one which matches the control Id
; 518  :             //
; 519  :             pControl = query_ControlByControlId(pDetail->dwControlID);

  0014c	e5d70008	 ldrb        r0, [r7, #8]
  00150	e5d73009	 ldrb        r3, [r7, #9]
  00154	e5d7200a	 ldrb        r2, [r7, #0xA]
  00158	e5d7100b	 ldrb        r1, [r7, #0xB]
  0015c	e1803403	 orr         r3, r0, r3, lsl #8
  00160	e1833802	 orr         r3, r3, r2, lsl #16
  00164	e1831c01	 orr         r1, r3, r1, lsl #24
  00168	e1a00006	 mov         r0, r6
  0016c	eb000000	 bl          |?query_ControlByControlId@CAudioMixerManager@@IBAPAVCAudioControlBase@@K@Z|
  00170	e1b05000	 movs        r5, r0

; 520  : 
; 521  :             if (pControl == NULL)

  00174	1a00000e	 bne         |$LN4@get_LineCo|

; 522  :                 {
; 523  :                 RETAILMSG(ZONE_ERROR, (L"WAV:get_LineControls: "
; 524  :                     L"invalid control id 0x%08X\r\n", pDetail->dwControlID)
; 525  :                     );

  00178	e59f318c	 ldr         r3, [pc, #0x18C]
  0017c	e5933440	 ldr         r3, [r3, #0x440]
  00180	e3130902	 tst         r3, #2, 18
  00184	0a00003f	 beq         |$LN22@get_LineCo|
  00188	e5d71008	 ldrb        r1, [r7, #8]
  0018c	e5d73009	 ldrb        r3, [r7, #9]
  00190	e5d7200a	 ldrb        r2, [r7, #0xA]
  00194	e5d7e00b	 ldrb        lr, [r7, #0xB]
  00198	e1813403	 orr         r3, r1, r3, lsl #8
  0019c	e59f0170	 ldr         r0, [pc, #0x170]
  001a0	e1833802	 orr         r3, r3, r2, lsl #16
  001a4	e1831c0e	 orr         r1, r3, lr, lsl #24
  001a8	eb000000	 bl          NKDbgPrintfW
  001ac	e3a0400b	 mov         r4, #0xB
  001b0	ea000051	 b           |$cleanUp$34177|
  001b4		 |$LN4@get_LineCo|

; 526  :                 mmRet = MMSYSERR_INVALPARAM;
; 527  :                 break;
; 528  :                 }
; 529  : 
; 530  :             // copy control information
; 531  :             //
; 532  :             pControl->copy_ControlInfo(pDetail->pamxctrl);

  001b4	e5d72014	 ldrb        r2, [r7, #0x14]
  001b8	e5d73015	 ldrb        r3, [r7, #0x15]
  001bc	e5d71016	 ldrb        r1, [r7, #0x16]
  001c0	e5950000	 ldr         r0, [r5]
  001c4	e1823403	 orr         r3, r2, r3, lsl #8
  001c8	e5d72017	 ldrb        r2, [r7, #0x17]
  001cc	e5904008	 ldr         r4, [r0, #8]
  001d0	e1833801	 orr         r3, r3, r1, lsl #16
  001d4	e1831c02	 orr         r1, r3, r2, lsl #24
  001d8	e1a00005	 mov         r0, r5
  001dc	e1a0e00f	 mov         lr, pc
  001e0	e12fff14	 bx          r4

; 533  :             pDetail->dwLineID = MXCONTROLLINEID(pControl->get_ControlId());

  001e4	e1d500be	 ldrh        r0, [r5, #0xE]

; 534  :             mmRet = MMSYSERR_NOERROR;

  001e8	e1a03420	 mov         r3, r0, lsr #8
  001ec	e1a02820	 mov         r2, r0, lsr #16
  001f0	e1a01c20	 mov         r1, r0, lsr #24
  001f4	e5c73005	 strb        r3, [r7, #5]
  001f8	e5c72006	 strb        r2, [r7, #6]
  001fc	e5c71007	 strb        r1, [r7, #7]
  00200	e5c70004	 strb        r0, [r7, #4]

; 535  :             break;

  00204	ea00003b	 b           |$LN6@get_LineCo|
  00208		 |$LN11@get_LineCo|

; 469  :         {
; 470  :         case MIXER_GETLINECONTROLSF_ALL:
; 471  :             DEBUGMSG(ZONE_MIXER, (L"WAV:MIXER_GETLINECONTROLSF_ALL\r\n"));
; 472  : 
; 473  :             // get matching audio line id
; 474  :             //
; 475  :             pAudioLine = query_AudioLineByLineId((WORD)pDetail->dwLineID);

  00208	e5d70004	 ldrb        r0, [r7, #4]
  0020c	e5d73005	 ldrb        r3, [r7, #5]
  00210	e5d72006	 ldrb        r2, [r7, #6]
  00214	e5d71007	 ldrb        r1, [r7, #7]
  00218	e1803403	 orr         r3, r0, r3, lsl #8
  0021c	e1833802	 orr         r3, r3, r2, lsl #16
  00220	e1834c01	 orr         r4, r3, r1, lsl #24
  00224	e1a01804	 mov         r1, r4, lsl #16
  00228	e1a01821	 mov         r1, r1, lsr #16
  0022c	e1a00006	 mov         r0, r6
  00230	eb000000	 bl          |?query_AudioLineByLineId@CAudioMixerManager@@IBAPAVCAudioLineBase@@G@Z|
  00234	e1b06000	 movs        r6, r0

; 476  :             if (pAudioLine == NULL)

  00238	1a000007	 bne         |$LN10@get_LineCo|
  0023c		 |$LN36@get_LineCo|

; 477  :                 {
; 478  :                 RETAILMSG(ZONE_ERROR, (L"WAV:get_LineControls: "
; 479  :                     L"invalid line ID 0x%08X\r\n", pDetail->dwLineID)
; 480  :                     );

  0023c	e59f30c8	 ldr         r3, [pc, #0xC8]
  00240	e5933440	 ldr         r3, [r3, #0x440]
  00244	e3130902	 tst         r3, #2, 18
  00248	159f00c0	 ldrne       r0, [pc, #0xC0]
  0024c	11a01004	 movne       r1, r4
  00250	1b000000	 blne        NKDbgPrintfW

; 481  :                 mmRet = MIXERR_INVALLINE;

  00254	e3a04b01	 mov         r4, #1, 22

; 482  :                 break;

  00258	ea000027	 b           |$cleanUp$34177|
  0025c		 |$LN10@get_LineCo|

; 483  :                 }
; 484  : 
; 485  :             // make sure control count matches
; 486  :             //
; 487  :             ControlCount = pAudioLine->get_ControlCount();

  0025c	e1d641b0	 ldrh        r4, [r6, #0x10]

; 488  :             if (ControlCount != pDetail->cControls)

  00260	e1540005	 cmp         r4, r5
  00264	0a000009	 beq         |$LN9@get_LineCo|

; 489  :                 {
; 490  :                 RETAILMSG(ZONE_ERROR, (L"WAV:get_LineControls: "
; 491  :                     L"invalid control count, expect=%d, found%d\r\n",
; 492  :                     pDetail->cControls, ControlCount)
; 493  :                     );

  00268	e59f309c	 ldr         r3, [pc, #0x9C]
  0026c	e5933440	 ldr         r3, [r3, #0x440]
  00270	e3130902	 tst         r3, #2, 18
  00274	0a000003	 beq         |$LN22@get_LineCo|
  00278	e59f0088	 ldr         r0, [pc, #0x88]
  0027c	e1a02004	 mov         r2, r4
  00280	e1a01005	 mov         r1, r5
  00284		 |$LN37@get_LineCo|
  00284	eb000000	 bl          NKDbgPrintfW
  00288		 |$LN22@get_LineCo|

; 494  :                 mmRet = MMSYSERR_INVALPARAM;

  00288	e3a0400b	 mov         r4, #0xB

; 495  :                 break;

  0028c	ea00001a	 b           |$cleanUp$34177|
  00290		 |$LN9@get_LineCo|

; 496  :                 }
; 497  : 
; 498  :             // copy all control information
; 499  :             //
; 500  :             pamxctrl = pDetail->pamxctrl;

  00290	e5d70014	 ldrb        r0, [r7, #0x14]
  00294	e5d73015	 ldrb        r3, [r7, #0x15]
  00298	e5d72016	 ldrb        r2, [r7, #0x16]
  0029c	e5d71017	 ldrb        r1, [r7, #0x17]
  002a0	e1803403	 orr         r3, r0, r3, lsl #8
  002a4	e1833802	 orr         r3, r3, r2, lsl #16
  002a8	e1837c01	 orr         r7, r3, r1, lsl #24

; 501  :             for (WORD i = 0; i < ControlCount; ++i)

  002ac	e3a03000	 mov         r3, #0
  002b0	e3540000	 cmp         r4, #0
  002b4	0a00000f	 beq         |$LN6@get_LineCo|
  002b8	e3a05000	 mov         r5, #0
  002bc		 |$LL8@get_LineCo|

; 502  :                 {
; 503  :                 // UNDONE:
; 504  :                 //  Need to optimize
; 505  :                 //
; 506  :                 pAudioLine->query_ControlByIndex(i)->copy_ControlInfo(pamxctrl);

  002bc	e1a01003	 mov         r1, r3
  002c0	e1a00006	 mov         r0, r6
  002c4	eb000000	 bl          |?query_ControlByIndex@CAudioLineBase@@QBAPAVCAudioControlBase@@H@Z|
  002c8	e5903000	 ldr         r3, [r0]
  002cc	e1a01007	 mov         r1, r7
  002d0	e5933008	 ldr         r3, [r3, #8]
  002d4	e1a0e00f	 mov         lr, pc
  002d8	e12fff13	 bx          r3
  002dc	e2853001	 add         r3, r5, #1
  002e0	e1a03803	 mov         r3, r3, lsl #16
  002e4	e1a03823	 mov         r3, r3, lsr #16
  002e8	e1a05003	 mov         r5, r3
  002ec	e1530004	 cmp         r3, r4

; 507  :                 ++pamxctrl;

  002f0	e28770e4	 add         r7, r7, #0xE4
  002f4	3afffff0	 bcc         |$LL8@get_LineCo|
  002f8		 |$LN6@get_LineCo|

; 508  :                 }
; 509  : 
; 510  :             mmRet = MMSYSERR_NOERROR;

  002f8	e3a04000	 mov         r4, #0
  002fc		 |$cleanUp$34177|

; 571  :         }
; 572  : 
; 573  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-get_LineControls(mmRet=%d)\r\n", mmRet));
; 574  : 
; 575  : cleanUp:
; 576  :     return mmRet;
; 577  : }

  002fc	e1a00004	 mov         r0, r4
  00300	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00304	e12fff1e	 bx          lr
  00308		 |$LN41@get_LineCo|
  00308		 |$LN42@get_LineCo|
  00308	00000000	 DCD         |??_C@_1IE@EDFAIJA@?$AAW?$AAA?$AAV?$AA?3?$AAg?$AAe?$AAt?$AA_?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo@|
  0030c		 |$LN43@get_LineCo|
  0030c	00000000	 DCD         |dpCurSettings|
  00310		 |$LN44@get_LineCo|
  00310	00000000	 DCD         |??_C@_1FO@PBDJNCIJ@?$AAW?$AAA?$AAV?$AA?3?$AAg?$AAe?$AAt?$AA_?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAl?$AAi@|
  00314		 |$LN45@get_LineCo|
  00314	00000000	 DCD         |??_C@_1GE@EHPNOELP@?$AAW?$AAA?$AAV?$AA?3?$AAg?$AAe?$AAt?$AA_?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo@|
  00318		 |$LN46@get_LineCo|
  00318	00000000	 DCD         |??_C@_1MI@CJACGEIB@?$AAW?$AAA?$AAV?$AA?3?$AAg?$AAe?$AAt?$AA_?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAu?$AAn?$AAa?$AAb?$AAl?$AAe?$AAt?$AAo?$AA?5?$AAf@|
  0031c		 |$LN47@get_LineCo|
  0031c	00000000	 DCD         |??_C@_1GO@CMCLLJCP@?$AAG?$AAe?$AAt?$AAM?$AAi?$AAx?$AAe?$AAr?$AAL?$AAi?$AAn?$AAe?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAs?$AA?3?$AA?5?$AAc?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?5?$AAc?$AAo@|
  00320		 |$M35010|

			 ENDP  ; |?get_LineControls@CAudioMixerManager@@IAAKPAUtMIXERLINECONTROLS@@K@Z|, CAudioMixerManager::get_LineControls

	EXPORT	|?process_MixerMessage@CAudioMixerManager@@QAAHPAUMMDRV_MESSAGE_PARAMS@@PAK@Z| ; CAudioMixerManager::process_MixerMessage

  00000			 AREA	 |.pdata|, PDATA
|$T35042| DCD	|$LN26@process_Mi|
	DCD	0x40002e01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?process_MixerMessage@CAudioMixerManager@@QAAHPAUMMDRV_MESSAGE_PARAMS@@PAK@Z| PROC ; CAudioMixerManager::process_MixerMessage

; 789  : {

  00000		 |$LN26@process_Mi|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M35039|
  00004	e1a04002	 mov         r4, r2

; 790  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:+process_MixerMessage()\r\n"));
; 791  : 
; 792  :     DWORD result = FALSE;
; 793  : 
; 794  :     switch (pParams->uMsg)

  00008	e5913004	 ldr         r3, [r1, #4]
  0000c	e243e001	 sub         lr, r3, #1
  00010	e35e0007	 cmp         lr, #7
  00014	8a000022	 bhi         |$LN1@process_Mi|
  00018	e28f3004	 add         r3, pc, #4
  0001c	e7d3300e	 ldrb        r3, [r3, +lr]
  00020	e08ff003	 add         pc, pc, r3
  00024		 |$LN15@process_Mi|
  00024		 |$LN14@process_Mi|
  00024		 |$LN16@process_Mi|
  00024	74ed		 DCB         0x74
  00025		 |$LN17@process_Mi|
  00025	44ed		 DCB         0x44
  00026		 |$LN18@process_Mi|
  00026	54ed		 DCB         0x54
  00027		 |$LN19@process_Mi|
  00027	68ed		 DCB         0x68
  00028		 |$LN20@process_Mi|
  00028	14ed		 DCB         0x14
  00029		 |$LN21@process_Mi|
  00029	24ed		 DCB         0x24
  0002a		 |$LN22@process_Mi|
  0002a	34ed		 DCB         0x34
  0002b		 |$LN23@process_Mi|
  0002b	04ed		 DCB         0x4
  0002c		 |$LN9@process_Mi|

; 795  :     {
; 796  :     case MXDM_SETCONTROLDETAILS:
; 797  :         DEBUGMSG(ZONE_MIXER, (L"WAV:MXDM_SETCONTROLDETAILS\r\n"));
; 798  :         result = put_ControlDetails((PMIXERCONTROLDETAILS) pParams->dwParam1,
; 799  :                     pParams->dwParam2
; 800  :                     );

  0002c	e5912010	 ldr         r2, [r1, #0x10]
  00030	e591100c	 ldr         r1, [r1, #0xC]
  00034	eb000000	 bl          |?put_ControlDetails@CAudioMixerManager@@IAAKPAUtMIXERCONTROLDETAILS@@K@Z|

; 801  :         break;

  00038	ea00001a	 b           |$LN10@process_Mi|
  0003c		 |$LN8@process_Mi|

; 802  : 
; 803  :     case MXDM_GETLINEINFO:
; 804  :         DEBUGMSG(ZONE_MIXER, (L"WAV:MXDM_GETLINEINFO\r\n"));
; 805  :         result = get_LineInfo((PMIXERLINE) pParams->dwParam1,
; 806  :                     pParams->dwParam2
; 807  :                     );

  0003c	e5912010	 ldr         r2, [r1, #0x10]
  00040	e591100c	 ldr         r1, [r1, #0xC]
  00044	eb000000	 bl          |?get_LineInfo@CAudioMixerManager@@IAAKPAUtMIXERLINE@@K@Z|

; 808  :         break;

  00048	ea000016	 b           |$LN10@process_Mi|
  0004c		 |$LN7@process_Mi|

; 809  : 
; 810  :     case MXDM_GETLINECONTROLS:
; 811  :         DEBUGMSG(ZONE_MIXER, (L"WAV:MXDM_GETLINECONTROLS\r\n"));
; 812  :         result = get_LineControls((PMIXERLINECONTROLS) pParams->dwParam1,
; 813  :                     pParams->dwParam2
; 814  :                     );

  0004c	e5912010	 ldr         r2, [r1, #0x10]
  00050	e591100c	 ldr         r1, [r1, #0xC]
  00054	eb000000	 bl          |?get_LineControls@CAudioMixerManager@@IAAKPAUtMIXERLINECONTROLS@@K@Z|

; 815  :         break;

  00058	ea000012	 b           |$LN10@process_Mi|
  0005c		 |$LN6@process_Mi|

; 816  : 
; 817  :     case MXDM_GETCONTROLDETAILS:
; 818  :         DEBUGMSG(ZONE_MIXER, (L"WAV:MXDM_GETCONTROLDETAILS\r\n"));
; 819  :         result = get_ControlDetails((PMIXERCONTROLDETAILS) pParams->dwParam1,
; 820  :                     pParams->dwParam2
; 821  :                     );

  0005c	e5912010	 ldr         r2, [r1, #0x10]
  00060	e591100c	 ldr         r1, [r1, #0xC]
  00064	eb000000	 bl          |?get_ControlDetails@CAudioMixerManager@@IAAKPAUtMIXERCONTROLDETAILS@@K@Z|

; 822  :         break;

  00068	ea00000e	 b           |$LN10@process_Mi|
  0006c		 |$LN5@process_Mi|

; 823  : 
; 824  :     case MXDM_GETDEVCAPS:
; 825  :         DEBUGMSG(ZONE_MIXER, (L"WAV:MXDM_GETDEVCAPS\r\n"));
; 826  :         result = get_DeviceCaps((PMIXERCAPS) pParams->dwParam1,
; 827  :                     pParams->dwParam2
; 828  :                     );

  0006c	e5912010	 ldr         r2, [r1, #0x10]
  00070	e591100c	 ldr         r1, [r1, #0xC]
  00074	eb000000	 bl          |?get_DeviceCaps@CAudioMixerManager@@IAAKPAUtagMIXERCAPS@@K@Z|

; 829  :         break;

  00078	ea00000a	 b           |$LN10@process_Mi|
  0007c		 |$LN4@process_Mi|

; 830  : 
; 831  :     case MXDM_OPEN:
; 832  :         DEBUGMSG(ZONE_MIXER, (L"WAV:MXDM_OPEN\r\n"));
; 833  :         result = open_Device((PDWORD) pParams->dwUser,
; 834  :                     (PMIXEROPENDESC) pParams->dwParam1,
; 835  :                     pParams->dwParam2
; 836  :                     );

  0007c	e5913010	 ldr         r3, [r1, #0x10]
  00080	e591200c	 ldr         r2, [r1, #0xC]
  00084	e5911008	 ldr         r1, [r1, #8]
  00088	eb000000	 bl          |?open_Device@CAudioMixerManager@@IAAKPAKPAUtMIXEROPENDESC@@K@Z|

; 837  :         break;

  0008c	ea000005	 b           |$LN10@process_Mi|
  00090		 |$LN3@process_Mi|

; 838  : 
; 839  :     case MXDM_CLOSE:
; 840  :         DEBUGMSG(ZONE_MIXER, (L"WAV:MXDM_CLOSE\r\n"));
; 841  :         result = close_Device((AudioMixerCallback_t*)pParams->dwUser);

  00090	e5911008	 ldr         r1, [r1, #8]
  00094	eb000000	 bl          |?close_Device@CAudioMixerManager@@IAAKPAUAudioMixerCallback_t@1@@Z|

; 842  :         break;

  00098	ea000002	 b           |$LN10@process_Mi|
  0009c		 |$LN2@process_Mi|

; 843  : 
; 844  :     case MXDM_GETNUMDEVS:
; 845  :         DEBUGMSG(ZONE_MIXER, (L"WAV:MXDM_GETNUMDEVS\r\n"));
; 846  :         result = 1;

  0009c	e3a00001	 mov         r0, #1

; 847  :         break;

  000a0	ea000000	 b           |$LN10@process_Mi|
  000a4		 |$LN1@process_Mi|

; 848  : 
; 849  :     default:
; 850  :         DEBUGMSG(ZONE_WARN, (L"MXDM: Unsupported mixer message\r\n"));
; 851  :         result = MMSYSERR_NOTSUPPORTED;

  000a4	e3a00008	 mov         r0, #8
  000a8		 |$LN10@process_Mi|

; 852  :         break;
; 853  :     }
; 854  : 
; 855  :     *pdwResult = result;

  000a8	e5840000	 str         r0, [r4]

; 856  : 
; 857  :     DEBUGMSG(ZONE_FUNCTION, (L"WAV:-process_MixerMessage()\r\n"));
; 858  : 
; 859  :     return TRUE;

  000ac	e3a00001	 mov         r0, #1

; 860  : }

  000b0	e8bd4010	 ldmia       sp!, {r4, lr}
  000b4	e12fff1e	 bx          lr
  000b8		 |$M35040|

			 ENDP  ; |?process_MixerMessage@CAudioMixerManager@@QAAHPAUMMDRV_MESSAGE_PARAMS@@PAK@Z|, CAudioMixerManager::process_MixerMessage

	END
