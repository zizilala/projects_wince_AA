; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\Z2170P\SRC\DRIVERS\TPS659XX_WAVE\dasfaudioport.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|?s_csDASFStream@DASFStream@@1UCRITICAL_SECTION@@A| [ DATA ] ; DASFStream::s_csDASFStream
	EXPORT	|?s_hHwCodecAdapter@DASF@@1PAUHINSTANCE__@@A| [ DATA ] ; DASF::s_hHwCodecAdapter
	EXPORT	|?s_hDeleteSignal@DASFStream@@1PAXA| [ DATA ] ; DASFStream::s_hDeleteSignal
	EXPORT	|?s_hDeleteThread@DASFStream@@1PAXA| [ DATA ] ; DASFStream::s_hDeleteThread
	EXPORT	|?s_pDeleteList@DASFStream@@1PAV1@A| [ DATA ] ; DASFStream::s_pDeleteList

  00000			 AREA	 |.bss|, NOINIT
|?s_csDASFStream@DASFStream@@1UCRITICAL_SECTION@@A| % 0x14 ; DASFStream::s_csDASFStream
|_HwCodecAdapterHooks| % 0x20
|?s_hHwCodecAdapter@DASF@@1PAUHINSTANCE__@@A| % 0x4	; DASF::s_hHwCodecAdapter
|?s_hDeleteSignal@DASFStream@@1PAXA| % 0x4		; DASFStream::s_hDeleteSignal
|?s_hDeleteThread@DASFStream@@1PAXA| % 0x4		; DASFStream::s_hDeleteThread
|?s_pDeleteList@DASFStream@@1PAV1@A| % 0x4		; DASFStream::s_pDeleteList
	EXPORT	|SetEvent|
	IMPORT	|EventModify|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T40000| DCD	|$LN5@SetEvent|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetEvent| PROC

; 235  : _inline BOOL SetEvent(HANDLE h) {

  00000		 |$LN5@SetEvent|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M39997|

; 236  : 	return EventModify(h,EVENT_SET);

  00004	e3a01003	 mov         r1, #3
  00008	eb000000	 bl          EventModify

; 237  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M39998|

			 ENDP  ; |SetEvent|

	EXPORT	|GetCurrentThread|

  00000			 AREA	 |.pdata|, PDATA
|$T40009| DCD	|$LN5@GetCurrent|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |GetCurrentThread| PROC

; 351  : _inline HANDLE GetCurrentThread(void) {

  00000		 |$LN5@GetCurrent|
  00000		 |$M40006|

; 352  : 	return ((HANDLE)(SH_CURTHREAD+SYS_HANDLE_BASE));

  00000	e3a00041	 mov         r0, #0x41

; 353  : }

  00004	e12fff1e	 bx          lr
  00008		 |$M40007|

			 ENDP  ; |GetCurrentThread|

	EXPORT	|?IsDASFInitialized@DASF@@SAHXZ|	; DASF::IsDASFInitialized
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.h

  00000			 AREA	 |.pdata|, PDATA
|$T40020| DCD	|$LN7@IsDASFInit|
	DCD	0x40000700
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsDASFInitialized@DASF@@SAHXZ| PROC	; DASF::IsDASFInitialized

; 44   :     static BOOL IsDASFInitialized()         { return s_hHwCodecAdapter != NULL; }

  00000		 |$LN7@IsDASFInit|
  00000		 |$M40017|
  00000	e59f3010	 ldr         r3, [pc, #0x10]
  00004	e5933000	 ldr         r3, [r3]
  00008	e3530000	 cmp         r3, #0
  0000c	13a00001	 movne       r0, #1
  00010	03a00000	 moveq       r0, #0
  00014	e12fff1e	 bx          lr
  00018		 |$LN8@IsDASFInit|
  00018		 |$LN9@IsDASFInit|
  00018	00000000	 DCD         |?s_hHwCodecAdapter@DASF@@1PAUHINSTANCE__@@A|
  0001c		 |$M40018|

			 ENDP  ; |?IsDASFInitialized@DASF@@SAHXZ|, DASF::IsDASFInitialized

	EXPORT	|??0DASFStream@@IAA@XZ|			; DASFStream::DASFStream

  00000			 AREA	 |.pdata|, PDATA
|$T40032| DCD	|$LN5@DASFStream|
	DCD	0x40000300
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0DASFStream@@IAA@XZ| PROC		; DASFStream::DASFStream

; 116  :     DASFStream():m_state(kUninitialized)    {};

  00000		 |$LN5@DASFStream|
  00000		 |$M40029|
  00000	e3a03000	 mov         r3, #0
  00004	e5803020	 str         r3, [r0, #0x20]
  00008	e12fff1e	 bx          lr
  0000c		 |$M40030|

			 ENDP  ; |??0DASFStream@@IAA@XZ|, DASFStream::DASFStream

	EXPORT	|??1DASFStream@@IAA@XZ|			; DASFStream::~DASFStream

  00000			 AREA	 |.pdata|, PDATA
|$T40039| DCD	|$LN5@DASFStream@2|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1DASFStream@@IAA@XZ| PROC		; DASFStream::~DASFStream

; 117  :     ~DASFStream()                           {};

  00000		 |$LN5@DASFStream@2|
  00000		 |$M40036|
  00000	e12fff1e	 bx          lr
  00004		 |$M40037|

			 ENDP  ; |??1DASFStream@@IAA@XZ|, DASFStream::~DASFStream

	EXPORT	|?GetStreamContext@DASFStream@@QBAPAXXZ| ; DASFStream::GetStreamContext

  00000			 AREA	 |.pdata|, PDATA
|$T40049| DCD	|$LN5@GetStreamC|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetStreamContext@DASFStream@@QBAPAXXZ| PROC ; DASFStream::GetStreamContext

; 141  :     HANDLE GetStreamContext() const         { return m_hStreamContext; }

  00000		 |$LN5@GetStreamC|
  00000		 |$M40046|
  00000	e5900010	 ldr         r0, [r0, #0x10]
  00004	e12fff1e	 bx          lr
  00008		 |$M40047|

			 ENDP  ; |?GetStreamContext@DASFStream@@QBAPAXXZ|, DASFStream::GetStreamContext

	EXPORT	|?GetDASFContext@DASFStream@@QBAPAXXZ|	; DASFStream::GetDASFContext

  00000			 AREA	 |.pdata|, PDATA
|$T40059| DCD	|$LN5@GetDASFCon|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetDASFContext@DASFStream@@QBAPAXXZ| PROC ; DASFStream::GetDASFContext

; 142  :     HANDLE GetDASFContext() const           { return m_hDASFContext; }

  00000		 |$LN5@GetDASFCon|
  00000		 |$M40056|
  00000	e5900018	 ldr         r0, [r0, #0x18]
  00004	e12fff1e	 bx          lr
  00008		 |$M40057|

			 ENDP  ; |?GetDASFContext@DASFStream@@QBAPAXXZ|, DASFStream::GetDASFContext

	EXPORT	|?GetDASFStreamId@DASFStream@@QBAIXZ|	; DASFStream::GetDASFStreamId

  00000			 AREA	 |.pdata|, PDATA
|$T40069| DCD	|$LN5@GetDASFStr|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetDASFStreamId@DASFStream@@QBAIXZ| PROC ; DASFStream::GetDASFStreamId

; 143  :     UINT GetDASFStreamId() const            { return m_idDASFStream; }

  00000		 |$LN5@GetDASFStr|
  00000		 |$M40066|
  00000	e5900014	 ldr         r0, [r0, #0x14]
  00004	e12fff1e	 bx          lr
  00008		 |$M40067|

			 ENDP  ; |?GetDASFStreamId@DASFStream@@QBAIXZ|, DASFStream::GetDASFStreamId

	EXPORT	|?IsOutputStream@DASFStream@@QBAHXZ|	; DASFStream::IsOutputStream

  00000			 AREA	 |.pdata|, PDATA
|$T40079| DCD	|$LN5@IsOutputSt|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsOutputStream@DASFStream@@QBAHXZ| PROC ; DASFStream::IsOutputStream

; 144  :     BOOL IsOutputStream() const             { return m_bOutput; }

  00000		 |$LN5@IsOutputSt|
  00000		 |$M40076|
  00000	e590001c	 ldr         r0, [r0, #0x1C]
  00004	e12fff1e	 bx          lr
  00008		 |$M40077|

			 ENDP  ; |?IsOutputStream@DASFStream@@QBAHXZ|, DASFStream::IsOutputStream

	EXPORT	|?IsInputStream@DASFStream@@QBAHXZ|	; DASFStream::IsInputStream

  00000			 AREA	 |.pdata|, PDATA
|$T40091| DCD	|$LN7@IsInputStr|
	DCD	0x40000500
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsInputStream@DASFStream@@QBAHXZ| PROC ; DASFStream::IsInputStream

; 145  :     BOOL IsInputStream() const              { return m_bOutput == FALSE; }

  00000		 |$LN7@IsInputStr|
  00000		 |$M40088|
  00000	e590301c	 ldr         r3, [r0, #0x1C]
  00004	e3530000	 cmp         r3, #0
  00008	03a00001	 moveq       r0, #1
  0000c	13a00000	 movne       r0, #0
  00010	e12fff1e	 bx          lr
  00014		 |$M40089|

			 ENDP  ; |?IsInputStream@DASFStream@@QBAHXZ|, DASFStream::IsInputStream

	EXPORT	|?GetActiveDASFBufferCount@DASFStream@@QBAHXZ| ; DASFStream::GetActiveDASFBufferCount

  00000			 AREA	 |.pdata|, PDATA
|$T40101| DCD	|$LN5@GetActiveD|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetActiveDASFBufferCount@DASFStream@@QBAHXZ| PROC ; DASFStream::GetActiveDASFBufferCount

; 146  :     BOOL GetActiveDASFBufferCount() const   { return m_nActiveDASFBufferCount; }

  00000		 |$LN5@GetActiveD|
  00000		 |$M40098|
  00000	e5900028	 ldr         r0, [r0, #0x28]
  00004	e12fff1e	 bx          lr
  00008		 |$M40099|

			 ENDP  ; |?GetActiveDASFBufferCount@DASFStream@@QBAHXZ|, DASFStream::GetActiveDASFBufferCount

	EXPORT	|?IsDASFBufferSpaceAvailable@DASFStream@@QBAHXZ| ; DASFStream::IsDASFBufferSpaceAvailable

  00000			 AREA	 |.pdata|, PDATA
|$T40113| DCD	|$LN7@IsDASFBuff|
	DCD	0x40000500
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsDASFBufferSpaceAvailable@DASFStream@@QBAHXZ| PROC ; DASFStream::IsDASFBufferSpaceAvailable

; 147  :     BOOL IsDASFBufferSpaceAvailable() const { return m_nActiveDASFBufferCount < 2; }

  00000		 |$LN7@IsDASFBuff|
  00000		 |$M40110|
  00000	e5903028	 ldr         r3, [r0, #0x28]
  00004	e3530002	 cmp         r3, #2
  00008	b3a00001	 movlt       r0, #1
  0000c	a3a00000	 movge       r0, #0
  00010	e12fff1e	 bx          lr
  00014		 |$M40111|

			 ENDP  ; |?IsDASFBufferSpaceAvailable@DASFStream@@QBAHXZ|, DASFStream::IsDASFBufferSpaceAvailable

	EXPORT	|?IncrementActiveDASFBufferCount@DASFStream@@QAAXXZ| ; DASFStream::IncrementActiveDASFBufferCount
	IMPORT	|InterlockedIncrement|

  00000			 AREA	 |.pdata|, PDATA
|$T40121| DCD	|$LN5@IncrementA|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IncrementActiveDASFBufferCount@DASFStream@@QAAXXZ| PROC ; DASFStream::IncrementActiveDASFBufferCount

; 150  :     {

  00000		 |$LN5@IncrementA|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M40118|

; 151  :         InterlockedIncrement(&m_nActiveDASFBufferCount);

  00004	e2800028	 add         r0, r0, #0x28
  00008	eb000000	 bl          InterlockedIncrement

; 152  :     }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M40119|

			 ENDP  ; |?IncrementActiveDASFBufferCount@DASFStream@@QAAXXZ|, DASFStream::IncrementActiveDASFBufferCount

	EXPORT	|?GetCurrentActiveBuffer@DASFStream@@QBAPAEXZ| ; DASFStream::GetCurrentActiveBuffer

  00000			 AREA	 |.pdata|, PDATA
|$T40131| DCD	|$LN5@GetCurrent@2|
	DCD	0x40000b00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetCurrentActiveBuffer@DASFStream@@QBAPAEXZ| PROC ; DASFStream::GetCurrentActiveBuffer

; 160  :     {

  00000		 |$LN5@GetCurrent@2|
  00000		 |$M40128|

; 161  :         return m_rgDASFBuffers[(m_nNextDASFBuffer + 1) % MAX_DASFBUFFER_COUNT];

  00000	e5903024	 ldr         r3, [r0, #0x24]
  00004	e59f201c	 ldr         r2, [pc, #0x1C]
  00008	e2831001	 add         r1, r3, #1
  0000c	e0832291	 umull       r2, r3, r1, r2
  00010	e1a030a3	 mov         r3, r3, lsr #1
  00014	e0833083	 add         r3, r3, r3, lsl #1
  00018	e0413003	 sub         r3, r1, r3
  0001c	e283300b	 add         r3, r3, #0xB
  00020	e7900103	 ldr         r0, [r0, +r3, lsl #2]

; 162  :     }

  00024	e12fff1e	 bx          lr
  00028		 |$LN6@GetCurrent@2|
  00028		 |$LN7@GetCurrent@2|
  00028	aaaaaaab	 DCD         0xaaaaaaab
  0002c		 |$M40129|

			 ENDP  ; |?GetCurrentActiveBuffer@DASFStream@@QBAPAEXZ|, DASFStream::GetCurrentActiveBuffer

	EXPORT	|?GetDASFStreamState@DASFStream@@QBA?AW4DASFStreamState@1@XZ| ; DASFStream::GetDASFStreamState

  00000			 AREA	 |.pdata|, PDATA
|$T40143| DCD	|$LN5@GetDASFStr@2|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetDASFStreamState@DASFStream@@QBA?AW4DASFStreamState@1@XZ| PROC ; DASFStream::GetDASFStreamState

; 177  :     DASFStreamState GetDASFStreamState() const { return m_state;}

  00000		 |$LN5@GetDASFStr@2|
  00000		 |$M40140|
  00000	e5900020	 ldr         r0, [r0, #0x20]
  00004	e12fff1e	 bx          lr
  00008		 |$M40141|

			 ENDP  ; |?GetDASFStreamState@DASFStream@@QBA?AW4DASFStreamState@1@XZ|, DASFStream::GetDASFStreamState

	EXPORT	|?Lock@DASFAudioStreamPort@@IAAXXZ|	; DASFAudioStreamPort::Lock
	IMPORT	|EnterMutex|

  00000			 AREA	 |.pdata|, PDATA
|$T40150| DCD	|$LN5@Lock|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Lock@DASFAudioStreamPort@@IAAXXZ| PROC ; DASFAudioStreamPort::Lock

; 224  :     void Lock()             {EnterMutex();} //{ EnterCriticalSection(&m_cs); }

  00000		 |$LN5@Lock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M40147|
  00004	eb000000	 bl          EnterMutex
  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M40148|

			 ENDP  ; |?Lock@DASFAudioStreamPort@@IAAXXZ|, DASFAudioStreamPort::Lock

	EXPORT	|?Unlock@DASFAudioStreamPort@@IAAXXZ|	; DASFAudioStreamPort::Unlock
	IMPORT	|ExitMutex|

  00000			 AREA	 |.pdata|, PDATA
|$T40157| DCD	|$LN5@Unlock|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Unlock@DASFAudioStreamPort@@IAAXXZ| PROC ; DASFAudioStreamPort::Unlock

; 225  :     void Unlock()          {ExitMutex();}   // { LeaveCriticalSection(&m_cs); }

  00000		 |$LN5@Unlock|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M40154|
  00004	eb000000	 bl          ExitMutex
  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M40155|

			 ENDP  ; |?Unlock@DASFAudioStreamPort@@IAAXXZ|, DASFAudioStreamPort::Unlock

	EXPORT	|?SendAudioStreamMessage@DASFAudioStreamPort@@QAAHKPAX@Z| ; DASFAudioStreamPort::SendAudioStreamMessage

  00000			 AREA	 |.pdata|, PDATA
|$T40169| DCD	|$LN5@SendAudioS|
	DCD	0x40000c01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SendAudioStreamMessage@DASFAudioStreamPort@@QAAHKPAX@Z| PROC ; DASFAudioStreamPort::SendAudioStreamMessage

; 249  :     {

  00000		 |$LN5@SendAudioS|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M40166|
  00004	e1a03002	 mov         r3, r2
  00008	e1a02001	 mov         r2, r1

; 250  :         return m_pPortClient->OnAudioStreamMessage(this, msg, pvData);

  0000c	e5905028	 ldr         r5, [r0, #0x28]
  00010	e1a01000	 mov         r1, r0
  00014	e5954000	 ldr         r4, [r5]
  00018	e1a00005	 mov         r0, r5
  0001c	e5944000	 ldr         r4, [r4]
  00020	e1a0e00f	 mov         lr, pc
  00024	e12fff14	 bx          r4

; 251  :     }

  00028	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$M40167|

			 ENDP  ; |?SendAudioStreamMessage@DASFAudioStreamPort@@QAAHKPAX@Z|, DASFAudioStreamPort::SendAudioStreamMessage

	EXPORT	|?GetWaveFormat@StreamContext@@QAAPAUtWAVEFORMATEX@@XZ| ; StreamContext::GetWaveFormat
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\strmctxt.h

  00000			 AREA	 |.pdata|, PDATA
|$T40179| DCD	|$LN5@GetWaveFor|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetWaveFormat@StreamContext@@QAAPAUtWAVEFORMATEX@@XZ| PROC ; StreamContext::GetWaveFormat

; 75   :     WAVEFORMATEX *GetWaveFormat() {return &m_WaveFormat;}

  00000		 |$LN5@GetWaveFor|
  00000		 |$M40176|
  00000	e2800024	 add         r0, r0, #0x24
  00004	e12fff1e	 bx          lr
  00008		 |$M40177|

			 ENDP  ; |?GetWaveFormat@StreamContext@@QAAPAUtWAVEFORMATEX@@XZ|, StreamContext::GetWaveFormat

	EXPORT	|?GetGain@StreamContext@@QAAKXZ|	; StreamContext::GetGain

  00000			 AREA	 |.pdata|, PDATA
|$T40189| DCD	|$LN5@GetGain|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetGain@StreamContext@@QAAKXZ| PROC	; StreamContext::GetGain

; 110  :     {

  00000		 |$LN5@GetGain|
  00000		 |$M40186|

; 111  :         return m_dwGain;

  00000	e5900058	 ldr         r0, [r0, #0x58]

; 112  :     }

  00004	e12fff1e	 bx          lr
  00008		 |$M40187|

			 ENDP  ; |?GetGain@StreamContext@@QAAKXZ|, StreamContext::GetGain

	EXPORT	|?Mutex@@YAHH@Z|			; Mutex
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T40201| DCD	|$LN7@Mutex|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Mutex@@YAHH@Z| PROC			; Mutex

; 143  : {

  00000		 |$LN7@Mutex|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M40198|
  00004	e3500000	 cmp         r0, #0

; 144  :     bLock ? EnterMutex() : ExitMutex();

  00008	0a000001	 beq         |$LN3@Mutex|
  0000c	eb000000	 bl          EnterMutex
  00010	ea000000	 b           |$LN4@Mutex|
  00014		 |$LN3@Mutex|
  00014	eb000000	 bl          ExitMutex
  00018		 |$LN4@Mutex|

; 145  :     return TRUE;

  00018	e3a00001	 mov         r0, #1

; 146  : }

  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M40199|

			 ENDP  ; |?Mutex@@YAHH@Z|, Mutex

	EXPORT	|?Initialize@DASF@@SAHPBG@Z|		; DASF::Initialize
	EXPORT	|??_C@_1CE@BOEBCKCA@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAC?$AAo?$AAd?$AAe?$AAc?$AAE?$AAx?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@NACLFFAL@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAx?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@DAFKODDN@?$AAS?$AAt?$AAo?$AAp?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAx?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@ODBAHPOE@?$AAS?$AAe?$AAn?$AAd?$AAD?$AAa?$AAt?$AAa?$AAE?$AAx?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@KPKFEDBH@?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAD?$AAa?$AAt?$AAa?$AAE?$AAx?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@LBAAJLAJ@?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAE?$AAx?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@MNFIHGL@?$AAS?$AAe?$AAt?$AAG?$AAa?$AAi?$AAn?$AAE?$AAx?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@PFJAMCKE@?$AAD?$AAe?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAC?$AAo?$AAd?$AAe?$AAc?$AAE?$AAx?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|GetProcAddressW|
	IMPORT	|LoadLibraryW|

  00000			 AREA	 |.pdata|, PDATA
|$T40214| DCD	|$LN9@Initialize|
	DCD	0x40003a01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@BOEBCKCA@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAC?$AAo?$AAd?$AAe?$AAc?$AAE?$AAx?$AA?$AA@| DCB "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, "C", 0x0, "o", 0x0, "d"
	DCB	0x0, "e", 0x0, "c", 0x0, "E", 0x0, "x", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@NACLFFAL@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAx?$AA?$AA@| DCB "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "P", 0x0, "r"
	DCB	0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, "E"
	DCB	0x0, "x", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@DAFKODDN@?$AAS?$AAt?$AAo?$AAp?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAx?$AA?$AA@| DCB "S"
	DCB	0x0, "t", 0x0, "o", 0x0, "p", 0x0, "P", 0x0, "r", 0x0, "o"
	DCB	0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, "E", 0x0, "x"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@ODBAHPOE@?$AAS?$AAe?$AAn?$AAd?$AAD?$AAa?$AAt?$AAa?$AAE?$AAx?$AA?$AA@| DCB "S"
	DCB	0x0, "e", 0x0, "n", 0x0, "d", 0x0, "D", 0x0, "a", 0x0, "t"
	DCB	0x0, "a", 0x0, "E", 0x0, "x", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@KPKFEDBH@?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAD?$AAa?$AAt?$AAa?$AAE?$AAx?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, "D", 0x0, "a", 0x0, "t", 0x0, "a", 0x0, "E", 0x0, "x"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@LBAAJLAJ@?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAE?$AAx?$AA?$AA@| DCB "S"
	DCB	0x0, "e", 0x0, "n", 0x0, "d", 0x0, "C", 0x0, "o", 0x0, "n"
	DCB	0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, "C", 0x0, "o"
	DCB	0x0, "m", 0x0, "m", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "E"
	DCB	0x0, "x", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@MNFIHGL@?$AAS?$AAe?$AAt?$AAG?$AAa?$AAi?$AAn?$AAE?$AAx?$AA?$AA@| DCB "S"
	DCB	0x0, "e", 0x0, "t", 0x0, "G", 0x0, "a", 0x0, "i", 0x0, "n"
	DCB	0x0, "E", 0x0, "x", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@PFJAMCKE@?$AAD?$AAe?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAC?$AAo?$AAd?$AAe?$AAc?$AAE?$AAx?$AA?$AA@| DCB "D"
	DCB	0x0, "e", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, "C"
	DCB	0x0, "o", 0x0, "d", 0x0, "e", 0x0, "c", 0x0, "E", 0x0, "x"
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Initialize@DASF@@SAHPBG@Z| PROC	; DASF::Initialize

; 171  : {

  00000		 |$LN9@Initialize|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M40211|

; 172  :     BOOL rc = FALSE;
; 173  : 
; 174  :     // We will link the HWCA dynamic library during run time
; 175  :     //
; 176  :     s_hHwCodecAdapter = ::LoadLibrary(szPort);

  00004	e3a05000	 mov         r5, #0
  00008	eb000000	 bl          LoadLibraryW
  0000c	e59f40d0	 ldr         r4, [pc, #0xD0]
  00010	e3500000	 cmp         r0, #0
  00014	e5840020	 str         r0, [r4, #0x20]

; 177  :     if (s_hHwCodecAdapter == NULL)
; 178  :         {
; 179  :         RETAILMSG(0, (L"WAV:DASF LoadLibrary failed with error %d\r\n",GetLastError()));
; 180  :         goto cleanUp;

  00018	0a000026	 beq         |$cleanUp$39371|

; 181  :         }
; 182  : 
; 183  :     // Get exported functions
; 184  :     _HwCodecAdapterHooks.InitializeCodecEx = (fnInitializeCodecEx) GetProcAddress(
; 185  :                                           (HMODULE)s_hHwCodecAdapter,
; 186  :                                           L"InitializeCodecEx"
; 187  :                                           );

  0001c	e59f10bc	 ldr         r1, [pc, #0xBC]
  00020	eb000000	 bl          GetProcAddressW

; 188  : 
; 189  :     _HwCodecAdapterHooks.StartProcessEx = (fnStartProcessEx) GetProcAddress(
; 190  :                                           (HMODULE)s_hHwCodecAdapter,
; 191  :                                           L"StartProcessEx"
; 192  :                                           );

  00024	e59f10b0	 ldr         r1, [pc, #0xB0]
  00028	e1a03000	 mov         r3, r0
  0002c	e5940020	 ldr         r0, [r4, #0x20]
  00030	e5843000	 str         r3, [r4]
  00034	eb000000	 bl          GetProcAddressW

; 193  : 
; 194  :     _HwCodecAdapterHooks.StopProcessEx = (fnStopProcessEx) GetProcAddress(
; 195  :                                           s_hHwCodecAdapter,
; 196  :                                           L"StopProcessEx"
; 197  :                                           );

  00038	e59f1098	 ldr         r1, [pc, #0x98]
  0003c	e1a03000	 mov         r3, r0
  00040	e5940020	 ldr         r0, [r4, #0x20]
  00044	e5843004	 str         r3, [r4, #4]
  00048	eb000000	 bl          GetProcAddressW

; 198  : 
; 199  :     _HwCodecAdapterHooks.SendDataEx = (fnSendDataEx) GetProcAddress(
; 200  :                                           s_hHwCodecAdapter,
; 201  :                                           L"SendDataEx"
; 202  :                                           );

  0004c	e59f1080	 ldr         r1, [pc, #0x80]
  00050	e1a03000	 mov         r3, r0
  00054	e5940020	 ldr         r0, [r4, #0x20]
  00058	e5843008	 str         r3, [r4, #8]
  0005c	eb000000	 bl          GetProcAddressW

; 203  : 
; 204  :     _HwCodecAdapterHooks.ReceiveDataEx = (fnReceiveDataEx) GetProcAddress(
; 205  :                                           s_hHwCodecAdapter,
; 206  :                                           L"ReceiveDataEx"
; 207  :                                           );

  00060	e59f1068	 ldr         r1, [pc, #0x68]
  00064	e1a03000	 mov         r3, r0
  00068	e5940020	 ldr         r0, [r4, #0x20]
  0006c	e584300c	 str         r3, [r4, #0xC]
  00070	eb000000	 bl          GetProcAddressW

; 208  : 
; 209  :     _HwCodecAdapterHooks.SendControlCommandEx = (fnSendControlCommandEx)::GetProcAddress(
; 210  :                                           s_hHwCodecAdapter,
; 211  :                                           L"SendControlCommandEx"
; 212  :                                           );

  00074	e59f1050	 ldr         r1, [pc, #0x50]
  00078	e1a03000	 mov         r3, r0
  0007c	e5940020	 ldr         r0, [r4, #0x20]
  00080	e5843010	 str         r3, [r4, #0x10]
  00084	eb000000	 bl          GetProcAddressW

; 213  : 
; 214  :     _HwCodecAdapterHooks.SetGainEx = (fnSetGainEx)::GetProcAddress(
; 215  :                                           s_hHwCodecAdapter,
; 216  :                                           L"SetGainEx"
; 217  :                                           );

  00088	e59f1038	 ldr         r1, [pc, #0x38]
  0008c	e1a03000	 mov         r3, r0
  00090	e5940020	 ldr         r0, [r4, #0x20]
  00094	e5843018	 str         r3, [r4, #0x18]
  00098	eb000000	 bl          GetProcAddressW

; 218  : 
; 219  :     _HwCodecAdapterHooks.DeInitializeCodecEx = (fnDeInitializeCodecEx)::GetProcAddress(
; 220  :                                           s_hHwCodecAdapter,
; 221  :                                           L"DeInitializeCodecEx"
; 222  :                                           );

  0009c	e59f1020	 ldr         r1, [pc, #0x20]
  000a0	e1a03000	 mov         r3, r0
  000a4	e5940020	 ldr         r0, [r4, #0x20]
  000a8	e5843014	 str         r3, [r4, #0x14]
  000ac	eb000000	 bl          GetProcAddressW
  000b0	e584001c	 str         r0, [r4, #0x1C]

; 223  :         rc = TRUE;

  000b4	e3a05001	 mov         r5, #1
  000b8		 |$cleanUp$39371|

; 224  : 
; 225  : cleanUp:
; 226  :     return rc;
; 227  : }

  000b8	e1a00005	 mov         r0, r5
  000bc	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000c0	e12fff1e	 bx          lr
  000c4		 |$LN10@Initialize|
  000c4		 |$LN11@Initialize|
  000c4	00000000	 DCD         |??_C@_1CI@PFJAMCKE@?$AAD?$AAe?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAC?$AAo?$AAd?$AAe?$AAc?$AAE?$AAx?$AA?$AA@|
  000c8		 |$LN12@Initialize|
  000c8	00000000	 DCD         |??_C@_1BE@MNFIHGL@?$AAS?$AAe?$AAt?$AAG?$AAa?$AAi?$AAn?$AAE?$AAx?$AA?$AA@|
  000cc		 |$LN13@Initialize|
  000cc	00000000	 DCD         |??_C@_1CK@LBAAJLAJ@?$AAS?$AAe?$AAn?$AAd?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAC?$AAo?$AAm?$AAm?$AAa?$AAn?$AAd?$AAE?$AAx?$AA?$AA@|
  000d0		 |$LN14@Initialize|
  000d0	00000000	 DCD         |??_C@_1BM@KPKFEDBH@?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAD?$AAa?$AAt?$AAa?$AAE?$AAx?$AA?$AA@|
  000d4		 |$LN15@Initialize|
  000d4	00000000	 DCD         |??_C@_1BG@ODBAHPOE@?$AAS?$AAe?$AAn?$AAd?$AAD?$AAa?$AAt?$AAa?$AAE?$AAx?$AA?$AA@|
  000d8		 |$LN16@Initialize|
  000d8	00000000	 DCD         |??_C@_1BM@DAFKODDN@?$AAS?$AAt?$AAo?$AAp?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAx?$AA?$AA@|
  000dc		 |$LN17@Initialize|
  000dc	00000000	 DCD         |??_C@_1BO@NACLFFAL@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAP?$AAr?$AAo?$AAc?$AAe?$AAs?$AAs?$AAE?$AAx?$AA?$AA@|
  000e0		 |$LN18@Initialize|
  000e0	00000000	 DCD         |??_C@_1CE@BOEBCKCA@?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAC?$AAo?$AAd?$AAe?$AAc?$AAE?$AAx?$AA?$AA@|
  000e4		 |$LN19@Initialize|
  000e4	00000000	 DCD         |_HwCodecAdapterHooks|
  000e8		 |$M40212|

			 ENDP  ; |?Initialize@DASF@@SAHPBG@Z|, DASF::Initialize

	EXPORT	|?Uninitialize@DASF@@SAXXZ|		; DASF::Uninitialize
	IMPORT	|FreeLibrary|

  00000			 AREA	 |.pdata|, PDATA
|$T40231| DCD	|$LN6@Uninitiali|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Uninitialize@DASF@@SAXXZ| PROC	; DASF::Uninitialize

; 231  : {

  00000		 |$LN6@Uninitiali|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M40228|

; 232  :     if (s_hHwCodecAdapter != NULL)

  00004	e59f401c	 ldr         r4, [pc, #0x1C]
  00008	e5940000	 ldr         r0, [r4]
  0000c	e3500000	 cmp         r0, #0
  00010	0a000002	 beq         |$LN1@Uninitiali|

; 233  :         {
; 234  :         ::FreeLibrary(s_hHwCodecAdapter);

  00014	eb000000	 bl          FreeLibrary

; 235  :         s_hHwCodecAdapter = NULL;

  00018	e3a03000	 mov         r3, #0
  0001c	e5843000	 str         r3, [r4]
  00020		 |$LN1@Uninitiali|

; 236  :         }
; 237  : }

  00020	e8bd4010	 ldmia       sp!, {r4, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$LN7@Uninitiali|
  00028		 |$LN8@Uninitiali|
  00028	00000000	 DCD         |?s_hHwCodecAdapter@DASF@@1PAUHINSTANCE__@@A|
  0002c		 |$M40229|

			 ENDP  ; |?Uninitialize@DASF@@SAXXZ|, DASF::Uninitialize

	EXPORT	|?UnregisterDASFStream@DASF@@SAHPAVDASFStream@@@Z| ; DASF::UnregisterDASFStream
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.h

  00000			 AREA	 |.pdata|, PDATA
|$T40248| DCD	|$LN9@Unregister|
	DCD	0x40000d01
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UnregisterDASFStream@DASF@@SAHPAVDASFStream@@@Z| PROC ; DASF::UnregisterDASFStream

; 308  : {

  00000		 |$LN9@Unregister|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M40245|

; 309  :     BOOL bRet = FALSE;
; 310  :     HRESULT hResult = S_OK;
; 311  : 
; 312  :     hResult = _HwCodecAdapterHooks.DeInitializeCodecEx(pStream->GetDASFContext());

  00004	e59f3024	 ldr         r3, [pc, #0x24]
  00008	e5900018	 ldr         r0, [r0, #0x18]
  0000c	e3a04000	 mov         r4, #0
  00010	e593301c	 ldr         r3, [r3, #0x1C]
  00014	e1a0e00f	 mov         lr, pc
  00018	e12fff13	 bx          r3
  0001c	e3500000	 cmp         r0, #0

; 313  :     if ( hResult != S_OK )
; 314  :     {
; 315  :         DEBUGMSG(ZONE_MDD, (TEXT("Failed to start hw codec adapter\r\n")));
; 316  :         goto cleanUp;
; 317  :     }
; 318  : 
; 319  :     bRet = TRUE;

  00020	03a04001	 moveq       r4, #1
  00024		 |$cleanUp$39423|

; 320  : 
; 321  : cleanUp:
; 322  : return bRet;
; 323  : }

  00024	e1a00004	 mov         r0, r4
  00028	e8bd4010	 ldmia       sp!, {r4, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$LN10@Unregister|
  00030		 |$LN11@Unregister|
  00030	00000000	 DCD         |_HwCodecAdapterHooks|
  00034		 |$M40246|

			 ENDP  ; |?UnregisterDASFStream@DASF@@SAHPAVDASFStream@@@Z|, DASF::UnregisterDASFStream

	EXPORT	|?StartDASFStream@DASF@@SAHPAVDASFStream@@@Z| ; DASF::StartDASFStream
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.h

  00000			 AREA	 |.pdata|, PDATA
|$T40265| DCD	|$LN9@StartDASFS|
	DCD	0x40000d01
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?StartDASFStream@DASF@@SAHPAVDASFStream@@@Z| PROC ; DASF::StartDASFStream

; 329  : {

  00000		 |$LN9@StartDASFS|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M40262|

; 330  :     BOOL bRet = FALSE;
; 331  :     HRESULT hResult = S_OK;
; 332  : 
; 333  :     hResult = _HwCodecAdapterHooks.StartProcessEx(pStream->GetDASFContext());

  00004	e59f3024	 ldr         r3, [pc, #0x24]
  00008	e5900018	 ldr         r0, [r0, #0x18]
  0000c	e3a04000	 mov         r4, #0
  00010	e5933004	 ldr         r3, [r3, #4]
  00014	e1a0e00f	 mov         lr, pc
  00018	e12fff13	 bx          r3
  0001c	e3500000	 cmp         r0, #0

; 334  :     if ( hResult != S_OK )
; 335  :     {
; 336  :         DEBUGMSG(ZONE_MDD, (TEXT("Failed to start hw codec adapter\r\n")));
; 337  :         goto cleanUp;
; 338  :     }
; 339  : 
; 340  :     bRet = TRUE;

  00020	03a04001	 moveq       r4, #1
  00024		 |$cleanUp$39434|

; 341  : 
; 342  : cleanUp:
; 343  : return bRet;
; 344  : }

  00024	e1a00004	 mov         r0, r4
  00028	e8bd4010	 ldmia       sp!, {r4, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$LN10@StartDASFS|
  00030		 |$LN11@StartDASFS|
  00030	00000000	 DCD         |_HwCodecAdapterHooks|
  00034		 |$M40263|

			 ENDP  ; |?StartDASFStream@DASF@@SAHPAVDASFStream@@@Z|, DASF::StartDASFStream

	EXPORT	|?StopDASFStream@DASF@@SAHPAVDASFStream@@@Z| ; DASF::StopDASFStream
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.h

  00000			 AREA	 |.pdata|, PDATA
|$T40282| DCD	|$LN9@StopDASFSt|
	DCD	0x40000d01
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?StopDASFStream@DASF@@SAHPAVDASFStream@@@Z| PROC ; DASF::StopDASFStream

; 350  : {

  00000		 |$LN9@StopDASFSt|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M40279|

; 351  :     BOOL bRet = FALSE;
; 352  :     HRESULT hResult = S_OK;
; 353  : 
; 354  :     hResult = _HwCodecAdapterHooks.StopProcessEx(pStream->GetDASFContext());

  00004	e59f3024	 ldr         r3, [pc, #0x24]
  00008	e5900018	 ldr         r0, [r0, #0x18]
  0000c	e3a04000	 mov         r4, #0
  00010	e5933008	 ldr         r3, [r3, #8]
  00014	e1a0e00f	 mov         lr, pc
  00018	e12fff13	 bx          r3
  0001c	e3500000	 cmp         r0, #0

; 355  :     if ( hResult != S_OK )
; 356  :     {
; 357  :         DEBUGMSG(ZONE_MDD, (TEXT("Failed to stop hw codec adapter\r\n")));
; 358  :         goto cleanUp;
; 359  :     }
; 360  : 
; 361  :     bRet = TRUE;

  00020	03a04001	 moveq       r4, #1
  00024		 |$cleanUp$39445|

; 362  : 
; 363  : cleanUp:
; 364  : return bRet;
; 365  : }

  00024	e1a00004	 mov         r0, r4
  00028	e8bd4010	 ldmia       sp!, {r4, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$LN10@StopDASFSt|
  00030		 |$LN11@StopDASFSt|
  00030	00000000	 DCD         |_HwCodecAdapterHooks|
  00034		 |$M40280|

			 ENDP  ; |?StopDASFStream@DASF@@SAHPAVDASFStream@@@Z|, DASF::StopDASFStream

	EXPORT	|?InsertTransmitBuffer@DASF@@SAHPAEIPAVDASFStream@@@Z| ; DASF::InsertTransmitBuffer
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.h

  00000			 AREA	 |.pdata|, PDATA
|$T40301| DCD	|$LN9@InsertTran|
	DCD	0x40000d01
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InsertTransmitBuffer@DASF@@SAHPAEIPAVDASFStream@@@Z| PROC ; DASF::InsertTransmitBuffer

; 371  : {

  00000		 |$LN9@InsertTran|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M40298|

; 372  :     BOOL bRet = FALSE;
; 373  :     HRESULT hResult = S_OK;
; 374  : 
; 375  :     hResult = _HwCodecAdapterHooks.SendDataEx(pBuffer, nSize, pStream->GetDASFContext());

  00004	e59f3024	 ldr         r3, [pc, #0x24]
  00008	e5922018	 ldr         r2, [r2, #0x18]
  0000c	e3a04000	 mov         r4, #0
  00010	e593300c	 ldr         r3, [r3, #0xC]
  00014	e1a0e00f	 mov         lr, pc
  00018	e12fff13	 bx          r3
  0001c	e3500000	 cmp         r0, #0

; 376  :     if ( hResult != S_OK )
; 377  :     {
; 378  :         DEBUGMSG(ZONE_MDD, (TEXT("Failed to transmit buffer to hw codec adapter\r\n")));
; 379  :         goto cleanUp;
; 380  :     }
; 381  : 
; 382  :     bRet = TRUE;

  00020	03a04001	 moveq       r4, #1
  00024		 |$cleanUp$39458|

; 383  : 
; 384  : cleanUp:
; 385  : return bRet;
; 386  : }

  00024	e1a00004	 mov         r0, r4
  00028	e8bd4010	 ldmia       sp!, {r4, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$LN10@InsertTran|
  00030		 |$LN11@InsertTran|
  00030	00000000	 DCD         |_HwCodecAdapterHooks|
  00034		 |$M40299|

			 ENDP  ; |?InsertTransmitBuffer@DASF@@SAHPAEIPAVDASFStream@@@Z|, DASF::InsertTransmitBuffer

	EXPORT	|?InsertCaptureBuffer@DASF@@SAHPAEIPAVDASFStream@@@Z| ; DASF::InsertCaptureBuffer
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.h

  00000			 AREA	 |.pdata|, PDATA
|$T40320| DCD	|$LN9@InsertCapt|
	DCD	0x40000d01
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InsertCaptureBuffer@DASF@@SAHPAEIPAVDASFStream@@@Z| PROC ; DASF::InsertCaptureBuffer

; 392  : {

  00000		 |$LN9@InsertCapt|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M40317|

; 393  :     BOOL bRet = FALSE;
; 394  :     HRESULT hResult = S_OK;
; 395  : 
; 396  :     hResult = _HwCodecAdapterHooks.ReceiveDataEx(pBuffer, nSize, pStream->GetDASFContext());

  00004	e59f3024	 ldr         r3, [pc, #0x24]
  00008	e5922018	 ldr         r2, [r2, #0x18]
  0000c	e3a04000	 mov         r4, #0
  00010	e5933010	 ldr         r3, [r3, #0x10]
  00014	e1a0e00f	 mov         lr, pc
  00018	e12fff13	 bx          r3
  0001c	e3500000	 cmp         r0, #0

; 397  :     if ( hResult != S_OK )
; 398  :     {
; 399  :         DEBUGMSG(ZONE_MDD, (TEXT("Failed to receive buffer from hw codec adapter\r\n")));
; 400  :         goto cleanUp;
; 401  :     }
; 402  : 
; 403  :     bRet = TRUE;

  00020	03a04001	 moveq       r4, #1
  00024		 |$cleanUp$39471|

; 404  : 
; 405  : cleanUp:
; 406  : return bRet;
; 407  : }

  00024	e1a00004	 mov         r0, r4
  00028	e8bd4010	 ldmia       sp!, {r4, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$LN10@InsertCapt|
  00030		 |$LN11@InsertCapt|
  00030	00000000	 DCD         |_HwCodecAdapterHooks|
  00034		 |$M40318|

			 ENDP  ; |?InsertCaptureBuffer@DASF@@SAHPAEIPAVDASFStream@@@Z|, DASF::InsertCaptureBuffer

	EXPORT	|?SetGain@DASF@@SAHIPAVDASFStream@@@Z|	; DASF::SetGain
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.h

  00000			 AREA	 |.pdata|, PDATA
|$T40342| DCD	|$LN11@SetGain|
	DCD	0x40001f02
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetGain@DASF@@SAHIPAVDASFStream@@@Z| PROC ; DASF::SetGain

; 413  : {

  00000		 |$LN11@SetGain|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004	e24dd01c	 sub         sp, sp, #0x1C
  00008		 |$M40339|
  00008	e1a04001	 mov         r4, r1

; 414  :     BOOL bRet = FALSE;
; 415  :     MM_COMMANDDATATYPE_t dataGainIn;
; 416  : 
; 417  :     // Client can give a unique value if needed
; 418  :     //
; 419  :     dataGainIn.hComponent = pStream;
; 420  : 
; 421  :     // To mute use MM_CommandStreamMute value
; 422  :     //
; 423  :     dataGainIn.AM_Cmd = MM_CommandSWGain;
; 424  : 
; 425  :     // (m_dwGain);Q15 gain value (0x0000 up to 0x8000 with
; 426  :     // 0x8000 representing +1)
; 427  :     //
; 428  :     dataGainIn.param1 = ((nGain & 0xFFFF)/2);
; 429  : 
; 430  :     dataGainIn.param2 = 0;
; 431  :     dataGainIn.streamID = pStream->GetDASFStreamId();
; 432  :     dataGainIn.pMDNGainRamp = NULL;
; 433  :     dataGainIn.pRTMGainRamp = NULL;
; 434  : 
; 435  :     if (!_HwCodecAdapterHooks.SetGainEx(&dataGainIn, pStream->GetDASFContext()))

  0000c	e59f3064	 ldr         r3, [pc, #0x64]
  00010	e5945014	 ldr         r5, [r4, #0x14]
  00014	e1a02800	 mov         r2, r0, lsl #16
  00018	e5936014	 ldr         r6, [r3, #0x14]
  0001c	e1a038a2	 mov         r3, r2, lsr #17
  00020	e3a02000	 mov         r2, #0
  00024	e5941018	 ldr         r1, [r4, #0x18]
  00028	e3a08004	 mov         r8, #4
  0002c	e3a09000	 mov         r9, #0
  00030	e3a0a000	 mov         r10, #0
  00034	e58d200c	 str         r2, [sp, #0xC]
  00038	e28d0000	 add         r0, sp, #0
  0003c	e3a07000	 mov         r7, #0
  00040	e58d4000	 str         r4, [sp]
  00044	e58d8004	 str         r8, [sp, #4]
  00048	e58d3008	 str         r3, [sp, #8]
  0004c	e58d5010	 str         r5, [sp, #0x10]
  00050	e58d9014	 str         r9, [sp, #0x14]
  00054	e58da018	 str         r10, [sp, #0x18]
  00058	e1a0e00f	 mov         lr, pc
  0005c	e12fff16	 bx          r6
  00060	e3500000	 cmp         r0, #0

; 436  :     {
; 437  :         DEBUGMSG(ZONE_MDD, (TEXT("Failed to set the gain in hw codec adapter\r\n")));
; 438  :         goto cleanUp;
; 439  :     }
; 440  : 
; 441  :     bRet = TRUE;

  00064	13a07001	 movne       r7, #1
  00068		 |$cleanUp$39481|

; 442  : 
; 443  : cleanUp:
; 444  :     return bRet;
; 445  : }

  00068	e1a00007	 mov         r0, r7
  0006c	e28dd01c	 add         sp, sp, #0x1C
  00070	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  00074	e12fff1e	 bx          lr
  00078		 |$LN12@SetGain|
  00078		 |$LN13@SetGain|
  00078	00000000	 DCD         |_HwCodecAdapterHooks|
  0007c		 |$M40340|

			 ENDP  ; |?SetGain@DASF@@SAHIPAVDASFStream@@@Z|, DASF::SetGain

	EXPORT	|?OnDASFError@DASF@@SAXHPAX@Z|		; DASF::OnDASFError

  00000			 AREA	 |.pdata|, PDATA
|$T40351| DCD	|$LN5@OnDASFErro|
	DCD	0x40000100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?OnDASFError@DASF@@SAXHPAX@Z| PROC	; DASF::OnDASFError

; 476  : {

  00000		 |$LN5@OnDASFErro|
  00000		 |$M40348|

; 477  :     UNREFERENCED_PARAMETER(hContext);
; 478  :     UNREFERENCED_PARAMETER(Status);
; 479  : }

  00000	e12fff1e	 bx          lr
  00004		 |$M40349|

			 ENDP  ; |?OnDASFError@DASF@@SAXHPAX@Z|, DASF::OnDASFError

	EXPORT	|??_GDASFStream@@IAAPAXI@Z|		; DASFStream::`scalar deleting destructor'
	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$T40365| DCD	|$LN8@scalar|
	DCD	0x40000701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GDASFStream@@IAAPAXI@Z| PROC	; DASFStream::`scalar deleting destructor'
  00000		 |$LN8@scalar|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M40362|
  00004	e1a04000	 mov         r4, r0
  00008	e3110001	 tst         r1, #1
  0000c	1b000000	 blne        |??3@YAXPAX@Z|
  00010	e1a00004	 mov         r0, r4
  00014	e8bd4010	 ldmia       sp!, {r4, lr}
  00018	e12fff1e	 bx          lr
  0001c		 |$M40363|

			 ENDP  ; |??_GDASFStream@@IAAPAXI@Z|, DASFStream::`scalar deleting destructor'

	EXPORT	|?CreateDASFStream@DASFStream@@SAPAV1@XZ| ; DASFStream::CreateDASFStream
	IMPORT	|??2@YAPAXI@Z|				; operator new
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.h

  00000			 AREA	 |.pdata|, PDATA
|$T40382| DCD	|$LN10@CreateDASF|
	DCD	0x40000a01
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CreateDASFStream@DASFStream@@SAPAV1@XZ| PROC ; DASFStream::CreateDASFStream

; 558  : {

  00000		 |$LN10@CreateDASF|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M40379|

; 559  :     DASFStream *pDASFStream = NULL;
; 560  : 
; 561  :     // if a DASFStream wasn't found from the delete list then create a new one
; 562  :     if (pDASFStream == NULL)
; 563  :         {
; 564  :         pDASFStream = new DASFStream();

  00004	e3a0003c	 mov         r0, #0x3C
  00008	eb000000	 bl          |??2@YAPAXI@Z|
  0000c	e3500000	 cmp         r0, #0
  00010	13a03000	 movne       r3, #0
  00014	15803020	 strne       r3, [r0, #0x20]

; 565  :         }
; 566  : 
; 567  :     return pDASFStream;
; 568  : }

  00018	149de004	 ldrne       lr, [sp], #4

; 559  :     DASFStream *pDASFStream = NULL;
; 560  : 
; 561  :     // if a DASFStream wasn't found from the delete list then create a new one
; 562  :     if (pDASFStream == NULL)
; 563  :         {
; 564  :         pDASFStream = new DASFStream();

  0001c	03a00000	 moveq       r0, #0

; 565  :         }
; 566  : 
; 567  :     return pDASFStream;
; 568  : }

  00020	049de004	 ldreq       lr, [sp], #4
  00024	e12fff1e	 bx          lr
  00028		 |$M40380|

			 ENDP  ; |?CreateDASFStream@DASFStream@@SAPAV1@XZ|, DASFStream::CreateDASFStream

	EXPORT	|?DeleteDASFStream@DASFStream@@SAXPAV1@@Z| ; DASFStream::DeleteDASFStream
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T40405| DCD	|$LN19@DeleteDASF|
	DCD	0x40001701
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DeleteDASFStream@DASFStream@@SAXPAV1@@Z| PROC ; DASFStream::DeleteDASFStream

; 573  : {

  00000		 |$LN19@DeleteDASF|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M40402|
  00004	e1a04000	 mov         r4, r0

; 574  :     DASFStream *pDASFStream;
; 575  : 
; 576  :     // Uninitialize DASF Stream first
; 577  :     pInsertDASFStream->m_pNextDelete = NULL;

  00008	e3a03000	 mov         r3, #0
  0000c	e5843004	 str         r3, [r4, #4]

; 578  : 
; 579  :     // insert into delete list
; 580  :     EnterMutex();

  00010	eb000000	 bl          EnterMutex

; 581  :     RETAILMSG(0, (L"WAV:DeleteDASFStream()[pThis=0x%08X, dir=%d]\r\n",
; 582  :             pInsertDASFStream, pInsertDASFStream->IsOutputStream()));
; 583  :     if (s_pDeleteList != NULL)

  00014	e59f503c	 ldr         r5, [pc, #0x3C]
  00018	e5952008	 ldr         r2, [r5, #8]
  0001c	e3520000	 cmp         r2, #0
  00020	1a000007	 bne         |$LN16@DeleteDASF|

; 595  :         {
; 596  :         // insert into head if list is empty
; 597  :         s_pDeleteList = pInsertDASFStream;

  00024	e5854008	 str         r4, [r5, #8]
  00028		 |$LN1@DeleteDASF|

; 598  :         }
; 599  :     //LeaveCriticalSection(&s_csDASFStream);
; 600  :     ExitMutex();

  00028	eb000000	 bl          ExitMutex

; 601  : 
; 602  :     // signal there's objects to be deleted
; 603  :     SetEvent(s_hDeleteSignal);

  0002c	e5950000	 ldr         r0, [r5]
  00030	e3a01003	 mov         r1, #3
  00034	eb000000	 bl          EventModify

; 604  : }

  00038	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LL3@DeleteDASF|

; 584  :         {
; 585  :         // get to the end of the list
; 586  :         pDASFStream = s_pDeleteList;
; 587  :         while (pDASFStream->m_pNextDelete != NULL)
; 588  :             {
; 589  :             pDASFStream = pDASFStream->m_pNextDelete;

  00040	e5922004	 ldr         r2, [r2, #4]
  00044		 |$LN16@DeleteDASF|
  00044	e5923004	 ldr         r3, [r2, #4]
  00048	e3530000	 cmp         r3, #0
  0004c	1afffffb	 bne         |$LL3@DeleteDASF|

; 590  :             }
; 591  :         // insert into tail of list
; 592  :         pDASFStream->m_pNextDelete = pInsertDASFStream;

  00050	e5824004	 str         r4, [r2, #4]

; 593  :         }
; 594  :     else

  00054	eafffff3	 b           |$LN1@DeleteDASF|
  00058		 |$LN20@DeleteDASF|
  00058		 |$LN21@DeleteDASF|
  00058	00000000	 DCD         |?s_hDeleteSignal@DASFStream@@1PAXA|
  0005c		 |$M40403|

			 ENDP  ; |?DeleteDASFStream@DASFStream@@SAXPAV1@@Z|, DASFStream::DeleteDASFStream

	EXPORT	|?GetNextBuffer@DASFStream@@IAAPAEXZ|	; DASFStream::GetNextBuffer
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.h

  00000			 AREA	 |.pdata|, PDATA
|$T40426| DCD	|$LN11@GetNextBuf|
	DCD	0x40000b00
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetNextBuffer@DASFStream@@IAAPAEXZ| PROC ; DASFStream::GetNextBuffer

; 667  : {

  00000		 |$LN11@GetNextBuf|
  00000		 |$M40423|

; 668  :     PBYTE pBuffer = NULL;
; 669  :     if (m_state == kActive && IsDASFBufferSpaceAvailable())

  00000	e5903020	 ldr         r3, [r0, #0x20]
  00004	e3a02000	 mov         r2, #0
  00008	e3530001	 cmp         r3, #1
  0000c	1a000004	 bne         |$LN1@GetNextBuf|
  00010	e5903028	 ldr         r3, [r0, #0x28]
  00014	e3530002	 cmp         r3, #2

; 670  :         {
; 671  :         pBuffer = m_rgDASFBuffers[m_nNextDASFBuffer];

  00018	b5903024	 ldrlt       r3, [r0, #0x24]
  0001c	b0803103	 addlt       r3, r0, r3, lsl #2
  00020	b593202c	 ldrlt       r2, [r3, #0x2C]
  00024		 |$LN1@GetNextBuf|

; 672  :         }
; 673  : 
; 674  :     return pBuffer;
; 675  : }

  00024	e1a00002	 mov         r0, r2
  00028	e12fff1e	 bx          lr
  0002c		 |$M40424|

			 ENDP  ; |?GetNextBuffer@DASFStream@@IAAPAEXZ|, DASFStream::GetNextBuffer

	EXPORT	|?GetWaveFormat@DASFStream@@QAAPBUtWAVEFORMATEX@@XZ| ; DASFStream::GetWaveFormat
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\strmctxt.h

  00000			 AREA	 |.pdata|, PDATA
|$T40439| DCD	|$LN8@GetWaveFor@2|
	DCD	0x40000500
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetWaveFormat@DASFStream@@QAAPBUtWAVEFORMATEX@@XZ| PROC ; DASFStream::GetWaveFormat

; 680  : {

  00000		 |$LN8@GetWaveFor@2|
  00000		 |$M40436|

; 681  :     if (m_hStreamContext)

  00000	e5903010	 ldr         r3, [r0, #0x10]
  00004	e3530000	 cmp         r3, #0

; 682  :         {
; 683  :         return ((StreamContext*)(m_hStreamContext))->GetWaveFormat();

  00008	12830024	 addne       r0, r3, #0x24

; 684  :         }
; 685  :     return NULL;

  0000c	03a00000	 moveq       r0, #0

; 686  : }

  00010	e12fff1e	 bx          lr
  00014		 |$M40437|

			 ENDP  ; |?GetWaveFormat@DASFStream@@QAAPBUtWAVEFORMATEX@@XZ|, DASFStream::GetWaveFormat

	EXPORT	|?InsertBuffer@DASFStream@@IAAHPAE@Z|	; DASFStream::InsertBuffer
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.h

  00000			 AREA	 |.pdata|, PDATA
|$T40506| DCD	|$LN40@InsertBuff|
	DCD	0x40002701
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InsertBuffer@DASFStream@@IAAHPAE@Z| PROC ; DASFStream::InsertBuffer

; 691  : {

  00000		 |$LN40@InsertBuff|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M40503|
  00004	e1b0e001	 movs        lr, r1
  00008	e1a04000	 mov         r4, r0

; 692  :     RETAILMSG(0, (L"WAV:+InsertBuffer(pBuffer=0x%08X)[pThis=0x%08X, dir=%d]\r\n",
; 693  :         pBuffer, this, IsOutputStream()));
; 694  : 
; 695  :     if (pBuffer == NULL) return FALSE;

  0000c	1a000002	 bne         |$LN4@InsertBuff|
  00010		 |$LN37@InsertBuff|
  00010	e3a00000	 mov         r0, #0

; 719  : }

  00014	e8bd4010	 ldmia       sp!, {r4, lr}
  00018	e12fff1e	 bx          lr
  0001c		 |$LN4@InsertBuff|

; 696  : 
; 697  :     // Need to check the state of the DASFStream
; 698  :     if (GetDASFStreamState() != kActive) return FALSE;

  0001c	e5943020	 ldr         r3, [r4, #0x20]
  00020	e3530001	 cmp         r3, #1
  00024	1afffff9	 bne         |$LN37@InsertBuff|

; 699  : 
; 700  :     // push the buffer down to the DSP
; 701  :     if (IsOutputStream())

  00028	e594301c	 ldr         r3, [r4, #0x1C]

; 702  :         {
; 703  :         RETAILMSG(0, (L"InsertBuffer: output stream\r\n"));
; 704  :         DASF::InsertTransmitBuffer(pBuffer, DEFAULT_DASF_BUFFER_SIZE, this);

  0002c	e5942018	 ldr         r2, [r4, #0x18]
  00030	e3a01a01	 mov         r1, #1, 20
  00034	e3530000	 cmp         r3, #0
  00038	e59f3058	 ldr         r3, [pc, #0x58]
  0003c	e1a0000e	 mov         r0, lr
  00040	0a000003	 beq         |$LN2@InsertBuff|
  00044	e593300c	 ldr         r3, [r3, #0xC]
  00048	e1a0e00f	 mov         lr, pc
  0004c	e12fff13	 bx          r3
  00050		 |$cleanUp$40475|

; 705  :         }
; 706  :     else

  00050	ea000002	 b           |$cleanUp$40489|
  00054		 |$LN2@InsertBuff|

; 707  :         {
; 708  :         RETAILMSG(0, (L"InsertBuffer: input stream\r\n"));
; 709  :         DASF::InsertCaptureBuffer(pBuffer, DEFAULT_DASF_BUFFER_SIZE, this);

  00054	e5933010	 ldr         r3, [r3, #0x10]
  00058	e1a0e00f	 mov         lr, pc
  0005c	e12fff13	 bx          r3
  00060		 |$cleanUp$40489|

; 710  :         }
; 711  : 
; 712  :     // increment active buffer pointer and counters
; 713  :     m_nNextDASFBuffer = (m_nNextDASFBuffer + 1) % MAX_DASFBUFFER_COUNT;

  00060	e5943024	 ldr         r3, [r4, #0x24]
  00064	e59f2028	 ldr         r2, [pc, #0x28]

; 714  :     IncrementActiveDASFBufferCount();

  00068	e2840028	 add         r0, r4, #0x28
  0006c	e2831001	 add         r1, r3, #1
  00070	e0832291	 umull       r2, r3, r1, r2
  00074	e1a030a3	 mov         r3, r3, lsr #1
  00078	e0833083	 add         r3, r3, r3, lsl #1
  0007c	e0413003	 sub         r3, r1, r3
  00080	e5843024	 str         r3, [r4, #0x24]
  00084	eb000000	 bl          InterlockedIncrement

; 715  : 
; 716  : RETAILMSG(0, (L"WAV:-InsertBuffer()[pThis=0x%08X, dir=%d]\r\n",
; 717  :         this, IsOutputStream()));
; 718  :     return TRUE;

  00088	e3a00001	 mov         r0, #1

; 719  : }

  0008c	e8bd4010	 ldmia       sp!, {r4, lr}
  00090	e12fff1e	 bx          lr
  00094		 |$LN41@InsertBuff|
  00094		 |$LN42@InsertBuff|
  00094	aaaaaaab	 DCD         0xaaaaaaab
  00098		 |$LN43@InsertBuff|
  00098	00000000	 DCD         |_HwCodecAdapterHooks|
  0009c		 |$M40504|

			 ENDP  ; |?InsertBuffer@DASFStream@@IAAHPAE@Z|, DASFStream::InsertBuffer

	EXPORT	|?StopStream@DASFStream@@QAAHXZ|	; DASFStream::StopStream
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.h

  00000			 AREA	 |.pdata|, PDATA
|$T40535| DCD	|$LN17@StopStream|
	DCD	0x40001601
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?StopStream@DASFStream@@QAAHXZ| PROC	; DASFStream::StopStream

; 859  : {

  00000		 |$LN17@StopStream|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M40532|
  00004	e1a04000	 mov         r4, r0

; 860  :     RETAILMSG(0, (L"WAV:+StopStream()[pThis=0x%08X, dir=%d]\r\n",
; 861  :             this, IsOutputStream()));
; 862  : 
; 863  :     EnterMutex();

  00008	eb000000	 bl          EnterMutex

; 864  :     if (m_state != kInactive && m_state != kUninitialized)

  0000c	e5943020	 ldr         r3, [r4, #0x20]
  00010	e3530003	 cmp         r3, #3
  00014	0a00000b	 beq         |$LN1@StopStream|
  00018	e3530000	 cmp         r3, #0
  0001c	0a000009	 beq         |$LN1@StopStream|

; 865  :         {
; 866  :         m_state = kDeactivating;
; 867  : 
; 868  :         // check if it's safe to shutdown this now else wait for callback
; 869  :         if (GetActiveDASFBufferCount() == 0)

  00020	e5943028	 ldr         r3, [r4, #0x28]
  00024	e3a02002	 mov         r2, #2
  00028	e5842020	 str         r2, [r4, #0x20]
  0002c	e3530000	 cmp         r3, #0

; 870  :             {
; 871  :             // set state and remove from active list
; 872  :             m_state = kInactive;

  00030	03a03003	 moveq       r3, #3

; 873  :             m_hStreamContext = NULL;

  00034	03a02000	 moveq       r2, #0

; 874  :             DeleteDASFStream(this);

  00038	01a00004	 moveq       r0, r4
  0003c	05843020	 streq       r3, [r4, #0x20]
  00040	05842010	 streq       r2, [r4, #0x10]
  00044	0b000000	 bleq        |?DeleteDASFStream@DASFStream@@SAXPAV1@@Z|
  00048		 |$LN1@StopStream|

; 875  :             }
; 876  :         }
; 877  :     ExitMutex();

  00048	eb000000	 bl          ExitMutex

; 878  : 
; 879  :     RETAILMSG(0, (L"WAV:-StopStream()[pThis=0x%08X, dir=%d]\r\n",
; 880  :         this, IsOutputStream()));
; 881  :     return TRUE;

  0004c	e3a00001	 mov         r0, #1

; 882  : }

  00050	e8bd4010	 ldmia       sp!, {r4, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$M40533|

			 ENDP  ; |?StopStream@DASFStream@@QAAHXZ|, DASFStream::StopStream

	EXPORT	|?SetStreamGain@DASFStream@@QAAHI@Z|	; DASFStream::SetStreamGain

  00000			 AREA	 |.pdata|, PDATA
|$T40550| DCD	|$LN10@SetStreamG|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetStreamGain@DASFStream@@QAAHI@Z| PROC ; DASFStream::SetStreamGain

; 887  : {

  00000		 |$LN10@SetStreamG|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M40547|
  00004	e1a02001	 mov         r2, r1

; 888  :     RETAILMSG(0, (L"WAV:SetStreamGain() + \r\n"));
; 889  : 
; 890  :     if (m_state == kActive)

  00008	e5903020	 ldr         r3, [r0, #0x20]
  0000c	e3530001	 cmp         r3, #1

; 891  :         {
; 892  :         DASF::SetGain(nGain, this);

  00010	01a01000	 moveq       r1, r0
  00014	01a00002	 moveq       r0, r2
  00018	0b000000	 bleq        |?SetGain@DASF@@SAHIPAVDASFStream@@@Z|

; 893  :         }
; 894  : 
; 895  :     RETAILMSG(0, (L"WAV:SetStreamGain() - \r\n"));
; 896  :     return TRUE;

  0001c	e3a00001	 mov         r0, #1

; 897  : }

  00020	e49de004	 ldr         lr, [sp], #4
  00024	e12fff1e	 bx          lr
  00028		 |$M40548|

			 ENDP  ; |?SetStreamGain@DASFStream@@QAAHI@Z|, DASFStream::SetStreamGain

	EXPORT	|?SetDASFInfo@DASFStream@@QAAXPAXIPAPAEH@Z| ; DASFStream::SetDASFInfo

  00000			 AREA	 |.pdata|, PDATA
|$T40566| DCD	|$LN12@SetDASFInf|
	DCD	0x40001001
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetDASFInfo@DASFStream@@QAAXPAXIPAPAEH@Z| PROC ; DASFStream::SetDASFInfo

; 902  : {

  00000		 |$LN12@SetDASFInf|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M40563|

; 903  :     m_hDASFContext = hDASFContext;
; 904  :     m_idDASFStream = idDASFStream;
; 905  :     nCount = min(nCount, MAX_DASFBUFFER_COUNT);

  00004	e59de004	 ldr         lr, [sp, #4]
  00008	e5801018	 str         r1, [r0, #0x18]
  0000c	e5802014	 str         r2, [r0, #0x14]
  00010	e35e0003	 cmp         lr, #3
  00014	a3a0e003	 movge       lr, #3

; 906  :     for (int i=0; i<nCount;i++)

  00018	e35e0000	 cmp         lr, #0
  0001c	da000005	 ble         |$LN1@SetDASFInf|
  00020	e0432000	 sub         r2, r3, r0
  00024		 |$LL3@SetDASFInf|

; 907  :         {
; 908  :         m_rgDASFBuffers[i] = rgBuffer[i];

  00024	e7923000	 ldr         r3, [r2, +r0]
  00028	e25ee001	 subs        lr, lr, #1
  0002c	e580302c	 str         r3, [r0, #0x2C]
  00030	e2800004	 add         r0, r0, #4
  00034	1afffffa	 bne         |$LL3@SetDASFInf|
  00038		 |$LN1@SetDASFInf|

; 909  :         }
; 910  : }

  00038	e49de004	 ldr         lr, [sp], #4
  0003c	e12fff1e	 bx          lr
  00040		 |$M40564|

			 ENDP  ; |?SetDASFInfo@DASFStream@@QAAXPAXIPAPAEH@Z|, DASFStream::SetDASFInfo

	EXPORT	|?InsertDASFStream@DASFAudioStreamPort@@IAAXPAVDASFStream@@@Z| ; DASFAudioStreamPort::InsertDASFStream
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.h

  00000			 AREA	 |.pdata|, PDATA
|$T40581| DCD	|$LN11@InsertDASF|
	DCD	0x40000f01
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InsertDASFStream@DASFAudioStreamPort@@IAAXPAVDASFStream@@@Z| PROC ; DASFAudioStreamPort::InsertDASFStream

; 915  : {

  00000		 |$LN11@InsertDASF|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M40578|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0

; 916  :     Lock();

  0000c	eb000000	 bl          EnterMutex

; 917  :     if (m_pStreamsHead == NULL)

  00010	e5953004	 ldr         r3, [r5, #4]
  00014	e3530000	 cmp         r3, #0

; 918  :         {
; 919  :         m_pStreamsHead = pStream;
; 920  :         }
; 921  :     else
; 922  :         {
; 923  :         m_pStreamsTail->m_pNext = pStream;

  00018	15953008	 ldrne       r3, [r5, #8]
  0001c	05854004	 streq       r4, [r5, #4]
  00020	15834000	 strne       r4, [r3]

; 924  :         }
; 925  : 
; 926  :     m_pStreamsTail = pStream;
; 927  :     pStream->m_pNext = NULL;

  00024	e3a03000	 mov         r3, #0
  00028	e5854008	 str         r4, [r5, #8]
  0002c	e5843000	 str         r3, [r4]

; 928  :     Unlock();

  00030	eb000000	 bl          ExitMutex

; 929  : }

  00034	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$M40579|

			 ENDP  ; |?InsertDASFStream@DASFAudioStreamPort@@IAAXPAVDASFStream@@@Z|, DASFAudioStreamPort::InsertDASFStream

	EXPORT	|?RemoveDASFStream@DASFAudioStreamPort@@IAAXPAVDASFStream@@@Z| ; DASFAudioStreamPort::RemoveDASFStream
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.h

  00000			 AREA	 |.pdata|, PDATA
|$T40601| DCD	|$LN19@RemoveDASF|
	DCD	0x40001c01
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RemoveDASFStream@DASFAudioStreamPort@@IAAXPAVDASFStream@@@Z| PROC ; DASFAudioStreamPort::RemoveDASFStream

; 934  : {

  00000		 |$LN19@RemoveDASF|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M40598|
  00004	e1a07001	 mov         r7, r1
  00008	e1a05000	 mov         r5, r0

; 935  :     DASFStream *pPrev = NULL;
; 936  :     DASFStream *pCurrent = m_pStreamsHead;

  0000c	e5954004	 ldr         r4, [r5, #4]
  00010	e3a06000	 mov         r6, #0

; 937  : 
; 938  :     Lock();

  00014	eb000000	 bl          EnterMutex

; 939  :     while (pCurrent != NULL)

  00018	e3540000	 cmp         r4, #0
  0001c	0a000010	 beq         |$LN1@RemoveDASF|
  00020		 |$LL7@RemoveDASF|

; 940  :         {
; 941  :         if (pCurrent == pStream)

  00020	e1540007	 cmp         r4, r7
  00024	0a000004	 beq         |$LN15@RemoveDASF|

; 958  :                 }
; 959  : 
; 960  :             break;
; 961  :             }
; 962  : 
; 963  :         // next node
; 964  :         pPrev = pCurrent;
; 965  :         pCurrent = pCurrent->m_pNext;

  00028	e5943000	 ldr         r3, [r4]
  0002c	e1a06004	 mov         r6, r4
  00030	e1b04003	 movs        r4, r3
  00034	1afffff9	 bne         |$LL7@RemoveDASF|

; 940  :         {
; 941  :         if (pCurrent == pStream)

  00038	ea000009	 b           |$LN1@RemoveDASF|
  0003c		 |$LN15@RemoveDASF|

; 942  :             {
; 943  :             if (pCurrent == m_pStreamsHead)

  0003c	e5953004	 ldr         r3, [r5, #4]
  00040	e1540003	 cmp         r4, r3

; 944  :                 {
; 945  :                 // removing from front
; 946  :                 m_pStreamsHead = m_pStreamsHead->m_pNext;

  00044	05933000	 ldreq       r3, [r3]
  00048	05853004	 streq       r3, [r5, #4]

; 947  :                 }
; 948  :             else if (pPrev != NULL)

  0004c	13560000	 cmpne       r6, #0

; 949  :                 {
; 950  :                 // removing from middle or tail
; 951  :                 pPrev->m_pNext = pCurrent->m_pNext;

  00050	15943000	 ldrne       r3, [r4]
  00054	15863000	 strne       r3, [r6]

; 952  :                 }
; 953  : 
; 954  :             if (pCurrent == m_pStreamsTail)

  00058	e5953008	 ldr         r3, [r5, #8]
  0005c	e1540003	 cmp         r4, r3

; 955  :                 {
; 956  :                 // removing from tail
; 957  :                 m_pStreamsTail = pPrev;

  00060	05856008	 streq       r6, [r5, #8]
  00064		 |$LN1@RemoveDASF|

; 966  :         }
; 967  :     Unlock();

  00064	eb000000	 bl          ExitMutex

; 968  : }

  00068	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  0006c	e12fff1e	 bx          lr
  00070		 |$M40599|

			 ENDP  ; |?RemoveDASFStream@DASFAudioStreamPort@@IAAXPAVDASFStream@@@Z|, DASFAudioStreamPort::RemoveDASFStream

	EXPORT	|?FindDASFStream@DASFAudioStreamPort@@IAAPAVDASFStream@@PAX@Z| ; DASFAudioStreamPort::FindDASFStream
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.h

  00000			 AREA	 |.pdata|, PDATA
|$T40628| DCD	|$LN19@FindDASFSt|
	DCD	0x40001001
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?FindDASFStream@DASFAudioStreamPort@@IAAPAVDASFStream@@PAX@Z| PROC ; DASFAudioStreamPort::FindDASFStream

; 973  : {

  00000		 |$LN19@FindDASFSt|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M40625|
  00004	e1a05001	 mov         r5, r1
  00008	e1a04000	 mov         r4, r0

; 974  :     Lock();

  0000c	eb000000	 bl          EnterMutex

; 975  :     DASFStream *pCurrent = m_pStreamsHead;

  00010	e5943004	 ldr         r3, [r4, #4]
  00014	ea000003	 b           |$LN16@FindDASFSt|
  00018		 |$LL3@FindDASFSt|

; 976  :     while (pCurrent != NULL)
; 977  :         {
; 978  :         if (pCurrent->GetStreamContext() == hStreamContext) break;

  00018	e5943010	 ldr         r3, [r4, #0x10]
  0001c	e1530005	 cmp         r3, r5
  00020	0a000002	 beq         |$LN15@FindDASFSt|

; 979  :         pCurrent = pCurrent->m_pNext;

  00024	e5943000	 ldr         r3, [r4]
  00028		 |$LN16@FindDASFSt|
  00028	e1b04003	 movs        r4, r3
  0002c	1afffff9	 bne         |$LL3@FindDASFSt|
  00030		 |$LN15@FindDASFSt|

; 980  :         }
; 981  :     Unlock();

  00030	eb000000	 bl          ExitMutex

; 982  :     return pCurrent;
; 983  : }

  00034	e1a00004	 mov         r0, r4
  00038	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$M40626|

			 ENDP  ; |?FindDASFStream@DASFAudioStreamPort@@IAAPAVDASFStream@@PAX@Z|, DASFAudioStreamPort::FindDASFStream

	EXPORT	|?StreamStarting@DASFAudioStreamPort@@QAAHPAVDASFStream@@@Z| ; DASFAudioStreamPort::StreamStarting

  00000			 AREA	 |.pdata|, PDATA
|$T40669| DCD	|$LN27@StreamStar|
	DCD	0x40002a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?StreamStarting@DASFAudioStreamPort@@QAAHPAVDASFStream@@@Z| PROC ; DASFAudioStreamPort::StreamStarting

; 988  : {

  00000		 |$LN27@StreamStar|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M40666|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0

; 989  :     Mutex(TRUE);

  0000c	eb000000	 bl          EnterMutex

; 990  :     Lock();

  00010	eb000000	 bl          EnterMutex

; 991  :     if (pStream->IsOutputStream())

  00014	e594301c	 ldr         r3, [r4, #0x1C]
  00018	e3530000	 cmp         r3, #0
  0001c	0a00000e	 beq         |$LN4@StreamStar|

; 992  :         {
; 993  :         // only notify hw bridge on the activation of the first stream only
; 994  :         ++m_nActiveTxStreams;

  00020	e5953010	 ldr         r3, [r5, #0x10]
  00024	e2833001	 add         r3, r3, #1
  00028	e5853010	 str         r3, [r5, #0x10]

; 995  :         if (m_nActiveTxStreams == 1)

  0002c	e3530001	 cmp         r3, #1
  00030	1a000017	 bne         |$LN17@StreamStar|

; 996  :             {
; 997  :             SendAudioStreamMessage(ASPM_START_TX, NULL);

  00034	e5950028	 ldr         r0, [r5, #0x28]
  00038	e3a02b01	 mov         r2, #1, 22
  0003c	e3a03000	 mov         r3, #0
  00040	e590e000	 ldr         lr, [r0]
  00044	e3822065	 orr         r2, r2, #0x65
  00048	e1a01005	 mov         r1, r5
  0004c	e59e4000	 ldr         r4, [lr]
  00050	e1a0e00f	 mov         lr, pc
  00054	e12fff14	 bx          r4

; 998  :             }
; 999  :         }
; 1000 :     else

  00058	ea00000d	 b           |$LN17@StreamStar|
  0005c		 |$LN4@StreamStar|

; 1001 :         {
; 1002 :         // only notify hw bridge on the activation of the first stream only
; 1003 :         ++m_nActiveRxStreams;

  0005c	e595300c	 ldr         r3, [r5, #0xC]
  00060	e2833001	 add         r3, r3, #1
  00064	e585300c	 str         r3, [r5, #0xC]

; 1004 :         if (m_nActiveRxStreams == 1)

  00068	e3530001	 cmp         r3, #1
  0006c	1a000008	 bne         |$LN17@StreamStar|

; 1005 :             {
; 1006 :             SendAudioStreamMessage(ASPM_START_RX, NULL);

  00070	e5950028	 ldr         r0, [r5, #0x28]
  00074	e3a02b01	 mov         r2, #1, 22
  00078	e3a03000	 mov         r3, #0
  0007c	e590e000	 ldr         lr, [r0]
  00080	e3822067	 orr         r2, r2, #0x67
  00084	e1a01005	 mov         r1, r5
  00088	e59e4000	 ldr         r4, [lr]
  0008c	e1a0e00f	 mov         lr, pc
  00090	e12fff14	 bx          r4
  00094		 |$LN17@StreamStar|

; 1007 :             }
; 1008 :         }
; 1009 :     Unlock();

  00094	eb000000	 bl          ExitMutex

; 1010 :     Mutex(FALSE);

  00098	eb000000	 bl          ExitMutex

; 1011 : 
; 1012 :     return TRUE;

  0009c	e3a00001	 mov         r0, #1

; 1013 : }

  000a0	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000a4	e12fff1e	 bx          lr
  000a8		 |$M40667|

			 ENDP  ; |?StreamStarting@DASFAudioStreamPort@@QAAHPAVDASFStream@@@Z|, DASFAudioStreamPort::StreamStarting

	EXPORT	|?StreamStopped@DASFAudioStreamPort@@QAAHPAVDASFStream@@@Z| ; DASFAudioStreamPort::StreamStopped
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.h

  00000			 AREA	 |.pdata|, PDATA
|$T40700| DCD	|$LN23@StreamStop|
	DCD	0x40002b01
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?StreamStopped@DASFAudioStreamPort@@QAAHPAVDASFStream@@@Z| PROC ; DASFAudioStreamPort::StreamStopped

; 1018 : {

  00000		 |$LN23@StreamStop|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M40697|
  00004	e1a06001	 mov         r6, r1
  00008	e1a05000	 mov         r5, r0

; 1019 :     RETAILMSG(0, (L"WAV:StreamStopped() +\r\n"));
; 1020 : 
; 1021 :     // UNDONE:
; 1022 :     //  Need to check if pStream is in the active queu
; 1023 :     EnterMutex();

  0000c	eb000000	 bl          EnterMutex

; 1024 :     Lock();

  00010	eb000000	 bl          EnterMutex

; 1025 :     if (pStream->IsOutputStream())

  00014	e596301c	 ldr         r3, [r6, #0x1C]
  00018	e3530000	 cmp         r3, #0
  0001c	0a00000d	 beq         |$LN4@StreamStop|

; 1026 :         {
; 1027 :         // only notify hw bridge on the activation of the first stream only
; 1028 :         --m_nActiveTxStreams;

  00020	e5953010	 ldr         r3, [r5, #0x10]
  00024	e2533001	 subs        r3, r3, #1
  00028	e5853010	 str         r3, [r5, #0x10]

; 1029 :         if (m_nActiveTxStreams == 0)

  0002c	1a000016	 bne         |$LN17@StreamStop|

; 1030 :             {
; 1031 :             SendAudioStreamMessage(ASPM_STOP_TX, NULL);

  00030	e5950028	 ldr         r0, [r5, #0x28]
  00034	e3a02b01	 mov         r2, #1, 22
  00038	e3a03000	 mov         r3, #0
  0003c	e590e000	 ldr         lr, [r0]
  00040	e3822066	 orr         r2, r2, #0x66
  00044	e1a01005	 mov         r1, r5
  00048	e59e4000	 ldr         r4, [lr]
  0004c	e1a0e00f	 mov         lr, pc
  00050	e12fff14	 bx          r4

; 1032 :             }
; 1033 :         }
; 1034 :     else

  00054	ea00000c	 b           |$LN17@StreamStop|
  00058		 |$LN4@StreamStop|

; 1035 :         {
; 1036 :         // only notify hw bridge on the activation of the first stream only
; 1037 :         --m_nActiveRxStreams;

  00058	e595300c	 ldr         r3, [r5, #0xC]
  0005c	e2533001	 subs        r3, r3, #1
  00060	e585300c	 str         r3, [r5, #0xC]

; 1038 :         if (m_nActiveRxStreams == 0)

  00064	1a000008	 bne         |$LN17@StreamStop|

; 1039 :             {
; 1040 :             SendAudioStreamMessage(ASPM_STOP_RX, NULL);

  00068	e5950028	 ldr         r0, [r5, #0x28]
  0006c	e3a02b01	 mov         r2, #1, 22
  00070	e3a03000	 mov         r3, #0
  00074	e590e000	 ldr         lr, [r0]
  00078	e3822068	 orr         r2, r2, #0x68
  0007c	e1a01005	 mov         r1, r5
  00080	e59e4000	 ldr         r4, [lr]
  00084	e1a0e00f	 mov         lr, pc
  00088	e12fff14	 bx          r4
  0008c		 |$LN17@StreamStop|

; 1041 :             }
; 1042 :         }
; 1043 :     RemoveDASFStream(pStream);

  0008c	e1a01006	 mov         r1, r6
  00090	e1a00005	 mov         r0, r5
  00094	eb000000	 bl          |?RemoveDASFStream@DASFAudioStreamPort@@IAAXPAVDASFStream@@@Z|

; 1044 :     Unlock();

  00098	eb000000	 bl          ExitMutex

; 1045 :     ExitMutex();

  0009c	eb000000	 bl          ExitMutex

; 1046 : 
; 1047 :     RETAILMSG(0, (L"WAV:StreamStopped() +\r\n"));
; 1048 : 
; 1049 :     return TRUE;

  000a0	e3a00001	 mov         r0, #1

; 1050 : }

  000a4	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000a8	e12fff1e	 bx          lr
  000ac		 |$M40698|

			 ENDP  ; |?StreamStopped@DASFAudioStreamPort@@QAAHPAVDASFStream@@@Z|, DASFAudioStreamPort::StreamStopped

	EXPORT	|?DecrementActiveDASFBufferCount@DASFStream@@QAAXXZ| ; DASFStream::DecrementActiveDASFBufferCount
	IMPORT	|InterlockedDecrement|
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.h

  00000			 AREA	 |.pdata|, PDATA
|$T40708| DCD	|$LN6@DecrementA|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DecrementActiveDASFBufferCount@DASFStream@@QAAXXZ| PROC ; DASFStream::DecrementActiveDASFBufferCount

; 155  :     {

  00000		 |$LN6@DecrementA|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M40705|
  00004	e1a04000	 mov         r4, r0

; 156  :     if (InterlockedDecrement(&m_nActiveDASFBufferCount) == 0) StopStream();

  00008	e2840028	 add         r0, r4, #0x28
  0000c	eb000000	 bl          InterlockedDecrement
  00010	e3500000	 cmp         r0, #0
  00014	01a00004	 moveq       r0, r4
  00018	0b000000	 bleq        |?StopStream@DASFStream@@QAAHXZ|

; 157  :     }

  0001c	e8bd4010	 ldmia       sp!, {r4, lr}
  00020	e12fff1e	 bx          lr
  00024		 |$M40706|

			 ENDP  ; |?DecrementActiveDASFBufferCount@DASFStream@@QAAXXZ|, DASFStream::DecrementActiveDASFBufferCount

	EXPORT	|?Uninitialize@DASFStream@@QAAXXZ|	; DASFStream::Uninitialize

  00000			 AREA	 |.pdata|, PDATA
|$T40728| DCD	|$LN13@Uninitiali@2|
	DCD	0x40001901
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Uninitialize@DASFStream@@QAAXXZ| PROC ; DASFStream::Uninitialize

; 637  : {

  00000		 |$LN13@Uninitiali@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M40725|
  00004	e1a04000	 mov         r4, r0

; 638  :     RETAILMSG(0, (L"WAV:+Uninitialize()[pThis=0x%08X, dir=%d]\r\n",
; 639  :          this, IsOutputStream()));
; 640  : 
; 641  :     // unregister DASF from DASF
; 642  :     DASF::StopDASFStream(this);

  00008	eb000000	 bl          |?StopDASFStream@DASF@@SAHPAVDASFStream@@@Z|

; 643  :     DASF::UnregisterDASFStream(this);

  0000c	e1a00004	 mov         r0, r4
  00010	eb000000	 bl          |?UnregisterDASFStream@DASF@@SAHPAVDASFStream@@@Z|

; 644  :     m_pDASFAudioStreamPort->StreamStopped(this);

  00014	e5940038	 ldr         r0, [r4, #0x38]
  00018	e1a01004	 mov         r1, r4
  0001c	eb000000	 bl          |?StreamStopped@DASFAudioStreamPort@@QAAHPAVDASFStream@@@Z|

; 645  : 
; 646  :     // reset member variables
; 647  :     m_pNext = NULL;
; 648  :     m_pNextDelete = NULL;
; 649  :     m_bOutput = TRUE;

  00020	e3a03001	 mov         r3, #1
  00024	e584301c	 str         r3, [r4, #0x1C]
  00028	e3a02000	 mov         r2, #0

; 650  :     m_hStreamContext = 0;
; 651  :     m_nNextDASFBuffer = 0;
; 652  :     m_hStreamContext = NULL;
; 653  :     m_state = kUninitialized;
; 654  :     m_ffSetProcPermissions = 0;
; 655  :     m_nActiveDASFBufferCount = 0;
; 656  :     m_pDASFAudioStreamPort = NULL;
; 657  :     memset(m_rgDASFBuffers, 0, sizeof(m_rgDASFBuffers));

  0002c	e3a03000	 mov         r3, #0
  00030	e5842000	 str         r2, [r4]
  00034	e5842004	 str         r2, [r4, #4]
  00038	e5842024	 str         r2, [r4, #0x24]
  0003c	e5842010	 str         r2, [r4, #0x10]
  00040	e5842020	 str         r2, [r4, #0x20]
  00044	e5842008	 str         r2, [r4, #8]
  00048	e5842028	 str         r2, [r4, #0x28]
  0004c	e5842038	 str         r2, [r4, #0x38]
  00050	e5a4302c	 str         r3, [r4, #0x2C]!
  00054	e5843004	 str         r3, [r4, #4]
  00058	e5843008	 str         r3, [r4, #8]

; 658  : 
; 659  :     RETAILMSG(0, (L"WAV:-Uninitialize()[pThis=0x%08X, dir=%d]\r\n",
; 660  :          this, IsOutputStream()));
; 661  : 
; 662  : }

  0005c	e8bd4010	 ldmia       sp!, {r4, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$M40726|

			 ENDP  ; |?Uninitialize@DASFStream@@QAAXXZ|, DASFStream::Uninitialize

	EXPORT	|?ProcessBuffer@DASFStream@@IAAHPAE@Z|	; DASFStream::ProcessBuffer
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.h

  00000			 AREA	 |.pdata|, PDATA
|$T40771| DCD	|$LN26@ProcessBuf|
	DCD	0x40002202
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ProcessBuffer@DASFStream@@IAAHPAE@Z| PROC ; DASFStream::ProcessBuffer

; 768  : {

  00000		 |$LN26@ProcessBuf|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M40768|
  00008	e1a05000	 mov         r5, r0

; 769  :     RETAILMSG(0, (L"WAV:+ProcessBuffer(pBuffer=0x%08X)[pThis=0x%08X, dir=%d]\r\n",
; 770  :         pBuffer, this, IsOutputStream()));
; 771  : 
; 772  :     int rc = 0;
; 773  :     if (GetDASFStreamState() == kActive)

  0000c	e5953020	 ldr         r3, [r5, #0x20]
  00010	e3a06000	 mov         r6, #0
  00014	e3530001	 cmp         r3, #1
  00018	1a000016	 bne         |$LN1@ProcessBuf|

; 774  :         {
; 775  :         RETAILMSG(0, (L"WAV:GetDASFStreamState() == kActive\r\n"));
; 776  : 
; 777  :         // initialize audio data structure
; 778  :         //
; 779  :         ASPM_STREAM_DATA    StreamData;
; 780  :         StreamData.pBuffer = pBuffer;
; 781  :         StreamData.dwBufferSize = DEFAULT_DASF_BUFFER_SIZE;
; 782  :         StreamData.hStreamContext = m_hStreamContext;

  0001c	e5953010	 ldr         r3, [r5, #0x10]

; 783  : 
; 784  :         // check if stream context is still active if not then we need to
; 785  :         // shutdown this stream
; 786  :         if (m_pDASFAudioStreamPort->SendAudioStreamMessage(
; 787  :                     IsOutputStream()? ASPM_PROCESSDATA_TX : ASPM_PROCESSDATA_RX,
; 788  :                     &StreamData
; 789  :                     ) == FALSE)

  00020	e58d1000	 str         r1, [sp]
  00024	e5951038	 ldr         r1, [r5, #0x38]
  00028	e3a00a01	 mov         r0, #1, 20
  0002c	e595201c	 ldr         r2, [r5, #0x1C]
  00030	e58d3008	 str         r3, [sp, #8]
  00034	e58d0004	 str         r0, [sp, #4]
  00038	e5910028	 ldr         r0, [r1, #0x28]
  0003c	e3520000	 cmp         r2, #0
  00040	e3a03b01	 mov         r3, #1, 22
  00044	e5904000	 ldr         r4, [r0]
  00048	13832069	 orrne       r2, r3, #0x69
  0004c	0383206a	 orreq       r2, r3, #0x6A
  00050	e5944000	 ldr         r4, [r4]
  00054	e28d3000	 add         r3, sp, #0
  00058	e1a0e00f	 mov         lr, pc
  0005c	e12fff14	 bx          r4
  00060	e3500000	 cmp         r0, #0
  00064	1a000002	 bne         |$LN2@ProcessBuf|

; 790  :             {
; 791  :             // stream context has shutdown start the deactivation process
; 792  :             // for this DASFStream
; 793  :             StopStream();

  00068	e1a00005	 mov         r0, r5
  0006c	eb000000	 bl          |?StopStream@DASFStream@@QAAHXZ|

; 794  :             }
; 795  :         else

  00070	ea000000	 b           |$LN1@ProcessBuf|
  00074		 |$LN2@ProcessBuf|

; 796  :             {
; 797  :             rc = 1;

  00074	e3a06001	 mov         r6, #1
  00078		 |$LN1@ProcessBuf|

; 798  :             }
; 799  :         }
; 800  : 
; 801  :     RETAILMSG(0, (L"WAV:-ProcessBuffer()[pThis=0x%08X, dir=%d]\r\n",
; 802  :         this, IsOutputStream()));
; 803  :     return rc;
; 804  : }

  00078	e1a00006	 mov         r0, r6
  0007c	e28dd00c	 add         sp, sp, #0xC
  00080	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00084	e12fff1e	 bx          lr
  00088		 |$M40769|

			 ENDP  ; |?ProcessBuffer@DASFStream@@IAAHPAE@Z|, DASFStream::ProcessBuffer

	EXPORT	|?StartStream@DASFStream@@QAAHXZ|	; DASFStream::StartStream
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.h

  00000			 AREA	 |.pdata|, PDATA
|$T40841| DCD	|$LN44@StartStrea|
	DCD	0x40002601
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?StartStream@DASFStream@@QAAHXZ| PROC	; DASFStream::StartStream

; 809  : {

  00000		 |$LN44@StartStrea|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M40838|
  00004	e1a04000	 mov         r4, r0

; 810  :     RETAILMSG(0, (L"WAV:+StartStream()[pThis=0x%08X, dir=%d]\r\n",
; 811  :         this, IsOutputStream()));
; 812  : 
; 813  :     PBYTE pBuffer;
; 814  : 
; 815  :     if (m_state == kActive)

  00008	e5943020	 ldr         r3, [r4, #0x20]
  0000c	e3530001	 cmp         r3, #1
  00010	0a00001d	 beq         |$cleanUp$39610|

; 816  :         {
; 817  :         goto cleanUp;
; 818  :         }
; 819  : 
; 820  :     //EnterMutex();
; 821  :     if (m_state == kInactive)

  00014	e3a06001	 mov         r6, #1
  00018	e3530003	 cmp         r3, #3
  0001c	1a000019	 bne         |$LN2@StartStrea|

; 822  :         {
; 823  :         // signal to client we are about to start
; 824  :         m_state = kActive;
; 825  :         m_pDASFAudioStreamPort->StreamStarting(this);

  00020	e5940038	 ldr         r0, [r4, #0x38]
  00024	e1a01004	 mov         r1, r4
  00028	e5846020	 str         r6, [r4, #0x20]
  0002c	eb000000	 bl          |?StreamStarting@DASFAudioStreamPort@@QAAHPAVDASFStream@@@Z|

; 826  :         //ExitMutex();
; 827  : 
; 828  :         // calling into this routine can create a deadlock situation
; 829  :         RETAILMSG(0, (L"StartStream: StartDASFStream\r\n"));
; 830  :         DASF::StartDASFStream(this);

  00030	e1a00004	 mov         r0, r4
  00034	eb000000	 bl          |?StartDASFStream@DASF@@SAHPAVDASFStream@@@Z|

; 831  : 
; 832  :         //EnterMutex();
; 833  : 
; 834  :         // start stream by copying audio data into DASF buffer and
; 835  :         // pushing it down to DASF
; 836  :         pBuffer = GetNextBuffer();

  00038	ea000007	 b           |$LN41@StartStrea|
  0003c		 |$LL3@StartStrea|

; 837  :         while (pBuffer != NULL)
; 838  :             {
; 839  :             if (IsOutputStream()== TRUE)

  0003c	e594301c	 ldr         r3, [r4, #0x1C]
  00040	e3530001	 cmp         r3, #1

; 840  :                 {
; 841  :                 ProcessBuffer(pBuffer);

  00044	01a01005	 moveq       r1, r5
  00048	01a00004	 moveq       r0, r4
  0004c	0b000000	 bleq        |?ProcessBuffer@DASFStream@@IAAHPAE@Z|

; 842  :                 }
; 843  :             InsertBuffer(pBuffer);

  00050	e1a01005	 mov         r1, r5
  00054	e1a00004	 mov         r0, r4
  00058	eb000000	 bl          |?InsertBuffer@DASFStream@@IAAHPAE@Z|
  0005c		 |$LN41@StartStrea|

; 844  :             pBuffer = GetNextBuffer();

  0005c	e5943020	 ldr         r3, [r4, #0x20]
  00060	e3a05000	 mov         r5, #0
  00064	e3530001	 cmp         r3, #1
  00068	1a000004	 bne         |$LN39@StartStrea|
  0006c	e5943028	 ldr         r3, [r4, #0x28]
  00070	e3530002	 cmp         r3, #2
  00074	b5943024	 ldrlt       r3, [r4, #0x24]
  00078	b0843103	 addlt       r3, r4, r3, lsl #2
  0007c	b593502c	 ldrlt       r5, [r3, #0x2C]
  00080		 |$LN39@StartStrea|
  00080	e3550000	 cmp         r5, #0
  00084	1affffec	 bne         |$LL3@StartStrea|
  00088		 |$LN2@StartStrea|

; 845  :             }
; 846  :         }
; 847  :     m_state = kActive;

  00088	e5846020	 str         r6, [r4, #0x20]
  0008c		 |$cleanUp$39610|

; 848  :     //ExitMutex();
; 849  : 
; 850  : cleanUp:
; 851  : RETAILMSG(0, (L"WAV:-StartStream()[pThis=0x%08X, dir=%d]\r\n",
; 852  :         this, IsOutputStream()));
; 853  :     return TRUE;

  0008c	e3a00001	 mov         r0, #1

; 854  : }

  00090	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00094	e12fff1e	 bx          lr
  00098		 |$M40839|

			 ENDP  ; |?StartStream@DASFStream@@QAAHXZ|, DASFStream::StartStream

	EXPORT	|?ISTDASFStreamDelete@DASFStream@@SAKPAX@Z| ; DASFStream::ISTDASFStreamDelete
	EXPORT	|??_C@_1GE@HJFIABNG@?$AAW?$AAA?$AAV?$AA?3?$AAI?$AAS?$AAT?$AAD?$AAA?$AAS?$AAF?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AAD?$AAe?$AAl?$AAe?$AAt?$AAe?$AA?$CI?$AA?$CJ?$AA?$FL?$AAp?$AAT?$AAh?$AAi?$AAs?$AA?$DN@| [ DATA ] ; `string'
	IMPORT	|NKDbgPrintfW|
	IMPORT	|WaitForSingleObject|
	IMPORT	|CeSetThreadPriority|
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.h

  00000			 AREA	 |.pdata|, PDATA
|$T40875| DCD	|$LN26@ISTDASFStr|
	DCD	0x40001c01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@HJFIABNG@?$AAW?$AAA?$AAV?$AA?3?$AAI?$AAS?$AAT?$AAD?$AAA?$AAS?$AAF?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AAD?$AAe?$AAl?$AAe?$AAt?$AAe?$AA?$CI?$AA?$CJ?$AA?$FL?$AAp?$AAT?$AAh?$AAi?$AAs?$AA?$DN@| DCB "W"
	DCB	0x0, "A", 0x0, "V", 0x0, ":", 0x0, "I", 0x0, "S", 0x0, "T"
	DCB	0x0, "D", 0x0, "A", 0x0, "S", 0x0, "F", 0x0, "S", 0x0, "t"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "m", 0x0, "D", 0x0, "e"
	DCB	0x0, "l", 0x0, "e", 0x0, "t", 0x0, "e", 0x0, "(", 0x0, ")"
	DCB	0x0, "[", 0x0, "p", 0x0, "T", 0x0, "h", 0x0, "i", 0x0, "s"
	DCB	0x0, "=", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "X", 0x0, ",", 0x0, " ", 0x0, "d", 0x0, "i", 0x0, "r"
	DCB	0x0, "=", 0x0, "%", 0x0, "d", 0x0, "]", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ISTDASFStreamDelete@DASFStream@@SAKPAX@Z| PROC ; DASFStream::ISTDASFStreamDelete

; 523  : {

  00000		 |$LN26@ISTDASFStr|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M40872|

; 524  :     DASFStream *pDASFStream;
; 525  : 
; 526  :     UNREFERENCED_PARAMETER(pv);
; 527  : 
; 528  :     // set this thread to be a very low priority
; 529  :     CeSetThreadPriority(GetCurrentThread(), DASFSTREAM_DELETE_THREAD_PRIORITY);

  00004	e3a0106f	 mov         r1, #0x6F
  00008	e3a00041	 mov         r0, #0x41
  0000c	eb000000	 bl          CeSetThreadPriority
  00010	e59f5054	 ldr         r5, [pc, #0x54]
  00014		 |$LL4@ISTDASFStr|

; 530  : 
; 531  :     // wait for event to get signaled
; 532  :     for(;;)
; 533  :         {
; 534  :         WaitForSingleObject(s_hDeleteSignal, INFINITE);

  00014	e5950000	 ldr         r0, [r5]
  00018	e3e01000	 mvn         r1, #0
  0001c	eb000000	 bl          WaitForSingleObject

; 535  : 
; 536  :         // synchronously delete DASFStream objects in the delete list
; 537  :         EnterMutex();

  00020	eb000000	 bl          EnterMutex

; 538  :         while (s_pDeleteList != NULL)

  00024	ea00000a	 b           |$LN23@ISTDASFStr|
  00028		 |$LL2@ISTDASFStr|

; 539  :             {
; 540  :             RETAILMSG(1, (L"WAV:ISTDASFStreamDelete()[pThis=0x%08X, dir=%d]\r\n",
; 541  :             s_pDeleteList, s_pDeleteList->IsOutputStream()));

  00028	e593201c	 ldr         r2, [r3, #0x1C]
  0002c	e59f0034	 ldr         r0, [pc, #0x34]
  00030	e1a01003	 mov         r1, r3
  00034	eb000000	 bl          NKDbgPrintfW

; 542  : 
; 543  :             pDASFStream = s_pDeleteList;

  00038	e5954008	 ldr         r4, [r5, #8]

; 544  :             pDASFStream->Uninitialize();

  0003c	e1a00004	 mov         r0, r4
  00040	eb000000	 bl          |?Uninitialize@DASFStream@@QAAXXZ|

; 545  : 
; 546  :             s_pDeleteList = pDASFStream->m_pNextDelete;

  00044	e5943004	 ldr         r3, [r4, #4]

; 547  : 
; 548  :             delete pDASFStream;

  00048	e1a00004	 mov         r0, r4
  0004c	e5853008	 str         r3, [r5, #8]
  00050	eb000000	 bl          |??3@YAXPAX@Z|
  00054		 |$LN23@ISTDASFStr|
  00054	e5953008	 ldr         r3, [r5, #8]
  00058	e3530000	 cmp         r3, #0
  0005c	1afffff1	 bne         |$LL2@ISTDASFStr|

; 549  :             }
; 550  :         ExitMutex();

  00060	eb000000	 bl          ExitMutex

; 551  : 
; 552  :         }

  00064	eaffffea	 b           |$LL4@ISTDASFStr|
  00068		 |$LN27@ISTDASFStr|
  00068		 |$LN28@ISTDASFStr|
  00068	00000000	 DCD         |??_C@_1GE@HJFIABNG@?$AAW?$AAA?$AAV?$AA?3?$AAI?$AAS?$AAT?$AAD?$AAA?$AAS?$AAF?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AAD?$AAe?$AAl?$AAe?$AAt?$AAe?$AA?$CI?$AA?$CJ?$AA?$FL?$AAp?$AAT?$AAh?$AAi?$AAs?$AA?$DN@|
  0006c		 |$LN29@ISTDASFStr|
  0006c	00000000	 DCD         |?s_hDeleteSignal@DASFStream@@1PAXA|
  00070		 |$M40873|

			 ENDP  ; |?ISTDASFStreamDelete@DASFStream@@SAKPAX@Z|, DASFStream::ISTDASFStreamDelete

	EXPORT	|?ProcessDASFCallback@DASFStream@@QAAHXZ| ; DASFStream::ProcessDASFCallback
	IMPORT	|memset|
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.h

  00000			 AREA	 |.pdata|, PDATA
|$T40946| DCD	|$LN41@ProcessDAS|
	DCD	0x40003d01
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ProcessDASFCallback@DASFStream@@QAAHXZ| PROC ; DASFStream::ProcessDASFCallback

; 724  : {

  00000		 |$LN41@ProcessDAS|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M40943|
  00004	e1a05000	 mov         r5, r0

; 725  :     RETAILMSG(0, (L"WAV:+ProcessDASFCallback()[pThis=0x%08X, dir=%d]\r\n",
; 726  :         this, IsOutputStream()));
; 727  : 
; 728  :     PBYTE pBuffer;
; 729  :     DecrementActiveDASFBufferCount();

  00008	e2850028	 add         r0, r5, #0x28
  0000c	eb000000	 bl          InterlockedDecrement
  00010	e3500000	 cmp         r0, #0
  00014	01a00005	 moveq       r0, r5
  00018	0b000000	 bleq        |?StopStream@DASFStream@@QAAHXZ|

; 730  : 
; 731  :     // check if this thread's permissions need to be set
; 732  :     if (m_ffSetProcPermissions == 0)

  0001c	e5953008	 ldr         r3, [r5, #8]
  00020	e3530000	 cmp         r3, #0
  00024	1a000004	 bne         |$LN4@ProcessDAS|

; 733  :         {
; 734  :         CeSetThreadPriority(GetCurrentThread(), 110);

  00028	e3a0106e	 mov         r1, #0x6E
  0002c	e3a00041	 mov         r0, #0x41
  00030	eb000000	 bl          CeSetThreadPriority

; 735  :         //SetProcPermissions(-1);              //Deprecated for WM7
; 736  :         m_ffSetProcPermissions = 1;

  00034	e3a03001	 mov         r3, #1
  00038	e5853008	 str         r3, [r5, #8]
  0003c		 |$LN4@ProcessDAS|

; 737  :         }
; 738  : 
; 739  :     // notify of recorded data
; 740  :     if (IsInputStream() == TRUE)

  0003c	e595301c	 ldr         r3, [r5, #0x1C]
  00040	e59f60a8	 ldr         r6, [pc, #0xA8]
  00044	e3530000	 cmp         r3, #0
  00048	1a000009	 bne         |$LN3@ProcessDAS|

; 741  :         {
; 742  :         // process recorded data
; 743  :         ProcessBuffer(GetCurrentActiveBuffer());

  0004c	e5953024	 ldr         r3, [r5, #0x24]
  00050	e1a00005	 mov         r0, r5
  00054	e283e001	 add         lr, r3, #1
  00058	e083269e	 umull       r2, r3, lr, r6
  0005c	e1a030a3	 mov         r3, r3, lsr #1
  00060	e0833083	 add         r3, r3, r3, lsl #1
  00064	e04e3003	 sub         r3, lr, r3
  00068	e0853103	 add         r3, r5, r3, lsl #2
  0006c	e593102c	 ldr         r1, [r3, #0x2C]
  00070	eb000000	 bl          |?ProcessBuffer@DASFStream@@IAAHPAE@Z|
  00074		 |$LN3@ProcessDAS|

; 744  :         }
; 745  : 
; 746  :     // clear buffer to remove audio artifacts
; 747  :     memset(GetCurrentActiveBuffer(), 0, DEFAULT_DASF_BUFFER_SIZE);

  00074	e5953024	 ldr         r3, [r5, #0x24]
  00078	e3a02a01	 mov         r2, #1, 20
  0007c	e3a01000	 mov         r1, #0
  00080	e2834001	 add         r4, r3, #1
  00084	e083e694	 umull       lr, r3, r4, r6
  00088	e1a030a3	 mov         r3, r3, lsr #1
  0008c	e0833083	 add         r3, r3, r3, lsl #1
  00090	e0443003	 sub         r3, r4, r3
  00094	e0853103	 add         r3, r5, r3, lsl #2
  00098	e593002c	 ldr         r0, [r3, #0x2C]
  0009c	eb000000	 bl          memset

; 748  : 
; 749  :     if (m_state == kActive)

  000a0	e5953020	 ldr         r3, [r5, #0x20]
  000a4	e3530001	 cmp         r3, #1
  000a8	1a00000d	 bne         |$LN2@ProcessDAS|

; 750  :         {
; 751  :         // push next buffer down to DSP
; 752  :         pBuffer = GetNextBuffer();

  000ac	e5953028	 ldr         r3, [r5, #0x28]
  000b0	e3a04000	 mov         r4, #0
  000b4	e3530002	 cmp         r3, #2
  000b8	b5953024	 ldrlt       r3, [r5, #0x24]
  000bc	b0853103	 addlt       r3, r5, r3, lsl #2
  000c0	b593402c	 ldrlt       r4, [r3, #0x2C]

; 753  :         if (IsOutputStream() == TRUE)

  000c4	e595301c	 ldr         r3, [r5, #0x1C]
  000c8	e3530001	 cmp         r3, #1

; 754  :             {
; 755  :             ProcessBuffer(pBuffer);

  000cc	01a01004	 moveq       r1, r4
  000d0	01a00005	 moveq       r0, r5
  000d4	0b000000	 bleq        |?ProcessBuffer@DASFStream@@IAAHPAE@Z|

; 756  :             }
; 757  :         InsertBuffer(pBuffer);

  000d8	e1a01004	 mov         r1, r4
  000dc	e1a00005	 mov         r0, r5
  000e0	eb000000	 bl          |?InsertBuffer@DASFStream@@IAAHPAE@Z|
  000e4		 |$LN2@ProcessDAS|

; 758  :         }
; 759  : 
; 760  :     RETAILMSG(0, (L"WAV:-ProcessDASFCallback()[pThis=0x%08X, dir=%d]\r\n",
; 761  :         this, IsOutputStream()));
; 762  :     return TRUE;

  000e4	e3a00001	 mov         r0, #1

; 763  : }

  000e8	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000ec	e12fff1e	 bx          lr
  000f0		 |$LN42@ProcessDAS|
  000f0		 |$LN43@ProcessDAS|
  000f0	aaaaaaab	 DCD         0xaaaaaaab
  000f4		 |$M40944|

			 ENDP  ; |?ProcessDASFCallback@DASFStream@@QAAHXZ|, DASFStream::ProcessDASFCallback

	EXPORT	|?OnDASFCallback@DASF@@SAXPAEPAKPAX@Z|	; DASF::OnDASFCallback

  00000			 AREA	 |.pdata|, PDATA
|$T40956| DCD	|$LN5@OnDASFCall|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?OnDASFCallback@DASF@@SAXPAEPAKPAX@Z| PROC ; DASF::OnDASFCallback

; 450  : {

  00000		 |$LN5@OnDASFCall|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M40953|

; 451  :     DASFStream  *pDASFStream = (DASFStream*)hContext;
; 452  : 
; 453  :     UNREFERENCED_PARAMETER(pAppBuf);
; 454  :     UNREFERENCED_PARAMETER(pActualSize);
; 455  : 
; 456  :     DEBUGMSG(ZONE_MDD, (TEXT("OnDASFCallback+\r\n")));
; 457  : 
; 458  :     pDASFStream->ProcessDASFCallback();

  00004	e1a00002	 mov         r0, r2
  00008	eb000000	 bl          |?ProcessDASFCallback@DASFStream@@QAAHXZ|

; 459  : 
; 460  :     DEBUGMSG(ZONE_MDD, (TEXT("OnDASFCallback-\r\n")));
; 461  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M40954|

			 ENDP  ; |?OnDASFCallback@DASF@@SAXPAEPAKPAX@Z|, DASF::OnDASFCallback

	EXPORT	|?OnDASFCallback2@DASF@@SAXPAEPAKPAX@Z|	; DASF::OnDASFCallback2

  00000			 AREA	 |.pdata|, PDATA
|$T40968| DCD	|$LN7@OnDASFCall@2|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?OnDASFCallback2@DASF@@SAXPAEPAKPAX@Z| PROC ; DASF::OnDASFCallback2

; 466  : {

  00000		 |$LN7@OnDASFCall@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M40965|

; 467  :     DEBUGMSG(ZONE_MDD, (TEXT("OnDASFCallback2+\r\n")));
; 468  : 
; 469  :     OnDASFCallback(pAppBuf, pActualSize, hContext);

  00004	e1a00002	 mov         r0, r2
  00008	eb000000	 bl          |?ProcessDASFCallback@DASFStream@@QAAHXZ|

; 470  : 
; 471  :     DEBUGMSG(ZONE_MDD, (TEXT("OnDASFCallback2-\r\n")));
; 472  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M40966|

			 ENDP  ; |?OnDASFCallback2@DASF@@SAXPAEPAKPAX@Z|, DASF::OnDASFCallback2

	EXPORT	|?InitializeDASFStream@DASFStream@@SAHXZ| ; DASFStream::InitializeDASFStream
	EXPORT	|??_C@_1IG@EHEGHIKL@?$AAD?$AAA?$AAS?$AAF?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAD?$AAA?$AAS?$AAF?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JA@DNHGKGBK@?$AAD?$AAA?$AAS?$AAF?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAD?$AAA?$AAS?$AAF?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm@| [ DATA ] ; `string'
	IMPORT	|CloseHandle|
	IMPORT	|CreateThread|
	IMPORT	|dpCurSettings|
	IMPORT	|CreateEventW|
	IMPORT	|InitializeCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T40985| DCD	|$LN17@Initialize@2|
	DCD	0x40003402

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IG@EHEGHIKL@?$AAD?$AAA?$AAS?$AAF?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAD?$AAA?$AAS?$AAF?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm@| DCB "D"
	DCB	0x0, "A", 0x0, "S", 0x0, "F", 0x0, "S", 0x0, "t", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "m", 0x0, ":", 0x0, ":", 0x0, "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, "D", 0x0, "A", 0x0, "S"
	DCB	0x0, "F", 0x0, "S", 0x0, "t", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "m", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "s", 0x0, "p", 0x0, "a", 0x0, "w"
	DCB	0x0, "n", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "l", 0x0, "e"
	DCB	0x0, "t", 0x0, "e", 0x0, " ", 0x0, "t", 0x0, "h", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JA@DNHGKGBK@?$AAD?$AAA?$AAS?$AAF?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAD?$AAA?$AAS?$AAF?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm@| DCB "D"
	DCB	0x0, "A", 0x0, "S", 0x0, "F", 0x0, "S", 0x0, "t", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "m", 0x0, ":", 0x0, ":", 0x0, "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "l"
	DCB	0x0, "i", 0x0, "z", 0x0, "e", 0x0, "D", 0x0, "A", 0x0, "S"
	DCB	0x0, "F", 0x0, "S", 0x0, "t", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "m", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "F", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "s", 0x0, "t"
	DCB	0x0, "a", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, " ", 0x0, "e", 0x0, "v", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, " ", 0x0, "o", 0x0, "b", 0x0, "j", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InitializeDASFStream@DASFStream@@SAHXZ| PROC ; DASFStream::InitializeDASFStream

; 484  : {

  00000		 |$LN17@Initialize@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M40982|

; 485  :     BOOL rc = FALSE;
; 486  : 
; 487  :     // initialize critical sections
; 488  :     InitializeCriticalSection(&s_csDASFStream);

  00008	e59f50bc	 ldr         r5, [pc, #0xBC]
  0000c	e3a04000	 mov         r4, #0
  00010	e1a00005	 mov         r0, r5
  00014	eb000000	 bl          InitializeCriticalSection

; 489  : 
; 490  :     // create event object to signal delete thread
; 491  :     s_hDeleteSignal = CreateEvent(NULL, FALSE, FALSE, NULL);

  00018	e3a03000	 mov         r3, #0
  0001c	e3a02000	 mov         r2, #0
  00020	e3a01000	 mov         r1, #0
  00024	e3a00000	 mov         r0, #0
  00028	eb000000	 bl          CreateEventW
  0002c	e3500000	 cmp         r0, #0
  00030	e5850038	 str         r0, [r5, #0x38]

; 492  :     if (s_hDeleteSignal == NULL)

  00034	1a000005	 bne         |$LN5@Initialize@2|

; 493  :         {
; 494  :         RETAILMSG(ZONE_ERROR, (L"DASFStream::InitializeDASFStream - "
; 495  :             L"Failed to instantiate event object\r\n")
; 496  :             );

  00038	e59f3080	 ldr         r3, [pc, #0x80]
  0003c	e5933440	 ldr         r3, [r3, #0x440]
  00040	e3130902	 tst         r3, #2, 18
  00044	0a000012	 beq         |$LN13@Initialize@2|
  00048	e59f0078	 ldr         r0, [pc, #0x78]

; 497  :         goto cleanUp;

  0004c	ea00000f	 b           |$LN14@Initialize@2|
  00050		 |$LN5@Initialize@2|

; 498  :         }
; 499  : 
; 500  :     // spawn thread
; 501  :     s_hDeleteThread = CreateThread(NULL, 0, ISTDASFStreamDelete, 0, 0, NULL);

  00050	e59f206c	 ldr         r2, [pc, #0x6C]
  00054	e3a0e000	 mov         lr, #0
  00058	e3a03000	 mov         r3, #0
  0005c	e3a01000	 mov         r1, #0
  00060	e3a00000	 mov         r0, #0
  00064	e58de004	 str         lr, [sp, #4]
  00068	e58de000	 str         lr, [sp]
  0006c	eb000000	 bl          CreateThread
  00070	e3500000	 cmp         r0, #0
  00074	e585003c	 str         r0, [r5, #0x3C]

; 502  :     if (s_hDeleteThread == NULL)

  00078	1a00000a	 bne         |$LN3@Initialize@2|

; 503  :         {
; 504  :         RETAILMSG(ZONE_ERROR, (L"DASFStream::InitializeDASFStream - "
; 505  :             L"Failed to spawn delete thread\r\n")
; 506  :             );

  0007c	e59f303c	 ldr         r3, [pc, #0x3C]
  00080	e5933440	 ldr         r3, [r3, #0x440]
  00084	e3130902	 tst         r3, #2, 18
  00088	0a000001	 beq         |$LN13@Initialize@2|
  0008c	e59f0028	 ldr         r0, [pc, #0x28]
  00090		 |$LN14@Initialize@2|
  00090	eb000000	 bl          NKDbgPrintfW
  00094		 |$LN13@Initialize@2|

; 497  :         goto cleanUp;

  00094	e5950038	 ldr         r0, [r5, #0x38]

; 511  : cleanUp:
; 512  :     if (rc == FALSE)
; 513  :         {
; 514  :         CloseHandle(s_hDeleteSignal);

  00098	eb000000	 bl          CloseHandle

; 515  :         s_hDeleteSignal = NULL;

  0009c	e3a03000	 mov         r3, #0
  000a0	e5853038	 str         r3, [r5, #0x38]
  000a4	ea000000	 b           |$LN1@Initialize@2|
  000a8		 |$LN3@Initialize@2|

; 507  :         goto cleanUp;
; 508  :         }
; 509  : 
; 510  :     rc = TRUE;

  000a8	e3a04001	 mov         r4, #1
  000ac		 |$cleanUp$39508|

; 515  :         s_hDeleteSignal = NULL;

  000ac		 |$LN1@Initialize@2|

; 516  :         }
; 517  :     return rc;
; 518  : }

  000ac	e1a00004	 mov         r0, r4
  000b0	e28dd008	 add         sp, sp, #8
  000b4	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000b8	e12fff1e	 bx          lr
  000bc		 |$LN18@Initialize@2|
  000bc		 |$LN19@Initialize@2|
  000bc	00000000	 DCD         |??_C@_1IG@EHEGHIKL@?$AAD?$AAA?$AAS?$AAF?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAD?$AAA?$AAS?$AAF?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm@|
  000c0		 |$LN20@Initialize@2|
  000c0	00000000	 DCD         |dpCurSettings|
  000c4		 |$LN21@Initialize@2|
  000c4	00000000	 DCD         |?ISTDASFStreamDelete@DASFStream@@SAKPAX@Z|
  000c8		 |$LN22@Initialize@2|
  000c8	00000000	 DCD         |??_C@_1JA@DNHGKGBK@?$AAD?$AAA?$AAS?$AAF?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm?$AA?3?$AA?3?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAe?$AAD?$AAA?$AAS?$AAF?$AAS?$AAt?$AAr?$AAe?$AAa?$AAm@|
  000cc		 |$LN23@Initialize@2|
  000cc	00000000	 DCD         |?s_csDASFStream@DASFStream@@1UCRITICAL_SECTION@@A|
  000d0		 |$M40983|

			 ENDP  ; |?InitializeDASFStream@DASFStream@@SAHXZ|, DASFStream::InitializeDASFStream

	EXPORT	|?open_Port@DASFAudioStreamPort@@UAAHPBGPAX1@Z| ; DASFAudioStreamPort::open_Port

  00000			 AREA	 |.pdata|, PDATA
|$T41003| DCD	|$LN7@open_Port|
	DCD	0x40000d01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?open_Port@DASFAudioStreamPort@@UAAHPBGPAX1@Z| PROC ; DASFAudioStreamPort::open_Port

; 1189 : {

  00000		 |$LN7@open_Port|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M41000|

; 1190 :     UNREFERENCED_PARAMETER(hRecPortConfigInfo);
; 1191 :     UNREFERENCED_PARAMETER(hPlayPortConfigInfo);
; 1192 :     return DASF::Initialize(szPort) && DASFStream::InitializeDASFStream();

  00004	e1a00001	 mov         r0, r1
  00008	eb000000	 bl          |?Initialize@DASF@@SAHPBG@Z|
  0000c	e3500000	 cmp         r0, #0
  00010	0a000004	 beq         |$LN3@open_Port|
  00014	eb000000	 bl          |?InitializeDASFStream@DASFStream@@SAHXZ|
  00018	e3500000	 cmp         r0, #0
  0001c	13a00001	 movne       r0, #1

; 1193 : }

  00020	149de004	 ldrne       lr, [sp], #4
  00024	112fff1e	 bxne        lr
  00028		 |$LN3@open_Port|

; 1190 :     UNREFERENCED_PARAMETER(hRecPortConfigInfo);
; 1191 :     UNREFERENCED_PARAMETER(hPlayPortConfigInfo);
; 1192 :     return DASF::Initialize(szPort) && DASFStream::InitializeDASFStream();

  00028	e3a00000	 mov         r0, #0

; 1193 : }

  0002c	e49de004	 ldr         lr, [sp], #4
  00030	e12fff1e	 bx          lr
  00034		 |$M41001|

			 ENDP  ; |?open_Port@DASFAudioStreamPort@@UAAHPBGPAX1@Z|, DASFAudioStreamPort::open_Port

	EXPORT	|?RegisterDASFStream@DASF@@SAHPAVDASFStream@@@Z| ; DASF::RegisterDASFStream
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.h

  00000			 AREA	 |.pdata|, PDATA
|$T41043| DCD	|$LN24@RegisterDA|
	DCD	0x40005102
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\drivers\tps659xx_wave\dasfaudioport.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RegisterDASFStream@DASF@@SAHPAVDASFStream@@@Z| PROC ; DASF::RegisterDASFStream

; 242  : {

  00000		 |$LN24@RegisterDA|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004	e24dd07c	 sub         sp, sp, #0x7C
  00008		 |$M41040|
  00008	e1a07000	 mov         r7, r0

; 243  :     WAVEFORMATEX const*pWaveFormat = pDASFStream->GetWaveFormat();

  0000c	e5973010	 ldr         r3, [r7, #0x10]

; 244  : 
; 245  :     BOOL bRet = FALSE;
; 246  :     HRESULT hResult = S_OK;
; 247  :     HWCODEC_PARAM_t  codecParam;
; 248  :     HWCODEC_AppInfo_t appInfo;
; 249  :     HWCODEC_AppRegisterCb_t Cb;
; 250  :     DWORD idDASFStream =0;
; 251  :     HANDLE hDASFContext = NULL;

  00010	e3a02000	 mov         r2, #0
  00014	e58d200c	 str         r2, [sp, #0xC]
  00018	e3530000	 cmp         r3, #0
  0001c	12835024	 addne       r5, r3, #0x24
  00020	e3a03000	 mov         r3, #0
  00024	03a05000	 moveq       r5, #0
  00028	e58d3008	 str         r3, [sp, #8]

; 252  : 
; 253  :     codecParam.Channels = pWaveFormat->nChannels;

  0002c	e5d52002	 ldrb        r2, [r5, #2]
  00030	e5d53003	 ldrb        r3, [r5, #3]

; 254  :     codecParam.SamplesPerSec = pWaveFormat->nSamplesPerSec;
; 255  :     codecParam.BitsPerSample = pWaveFormat->wBitsPerSample;
; 256  : 
; 257  :     appInfo.hAppInstance = pDASFStream;  //pointer to DASFStream
; 258  :     appInfo.InAllocSize = DEFAULT_DASF_BUFFER_SIZE;
; 259  :     appInfo.OutAllocSize = DEFAULT_DASF_BUFFER_SIZE;
; 260  : 
; 261  :     // New multimedia changes whiche sends their buffer pointer
; 262  :     // wave driver must set this to 1(Adapter sends its buffers ) or
; 263  :     // 0(HW adapter receives the buffers from wave driver )
; 264  :     //
; 265  :     // GetHWBuffer option has been removed for 35xx, now buffers are always allocated and sent to
; 266  :     // wave driver by hw adapter.
; 267  :     //appInfo.GetHWBuffer = 1;
; 268  :     appInfo.InNoOfHWBuffers = MAX_DASFBUFFER_COUNT;
; 269  :     appInfo.OutNoOfHWBuffers = 0;
; 270  : 
; 271  :     Cb.pfnOutputCallback = DASF::OnDASFCallback2;
; 272  :     Cb.pfnInputCallback = DASF::OnDASFCallback;

  00034	e59f4104	 ldr         r4, [pc, #0x104]
  00038	e59fe0fc	 ldr         lr, [pc, #0xFC]
  0003c	e1823403	 orr         r3, r2, r3, lsl #8
  00040	e58d301c	 str         r3, [sp, #0x1C]
  00044	e5d50004	 ldrb        r0, [r5, #4]
  00048	e5d53005	 ldrb        r3, [r5, #5]
  0004c	e5d52006	 ldrb        r2, [r5, #6]
  00050	e5d51007	 ldrb        r1, [r5, #7]
  00054	e1803403	 orr         r3, r0, r3, lsl #8
  00058	e1833802	 orr         r3, r3, r2, lsl #16
  0005c	e1833c01	 orr         r3, r3, r1, lsl #24
  00060	e58d3020	 str         r3, [sp, #0x20]
  00064	e5d5200e	 ldrb        r2, [r5, #0xE]
  00068	e5d5300f	 ldrb        r3, [r5, #0xF]

; 273  :     Cb.pfnErrorNotifyCallback = DASF::OnDASFError;
; 274  : 
; 275  :     DEBUGMSG(ZONE_MDD, (TEXT("Calling DSP==>InitializeCodecEx()\r\n")));
; 276  : 
; 277  :     hResult = _HwCodecAdapterHooks.InitializeCodecEx(
; 278  :                            &codecParam,
; 279  :                            &appInfo,
; 280  :                            pDASFStream->IsOutputStream() ? PCMDEC : PCMENC,
; 281  :                            &Cb,
; 282  :                            &hDASFContext,
; 283  :                            &idDASFStream
; 284  :                            );

  0006c	e597001c	 ldr         r0, [r7, #0x1C]
  00070	e59f10c0	 ldr         r1, [pc, #0xC0]
  00074	e1823403	 orr         r3, r2, r3, lsl #8
  00078	e58d3024	 str         r3, [sp, #0x24]
  0007c	e59f30b0	 ldr         r3, [pc, #0xB0]
  00080	e3a05a01	 mov         r5, #1, 20
  00084	e3a02a01	 mov         r2, #1, 20
  00088	e3a06003	 mov         r6, #3
  0008c	e58d5030	 str         r5, [sp, #0x30]
  00090	e58d4014	 str         r4, [sp, #0x14]
  00094	e3500000	 cmp         r0, #0
  00098	e3a09000	 mov         r9, #0
  0009c	e58d202c	 str         r2, [sp, #0x2C]
  000a0	e58d6034	 str         r6, [sp, #0x34]
  000a4	e5936000	 ldr         r6, [r3]
  000a8	e28d4008	 add         r4, sp, #8
  000ac	e28d500c	 add         r5, sp, #0xC
  000b0	e58d1018	 str         r1, [sp, #0x18]
  000b4	13a02001	 movne       r2, #1
  000b8	e28d3010	 add         r3, sp, #0x10
  000bc	e3a08000	 mov         r8, #0
  000c0	e58d7028	 str         r7, [sp, #0x28]
  000c4	e58d9058	 str         r9, [sp, #0x58]
  000c8	e58de010	 str         lr, [sp, #0x10]
  000cc	03a02000	 moveq       r2, #0
  000d0	e28d1028	 add         r1, sp, #0x28
  000d4	e28d001c	 add         r0, sp, #0x1C
  000d8	e58d4004	 str         r4, [sp, #4]
  000dc	e58d5000	 str         r5, [sp]
  000e0	e1a0e00f	 mov         lr, pc
  000e4	e12fff16	 bx          r6
  000e8	e3500000	 cmp         r0, #0

; 285  :     if ( hResult != S_OK )

  000ec	1a00000c	 bne         |$cleanUp$39410|

; 286  :     {
; 287  :         DEBUGMSG(ZONE_MDD, (TEXT("Failed to initialize hw codec adapter\r\n")));
; 288  :         goto cleanUp;
; 289  :     }
; 290  :     // Note in 35xx DASF input hw buffers implies playback buffers and output hw buffers implies
; 291  :     //. recorded buffers
; 292  :     //
; 293  :     pDASFStream->SetDASFInfo(hDASFContext, idDASFStream,
; 294  :         pDASFStream->IsOutputStream() ? (PBYTE*)appInfo.InBufArray : (PBYTE*)appInfo.OutBufArray,
; 295  :         pDASFStream->IsOutputStream() ? appInfo.InNoOfHWBuffers : appInfo.OutNoOfHWBuffers
; 296  :         );

  000f0	e597301c	 ldr         r3, [r7, #0x1C]
  000f4	e59d2008	 ldr         r2, [sp, #8]
  000f8	e59d100c	 ldr         r1, [sp, #0xC]
  000fc	e3530000	 cmp         r3, #0
  00100	159de034	 ldrne       lr, [sp, #0x34]
  00104	059de058	 ldreq       lr, [sp, #0x58]
  00108	e3530000	 cmp         r3, #0
  0010c	128d3038	 addne       r3, sp, #0x38
  00110	028d305c	 addeq       r3, sp, #0x5C
  00114	e1a00007	 mov         r0, r7
  00118	e58de000	 str         lr, [sp]
  0011c	eb000000	 bl          |?SetDASFInfo@DASFStream@@QAAXPAXIPAPAEH@Z|

; 297  : 
; 298  :     bRet = TRUE;

  00120	e3a08001	 mov         r8, #1
  00124		 |$cleanUp$39410|

; 299  : 
; 300  : cleanUp:
; 301  :     return bRet;
; 302  : }

  00124	e1a00008	 mov         r0, r8
  00128	e28dd07c	 add         sp, sp, #0x7C
  0012c	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  00130	e12fff1e	 bx          lr
  00134		 |$LN25@RegisterDA|
  00134		 |$LN26@RegisterDA|
  00134	00000000	 DCD         |_HwCodecAdapterHooks|
  00138		 |$LN27@RegisterDA|
  00138	00000000	 DCD         |?OnDASFError@DASF@@SAXHPAX@Z|
  0013c		 |$LN28@RegisterDA|
  0013c	00000000	 DCD         |?OnDASFCallback2@DASF@@SAXPAEPAKPAX@Z|
  00140		 |$LN29@RegisterDA|
  00140	00000000	 DCD         |?OnDASFCallback@DASF@@SAXPAEPAKPAX@Z|
  00144		 |$M41041|

			 ENDP  ; |?RegisterDASFStream@DASF@@SAHPAVDASFStream@@@Z|, DASF::RegisterDASFStream

	EXPORT	|?Initialize@DASFStream@@QAAHPAVDASFAudioStreamPort@@PAXHI@Z| ; DASFStream::Initialize

  00000			 AREA	 |.pdata|, PDATA
|$T41061| DCD	|$LN5@Initialize@3|
	DCD	0x40001a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Initialize@DASFStream@@QAAHPAVDASFAudioStreamPort@@PAXHI@Z| PROC ; DASFStream::Initialize

; 611  : {

  00000		 |$LN5@Initialize@3|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M41058|
  00004	e1a04000	 mov         r4, r0

; 612  :     // initialize member variables
; 613  :     m_pNext = NULL;
; 614  :     m_pNextDelete = NULL;
; 615  :     m_bOutput = bOutput;
; 616  :     m_state = kInactive;

  00008	e3a00003	 mov         r0, #3
  0000c	e3a05000	 mov         r5, #0

; 617  :     m_nNextDASFBuffer = 0;
; 618  :     m_hStreamContext = NULL;
; 619  :     m_ffSetProcPermissions = 0;
; 620  :     m_nActiveDASFBufferCount = 0;
; 621  :     m_hStreamContext = hStreamContext;
; 622  :     m_pDASFAudioStreamPort = pDASFAudioStreamPort;
; 623  :     memset(m_rgDASFBuffers, 0, sizeof(m_rgDASFBuffers));

  00010	e1a0e004	 mov         lr, r4
  00014	e3a06000	 mov         r6, #0
  00018	e5840020	 str         r0, [r4, #0x20]
  0001c	e5845000	 str         r5, [r4]
  00020	e5845004	 str         r5, [r4, #4]
  00024	e5845024	 str         r5, [r4, #0x24]
  00028	e5845008	 str         r5, [r4, #8]
  0002c	e5845028	 str         r5, [r4, #0x28]
  00030	e584301c	 str         r3, [r4, #0x1C]
  00034	e5842010	 str         r2, [r4, #0x10]
  00038	e5841038	 str         r1, [r4, #0x38]
  0003c	e5ae602c	 str         r6, [lr, #0x2C]!

; 624  : 
; 625  :     // create new instance of DASF stream id
; 626  :     DASF::RegisterDASFStream(this);

  00040	e1a00004	 mov         r0, r4
  00044	e58e6004	 str         r6, [lr, #4]
  00048	e58e6008	 str         r6, [lr, #8]
  0004c	eb000000	 bl          |?RegisterDASFStream@DASF@@SAHPAVDASFStream@@@Z|

; 627  : 
; 628  :     // Set gain for this stream
; 629  :     DASF::SetGain(nGain, this);

  00050	e59d0010	 ldr         r0, [sp, #0x10]
  00054	e1a01004	 mov         r1, r4
  00058	eb000000	 bl          |?SetGain@DASF@@SAHIPAVDASFStream@@@Z|

; 630  : 
; 631  :     return TRUE;

  0005c	e3a00001	 mov         r0, #1

; 632  : }

  00060	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00064	e12fff1e	 bx          lr
  00068		 |$M41059|

			 ENDP  ; |?Initialize@DASFStream@@QAAHPAVDASFAudioStreamPort@@PAXHI@Z|, DASFStream::Initialize

	EXPORT	|?signal_Port@DASFAudioStreamPort@@UAAHKPAXK@Z| ; DASFAudioStreamPort::signal_Port

  00000			 AREA	 |.pdata|, PDATA
|$T41162| DCD	|$LN83@signal_Por|
	DCD	0x40007b02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?signal_Port@DASFAudioStreamPort@@UAAHKPAXK@Z| PROC ; DASFAudioStreamPort::signal_Port

; 1059 : {

  00000		 |$LN83@signal_Por|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M41159|
  00008	e1a05003	 mov         r5, r3
  0000c	e1a06002	 mov         r6, r2
  00010	e1a04000	 mov         r4, r0

; 1060 :     DEBUGMSG(ZONE_FUNCTION,
; 1061 :         (L"WAV:+DMTAudioStreamPort::signal_Port(SignalId=%d)", SignalId)
; 1062 :         );
; 1063 : 
; 1064 :     BOOL bIsOutput;
; 1065 :     DASFStream *pStream;
; 1066 :     BOOL rc = TRUE;
; 1067 : 
; 1068 :     if (DASF::IsDASFInitialized() == FALSE)

  00014	e59fe1cc	 ldr         lr, [pc, #0x1CC]
  00018	e3a07001	 mov         r7, #1
  0001c	e59ee000	 ldr         lr, [lr]
  00020	e35e0000	 cmp         lr, #0

; 1069 :         {
; 1070 :         rc = FALSE;

  00024	0a00001d	 beq         |$LN64@signal_Por|

; 1071 :         goto cleanUp;
; 1072 :         }
; 1073 : 
; 1074 :     // route request to correct callback routine
; 1075 :     //
; 1076 :     switch (SignalId)

  00028	e2412001	 sub         r2, r1, #1
  0002c	e352000d	 cmp         r2, #0xD
  00030	8a000068	 bhi         |$cleanUp$39701|
  00034	e1a03082	 mov         r3, r2, lsl #1
  00038	e083300f	 add         r3, r3, pc
  0003c	e1d330b4	 ldrh        r3, [r3, #4]
  00040	e08ff003	 add         pc, pc, r3
  00044		 |$LN66@signal_Por|
  00044		 |$LN65@signal_Por|
  00044		 |$LN67@signal_Por|
  00044	00b0		 DCW         0xb0
  00046		 |$LN68@signal_Por|
  00046	0100		 DCW         0x100
  00048		 |$LN69@signal_Por|
  00048	00d8		 DCW         0xd8
  0004a		 |$LN70@signal_Por|
  0004a	0134		 DCW         0x134
  0004c		 |$LN71@signal_Por|
  0004c	0190		 DCW         0x190
  0004e		 |$LN72@signal_Por|
  0004e	0190		 DCW         0x190
  00050		 |$LN73@signal_Por|
  00050	0018		 DCW         0x18
  00052		 |$LN74@signal_Por|
  00052	0018		 DCW         0x18
  00054		 |$LN75@signal_Por|
  00054	0094		 DCW         0x94
  00056		 |$LN76@signal_Por|
  00056	0094		 DCW         0x94
  00058		 |$LN77@signal_Por|
  00058	0094		 DCW         0x94
  0005a		 |$LN78@signal_Por|
  0005a	0094		 DCW         0x94
  0005c		 |$LN79@signal_Por|
  0005c	0168		 DCW         0x168
  0005e		 |$LN80@signal_Por|
  0005e	0168		 DCW         0x168
  00060		 |$LN17@signal_Por|

; 1077 :         {
; 1078 :         case ASPS_START_STREAM_TX:
; 1079 :         case ASPS_START_STREAM_RX:
; 1080 :             // check if we already have a stream w/ matching streamcontext
; 1081 :             bIsOutput = (SignalId == ASPS_START_STREAM_TX);

  00060	e3510007	 cmp         r1, #7
  00064	03a08001	 moveq       r8, #1

; 1082 : 
; 1083 :             RETAILMSG(0, (L"WAV:ASPS_START_STREAM(%d) hStrmCtxt=0x%08X\r\n",
; 1084 :                 bIsOutput, hStreamContext));
; 1085 :             if (m_nActiveRxStreams !=0)
; 1086 :                 {
; 1087 :                 bIsOutput = bIsOutput;
; 1088 :                 }
; 1089 : 
; 1090 :             pStream = FindDASFStream(hStreamContext);

  00068	e1a01006	 mov         r1, r6
  0006c	e1a00004	 mov         r0, r4
  00070	13a08000	 movne       r8, #0
  00074	eb000000	 bl          |?FindDASFStream@DASFAudioStreamPort@@IAAPAVDASFStream@@PAX@Z|
  00078	e1b05000	 movs        r5, r0

; 1091 :             if (pStream == NULL)

  0007c	1a000013	 bne         |$LN15@signal_Por|

; 1092 :                 {
; 1093 :                 // create DASF Stream
; 1094 :                 pStream = DASFStream::CreateDASFStream();

  00080	e3a0003c	 mov         r0, #0x3C
  00084	eb000000	 bl          |??2@YAPAXI@Z|
  00088	e1b05000	 movs        r5, r0
  0008c	13a03000	 movne       r3, #0
  00090	15853020	 strne       r3, [r5, #0x20]
  00094	03a05000	 moveq       r5, #0

; 1095 :                 if (pStream == FALSE)

  00098	e3550000	 cmp         r5, #0
  0009c	1a000001	 bne         |$LN14@signal_Por|
  000a0		 |$LN64@signal_Por|

; 1096 :                     {
; 1097 :                     rc = FALSE;

  000a0	e3a07000	 mov         r7, #0

; 1172 :                 }
; 1173 :             break;
; 1174 :         }
; 1175 : 
; 1176 :     DEBUGMSG(ZONE_FUNCTION,
; 1177 :         (L"WAV:-DMTAudioStreamPort::signal_Port(SignalId=%d)", SignalId)
; 1178 :         );
; 1179 : 
; 1180 : cleanUp:

  000a4	ea00004b	 b           |$cleanUp$39701|
  000a8		 |$LN14@signal_Por|

; 1098 :                     goto cleanUp;
; 1099 :                     }
; 1100 : 
; 1101 :                 // initialize Stream
; 1102 :                 StreamContext* pStreamContext = (StreamContext*)hStreamContext;
; 1103 :                 pStream->Initialize(this, hStreamContext, bIsOutput, (UINT)pStreamContext->GetGain());

  000a8	e5961058	 ldr         r1, [r6, #0x58]
  000ac	e1a03008	 mov         r3, r8
  000b0	e1a02006	 mov         r2, r6
  000b4	e58d1000	 str         r1, [sp]
  000b8	e1a01004	 mov         r1, r4
  000bc	e1a00005	 mov         r0, r5
  000c0	eb000000	 bl          |?Initialize@DASFStream@@QAAHPAVDASFAudioStreamPort@@PAXHI@Z|

; 1104 : 
; 1105 : 
; 1106 :                 // insert into queue
; 1107 :                 InsertDASFStream(pStream);

  000c4	e1a01005	 mov         r1, r5
  000c8	e1a00004	 mov         r0, r4
  000cc	eb000000	 bl          |?InsertDASFStream@DASFAudioStreamPort@@IAAXPAVDASFStream@@@Z|
  000d0		 |$LN15@signal_Por|

; 1108 :                 }
; 1109 : 
; 1110 :             // start DASF Stream
; 1111 :             pStream->StartStream();

  000d0	e1a00005	 mov         r0, r5
  000d4	eb000000	 bl          |?StartStream@DASFStream@@QAAHXZ|

; 1112 :             break;

  000d8	ea00003e	 b           |$cleanUp$39701|
  000dc		 |$LN12@signal_Por|

; 1113 : 
; 1114 :         case ASPS_STOP_STREAM_TX:
; 1115 :         case ASPS_STOP_STREAM_RX:
; 1116 :             bIsOutput = (SignalId == ASPS_STOP_STREAM_TX);
; 1117 : 
; 1118 :             // find the DASF stream
; 1119 :             pStream = FindDASFStream(hStreamContext);

  000dc	e1a01006	 mov         r1, r6
  000e0	e1a00004	 mov         r0, r4
  000e4	eb000000	 bl          |?FindDASFStream@DASFAudioStreamPort@@IAAPAVDASFStream@@PAX@Z|
  000e8	e3500000	 cmp         r0, #0

; 1120 :             RETAILMSG(0, (L"WAV:ASPS_STOP_STREAM(%d) hStrmCtxt=0x%08X\r\n",
; 1121 :                 bIsOutput, hStreamContext));
; 1122 :             if (pStream != NULL)

  000ec	0a000039	 beq         |$cleanUp$39701|

; 1123 :                 {
; 1124 :                 pStream->StopStream();

  000f0	eb000000	 bl          |?StopStream@DASFStream@@QAAHXZ|

; 1125 :                 }
; 1126 :             break;

  000f4	ea000037	 b           |$cleanUp$39701|
  000f8		 |$LN8@signal_Por|

; 1127 : 
; 1128 :         case ASPS_ABORT_STREAM_TX:
; 1129 :         case ASPS_ABORT_STREAM_RX:
; 1130 :             // find the DASF stream
; 1131 :             pStream = FindDASFStream(hStreamContext);
; 1132 :             if (pStream != NULL)
; 1133 :                 {
; 1134 :                 pStream->StopStream();
; 1135 :                 }
; 1136 :             break;
; 1137 : 
; 1138 :         case ASPS_START_TX:
; 1139 :             SendAudioStreamMessage(ASPM_START_TX, NULL);

  000f8	e5940028	 ldr         r0, [r4, #0x28]
  000fc	e3a02b01	 mov         r2, #1, 22
  00100	e1a01004	 mov         r1, r4
  00104	e590e000	 ldr         lr, [r0]
  00108	e3a03000	 mov         r3, #0
  0010c	e3822065	 orr         r2, r2, #0x65
  00110	e59e4000	 ldr         r4, [lr]
  00114	e1a0e00f	 mov         lr, pc
  00118	e12fff14	 bx          r4

; 1140 :             break;

  0011c	ea00002d	 b           |$cleanUp$39701|
  00120		 |$LN7@signal_Por|

; 1141 : 
; 1142 :         case ASPS_START_RX:
; 1143 :             SendAudioStreamMessage(ASPM_START_RX, NULL);

  00120	e5940028	 ldr         r0, [r4, #0x28]
  00124	e3a02b01	 mov         r2, #1, 22
  00128	e1a01004	 mov         r1, r4
  0012c	e590e000	 ldr         lr, [r0]
  00130	e3a03000	 mov         r3, #0
  00134	e3822067	 orr         r2, r2, #0x67
  00138	e59e4000	 ldr         r4, [lr]
  0013c	e1a0e00f	 mov         lr, pc
  00140	e12fff14	 bx          r4

; 1144 :             break;

  00144	ea000023	 b           |$cleanUp$39701|
  00148		 |$LN6@signal_Por|

; 1145 : 
; 1146 :         case ASPS_STOP_TX:
; 1147 :             if (m_nActiveTxStreams == 0)

  00148	e5943010	 ldr         r3, [r4, #0x10]
  0014c	e3530000	 cmp         r3, #0
  00150	1a000020	 bne         |$cleanUp$39701|

; 1148 :                 {
; 1149 :                 SendAudioStreamMessage(ASPM_STOP_TX, NULL);

  00154	e5940028	 ldr         r0, [r4, #0x28]
  00158	e3a02b01	 mov         r2, #1, 22
  0015c	e1a01004	 mov         r1, r4
  00160	e590e000	 ldr         lr, [r0]
  00164	e3a03000	 mov         r3, #0
  00168	e3822066	 orr         r2, r2, #0x66
  0016c	e59e4000	 ldr         r4, [lr]
  00170	e1a0e00f	 mov         lr, pc
  00174	e12fff14	 bx          r4

; 1150 :                 }
; 1151 :             break;

  00178	ea000016	 b           |$cleanUp$39701|
  0017c		 |$LN4@signal_Por|

; 1152 : 
; 1153 :         case ASPS_STOP_RX:
; 1154 :             if (m_nActiveRxStreams == 0)

  0017c	e594300c	 ldr         r3, [r4, #0xC]
  00180	e3530000	 cmp         r3, #0
  00184	1a000013	 bne         |$cleanUp$39701|

; 1155 :                 {
; 1156 :                 SendAudioStreamMessage(ASPM_STOP_RX, NULL);

  00188	e5940028	 ldr         r0, [r4, #0x28]
  0018c	e3a02b01	 mov         r2, #1, 22
  00190	e1a01004	 mov         r1, r4
  00194	e590e000	 ldr         lr, [r0]
  00198	e3a03000	 mov         r3, #0
  0019c	e3822068	 orr         r2, r2, #0x68
  001a0	e59e4000	 ldr         r4, [lr]
  001a4	e1a0e00f	 mov         lr, pc
  001a8	e12fff14	 bx          r4

; 1157 :                 }
; 1158 :             break;

  001ac	ea000009	 b           |$cleanUp$39701|
  001b0		 |$LN2@signal_Por|

; 1159 : 
; 1160 :         case ASPS_GAIN_STREAM_TX:
; 1161 :         case ASPS_GAIN_STREAM_RX:
; 1162 :             // find the DASF stream
; 1163 :             bIsOutput = (SignalId == ASPS_GAIN_STREAM_TX);
; 1164 : 
; 1165 :             //StreamContext* pStreamContext = (StreamContext*)hStreamContext;
; 1166 :             pStream = FindDASFStream(hStreamContext);

  001b0	e1a01006	 mov         r1, r6
  001b4	e1a00004	 mov         r0, r4
  001b8	eb000000	 bl          |?FindDASFStream@DASFAudioStreamPort@@IAAPAVDASFStream@@PAX@Z|
  001bc	e3500000	 cmp         r0, #0

; 1167 :             RETAILMSG(0, (L"WAV:ASPS_GAIN_STREAM(%d) hStrmCtxt=0x%08X\r\n",
; 1168 :                 bIsOutput, hStreamContext));
; 1169 :             if (pStream != NULL)

  001c0	0a000004	 beq         |$cleanUp$39701|

; 1170 :                 {
; 1171 :                 pStream->SetStreamGain((UINT)dwContextData);

  001c4	e5903020	 ldr         r3, [r0, #0x20]
  001c8	e3530001	 cmp         r3, #1
  001cc	01a01000	 moveq       r1, r0
  001d0	01a00005	 moveq       r0, r5
  001d4	0b000000	 bleq        |?SetGain@DASF@@SAHIPAVDASFStream@@@Z|
  001d8		 |$cleanUp$39701|

; 1181 :     return rc;
; 1182 : }

  001d8	e1a00007	 mov         r0, r7
  001dc	e28dd004	 add         sp, sp, #4
  001e0	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  001e4	e12fff1e	 bx          lr
  001e8		 |$LN84@signal_Por|
  001e8		 |$LN85@signal_Por|
  001e8	00000000	 DCD         |?s_hHwCodecAdapter@DASF@@1PAUHINSTANCE__@@A|
  001ec		 |$M41160|

			 ENDP  ; |?signal_Port@DASFAudioStreamPort@@UAAHKPAXK@Z|, DASFAudioStreamPort::signal_Port

	END
