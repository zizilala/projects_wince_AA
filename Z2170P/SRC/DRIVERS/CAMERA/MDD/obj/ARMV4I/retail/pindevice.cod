; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\EVM_OMAP3530\SRC\DRIVERS\CAMERA\MDD\pindevice.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|?Reset@MarshalledBuffer_t@@AAAXXZ|	; MarshalledBuffer_t::Reset
; File c:\wince600\public\common\oak\inc\marshal.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T35119| DCD	|$LN5@Reset|
	DCD	0x40000500
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Reset@MarshalledBuffer_t@@AAAXXZ| PROC ; MarshalledBuffer_t::Reset

; 32   :     void Reset() {

  00000		 |$LN5@Reset|
  00000		 |$M35116|

; 33   :         m_pLocalSyncMarshalled = NULL;

  00000	e3a03000	 mov         r3, #0
  00004	e5803004	 str         r3, [r0, #4]

; 34   :         m_pLocalAsync = NULL;

  00008	e5803000	 str         r3, [r0]

; 35   :         m_cbSize = 0;

  0000c	e580300c	 str         r3, [r0, #0xC]

; 36   :     }

  00010	e12fff1e	 bx          lr
  00014		 |$M35117|

			 ENDP  ; |?Reset@MarshalledBuffer_t@@AAAXXZ|, MarshalledBuffer_t::Reset

	EXPORT	|??0MarshalledBuffer_t@@QAA@XZ|		; MarshalledBuffer_t::MarshalledBuffer_t

  00000			 AREA	 |.pdata|, PDATA
|$T35132| DCD	|$LN7@Marshalled|
	DCD	0x40000500
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0MarshalledBuffer_t@@QAA@XZ| PROC	; MarshalledBuffer_t::MarshalledBuffer_t

; 55   :     MarshalledBuffer_t() {

  00000		 |$LN7@Marshalled|
  00000		 |$M35129|

; 56   :         Reset();

  00000	e3a03000	 mov         r3, #0
  00004	e5803004	 str         r3, [r0, #4]
  00008	e5803000	 str         r3, [r0]
  0000c	e580300c	 str         r3, [r0, #0xC]

; 57   :     }

  00010	e12fff1e	 bx          lr
  00014		 |$M35130|

			 ENDP  ; |??0MarshalledBuffer_t@@QAA@XZ|, MarshalledBuffer_t::MarshalledBuffer_t

	EXPORT	|?Unmarshal@MarshalledBuffer_t@@QAAJXZ|	; MarshalledBuffer_t::Unmarshal
	IMPORT	|CeCloseCallerBuffer|
	IMPORT	|CeFreeAsynchronousBuffer|

  00000			 AREA	 |.pdata|, PDATA
|$T35146| DCD	|$LN9@Unmarshal|
	DCD	0x40001701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Unmarshal@MarshalledBuffer_t@@QAAJXZ| PROC ; MarshalledBuffer_t::Unmarshal

; 194  :     {

  00000		 |$LN9@Unmarshal|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M35143|
  00004	e1a04000	 mov         r4, r0

; 195  :         HRESULT result = HRESULT_FROM_WIN32(ERROR_ALREADY_EXISTS);
; 196  :         if (m_pLocalSyncMarshalled) {

  00008	e5943004	 ldr         r3, [r4, #4]
  0000c	e59f0044	 ldr         r0, [pc, #0x44]
  00010	e1b01003	 movs        r1, r3
  00014	0a00000d	 beq         |$LN5@Unmarshal|

; 197  :             if (m_pLocalAsync) {

  00018	e5943000	 ldr         r3, [r4]
  0001c	e1b00003	 movs        r0, r3

; 198  :                 CeFreeAsynchronousBuffer(m_pLocalAsync, m_pLocalSyncMarshalled,
; 199  :                                          m_cbSize, m_ArgumentDescriptor);

  00020	15943010	 ldrne       r3, [r4, #0x10]
  00024	1594200c	 ldrne       r2, [r4, #0xC]
  00028	1b000000	 blne        CeFreeAsynchronousBuffer

; 200  :             }
; 201  : 
; 202  :             result = CeCloseCallerBuffer(m_pLocalSyncMarshalled,
; 203  :                                          m_pCallerUnmarshalled, m_cbSize,
; 204  :                                          m_ArgumentDescriptor);

  0002c	e5943010	 ldr         r3, [r4, #0x10]
  00030	e594200c	 ldr         r2, [r4, #0xC]
  00034	e5941008	 ldr         r1, [r4, #8]
  00038	e5940004	 ldr         r0, [r4, #4]
  0003c	eb000000	 bl          CeCloseCallerBuffer

; 205  :             Reset();

  00040	e3a03000	 mov         r3, #0
  00044	e5843004	 str         r3, [r4, #4]
  00048	e5843000	 str         r3, [r4]
  0004c	e584300c	 str         r3, [r4, #0xC]
  00050		 |$LN5@Unmarshal|

; 206  :         }
; 207  :         return result;
; 208  :     }

  00050	e8bd4010	 ldmia       sp!, {r4, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$LN10@Unmarshal|
  00058		 |$LN11@Unmarshal|
  00058	800700b7	 DCD         0x800700b7
  0005c		 |$M35144|

			 ENDP  ; |?Unmarshal@MarshalledBuffer_t@@QAAJXZ|, MarshalledBuffer_t::Unmarshal

	EXPORT	|?ptr@MarshalledBuffer_t@@QBAPAXXZ|	; MarshalledBuffer_t::ptr

  00000			 AREA	 |.pdata|, PDATA
|$T35158| DCD	|$LN6@ptr|
	DCD	0x40000500
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ptr@MarshalledBuffer_t@@QBAPAXXZ| PROC ; MarshalledBuffer_t::ptr

; 212  :     LPVOID ptr() const {

  00000		 |$LN6@ptr|
  00000		 |$M35155|

; 213  :         if (m_pLocalAsync) {

  00000	e5903000	 ldr         r3, [r0]
  00004	e3530000	 cmp         r3, #0

; 214  :             return m_pLocalAsync;
; 215  :         }
; 216  :         return m_pLocalSyncMarshalled;

  00008	05903004	 ldreq       r3, [r0, #4]

; 217  :     }

  0000c	e1a00003	 mov         r0, r3
  00010	e12fff1e	 bx          lr
  00014		 |$M35156|

			 ENDP  ; |?ptr@MarshalledBuffer_t@@QBAPAXXZ|, MarshalledBuffer_t::ptr

	EXPORT	|??0CPinDevice@@QAA@XZ|			; CPinDevice::CPinDevice
	IMPORT	|InitializeCriticalSection|
; File c:\wince600\platform\evm_omap3530\src\drivers\camera\mdd\pindevice.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T35168| DCD	|$LN5@CPinDevice|
	DCD	0x40001e01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CPinDevice@@QAA@XZ| PROC		; CPinDevice::CPinDevice

; 39   : {

  00000		 |$LN5@CPinDevice|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M35165|
  00004	e1a04000	 mov         r4, r0

; 40   :     m_dwMemoryModel             = CSPROPERTY_BUFFER_CLIENT_LIMITED;

  00008	e3a03002	 mov         r3, #2

; 41   :     m_fClientInitialized        = false;
; 42   :     m_fDiscontinuity            = true;

  0000c	e5843014	 str         r3, [r4, #0x14]

; 43   :     m_ulPinId                   = (ULONG)-1; // Invalid Pin Id

  00010	e3e03000	 mvn         r3, #0
  00014	e3a02001	 mov         r2, #1
  00018	e3a01000	 mov         r1, #0

; 44   :     m_ulMaxNumOfBuffers         = 0;
; 45   :     m_ulFrameSize               = 0;
; 46   :     m_ulFramesDropped           = 0;
; 47   :     m_ulPictureNumber           = 0;
; 48   :     m_RtAveTimePerFrame         = 0;
; 49   :     m_hMsgQ                     = NULL;
; 50   :     m_CsState                   = CSSTATE_STOP;
; 51   :     m_msStart                   = 0xFFFFFFFF;
; 52   :     m_msLastPT                  = 0;
; 53   :     m_pStreamDescriptorList     = NULL;
; 54   :     m_dwBufferCount             = 0;
; 55   :     m_lStillCount               = 0;    
; 56   : 
; 57   :     InitializeCriticalSection( &m_csStreamBuffer );    

  0001c	e2840034	 add         r0, r4, #0x34
  00020	e5843000	 str         r3, [r4]
  00024	e5843020	 str         r3, [r4, #0x20]
  00028	e5c425a5	 strb        r2, [r4, #0x5A5]
  0002c	e5c415a4	 strb        r1, [r4, #0x5A4]
  00030	e584101c	 str         r1, [r4, #0x1C]
  00034	e5841004	 str         r1, [r4, #4]
  00038	e5841008	 str         r1, [r4, #8]
  0003c	e584100c	 str         r1, [r4, #0xC]
  00040	e5841028	 str         r1, [r4, #0x28]
  00044	e584102c	 str         r1, [r4, #0x2C]
  00048	e5841030	 str         r1, [r4, #0x30]
  0004c	e58415a0	 str         r1, [r4, #0x5A0]
  00050	e5841024	 str         r1, [r4, #0x24]
  00054	e5841060	 str         r1, [r4, #0x60]
  00058	e5841018	 str         r1, [r4, #0x18]
  0005c	e5841010	 str         r1, [r4, #0x10]
  00060	eb000000	 bl          InitializeCriticalSection

; 58   :     InitializeCriticalSection( &m_csStreamIO );    

  00064	e2840048	 add         r0, r4, #0x48
  00068	eb000000	 bl          InitializeCriticalSection

; 59   : }

  0006c	e1a00004	 mov         r0, r4
  00070	e8bd4010	 ldmia       sp!, {r4, lr}
  00074	e12fff1e	 bx          lr
  00078		 |$M35166|

			 ENDP  ; |??0CPinDevice@@QAA@XZ|, CPinDevice::CPinDevice

	EXPORT	|?InitializeSubDevice@CPinDevice@@QAA_NPAVCCameraDevice@@@Z| ; CPinDevice::InitializeSubDevice

  00000			 AREA	 |.pdata|, PDATA
|$T35179| DCD	|$LN6@Initialize|
	DCD	0x40000500
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InitializeSubDevice@CPinDevice@@QAA_NPAVCCameraDevice@@@Z| PROC ; CPinDevice::InitializeSubDevice

; 82   : {

  00000		 |$LN6@Initialize|
  00000		 |$M35176|
  00000	e3510000	 cmp         r1, #0

; 83   :     m_pCamAdapter = pCamDevice ;

  00004	e580105c	 str         r1, [r0, #0x5C]

; 84   :     if (NULL == m_pCamAdapter)
; 85   :     {
; 86   :         return false ;   

  00008	03a00000	 moveq       r0, #0

; 87   :     }
; 88   : 
; 89   :     return true ;

  0000c	13a00001	 movne       r0, #1

; 90   : }

  00010	e12fff1e	 bx          lr
  00014		 |$M35177|

			 ENDP  ; |?InitializeSubDevice@CPinDevice@@QAA_NPAVCCameraDevice@@@Z|, CPinDevice::InitializeSubDevice

	EXPORT	|?CloseSubDevice@CPinDevice@@QAAKXZ|	; CPinDevice::CloseSubDevice
	IMPORT	|?PDDClosePin@CCameraDevice@@QAAKK@Z|	; CCameraDevice::PDDClosePin
	IMPORT	|?DecrCInstances@CCameraDevice@@QAA_NK@Z| ; CCameraDevice::DecrCInstances

  00000			 AREA	 |.pdata|, PDATA
|$T35190| DCD	|$LN6@CloseSubDe|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CloseSubDevice@CPinDevice@@QAAKXZ| PROC ; CPinDevice::CloseSubDevice

; 93   : {

  00000		 |$LN6@CloseSubDe|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M35187|
  00004	e1a04000	 mov         r4, r0

; 94   :     DWORD dwRet = FALSE;
; 95   :     dwRet = m_pCamAdapter->DecrCInstances( m_ulPinId ) ;

  00008	e5941000	 ldr         r1, [r4]
  0000c	e594005c	 ldr         r0, [r4, #0x5C]
  00010	eb000000	 bl          |?DecrCInstances@CCameraDevice@@QAA_NK@Z|
  00014	e3500000	 cmp         r0, #0

; 96   :     if( dwRet )
; 97   :     {
; 98   :         dwRet = m_pCamAdapter->PDDClosePin( m_ulPinId );

  00018	15941000	 ldrne       r1, [r4]
  0001c	1594005c	 ldrne       r0, [r4, #0x5C]
  00020	1b000000	 blne        |?PDDClosePin@CCameraDevice@@QAAKK@Z|

; 99   :     }
; 100  : 
; 101  :     return dwRet;
; 102  : }

  00024	e8bd4010	 ldmia       sp!, {r4, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M35188|

			 ENDP  ; |?CloseSubDevice@CPinDevice@@QAAKXZ|, CPinDevice::CloseSubDevice

	EXPORT	|?StreamInstantiate@CPinDevice@@QAAKPAU_tagCSPROPERTY_StreamEx@@PAEKPAK@Z| ; CPinDevice::StreamInstantiate
	EXPORT	|??_C@_1FO@KGCBBEHN@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@HCFLEGGK@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HC@GNCMNKIO@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?5?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@HKKJGDCO@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAN?$AAo?$AA?5?$AAP?$AAi?$AAn?$AA?5?$AAF?$AAo?$AAr?$AAm@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IC@LCNAHAKA@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@CFPGCDNG@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAP?$AAi?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@JFKMHOGG@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@OOADIGHO@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAP?$AAi?$AAn?$AA?5?$AA?$CF?$AAd?$AA?5?$AAi?$AAs?$AA?5?$AAa@| [ DATA ] ; `string'
	IMPORT	|?IncrCInstances@CCameraDevice@@QAA_NKPAVCPinDevice@@@Z| ; CCameraDevice::IncrCInstances
	IMPORT	|CloseHandle|
	IMPORT	|OpenMsgQueue|
	IMPORT	|OpenProcess|
	IMPORT	|GetCallerVMProcessId|
	IMPORT	|?GetPinFormat@CCameraDevice@@QAA_NKKPAPAUtagCS_DATARANGE_VIDEO@@@Z| ; CCameraDevice::GetPinFormat
	IMPORT	|?PDDGetPinInfo@CCameraDevice@@QAAKKPAU_SensorModeInfo@@@Z| ; CCameraDevice::PDDGetPinInfo
	IMPORT	|?IsValidPin@CCameraDevice@@QAA_NK@Z|	; CCameraDevice::IsValidPin
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|
	IMPORT	|memcpy|

  00000			 AREA	 |.pdata|, PDATA
|$T35224| DCD	|$LN35@StreamInst|
	DCD	0x40009402

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@KGCBBEHN@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAo@| DCB "P"
	DCB	0x0, "I", 0x0, "N", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "o", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, " ", 0x0, "M"
	DCB	0x0, "s", 0x0, "g", 0x0, "Q", 0x0, "u", 0x0, "e", 0x0, "u"
	DCB	0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@HCFLEGGK@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAo@| DCB "P"
	DCB	0x0, "I", 0x0, "N", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "o", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, " ", 0x0, "P"
	DCB	0x0, "r", 0x0, "o", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@GNCMNKIO@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?5?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe@| DCB "P"
	DCB	0x0, "I", 0x0, "N", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "N", 0x0, "U", 0x0, "L", 0x0, "L"
	DCB	0x0, " ", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l"
	DCB	0x0, "e", 0x0, " ", 0x0, "p", 0x0, "r", 0x0, "o", 0x0, "v"
	DCB	0x0, "i", 0x0, "d", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "f"
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "m", 0x0, "s", 0x0, "g"
	DCB	0x0, "q", 0x0, "u", 0x0, "e", 0x0, "u", 0x0, "e", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@HKKJGDCO@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAN?$AAo?$AA?5?$AAP?$AAi?$AAn?$AA?5?$AAF?$AAo?$AAr?$AAm@| DCB "P"
	DCB	0x0, "I", 0x0, "N", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "N", 0x0, "o", 0x0, " ", 0x0, "P"
	DCB	0x0, "i", 0x0, "n", 0x0, " ", 0x0, "F", 0x0, "o", 0x0, "r"
	DCB	0x0, "m", 0x0, "a", 0x0, "t", 0x0, " ", 0x0, "p", 0x0, "r"
	DCB	0x0, "o", 0x0, "v", 0x0, "i", 0x0, "d", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "p"
	DCB	0x0, "i", 0x0, "n", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IC@LCNAHAKA@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr@| DCB "P"
	DCB	0x0, "I", 0x0, "N", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "t", 0x0, "r", 0x0, "i", 0x0, "e"
	DCB	0x0, "v", 0x0, "e", 0x0, " ", 0x0, "s", 0x0, "u", 0x0, "b"
	DCB	0x0, "-", 0x0, "d", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c"
	DCB	0x0, "e", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "f", 0x0, "o"
	DCB	0x0, "r", 0x0, "m", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@CFPGCDNG@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAP?$AAi?$AAn@| DCB "P"
	DCB	0x0, "I", 0x0, "N", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "P", 0x0, "i"
	DCB	0x0, "n", 0x0, " ", 0x0, "I", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@JFKMHOGG@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt@| DCB "P"
	DCB	0x0, "I", 0x0, "N", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z", 0x0, "a"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "i"
	DCB	0x0, "n", 0x0, "c", 0x0, "o", 0x0, "m", 0x0, "p", 0x0, "l"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, ".", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@OOADIGHO@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAP?$AAi?$AAn?$AA?5?$AA?$CF?$AAd?$AA?5?$AAi?$AAs?$AA?5?$AAa@| DCB "P"
	DCB	0x0, "I", 0x0, "N", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "P", 0x0, "i", 0x0, "n", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " "
	DCB	0x0, "a", 0x0, "l", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, "y", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "s", 0x0, "t"
	DCB	0x0, "a", 0x0, "n", 0x0, "t", 0x0, "i", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "d", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?StreamInstantiate@CPinDevice@@QAAKPAU_tagCSPROPERTY_StreamEx@@PAEKPAK@Z| PROC ; CPinDevice::StreamInstantiate

; 106  : {

  00000		 |$LN35@StreamInst|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd034	 sub         sp, sp, #0x34
  00008		 |$M35221|
  00008	e1a06001	 mov         r6, r1
  0000c	e1a04000	 mov         r4, r0

; 107  :     UNREFERENCED_PARAMETER(pdwBytesTransferred);
; 108  :     UNREFERENCED_PARAMETER(OutBufLen);
; 109  :     UNREFERENCED_PARAMETER(pOutBuf);
; 110  : 
; 111  :     DWORD   dwError  = ERROR_INVALID_PARAMETER;
; 112  :     HANDLE  hProcess = NULL;
; 113  :     PCS_DATARANGE_VIDEO pCsDataRangeVid = NULL;
; 114  : 
; 115  :     
; 116  :     if ( -1 != m_ulPinId )

  00010	e5942000	 ldr         r2, [r4]
  00014	e3a03000	 mov         r3, #0
  00018	e58d3000	 str         r3, [sp]
  0001c	e3720001	 cmn         r2, #1
  00020	0a000008	 beq         |$LN9@StreamInst|

; 117  :     {
; 118  :         DEBUGMSG(ZONE_IOCTL|ZONE_ERROR, (_T("PIN_IOControl(%08x): Pin %d is already instantiated.\r\n"), this, m_ulPinId )) ;

  00024	e59f3200	 ldr         r3, [pc, #0x200]
  00028	e5933440	 ldr         r3, [r3, #0x440]
  0002c	e3130011	 tst         r3, #0x11
  00030	0a000002	 beq         |$LN12@StreamInst|
  00034		 |$LN31@StreamInst|
  00034	e59f0210	 ldr         r0, [pc, #0x210]
  00038		 |$LN30@StreamInst|
  00038	e1a01004	 mov         r1, r4
  0003c	eb000000	 bl          NKDbgPrintfW
  00040		 |$LN12@StreamInst|

; 119  :         return dwError ;

  00040	e3a00057	 mov         r0, #0x57
  00044	ea000075	 b           |$LN10@StreamInst|
  00048		 |$LN9@StreamInst|

; 120  :     }
; 121  : 
; 122  :     if( NULL == m_pCamAdapter )

  00048	e594305c	 ldr         r3, [r4, #0x5C]
  0004c	e3530000	 cmp         r3, #0
  00050	1a000006	 bne         |$LN8@StreamInst|

; 123  :     {
; 124  :         DEBUGMSG(ZONE_IOCTL|ZONE_ERROR, (_T("PIN_IOControl(%08x): Initialization incomplete.\r\n"), this, m_ulPinId )) ;

  00054	e59f31d0	 ldr         r3, [pc, #0x1D0]
  00058	e5933440	 ldr         r3, [r3, #0x440]
  0005c	e3130011	 tst         r3, #0x11
  00060	0afffff6	 beq         |$LN12@StreamInst|
  00064	e59f01dc	 ldr         r0, [pc, #0x1DC]
  00068	e3e02000	 mvn         r2, #0

; 125  :         return dwError;

  0006c	eafffff1	 b           |$LN30@StreamInst|
  00070		 |$LN8@StreamInst|

; 126  :     }
; 127  : 
; 128  :     if ( false == m_pCamAdapter->IsValidPin( pCsPropStreamEx->CsPin.PinId ) )

  00070	e5961018	 ldr         r1, [r6, #0x18]
  00074	e1a00003	 mov         r0, r3
  00078	eb000000	 bl          |?IsValidPin@CCameraDevice@@QAA_NK@Z|
  0007c	e3500000	 cmp         r0, #0
  00080	1a000008	 bne         |$LN7@StreamInst|

; 129  :     {
; 130  :         DEBUGMSG(ZONE_IOCTL|ZONE_ERROR, (_T("PIN_IOControl(%08x): Invalid Pin Id\r\n"), this)) ;

  00084	e59f31a0	 ldr         r3, [pc, #0x1A0]
  00088	e5933440	 ldr         r3, [r3, #0x440]
  0008c	e3130011	 tst         r3, #0x11
  00090	0affffea	 beq         |$LN12@StreamInst|
  00094	e59f01a8	 ldr         r0, [pc, #0x1A8]
  00098		 |$LN32@StreamInst|
  00098	e1a01004	 mov         r1, r4
  0009c	eb000000	 bl          NKDbgPrintfW
  000a0	e3a00057	 mov         r0, #0x57
  000a4	ea00005d	 b           |$LN10@StreamInst|
  000a8		 |$LN7@StreamInst|

; 131  :         return dwError ;
; 132  :     }
; 133  :     
; 134  :     m_ulPinId = pCsPropStreamEx->CsPin.PinId ;

  000a8	e5963018	 ldr         r3, [r6, #0x18]

; 135  :     
; 136  :     SENSORMODEINFO SensorModeInfo;
; 137  :     if( ERROR_SUCCESS != m_pCamAdapter->PDDGetPinInfo( m_ulPinId, &SensorModeInfo ) )

  000ac	e594005c	 ldr         r0, [r4, #0x5C]
  000b0	e28d2018	 add         r2, sp, #0x18
  000b4	e1a01003	 mov         r1, r3
  000b8	e5843000	 str         r3, [r4]
  000bc	eb000000	 bl          |?PDDGetPinInfo@CCameraDevice@@QAAKKPAU_SensorModeInfo@@@Z|
  000c0	e3500000	 cmp         r0, #0
  000c4	0a000005	 beq         |$LN6@StreamInst|

; 138  :     {
; 139  :         DEBUGMSG(ZONE_IOCTL|ZONE_ERROR, (_T("PIN_IOControl(%08x): Failed to retrieve sub-device information\r\n"), this)) ;

  000c8	e59f315c	 ldr         r3, [pc, #0x15C]
  000cc	e5933440	 ldr         r3, [r3, #0x440]
  000d0	e3130011	 tst         r3, #0x11
  000d4	0affffd9	 beq         |$LN12@StreamInst|
  000d8	e59f0160	 ldr         r0, [pc, #0x160]

; 140  :         return dwError ;

  000dc	eaffffed	 b           |$LN32@StreamInst|
  000e0		 |$LN6@StreamInst|

; 141  :     }
; 142  : 
; 143  :     m_dwMemoryModel     = SensorModeInfo.MemoryModel;

  000e0	e59d301c	 ldr         r3, [sp, #0x1C]

; 144  :     m_ulMaxNumOfBuffers = SensorModeInfo.MaxNumOfBuffers;

  000e4	e59d2020	 ldr         r2, [sp, #0x20]

; 145  :     
; 146  :     // Let us set a default format for this pin
; 147  : 
; 148  :     if ( false == m_pCamAdapter->GetPinFormat( m_ulPinId, 1, &pCsDataRangeVid ) )

  000e8	e5941000	 ldr         r1, [r4]
  000ec	e594005c	 ldr         r0, [r4, #0x5C]
  000f0	e5843014	 str         r3, [r4, #0x14]
  000f4	e584201c	 str         r2, [r4, #0x1C]
  000f8	e28d3000	 add         r3, sp, #0
  000fc	e3a02001	 mov         r2, #1
  00100	eb000000	 bl          |?GetPinFormat@CCameraDevice@@QAA_NKKPAPAUtagCS_DATARANGE_VIDEO@@@Z|
  00104	e3500000	 cmp         r0, #0
  00108	1a000005	 bne         |$LN5@StreamInst|

; 149  :     {
; 150  :         DEBUGMSG(ZONE_IOCTL|ZONE_ERROR, (_T("PIN_IOControl(%08x): No Pin Format provided for pin\r\n"), this)) ;

  0010c	e59f3118	 ldr         r3, [pc, #0x118]
  00110	e5933440	 ldr         r3, [r3, #0x440]
  00114	e3130011	 tst         r3, #0x11
  00118	0affffc8	 beq         |$LN12@StreamInst|
  0011c	e59f0118	 ldr         r0, [pc, #0x118]

; 151  :         return dwError ;

  00120	eaffffdc	 b           |$LN32@StreamInst|
  00124		 |$LN5@StreamInst|

; 152  :     }
; 153  :     
; 154  :     memcpy(&m_CsDataRangeVideo,pCsDataRangeVid, sizeof(CS_DATARANGE_VIDEO) ) ;

  00124	e59d1000	 ldr         r1, [sp]
  00128	e3a03c05	 mov         r3, #5, 24
  0012c	e3832038	 orr         r2, r3, #0x38
  00130	e2840068	 add         r0, r4, #0x68
  00134	eb000000	 bl          memcpy

; 155  : 
; 156  :     if ( NULL == pCsPropStreamEx->hMsgQueue )

  00138	e5963020	 ldr         r3, [r6, #0x20]
  0013c	e3530000	 cmp         r3, #0
  00140	1a000005	 bne         |$LN4@StreamInst|

; 157  :     {
; 158  :         DEBUGMSG(ZONE_IOCTL|ZONE_ERROR, (_T("PIN_IOControl(%08x): NULL Handle provided for msgqueue\r\n"), this)) ;

  00144	e59f30e0	 ldr         r3, [pc, #0xE0]
  00148	e5933440	 ldr         r3, [r3, #0x440]
  0014c	e3130011	 tst         r3, #0x11
  00150	0affffba	 beq         |$LN12@StreamInst|
  00154	e59f00dc	 ldr         r0, [pc, #0xDC]

; 159  :         return dwError ;

  00158	eaffffce	 b           |$LN32@StreamInst|
  0015c		 |$LN4@StreamInst|

; 160  :     }    
; 161  : 
; 162  :     // Need to check whether the client created msgqueue with enough buffersize and number of buffers...
; 163  : 
; 164  :     MSGQUEUEOPTIONS msgQueueOptions;
; 165  :     msgQueueOptions.bReadAccess = FALSE; // we need write-access to msgqueue

  0015c	e3a03000	 mov         r3, #0

; 166  :     msgQueueOptions.dwSize      = sizeof(MSGQUEUEOPTIONS);

  00160	e3a02014	 mov         r2, #0x14
  00164	e58d3014	 str         r3, [sp, #0x14]
  00168	e58d2004	 str         r2, [sp, #4]

; 167  : 
; 168  :     hProcess = OpenProcess(NULL, FALSE, GetCallerVMProcessId());

  0016c	eb000000	 bl          GetCallerVMProcessId
  00170	e1a02000	 mov         r2, r0
  00174	e3a00000	 mov         r0, #0
  00178	e3a01000	 mov         r1, #0
  0017c	eb000000	 bl          OpenProcess
  00180	e1b05000	 movs        r5, r0

; 169  :     if(NULL == hProcess)

  00184	1a000005	 bne         |$LN3@StreamInst|

; 170  :     {
; 171  :         DEBUGMSG(ZONE_IOCTL|ZONE_ERROR, (_T("PIN_IOControl(%08x): Failed to open Process\r\n"), this)) ;

  00188	e59f309c	 ldr         r3, [pc, #0x9C]
  0018c	e5933440	 ldr         r3, [r3, #0x440]
  00190	e3130011	 tst         r3, #0x11
  00194	0affffa9	 beq         |$LN12@StreamInst|
  00198	e59f0094	 ldr         r0, [pc, #0x94]

; 172  :         return dwError ;

  0019c	eaffffbd	 b           |$LN32@StreamInst|
  001a0		 |$LN3@StreamInst|

; 173  :     }
; 174  : 
; 175  :     ASSERT( m_hMsgQ == NULL );
; 176  : 
; 177  :     if ( NULL == (m_hMsgQ = OpenMsgQueue(hProcess, pCsPropStreamEx->hMsgQueue, &msgQueueOptions ) ) )

  001a0	e5961020	 ldr         r1, [r6, #0x20]
  001a4	e28d2004	 add         r2, sp, #4
  001a8	e1a00005	 mov         r0, r5
  001ac	eb000000	 bl          OpenMsgQueue
  001b0	e3500000	 cmp         r0, #0
  001b4	e5840030	 str         r0, [r4, #0x30]
  001b8	1a000009	 bne         |$LN2@StreamInst|

; 178  :     {
; 179  :         DEBUGMSG(ZONE_IOCTL|ZONE_ERROR, (_T("PIN_IOControl(%08x): Failed to open MsgQueue\r\n"), this)) ;

  001bc	e59f3068	 ldr         r3, [pc, #0x68]
  001c0	e5933440	 ldr         r3, [r3, #0x440]
  001c4	e3130011	 tst         r3, #0x11
  001c8	159f0060	 ldrne       r0, [pc, #0x60]
  001cc	11a01004	 movne       r1, r4
  001d0	1b000000	 blne        NKDbgPrintfW

; 180  :         CloseHandle(hProcess);

  001d4	e1a00005	 mov         r0, r5
  001d8	eb000000	 bl          CloseHandle
  001dc	e3a00057	 mov         r0, #0x57
  001e0	ea00000e	 b           |$LN10@StreamInst|
  001e4		 |$LN2@StreamInst|

; 181  :         return dwError ;
; 182  :     }
; 183  : 
; 184  :     CloseHandle(hProcess);

  001e4	e1a00005	 mov         r0, r5
  001e8	eb000000	 bl          CloseHandle

; 185  : 
; 186  :     if ( false == m_pCamAdapter->IncrCInstances( m_ulPinId, this ) )

  001ec	e5941000	 ldr         r1, [r4]
  001f0	e594005c	 ldr         r0, [r4, #0x5C]
  001f4	e1a02004	 mov         r2, r4
  001f8	eb000000	 bl          |?IncrCInstances@CCameraDevice@@QAA_NKPAVCPinDevice@@@Z|
  001fc	e3500000	 cmp         r0, #0
  00200	1a000005	 bne         |$LN1@StreamInst|

; 187  :     {
; 188  :         DEBUGMSG(ZONE_IOCTL|ZONE_ERROR, (_T("PIN_IOControl(%08x): Pin %d is already instantiated.\r\n"), this, m_ulPinId)) ;

  00204	e59f3020	 ldr         r3, [pc, #0x20]
  00208	e5933440	 ldr         r3, [r3, #0x440]
  0020c	e3130011	 tst         r3, #0x11
  00210	0affff8a	 beq         |$LN12@StreamInst|
  00214	e5942000	 ldr         r2, [r4]

; 189  :         return dwError ;

  00218	eaffff85	 b           |$LN31@StreamInst|
  0021c		 |$LN1@StreamInst|

; 190  :     }
; 191  : 
; 192  :     return ERROR_SUCCESS ;

  0021c	e3a00000	 mov         r0, #0
  00220		 |$LN10@StreamInst|

; 193  : }

  00220	e28dd034	 add         sp, sp, #0x34
  00224	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00228	e12fff1e	 bx          lr
  0022c		 |$LN36@StreamInst|
  0022c		 |$LN37@StreamInst|
  0022c	00000000	 DCD         |dpCurSettings|
  00230		 |$LN38@StreamInst|
  00230	00000000	 DCD         |??_C@_1FO@KGCBBEHN@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAo@|
  00234		 |$LN39@StreamInst|
  00234	00000000	 DCD         |??_C@_1FM@HCFLEGGK@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAo@|
  00238		 |$LN40@StreamInst|
  00238	00000000	 DCD         |??_C@_1HC@GNCMNKIO@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAN?$AAU?$AAL?$AAL?$AA?5?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe@|
  0023c		 |$LN41@StreamInst|
  0023c	00000000	 DCD         |??_C@_1GM@HKKJGDCO@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAN?$AAo?$AA?5?$AAP?$AAi?$AAn?$AA?5?$AAF?$AAo?$AAr?$AAm@|
  00240		 |$LN42@StreamInst|
  00240	00000000	 DCD         |??_C@_1IC@LCNAHAKA@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr@|
  00244		 |$LN43@StreamInst|
  00244	00000000	 DCD         |??_C@_1EM@CFPGCDNG@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAP?$AAi?$AAn@|
  00248		 |$LN44@StreamInst|
  00248	00000000	 DCD         |??_C@_1GE@JFKMHOGG@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAi?$AAa?$AAl?$AAi?$AAz?$AAa?$AAt@|
  0024c		 |$LN45@StreamInst|
  0024c	00000000	 DCD         |??_C@_1GO@OOADIGHO@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAP?$AAi?$AAn?$AA?5?$AA?$CF?$AAd?$AA?5?$AAi?$AAs?$AA?5?$AAa@|
  00250		 |$M35222|

			 ENDP  ; |?StreamInstantiate@CPinDevice@@QAAKPAU_tagCSPROPERTY_StreamEx@@PAEKPAK@Z|, CPinDevice::StreamInstantiate

	EXPORT	|?SetState@CPinDevice@@QAAXW4CSSTATE@@PAW42@@Z| ; CPinDevice::SetState
	EXPORT	|??_C@_1EA@PGBHCNLI@?$AAP?$AAi?$AAn?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?5?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AA0?$AAx?$AA?$CF?$AAX?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|LeaveCriticalSection|
	IMPORT	|?PDDSetPinState@CCameraDevice@@QAAKKW4CSSTATE@@@Z| ; CCameraDevice::PDDSetPinState
	IMPORT	|EnterCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T35246| DCD	|$LN11@SetState|
	DCD	0x40002501

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@PGBHCNLI@?$AAP?$AAi?$AAn?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?5?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AA0?$AAx?$AA?$CF?$AAX?$AA?$AN?$AA?6?$AA?$AA@| DCB "P"
	DCB	0x0, "i", 0x0, "n", 0x0, ":", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, " ", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "t", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, " ", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "X", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?SetState@CPinDevice@@QAAXW4CSSTATE@@PAW42@@Z| PROC ; CPinDevice::SetState

; 196  : {

  00000		 |$LN11@SetState|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M35243|
  00004	e1a06002	 mov         r6, r2
  00008	e1a05001	 mov         r5, r1
  0000c	e1a04000	 mov         r4, r0

; 197  :     EnterCriticalSection(&m_csStreamIO);

  00010	e2840048	 add         r0, r4, #0x48
  00014	eb000000	 bl          EnterCriticalSection

; 198  :     if ( NULL != CsPrevState )

  00018	e3560000	 cmp         r6, #0

; 199  :     {
; 200  :         *CsPrevState = m_CsState ;

  0001c	159435a0	 ldrne       r3, [r4, #0x5A0]
  00020	15863000	 strne       r3, [r6]

; 201  :     }
; 202  : 
; 203  :      //Check if we are not already in the target state
; 204  :     if(m_CsState != CsState)

  00024	e59435a0	 ldr         r3, [r4, #0x5A0]
  00028	e1530005	 cmp         r3, r5
  0002c	0a000012	 beq         |$LN7@SetState|

; 205  :     {
; 206  :         m_CsState = CsState;
; 207  : 
; 208  :         if ( (CAPTURE == m_ulPinId) || (PREVIEW == m_ulPinId) || (CSSTATE_RUN != CsState) )

  00030	e5943000	 ldr         r3, [r4]
  00034	e58455a0	 str         r5, [r4, #0x5A0]
  00038	e3530000	 cmp         r3, #0
  0003c	0a000003	 beq         |$LN1@SetState|
  00040	e3530001	 cmp         r3, #1
  00044	0a000001	 beq         |$LN1@SetState|
  00048	e3550002	 cmp         r5, #2
  0004c	0a000003	 beq         |$LN2@SetState|
  00050		 |$LN1@SetState|

; 209  :         {
; 210  :             m_pCamAdapter->PDDSetPinState( m_ulPinId, CsState );

  00050	e594005c	 ldr         r0, [r4, #0x5C]
  00054	e1a02005	 mov         r2, r5
  00058	e1a01003	 mov         r1, r3
  0005c	eb000000	 bl          |?PDDSetPinState@CCameraDevice@@QAAKKW4CSSTATE@@@Z|
  00060		 |$LN2@SetState|

; 211  :         }
; 212  :         
; 213  :         DEBUGMSG(ZONE_IOCTL|ZONE_ERROR, (_T("Pin: %d Setting State to 0x%X\r\n"), m_ulPinId, CsState)) ;

  00060	e59f3028	 ldr         r3, [pc, #0x28]
  00064	e5933440	 ldr         r3, [r3, #0x440]
  00068	e3130011	 tst         r3, #0x11
  0006c	15941000	 ldrne       r1, [r4]
  00070	159f0014	 ldrne       r0, [pc, #0x14]
  00074	11a02005	 movne       r2, r5
  00078	1b000000	 blne        NKDbgPrintfW
  0007c		 |$LN7@SetState|

; 214  :     }
; 215  :     LeaveCriticalSection(&m_csStreamIO);

  0007c	e2840048	 add         r0, r4, #0x48
  00080	eb000000	 bl          LeaveCriticalSection

; 216  :     return ;
; 217  : }

  00084	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00088	e12fff1e	 bx          lr
  0008c		 |$LN12@SetState|
  0008c		 |$LN13@SetState|
  0008c	00000000	 DCD         |??_C@_1EA@PGBHCNLI@?$AAP?$AAi?$AAn?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?5?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AA0?$AAx?$AA?$CF?$AAX?$AA?$AN?$AA?6?$AA?$AA@|
  00090		 |$LN14@SetState|
  00090	00000000	 DCD         |dpCurSettings|
  00094		 |$M35244|

			 ENDP  ; |?SetState@CPinDevice@@QAAXW4CSSTATE@@PAW42@@Z|, CPinDevice::SetState

	EXPORT	|?InitMsgQueueDescriptor@CPinDevice@@AAAHPAU_tagMessageQueueData@@PAU_tagStreamDescriptor@@PAX2H@Z| ; CPinDevice::InitMsgQueueDescriptor
	EXPORT	|??_C@_1HE@GEMALGPF@?$AAI?$AAn?$AAi?$AAt?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu?$AAe?$AAD?$AAe?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAo?$AAr?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KI@ODPKNGIM@?$AAI?$AAn?$AAi?$AAt?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu?$AAe?$AAD?$AAe?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAo?$AAr?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IO@DIJLPBPD@?$AAI?$AAn?$AAi?$AAt?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu?$AAe?$AAD?$AAe?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAo?$AAr?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAU?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@NFEPPHIG@?$AAI?$AAn?$AAi?$AAt?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu?$AAe?$AAD?$AAe?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAo?$AAr?$AA?3?$AA?5?$AAL?$AAa?$AAs?$AAt?$AAP?$AAT?$AA?5?$AA?$DN@| [ DATA ] ; `string'
	IMPORT	|GetTickCount|
	IMPORT	|?PDDFillPinBuffer@CCameraDevice@@QAAKKPAE@Z| ; CCameraDevice::PDDFillPinBuffer
	IMPORT	|__rt_sdiv64by64|

  00000			 AREA	 |.pdata|, PDATA
|$T35280| DCD	|$LN27@InitMsgQue|
	DCD	0x40008902

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@GEMALGPF@?$AAI?$AAn?$AAi?$AAt?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu?$AAe?$AAD?$AAe?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAo?$AAr?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn@| DCB "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "M", 0x0, "s", 0x0, "g"
	DCB	0x0, "Q", 0x0, "u", 0x0, "e", 0x0, "u", 0x0, "e", 0x0, "D"
	DCB	0x0, "e", 0x0, "s", 0x0, "c", 0x0, "r", 0x0, "i", 0x0, "p"
	DCB	0x0, "t", 0x0, "o", 0x0, "r", 0x0, "(", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ")", 0x0, ":", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "S", 0x0, "t", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "m", 0x0, " ", 0x0, "D", 0x0, "e", 0x0, "s", 0x0, "c"
	DCB	0x0, "r", 0x0, "i", 0x0, "p", 0x0, "t", 0x0, "o", 0x0, "r"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KI@ODPKNGIM@?$AAI?$AAn?$AAi?$AAt?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu?$AAe?$AAD?$AAe?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAo?$AAr?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAr@| DCB "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "M", 0x0, "s", 0x0, "g"
	DCB	0x0, "Q", 0x0, "u", 0x0, "e", 0x0, "u", 0x0, "e", 0x0, "D"
	DCB	0x0, "e", 0x0, "s", 0x0, "c", 0x0, "r", 0x0, "i", 0x0, "p"
	DCB	0x0, "t", 0x0, "o", 0x0, "r", 0x0, "(", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ")", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, " ", 0x0, "b"
	DCB	0x0, "u", 0x0, "f", 0x0, " ", 0x0, "q", 0x0, "u", 0x0, "e"
	DCB	0x0, "u", 0x0, "e", 0x0, "d", 0x0, ":", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, "(", 0x0, "d", 0x0, "r", 0x0, "o"
	DCB	0x0, "p", 0x0, "p", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, ",", 0x0, " ", 0x0, "s", 0x0, "t"
	DCB	0x0, "a", 0x0, "r", 0x0, "t", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ",", 0x0, " ", 0x0, "t", 0x0, "i", 0x0, "m", 0x0, "e"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IO@DIJLPBPD@?$AAI?$AAn?$AAi?$AAt?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu?$AAe?$AAD?$AAe?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAo?$AAr?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAU?$AAn@| DCB "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "M", 0x0, "s", 0x0, "g"
	DCB	0x0, "Q", 0x0, "u", 0x0, "e", 0x0, "u", 0x0, "e", 0x0, "D"
	DCB	0x0, "e", 0x0, "s", 0x0, "c", 0x0, "r", 0x0, "i", 0x0, "p"
	DCB	0x0, "t", 0x0, "o", 0x0, "r", 0x0, "(", 0x0, "%", 0x0, "0"
	DCB	0x0, "8", 0x0, "x", 0x0, ")", 0x0, ":", 0x0, " ", 0x0, "U"
	DCB	0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "f", 0x0, "i", 0x0, "n"
	DCB	0x0, "d", 0x0, " ", 0x0, "U", 0x0, "n", 0x0, "m", 0x0, "a"
	DCB	0x0, "r", 0x0, "s", 0x0, "h", 0x0, "a", 0x0, "l", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "S", 0x0, "t", 0x0, "r"
	DCB	0x0, "e", 0x0, "a", 0x0, "m", 0x0, " ", 0x0, "D", 0x0, "e"
	DCB	0x0, "s", 0x0, "c", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@NFEPPHIG@?$AAI?$AAn?$AAi?$AAt?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu?$AAe?$AAD?$AAe?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAo?$AAr?$AA?3?$AA?5?$AAL?$AAa?$AAs?$AAt?$AAP?$AAT?$AA?5?$AA?$DN@| DCB "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "M", 0x0, "s", 0x0, "g"
	DCB	0x0, "Q", 0x0, "u", 0x0, "e", 0x0, "u", 0x0, "e", 0x0, "D"
	DCB	0x0, "e", 0x0, "s", 0x0, "c", 0x0, "r", 0x0, "i", 0x0, "p"
	DCB	0x0, "t", 0x0, "o", 0x0, "r", 0x0, ":", 0x0, " ", 0x0, "L"
	DCB	0x0, "a", 0x0, "s", 0x0, "t", 0x0, "P", 0x0, "T", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " "
	DCB	0x0, "e", 0x0, "l", 0x0, "a", 0x0, "p", 0x0, "s", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InitMsgQueueDescriptor@CPinDevice@@AAAHPAU_tagMessageQueueData@@PAU_tagStreamDescriptor@@PAX2H@Z| PROC ; CPinDevice::InitMsgQueueDescriptor

; 220  : {

  00000		 |$LN27@InitMsgQue|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M35277|
  00008	e1a05003	 mov         r5, r3
  0000c	e1b07002	 movs        r7, r2
  00010	e1a04001	 mov         r4, r1
  00014	e1a06000	 mov         r6, r0

; 221  :     PCSSTREAM_HEADER pCsStreamHeader = reinterpret_cast<PCSSTREAM_HEADER>(pCsStreamDesc);
; 222  :     PCS_FRAME_INFO   pCsFrameInfo    = reinterpret_cast<PCS_FRAME_INFO>(pCsStreamHeader + 1);
; 223  : 
; 224  :     if(( pCsStreamHeader == NULL ) || ( pCsFrameInfo == NULL ))

  00018	0a000071	 beq         |$LN9@InitMsgQue|
  0001c	e3770038	 cmn         r7, #0x38
  00020	0a00006f	 beq         |$LN9@InitMsgQue|

; 228  :     }
; 229  : 
; 230  :     if( bBufferFill )

  00024	e59de030	 ldr         lr, [sp, #0x30]
  00028	e3a0a000	 mov         r10, #0
  0002c	e35e0000	 cmp         lr, #0
  00030	0a000012	 beq         |$LN8@InitMsgQue|

; 231  :     {
; 232  :         // The buffer fill function must use the pointer that's been mapped into this process.
; 233  :         pCsStreamHeader->Data = pMappedData;
; 234  : 
; 235  :         EnterCriticalSection(&m_csStreamBuffer) ;

  00034	e2860034	 add         r0, r6, #0x34
  00038	e5875028	 str         r5, [r7, #0x28]
  0003c	eb000000	 bl          EnterCriticalSection

; 236  :         pCsStreamHeader->DataUsed = m_pCamAdapter->PDDFillPinBuffer( m_ulPinId, (PUCHAR) pMappedData ) ;

  00040	e5961000	 ldr         r1, [r6]
  00044	e596005c	 ldr         r0, [r6, #0x5C]
  00048	e1a02005	 mov         r2, r5
  0004c	eb000000	 bl          |?PDDFillPinBuffer@CCameraDevice@@QAAKKPAE@Z|
  00050	e1a03000	 mov         r3, r0

; 237  :         LeaveCriticalSection(&m_csStreamBuffer) ;

  00054	e2860034	 add         r0, r6, #0x34
  00058	e5873024	 str         r3, [r7, #0x24]
  0005c	eb000000	 bl          LeaveCriticalSection

; 238  : 
; 239  :         pCsFrameInfo->PictureNumber = (LONGLONG)++m_ulPictureNumber;

  00060	e596300c	 ldr         r3, [r6, #0xC]
  00064	e2833001	 add         r3, r3, #1
  00068	e586300c	 str         r3, [r6, #0xC]
  0006c	e5873040	 str         r3, [r7, #0x40]
  00070	e587a044	 str         r10, [r7, #0x44]

; 240  :         pCsFrameInfo->DropCount     = (LONGLONG)m_ulFramesDropped;

  00074	e5963008	 ldr         r3, [r6, #8]
  00078	e587a04c	 str         r10, [r7, #0x4C]
  0007c	e5873048	 str         r3, [r7, #0x48]
  00080		 |$LN8@InitMsgQue|

; 241  :     }
; 242  : 
; 243  :     // The message queue requires the original pointer value.
; 244  :     pCsStreamHeader->Data = pUnmappedData;

  00080	e59d502c	 ldr         r5, [sp, #0x2C]

; 245  : 
; 246  :     // Init the flags to zero
; 247  :     pCsStreamHeader->OptionsFlags = 0;

  00084	e587a02c	 str         r10, [r7, #0x2C]
  00088	e5875028	 str         r5, [r7, #0x28]

; 248  : 
; 249  :     // Set the discontinuity flag if frames have been previously
; 250  :     // dropped, and then reset our internal flag
; 251  : 
; 252  :     if ( true == m_fDiscontinuity ) 

  0008c	e5d635a5	 ldrb        r3, [r6, #0x5A5]
  00090	e3530001	 cmp         r3, #1

; 253  :     {
; 254  :         pCsStreamHeader->OptionsFlags |= CSSTREAM_HEADER_OPTIONSF_DATADISCONTINUITY;

  00094	03a03004	 moveq       r3, #4
  00098	0587302c	 streq       r3, [r7, #0x2C]

; 255  :         m_fDiscontinuity = false;

  0009c	05c6a5a5	 streqb      r10, [r6, #0x5A5]

; 256  :     }
; 257  : 
; 258  :     DWORD msNow = GetTickCount();

  000a0	eb000000	 bl          GetTickCount

; 259  : 
; 260  :     if (m_msStart == 0xFFFFFFFF)

  000a4	e5963020	 ldr         r3, [r6, #0x20]

; 261  :     {
; 262  :         m_msStart = msNow;
; 263  :     }
; 264  : 
; 265  :     //
; 266  :     // Return the timestamp for the frame
; 267  :     //
; 268  :     pCsStreamHeader->PresentationTime.Numerator   = 1;

  000a8	e3a0b001	 mov         r11, #1

; 269  :     pCsStreamHeader->PresentationTime.Denominator = 1;
; 270  :     pCsStreamHeader->Duration                     = m_RtAveTimePerFrame;
; 271  : 
; 272  : #ifndef SHIP_BUILD
; 273  :     DWORD prevPT = m_msLastPT;
; 274  : #endif
; 275  : 
; 276  :     m_msLastPT = msNow - m_msStart;
; 277  :     pCsStreamHeader->PresentationTime.Time        = (LONGLONG) m_msLastPT * 10000;  // presentation time stamp in 100s of ns

  000ac	e3a02c27	 mov         r2, #0x27, 24
  000b0	e3730001	 cmn         r3, #1
  000b4	05860020	 streq       r0, [r6, #0x20]
  000b8	e587b010	 str         r11, [r7, #0x10]
  000bc	e587b014	 str         r11, [r7, #0x14]
  000c0	e5963028	 ldr         r3, [r6, #0x28]
  000c4	e3829010	 orr         r9, r2, #0x10

; 278  : 
; 279  :     DEBUGMSG(ZONE_FUNCTION, (_T("InitMsgQueueDescriptor: LastPT = %d, elapsed = %d\n"), m_msLastPT, m_msLastPT - prevPT));

  000c8	e59f8144	 ldr         r8, [pc, #0x144]
  000cc	e5873018	 str         r3, [r7, #0x18]
  000d0	e596302c	 ldr         r3, [r6, #0x2C]
  000d4	e587301c	 str         r3, [r7, #0x1C]
  000d8	e5963020	 ldr         r3, [r6, #0x20]
  000dc	e596e024	 ldr         lr, [r6, #0x24]
  000e0	e0403003	 sub         r3, r0, r3
  000e4	e0812993	 umull       r2, r1, r3, r9
  000e8	e5863024	 str         r3, [r6, #0x24]
  000ec	e5872008	 str         r2, [r7, #8]
  000f0	e587100c	 str         r1, [r7, #0xC]
  000f4	e5983440	 ldr         r3, [r8, #0x440]
  000f8	e3130008	 tst         r3, #8
  000fc	15961024	 ldrne       r1, [r6, #0x24]
  00100	159f0118	 ldrne       r0, [pc, #0x118]
  00104	1041200e	 subne       r2, r1, lr
  00108	1b000000	 blne        NKDbgPrintfW

; 280  : 
; 281  :     // clear the timestamp valid flags
; 282  :     pCsStreamHeader->OptionsFlags &= ~( CSSTREAM_HEADER_OPTIONSF_TIMEVALID | CSSTREAM_HEADER_OPTIONSF_DURATIONVALID );

  0010c	e597302c	 ldr         r3, [r7, #0x2C]

; 283  : 
; 284  :     // Every frame we generate is a key frame (aka SplicePoint)
; 285  :     // Delta frames (B or P) should not set this flag
; 286  : 
; 287  :     pCsStreamHeader->OptionsFlags |= CSSTREAM_HEADER_OPTIONSF_SPLICEPOINT;
; 288  : 
; 289  :     pCsMsgQBuff->CsMsgQueueHeader.Size    = sizeof(CS_MSGQUEUE_HEADER);

  00110	e3a0200c	 mov         r2, #0xC
  00114	e3c33e11	 bic         r3, r3, #0x11, 28
  00118	e3833001	 orr         r3, r3, #1
  0011c	e587302c	 str         r3, [r7, #0x2C]
  00120	e8840804	 stmia       r4, {r2, r11}

; 290  :     pCsMsgQBuff->CsMsgQueueHeader.Flags   = FLAG_MSGQ_FRAME_BUFFER;
; 291  :     pCsMsgQBuff->CsMsgQueueHeader.Context = NULL;
; 292  : 
; 293  :     //Get the unmarshalled StreamDescriptor in order to send the message to the application
; 294  :     pCsMsgQBuff->pStreamDescriptor = NULL;
; 295  :     for (UINT ii = 0; ii < m_dwBufferCount; ii++)

  00124	e3a02000	 mov         r2, #0
  00128	e584a008	 str         r10, [r4, #8]
  0012c	e584a00c	 str         r10, [r4, #0xC]
  00130	e5963018	 ldr         r3, [r6, #0x18]
  00134	e3530000	 cmp         r3, #0
  00138	9a00000e	 bls         |$LN3@InitMsgQue|
  0013c	e5960060	 ldr         r0, [r6, #0x60]
  00140	e1a01000	 mov         r1, r0
  00144		 |$LL5@InitMsgQue|

; 296  :     {
; 297  :         if(m_pStreamDescriptorList[ii].csStreamDescriptorShadow.CsStreamHeader.Data == pUnmappedData)

  00144	e5913030	 ldr         r3, [r1, #0x30]
  00148	e1530005	 cmp         r3, r5
  0014c	0a000005	 beq         |$LN22@InitMsgQue|
  00150	e5963018	 ldr         r3, [r6, #0x18]
  00154	e2822001	 add         r2, r2, #1
  00158	e2811090	 add         r1, r1, #0x90
  0015c	e1520003	 cmp         r2, r3
  00160	3afffff7	 bcc         |$LL5@InitMsgQue|
  00164	ea000003	 b           |$LN3@InitMsgQue|
  00168		 |$LN22@InitMsgQue|

; 298  :         {
; 299  :             pCsMsgQBuff->pStreamDescriptor = m_pStreamDescriptorList[ii].m_pUnMarshalledStreamDesc;

  00168	e0823182	 add         r3, r2, r2, lsl #3
  0016c	e0803203	 add         r3, r0, r3, lsl #4
  00170	e593308c	 ldr         r3, [r3, #0x8C]
  00174	e584300c	 str         r3, [r4, #0xC]
  00178		 |$LN3@InitMsgQue|

; 300  :             break;
; 301  :         }
; 302  :     }
; 303  : 
; 304  :     if(NULL == pCsMsgQBuff->pStreamDescriptor)

  00178	e594300c	 ldr         r3, [r4, #0xC]
  0017c	e3530000	 cmp         r3, #0

; 305  :     {
; 306  :         DEBUGMSG(ZONE_FUNCTION, (_T("InitMsgQueueDescriptor(%08x): Unable to find Unmarshalled Stream Desc\n"), this));

  00180	e5983440	 ldr         r3, [r8, #0x440]
  00184	1a000003	 bne         |$LN1@InitMsgQue|
  00188	e3130008	 tst         r3, #8
  0018c	0a00001b	 beq         |$LN13@InitMsgQue|
  00190	e59f0084	 ldr         r0, [pc, #0x84]

; 307  :         return FALSE;

  00194	ea000017	 b           |$LN24@InitMsgQue|
  00198		 |$LN1@InitMsgQue|

; 308  :     }
; 309  :     
; 310  :     DEBUGMSG(ZONE_FUNCTION, (_T("InitMsgQueueDescriptor(%08x): Frame buf queued: %d (dropped %d), start %d, time %d\n"), 
; 311  :         this,
; 312  :         (LONG)pCsFrameInfo->PictureNumber, 
; 313  :         (LONG)pCsFrameInfo->DropCount, 
; 314  :         (LONG)m_msStart,
; 315  :         (LONG)(pCsStreamHeader->PresentationTime.Time / 10000)));

  00198	e3130008	 tst         r3, #8
  0019c	0a00000e	 beq         |$LN19@InitMsgQue|
  001a0	e5970008	 ldr         r0, [r7, #8]
  001a4	e597100c	 ldr         r1, [r7, #0xC]
  001a8	e1a02009	 mov         r2, r9
  001ac	e3a03000	 mov         r3, #0
  001b0	eb000000	 bl          __rt_sdiv64by64
  001b4	e5965020	 ldr         r5, [r6, #0x20]
  001b8	e5973048	 ldr         r3, [r7, #0x48]
  001bc	e5972040	 ldr         r2, [r7, #0x40]
  001c0	e1a04000	 mov         r4, r0
  001c4	e59f004c	 ldr         r0, [pc, #0x4C]
  001c8	e1a0e001	 mov         lr, r1
  001cc	e1a01006	 mov         r1, r6
  001d0	e58d4004	 str         r4, [sp, #4]
  001d4	e58d5000	 str         r5, [sp]
  001d8	eb000000	 bl          NKDbgPrintfW
  001dc		 |$LN19@InitMsgQue|

; 316  : 
; 317  :     return TRUE;

  001dc	e3a00001	 mov         r0, #1
  001e0	ea000007	 b           |$LN11@InitMsgQue|
  001e4		 |$LN9@InitMsgQue|

; 225  :     {
; 226  :         DEBUGMSG(ZONE_FUNCTION|ZONE_ERROR, (_T("InitMsgQueueDescriptor(%08x): Invalid Stream Descriptor\r\n"), this));

  001e4	e59f3028	 ldr         r3, [pc, #0x28]
  001e8	e5933440	 ldr         r3, [r3, #0x440]
  001ec	e3130009	 tst         r3, #9
  001f0	0a000002	 beq         |$LN13@InitMsgQue|
  001f4	e59f0014	 ldr         r0, [pc, #0x14]
  001f8		 |$LN24@InitMsgQue|
  001f8	e1a01006	 mov         r1, r6
  001fc	eb000000	 bl          NKDbgPrintfW
  00200		 |$LN13@InitMsgQue|

; 227  :         return false;

  00200	e3a00000	 mov         r0, #0
  00204		 |$LN11@InitMsgQue|

; 318  :    
; 319  : }

  00204	e28dd008	 add         sp, sp, #8
  00208	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  0020c	e12fff1e	 bx          lr
  00210		 |$LN28@InitMsgQue|
  00210		 |$LN29@InitMsgQue|
  00210	00000000	 DCD         |??_C@_1HE@GEMALGPF@?$AAI?$AAn?$AAi?$AAt?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu?$AAe?$AAD?$AAe?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAo?$AAr?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn@|
  00214		 |$LN30@InitMsgQue|
  00214	00000000	 DCD         |dpCurSettings|
  00218		 |$LN31@InitMsgQue|
  00218	00000000	 DCD         |??_C@_1KI@ODPKNGIM@?$AAI?$AAn?$AAi?$AAt?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu?$AAe?$AAD?$AAe?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAo?$AAr?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAr@|
  0021c		 |$LN32@InitMsgQue|
  0021c	00000000	 DCD         |??_C@_1IO@DIJLPBPD@?$AAI?$AAn?$AAi?$AAt?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu?$AAe?$AAD?$AAe?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAo?$AAr?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAU?$AAn@|
  00220		 |$LN33@InitMsgQue|
  00220	00000000	 DCD         |??_C@_1GG@NFEPPHIG@?$AAI?$AAn?$AAi?$AAt?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu?$AAe?$AAD?$AAe?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAo?$AAr?$AA?3?$AA?5?$AAL?$AAa?$AAs?$AAt?$AAP?$AAT?$AA?5?$AA?$DN@|
  00224		 |$M35278|

			 ENDP  ; |?InitMsgQueueDescriptor@CPinDevice@@AAAHPAU_tagMessageQueueData@@PAU_tagStreamDescriptor@@PAX2H@Z|, CPinDevice::InitMsgQueueDescriptor

	EXPORT	|?PauseStream@CPinDevice@@QAAKXZ|	; CPinDevice::PauseStream
	IMPORT	|?PDDInitPin@CCameraDevice@@QAAKKPAVCPinDevice@@@Z| ; CCameraDevice::PDDInitPin
	IMPORT	|LocalAlloc|

  00000			 AREA	 |.pdata|, PDATA
|$T35296| DCD	|$LN11@PauseStrea|
	DCD	0x40002a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PauseStream@CPinDevice@@QAAKXZ| PROC	; CPinDevice::PauseStream

; 398  : {

  00000		 |$LN11@PauseStrea|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M35293|
  00004	e1a04000	 mov         r4, r0

; 399  : 
; 400  :     if( m_CsState == CSSTATE_STOP )

  00008	e59435a0	 ldr         r3, [r4, #0x5A0]
  0000c	e3530000	 cmp         r3, #0
  00010	1a00000c	 bne         |$LN4@PauseStrea|

; 401  :     {
; 402  :         // Let's allocate our resources
; 403  :         if( m_pStreamDescriptorList == NULL )

  00014	e5943060	 ldr         r3, [r4, #0x60]
  00018	e3530000	 cmp         r3, #0
  0001c	1a000009	 bne         |$LN4@PauseStrea|

; 404  :         {
; 405  :             m_pStreamDescriptorList = (PCS_STREAM_DESCRIPTOR_SHADOW) LocalAlloc( LMEM_ZEROINIT, sizeof( CS_STREAM_DESCRIPTOR_SHADOW ) * m_ulMaxNumOfBuffers );

  00020	e594301c	 ldr         r3, [r4, #0x1C]
  00024	e3a00040	 mov         r0, #0x40
  00028	e0833183	 add         r3, r3, r3, lsl #3
  0002c	e1a01203	 mov         r1, r3, lsl #4
  00030	eb000000	 bl          LocalAlloc
  00034	e3500000	 cmp         r0, #0
  00038	e5840060	 str         r0, [r4, #0x60]

; 406  :             if( NULL == m_pStreamDescriptorList )
; 407  :                 return ERROR_OUTOFMEMORY;

  0003c	03a0000e	 moveq       r0, #0xE

; 431  : }

  00040	08bd4030	 ldmeqia     sp!, {r4, r5, lr}
  00044	012fff1e	 bxeq        lr
  00048		 |$LN4@PauseStrea|

; 408  :         }
; 409  : 
; 410  : //        m_dwBufferCount = 0;
; 411  :     }
; 412  : 
; 413  :     if ( false == m_fClientInitialized )

  00048	e5d435a4	 ldrb        r3, [r4, #0x5A4]
  0004c	e3a05001	 mov         r5, #1
  00050	e3530000	 cmp         r3, #0
  00054	1a000005	 bne         |$LN2@PauseStrea|

; 414  :     {
; 415  :         // By this time the buffers must be allocated
; 416  :         if( ERROR_SUCCESS == m_pCamAdapter->PDDInitPin( m_ulPinId, this ) )

  00058	e5941000	 ldr         r1, [r4]
  0005c	e594005c	 ldr         r0, [r4, #0x5C]
  00060	e1a02004	 mov         r2, r4
  00064	eb000000	 bl          |?PDDInitPin@CCameraDevice@@QAAKKPAVCPinDevice@@@Z|
  00068	e3500000	 cmp         r0, #0

; 417  :         {
; 418  :             m_fClientInitialized = true;

  0006c	05c455a4	 streqb      r5, [r4, #0x5A4]
  00070		 |$LN2@PauseStrea|

; 419  :         }
; 420  :     }
; 421  : 
; 422  :     if( m_fClientInitialized == false )

  00070	e5d435a4	 ldrb        r3, [r4, #0x5A4]
  00074	e3530000	 cmp         r3, #0
  00078	03a03c05	 moveq       r3, #5, 24

; 423  :     {
; 424  :         return ERROR_INTERNAL_ERROR;

  0007c	0383004f	 orreq       r0, r3, #0x4F

; 431  : }

  00080	08bd4030	 ldmeqia     sp!, {r4, r5, lr}
  00084	012fff1e	 bxeq        lr

; 425  :     }
; 426  : 
; 427  :     m_CsState    = CSSTATE_PAUSE ;
; 428  :     m_pCamAdapter->PDDSetPinState( m_ulPinId, m_CsState );

  00088	e5941000	 ldr         r1, [r4]
  0008c	e594005c	 ldr         r0, [r4, #0x5C]
  00090	e3a02001	 mov         r2, #1
  00094	e58455a0	 str         r5, [r4, #0x5A0]
  00098	eb000000	 bl          |?PDDSetPinState@CCameraDevice@@QAAKKW4CSSTATE@@@Z|

; 429  : 
; 430  :     return ERROR_SUCCESS ;

  0009c	e3a00000	 mov         r0, #0

; 431  : }

  000a0	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000a4	e12fff1e	 bx          lr
  000a8		 |$M35294|

			 ENDP  ; |?PauseStream@CPinDevice@@QAAKXZ|, CPinDevice::PauseStream

	EXPORT	|?PinHandleCustomRequests@CPinDevice@@QAAKPAEK0KPAK@Z| ; CPinDevice::PinHandleCustomRequests
	IMPORT	|?PDDHandlePinCustomProperties@CCameraDevice@@QAAKKPAEK0KPAK@Z| ; CCameraDevice::PDDHandlePinCustomProperties

  00000			 AREA	 |.pdata|, PDATA
|$T35309| DCD	|$LN5@PinHandleC|
	DCD	0x40001002
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PinHandleCustomRequests@CPinDevice@@QAAKPAEK0KPAK@Z| PROC ; CPinDevice::PinHandleCustomRequests

; 777  : {

  00000		 |$LN5@PinHandleC|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M35306|
  00008	e1a05003	 mov         r5, r3
  0000c	e1a03002	 mov         r3, r2
  00010	e1a02001	 mov         r2, r1

; 778  :     return m_pCamAdapter->PDDHandlePinCustomProperties( m_ulPinId, pInBuf, InBufLen, pOutBuf, OutBufLen, pdwBytesTransferred );

  00014	e59de01c	 ldr         lr, [sp, #0x1C]
  00018	e59d4018	 ldr         r4, [sp, #0x18]
  0001c	e5901000	 ldr         r1, [r0]
  00020	e590005c	 ldr         r0, [r0, #0x5C]
  00024	e58de008	 str         lr, [sp, #8]
  00028	e58d4004	 str         r4, [sp, #4]
  0002c	e58d5000	 str         r5, [sp]
  00030	eb000000	 bl          |?PDDHandlePinCustomProperties@CCameraDevice@@QAAKKPAEK0KPAK@Z|

; 779  : }

  00034	e28dd00c	 add         sp, sp, #0xC
  00038	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$M35307|

			 ENDP  ; |?PinHandleCustomRequests@CPinDevice@@QAAKPAEK0KPAK@Z|, CPinDevice::PinHandleCustomRequests

	EXPORT	|?PinHandleConnDataFormatSubReqs@CPinDevice@@AAAKKPAUtagCS_DATAFORMAT_VIDEOINFOHEADER@@PAK@Z| ; CPinDevice::PinHandleConnDataFormatSubReqs
	EXPORT	|??_C@_1EO@HBLJJDEA@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAR?$AAe?$AAq@| [ DATA ] ; `string'
	IMPORT	|?PDDSetPinFormat@CCameraDevice@@QAAKKPAUtagCS_DATARANGE_VIDEO@@@Z| ; CCameraDevice::PDDSetPinFormat
	IMPORT	|?AdapterCompareFormat@CCameraDevice@@QAA_NKQAUtagCS_DATAFORMAT_VIDEOINFOHEADER@@PAPAUtagCS_DATARANGE_VIDEO@@_N@Z| ; CCameraDevice::AdapterCompareFormat

  00000			 AREA	 |.pdata|, PDATA
|$T35325| DCD	|$LN13@PinHandleC@2|
	DCD	0x40003e02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@HBLJJDEA@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAR?$AAe?$AAq@| DCB "P"
	DCB	0x0, "I", 0x0, "N", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PinHandleConnDataFormatSubReqs@CPinDevice@@AAAKKPAUtagCS_DATAFORMAT_VIDEOINFOHEADER@@PAK@Z| PROC ; CPinDevice::PinHandleConnDataFormatSubReqs

; 787  : {

  00000		 |$LN13@PinHandleC@2|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M35322|
  00008	e1a07003	 mov         r7, r3
  0000c	e1a06002	 mov         r6, r2
  00010	e1a0e001	 mov         lr, r1
  00014	e1a04000	 mov         r4, r0

; 788  :     DWORD    dwError  = ERROR_INVALID_PARAMETER;
; 789  : 
; 790  :     PCS_DATARANGE_VIDEO pCsDataRangeVideoMatched = NULL;
; 791  : 
; 792  :     // We must have called IOCTL_STREAM_INSTANTIATE before setting format
; 793  :     if ( -1 == m_ulPinId )

  00018	e5941000	 ldr         r1, [r4]
  0001c	e3a03000	 mov         r3, #0
  00020	e3a05057	 mov         r5, #0x57
  00024	e3710001	 cmn         r1, #1

; 794  :     {
; 795  :         return dwError;

  00028	03a05057	 moveq       r5, #0x57
  0002c	e58d3004	 str         r3, [sp, #4]
  00030	0a00002a	 beq         |$LN2@PinHandleC@2|

; 796  :     }
; 797  :     
; 798  :     // The incoming video info header is unsafe. The data might change on a separate thread
; 799  :     // while it's being accessed. For security purposes, let's make a copy of the data
; 800  :     // before any attempt to access them is done, and then work off the copy
; 801  : 
; 802  :     switch( ulReqFlags )

  00034	e35e0002	 cmp         lr, #2
  00038	0a000007	 beq         |$LN3@PinHandleC@2|

; 816  :         }
; 817  : 
; 818  :         break;
; 819  : 
; 820  :     default:
; 821  :         DEBUGMSG( ZONE_IOCTL|ZONE_ERROR, ( _T("PIN_IOControl(%08x): Invalid Request\r\n"), this ) );

  0003c	e59f30b0	 ldr         r3, [pc, #0xB0]
  00040	e5933440	 ldr         r3, [r3, #0x440]
  00044	e3130011	 tst         r3, #0x11
  00048	0a000024	 beq         |$LN2@PinHandleC@2|
  0004c	e59f009c	 ldr         r0, [pc, #0x9C]
  00050	e1a01004	 mov         r1, r4
  00054	eb000000	 bl          NKDbgPrintfW
  00058	ea000020	 b           |$LN2@PinHandleC@2|
  0005c		 |$LN3@PinHandleC@2|

; 803  :     {
; 804  :     case CSPROPERTY_TYPE_SET:
; 805  :         if ( true == m_pCamAdapter->AdapterCompareFormat( m_ulPinId, pCsDataFormatVidInfoHdr, &pCsDataRangeVideoMatched, true ) )

  0005c	e594005c	 ldr         r0, [r4, #0x5C]
  00060	e3a0e001	 mov         lr, #1
  00064	e28d3004	 add         r3, sp, #4
  00068	e1a02006	 mov         r2, r6
  0006c	e58de000	 str         lr, [sp]
  00070	eb000000	 bl          |?AdapterCompareFormat@CCameraDevice@@QAA_NKQAUtagCS_DATAFORMAT_VIDEOINFOHEADER@@PAPAUtagCS_DATARANGE_VIDEO@@_N@Z|
  00074	e3500001	 cmp         r0, #1
  00078	1a000018	 bne         |$LN2@PinHandleC@2|

; 806  :         {
; 807  :             // We found our format
; 808  :             memcpy( &m_CsDataRangeVideo, pCsDataRangeVideoMatched, sizeof ( CS_DATARANGE_VIDEO ) );

  0007c	e59d1004	 ldr         r1, [sp, #4]
  00080	e3a03c05	 mov         r3, #5, 24
  00084	e3832038	 orr         r2, r3, #0x38
  00088	e2840068	 add         r0, r4, #0x68
  0008c	eb000000	 bl          memcpy

; 809  :             memcpy( &m_CsDataRangeVideo, &pCsDataFormatVidInfoHdr->DataFormat, sizeof ( CSDATARANGE ) );

  00090	e3a02040	 mov         r2, #0x40
  00094	e1a01006	 mov         r1, r6
  00098	e2840068	 add         r0, r4, #0x68
  0009c	eb000000	 bl          memcpy
  000a0	e3a03b01	 mov         r3, #1, 22

; 810  :             memcpy( &m_CsDataRangeVideo.VideoInfoHeader, &pCsDataFormatVidInfoHdr->VideoInfoHeader, sizeof ( CS_VIDEOINFOHEADER ) );

  000a4	e3832068	 orr         r2, r3, #0x68
  000a8	e2840f4e	 add         r0, r4, #0x4E, 30
  000ac	e2861040	 add         r1, r6, #0x40
  000b0	eb000000	 bl          memcpy

; 811  : 
; 812  :             m_RtAveTimePerFrame = m_CsDataRangeVideo.VideoInfoHeader.AvgTimePerFrame;

  000b4	e5942164	 ldr         r2, [r4, #0x164]
  000b8	e5943160	 ldr         r3, [r4, #0x160]

; 813  :             
; 814  :             dwError = m_pCamAdapter->PDDSetPinFormat( m_ulPinId, &m_CsDataRangeVideo );

  000bc	e5941000	 ldr         r1, [r4]
  000c0	e594005c	 ldr         r0, [r4, #0x5C]
  000c4	e584202c	 str         r2, [r4, #0x2C]
  000c8	e2842068	 add         r2, r4, #0x68
  000cc	e5843028	 str         r3, [r4, #0x28]
  000d0	eb000000	 bl          |?PDDSetPinFormat@CCameraDevice@@QAAKKPAUtagCS_DATARANGE_VIDEO@@@Z|

; 815  :             *pdwBytesTransferred = 0;

  000d4	e3a03000	 mov         r3, #0
  000d8	e5873000	 str         r3, [r7]
  000dc	e1a05000	 mov         r5, r0
  000e0		 |$LN2@PinHandleC@2|

; 822  :     }
; 823  : 
; 824  :     return dwError;
; 825  : }

  000e0	e1a00005	 mov         r0, r5
  000e4	e28dd008	 add         sp, sp, #8
  000e8	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  000ec	e12fff1e	 bx          lr
  000f0		 |$LN14@PinHandleC@2|
  000f0		 |$LN15@PinHandleC@2|
  000f0	00000000	 DCD         |??_C@_1EO@HBLJJDEA@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAR?$AAe?$AAq@|
  000f4		 |$LN16@PinHandleC@2|
  000f4	00000000	 DCD         |dpCurSettings|
  000f8		 |$M35323|

			 ENDP  ; |?PinHandleConnDataFormatSubReqs@CPinDevice@@AAAKKPAUtagCS_DATAFORMAT_VIDEOINFOHEADER@@PAK@Z|, CPinDevice::PinHandleConnDataFormatSubReqs

	EXPORT	|?CreateHandle@CPinDevice@@AAAKKPAX@Z|	; CPinDevice::CreateHandle

  00000			 AREA	 |.pdata|, PDATA
|$T35339| DCD	|$LN5@CreateHand|
	DCD	0x40000b01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CreateHandle@CPinDevice@@AAAKKPAX@Z| PROC ; CPinDevice::CreateHandle

; 1116 : {

  00000		 |$LN5@CreateHand|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M35336|
  00004	e1a04002	 mov         r4, r2
  00008	e1a05001	 mov         r5, r1

; 1117 :     DWORD  dwHandle;
; 1118 :     DWORD dwProcessId = GetCallerVMProcessId();

  0000c	eb000000	 bl          GetCallerVMProcessId
  00010	e3a03cff	 mov         r3, #0xFF, 24

; 1119 : 
; 1120 :     dwHandle = dwProcessId ^ (( dwIndex << 16 ) + ( (DWORD)pBuffer & 0xFFFF ));

  00014	e38330ff	 orr         r3, r3, #0xFF
  00018	e0043003	 and         r3, r4, r3
  0001c	e0833805	 add         r3, r3, r5, lsl #16
  00020	e0230000	 eor         r0, r3, r0

; 1121 : 
; 1122 :     return dwHandle;
; 1123 : }

  00024	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00028	e12fff1e	 bx          lr
  0002c		 |$M35337|

			 ENDP  ; |?CreateHandle@CPinDevice@@AAAKKPAX@Z|, CPinDevice::CreateHandle

	EXPORT	|?GetIndexFromHandle@CPinDevice@@AAAJKPAX@Z| ; CPinDevice::GetIndexFromHandle

  00000			 AREA	 |.pdata|, PDATA
|$T35352| DCD	|$LN9@GetIndexFr|
	DCD	0x40001901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetIndexFromHandle@CPinDevice@@AAAJKPAX@Z| PROC ; CPinDevice::GetIndexFromHandle

; 1131 : {

  00000		 |$LN9@GetIndexFr|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M35349|
  00004	e1a07002	 mov         r7, r2
  00008	e1a05001	 mov         r5, r1
  0000c	e1a06000	 mov         r6, r0

; 1132 :     LONG   lIndex = -1;    
; 1133 :     DWORD dwProcessId = GetCallerVMProcessId();

  00010	eb000000	 bl          GetCallerVMProcessId

; 1134 : 
; 1135 :     // let's retrieve the index from the handle table and make sure we have a match    
; 1136 :     lIndex = ( dwHandle ^ dwProcessId ) >> 16;
; 1137 :     if( lIndex >= (LONG)m_ulMaxNumOfBuffers || lIndex < 0 )

  00014	e596e01c	 ldr         lr, [r6, #0x1C]
  00018	e0253000	 eor         r3, r5, r0
  0001c	e1a04823	 mov         r4, r3, lsr #16
  00020	e154000e	 cmp         r4, lr
  00024	aa00000a	 bge         |$LN3@GetIndexFr|
  00028	e3540000	 cmp         r4, #0
  0002c	4a000008	 bmi         |$LN3@GetIndexFr|

; 1141 :     }
; 1142 : 
; 1143 :     if(   ( m_pStreamDescriptorList[ lIndex ].csStreamDescriptorShadow.CsStreamHeader.Data   != pBuffer )
; 1144 :         ||( m_pStreamDescriptorList[ lIndex ].csStreamDescriptorShadow.CsStreamHeader.Handle != dwHandle ))

  00030	e5960060	 ldr         r0, [r6, #0x60]
  00034	e0843184	 add         r3, r4, r4, lsl #3
  00038	e0800203	 add         r0, r0, r3, lsl #4
  0003c	e5903030	 ldr         r3, [r0, #0x30]
  00040	e1530007	 cmp         r3, r7
  00044	1a000002	 bne         |$LN3@GetIndexFr|
  00048	e5903038	 ldr         r3, [r0, #0x38]
  0004c	e1530005	 cmp         r3, r5

; 1145 :     {
; 1146 :         // Something's wrong, bail out
; 1147 :         return -1;
; 1148 :     }
; 1149 : 
; 1150 :     return lIndex;

  00050	0a000000	 beq         |$LN5@GetIndexFr|
  00054		 |$LN3@GetIndexFr|

; 1138 :     {
; 1139 :         // Invalid index, bail out
; 1140 :         return -1;

  00054	e3e04000	 mvn         r4, #0
  00058		 |$LN5@GetIndexFr|

; 1151 : }

  00058	e1a00004	 mov         r0, r4
  0005c	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$M35350|

			 ENDP  ; |?GetIndexFromHandle@CPinDevice@@AAAJKPAX@Z|, CPinDevice::GetIndexFromHandle

	EXPORT	|?RemoveBufferFromList@CPinDevice@@AAA_NPAPAU_tagStreamDescriptor@@PAPAX1@Z| ; CPinDevice::RemoveBufferFromList
	EXPORT	|??_C@_1JO@FHMKFJAC@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HE@GMAPJNKD@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AAF?$AAr?$AAo?$AAm?$AAL@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@LLPCCBOI@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe@| [ DATA ] ; `string'
	IMPORT	|__C_specific_handler|

  00000			 AREA	 |.pdata|, PDATA
|$T35392| DCD	|$LN33@RemoveBuff|
	DCD	0xc0006305

  00000			 AREA	 |.pdata|, PDATA
|$T35394| DCD	|$LN19@RemoveBuff|
	DCD	0x40000b01

  00000			 AREA	 |.xdata|, DATA
|$T35390| DCD	0x1
	DCD	|$LN23@RemoveBuff|
	DCD	|$LN32@RemoveBuff|
	DCD	|$LN19@RemoveBuff|
	DCD	|$LN20@RemoveBuff|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JO@FHMKFJAC@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe@| DCB "P"
	DCB	0x0, "I", 0x0, "N", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "m", 0x0, "o"
	DCB	0x0, "v", 0x0, "e", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, "F", 0x0, "r", 0x0, "o", 0x0, "m"
	DCB	0x0, "L", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "-"
	DCB	0x0, " ", 0x0, "N", 0x0, "u", 0x0, "l", 0x0, "l", 0x0, " "
	DCB	0x0, "p", 0x0, "o", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "h", 0x0, "a", 0x0, "s", 0x0, " "
	DCB	0x0, "b", 0x0, "e", 0x0, "e", 0x0, "n", 0x0, " ", 0x0, "p"
	DCB	0x0, "a", 0x0, "s", 0x0, "s", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "i", 0x0, "n", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HE@GMAPJNKD@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AAF?$AAr?$AAo?$AAm?$AAL@| DCB "P"
	DCB	0x0, "I", 0x0, "N", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "m", 0x0, "o"
	DCB	0x0, "v", 0x0, "e", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, "F", 0x0, "r", 0x0, "o", 0x0, "m"
	DCB	0x0, "L", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "-"
	DCB	0x0, " ", 0x0, "A", 0x0, "c", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, " ", 0x0, "V", 0x0, "i", 0x0, "o", 0x0, "l"
	DCB	0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "."
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@LLPCCBOI@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe@| DCB "P"
	DCB	0x0, "I", 0x0, "N", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "m", 0x0, "o"
	DCB	0x0, "v", 0x0, "e", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f"
	DCB	0x0, "e", 0x0, "r", 0x0, "F", 0x0, "r", 0x0, "o", 0x0, "m"
	DCB	0x0, "L", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T35390|

  00008		 |?RemoveBufferFromList@CPinDevice@@AAA_NPAPAU_tagStreamDescriptor@@PAPAX1@Z| PROC ; CPinDevice::RemoveBufferFromList

; 1305 : {

  00008		 |$LN33@RemoveBuff|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d000f	 stmdb       sp!, {r0 - r3}
  00010	e92d5ff0	 stmdb       sp!, {r4 - r12, lr}
  00014	e28db028	 add         r11, sp, #0x28
  00018	e24dd004	 sub         sp, sp, #4
  0001c		 |$LN30@RemoveBuff|
  0001c	e1a0a003	 mov         r10, r3
  00020	e58ba00c	 str         r10, [r11, #0xC]
  00024	e1a08002	 mov         r8, r2
  00028	e58b8008	 str         r8, [r11, #8]
  0002c	e1a09001	 mov         r9, r1
  00030	e58b9004	 str         r9, [r11, #4]
  00034	e1a04000	 mov         r4, r0
  00038	e58b4000	 str         r4, [r11]

; 1306 :     DWORD dwCounter = 0;
; 1307 :     bool  RetVal = true;
; 1308 : 
; 1309 :     // Let's look in the list of buffers for the first buffer that has a non null external stream descriptor
; 1310 :     DEBUGMSG( ZONE_IOCTL, ( _T("PIN_IOControl(%08x): RemoveBufferFromList\r\n"), this ) );

  0003c	e59f7174	 ldr         r7, [pc, #0x174]
  00040	e3a06000	 mov         r6, #0
  00044	e50b602c	 str         r6, [r11, #-0x2C]
  00048	e5973440	 ldr         r3, [r7, #0x440]
  0004c	e3a05001	 mov         r5, #1
  00050	e3130010	 tst         r3, #0x10
  00054	0a000003	 beq         |$LN10@RemoveBuff|
  00058	e59f015c	 ldr         r0, [pc, #0x15C]
  0005c	e1a01004	 mov         r1, r4
  00060	eb000000	 bl          NKDbgPrintfW
  00064	e5973440	 ldr         r3, [r7, #0x440]
  00068		 |$LN10@RemoveBuff|

; 1311 : 
; 1312 :     if(( ppCsStreamDesc == NULL ) || ( ppMappedData == NULL ) || ( ppUnmappedData == NULL ))

  00068	e3590000	 cmp         r9, #0
  0006c	0a00003f	 beq         |$LN6@RemoveBuff|
  00070	e3580000	 cmp         r8, #0
  00074	0a00003d	 beq         |$LN6@RemoveBuff|
  00078	e35a0000	 cmp         r10, #0
  0007c	0a00003b	 beq         |$LN6@RemoveBuff|

; 1316 :     }
; 1317 : 
; 1318 :     //Initialize arguments
; 1319 :     *ppCsStreamDesc = NULL;

  00080	e3a07000	 mov         r7, #0
  00084	e5897000	 str         r7, [r9]

; 1320 :     *ppMappedData = NULL;

  00088	e5887000	 str         r7, [r8]

; 1321 :     *ppUnmappedData = NULL;

  0008c	e58a7000	 str         r7, [r10]

; 1322 : 
; 1323 :     EnterCriticalSection( &m_csStreamBuffer );

  00090	e2840034	 add         r0, r4, #0x34
  00094	eb000000	 bl          EnterCriticalSection
  00098		 |$LL5@RemoveBuff|

; 1324 :     while(( dwCounter < m_dwBufferCount ) && ( *ppCsStreamDesc == NULL ))

  00098	e5943018	 ldr         r3, [r4, #0x18]
  0009c	e1560003	 cmp         r6, r3
  000a0	2a00002b	 bcs         |$LN4@RemoveBuff|
  000a4	e5993000	 ldr         r3, [r9]
  000a8	e3530000	 cmp         r3, #0
  000ac	1a000028	 bne         |$LN4@RemoveBuff|

; 1325 :     {
; 1326 :         if( m_pStreamDescriptorList[ dwCounter ].pCsStreamDescriptorExternal != NULL )

  000b0	e5943060	 ldr         r3, [r4, #0x60]
  000b4	e0861186	 add         r1, r6, r6, lsl #3
  000b8	e7933201	 ldr         r3, [r3, +r1, lsl #4]
  000bc	e3530000	 cmp         r3, #0
  000c0	0a000020	 beq         |$LN25@RemoveBuff|
  000c4		 |$LN23@RemoveBuff|

; 1327 :         {
; 1328 :             //REVIEW: All buffers accessed here should have been marshalled, check if try/except is needed
; 1329 :             __try
; 1330 :             {
; 1331 :             // We found one registered buffer. Let's return it.
; 1332 :             *ppCsStreamDesc = m_pStreamDescriptorList[ dwCounter ].pCsStreamDescriptorExternal;            

  000c4	e5943060	 ldr         r3, [r4, #0x60]
  000c8	e7933201	 ldr         r3, [r3, +r1, lsl #4]
  000cc	e5893000	 str         r3, [r9]

; 1333 :             *ppMappedData   = m_pStreamDescriptorList[ dwCounter ].csStreamDescriptorShadow.CsStreamHeader.Data;

  000d0	e5943060	 ldr         r3, [r4, #0x60]
  000d4	e0833201	 add         r3, r3, r1, lsl #4
  000d8	e5933030	 ldr         r3, [r3, #0x30]
  000dc	e5883000	 str         r3, [r8]

; 1334 :             *ppUnmappedData = m_pStreamDescriptorList[ dwCounter ].pCsStreamDescriptorExternal->CsStreamHeader.Data;

  000e0	e5943060	 ldr         r3, [r4, #0x60]
  000e4	e7933201	 ldr         r3, [r3, +r1, lsl #4]
  000e8	e5933028	 ldr         r3, [r3, #0x28]
  000ec	e58a3000	 str         r3, [r10]

; 1335 :             m_pStreamDescriptorList[ dwCounter ].pCsStreamDescriptorExternal = NULL;

  000f0	e5943060	 ldr         r3, [r4, #0x60]
  000f4	e7837201	 str         r7, [r3, +r1, lsl #4]

; 1336 :             m_pStreamDescriptorList[ dwCounter ].csStreamDescriptorShadow.CsStreamHeader.Data = *ppUnmappedData;

  000f8	e5943060	 ldr         r3, [r4, #0x60]
  000fc	e59a2000	 ldr         r2, [r10]
  00100	e0833201	 add         r3, r3, r1, lsl #4
  00104	e5832030	 str         r2, [r3, #0x30]

; 1337 :             break;

  00108	ea000011	 b           |$LN4@RemoveBuff|
  0010c		 |$LN20@RemoveBuff|
  0010c		 |$LN32@RemoveBuff|

; 1340 :             {
; 1341 :                 DEBUGMSG(ZONE_IOCTL|ZONE_ERROR, (_T("PIN_IOControl: RemoveBufferFromList - Access Violation.\r\n"))) ;                

  0010c	e59f30a4	 ldr         r3, [pc, #0xA4]
  00110	e5933440	 ldr         r3, [r3, #0x440]
  00114	e3130011	 tst         r3, #0x11
  00118	159f0094	 ldrne       r0, [pc, #0x94]
  0011c	1b000000	 blne        NKDbgPrintfW

; 1342 :                 RetVal = false;

  00120	e3a05000	 mov         r5, #0
  00124	e59b4000	 ldr         r4, [r11]
  00128	e59ba00c	 ldr         r10, [r11, #0xC]
  0012c	e59b8008	 ldr         r8, [r11, #8]
  00130	e59b9004	 ldr         r9, [r11, #4]
  00134	e51b602c	 ldr         r6, [r11, #-0x2C]
  00138	e3a07000	 mov         r7, #0
  0013c	ea000001	 b           |$LN25@RemoveBuff|
  00140		 |$LN29@RemoveBuff|

; 1315 :         return RetVal;

  00140	e55b502c	 ldrb        r5, [r11, #-0x2C]
  00144	ea00000e	 b           |$LN8@RemoveBuff|
  00148		 |$LN25@RemoveBuff|

; 1343 :             }         
; 1344 :         }
; 1345 : 
; 1346 :         dwCounter++;

  00148	e2866001	 add         r6, r6, #1
  0014c	e50b602c	 str         r6, [r11, #-0x2C]

; 1347 :     }

  00150	eaffffd0	 b           |$LL5@RemoveBuff|
  00154		 |$LN4@RemoveBuff|

; 1348 :     LeaveCriticalSection( &m_csStreamBuffer );

  00154	e2840034	 add         r0, r4, #0x34
  00158	eb000000	 bl          LeaveCriticalSection

; 1349 :     if(NULL == *ppMappedData)

  0015c	e5983000	 ldr         r3, [r8]
  00160	e3530000	 cmp         r3, #0
  00164	1a000006	 bne         |$LN8@RemoveBuff|

; 1350 :     {
; 1351 :         RetVal = false;

  00168	e3a05000	 mov         r5, #0

; 1352 :     }
; 1353 :     
; 1354 :     return RetVal;

  0016c	ea000004	 b           |$LN8@RemoveBuff|
  00170		 |$LN6@RemoveBuff|

; 1313 :     {
; 1314 :         DEBUGMSG( ZONE_IOCTL|ZONE_ERROR, ( _T("PIN_IOControl(%08x): RemoveBufferFromList - Null pointer has been passed in.\r\n"), this ) );

  00170	e3130011	 tst         r3, #0x11
  00174	159f0034	 ldrne       r0, [pc, #0x34]
  00178	11a01004	 movne       r1, r4
  0017c	1b000000	 blne        NKDbgPrintfW

; 1315 :         return RetVal;

  00180	e3a05001	 mov         r5, #1
  00184		 |$LN8@RemoveBuff|

; 1355 : }

  00184	e1a00005	 mov         r0, r5
  00188	e24bd028	 sub         sp, r11, #0x28
  0018c	e89d6ff0	 ldmia       sp, {r4 - r11, sp, lr}
  00190	e12fff1e	 bx          lr

			 ENDP  ; |?RemoveBufferFromList@CPinDevice@@AAA_NPAPAU_tagStreamDescriptor@@PAPAX1@Z|, CPinDevice::RemoveBufferFromList

  00194		 |$LN19@RemoveBuff|
  00194		 |$LN31@RemoveBuff|

; 1338 :             }
; 1339 :             __except(GetExceptionCode() == EXCEPTION_ACCESS_VIOLATION ? EXCEPTION_EXECUTE_HANDLER : EXCEPTION_CONTINUE_SEARCH)

  00194	e52de004	 str         lr, [sp, #-4]!
  00198		 |$LN22@RemoveBuff|
  00198		 |$LN35@RemoveBuff|
  00198	e5903000	 ldr         r3, [r0]
  0019c	e5933000	 ldr         r3, [r3]
  001a0	e3530117	 cmp         r3, #0x17, 2
  001a4	03a00001	 moveq       r0, #1
  001a8	13a00000	 movne       r0, #0
  001ac		 |$LN21@RemoveBuff|
  001ac	e49df004	 ldr         pc, [sp], #4
  001b0		 |$LN37@RemoveBuff|
  001b0		 |$LN38@RemoveBuff|
  001b0	00000000	 DCD         |??_C@_1JO@FHMKFJAC@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe@|
  001b4		 |$LN39@RemoveBuff|
  001b4	00000000	 DCD         |??_C@_1HE@GMAPJNKD@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?3?$AA?5?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AAF?$AAr?$AAo?$AAm?$AAL@|
  001b8		 |$LN40@RemoveBuff|
  001b8	00000000	 DCD         |dpCurSettings|
  001bc		 |$LN41@RemoveBuff|
  001bc	00000000	 DCD         |??_C@_1FI@LLPCCBOI@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAR?$AAe?$AAm?$AAo?$AAv?$AAe?$AAB?$AAu?$AAf?$AAf?$AAe@|
  001c0		 |$LN36@RemoveBuff|
  001c0		 |$LN34@RemoveBuff|
	EXPORT	|?PictureNumber@CPinDevice@@QBAKXZ|	; CPinDevice::PictureNumber

  00000			 AREA	 |.pdata|, PDATA
|$T35413| DCD	|$LN5@PictureNum|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PictureNumber@CPinDevice@@QBAKXZ| PROC ; CPinDevice::PictureNumber

; 1391 : {

  00000		 |$LN5@PictureNum|
  00000		 |$M35410|

; 1392 :     return m_ulPictureNumber;

  00000	e590000c	 ldr         r0, [r0, #0xC]

; 1393 : }

  00004	e12fff1e	 bx          lr
  00008		 |$M35411|

			 ENDP  ; |?PictureNumber@CPinDevice@@QBAKXZ|, CPinDevice::PictureNumber

	EXPORT	|?FramesDropped@CPinDevice@@QBAKXZ|	; CPinDevice::FramesDropped

  00000			 AREA	 |.pdata|, PDATA
|$T35423| DCD	|$LN5@FramesDrop|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?FramesDropped@CPinDevice@@QBAKXZ| PROC ; CPinDevice::FramesDropped

; 1396 : {

  00000		 |$LN5@FramesDrop|
  00000		 |$M35420|

; 1397 :     return m_ulFramesDropped;

  00000	e5900008	 ldr         r0, [r0, #8]

; 1398 : }

  00004	e12fff1e	 bx          lr
  00008		 |$M35421|

			 ENDP  ; |?FramesDropped@CPinDevice@@QBAKXZ|, CPinDevice::FramesDropped

	EXPORT	|?FrameSize@CPinDevice@@QBAKXZ|		; CPinDevice::FrameSize

  00000			 AREA	 |.pdata|, PDATA
|$T35433| DCD	|$LN5@FrameSize|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?FrameSize@CPinDevice@@QBAKXZ| PROC	; CPinDevice::FrameSize

; 1401 : {

  00000		 |$LN5@FrameSize|
  00000		 |$M35430|

; 1402 :     return m_ulFrameSize;

  00000	e5900004	 ldr         r0, [r0, #4]

; 1403 : }

  00004	e12fff1e	 bx          lr
  00008		 |$M35431|

			 ENDP  ; |?FrameSize@CPinDevice@@QBAKXZ|, CPinDevice::FrameSize

	EXPORT	|??1MarshalledBuffer_t@@QAA@XZ|		; MarshalledBuffer_t::~MarshalledBuffer_t
; File c:\wince600\public\common\oak\inc\marshal.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T35441| DCD	|$LN5@Marshalled@2|
	DCD	0x40000401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1MarshalledBuffer_t@@QAA@XZ| PROC	; MarshalledBuffer_t::~MarshalledBuffer_t

; 59   :     ~MarshalledBuffer_t() {

  00000		 |$LN5@Marshalled@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35438|

; 60   :         Unmarshal();

  00004	eb000000	 bl          |?Unmarshal@MarshalledBuffer_t@@QAAJXZ|

; 61   :     }

  00008	e49de004	 ldr         lr, [sp], #4
  0000c	e12fff1e	 bx          lr
  00010		 |$M35439|

			 ENDP  ; |??1MarshalledBuffer_t@@QAA@XZ|, MarshalledBuffer_t::~MarshalledBuffer_t

	EXPORT	|?Marshal@MarshalledBuffer_t@@QAAJPAXKKHH@Z| ; MarshalledBuffer_t::Marshal
	IMPORT	|CeAllocAsynchronousBuffer|
	IMPORT	|CeOpenCallerBuffer|

  00000			 AREA	 |.pdata|, PDATA
|$T35455| DCD	|$LN9@Marshal|
	DCD	0x40002502
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Marshal@MarshalledBuffer_t@@QAAJPAXKKHH@Z| PROC ; MarshalledBuffer_t::Marshal

; 116  :     {

  00000		 |$LN9@Marshal|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M35452|
  00008	e1a06003	 mov         r6, r3
  0000c	e1a07002	 mov         r7, r2
  00010	e1a08001	 mov         r8, r1
  00014	e1a04000	 mov         r4, r0

; 117  :         HRESULT result = HRESULT_FROM_WIN32(ERROR_ALREADY_EXISTS);
; 118  : 
; 119  :         if (!m_pLocalSyncMarshalled) {

  00018	e594e004	 ldr         lr, [r4, #4]
  0001c	e59f506c	 ldr         r5, [pc, #0x6C]
  00020	e35e0000	 cmp         lr, #0
  00024	1a000015	 bne         |$LN1@Marshal|

; 120  :             // First do the synchronous marshalling
; 121  :             result = CeOpenCallerBuffer(&m_pLocalSyncMarshalled,
; 122  :                                         pSrcUnmarshalled, cbSrc,
; 123  :                                         ArgumentDescriptor, ForceDuplicate);

  00028	e59de01c	 ldr         lr, [sp, #0x1C]
  0002c	e2840004	 add         r0, r4, #4
  00030	e58de000	 str         lr, [sp]
  00034	eb000000	 bl          CeOpenCallerBuffer
  00038	e1b05000	 movs        r5, r0

; 124  :             if (SUCCEEDED(result)) {

  0003c	4a00000f	 bmi         |$LN1@Marshal|

; 125  :                 // These values will now be required in order to clean up
; 126  :                 m_pLocalAsync = NULL;
; 127  :                 m_pCallerUnmarshalled = pSrcUnmarshalled;
; 128  :                 m_cbSize = cbSrc;
; 129  :                 m_ArgumentDescriptor = ArgumentDescriptor;
; 130  : 
; 131  :                 if (Asynchronous) {

  00040	e59de020	 ldr         lr, [sp, #0x20]
  00044	e3a03000	 mov         r3, #0
  00048	e5843000	 str         r3, [r4]
  0004c	e35e0000	 cmp         lr, #0
  00050	e5848008	 str         r8, [r4, #8]
  00054	e584700c	 str         r7, [r4, #0xC]
  00058	e5846010	 str         r6, [r4, #0x10]
  0005c	0a000007	 beq         |$LN1@Marshal|

; 132  :                     result = CeAllocAsynchronousBuffer(&m_pLocalAsync,
; 133  :                                                        m_pLocalSyncMarshalled,
; 134  :                                                        cbSrc, ArgumentDescriptor);

  00060	e5941004	 ldr         r1, [r4, #4]
  00064	e1a03006	 mov         r3, r6
  00068	e1a02007	 mov         r2, r7
  0006c	e1a00004	 mov         r0, r4
  00070	eb000000	 bl          CeAllocAsynchronousBuffer
  00074	e1b05000	 movs        r5, r0

; 135  :                     if (!SUCCEEDED(result)) {
; 136  :                         Unmarshal();

  00078	41a00004	 movmi       r0, r4
  0007c	4b000000	 blmi        |?Unmarshal@MarshalledBuffer_t@@QAAJXZ|
  00080		 |$LN1@Marshal|

; 137  :                     }
; 138  :                 }
; 139  :             }
; 140  :         }
; 141  :         return result;
; 142  :     }

  00080	e1a00005	 mov         r0, r5
  00084	e28dd004	 add         sp, sp, #4
  00088	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  0008c	e12fff1e	 bx          lr
  00090		 |$LN10@Marshal|
  00090		 |$LN11@Marshal|
  00090	800700b7	 DCD         0x800700b7
  00094		 |$M35453|

			 ENDP  ; |?Marshal@MarshalledBuffer_t@@QAAJPAXKKHH@Z|, MarshalledBuffer_t::Marshal

	EXPORT	|?FlushBufferQueue@CPinDevice@@QAAXXZ|	; CPinDevice::FlushBufferQueue
	EXPORT	|??_C@_1GG@DHJHBGF@?$AAP?$AAI?$AAN?$AA_?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAW?$AAr?$AAi?$AAt?$AAe?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu@| [ DATA ] ; `string'
	IMPORT	|WriteMsgQueue|
; File c:\wince600\platform\evm_omap3530\src\drivers\camera\mdd\pindevice.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T35471| DCD	|$LN14@FlushBuffe|
	DCD	0x40003902

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@DHJHBGF@?$AAP?$AAI?$AAN?$AA_?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAW?$AAr?$AAi?$AAt?$AAe?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu@| DCB "P"
	DCB	0x0, "I", 0x0, "N", 0x0, "_", 0x0, "F", 0x0, "u", 0x0, "n"
	DCB	0x0, "c", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "("
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")", 0x0, ":"
	DCB	0x0, " ", 0x0, "W", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "e"
	DCB	0x0, "M", 0x0, "s", 0x0, "g", 0x0, "Q", 0x0, "u", 0x0, "e"
	DCB	0x0, "u", 0x0, "e", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "t"
	DCB	0x0, "u", 0x0, "r", 0x0, "n", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "l", 0x0, "s", 0x0, "e", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?FlushBufferQueue@CPinDevice@@QAAXXZ| PROC ; CPinDevice::FlushBufferQueue

; 322  : {

  00000		 |$LN14@FlushBuffe|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd024	 sub         sp, sp, #0x24
  00008		 |$M35468|
  00008	e1a04000	 mov         r4, r0

; 323  :     PCS_STREAM_DESCRIPTOR pCsStreamDesc = NULL;

  0000c	e3a03000	 mov         r3, #0

; 324  :     PVOID                 pMappedData   = NULL;

  00010	e3a02000	 mov         r2, #0

; 325  :     PVOID                 pUnmappedData = NULL;

  00014	e3a01000	 mov         r1, #0
  00018	e58d3010	 str         r3, [sp, #0x10]
  0001c	e58d200c	 str         r2, [sp, #0xC]
  00020	e58d1008	 str         r1, [sp, #8]

; 326  :     CS_MSGQUEUE_BUFFER    CsMsgQBuff ;    
; 327  : 
; 328  :     while (( true == RemoveBufferFromList( &pCsStreamDesc, &pMappedData, &pUnmappedData )) && ( NULL != pCsStreamDesc ) && ( m_hMsgQ != NULL ))

  00024	e28d3008	 add         r3, sp, #8
  00028	e28d200c	 add         r2, sp, #0xC
  0002c	e28d1010	 add         r1, sp, #0x10
  00030	eb000000	 bl          |?RemoveBufferFromList@CPinDevice@@AAA_NPAPAU_tagStreamDescriptor@@PAPAX1@Z|
  00034	e3500001	 cmp         r0, #1
  00038	1a000024	 bne         |$LN11@FlushBuffe|
  0003c	e59f509c	 ldr         r5, [pc, #0x9C]
  00040	e3a06000	 mov         r6, #0
  00044		 |$LL4@FlushBuffe|
  00044	e59d2010	 ldr         r2, [sp, #0x10]
  00048	e3520000	 cmp         r2, #0
  0004c	0a00001f	 beq         |$LN11@FlushBuffe|
  00050	e5943030	 ldr         r3, [r4, #0x30]
  00054	e3530000	 cmp         r3, #0
  00058	0a00001c	 beq         |$LN11@FlushBuffe|

; 329  :     {
; 330  :         if (!InitMsgQueueDescriptor (&CsMsgQBuff, pCsStreamDesc, pMappedData, pUnmappedData, FALSE))

  0005c	e59d1008	 ldr         r1, [sp, #8]
  00060	e59d300c	 ldr         r3, [sp, #0xC]
  00064	e1a00004	 mov         r0, r4
  00068	e58d1000	 str         r1, [sp]
  0006c	e28d1014	 add         r1, sp, #0x14
  00070	e58d6004	 str         r6, [sp, #4]
  00074	eb000000	 bl          |?InitMsgQueueDescriptor@CPinDevice@@AAAHPAU_tagMessageQueueData@@PAU_tagStreamDescriptor@@PAX2H@Z|
  00078	e3500000	 cmp         r0, #0
  0007c	0a00000c	 beq         |$LN7@FlushBuffe|

; 331  :         {
; 332  :             continue;
; 333  :         }
; 334  : 
; 335  :         if ( false == WriteMsgQueue( m_hMsgQ, reinterpret_cast<LPVOID>(&CsMsgQBuff),  sizeof(CS_MSGQUEUE_BUFFER), PIN_TIMEOUT, 0 ) )

  00080	e5940030	 ldr         r0, [r4, #0x30]
  00084	e3a030fa	 mov         r3, #0xFA
  00088	e3a02010	 mov         r2, #0x10
  0008c	e28d1014	 add         r1, sp, #0x14
  00090	e58d6000	 str         r6, [sp]
  00094	eb000000	 bl          WriteMsgQueue
  00098	e3500000	 cmp         r0, #0
  0009c	1a000004	 bne         |$LN7@FlushBuffe|

; 336  :         {
; 337  :             DEBUGMSG(ZONE_FUNCTION|ZONE_ERROR, (_T("PIN_Function(%08x): WriteMsgQueue returned false\r\n"), this));

  000a0	e5953440	 ldr         r3, [r5, #0x440]
  000a4	e3130009	 tst         r3, #9
  000a8	159f002c	 ldrne       r0, [pc, #0x2C]
  000ac	11a01004	 movne       r1, r4
  000b0	1b000000	 blne        NKDbgPrintfW
  000b4		 |$LN7@FlushBuffe|
  000b4	e28d3008	 add         r3, sp, #8
  000b8	e28d200c	 add         r2, sp, #0xC
  000bc	e28d1010	 add         r1, sp, #0x10
  000c0	e1a00004	 mov         r0, r4
  000c4	eb000000	 bl          |?RemoveBufferFromList@CPinDevice@@AAA_NPAPAU_tagStreamDescriptor@@PAPAX1@Z|
  000c8	e3500001	 cmp         r0, #1
  000cc	0affffdc	 beq         |$LL4@FlushBuffe|
  000d0		 |$LN11@FlushBuffe|

; 338  :         }
; 339  :     }    
; 340  : 
; 341  :     return;
; 342  : }

  000d0	e28dd024	 add         sp, sp, #0x24
  000d4	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000d8	e12fff1e	 bx          lr
  000dc		 |$LN15@FlushBuffe|
  000dc		 |$LN16@FlushBuffe|
  000dc	00000000	 DCD         |??_C@_1GG@DHJHBGF@?$AAP?$AAI?$AAN?$AA_?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAW?$AAr?$AAi?$AAt?$AAe?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu@|
  000e0		 |$LN17@FlushBuffe|
  000e0	00000000	 DCD         |dpCurSettings|
  000e4		 |$M35469|

			 ENDP  ; |?FlushBufferQueue@CPinDevice@@QAAXXZ|, CPinDevice::FlushBufferQueue

	EXPORT	|?HandlePinIO@CPinDevice@@QAAKXZ|	; CPinDevice::HandlePinIO
	EXPORT	|??_C@_1FK@GPJMFPMP@?$AAP?$AAI?$AAN?$AA_?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu?$AAe?$AA?5?$AAi?$AAs?$AA?5@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T35491| DCD	|$LN19@HandlePinI|
	DCD	0x40005002

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@GPJMFPMP@?$AAP?$AAI?$AAN?$AA_?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu?$AAe?$AA?5?$AAi?$AAs?$AA?5@| DCB "P"
	DCB	0x0, "I", 0x0, "N", 0x0, "_", 0x0, "F", 0x0, "u", 0x0, "n"
	DCB	0x0, "c", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "("
	DCB	0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")", 0x0, ":"
	DCB	0x0, " ", 0x0, "M", 0x0, "s", 0x0, "g", 0x0, "Q", 0x0, "u"
	DCB	0x0, "e", 0x0, "u", 0x0, "e", 0x0, " ", 0x0, "i", 0x0, "s"
	DCB	0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "o"
	DCB	0x0, "p", 0x0, "e", 0x0, "n", 0x0, "e", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?HandlePinIO@CPinDevice@@QAAKXZ| PROC	; CPinDevice::HandlePinIO

; 345  : {    

  00000		 |$LN19@HandlePinI|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd024	 sub         sp, sp, #0x24
  00008		 |$M35488|
  00008	e1a04000	 mov         r4, r0

; 346  :     DWORD dwRet = ERROR_SUCCESS;
; 347  :     BOOL bOK = TRUE;
; 348  : 
; 349  :     EnterCriticalSection(&m_csStreamIO);

  0000c	e2840048	 add         r0, r4, #0x48
  00010	e3a05000	 mov         r5, #0
  00014	eb000000	 bl          EnterCriticalSection

; 350  :     if ( CSSTATE_RUN != m_CsState ) 

  00018	e59435a0	 ldr         r3, [r4, #0x5A0]
  0001c	e3530002	 cmp         r3, #2
  00020	13a03c13	 movne       r3, #0x13, 24
  00024	1383509f	 orrne       r5, r3, #0x9F
  00028	1a00003b	 bne         |$exit$34560|

; 351  :     {
; 352  :         LeaveCriticalSection(&m_csStreamIO);
; 353  :         return ERROR_INVALID_STATE;
; 354  :     }
; 355  :    
; 356  :     PCS_STREAM_DESCRIPTOR pCsStreamDesc = NULL;

  0002c	e3a03000	 mov         r3, #0

; 357  :     PVOID                 pMappedData   = NULL;

  00030	e3a02000	 mov         r2, #0

; 358  :     PVOID                 pUnmappedData = NULL;

  00034	e3a01000	 mov         r1, #0
  00038	e58d3008	 str         r3, [sp, #8]
  0003c	e58d2010	 str         r2, [sp, #0x10]
  00040	e58d100c	 str         r1, [sp, #0xC]

; 359  :     CS_MSGQUEUE_BUFFER    CsMsgQBuff ;
; 360  : 
; 361  :     if ( false == RemoveBufferFromList( &pCsStreamDesc, &pMappedData, &pUnmappedData ) || NULL == pCsStreamDesc )

  00044	e28d300c	 add         r3, sp, #0xC
  00048	e28d2010	 add         r2, sp, #0x10
  0004c	e28d1008	 add         r1, sp, #8
  00050	e1a00004	 mov         r0, r4
  00054	eb000000	 bl          |?RemoveBufferFromList@CPinDevice@@AAA_NPAPAU_tagStreamDescriptor@@PAPAX1@Z|
  00058	e3500000	 cmp         r0, #0
  0005c	0a000028	 beq         |$LN7@HandlePinI|
  00060	e59d2008	 ldr         r2, [sp, #8]
  00064	e3520000	 cmp         r2, #0
  00068	0a000025	 beq         |$LN7@HandlePinI|

; 368  :         goto exit;
; 369  :     }
; 370  : 
; 371  :     if (!InitMsgQueueDescriptor (&CsMsgQBuff, pCsStreamDesc, pMappedData, pUnmappedData, TRUE))

  0006c	e59d100c	 ldr         r1, [sp, #0xC]
  00070	e59d3010	 ldr         r3, [sp, #0x10]
  00074	e3a0e001	 mov         lr, #1
  00078	e58d1000	 str         r1, [sp]
  0007c	e28d1014	 add         r1, sp, #0x14
  00080	e1a00004	 mov         r0, r4
  00084	e58de004	 str         lr, [sp, #4]
  00088	eb000000	 bl          |?InitMsgQueueDescriptor@CPinDevice@@AAAHPAU_tagMessageQueueData@@PAU_tagStreamDescriptor@@PAX2H@Z|
  0008c	e3500000	 cmp         r0, #0

; 372  :     {        
; 373  :         bOK = FALSE;
; 374  :         dwRet = ERROR_INVALID_DATA;

  00090	03a0500d	 moveq       r5, #0xD
  00094	0a000020	 beq         |$exit$34560|

; 375  :         goto exit;
; 376  :     }
; 377  : 
; 378  :     if ( NULL == m_hMsgQ )

  00098	e5943030	 ldr         r3, [r4, #0x30]
  0009c	e1b00003	 movs        r0, r3
  000a0	1a000007	 bne         |$LN3@HandlePinI|

; 379  :     {
; 380  :         DEBUGMSG(ZONE_FUNCTION|ZONE_ERROR, (_T("PIN_Function(%08x): MsgQueue is not opened\r\n"), this)) ;         

  000a4	e59f308c	 ldr         r3, [pc, #0x8C]
  000a8	e5933440	 ldr         r3, [r3, #0x440]
  000ac	e3130009	 tst         r3, #9
  000b0	0a000019	 beq         |$exit$34560|
  000b4	e59f0080	 ldr         r0, [pc, #0x80]
  000b8	e1a01004	 mov         r1, r4
  000bc	eb000000	 bl          NKDbgPrintfW

; 390  : 
; 391  : exit:

  000c0	ea000015	 b           |$exit$34560|
  000c4		 |$LN3@HandlePinI|

; 381  :         bOK = FALSE;
; 382  :         goto exit;
; 383  :     }
; 384  : 
; 385  :     if ( false == WriteMsgQueue( m_hMsgQ, reinterpret_cast<LPVOID>(&CsMsgQBuff),  sizeof(CS_MSGQUEUE_BUFFER), PIN_TIMEOUT, 0 ) )

  000c4	e3a03000	 mov         r3, #0
  000c8	e58d3000	 str         r3, [sp]
  000cc	e3a030fa	 mov         r3, #0xFA
  000d0	e3a02010	 mov         r2, #0x10
  000d4	e28d1014	 add         r1, sp, #0x14
  000d8	eb000000	 bl          WriteMsgQueue
  000dc	e3500000	 cmp         r0, #0
  000e0	1a00000d	 bne         |$exit$34560|

; 386  :     {
; 387  :         DEBUGMSG(ZONE_FUNCTION|ZONE_ERROR, (_T("PIN_Function(%08x): WriteMsgQueue returned false\r\n"), this));

  000e4	e59f304c	 ldr         r3, [pc, #0x4C]
  000e8	e5933440	 ldr         r3, [r3, #0x440]
  000ec	e3130009	 tst         r3, #9
  000f0	159f003c	 ldrne       r0, [pc, #0x3C]
  000f4	11a01004	 movne       r1, r4
  000f8	1b000000	 blne        NKDbgPrintfW

; 388  :         dwRet = ERROR_WRITE_FAULT;

  000fc	e3a0501d	 mov         r5, #0x1D

; 389  :     }

  00100	ea000005	 b           |$exit$34560|
  00104		 |$LN7@HandlePinI|

; 362  :     {
; 363  :         // We dropped a frame
; 364  :         m_ulFramesDropped++;

  00104	e5943008	 ldr         r3, [r4, #8]

; 365  :         m_fDiscontinuity = true;

  00108	e3a02001	 mov         r2, #1
  0010c	e5c425a5	 strb        r2, [r4, #0x5A5]
  00110	e2833001	 add         r3, r3, #1
  00114	e5843008	 str         r3, [r4, #8]

; 366  :         bOK = FALSE;
; 367  :         dwRet = ERROR_OUTOFMEMORY;

  00118	e3a0500e	 mov         r5, #0xE
  0011c		 |$exit$34560|
  0011c	e2840048	 add         r0, r4, #0x48
  00120	eb000000	 bl          LeaveCriticalSection

; 392  :     
; 393  :     LeaveCriticalSection(&m_csStreamIO);
; 394  :     return dwRet;
; 395  : }

  00124	e1a00005	 mov         r0, r5
  00128	e28dd024	 add         sp, sp, #0x24
  0012c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00130	e12fff1e	 bx          lr
  00134		 |$LN20@HandlePinI|
  00134		 |$LN21@HandlePinI|
  00134	00000000	 DCD         |??_C@_1GG@DHJHBGF@?$AAP?$AAI?$AAN?$AA_?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAW?$AAr?$AAi?$AAt?$AAe?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu@|
  00138		 |$LN22@HandlePinI|
  00138	00000000	 DCD         |dpCurSettings|
  0013c		 |$LN23@HandlePinI|
  0013c	00000000	 DCD         |??_C@_1FK@GPJMFPMP@?$AAP?$AAI?$AAN?$AA_?$AAF?$AAu?$AAn?$AAc?$AAt?$AAi?$AAo?$AAn?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu?$AAe?$AA?5?$AAi?$AAs?$AA?5@|
  00140		 |$M35489|

			 ENDP  ; |?HandlePinIO@CPinDevice@@QAAKXZ|, CPinDevice::HandlePinIO

	EXPORT	|?PinHandleConnStateSubReqs@CPinDevice@@AAAKKPAEKPAK@Z| ; CPinDevice::PinHandleConnStateSubReqs
	EXPORT	|??_C@_1JO@DMDDHJFE@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAs?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JO@KFNDNEPH@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAs?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1KG@DBNGNPME@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAC?$AAS?$AAS?$AAT?$AAA?$AAT?$AAE?$AA_?$AAS?$AAT?$AAO@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@KNAEIDHA@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAS@| [ DATA ] ; `string'
	IMPORT	|CeSafeCopyMemory|

  00000			 AREA	 |.pdata|, PDATA
|$T35536| DCD	|$LN51@PinHandleC@3|
	DCD	0xc0008b04

  00000			 AREA	 |.pdata|, PDATA
|$T35538| DCD	|$LN35@PinHandleC@3|
	DCD	0x40000901

  00000			 AREA	 |.xdata|, DATA
|$T35534| DCD	0x1
	DCD	|$LN39@PinHandleC@3|
	DCD	|$LN40@PinHandleC@3|
	DCD	|$LN35@PinHandleC@3|
	DCD	|$LN36@PinHandleC@3|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JO@DMDDHJFE@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAs?$AAe@| DCB "P"
	DCB	0x0, "I", 0x0, "N", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "s"
	DCB	0x0, "e", 0x0, "t", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "C"
	DCB	0x0, "S", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "E"
	DCB	0x0, "_", 0x0, "S", 0x0, "T", 0x0, "O", 0x0, "P", 0x0, " "
	DCB	0x0, "b", 0x0, "u", 0x0, "t", 0x0, " ", 0x0, "w", 0x0, "e"
	DCB	0x0, " ", 0x0, "a", 0x0, "r", 0x0, "e", 0x0, " ", 0x0, "a"
	DCB	0x0, "l", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "y"
	DCB	0x0, " ", 0x0, "S", 0x0, "t", 0x0, "o", 0x0, "p", 0x0, "p"
	DCB	0x0, "e", 0x0, "d", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JO@KFNDNEPH@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAs?$AAe@| DCB "P"
	DCB	0x0, "I", 0x0, "N", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "s"
	DCB	0x0, "e", 0x0, "t", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "C"
	DCB	0x0, "S", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "E"
	DCB	0x0, "_", 0x0, "P", 0x0, "A", 0x0, "U", 0x0, "S", 0x0, "E"
	DCB	0x0, " ", 0x0, "b", 0x0, "u", 0x0, "t", 0x0, " ", 0x0, "w"
	DCB	0x0, "e", 0x0, " ", 0x0, "a", 0x0, "r", 0x0, "e", 0x0, " "
	DCB	0x0, "a", 0x0, "l", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, "y", 0x0, " ", 0x0, "P", 0x0, "a", 0x0, "u", 0x0, "s"
	DCB	0x0, "e", 0x0, "d", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1KG@DBNGNPME@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAC?$AAS?$AAS?$AAT?$AAA?$AAT?$AAE?$AA_?$AAS?$AAT?$AAO@| DCB "P"
	DCB	0x0, "I", 0x0, "N", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "C", 0x0, "S", 0x0, "S", 0x0, "T"
	DCB	0x0, "A", 0x0, "T", 0x0, "E", 0x0, "_", 0x0, "S", 0x0, "T"
	DCB	0x0, "O", 0x0, "P", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "C", 0x0, "S", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T"
	DCB	0x0, "E", 0x0, "_", 0x0, "R", 0x0, "U", 0x0, "N", 0x0, " "
	DCB	0x0, "i", 0x0, "s", 0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t"
	DCB	0x0, " ", 0x0, "a", 0x0, " ", 0x0, "s", 0x0, "u", 0x0, "p"
	DCB	0x0, "p", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "t", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " "
	DCB	0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@KNAEIDHA@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAS@| DCB "P"
	DCB	0x0, "I", 0x0, "N", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "c", 0x0, "o"
	DCB	0x0, "r", 0x0, "r", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, " "
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T35534|

  00008		 |?PinHandleConnStateSubReqs@CPinDevice@@AAAKKPAEKPAK@Z| PROC ; CPinDevice::PinHandleConnStateSubReqs

; 637  : {

  00008		 |$LN51@PinHandleC@3|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d5830	 stmdb       sp!, {r4, r5, r11, r12, lr}
  00010	e28db014	 add         r11, sp, #0x14
  00014	e24dd004	 sub         sp, sp, #4
  00018		 |$LN49@PinHandleC@3|
  00018	e1a0e002	 mov         lr, r2
  0001c	e1a05000	 mov         r5, r0

; 638  :     DWORD    dwError  = ERROR_INVALID_PARAMETER;

  00020	e3a04057	 mov         r4, #0x57

; 639  :     
; 640  :     switch( ulReqFlags )

  00024	e3510001	 cmp         r1, #1
  00028	0a000064	 beq         |$LN19@PinHandleC@3|
  0002c	e3510002	 cmp         r1, #2
  00030	0a000007	 beq         |$LN15@PinHandleC@3|

; 758  : 
; 759  :     default:
; 760  :         DEBUGMSG( ZONE_IOCTL|ZONE_ERROR, ( _T("PIN_IOControl(%08x): Invalid Request\r\n"), this ) );

  00034	e59f3208	 ldr         r3, [pc, #0x208]
  00038	e5933440	 ldr         r3, [r3, #0x440]
  0003c	e3130011	 tst         r3, #0x11
  00040	0a000077	 beq         |$LN22@PinHandleC@3|
  00044	e59f0208	 ldr         r0, [pc, #0x208]
  00048	e1a01005	 mov         r1, r5
  0004c	eb000000	 bl          NKDbgPrintfW

; 761  : 
; 762  :         break;

  00050	ea000073	 b           |$LN22@PinHandleC@3|
  00054		 |$LN15@PinHandleC@3|

; 667  :         break;
; 668  :     
; 669  :     case CSPROPERTY_TYPE_SET:
; 670  : 
; 671  :         CSSTATE csState;
; 672  :         if( OutBufLen < sizeof( CSSTATE ))

  00054	e3530004	 cmp         r3, #4

; 673  :         {
; 674  :             dwError = ERROR_MORE_DATA;
; 675  :             break;

  00058	3a00005a	 bcc         |$LN47@PinHandleC@3|

; 676  :         }
; 677  : 
; 678  :         if( NULL == pOutBuf )

  0005c	e35e0000	 cmp         lr, #0

; 679  :         {
; 680  :             dwError = ERROR_INVALID_PARAMETER;
; 681  :             break;

  00060	0a00005c	 beq         |$LN48@PinHandleC@3|

; 682  :         }
; 683  : 
; 684  :         if( !CeSafeCopyMemory( &csState, pOutBuf, sizeof( CSSTATE )))

  00064	e3a02004	 mov         r2, #4
  00068	e1a0100e	 mov         r1, lr
  0006c	e24b0018	 sub         r0, r11, #0x18
  00070	eb000000	 bl          CeSafeCopyMemory
  00074	e3500000	 cmp         r0, #0

; 685  :         {
; 686  :             dwError = ERROR_MORE_DATA;
; 687  :             break;

  00078	0a000052	 beq         |$LN47@PinHandleC@3|

; 688  :         }
; 689  : 
; 690  :         if( csState == m_CsState )

  0007c	e59525a0	 ldr         r2, [r5, #0x5A0]
  00080	e51b3018	 ldr         r3, [r11, #-0x18]
  00084	e1530002	 cmp         r3, r2

; 691  :         { 
; 692  :             dwError = ERROR_SUCCESS;
; 693  :             break;

  00088	0a000062	 beq         |$LN41@PinHandleC@3|

; 694  :         }
; 695  : 
; 696  :         EnterCriticalSection(&m_csStreamIO);

  0008c	e2850048	 add         r0, r5, #0x48
  00090	eb000000	 bl          EnterCriticalSection

; 697  :         switch ( csState )

  00094	e51b3018	 ldr         r3, [r11, #-0x18]
  00098	e3530000	 cmp         r3, #0
  0009c	0a00002f	 beq         |$LN8@PinHandleC@3|
  000a0	e3530001	 cmp         r3, #1
  000a4	0a00001e	 beq         |$LN6@PinHandleC@3|
  000a8	e3530002	 cmp         r3, #2
  000ac	0a000007	 beq         |$LN4@PinHandleC@3|

; 751  : 
; 752  :         default :
; 753  :             DEBUGMSG( ZONE_IOCTL|ZONE_ERROR, ( _T("PIN_IOControl(%08x): Incorrect State\r\n"), this ) );

  000b0	e59f318c	 ldr         r3, [pc, #0x18C]
  000b4	e5933440	 ldr         r3, [r3, #0x440]
  000b8	e3130011	 tst         r3, #0x11
  000bc	159f018c	 ldrne       r0, [pc, #0x18C]
  000c0	11a01005	 movne       r1, r5
  000c4	1b000000	 blne        NKDbgPrintfW

; 754  :             dwError = ERROR_INVALID_PARAMETER;

  000c8	e3a04057	 mov         r4, #0x57
  000cc	ea000038	 b           |$LN9@PinHandleC@3|
  000d0		 |$LN4@PinHandleC@3|

; 733  : 
; 734  :         case CSSTATE_RUN:
; 735  :             
; 736  :             if ( CSSTATE_STOP == m_CsState ) 

  000d0	e59535a0	 ldr         r3, [r5, #0x5A0]
  000d4	e3530000	 cmp         r3, #0
  000d8	1a000008	 bne         |$LN3@PinHandleC@3|

; 737  :             {
; 738  :                 DEBUGMSG( ZONE_IOCTL, ( _T("PIN_IOControl(%08x): CSSTATE_STOP to CSSTATE_RUN is not a supported transition .\r\n"), this ) );

  000dc	e59f3160	 ldr         r3, [pc, #0x160]
  000e0	e5933440	 ldr         r3, [r3, #0x440]
  000e4	e3130010	 tst         r3, #0x10
  000e8	159f015c	 ldrne       r0, [pc, #0x15C]
  000ec	11a01005	 movne       r1, r5
  000f0	1b000000	 blne        NKDbgPrintfW
  000f4	e3a03c13	 mov         r3, #0x13, 24

; 739  :                 dwError = ERROR_INVALID_STATE;

  000f8	e383409f	 orr         r4, r3, #0x9F

; 740  :                 break;

  000fc	ea00002c	 b           |$LN9@PinHandleC@3|
  00100		 |$LN3@PinHandleC@3|

; 741  :             }
; 742  : 
; 743  :             m_CsState = CSSTATE_RUN;          
; 744  :             m_msStart = 0xFFFFFFFF;
; 745  :             m_pCamAdapter->PDDSetPinState( m_ulPinId, m_CsState );

  00100	e5951000	 ldr         r1, [r5]
  00104	e595005c	 ldr         r0, [r5, #0x5C]
  00108	e3a03002	 mov         r3, #2
  0010c	e3e0e000	 mvn         lr, #0
  00110	e3a02002	 mov         r2, #2
  00114	e58535a0	 str         r3, [r5, #0x5A0]
  00118	e585e020	 str         lr, [r5, #0x20]
  0011c	eb000000	 bl          |?PDDSetPinState@CCameraDevice@@QAAKKW4CSSTATE@@@Z|

; 746  : 
; 747  : 
; 748  :             dwError = ERROR_SUCCESS;
; 749  :             
; 750  :             break;

  00120	ea000022	 b           |$LN45@PinHandleC@3|
  00124		 |$LN6@PinHandleC@3|

; 719  : 
; 720  :             break;
; 721  : 
; 722  :         case CSSTATE_PAUSE:
; 723  :             
; 724  :             if ( CSSTATE_PAUSE == m_CsState ) 

  00124	e59535a0	 ldr         r3, [r5, #0x5A0]
  00128	e3530001	 cmp         r3, #1
  0012c	1a000007	 bne         |$LN5@PinHandleC@3|

; 725  :             {
; 726  :                 DEBUGMSG( ZONE_IOCTL, ( _T("PIN_IOControl(%08x): State to set = CSSTATE_PAUSE but we are already Paused.\r\n"), this ) );

  00130	e59f310c	 ldr         r3, [pc, #0x10C]
  00134	e5933440	 ldr         r3, [r3, #0x440]
  00138	e3130010	 tst         r3, #0x10
  0013c	0a00001b	 beq         |$LN45@PinHandleC@3|
  00140	e59f0100	 ldr         r0, [pc, #0x100]
  00144		 |$LN46@PinHandleC@3|
  00144	e1a01005	 mov         r1, r5
  00148	eb000000	 bl          NKDbgPrintfW

; 727  :                 dwError = ERROR_SUCCESS;
; 728  :                 break;

  0014c	ea000017	 b           |$LN45@PinHandleC@3|
  00150		 |$LN5@PinHandleC@3|

; 729  :             }
; 730  : 
; 731  :             dwError = PauseStream();

  00150	e1a00005	 mov         r0, r5
  00154	eb000000	 bl          |?PauseStream@CPinDevice@@QAAKXZ|
  00158	e1a04000	 mov         r4, r0

; 732  :             break;

  0015c	ea000014	 b           |$LN9@PinHandleC@3|
  00160		 |$LN8@PinHandleC@3|

; 698  :         {
; 699  :         case CSSTATE_STOP:
; 700  : 
; 701  :             m_ulPictureNumber = 0;
; 702  :             m_ulFramesDropped = 0;
; 703  :             m_msLastPT        = 0;
; 704  : 
; 705  :             // We can get to the CSSTATE_STOP state from any other state.
; 706  :             if ( CSSTATE_STOP == m_CsState ) 

  00160	e59535a0	 ldr         r3, [r5, #0x5A0]
  00164	e3a0e000	 mov         lr, #0
  00168	e585e00c	 str         lr, [r5, #0xC]
  0016c	e3530000	 cmp         r3, #0
  00170	e585e008	 str         lr, [r5, #8]
  00174	e585e024	 str         lr, [r5, #0x24]
  00178	1a000005	 bne         |$LN7@PinHandleC@3|

; 707  :             {
; 708  :                 DEBUGMSG( ZONE_IOCTL, ( _T("PIN_IOControl(%08x): State to set = CSSTATE_STOP but we are already Stopped.\r\n"), this ) );

  0017c	e59f30c0	 ldr         r3, [pc, #0xC0]
  00180	e5933440	 ldr         r3, [r3, #0x440]
  00184	e3130010	 tst         r3, #0x10
  00188	0a000008	 beq         |$LN45@PinHandleC@3|
  0018c	e59f00ac	 ldr         r0, [pc, #0xAC]

; 709  :                 dwError = ERROR_SUCCESS;
; 710  :                 break;

  00190	eaffffeb	 b           |$LN46@PinHandleC@3|
  00194		 |$LN7@PinHandleC@3|

; 711  :             }
; 712  :         
; 713  :             m_CsState = CSSTATE_STOP;
; 714  :             m_pCamAdapter->PDDSetPinState( m_ulPinId, m_CsState );

  00194	e5951000	 ldr         r1, [r5]
  00198	e595005c	 ldr         r0, [r5, #0x5C]
  0019c	e3a02000	 mov         r2, #0
  001a0	e585e5a0	 str         lr, [r5, #0x5A0]
  001a4	eb000000	 bl          |?PDDSetPinState@CCameraDevice@@QAAKKW4CSSTATE@@@Z|

; 715  : 
; 716  :             // The buffer queue needs to be emptied if the driver is not allocating the buffers
; 717  :             FlushBufferQueue();

  001a8	e1a00005	 mov         r0, r5
  001ac	eb000000	 bl          |?FlushBufferQueue@CPinDevice@@QAAXXZ|
  001b0		 |$LN45@PinHandleC@3|

; 718  :             dwError = ERROR_SUCCESS;

  001b0	e3a04000	 mov         r4, #0
  001b4		 |$LN9@PinHandleC@3|

; 755  :         }
; 756  :         LeaveCriticalSection(&m_csStreamIO);

  001b4	e2850048	 add         r0, r5, #0x48
  001b8	eb000000	 bl          LeaveCriticalSection

; 757  :         break;

  001bc	ea000018	 b           |$LN22@PinHandleC@3|
  001c0		 |$LN19@PinHandleC@3|

; 641  :     {
; 642  :     case CSPROPERTY_TYPE_GET:
; 643  :         if( OutBufLen < sizeof ( CSSTATE ) )

  001c0	e3530004	 cmp         r3, #4
  001c4	2a000001	 bcs         |$LN18@PinHandleC@3|
  001c8		 |$LN47@PinHandleC@3|

; 644  :         {
; 645  :             dwError = ERROR_MORE_DATA;

  001c8	e3a040ea	 mov         r4, #0xEA

; 646  :             break;

  001cc	ea000014	 b           |$LN22@PinHandleC@3|
  001d0		 |$LN18@PinHandleC@3|

; 647  :         }
; 648  :         
; 649  :         if( NULL == pOutBuf )

  001d0	e35e0000	 cmp         lr, #0
  001d4	1a000001	 bne         |$LN17@PinHandleC@3|
  001d8		 |$LN48@PinHandleC@3|

; 650  :         {
; 651  :             dwError = ERROR_INVALID_PARAMETER;

  001d8	e3a04057	 mov         r4, #0x57

; 652  :             break;

  001dc	ea000010	 b           |$LN22@PinHandleC@3|
  001e0		 |$LN17@PinHandleC@3|
  001e0		 |$LN39@PinHandleC@3|

; 653  :         }
; 654  : 
; 655  :         __try
; 656  :         {
; 657  :             memcpy( pOutBuf, &m_CsState, sizeof ( CSSTATE ) );

  001e0	e59525a0	 ldr         r2, [r5, #0x5A0]

; 658  :             *pdwBytesTransferred = sizeof ( CSSTATE );

  001e4	e59b1000	 ldr         r1, [r11]
  001e8	e3a00004	 mov         r0, #4
  001ec	e1a03422	 mov         r3, r2, lsr #8
  001f0	e5ce2000	 strb        r2, [lr]
  001f4	e5ce3001	 strb        r3, [lr, #1]
  001f8	e1a03822	 mov         r3, r2, lsr #16
  001fc	e5ce3002	 strb        r3, [lr, #2]
  00200	e1a03c22	 mov         r3, r2, lsr #24
  00204	e5ce3003	 strb        r3, [lr, #3]
  00208	e5810000	 str         r0, [r1]
  0020c		 |$LN40@PinHandleC@3|

; 659  :         }

  0020c	ea000001	 b           |$LN41@PinHandleC@3|
  00210		 |$LN36@PinHandleC@3|

; 661  :         {
; 662  :             dwError = ERROR_MORE_DATA;

  00210	e3a040ea	 mov         r4, #0xEA

; 663  :             break;

  00214	ea000002	 b           |$LN22@PinHandleC@3|
  00218		 |$LN41@PinHandleC@3|

; 664  :         }
; 665  :         
; 666  :         dwError = ERROR_SUCCESS;

  00218	e3a04000	 mov         r4, #0

; 763  :     }
; 764  : 
; 765  :     return dwError;

  0021c	ea000000	 b           |$LN22@PinHandleC@3|
  00220		 |$LN44@PinHandleC@3|
  00220	e51b4018	 ldr         r4, [r11, #-0x18]
  00224		 |$LN22@PinHandleC@3|

; 766  : }

  00224	e1a00004	 mov         r0, r4
  00228	e24bd014	 sub         sp, r11, #0x14
  0022c	e89d6830	 ldmia       sp, {r4, r5, r11, sp, lr}
  00230	e12fff1e	 bx          lr

			 ENDP  ; |?PinHandleConnStateSubReqs@CPinDevice@@AAAKKPAEKPAK@Z|, CPinDevice::PinHandleConnStateSubReqs

  00234		 |$LN35@PinHandleC@3|
  00234		 |$LN50@PinHandleC@3|

; 660  :         __except( EXCEPTION_EXECUTE_HANDLER )        

  00234	e52de004	 str         lr, [sp, #-4]!
  00238		 |$LN38@PinHandleC@3|
  00238		 |$LN53@PinHandleC@3|
  00238	e3a00001	 mov         r0, #1
  0023c		 |$LN37@PinHandleC@3|
  0023c	e49df004	 ldr         pc, [sp], #4
  00240		 |$LN55@PinHandleC@3|
  00240		 |$LN56@PinHandleC@3|
  00240	00000000	 DCD         |??_C@_1JO@DMDDHJFE@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAs?$AAe@|
  00244		 |$LN57@PinHandleC@3|
  00244	00000000	 DCD         |dpCurSettings|
  00248		 |$LN58@PinHandleC@3|
  00248	00000000	 DCD         |??_C@_1JO@KFNDNEPH@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAs?$AAe@|
  0024c		 |$LN59@PinHandleC@3|
  0024c	00000000	 DCD         |??_C@_1KG@DBNGNPME@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAC?$AAS?$AAS?$AAT?$AAA?$AAT?$AAE?$AA_?$AAS?$AAT?$AAO@|
  00250		 |$LN60@PinHandleC@3|
  00250	00000000	 DCD         |??_C@_1EO@KNAEIDHA@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAc?$AAo?$AAr?$AAr?$AAe?$AAc?$AAt?$AA?5?$AAS@|
  00254		 |$LN61@PinHandleC@3|
  00254	00000000	 DCD         |??_C@_1EO@HBLJJDEA@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAR?$AAe?$AAq@|
  00258		 |$LN54@PinHandleC@3|
  00258		 |$LN52@PinHandleC@3|
	EXPORT	|?SwSetupStreamDescriptor@CPinDevice@@AAAKKPAU_tagStreamDescriptor@@PAX@Z| ; CPinDevice::SwSetupStreamDescriptor
	IMPORT	|?PDDRegisterClientBuffer@CCameraDevice@@QAAKKPAX@Z| ; CCameraDevice::PDDRegisterClientBuffer

  00000			 AREA	 |.pdata|, PDATA
|$T35582| DCD	|$LN21@SwSetupStr|
	DCD	0xc0002905

  00000			 AREA	 |.pdata|, PDATA
|$T35584| DCD	|$LN7@SwSetupStr|
	DCD	0x40000301

  00000			 AREA	 |.xdata|, DATA
|$T35580| DCD	0x1
	DCD	|$LN11@SwSetupStr|
	DCD	|$LN12@SwSetupStr|
	DCD	|$LN7@SwSetupStr|
	DCD	|$LN8@SwSetupStr|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T35580|

  00008		 |?SwSetupStreamDescriptor@CPinDevice@@AAAKKPAU_tagStreamDescriptor@@PAX@Z| PROC ; CPinDevice::SwSetupStreamDescriptor

; 1027 : {

  00008		 |$LN21@SwSetupStr|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d000f	 stmdb       sp!, {r0 - r3}
  00010	e92d58f0	 stmdb       sp!, {r4 - r7, r11, r12, lr}
  00014	e28db01c	 add         r11, sp, #0x1C
  00018	e24dd004	 sub         sp, sp, #4
  0001c		 |$LN19@SwSetupStr|
  0001c	e1a04003	 mov         r4, r3
  00020	e1b05002	 movs        r5, r2
  00024	e58b5008	 str         r5, [r11, #8]
  00028	e1a07001	 mov         r7, r1
  0002c	e1a06000	 mov         r6, r0
  00030	e58b6000	 str         r6, [r11]

; 1028 :     DWORD dwHandle;
; 1029 :     PCS_STREAM_DESCRIPTOR pCsStreamDescExt = ( PCS_STREAM_DESCRIPTOR ) pBuffer;
; 1030 : 
; 1031 :     if(( pCsStreamDesc == NULL ) || ( pBuffer == NULL ))

  00034	0a000018	 beq         |$LN2@SwSetupStr|
  00038	e3540000	 cmp         r4, #0
  0003c	0a000016	 beq         |$LN2@SwSetupStr|

; 1034 :     }
; 1035 : 
; 1036 :     dwHandle = CreateHandle( dwIndex, pBuffer );

  00040	eb000000	 bl          GetCallerVMProcessId
  00044	e3a03cff	 mov         r3, #0xFF, 24
  00048	e383e0ff	 orr         lr, r3, #0xFF
  0004c	e004e00e	 and         lr, r4, lr
  00050	e08e1807	 add         r1, lr, r7, lsl #16
  00054	e0213000	 eor         r3, r1, r0
  00058	e50b3020	 str         r3, [r11, #-0x20]
  0005c		 |$LN11@SwSetupStr|

; 1037 : 
; 1038 :     __try
; 1039 :     {
; 1040 :         pCsStreamDescExt->CsStreamHeader.Handle = dwHandle; 

  0005c	e5843030	 str         r3, [r4, #0x30]
  00060		 |$LN12@SwSetupStr|

; 1041 :     }

  00060	e51b0020	 ldr         r0, [r11, #-0x20]
  00064	ea000004	 b           |$LN13@SwSetupStr|
  00068		 |$LN8@SwSetupStr|

; 1043 :     {
; 1044 :         return ERROR_INVALID_PARAMETER;

  00068	e3a00057	 mov         r0, #0x57
  0006c	e59b6000	 ldr         r6, [r11]
  00070	e59b5008	 ldr         r5, [r11, #8]
  00074	e51b3020	 ldr         r3, [r11, #-0x20]
  00078	ea000008	 b           |$LN4@SwSetupStr|
  0007c		 |$LN13@SwSetupStr|

; 1045 :     }
; 1046 : 
; 1047 :     // Note: This is the place to setup DMA for the buffer. 
; 1048 : 
; 1049 :     pCsStreamDesc->CsStreamHeader.Handle = dwHandle; 

  0007c	e5853030	 str         r3, [r5, #0x30]

; 1050 :     
; 1051 :     return m_pCamAdapter->PDDRegisterClientBuffer( m_ulPinId, pCsStreamDesc->CsStreamHeader.Data );    

  00080	e5961000	 ldr         r1, [r6]
  00084	e596005c	 ldr         r0, [r6, #0x5C]
  00088	e5952028	 ldr         r2, [r5, #0x28]
  0008c	eb000000	 bl          |?PDDRegisterClientBuffer@CCameraDevice@@QAAKKPAX@Z|
  00090	ea000002	 b           |$LN4@SwSetupStr|
  00094		 |$LN18@SwSetupStr|

; 1032 :     {
; 1033 :         return ERROR_INVALID_PARAMETER;

  00094	e51b0020	 ldr         r0, [r11, #-0x20]
  00098	ea000000	 b           |$LN4@SwSetupStr|
  0009c		 |$LN2@SwSetupStr|
  0009c	e3a00057	 mov         r0, #0x57
  000a0		 |$LN4@SwSetupStr|

; 1052 : }

  000a0	e24bd01c	 sub         sp, r11, #0x1C
  000a4	e89d68f0	 ldmia       sp, {r4 - r7, r11, sp, lr}
  000a8	e12fff1e	 bx          lr

			 ENDP  ; |?SwSetupStreamDescriptor@CPinDevice@@AAAKKPAU_tagStreamDescriptor@@PAX@Z|, CPinDevice::SwSetupStreamDescriptor

  000ac		 |$LN7@SwSetupStr|
  000ac		 |$LN20@SwSetupStr|

; 1042 :     __except( EXCEPTION_EXECUTE_HANDLER )

  000ac	e52de004	 str         lr, [sp, #-4]!
  000b0		 |$LN10@SwSetupStr|
  000b0		 |$LN23@SwSetupStr|
  000b0	e3a00001	 mov         r0, #1
  000b4		 |$LN9@SwSetupStr|
  000b4	e49df004	 ldr         pc, [sp], #4
  000b8		 |$LN24@SwSetupStr|
  000b8		 |$LN22@SwSetupStr|
	EXPORT	|?HwSetupStreamDescriptor@CPinDevice@@AAAKK@Z| ; CPinDevice::HwSetupStreamDescriptor
	IMPORT	|?PDDAllocatePinBuffer@CCameraDevice@@QAAPAXK@Z| ; CCameraDevice::PDDAllocatePinBuffer

  00000			 AREA	 |.pdata|, PDATA
|$T35621| DCD	|$LN21@HwSetupStr|
	DCD	0xc0004f05

  00000			 AREA	 |.pdata|, PDATA
|$T35623| DCD	|$LN7@HwSetupStr|
	DCD	0x40000301

  00000			 AREA	 |.xdata|, DATA
|$T35619| DCD	0x1
	DCD	|$LN11@HwSetupStr|
	DCD	|$LN12@HwSetupStr|
	DCD	|$LN7@HwSetupStr|
	DCD	|$LN8@HwSetupStr|
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T35619|

  00008		 |?HwSetupStreamDescriptor@CPinDevice@@AAAKK@Z| PROC ; CPinDevice::HwSetupStreamDescriptor

; 1059 : {

  00008		 |$LN21@HwSetupStr|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d0003	 stmdb       sp!, {r0, r1}
  00010	e92d5870	 stmdb       sp!, {r4 - r6, r11, r12, lr}
  00014	e28db018	 add         r11, sp, #0x18
  00018	e24dd004	 sub         sp, sp, #4
  0001c		 |$LN19@HwSetupStr|
  0001c	e1a04001	 mov         r4, r1
  00020	e58b4004	 str         r4, [r11, #4]
  00024	e1a06000	 mov         r6, r0

; 1060 :     PCSSTREAM_HEADER      pCsStreamHeader; 
; 1061 :     PCS_FRAME_INFO        pCsFrameInfo;
; 1062 : 
; 1063 :     if( dwIndex > m_dwBufferCount )

  00028	e5963018	 ldr         r3, [r6, #0x18]
  0002c	e1540003	 cmp         r4, r3

; 1064 :     {
; 1065 :         return ERROR_INVALID_PARAMETER;

  00030	83a00057	 movhi       r0, #0x57

; 1060 :     PCSSTREAM_HEADER      pCsStreamHeader; 
; 1061 :     PCS_FRAME_INFO        pCsFrameInfo;
; 1062 : 
; 1063 :     if( dwIndex > m_dwBufferCount )

  00034	8a00003f	 bhi         |$LN4@HwSetupStr|

; 1066 :     }
; 1067 : 
; 1068 :     m_ulFrameSize = CS__DIBSIZE (m_CsDataRangeVideo.VideoInfoHeader.bmiHeader);

  00038	e2863c01	 add         r3, r6, #1, 24
  0003c	e1d327b6	 ldrh        r2, [r3, #0x76]
  00040	e596316c	 ldr         r3, [r6, #0x16C]
  00044	e596e170	 ldr         lr, [r6, #0x170]
  00048	e3e0523e	 mvn         r5, #0x3E, 4
  0004c	e0030392	 mul         r3, r2, r3

; 1069 : 
; 1070 :     pCsStreamHeader = &( m_pStreamDescriptorList[ dwIndex ].csStreamDescriptorShadow.CsStreamHeader );

  00050	e5960060	 ldr         r0, [r6, #0x60]
  00054	e0841184	 add         r1, r4, r4, lsl #3
  00058	e283301f	 add         r3, r3, #0x1F
  0005c	e00531a3	 and         r3, r5, r3, lsr #3
  00060	e0020e93	 mul         r2, r3, lr
  00064	e0801201	 add         r1, r0, r1, lsl #4
  00068	e1a05001	 mov         r5, r1
  0006c	e5862004	 str         r2, [r6, #4]

; 1071 :     pCsFrameInfo = &( m_pStreamDescriptorList[ dwIndex ].csStreamDescriptorShadow.CsFrameInfo );
; 1072 : 
; 1073 :     pCsStreamHeader->Size                         = sizeof(CSSTREAM_HEADER);

  00070	e3a03038	 mov         r3, #0x38
  00074	e5a53008	 str         r3, [r5, #8]!

; 1074 :     pCsStreamHeader->TypeSpecificFlags            = 0;

  00078	e3a0e000	 mov         lr, #0

; 1075 :     pCsStreamHeader->PresentationTime.Time        = 0;
; 1076 :     pCsStreamHeader->PresentationTime.Numerator   = 1;

  0007c	e3a03001	 mov         r3, #1
  00080	e50b501c	 str         r5, [r11, #-0x1C]

; 1077 :     pCsStreamHeader->PresentationTime.Denominator = 1;
; 1078 :     pCsStreamHeader->Duration                     = 0;
; 1079 :     pCsStreamHeader->FrameExtent                  = m_ulFrameSize;
; 1080 :     pCsStreamHeader->DataUsed                     = m_ulFrameSize;
; 1081 :     pCsStreamHeader->OptionsFlags                 = CSSTREAM_HEADER_OPTIONSF_DATADISCONTINUITY;

  00084	e3a00004	 mov         r0, #4
  00088	e585e004	 str         lr, [r5, #4]
  0008c	e585e008	 str         lr, [r5, #8]
  00090	e585e00c	 str         lr, [r5, #0xC]
  00094	e5853010	 str         r3, [r5, #0x10]
  00098	e5853014	 str         r3, [r5, #0x14]
  0009c	e585e018	 str         lr, [r5, #0x18]
  000a0	e585e01c	 str         lr, [r5, #0x1C]
  000a4	e5963004	 ldr         r3, [r6, #4]

; 1082 : 
; 1083 :     pCsFrameInfo->ExtendedHeaderSize = sizeof(CS_FRAME_INFO);

  000a8	e3a02040	 mov         r2, #0x40
  000ac	e5853020	 str         r3, [r5, #0x20]
  000b0	e5963004	 ldr         r3, [r6, #4]
  000b4	e585002c	 str         r0, [r5, #0x2C]
  000b8	e5853024	 str         r3, [r5, #0x24]
  000bc	e5a12040	 str         r2, [r1, #0x40]!

; 1084 :     pCsFrameInfo->dwFrameFlags       = CS_VIDEO_FLAG_FRAME;

  000c0	e581e004	 str         lr, [r1, #4]

; 1085 :     pCsFrameInfo->PictureNumber      = 0; 

  000c4	e581e008	 str         lr, [r1, #8]
  000c8	e581e00c	 str         lr, [r1, #0xC]

; 1086 :     pCsFrameInfo->DropCount          = 0;

  000cc	e581e010	 str         lr, [r1, #0x10]
  000d0	e581e014	 str         lr, [r1, #0x14]
  000d4		 |$LN11@HwSetupStr|

; 1087 : 
; 1088 :     // Note: RemoteLocalAlloc can't really trigger an exception, the __try/__except block is here
; 1089 :     // to highlight the fact that this call has to be protected in the case of a hardware access.
; 1090 :     __try
; 1091 :     {
; 1092 :         pCsStreamHeader->Data = m_pCamAdapter->PDDAllocatePinBuffer( m_ulPinId );

  000d4	e5961000	 ldr         r1, [r6]
  000d8	e596005c	 ldr         r0, [r6, #0x5C]
  000dc	eb000000	 bl          |?PDDAllocatePinBuffer@CCameraDevice@@QAAPAXK@Z|
  000e0	e5850028	 str         r0, [r5, #0x28]
  000e4		 |$LN12@HwSetupStr|

; 1093 :     }

  000e4	e51b001c	 ldr         r0, [r11, #-0x1C]
  000e8	ea000004	 b           |$LN13@HwSetupStr|
  000ec		 |$LN8@HwSetupStr|

; 1094 :     __except( EXCEPTION_EXECUTE_HANDLER )

  000ec	e3a03c05	 mov         r3, #5, 24

; 1095 :     {
; 1096 :         return ERROR_INTERNAL_ERROR;

  000f0	e383004f	 orr         r0, r3, #0x4F
  000f4	e59b4004	 ldr         r4, [r11, #4]
  000f8	e51b501c	 ldr         r5, [r11, #-0x1C]
  000fc	ea00000d	 b           |$LN4@HwSetupStr|
  00100		 |$LN13@HwSetupStr|

; 1097 :     }
; 1098 :     
; 1099 :     if( NULL == pCsStreamHeader->Data )

  00100	e5953028	 ldr         r3, [r5, #0x28]
  00104	e1b06003	 movs        r6, r3

; 1100 :     {
; 1101 :         return ERROR_OUTOFMEMORY;

  00108	03a0000e	 moveq       r0, #0xE

; 1097 :     }
; 1098 :     
; 1099 :     if( NULL == pCsStreamHeader->Data )

  0010c	0a000009	 beq         |$LN4@HwSetupStr|

; 1102 :     }
; 1103 : 
; 1104 :     // And setup the handle
; 1105 :     pCsStreamHeader->Handle = CreateHandle( dwIndex, pCsStreamHeader->Data );

  00110	eb000000	 bl          GetCallerVMProcessId
  00114	e3a03cff	 mov         r3, #0xFF, 24
  00118	e38330ff	 orr         r3, r3, #0xFF
  0011c	e0063003	 and         r3, r6, r3
  00120	e0833804	 add         r3, r3, r4, lsl #16
  00124	e0233000	 eor         r3, r3, r0
  00128	e5853030	 str         r3, [r5, #0x30]

; 1106 : 
; 1107 :     return ERROR_SUCCESS;

  0012c	e3a00000	 mov         r0, #0
  00130	ea000000	 b           |$LN4@HwSetupStr|
  00134		 |$LN18@HwSetupStr|
  00134	e51b001c	 ldr         r0, [r11, #-0x1C]
  00138		 |$LN4@HwSetupStr|

; 1108 : }

  00138	e24bd018	 sub         sp, r11, #0x18
  0013c	e89d6870	 ldmia       sp, {r4 - r6, r11, sp, lr}
  00140	e12fff1e	 bx          lr

			 ENDP  ; |?HwSetupStreamDescriptor@CPinDevice@@AAAKK@Z|, CPinDevice::HwSetupStreamDescriptor

  00144		 |$LN7@HwSetupStr|
  00144		 |$LN20@HwSetupStr|

; 1094 :     __except( EXCEPTION_EXECUTE_HANDLER )

  00144	e52de004	 str         lr, [sp, #-4]!
  00148		 |$LN10@HwSetupStr|
  00148		 |$LN23@HwSetupStr|
  00148	e3a00001	 mov         r0, #1
  0014c		 |$LN9@HwSetupStr|
  0014c	e49df004	 ldr         pc, [sp], #4
  00150		 |$LN24@HwSetupStr|
  00150		 |$LN22@HwSetupStr|
	EXPORT	|??_GMarshalledBuffer_t@@QAAPAXI@Z|	; MarshalledBuffer_t::`scalar deleting destructor'
	IMPORT	|??3@YAXPAX@Z|				; operator delete

  00000			 AREA	 |.pdata|, PDATA
|$T35641| DCD	|$LN8@scalar|
	DCD	0x40000a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??_GMarshalledBuffer_t@@QAAPAXI@Z| PROC ; MarshalledBuffer_t::`scalar deleting destructor'
  00000		 |$LN8@scalar|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M35638|
  00004	e1a04001	 mov         r4, r1
  00008	e1a05000	 mov         r5, r0
  0000c	eb000000	 bl          |?Unmarshal@MarshalledBuffer_t@@QAAJXZ|
  00010	e3140001	 tst         r4, #1
  00014	11a00005	 movne       r0, r5
  00018	1b000000	 blne        |??3@YAXPAX@Z|
  0001c	e1a00005	 mov         r0, r5
  00020	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00024	e12fff1e	 bx          lr
  00028		 |$M35639|

			 ENDP  ; |??_GMarshalledBuffer_t@@QAAPAXI@Z|, MarshalledBuffer_t::`scalar deleting destructor'

	EXPORT	|??0MarshalledBuffer_t@@QAA@PAXKKHH@Z|	; MarshalledBuffer_t::MarshalledBuffer_t
; File c:\wince600\public\common\oak\inc\marshal.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T35657| DCD	|$LN7@Marshalled@3|
	DCD	0x40001002
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0MarshalledBuffer_t@@QAA@PAXKKHH@Z| PROC ; MarshalledBuffer_t::MarshalledBuffer_t

; 69   :     MarshalledBuffer_t(

  00000		 |$LN7@Marshalled@3|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M35654|
  00008	e1a05000	 mov         r5, r0

; 70   :         PVOID pSrcUnmarshalled,
; 71   :         DWORD cbSrc,
; 72   :         DWORD ArgumentDescriptor,
; 73   :         BOOL  ForceDuplicate = TRUE,
; 74   :         BOOL  Asynchronous = FALSE
; 75   :         )
; 76   :     {
; 77   :         Reset();
; 78   :         Marshal(pSrcUnmarshalled, cbSrc, ArgumentDescriptor, ForceDuplicate,
; 79   :                 Asynchronous);

  0000c	e59de01c	 ldr         lr, [sp, #0x1C]
  00010	e59d4018	 ldr         r4, [sp, #0x18]
  00014	e3a06000	 mov         r6, #0
  00018	e58de004	 str         lr, [sp, #4]
  0001c	e58d4000	 str         r4, [sp]
  00020	e5856004	 str         r6, [r5, #4]
  00024	e5856000	 str         r6, [r5]
  00028	e585600c	 str         r6, [r5, #0xC]
  0002c	eb000000	 bl          |?Marshal@MarshalledBuffer_t@@QAAJPAXKKHH@Z|

; 80   :     }

  00030	e1a00005	 mov         r0, r5
  00034	e28dd008	 add         sp, sp, #8
  00038	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$M35655|

			 ENDP  ; |??0MarshalledBuffer_t@@QAA@PAXKKHH@Z|, MarshalledBuffer_t::MarshalledBuffer_t

	EXPORT	|?PinHandleConnectionRequests@CPinDevice@@QAAKPAUCSIDENTIFIER@@PAEKPAK@Z| ; CPinDevice::PinHandleConnectionRequests
	EXPORT	|??_C@_1JG@EHCKKGGP@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAC?$AAS?$AAP?$AAR?$AAO?$AAP?$AAE?$AAR?$AAT?$AAY?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JM@HDEMJNKJ@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAC?$AAS?$AAP?$AAR?$AAO?$AAP?$AAE?$AAR?$AAT?$AAY?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@IANKIOOI@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAP?$AAi?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAC?$AAo@| [ DATA ] ; `string'
	IMPORT	|LocalFree|
; File c:\wince600\platform\evm_omap3530\src\drivers\camera\mdd\pindevice.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T35715| DCD	|$LN69@PinHandleC@4|
	DCD	0xc000b505

  00000			 AREA	 |.pdata|, PDATA
|$T35717| DCD	|$LN45@PinHandleC@4|
	DCD	0x40000502

  00000			 AREA	 |.pdata|, PDATA
|$T35719| DCD	|$LN52@PinHandleC@4|
	DCD	0x40000502

  00000			 AREA	 |.pdata|, PDATA
|$T35721| DCD	|$LN38@PinHandleC@4|
	DCD	0x40000a02

  00000			 AREA	 |.xdata|, DATA
|$T35713| DCD	0x3
	DCD	|$LN49@PinHandleC@4|
	DCD	|$LN50@PinHandleC@4|
	DCD	|$LN45@PinHandleC@4|
	DCD	|$LN46@PinHandleC@4|
	DCD	|$LN56@PinHandleC@4|
	DCD	|$LN57@PinHandleC@4|
	DCD	|$LN52@PinHandleC@4|
	DCD	|$LN53@PinHandleC@4|
	DCD	|$LN42@PinHandleC@4|
	DCD	|$LN43@PinHandleC@4|
	DCD	|$LN38@PinHandleC@4|
	DCD	|$LN39@PinHandleC@4|

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JG@EHCKKGGP@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAC?$AAS?$AAP?$AAR?$AAO?$AAP?$AAE?$AAR?$AAT?$AAY?$AA_@| DCB "P"
	DCB	0x0, "I", 0x0, "N", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "C", 0x0, "S", 0x0, "P", 0x0, "R"
	DCB	0x0, "O", 0x0, "P", 0x0, "E", 0x0, "R", 0x0, "T", 0x0, "Y"
	DCB	0x0, "_", 0x0, "C", 0x0, "O", 0x0, "N", 0x0, "N", 0x0, "E"
	DCB	0x0, "C", 0x0, "T", 0x0, "I", 0x0, "O", 0x0, "N", 0x0, "_"
	DCB	0x0, "D", 0x0, "A", 0x0, "T", 0x0, "A", 0x0, "F", 0x0, "O"
	DCB	0x0, "R", 0x0, "M", 0x0, "A", 0x0, "T", 0x0, ":", 0x0, " "
	DCB	0x0, "E", 0x0, "x", 0x0, "c", 0x0, "e", 0x0, "p", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "o", 0x0, "c"
	DCB	0x0, "c", 0x0, "u", 0x0, "r", 0x0, "e", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JM@HDEMJNKJ@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAC?$AAS?$AAP?$AAR?$AAO?$AAP?$AAE?$AAR?$AAT?$AAY?$AA_@| DCB "P"
	DCB	0x0, "I", 0x0, "N", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "C", 0x0, "S", 0x0, "P", 0x0, "R"
	DCB	0x0, "O", 0x0, "P", 0x0, "E", 0x0, "R", 0x0, "T", 0x0, "Y"
	DCB	0x0, "_", 0x0, "C", 0x0, "O", 0x0, "N", 0x0, "N", 0x0, "E"
	DCB	0x0, "C", 0x0, "T", 0x0, "I", 0x0, "O", 0x0, "N", 0x0, "_"
	DCB	0x0, "A", 0x0, "L", 0x0, "L", 0x0, "O", 0x0, "C", 0x0, "A"
	DCB	0x0, "T", 0x0, "O", 0x0, "R", 0x0, "F", 0x0, "R", 0x0, "A"
	DCB	0x0, "M", 0x0, "I", 0x0, "N", 0x0, "G", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e"
	DCB	0x0, "s", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@IANKIOOI@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAP?$AAi?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAC?$AAo@| DCB "P"
	DCB	0x0, "I", 0x0, "N", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "P", 0x0, "i", 0x0, "n", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "n", 0x0, "e", 0x0, "c", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, "R", 0x0, "e", 0x0, "q"
	DCB	0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__C_specific_handler|
  00004	00000000	 DCD         |$T35713|

  00008		 |?PinHandleConnectionRequests@CPinDevice@@QAAKPAUCSIDENTIFIER@@PAEKPAK@Z| PROC ; CPinDevice::PinHandleConnectionRequests

; 440  : {

  00008		 |$LN69@PinHandleC@4|
  00008	e1a0c00d	 mov         r12, sp
  0000c	e92d000f	 stmdb       sp!, {r0 - r3}
  00010	e92d5ff0	 stmdb       sp!, {r4 - r12, lr}
  00014	e28db028	 add         r11, sp, #0x28
  00018	e24dd02c	 sub         sp, sp, #0x2C
  0001c		 |$LN67@PinHandleC@4|
  0001c	e1a08003	 mov         r8, r3
  00020	e58b800c	 str         r8, [r11, #0xC]
  00024	e1a07002	 mov         r7, r2
  00028	e58b7008	 str         r7, [r11, #8]
  0002c	e1a0a001	 mov         r10, r1
  00030	e58ba004	 str         r10, [r11, #4]
  00034	e1a06000	 mov         r6, r0
  00038	e58b6000	 str         r6, [r11]

; 441  :     DEBUGMSG( ZONE_IOCTL, (_T("PIN_IOControl(%08x): PinHandleConnectionRequests\r\n"), this));

  0003c	e59f22d8	 ldr         r2, [pc, #0x2D8]
  00040	e592e440	 ldr         lr, [r2, #0x440]
  00044	e31e0010	 tst         lr, #0x10
  00048	0a000003	 beq         |$LN29@PinHandleC@4|
  0004c	e59f02d4	 ldr         r0, [pc, #0x2D4]
  00050	e1a01006	 mov         r1, r6
  00054	eb000000	 bl          NKDbgPrintfW
  00058	e59f22bc	 ldr         r2, [pc, #0x2BC]
  0005c		 |$LN29@PinHandleC@4|

; 442  :     
; 443  :     DWORD                           dwError                 = ERROR_INVALID_PARAMETER; 
; 444  :     PCSALLOCATOR_FRAMING            pCsAllocatorFraming     = NULL;
; 445  :     PCS_DATAFORMAT_VIDEOINFOHEADER  pCsDataFormatVidInfoHdr = NULL;
; 446  :     PCS_DATAFORMAT_VIDEOINFOHEADER  pCsDataFormatVidInfoHdrCopy = NULL;

  0005c	e3a03000	 mov         r3, #0
  00060	e3a04057	 mov         r4, #0x57
  00064	e50b3048	 str         r3, [r11, #-0x48]
  00068	e50b404c	 str         r4, [r11, #-0x4C]

; 447  :     
; 448  :     if ( NULL == pCsProp )

  0006c	e35a0000	 cmp         r10, #0
  00070	1a000001	 bne         |$LN26@PinHandleC@4|
  00074		 |$LN18@PinHandleC@4|

; 449  :     {
; 450  :         return dwError;

  00074	e3a05057	 mov         r5, #0x57
  00078	ea000093	 b           |$LN27@PinHandleC@4|
  0007c		 |$LN26@PinHandleC@4|
  0007c		 |$LN42@PinHandleC@4|

; 451  :     }
; 452  :     
; 453  :     __try
; 454  :     {
; 455  :         *pdwBytesTransferred = 0 ;

  0007c	e59b9010	 ldr         r9, [r11, #0x10]
  00080	e3a03000	 mov         r3, #0
  00084	e5893000	 str         r3, [r9]
  00088		 |$LN43@PinHandleC@4|

; 456  :     }

  00088	e51b5050	 ldr         r5, [r11, #-0x50]
  0008c	ea000009	 b           |$LN44@PinHandleC@4|
  00090		 |$LN39@PinHandleC@4|

; 458  :     {
; 459  :         return ERROR_INVALID_PARAMETER;

  00090	e3a05057	 mov         r5, #0x57
  00094	e50b5050	 str         r5, [r11, #-0x50]
  00098	e59f227c	 ldr         r2, [pc, #0x27C]
  0009c	e59b6000	 ldr         r6, [r11]
  000a0	e59b9010	 ldr         r9, [r11, #0x10]
  000a4	e59b800c	 ldr         r8, [r11, #0xC]
  000a8	e59b7008	 ldr         r7, [r11, #8]
  000ac	e59ba004	 ldr         r10, [r11, #4]
  000b0	e51b404c	 ldr         r4, [r11, #-0x4C]
  000b4	ea000084	 b           |$LN27@PinHandleC@4|
  000b8		 |$LN44@PinHandleC@4|

; 460  :     }
; 461  : 
; 462  :     // we support PROPSETID_Pin, so just return success
; 463  :     if ( CSPROPERTY_TYPE_SETSUPPORT == pCsProp->Flags )

  000b8	e59a1014	 ldr         r1, [r10, #0x14]
  000bc	e3510c01	 cmp         r1, #1, 24

; 464  :     {
; 465  :         return ERROR_SUCCESS;

  000c0	03a05000	 moveq       r5, #0

; 460  :     }
; 461  : 
; 462  :     // we support PROPSETID_Pin, so just return success
; 463  :     if ( CSPROPERTY_TYPE_SETSUPPORT == pCsProp->Flags )

  000c4	0a000080	 beq         |$LN27@PinHandleC@4|

; 466  :     }
; 467  : 
; 468  :     switch ( pCsProp->Id )

  000c8	e59a3010	 ldr         r3, [r10, #0x10]
  000cc	e3530000	 cmp         r3, #0
  000d0	0a000074	 beq         |$LN21@PinHandleC@4|
  000d4	e3530001	 cmp         r3, #1
  000d8	0a000046	 beq         |$LN20@PinHandleC@4|
  000dc	e3530002	 cmp         r3, #2
  000e0	0a000009	 beq         |$LN14@PinHandleC@4|
  000e4	e3530003	 cmp         r3, #3
  000e8	0a000074	 beq         |$LN36@PinHandleC@4|

; 565  :         }
; 566  :         
; 567  :         break ;
; 568  :     
; 569  :     case CSPROPERTY_CONNECTION_PROPOSEDATAFORMAT :
; 570  :         // I don't want to support dynamic format changes for this test driver
; 571  :         break ;
; 572  :     
; 573  :     default :
; 574  :         DEBUGMSG(ZONE_IOCTL|ZONE_ERROR, (_T("PIN_IOControl(%08x): Invalid Request\r\n"), this)) ;

  000ec	e5923440	 ldr         r3, [r2, #0x440]
  000f0	e3130011	 tst         r3, #0x11
  000f4	0a000071	 beq         |$LN36@PinHandleC@4|
  000f8	e59f0224	 ldr         r0, [pc, #0x224]
  000fc		 |$LN66@PinHandleC@4|
  000fc	e1a01006	 mov         r1, r6
  00100	eb000000	 bl          NKDbgPrintfW

; 575  : 
; 576  :     }
; 577  :     
; 578  :     return dwError ;

  00104	e1a05004	 mov         r5, r4
  00108	ea00006f	 b           |$LN27@PinHandleC@4|
  0010c		 |$LN14@PinHandleC@4|

; 507  :         break ;
; 508  :     
; 509  :     case CSPROPERTY_CONNECTION_ALLOCATORFRAMING:
; 510  :         switch ( pCsProp->Flags )

  0010c	e3510001	 cmp         r1, #1
  00110	0a000019	 beq         |$LN11@PinHandleC@4|
  00114	e3510002	 cmp         r1, #2
  00118	0a000006	 beq         |$LN7@PinHandleC@4|
  0011c	e3510c02	 cmp         r1, #2, 24
  00120	0a000015	 beq         |$LN11@PinHandleC@4|

; 561  :             break ;
; 562  :         
; 563  :         default :
; 564  :             DEBUGMSG(ZONE_IOCTL|ZONE_ERROR, (_T("PIN_IOControl(%08x): CSPROPERTY_CONNECTION_ALLOCATORFRAMING Invalid Request\r\n"), this)) ;

  00124	e5923440	 ldr         r3, [r2, #0x440]
  00128	e3130011	 tst         r3, #0x11
  0012c	0a000063	 beq         |$LN36@PinHandleC@4|
  00130	e59f01e8	 ldr         r0, [pc, #0x1E8]
  00134	eafffff0	 b           |$LN66@PinHandleC@4|
  00138		 |$LN7@PinHandleC@4|

; 543  :             break ;
; 544  :         
; 545  :         case CSPROPERTY_TYPE_SET:
; 546  :             
; 547  :             if( OutBufLen < sizeof( CSALLOCATOR_FRAMING ))

  00138	e3580018	 cmp         r8, #0x18
  0013c	2a000002	 bcs         |$LN6@PinHandleC@4|
  00140		 |$LN4@PinHandleC@4|

; 548  :             {
; 549  :                 dwError = ERROR_INVALID_PARAMETER;

  00140	e3a04057	 mov         r4, #0x57

; 575  : 
; 576  :     }
; 577  :     
; 578  :     return dwError ;

  00144	e1a05004	 mov         r5, r4
  00148	ea00005f	 b           |$LN27@PinHandleC@4|
  0014c		 |$LN6@PinHandleC@4|

; 550  :                 break;
; 551  :             }
; 552  : 
; 553  :             pCsAllocatorFraming = (PCSALLOCATOR_FRAMING) pOutBuf;
; 554  :             if(( m_CsState != CSSTATE_STOP ) || ( m_dwMemoryModel != pCsAllocatorFraming->RequirementsFlags ))

  0014c	e59635a0	 ldr         r3, [r6, #0x5A0]
  00150	e3530000	 cmp         r3, #0
  00154	1afffff9	 bne         |$LN4@PinHandleC@4|
  00158	e5962014	 ldr         r2, [r6, #0x14]
  0015c	e5973000	 ldr         r3, [r7]
  00160	e1520003	 cmp         r2, r3
  00164	1afffff5	 bne         |$LN4@PinHandleC@4|

; 555  :             {
; 556  :                 dwError = ERROR_INVALID_PARAMETER;
; 557  :                 break;
; 558  :             }
; 559  :             m_ulMaxNumOfBuffers = pCsAllocatorFraming->Frames ;

  00168	e5973008	 ldr         r3, [r7, #8]

; 560  :             dwError = ERROR_SUCCESS;

  0016c	e3a04000	 mov         r4, #0
  00170	e586301c	 str         r3, [r6, #0x1C]

; 575  : 
; 576  :     }
; 577  :     
; 578  :     return dwError ;

  00174	e1a05004	 mov         r5, r4
  00178	ea000053	 b           |$LN27@PinHandleC@4|
  0017c		 |$LN11@PinHandleC@4|

; 511  :         {
; 512  :         case CSPROPERTY_TYPE_GET:
; 513  :         case CSPROPERTY_TYPE_BASICSUPPORT:
; 514  :             CSALLOCATOR_FRAMING csAllocatorFraming;
; 515  :             
; 516  :             if(( OutBufLen < sizeof( CSALLOCATOR_FRAMING )) || ( pOutBuf == NULL ))

  0017c	e3580018	 cmp         r8, #0x18
  00180	3a000019	 bcc         |$LN9@PinHandleC@4|
  00184	e3570000	 cmp         r7, #0
  00188	0a000017	 beq         |$LN9@PinHandleC@4|

; 519  :                 break;
; 520  :             }
; 521  : 
; 522  :             {
; 523  :                 csAllocatorFraming.RequirementsFlags = m_dwMemoryModel;

  0018c	e5963014	 ldr         r3, [r6, #0x14]

; 524  :                 csAllocatorFraming.PoolType          = PagedPool;
; 525  :                 csAllocatorFraming.Frames            = m_ulMaxNumOfBuffers;

  00190	e596201c	 ldr         r2, [r6, #0x1C]

; 526  :                 csAllocatorFraming.FrameSize         = m_CsDataRangeVideo.VideoInfoHeader.bmiHeader.biSizeImage;

  00194	e596117c	 ldr         r1, [r6, #0x17C]
  00198	e3a00001	 mov         r0, #1

; 527  :                 csAllocatorFraming.FileAlignment     = FILE_BYTE_ALIGNMENT;

  0019c	e3a0e000	 mov         lr, #0

; 528  :                 csAllocatorFraming.Reserved          = 0;

  001a0	e3a05000	 mov         r5, #0
  001a4	e50b3040	 str         r3, [r11, #-0x40]
  001a8	e50b2038	 str         r2, [r11, #-0x38]
  001ac	e50b1034	 str         r1, [r11, #-0x34]
  001b0	e50b003c	 str         r0, [r11, #-0x3C]
  001b4	e50be030	 str         lr, [r11, #-0x30]
  001b8	e50b502c	 str         r5, [r11, #-0x2C]
  001bc		 |$LN56@PinHandleC@4|

; 529  :             }
; 530  :             
; 531  :             __try
; 532  :             {
; 533  :                 memcpy( pOutBuf, &csAllocatorFraming, sizeof( CSALLOCATOR_FRAMING ));

  001bc	e24b1040	 sub         r1, r11, #0x40
  001c0	e3a02018	 mov         r2, #0x18
  001c4	e1a00007	 mov         r0, r7
  001c8	eb000000	 bl          memcpy

; 534  :                 *pdwBytesTransferred = sizeof( CSALLOCATOR_FRAMING );

  001cc	e3a03018	 mov         r3, #0x18
  001d0	e5893000	 str         r3, [r9]
  001d4		 |$LN57@PinHandleC@4|

; 535  :             }

  001d4	ea000001	 b           |$LN58@PinHandleC@4|
  001d8		 |$LN53@PinHandleC@4|

; 537  :             {
; 538  :                 dwError = ERROR_INVALID_PARAMETER;

  001d8	e3a04057	 mov         r4, #0x57

; 539  :                 break;

  001dc	ea000037	 b           |$LN36@PinHandleC@4|
  001e0		 |$LN58@PinHandleC@4|

; 540  :             }
; 541  : 
; 542  :             dwError = ERROR_SUCCESS;

  001e0	e3a04000	 mov         r4, #0

; 575  : 
; 576  :     }
; 577  :     
; 578  :     return dwError ;

  001e4	e1a05004	 mov         r5, r4
  001e8	ea000037	 b           |$LN27@PinHandleC@4|
  001ec		 |$LN9@PinHandleC@4|

; 517  :             {
; 518  :                 dwError = ERROR_MORE_DATA;

  001ec	e3a040ea	 mov         r4, #0xEA

; 575  : 
; 576  :     }
; 577  :     
; 578  :     return dwError ;

  001f0	e1a05004	 mov         r5, r4
  001f4	ea000034	 b           |$LN27@PinHandleC@4|
  001f8		 |$LN20@PinHandleC@4|

; 472  :         break ;
; 473  : 
; 474  :     case CSPROPERTY_CONNECTION_DATAFORMAT:
; 475  :         
; 476  :         pCsDataFormatVidInfoHdr = (PCS_DATAFORMAT_VIDEOINFOHEADER) pOutBuf;  
; 477  :         DWORD dwStructSize;
; 478  :         if(( OutBufLen < sizeof( PCS_DATAFORMAT_VIDEOINFOHEADER )) || ( pOutBuf == NULL ))

  001f8	e3580004	 cmp         r8, #4
  001fc	3affff9c	 bcc         |$LN18@PinHandleC@4|
  00200	e3570000	 cmp         r7, #0
  00204	0affff9a	 beq         |$LN18@PinHandleC@4|
  00208		 |$LN49@PinHandleC@4|

; 479  :         {
; 480  :             return dwError;
; 481  :         }
; 482  :             
; 483  :         // The video info header can be modified by the caller while it's being accessed in the subroutine.
; 484  :         // The Subroutine needs to make a copy of the video info header before accessing it.
; 485  : 
; 486  :         __try
; 487  :         {
; 488  :             dwStructSize = sizeof( CS_DATAFORMAT_VIDEOINFOHEADER ) + pCsDataFormatVidInfoHdr->VideoInfoHeader.bmiHeader.biSize - sizeof( CS_BITMAPINFOHEADER );

  00208	e5973070	 ldr         r3, [r7, #0x70]
  0020c	e50b3044	 str         r3, [r11, #-0x44]

; 489  :             pCsDataFormatVidInfoHdrCopy = (PCS_DATAFORMAT_VIDEOINFOHEADER) LocalAlloc( LMEM_ZEROINIT, dwStructSize );

  00210	e3a00040	 mov         r0, #0x40
  00214	e2831d12	 add         r1, r3, #0x12, 26
  00218	eb000000	 bl          LocalAlloc
  0021c	e1b08000	 movs        r8, r0
  00220	e50b8048	 str         r8, [r11, #-0x48]

; 490  :             if( pCsDataFormatVidInfoHdrCopy == NULL )

  00224	1a000002	 bne         |$LN16@PinHandleC@4|

; 491  :             {
; 492  :                 return ERROR_INVALID_PARAMETER;

  00228	e3a05057	 mov         r5, #0x57
  0022c	e50b5050	 str         r5, [r11, #-0x50]
  00230	ea000025	 b           |$LN27@PinHandleC@4|
  00234		 |$LN16@PinHandleC@4|

; 493  :             }
; 494  : 
; 495  :             if( CeSafeCopyMemory( pCsDataFormatVidInfoHdrCopy, pCsDataFormatVidInfoHdr, dwStructSize ))

  00234	e51b3044	 ldr         r3, [r11, #-0x44]
  00238	e2832d12	 add         r2, r3, #0x12, 26
  0023c	e1a01007	 mov         r1, r7
  00240	e1a00008	 mov         r0, r8
  00244	eb000000	 bl          CeSafeCopyMemory
  00248	e3500000	 cmp         r0, #0
  0024c	0a000006	 beq         |$LN50@PinHandleC@4|

; 496  :             {  
; 497  :                 dwError = PinHandleConnDataFormatSubReqs( pCsProp->Flags, pCsDataFormatVidInfoHdrCopy, pdwBytesTransferred ) ;

  00250	e59a1014	 ldr         r1, [r10, #0x14]
  00254	e1a03009	 mov         r3, r9
  00258	e1a02008	 mov         r2, r8
  0025c	e1a00006	 mov         r0, r6
  00260	eb000000	 bl          |?PinHandleConnDataFormatSubReqs@CPinDevice@@AAAKKPAUtagCS_DATAFORMAT_VIDEOINFOHEADER@@PAK@Z|
  00264	e1a04000	 mov         r4, r0
  00268	e50b404c	 str         r4, [r11, #-0x4C]
  0026c		 |$LN50@PinHandleC@4|

; 498  :             }
; 499  :         }

  0026c	ea000009	 b           |$LN51@PinHandleC@4|
  00270		 |$LN46@PinHandleC@4|

; 501  :         {
; 502  :             dwError = ERROR_INVALID_PARAMETER;
; 503  :             DEBUGMSG(ZONE_IOCTL|ZONE_ERROR, (_T("PIN_IOControl(%08x): CSPROPERTY_CONNECTION_DATAFORMAT: Exception occured\r\n"), this)) ;

  00270	e59f30a4	 ldr         r3, [pc, #0xA4]
  00274	e3a04057	 mov         r4, #0x57
  00278	e50b404c	 str         r4, [r11, #-0x4C]
  0027c	e5933440	 ldr         r3, [r3, #0x440]
  00280	e3130011	 tst         r3, #0x11
  00284	159b1000	 ldrne       r1, [r11]
  00288	159f0088	 ldrne       r0, [pc, #0x88]
  0028c	1b000000	 blne        NKDbgPrintfW
  00290	e51b8048	 ldr         r8, [r11, #-0x48]
  00294	e51b5050	 ldr         r5, [r11, #-0x50]
  00298		 |$LN51@PinHandleC@4|

; 504  :         }
; 505  : 
; 506  :         LocalFree( pCsDataFormatVidInfoHdrCopy );

  00298	e1a00008	 mov         r0, r8
  0029c	eb000000	 bl          LocalFree

; 575  : 
; 576  :     }
; 577  :     
; 578  :     return dwError ;

  002a0	e1a05004	 mov         r5, r4
  002a4	ea000008	 b           |$LN27@PinHandleC@4|
  002a8		 |$LN21@PinHandleC@4|

; 469  :     {
; 470  :     case CSPROPERTY_CONNECTION_STATE:
; 471  :         dwError = PinHandleConnStateSubReqs( pCsProp->Flags, pOutBuf, OutBufLen, pdwBytesTransferred ) ;

  002a8	e1a03008	 mov         r3, r8
  002ac	e1a02007	 mov         r2, r7
  002b0	e1a00006	 mov         r0, r6
  002b4	e58d9000	 str         r9, [sp]
  002b8	eb000000	 bl          |?PinHandleConnStateSubReqs@CPinDevice@@AAAKKPAEKPAK@Z|
  002bc	e1a04000	 mov         r4, r0
  002c0		 |$LN36@PinHandleC@4|

; 575  : 
; 576  :     }
; 577  :     
; 578  :     return dwError ;

  002c0	e1a05004	 mov         r5, r4
  002c4	ea000000	 b           |$LN27@PinHandleC@4|
  002c8		 |$LN65@PinHandleC@4|
  002c8	e51b5050	 ldr         r5, [r11, #-0x50]
  002cc		 |$LN27@PinHandleC@4|

; 579  : }

  002cc	e1a00005	 mov         r0, r5
  002d0	e24bd028	 sub         sp, r11, #0x28
  002d4	e89d6ff0	 ldmia       sp, {r4 - r11, sp, lr}
  002d8	e12fff1e	 bx          lr

			 ENDP  ; |?PinHandleConnectionRequests@CPinDevice@@QAAKPAUCSIDENTIFIER@@PAEKPAK@Z|, CPinDevice::PinHandleConnectionRequests

  002dc		 |$LN45@PinHandleC@4|
  002dc		 |$LN68@PinHandleC@4|

; 500  :         __except( EXCEPTION_EXECUTE_HANDLER )

  002dc	e52de004	 str         lr, [sp, #-4]!
  002e0	e24dd004	 sub         sp, sp, #4
  002e4		 |$LN48@PinHandleC@4|
  002e4		 |$LN73@PinHandleC@4|
  002e4	e3a00001	 mov         r0, #1
  002e8		 |$LN47@PinHandleC@4|
  002e8	e28dd004	 add         sp, sp, #4
  002ec	e49df004	 ldr         pc, [sp], #4
  002f0		 |$LN74@PinHandleC@4|
  002f0		 |$LN52@PinHandleC@4|
  002f0		 |$LN70@PinHandleC@4|

; 536  :             __except( EXCEPTION_EXECUTE_HANDLER )

  002f0	e52de004	 str         lr, [sp, #-4]!
  002f4	e24dd004	 sub         sp, sp, #4
  002f8		 |$LN55@PinHandleC@4|
  002f8		 |$LN75@PinHandleC@4|
  002f8	e3a00001	 mov         r0, #1
  002fc		 |$LN54@PinHandleC@4|
  002fc	e28dd004	 add         sp, sp, #4
  00300	e49df004	 ldr         pc, [sp], #4
  00304		 |$LN76@PinHandleC@4|
  00304		 |$LN38@PinHandleC@4|
  00304		 |$LN71@PinHandleC@4|

; 457  :     __except( EXCEPTION_EXECUTE_HANDLER )

  00304	e52de004	 str         lr, [sp, #-4]!
  00308	e24dd004	 sub         sp, sp, #4
  0030c		 |$LN41@PinHandleC@4|
  0030c		 |$LN77@PinHandleC@4|
  0030c	e3a00001	 mov         r0, #1
  00310		 |$LN40@PinHandleC@4|
  00310	e28dd004	 add         sp, sp, #4
  00314	e49df004	 ldr         pc, [sp], #4
  00318		 |$LN79@PinHandleC@4|
  00318		 |$LN80@PinHandleC@4|
  00318	00000000	 DCD         |??_C@_1JG@EHCKKGGP@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAC?$AAS?$AAP?$AAR?$AAO?$AAP?$AAE?$AAR?$AAT?$AAY?$AA_@|
  0031c		 |$LN81@PinHandleC@4|
  0031c	00000000	 DCD         |dpCurSettings|
  00320		 |$LN82@PinHandleC@4|
  00320	00000000	 DCD         |??_C@_1JM@HDEMJNKJ@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAC?$AAS?$AAP?$AAR?$AAO?$AAP?$AAE?$AAR?$AAT?$AAY?$AA_@|
  00324		 |$LN83@PinHandleC@4|
  00324	00000000	 DCD         |??_C@_1EO@HBLJJDEA@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAR?$AAe?$AAq@|
  00328		 |$LN84@PinHandleC@4|
  00328	00000000	 DCD         |??_C@_1GG@IANKIOOI@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAP?$AAi?$AAn?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAC?$AAo@|
  0032c		 |$LN78@PinHandleC@4|
  0032c		 |$LN72@PinHandleC@4|
	EXPORT	|?AllocateBuffer@CPinDevice@@AAAKPAU_tagStreamDescriptor@@PAXKPAK@Z| ; CPinDevice::AllocateBuffer
; File c:\wince600\public\common\oak\inc\marshal.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T35784| DCD	|$LN55@AllocateBu|
	DCD	0x40009f02
; Function compile flags: /Ogspy
; File c:\wince600\platform\evm_omap3530\src\drivers\camera\mdd\pindevice.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AllocateBuffer@CPinDevice@@AAAKPAU_tagStreamDescriptor@@PAXKPAK@Z| PROC ; CPinDevice::AllocateBuffer

; 830  : {

  00000		 |$LN55@AllocateBu|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004	e24dd01c	 sub         sp, sp, #0x1C
  00008		 |$M35781|
  00008	e1a07003	 mov         r7, r3
  0000c	e1a06002	 mov         r6, r2
  00010	e1a04000	 mov         r4, r0

; 831  :     DWORD                   dwError = ERROR_INVALID_PARAMETER;
; 832  :     PCS_STREAM_DESCRIPTOR   pCsDescriptorOut = (PCS_STREAM_DESCRIPTOR) pOutBuf;
; 833  : 
; 834  :     MarshalledBuffer_t MarshalledStreamDesc(pCsDescriptor, sizeof(CS_STREAM_DESCRIPTOR), ARG_O_PTR, FALSE, TRUE);

  00014	e3a03000	 mov         r3, #0
  00018	e3a02000	 mov         r2, #0
  0001c	e3a00000	 mov         r0, #0
  00020	e58d300c	 str         r3, [sp, #0xC]
  00024	e58d2008	 str         r2, [sp, #8]
  00028	e58d0014	 str         r0, [sp, #0x14]
  0002c	e3a09001	 mov         r9, #1
  00030	e3a0a000	 mov         r10, #0
  00034	e3a03008	 mov         r3, #8
  00038	e3a02078	 mov         r2, #0x78
  0003c	e28d0008	 add         r0, sp, #8
  00040	e3a05057	 mov         r5, #0x57
  00044	e58d9004	 str         r9, [sp, #4]
  00048	e58da000	 str         r10, [sp]
  0004c	eb000000	 bl          |?Marshal@MarshalledBuffer_t@@QAAJPAXKKHH@Z|

; 835  :     pCsDescriptor = reinterpret_cast<PCS_STREAM_DESCRIPTOR>( MarshalledStreamDesc.ptr() );

  00050	e59d8008	 ldr         r8, [sp, #8]
  00054	e3580000	 cmp         r8, #0
  00058	059d800c	 ldreq       r8, [sp, #0xC]

; 836  : 
; 837  :     if( NULL == pCsDescriptor )

  0005c	03580000	 cmpeq       r8, #0
  00060	03a05057	 moveq       r5, #0x57
  00064	0a00007e	 beq         |$LN49@AllocateBu|

; 838  :     {
; 839  :         return dwError;
; 840  :     }
; 841  : 
; 842  :     // There are 2 cases here: the buffer comes from the hardware or from the software. 
; 843  :     // If the buffer comes from the software, we generate a new entry in the table up to the maximum allowed.
; 844  :     // If the buffer comes from the hardware, we setup the application stream descriptor
; 845  : 
; 846  :     EnterCriticalSection( &m_csStreamBuffer );

  00068	e2840034	 add         r0, r4, #0x34
  0006c	eb000000	 bl          EnterCriticalSection

; 847  : 
; 848  :     //Check the BufferCount after the critical section is entered.
; 849  :     //This prevents synch issues with validating the BufferCount
; 850  :     if( m_dwBufferCount >= m_ulMaxNumOfBuffers )

  00070	e5942018	 ldr         r2, [r4, #0x18]
  00074	e594101c	 ldr         r1, [r4, #0x1C]
  00078	e1520001	 cmp         r2, r1
  0007c	3a000001	 bcc         |$LN31@AllocateBu|
  00080		 |$LN52@AllocateBu|

; 851  :     {
; 852  :         dwError = ERROR_INVALID_PARAMETER;

  00080	e3a05057	 mov         r5, #0x57

; 853  :         goto Cleanup;

  00084	ea000074	 b           |$Cleanup$34746|
  00088		 |$LN31@AllocateBu|

; 854  :     }
; 855  : 
; 856  :     if( m_dwMemoryModel == CSPROPERTY_BUFFER_DRIVER )

  00088	e5943014	 ldr         r3, [r4, #0x14]
  0008c	e3530001	 cmp         r3, #1
  00090	1a000024	 bne         |$LN29@AllocateBu|

; 857  :     {
; 858  :         if( NULL == pOutBuf || OutBufLen < sizeof(CS_STREAM_DESCRIPTOR) )

  00094	e3560000	 cmp         r6, #0
  00098	0a00006f	 beq         |$Cleanup$34746|
  0009c	e3570078	 cmp         r7, #0x78
  000a0	3a00006d	 bcc         |$Cleanup$34746|

; 859  :         {
; 860  :             goto Cleanup;
; 861  :         }
; 862  :         // pOutBuf has already been validated through MapCallerPtr in the IOCTL function
; 863  :         if( pCsDescriptorOut == NULL )
; 864  :         {
; 865  :             goto Cleanup;
; 866  :         }
; 867  : 
; 868  :         // Get one of the hardware buffers, and setup the descriptor
; 869  :         ASSERT( m_pStreamDescriptorList[ m_dwBufferCount ].m_fBusy == FALSE );
; 870  : 
; 871  :         dwError = HwSetupStreamDescriptor( m_dwBufferCount );

  000a4	e1a01002	 mov         r1, r2
  000a8	e1a00004	 mov         r0, r4
  000ac	eb000000	 bl          |?HwSetupStreamDescriptor@CPinDevice@@AAAKK@Z|
  000b0	e1b05000	 movs        r5, r0

; 872  :         if( dwError != ERROR_SUCCESS )

  000b4	1a000068	 bne         |$Cleanup$34746|

; 873  :         {
; 874  :             goto Cleanup;
; 875  :         }
; 876  :             
; 877  :         if( !CeSafeCopyMemory( pCsDescriptorOut, &(m_pStreamDescriptorList[ m_dwBufferCount ].csStreamDescriptorShadow), sizeof( CS_STREAM_DESCRIPTOR )))

  000b8	e5943018	 ldr         r3, [r4, #0x18]
  000bc	e5941060	 ldr         r1, [r4, #0x60]
  000c0	e3a02078	 mov         r2, #0x78
  000c4	e0833183	 add         r3, r3, r3, lsl #3
  000c8	e0813203	 add         r3, r1, r3, lsl #4
  000cc	e2831008	 add         r1, r3, #8
  000d0	e1a00006	 mov         r0, r6
  000d4	eb000000	 bl          CeSafeCopyMemory
  000d8	e3500000	 cmp         r0, #0

; 878  :         {
; 879  :             dwError = ERROR_INVALID_PARAMETER;
; 880  :             goto Cleanup;

  000dc	0affffe7	 beq         |$LN52@AllocateBu|

; 881  :         }
; 882  : 
; 883  :         m_pStreamDescriptorList[ m_dwBufferCount ].pCsStreamDescriptorExternal = NULL;

  000e0	e5943018	 ldr         r3, [r4, #0x18]
  000e4	e5942060	 ldr         r2, [r4, #0x60]

; 884  :         m_pStreamDescriptorList[ m_dwBufferCount ].m_fBusy = TRUE;
; 885  :         m_dwBufferCount++;
; 886  :         if( pdwBytesTransferred )

  000e8	e59d103c	 ldr         r1, [sp, #0x3C]
  000ec	e0833183	 add         r3, r3, r3, lsl #3
  000f0	e782a203	 str         r10, [r2, +r3, lsl #4]
  000f4	e5943018	 ldr         r3, [r4, #0x18]
  000f8	e5942060	 ldr         r2, [r4, #0x60]
  000fc	e3510000	 cmp         r1, #0
  00100	e0833183	 add         r3, r3, r3, lsl #3
  00104	e0823203	 add         r3, r2, r3, lsl #4
  00108	e5839080	 str         r9, [r3, #0x80]
  0010c	e5943018	 ldr         r3, [r4, #0x18]
  00110	e2833001	 add         r3, r3, #1
  00114	e5843018	 str         r3, [r4, #0x18]
  00118	0a00004f	 beq         |$Cleanup$34746|

; 887  :         {
; 888  :             *pdwBytesTransferred = sizeof(CS_STREAM_DESCRIPTOR);

  0011c	e3a03078	 mov         r3, #0x78
  00120	e5813000	 str         r3, [r1]

; 889  :         }
; 890  :     }

  00124	ea00004c	 b           |$Cleanup$34746|
  00128		 |$LN29@AllocateBu|

; 891  :     else if( m_dwMemoryModel == CSPROPERTY_BUFFER_CLIENT_LIMITED )

  00128	e3530002	 cmp         r3, #2
  0012c	1a00001b	 bne         |$LN17@AllocateBu|

; 892  :     {
; 893  :         // The software is allocated by the software, let's copy the descriptor and generate a handle
; 894  :         ASSERT( m_pStreamDescriptorList[ m_dwBufferCount ].m_fBusy == FALSE );
; 895  : 
; 896  :         if( !CeSafeCopyMemory( &( m_pStreamDescriptorList[ m_dwBufferCount ].csStreamDescriptorShadow ), pCsDescriptor, sizeof( CS_STREAM_DESCRIPTOR )))

  00130	e5941060	 ldr         r1, [r4, #0x60]
  00134	e0823182	 add         r3, r2, r2, lsl #3
  00138	e3a02078	 mov         r2, #0x78
  0013c	e0813203	 add         r3, r1, r3, lsl #4
  00140	e2830008	 add         r0, r3, #8
  00144	e1a01008	 mov         r1, r8
  00148	eb000000	 bl          CeSafeCopyMemory
  0014c	e3500000	 cmp         r0, #0

; 897  :         {
; 898  :             dwError = ERROR_INVALID_PARAMETER;
; 899  :             goto Cleanup;

  00150	0affffca	 beq         |$LN52@AllocateBu|

; 900  :         }
; 901  : 
; 902  :         // Let's populate the handle and the buffer field.
; 903  :         dwError = SwSetupStreamDescriptor( m_dwBufferCount, &( m_pStreamDescriptorList[ m_dwBufferCount ].csStreamDescriptorShadow ), pCsDescriptor );

  00154	e5941018	 ldr         r1, [r4, #0x18]
  00158	e5940060	 ldr         r0, [r4, #0x60]
  0015c	e1a03008	 mov         r3, r8
  00160	e0812181	 add         r2, r1, r1, lsl #3
  00164	e0802202	 add         r2, r0, r2, lsl #4
  00168	e2822008	 add         r2, r2, #8
  0016c	e1a00004	 mov         r0, r4
  00170	eb000000	 bl          |?SwSetupStreamDescriptor@CPinDevice@@AAAKKPAU_tagStreamDescriptor@@PAX@Z|
  00174	e1b05000	 movs        r5, r0

; 904  :         if( dwError != ERROR_SUCCESS )

  00178	1a000037	 bne         |$Cleanup$34746|

; 905  :         {
; 906  :             goto Cleanup;
; 907  :         }
; 908  : 
; 909  :         m_pStreamDescriptorList[ m_dwBufferCount ].pCsStreamDescriptorExternal = NULL;

  0017c	e5943018	 ldr         r3, [r4, #0x18]
  00180	e5942060	 ldr         r2, [r4, #0x60]
  00184	e0833183	 add         r3, r3, r3, lsl #3
  00188	e782a203	 str         r10, [r2, +r3, lsl #4]

; 910  :         m_pStreamDescriptorList[ m_dwBufferCount ].m_fBusy = TRUE;

  0018c	e5943018	 ldr         r3, [r4, #0x18]
  00190	e5942060	 ldr         r2, [r4, #0x60]
  00194	e0833183	 add         r3, r3, r3, lsl #3
  00198	e0823203	 add         r3, r2, r3, lsl #4

; 911  :         m_dwBufferCount++;

  0019c	ea00002a	 b           |$LN51@AllocateBu|
  001a0		 |$LN17@AllocateBu|

; 912  :     }
; 913  :     else if( m_dwMemoryModel == CSPROPERTY_BUFFER_CLIENT_UNLIMITED )

  001a0	e3530004	 cmp         r3, #4
  001a4	1a00002c	 bne         |$Cleanup$34746|

; 914  :     {
; 915  :         // let's find a slot available
; 916  :         DWORD dwAvailableRow = (DWORD)-1;

  001a8	e3e06000	 mvn         r6, #0

; 917  :         for( DWORD i = 0; ( i < m_ulMaxNumOfBuffers ) && ( dwAvailableRow == -1 ); i++ )

  001ac	e3a02000	 mov         r2, #0
  001b0	e3510000	 cmp         r1, #0
  001b4	0a000028	 beq         |$Cleanup$34746|

; 914  :     {
; 915  :         // let's find a slot available
; 916  :         DWORD dwAvailableRow = (DWORD)-1;

  001b8	e3a01000	 mov         r1, #0
  001bc		 |$LL10@AllocateBu|

; 917  :         for( DWORD i = 0; ( i < m_ulMaxNumOfBuffers ) && ( dwAvailableRow == -1 ); i++ )

  001bc	e3760001	 cmn         r6, #1
  001c0	1a00000b	 bne         |$LN48@AllocateBu|

; 918  :         {
; 919  :             if( m_pStreamDescriptorList[ i ].m_fBusy == FALSE )

  001c4	e5943060	 ldr         r3, [r4, #0x60]
  001c8	e0813003	 add         r3, r1, r3
  001cc	e5933080	 ldr         r3, [r3, #0x80]
  001d0	e2811090	 add         r1, r1, #0x90
  001d4	e3530000	 cmp         r3, #0
  001d8	e594301c	 ldr         r3, [r4, #0x1C]

; 920  :             {
; 921  :                 dwAvailableRow = i;

  001dc	01a06002	 moveq       r6, r2
  001e0	e2822001	 add         r2, r2, #1
  001e4	e1520003	 cmp         r2, r3
  001e8	3afffff3	 bcc         |$LL10@AllocateBu|

; 922  :             }
; 923  :         }
; 924  :         if( dwAvailableRow == -1 )

  001ec	e3760001	 cmn         r6, #1
  001f0	0a000019	 beq         |$Cleanup$34746|
  001f4		 |$LN48@AllocateBu|

; 925  :         {
; 926  :             goto Cleanup;
; 927  :         }
; 928  : 
; 929  :         if( !CeSafeCopyMemory( &( m_pStreamDescriptorList[ dwAvailableRow ].csStreamDescriptorShadow ), pCsDescriptor, sizeof( CS_STREAM_DESCRIPTOR )))

  001f4	e5943060	 ldr         r3, [r4, #0x60]
  001f8	e0867186	 add         r7, r6, r6, lsl #3
  001fc	e3a02078	 mov         r2, #0x78
  00200	e0833207	 add         r3, r3, r7, lsl #4
  00204	e2830008	 add         r0, r3, #8
  00208	e1a01008	 mov         r1, r8
  0020c	eb000000	 bl          CeSafeCopyMemory
  00210	e3500000	 cmp         r0, #0

; 930  :         {
; 931  :             dwError = ERROR_INVALID_PARAMETER;
; 932  :             goto Cleanup;

  00214	0affff99	 beq         |$LN52@AllocateBu|

; 933  :         }
; 934  : 
; 935  :         dwError = SwSetupStreamDescriptor( dwAvailableRow, &( m_pStreamDescriptorList[ dwAvailableRow ].csStreamDescriptorShadow ), pCsDescriptor );

  00218	e5942060	 ldr         r2, [r4, #0x60]
  0021c	e1a03008	 mov         r3, r8
  00220	e1a01006	 mov         r1, r6
  00224	e0822207	 add         r2, r2, r7, lsl #4
  00228	e2822008	 add         r2, r2, #8
  0022c	e1a00004	 mov         r0, r4
  00230	eb000000	 bl          |?SwSetupStreamDescriptor@CPinDevice@@AAAKKPAU_tagStreamDescriptor@@PAX@Z|
  00234	e1b05000	 movs        r5, r0

; 936  :         if( dwError != ERROR_SUCCESS )

  00238	1a000007	 bne         |$Cleanup$34746|

; 937  :         {
; 938  :             goto Cleanup;
; 939  :         }
; 940  : 
; 941  :         m_pStreamDescriptorList[ dwAvailableRow ].pCsStreamDescriptorExternal = NULL;

  0023c	e5943060	 ldr         r3, [r4, #0x60]
  00240	e783a207	 str         r10, [r3, +r7, lsl #4]

; 942  :         m_pStreamDescriptorList[ dwAvailableRow ].m_fBusy = TRUE;

  00244	e5943060	 ldr         r3, [r4, #0x60]
  00248	e0833207	 add         r3, r3, r7, lsl #4
  0024c		 |$LN51@AllocateBu|
  0024c	e5839080	 str         r9, [r3, #0x80]

; 943  :         m_dwBufferCount++;

  00250	e5943018	 ldr         r3, [r4, #0x18]
  00254	e2833001	 add         r3, r3, #1
  00258	e5843018	 str         r3, [r4, #0x18]
  0025c		 |$Cleanup$34746|

; 944  :     }
; 945  : 
; 946  : Cleanup:
; 947  :     LeaveCriticalSection( &m_csStreamBuffer );

  0025c	e2840034	 add         r0, r4, #0x34
  00260	eb000000	 bl          LeaveCriticalSection
  00264		 |$LN49@AllocateBu|
  00264	e28d0008	 add         r0, sp, #8
  00268	eb000000	 bl          |?Unmarshal@MarshalledBuffer_t@@QAAJXZ|

; 948  :     return dwError;
; 949  : }

  0026c	e1a00005	 mov         r0, r5
  00270	e28dd01c	 add         sp, sp, #0x1C
  00274	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  00278	e12fff1e	 bx          lr
  0027c		 |$M35782|

			 ENDP  ; |?AllocateBuffer@CPinDevice@@AAAKPAU_tagStreamDescriptor@@PAXKPAK@Z|, CPinDevice::AllocateBuffer

	EXPORT	|?DeallocateBuffer@CPinDevice@@AAAKPAU_tagStreamDescriptor@@@Z| ; CPinDevice::DeallocateBuffer
	IMPORT	|?PDDUnRegisterClientBuffer@CCameraDevice@@QAAKKPAX@Z| ; CCameraDevice::PDDUnRegisterClientBuffer
	IMPORT	|?PDDDeAllocatePinBuffer@CCameraDevice@@QAAKKPAX@Z| ; CCameraDevice::PDDDeAllocatePinBuffer
; File c:\wince600\public\common\oak\inc\marshal.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T35827| DCD	|$LN30@Deallocate|
	DCD	0x40004902
; Function compile flags: /Ogspy
; File c:\wince600\platform\evm_omap3530\src\drivers\camera\mdd\pindevice.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DeallocateBuffer@CPinDevice@@AAAKPAU_tagStreamDescriptor@@@Z| PROC ; CPinDevice::DeallocateBuffer

; 954  : {

  00000		 |$LN30@Deallocate|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004	e24dd01c	 sub         sp, sp, #0x1C
  00008		 |$M35824|
  00008	e1a04000	 mov         r4, r0

; 955  :     LPVOID  lpBuffer;
; 956  :     DWORD   dwHandle;
; 957  :     LONG    lIndex;
; 958  :     DWORD   dwError = ERROR_SUCCESS;    
; 959  : 
; 960  :     MarshalledBuffer_t MarshalledStreamDesc(pCsDescriptor, sizeof(CS_STREAM_DESCRIPTOR), ARG_O_PTR, FALSE, TRUE);

  0000c	e3a03000	 mov         r3, #0
  00010	e3a02000	 mov         r2, #0
  00014	e3a00000	 mov         r0, #0
  00018	e58d300c	 str         r3, [sp, #0xC]
  0001c	e58d2008	 str         r2, [sp, #8]
  00020	e58d0014	 str         r0, [sp, #0x14]
  00024	e3a0e001	 mov         lr, #1
  00028	e3a07000	 mov         r7, #0
  0002c	e3a03008	 mov         r3, #8
  00030	e3a02078	 mov         r2, #0x78
  00034	e28d0008	 add         r0, sp, #8
  00038	e58de004	 str         lr, [sp, #4]
  0003c	e58d7000	 str         r7, [sp]
  00040	eb000000	 bl          |?Marshal@MarshalledBuffer_t@@QAAJPAXKKHH@Z|

; 961  :     pCsDescriptor = reinterpret_cast<PCS_STREAM_DESCRIPTOR>( MarshalledStreamDesc.ptr() );

  00044	e59d6008	 ldr         r6, [sp, #8]
  00048	e3560000	 cmp         r6, #0
  0004c	1a000002	 bne         |$LN25@Deallocate|
  00050	e59d600c	 ldr         r6, [sp, #0xC]

; 962  : 
; 963  :     if( NULL == pCsDescriptor )

  00054	e3560000	 cmp         r6, #0
  00058	0a00002b	 beq         |$LN23@Deallocate|
  0005c		 |$LN25@Deallocate|

; 964  :     {
; 965  :         return dwError;
; 966  :     }
; 967  : 
; 968  :     lpBuffer = pCsDescriptor->CsStreamHeader.Data;
; 969  :     dwHandle = pCsDescriptor->CsStreamHeader.Handle;
; 970  : 
; 971  :     // Get the entry for this buffer in the internal list
; 972  :     EnterCriticalSection( &m_csStreamBuffer );

  0005c	e5965028	 ldr         r5, [r6, #0x28]
  00060	e5968030	 ldr         r8, [r6, #0x30]
  00064	e2840034	 add         r0, r4, #0x34
  00068	eb000000	 bl          EnterCriticalSection

; 973  :     
; 974  :     //Check if there are any buffers to deallocate    
; 975  :     if(0 == m_dwBufferCount)

  0006c	e5943018	 ldr         r3, [r4, #0x18]
  00070	e3530000	 cmp         r3, #0
  00074	1a000001	 bne         |$LN8@Deallocate|
  00078		 |$LN27@Deallocate|

; 976  :     {
; 977  :         dwError = ERROR_INVALID_PARAMETER;

  00078	e3a05057	 mov         r5, #0x57

; 978  :         goto Cleanup;

  0007c	ea00001f	 b           |$Cleanup$34802|
  00080		 |$LN8@Deallocate|

; 979  :     }
; 980  : 
; 981  :     lIndex = GetIndexFromHandle( dwHandle, lpBuffer );

  00080	e1a02005	 mov         r2, r5
  00084	e1a01008	 mov         r1, r8
  00088	e1a00004	 mov         r0, r4
  0008c	eb000000	 bl          |?GetIndexFromHandle@CPinDevice@@AAAJKPAX@Z|

; 982  :     if( lIndex == -1 )

  00090	e3700001	 cmn         r0, #1

; 983  :     {
; 984  :         dwError = ERROR_INVALID_PARAMETER;
; 985  :         goto Cleanup;

  00094	0afffff7	 beq         |$LN27@Deallocate|

; 986  :     }
; 987  : 
; 988  :     // If the row is not in use, let's make it available
; 989  :     if( m_pStreamDescriptorList[ lIndex ].pCsStreamDescriptorExternal != NULL )

  00098	e5943060	 ldr         r3, [r4, #0x60]
  0009c	e0808180	 add         r8, r0, r0, lsl #3
  000a0	e1a02208	 mov         r2, r8, lsl #4
  000a4	e7b23003	 ldr         r3, [r2, +r3]!
  000a8	e3530000	 cmp         r3, #0

; 990  :     {
; 991  :         dwError = ERROR_INVALID_PARAMETER;
; 992  :         goto Cleanup;

  000ac	1afffff1	 bne         |$LN27@Deallocate|

; 993  :     }
; 994  : 
; 995  :     ASSERT( m_pStreamDescriptorList[ lIndex ].m_fBusy == TRUE );
; 996  :     m_pStreamDescriptorList[ lIndex ].m_fBusy = FALSE;

  000b0	e5827080	 str         r7, [r2, #0x80]

; 997  :     m_dwBufferCount--;

  000b4	e5943018	 ldr         r3, [r4, #0x18]

; 998  : 
; 999  :     if( m_dwMemoryModel == CSPROPERTY_BUFFER_DRIVER )

  000b8	e5942014	 ldr         r2, [r4, #0x14]

; 1000 :     {
; 1001 :         // We release the buffer. 
; 1002 :         dwError = m_pCamAdapter->PDDDeAllocatePinBuffer( m_ulPinId, m_pStreamDescriptorList[ lIndex ].csStreamDescriptorShadow.CsStreamHeader.Data );

  000bc	e5941000	 ldr         r1, [r4]
  000c0	e2433001	 sub         r3, r3, #1
  000c4	e5843018	 str         r3, [r4, #0x18]
  000c8	e5943060	 ldr         r3, [r4, #0x60]
  000cc	e594005c	 ldr         r0, [r4, #0x5C]
  000d0	e3520001	 cmp         r2, #1
  000d4	e0833208	 add         r3, r3, r8, lsl #4
  000d8	e5932030	 ldr         r2, [r3, #0x30]
  000dc	1a000001	 bne         |$LN2@Deallocate|
  000e0	eb000000	 bl          |?PDDDeAllocatePinBuffer@CCameraDevice@@QAAKKPAX@Z|

; 1003 :         m_pStreamDescriptorList[ lIndex ].csStreamDescriptorShadow.CsStreamHeader.Data = NULL;
; 1004 :         pCsDescriptor->CsStreamHeader.Data = NULL;
; 1005 :     }
; 1006 :     else

  000e4	ea000000	 b           |$LN26@Deallocate|
  000e8		 |$LN2@Deallocate|

; 1007 :     {
; 1008 :         dwError = m_pCamAdapter->PDDUnRegisterClientBuffer( m_ulPinId, m_pStreamDescriptorList[ lIndex ].csStreamDescriptorShadow.CsStreamHeader.Data );

  000e8	eb000000	 bl          |?PDDUnRegisterClientBuffer@CCameraDevice@@QAAKKPAX@Z|
  000ec		 |$LN26@Deallocate|

; 1009 : 
; 1010 :         m_pStreamDescriptorList[ lIndex ].csStreamDescriptorShadow.CsStreamHeader.Data = NULL;

  000ec	e5943060	 ldr         r3, [r4, #0x60]
  000f0	e1a05000	 mov         r5, r0
  000f4	e0833208	 add         r3, r3, r8, lsl #4
  000f8	e5837030	 str         r7, [r3, #0x30]

; 1011 : 
; 1012 :         pCsDescriptor->CsStreamHeader.Data = NULL;

  000fc	e5867028	 str         r7, [r6, #0x28]
  00100		 |$Cleanup$34802|

; 1013 :     }
; 1014 : 
; 1015 : Cleanup:
; 1016 :     LeaveCriticalSection( &m_csStreamBuffer );

  00100	e2840034	 add         r0, r4, #0x34
  00104	eb000000	 bl          LeaveCriticalSection
  00108	e1a07005	 mov         r7, r5
  0010c		 |$LN23@Deallocate|
  0010c	e28d0008	 add         r0, sp, #8
  00110	eb000000	 bl          |?Unmarshal@MarshalledBuffer_t@@QAAJXZ|

; 1017 :     return dwError;
; 1018 : }

  00114	e1a00007	 mov         r0, r7
  00118	e28dd01c	 add         sp, sp, #0x1C
  0011c	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00120	e12fff1e	 bx          lr
  00124		 |$M35825|

			 ENDP  ; |?DeallocateBuffer@CPinDevice@@AAAKPAU_tagStreamDescriptor@@@Z|, CPinDevice::DeallocateBuffer

	EXPORT	|?EnqueueDescriptor@CPinDevice@@AAAKPAU_tagStreamDescriptor@@@Z| ; CPinDevice::EnqueueDescriptor
	EXPORT	|??_C@_1JA@IKODGKAI@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAm@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HI@KHEKNNLP@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAT?$AAh?$AAi?$AAs?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JO@BOPJCKKC@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAT?$AAh?$AAe?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@POACLPIM@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAE?$AAn?$AAq?$AAu?$AAe?$AAu?$AAe?$AAD?$AAe?$AAs?$AAc@| [ DATA ] ; `string'
	IMPORT	|??2@YAPAXI@Z|				; operator new
; File c:\wince600\public\common\oak\inc\marshal.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T35957| DCD	|$LN90@EnqueueDes|
	DCD	0x4000e702

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JA@IKODGKAI@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAm@| DCB "P"
	DCB	0x0, "I", 0x0, "N", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "U", 0x0, "n", 0x0, "a", 0x0, "b"
	DCB	0x0, "l", 0x0, "e", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "m", 0x0, "a", 0x0, "r", 0x0, "s", 0x0, "h", 0x0, "a"
	DCB	0x0, "l", 0x0, " ", 0x0, "d", 0x0, "a", 0x0, "t", 0x0, "a"
	DCB	0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "a", 0x0, "s", 0x0, "y", 0x0, "n", 0x0, "c", 0x0, "h"
	DCB	0x0, " ", 0x0, "a", 0x0, "c", 0x0, "c", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HI@KHEKNNLP@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAT?$AAh?$AAi?$AAs?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr@| DCB "P"
	DCB	0x0, "I", 0x0, "N", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "T", 0x0, "h", 0x0, "i", 0x0, "s"
	DCB	0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "h", 0x0, "a", 0x0, "s", 0x0, " "
	DCB	0x0, "a", 0x0, "l", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, "y", 0x0, " ", 0x0, "b", 0x0, "e", 0x0, " ", 0x0, "e"
	DCB	0x0, "n", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "u", 0x0, "e"
	DCB	0x0, "d", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JO@BOPJCKKC@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAT?$AAh?$AAe?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5@| DCB "P"
	DCB	0x0, "I", 0x0, "N", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "T", 0x0, "h", 0x0, "e", 0x0, " "
	DCB	0x0, "b", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r"
	DCB	0x0, " ", 0x0, "h", 0x0, "a", 0x0, "s", 0x0, " ", 0x0, "n"
	DCB	0x0, "o", 0x0, "t", 0x0, " ", 0x0, "b", 0x0, "e", 0x0, " "
	DCB	0x0, "p", 0x0, "r", 0x0, "e", 0x0, "p", 0x0, "a", 0x0, "r"
	DCB	0x0, "e", 0x0, "d", 0x0, ".", 0x0, " ", 0x0, "C", 0x0, "a"
	DCB	0x0, "l", 0x0, "l", 0x0, " ", 0x0, "C", 0x0, "S", 0x0, "_"
	DCB	0x0, "A", 0x0, "L", 0x0, "L", 0x0, "O", 0x0, "C", 0x0, "A"
	DCB	0x0, "T", 0x0, "E", 0x0, " ", 0x0, "f", 0x0, "i", 0x0, "r"
	DCB	0x0, "s", 0x0, "t", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@POACLPIM@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAE?$AAn?$AAq?$AAu?$AAe?$AAu?$AAe?$AAD?$AAe?$AAs?$AAc@| DCB "P"
	DCB	0x0, "I", 0x0, "N", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "E", 0x0, "n", 0x0, "q", 0x0, "u"
	DCB	0x0, "e", 0x0, "u", 0x0, "e", 0x0, "D", 0x0, "e", 0x0, "s"
	DCB	0x0, "c", 0x0, "r", 0x0, "i", 0x0, "p", 0x0, "t", 0x0, "o"
	DCB	0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\evm_omap3530\src\drivers\camera\mdd\pindevice.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?EnqueueDescriptor@CPinDevice@@AAAKPAU_tagStreamDescriptor@@@Z| PROC ; CPinDevice::EnqueueDescriptor

; 1156 : {

  00000		 |$LN90@EnqueueDes|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd020	 sub         sp, sp, #0x20
  00008		 |$M35954|
  00008	e1a0a001	 mov         r10, r1
  0000c	e1a05000	 mov         r5, r0

; 1157 :     LPVOID  lpBuffer, lpMappedBuffer;
; 1158 :     DWORD   dwHandle;
; 1159 :     LONG   lIndex;
; 1160 :     DWORD   dwSize;
; 1161 :     DWORD   dwError = ERROR_INVALID_PARAMETER;
; 1162 :     PCS_VIDEOINFOHEADER   pCsVideoInfoHdr;
; 1163 :     PCS_STREAM_DESCRIPTOR pCsDescriptor = NULL;
; 1164 :     
; 1165 :     DEBUGMSG( ZONE_IOCTL, ( _T("PIN_IOControl(%08x): EnqueueDescriptor\r\n"), this ) );

  00010	e59f8380	 ldr         r8, [pc, #0x380]
  00014	e3a06057	 mov         r6, #0x57
  00018	e5983440	 ldr         r3, [r8, #0x440]
  0001c	e3130010	 tst         r3, #0x10
  00020	159f036c	 ldrne       r0, [pc, #0x36C]
  00024	11a01005	 movne       r1, r5
  00028	1b000000	 blne        NKDbgPrintfW

; 1166 :     if( m_CsState == CSSTATE_STOP )

  0002c	e59535a0	 ldr         r3, [r5, #0x5A0]
  00030	e3530000	 cmp         r3, #0
  00034	03a03b01	 moveq       r3, #1, 22

; 1167 :     {
; 1168 :         return ERROR_SERVICE_NOT_ACTIVE;

  00038	03836026	 orreq       r6, r3, #0x26
  0003c	0a00004f	 beq         |$LN25@EnqueueDes|

; 1169 :     }
; 1170 : 
; 1171 :     {
; 1172 :         MarshalledBuffer_t MarshalledStreamDesc(pUnMarshalCsDescriptor, sizeof(CS_STREAM_DESCRIPTOR), ARG_O_PTR, FALSE, TRUE);

  00040	e3a03000	 mov         r3, #0
  00044	e3a02000	 mov         r2, #0
  00048	e3a01000	 mov         r1, #0
  0004c	e58d3010	 str         r3, [sp, #0x10]
  00050	e58d200c	 str         r2, [sp, #0xC]
  00054	e58d1018	 str         r1, [sp, #0x18]
  00058	e3a04001	 mov         r4, #1
  0005c	e3a0e000	 mov         lr, #0
  00060	e3a03008	 mov         r3, #8
  00064	e3a02078	 mov         r2, #0x78
  00068	e1a0100a	 mov         r1, r10
  0006c	e28d000c	 add         r0, sp, #0xC
  00070	e58d4004	 str         r4, [sp, #4]
  00074	e58de000	 str         lr, [sp]
  00078	eb000000	 bl          |?Marshal@MarshalledBuffer_t@@QAAJPAXKKHH@Z|

; 1173 :         pCsDescriptor = reinterpret_cast<PCS_STREAM_DESCRIPTOR>( MarshalledStreamDesc.ptr() );

  0007c	e59d300c	 ldr         r3, [sp, #0xC]
  00080	e3530000	 cmp         r3, #0
  00084	1a000006	 bne         |$LN23@EnqueueDes|
  00088	e59d3010	 ldr         r3, [sp, #0x10]

; 1174 : 
; 1175 :         if( NULL == pCsDescriptor )

  0008c	e3530000	 cmp         r3, #0
  00090	1a000003	 bne         |$LN23@EnqueueDes|

; 1176 :         {
; 1177 :             return dwError;

  00094	e28d000c	 add         r0, sp, #0xC
  00098	eb000000	 bl          |?Unmarshal@MarshalledBuffer_t@@QAAJXZ|
  0009c	e3a06057	 mov         r6, #0x57
  000a0	ea000036	 b           |$LN25@EnqueueDes|
  000a4		 |$LN23@EnqueueDes|

; 1178 :         }
; 1179 : 
; 1180 :         // First, let's use the handle and the buffer to retrieve the shadow copy
; 1181 :         // If an exception happens during the following 2 lines, it will be trapped by the upper level
; 1182 :         lpBuffer = pCsDescriptor->CsStreamHeader.Data;
; 1183 :         dwHandle = pCsDescriptor->CsStreamHeader.Handle;
; 1184 :     }

  000a4	e5937028	 ldr         r7, [r3, #0x28]
  000a8	e5934030	 ldr         r4, [r3, #0x30]
  000ac	e28d000c	 add         r0, sp, #0xC
  000b0	e58d7008	 str         r7, [sp, #8]
  000b4	eb000000	 bl          |?Unmarshal@MarshalledBuffer_t@@QAAJXZ|

; 1185 : 
; 1186 :     EnterCriticalSection( &m_csStreamBuffer );

  000b8	e2850034	 add         r0, r5, #0x34
  000bc	eb000000	 bl          EnterCriticalSection

; 1187 : 
; 1188 :     // Get the entry for this buffer in the internal list
; 1189 :     lIndex = GetIndexFromHandle( dwHandle, lpBuffer );

  000c0	e1a02007	 mov         r2, r7
  000c4	e1a01004	 mov         r1, r4
  000c8	e1a00005	 mov         r0, r5
  000cc	eb000000	 bl          |?GetIndexFromHandle@CPinDevice@@AAAJKPAX@Z|
  000d0	e1a09000	 mov         r9, r0

; 1190 :     if( lIndex == -1 )

  000d4	e3790001	 cmn         r9, #1
  000d8	0a00000b	 beq         |$LN76@EnqueueDes|

; 1191 :     {
; 1192 :         goto Cleanup;
; 1193 :     }
; 1194 : 
; 1195 :     // Is the row in use?
; 1196 :     if( m_pStreamDescriptorList[ lIndex ].m_fBusy == FALSE )

  000dc	e5953060	 ldr         r3, [r5, #0x60]
  000e0	e0894189	 add         r4, r9, r9, lsl #3
  000e4	e0832204	 add         r2, r3, r4, lsl #4
  000e8	e5923080	 ldr         r3, [r2, #0x80]
  000ec	e3530000	 cmp         r3, #0
  000f0	1a000026	 bne         |$LN20@EnqueueDes|

; 1197 :     {
; 1198 :         DEBUGMSG( ZONE_IOCTL|ZONE_ERROR, ( _T("PIN_IOControl(%08x): The buffer has not be prepared. Call CS_ALLOCATE first.\r\n"), this ) );

  000f4	e5983440	 ldr         r3, [r8, #0x440]
  000f8	e3130011	 tst         r3, #0x11
  000fc	0a000002	 beq         |$LN76@EnqueueDes|
  00100	e59f0288	 ldr         r0, [pc, #0x288]
  00104		 |$LN82@EnqueueDes|
  00104	e1a01005	 mov         r1, r5
  00108	eb000000	 bl          NKDbgPrintfW
  0010c		 |$LN76@EnqueueDes|

; 1277 :     
; 1278 : Cleanup:
; 1279 : 
; 1280 :     if( ERROR_SUCCESS != dwError && lIndex >= 0 )

  0010c	e3590000	 cmp         r9, #0
  00110	4a000018	 bmi         |$LN1@EnqueueDes|

; 1281 :     {
; 1282 :         if( NULL != m_pStreamDescriptorList[ lIndex ].m_pMarshalledDataBuffer &&
; 1283 :             NULL != m_pStreamDescriptorList[ lIndex ].m_pMarshalledDataBuffer->ptr() )

  00114	e5953060	 ldr         r3, [r5, #0x60]
  00118	e0894189	 add         r4, r9, r9, lsl #3
  0011c	e0833204	 add         r3, r3, r4, lsl #4
  00120	e5933084	 ldr         r3, [r3, #0x84]
  00124	e1b00003	 movs        r0, r3
  00128	0a000006	 beq         |$LN2@EnqueueDes|
  0012c	e5903000	 ldr         r3, [r0]
  00130	e3530000	 cmp         r3, #0
  00134	1a000002	 bne         |$LN85@EnqueueDes|
  00138	e5903004	 ldr         r3, [r0, #4]
  0013c	e3530000	 cmp         r3, #0
  00140	0a000000	 beq         |$LN2@EnqueueDes|
  00144		 |$LN85@EnqueueDes|

; 1284 :         {
; 1285 :             m_pStreamDescriptorList[ lIndex ].m_pMarshalledDataBuffer->Unmarshal();

  00144	eb000000	 bl          |?Unmarshal@MarshalledBuffer_t@@QAAJXZ|
  00148		 |$LN2@EnqueueDes|

; 1286 :         }
; 1287 :         if( NULL != m_pStreamDescriptorList[ lIndex ].m_pMarshalledStreamDesc &&
; 1288 :             NULL != m_pStreamDescriptorList[ lIndex ].m_pMarshalledStreamDesc->ptr() )

  00148	e5953060	 ldr         r3, [r5, #0x60]
  0014c	e0833204	 add         r3, r3, r4, lsl #4
  00150	e5933088	 ldr         r3, [r3, #0x88]
  00154	e1b00003	 movs        r0, r3
  00158	0a000006	 beq         |$LN1@EnqueueDes|
  0015c	e5903000	 ldr         r3, [r0]
  00160	e3530000	 cmp         r3, #0
  00164	1a000002	 bne         |$LN87@EnqueueDes|
  00168	e5903004	 ldr         r3, [r0, #4]
  0016c	e3530000	 cmp         r3, #0
  00170	0a000000	 beq         |$LN1@EnqueueDes|
  00174		 |$LN87@EnqueueDes|

; 1289 :         {
; 1290 :             m_pStreamDescriptorList[ lIndex ].m_pMarshalledStreamDesc->Unmarshal();

  00174	eb000000	 bl          |?Unmarshal@MarshalledBuffer_t@@QAAJXZ|
  00178		 |$LN1@EnqueueDes|

; 1291 :         }
; 1292 :     }
; 1293 : 
; 1294 :     LeaveCriticalSection( &m_csStreamBuffer );

  00178	e2850034	 add         r0, r5, #0x34
  0017c	eb000000	 bl          LeaveCriticalSection

; 1295 :     return dwError;

  00180		 |$LN25@EnqueueDes|

; 1296 : }

  00180	e1a00006	 mov         r0, r6
  00184	e28dd020	 add         sp, sp, #0x20
  00188	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  0018c	e12fff1e	 bx          lr
  00190		 |$LN20@EnqueueDes|

; 1199 :         goto Cleanup;
; 1200 :     }
; 1201 : 
; 1202 :     if( m_pStreamDescriptorList[ lIndex ].pCsStreamDescriptorExternal != NULL )

  00190	e5923000	 ldr         r3, [r2]
  00194	e3530000	 cmp         r3, #0
  00198	0a000004	 beq         |$LN18@EnqueueDes|

; 1203 :     {
; 1204 :         DEBUGMSG( ZONE_IOCTL|ZONE_ERROR, ( _T("PIN_IOControl(%08x): This buffer has already be enqueued.\r\n"), this ) );

  0019c	e5983440	 ldr         r3, [r8, #0x440]
  001a0	e3130011	 tst         r3, #0x11
  001a4	0affffd8	 beq         |$LN76@EnqueueDes|
  001a8	e59f01dc	 ldr         r0, [pc, #0x1DC]

; 1205 :         goto Cleanup;

  001ac	eaffffd4	 b           |$LN82@EnqueueDes|
  001b0		 |$LN18@EnqueueDes|

; 1206 :     }
; 1207 : 
; 1208 :     // Now, let's probe the incoming buffer
; 1209 :     pCsVideoInfoHdr = reinterpret_cast<PCS_VIDEOINFOHEADER>( &m_CsDataRangeVideo.VideoInfoHeader );
; 1210 :     dwSize = m_CsDataRangeVideo.VideoInfoHeader.bmiHeader.biSizeImage;
; 1211 : 
; 1212 :     if( m_pStreamDescriptorList[ lIndex ].m_pMarshalledDataBuffer != NULL &&
; 1213 :         NULL != m_pStreamDescriptorList[ lIndex ].m_pMarshalledDataBuffer->ptr() )

  001b0	e5923084	 ldr         r3, [r2, #0x84]
  001b4	e595b17c	 ldr         r11, [r5, #0x17C]
  001b8	e1b00003	 movs        r0, r3
  001bc	0a000006	 beq         |$LN16@EnqueueDes|
  001c0	e5903000	 ldr         r3, [r0]
  001c4	e3530000	 cmp         r3, #0
  001c8	1a000002	 bne         |$LN79@EnqueueDes|
  001cc	e5903004	 ldr         r3, [r0, #4]
  001d0	e3530000	 cmp         r3, #0
  001d4	0a000000	 beq         |$LN16@EnqueueDes|
  001d8		 |$LN79@EnqueueDes|

; 1214 :     {
; 1215 :         m_pStreamDescriptorList[ lIndex ].m_pMarshalledDataBuffer->Unmarshal();

  001d8	eb000000	 bl          |?Unmarshal@MarshalledBuffer_t@@QAAJXZ|
  001dc		 |$LN16@EnqueueDes|

; 1216 :     }
; 1217 :     if( m_pStreamDescriptorList[ lIndex ].m_pMarshalledStreamDesc != NULL &&
; 1218 :         NULL != m_pStreamDescriptorList[ lIndex ].m_pMarshalledStreamDesc->ptr() )

  001dc	e5953060	 ldr         r3, [r5, #0x60]
  001e0	e0833204	 add         r3, r3, r4, lsl #4
  001e4	e5933088	 ldr         r3, [r3, #0x88]
  001e8	e1b00003	 movs        r0, r3
  001ec	0a000006	 beq         |$LN15@EnqueueDes|
  001f0	e5903000	 ldr         r3, [r0]
  001f4	e3530000	 cmp         r3, #0
  001f8	1a000002	 bne         |$LN81@EnqueueDes|
  001fc	e5903004	 ldr         r3, [r0, #4]
  00200	e3530000	 cmp         r3, #0
  00204	0a000000	 beq         |$LN15@EnqueueDes|
  00208		 |$LN81@EnqueueDes|

; 1219 :     {
; 1220 :         m_pStreamDescriptorList[ lIndex ].m_pMarshalledStreamDesc->Unmarshal();

  00208	eb000000	 bl          |?Unmarshal@MarshalledBuffer_t@@QAAJXZ|
  0020c		 |$LN15@EnqueueDes|

; 1221 :     }
; 1222 : 
; 1223 :     if( NULL == m_pStreamDescriptorList[ lIndex ].m_pMarshalledStreamDesc )

  0020c	e5953060	 ldr         r3, [r5, #0x60]
  00210	e0833204	 add         r3, r3, r4, lsl #4
  00214	e5933088	 ldr         r3, [r3, #0x88]
  00218	e1b00003	 movs        r0, r3
  0021c	1a000011	 bne         |$LN13@EnqueueDes|

; 1224 :     {
; 1225 :         m_pStreamDescriptorList[ lIndex ].m_pMarshalledStreamDesc = new MarshalledBuffer_t();

  00220	e3a00014	 mov         r0, #0x14
  00224	eb000000	 bl          |??2@YAPAXI@Z|
  00228	e3500000	 cmp         r0, #0
  0022c	13a03000	 movne       r3, #0
  00230	15803004	 strne       r3, [r0, #4]
  00234	15803000	 strne       r3, [r0]
  00238	1580300c	 strne       r3, [r0, #0xC]
  0023c	e5953060	 ldr         r3, [r5, #0x60]
  00240	03a00000	 moveq       r0, #0
  00244	e0833204	 add         r3, r3, r4, lsl #4
  00248	e5830088	 str         r0, [r3, #0x88]

; 1226 :         if( NULL == m_pStreamDescriptorList[ lIndex ].m_pMarshalledStreamDesc )

  0024c	e5953060	 ldr         r3, [r5, #0x60]
  00250	e0833204	 add         r3, r3, r4, lsl #4
  00254	e5933088	 ldr         r3, [r3, #0x88]
  00258	e1b00003	 movs        r0, r3
  0025c	1a000001	 bne         |$LN13@EnqueueDes|
  00260		 |$LN83@EnqueueDes|

; 1227 :         {
; 1228 :             dwError = ERROR_OUTOFMEMORY;

  00260	e3a0600e	 mov         r6, #0xE

; 1229 :             goto Cleanup;

  00264	eaffffa8	 b           |$LN76@EnqueueDes|
  00268		 |$LN13@EnqueueDes|

; 1230 :         }
; 1231 :     }
; 1232 : 
; 1233 :     m_pStreamDescriptorList[ lIndex ].m_pMarshalledStreamDesc->Marshal(pUnMarshalCsDescriptor, sizeof(CS_STREAM_DESCRIPTOR), ARG_O_PTR|MARSHAL_FORCE_ALIAS, FALSE, TRUE);

  00268	e3a0e001	 mov         lr, #1
  0026c	e58de004	 str         lr, [sp, #4]
  00270	e3a0e000	 mov         lr, #0
  00274	e3a03122	 mov         r3, #0x22, 2
  00278	e3a02078	 mov         r2, #0x78
  0027c	e1a0100a	 mov         r1, r10
  00280	e58de000	 str         lr, [sp]
  00284	eb000000	 bl          |?Marshal@MarshalledBuffer_t@@QAAJPAXKKHH@Z|

; 1234 :     pCsDescriptor = reinterpret_cast<PCS_STREAM_DESCRIPTOR>( m_pStreamDescriptorList[ lIndex ].m_pMarshalledStreamDesc->ptr() );

  00288	e5953060	 ldr         r3, [r5, #0x60]
  0028c	e0831204	 add         r1, r3, r4, lsl #4
  00290	e5912088	 ldr         r2, [r1, #0x88]
  00294	e5923000	 ldr         r3, [r2]
  00298	e1b07003	 movs        r7, r3
  0029c	05927004	 ldreq       r7, [r2, #4]

; 1235 : 
; 1236 :     if( NULL == pCsDescriptor )

  002a0	e3570000	 cmp         r7, #0
  002a4	0affff98	 beq         |$LN76@EnqueueDes|

; 1237 :     {
; 1238 :         goto Cleanup;
; 1239 :     }
; 1240 : 
; 1241 :     //Marshal the data buffer
; 1242 :     if( NULL == m_pStreamDescriptorList[ lIndex ].m_pMarshalledDataBuffer )

  002a8	e5913084	 ldr         r3, [r1, #0x84]
  002ac	e1b00003	 movs        r0, r3
  002b0	1a00000f	 bne         |$LN8@EnqueueDes|

; 1243 :     {
; 1244 :         m_pStreamDescriptorList[ lIndex ].m_pMarshalledDataBuffer = new MarshalledBuffer_t();

  002b4	e3a00014	 mov         r0, #0x14
  002b8	eb000000	 bl          |??2@YAPAXI@Z|
  002bc	e3500000	 cmp         r0, #0
  002c0	13a03000	 movne       r3, #0
  002c4	15803004	 strne       r3, [r0, #4]
  002c8	15803000	 strne       r3, [r0]
  002cc	1580300c	 strne       r3, [r0, #0xC]
  002d0	e5953060	 ldr         r3, [r5, #0x60]
  002d4	03a00000	 moveq       r0, #0
  002d8	e0833204	 add         r3, r3, r4, lsl #4
  002dc	e5830084	 str         r0, [r3, #0x84]

; 1245 :         if( NULL == m_pStreamDescriptorList[ lIndex ].m_pMarshalledDataBuffer )

  002e0	e5953060	 ldr         r3, [r5, #0x60]
  002e4	e0833204	 add         r3, r3, r4, lsl #4
  002e8	e5933084	 ldr         r3, [r3, #0x84]
  002ec	e1b00003	 movs        r0, r3

; 1246 :         {
; 1247 :             dwError = ERROR_OUTOFMEMORY;
; 1248 :             goto Cleanup;

  002f0	0affffda	 beq         |$LN83@EnqueueDes|
  002f4		 |$LN8@EnqueueDes|

; 1249 :         }
; 1250 :     }
; 1251 : 
; 1252 :     if(FAILED(m_pStreamDescriptorList[ lIndex ].m_pMarshalledDataBuffer->Marshal(lpBuffer, //Unmarshalled Src
; 1253 :                                                                                   dwSize, //Size of buffer
; 1254 :                                                                                   ARG_O_PTR|MARSHAL_FORCE_ALIAS, //Pointer is output
; 1255 :                                                                                   FALSE, //Don't force Duplicate
; 1256 :                                                                                   TRUE) //Enable asynch access
; 1257 :       )) 

  002f4	e59d1008	 ldr         r1, [sp, #8]
  002f8	e3a06001	 mov         r6, #1
  002fc	e3a0e000	 mov         lr, #0
  00300	e3a03122	 mov         r3, #0x22, 2
  00304	e1a0200b	 mov         r2, r11
  00308	e58d6004	 str         r6, [sp, #4]
  0030c	e58de000	 str         lr, [sp]
  00310	eb000000	 bl          |?Marshal@MarshalledBuffer_t@@QAAJPAXKKHH@Z|
  00314	e3500000	 cmp         r0, #0
  00318	5a000007	 bpl         |$LN6@EnqueueDes|

; 1258 :     {
; 1259 :         DEBUGMSG( ZONE_IOCTL|ZONE_ERROR, ( _T("PIN_IOControl(%08x): Unable to marshal data buffer for asynch access.\r\n"), this ) );

  0031c	e5983440	 ldr         r3, [r8, #0x440]
  00320	e3130011	 tst         r3, #0x11
  00324	0affffcd	 beq         |$LN83@EnqueueDes|
  00328	e59f0058	 ldr         r0, [pc, #0x58]
  0032c	e1a01005	 mov         r1, r5
  00330	eb000000	 bl          NKDbgPrintfW
  00334	e3a0600e	 mov         r6, #0xE
  00338	eaffff73	 b           |$LN76@EnqueueDes|
  0033c		 |$LN6@EnqueueDes|

; 1260 :         dwError = ERROR_OUTOFMEMORY;
; 1261 :         goto Cleanup;
; 1262 :     }
; 1263 : 
; 1264 :     lpMappedBuffer = m_pStreamDescriptorList[ lIndex ].m_pMarshalledDataBuffer->ptr();

  0033c	e5953060	 ldr         r3, [r5, #0x60]
  00340		 |$Cleanup$34880|
  00340	e0831204	 add         r1, r3, r4, lsl #4
  00344	e5912084	 ldr         r2, [r1, #0x84]
  00348	e5923000	 ldr         r3, [r2]
  0034c	e3530000	 cmp         r3, #0
  00350	05923004	 ldreq       r3, [r2, #4]

; 1265 : 
; 1266 :     m_pStreamDescriptorList[ lIndex ].csStreamDescriptorShadow.CsStreamHeader.Data = lpMappedBuffer;

  00354	e5813030	 str         r3, [r1, #0x30]

; 1267 :     m_pStreamDescriptorList[ lIndex ].pCsStreamDescriptorExternal = pCsDescriptor;

  00358	e5953060	 ldr         r3, [r5, #0x60]
  0035c	e7837204	 str         r7, [r3, +r4, lsl #4]

; 1268 : 
; 1269 :     m_pStreamDescriptorList[ lIndex ].m_pUnMarshalledStreamDesc = (PCS_STREAM_DESCRIPTOR)pUnMarshalCsDescriptor;

  00360	e5953060	 ldr         r3, [r5, #0x60]
  00364	e0833204	 add         r3, r3, r4, lsl #4
  00368	e583a08c	 str         r10, [r3, #0x8C]

; 1270 : 
; 1271 :     if ( false == m_fClientInitialized && CSSTATE_PAUSE == m_CsState )

  0036c	e5d535a4	 ldrb        r3, [r5, #0x5A4]
  00370	e3530000	 cmp         r3, #0
  00374	059535a0	 ldreq       r3, [r5, #0x5A0]
  00378	03530001	 cmpeq       r3, #1

; 1272 :     {
; 1273 :         m_fClientInitialized = true;

  0037c	05c565a4	 streqb      r6, [r5, #0x5A4]

; 1274 :     }
; 1275 : 
; 1276 :     dwError = ERROR_SUCCESS;

  00380	e3a06000	 mov         r6, #0

; 1277 :     
; 1278 : Cleanup:
; 1279 : 
; 1280 :     if( ERROR_SUCCESS != dwError && lIndex >= 0 )

  00384	eaffff7b	 b           |$LN1@EnqueueDes|
  00388		 |$LN91@EnqueueDes|
  00388		 |$LN92@EnqueueDes|
  00388	00000000	 DCD         |??_C@_1JA@IKODGKAI@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAU?$AAn?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAm@|
  0038c		 |$LN93@EnqueueDes|
  0038c	00000000	 DCD         |??_C@_1HI@KHEKNNLP@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAT?$AAh?$AAi?$AAs?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr@|
  00390		 |$LN94@EnqueueDes|
  00390	00000000	 DCD         |??_C@_1JO@BOPJCKKC@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAT?$AAh?$AAe?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5@|
  00394		 |$LN95@EnqueueDes|
  00394	00000000	 DCD         |??_C@_1FC@POACLPIM@?$AAP?$AAI?$AAN?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAE?$AAn?$AAq?$AAu?$AAe?$AAu?$AAe?$AAD?$AAe?$AAs?$AAc@|
  00398		 |$LN96@EnqueueDes|
  00398	00000000	 DCD         |dpCurSettings|
  0039c		 |$M35955|

			 ENDP  ; |?EnqueueDescriptor@CPinDevice@@AAAKPAU_tagStreamDescriptor@@@Z|, CPinDevice::EnqueueDescriptor

	EXPORT	|?ResetBufferList@CPinDevice@@AAA_NXZ|	; CPinDevice::ResetBufferList
; File c:\wince600\public\common\oak\inc\marshal.hpp

  00000			 AREA	 |.pdata|, PDATA
|$T36004| DCD	|$LN27@ResetBuffe|
	DCD	0x40003401
; Function compile flags: /Ogspy
; File c:\wince600\platform\evm_omap3530\src\drivers\camera\mdd\pindevice.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ResetBufferList@CPinDevice@@AAA_NXZ| PROC ; CPinDevice::ResetBufferList

; 1360 : {

  00000		 |$LN27@ResetBuffe|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M36001|
  00004	e1a04000	 mov         r4, r0

; 1361 :     EnterCriticalSection( &m_csStreamBuffer );

  00008	e2840034	 add         r0, r4, #0x34
  0000c	eb000000	 bl          EnterCriticalSection

; 1362 :     if( m_pStreamDescriptorList )

  00010	e5943060	 ldr         r3, [r4, #0x60]
  00014	e3530000	 cmp         r3, #0
  00018	0a000027	 beq         |$LN3@ResetBuffe|

; 1363 :     {
; 1364 :         for( DWORD i = 0; i < m_ulMaxNumOfBuffers; i++ )

  0001c	e594301c	 ldr         r3, [r4, #0x1C]
  00020	e3a07000	 mov         r7, #0
  00024	e3530000	 cmp         r3, #0
  00028	9a000023	 bls         |$LN3@ResetBuffe|
  0002c	e3a05000	 mov         r5, #0
  00030	e3a08000	 mov         r8, #0
  00034		 |$LL5@ResetBuffe|

; 1365 :         {
; 1366 :             if(m_pStreamDescriptorList[ i ].m_pMarshalledDataBuffer != NULL)

  00034	e5943060	 ldr         r3, [r4, #0x60]
  00038	e0853003	 add         r3, r5, r3
  0003c	e5933084	 ldr         r3, [r3, #0x84]
  00040	e1b06003	 movs        r6, r3
  00044	0a000006	 beq         |$LN2@ResetBuffe|

; 1367 :             {
; 1368 :                 delete m_pStreamDescriptorList[ i ].m_pMarshalledDataBuffer;

  00048	e1a00006	 mov         r0, r6
  0004c	eb000000	 bl          |?Unmarshal@MarshalledBuffer_t@@QAAJXZ|
  00050	e1a00006	 mov         r0, r6
  00054	eb000000	 bl          |??3@YAXPAX@Z|

; 1369 :                 m_pStreamDescriptorList[ i ].m_pMarshalledDataBuffer = NULL;

  00058	e5943060	 ldr         r3, [r4, #0x60]
  0005c	e0853003	 add         r3, r5, r3
  00060	e5838084	 str         r8, [r3, #0x84]
  00064		 |$LN2@ResetBuffe|

; 1370 :             }
; 1371 : 
; 1372 :             if(m_pStreamDescriptorList[ i ].m_pMarshalledStreamDesc != NULL)

  00064	e5943060	 ldr         r3, [r4, #0x60]
  00068	e0853003	 add         r3, r5, r3
  0006c	e5933088	 ldr         r3, [r3, #0x88]
  00070	e1b06003	 movs        r6, r3
  00074	0a000006	 beq         |$LN1@ResetBuffe|

; 1373 :             {
; 1374 :                 delete m_pStreamDescriptorList[ i ].m_pMarshalledStreamDesc;

  00078	e1a00006	 mov         r0, r6
  0007c	eb000000	 bl          |?Unmarshal@MarshalledBuffer_t@@QAAJXZ|
  00080	e1a00006	 mov         r0, r6
  00084	eb000000	 bl          |??3@YAXPAX@Z|

; 1375 :                 m_pStreamDescriptorList[ i ].m_pMarshalledStreamDesc = NULL;

  00088	e5943060	 ldr         r3, [r4, #0x60]
  0008c	e0853003	 add         r3, r5, r3
  00090	e5838088	 str         r8, [r3, #0x88]
  00094		 |$LN1@ResetBuffe|

; 1376 :             }
; 1377 : 
; 1378 :             m_pStreamDescriptorList[ i ].pCsStreamDescriptorExternal = NULL;

  00094	e5943060	 ldr         r3, [r4, #0x60]
  00098	e2877001	 add         r7, r7, #1
  0009c	e7858003	 str         r8, [r5, +r3]

; 1379 :             m_pStreamDescriptorList[ i ].m_fBusy = FALSE;

  000a0	e5943060	 ldr         r3, [r4, #0x60]
  000a4	e0853003	 add         r3, r5, r3
  000a8	e5838080	 str         r8, [r3, #0x80]
  000ac	e594301c	 ldr         r3, [r4, #0x1C]
  000b0	e2855090	 add         r5, r5, #0x90
  000b4	e1570003	 cmp         r7, r3
  000b8	3affffdd	 bcc         |$LL5@ResetBuffe|
  000bc		 |$LN3@ResetBuffe|

; 1380 :         }
; 1381 :     }
; 1382 :     
; 1383 :     LeaveCriticalSection( &m_csStreamBuffer );

  000bc	e2840034	 add         r0, r4, #0x34
  000c0	eb000000	 bl          LeaveCriticalSection

; 1384 : 
; 1385 :     return true;

  000c4	e3a00001	 mov         r0, #1

; 1386 : }

  000c8	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  000cc	e12fff1e	 bx          lr
  000d0		 |$M36002|

			 ENDP  ; |?ResetBufferList@CPinDevice@@AAA_NXZ|, CPinDevice::ResetBufferList

	EXPORT	|??1CPinDevice@@QAA@XZ|			; CPinDevice::~CPinDevice
	IMPORT	|DeleteCriticalSection|
	IMPORT	|CloseMsgQueue|

  00000			 AREA	 |.pdata|, PDATA
|$T36012| DCD	|$LN7@CPinDevice@2|
	DCD	0x40001501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CPinDevice@@QAA@XZ| PROC		; CPinDevice::~CPinDevice

; 62   : {

  00000		 |$LN7@CPinDevice@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M36009|
  00004	e1a04000	 mov         r4, r0

; 63   :     ResetBufferList( );

  00008	eb000000	 bl          |?ResetBufferList@CPinDevice@@AAA_NXZ|

; 64   :     
; 65   :     if ( NULL != m_hMsgQ )

  0000c	e5943030	 ldr         r3, [r4, #0x30]
  00010	e3530000	 cmp         r3, #0

; 66   :     {
; 67   :         CloseMsgQueue( m_hMsgQ );

  00014	11a00003	 movne       r0, r3
  00018	1b000000	 blne        CloseMsgQueue

; 68   :     }
; 69   : 
; 70   :     if ( NULL != m_pStreamDescriptorList )

  0001c	e5943060	 ldr         r3, [r4, #0x60]
  00020	e3a05000	 mov         r5, #0
  00024	e3530000	 cmp         r3, #0
  00028	0a000002	 beq         |$LN1@CPinDevice@2|

; 71   :     {
; 72   :         LocalFree( m_pStreamDescriptorList );

  0002c	e1a00003	 mov         r0, r3
  00030	eb000000	 bl          LocalFree

; 73   :         m_pStreamDescriptorList = NULL;

  00034	e5845060	 str         r5, [r4, #0x60]
  00038		 |$LN1@CPinDevice@2|

; 74   :     }
; 75   : 
; 76   :     m_CsState = CSSTATE_STOP;
; 77   :     DeleteCriticalSection( &m_csStreamBuffer );

  00038	e2840034	 add         r0, r4, #0x34
  0003c	e58455a0	 str         r5, [r4, #0x5A0]
  00040	eb000000	 bl          DeleteCriticalSection

; 78   :     DeleteCriticalSection( &m_csStreamIO );

  00044	e2840048	 add         r0, r4, #0x48
  00048	eb000000	 bl          DeleteCriticalSection

; 79   : }

  0004c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00050	e12fff1e	 bx          lr
  00054		 |$M36010|

			 ENDP  ; |??1CPinDevice@@QAA@XZ|, CPinDevice::~CPinDevice

	EXPORT	|?PinHandleBufferRequest@CPinDevice@@QAAKU_tagCSBUFFER_Info@@PAEKPAK@Z| ; CPinDevice::PinHandleBufferRequest

  00000			 AREA	 |.pdata|, PDATA
|$T36027| DCD	|$LN14@PinHandleB|
	DCD	0x40002d02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PinHandleBufferRequest@CPinDevice@@QAAKU_tagCSBUFFER_Info@@PAEKPAK@Z| PROC ; CPinDevice::PinHandleBufferRequest

; 588  : {

  00000		 |$LN14@PinHandleB|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M36024|
  00008	e1a07003	 mov         r7, r3
  0000c	e1a05002	 mov         r5, r2
  00010	e1a04000	 mov         r4, r0

; 589  :     DWORD   dwError = ERROR_INVALID_PARAMETER;
; 590  :     DWORD dwCommand = csBufferInfo.dwCommand;
; 591  :  
; 592  :     if ( pdwBytesTransferred )

  00014	e59d601c	 ldr         r6, [sp, #0x1C]
  00018	e3a00057	 mov         r0, #0x57
  0001c	e3560000	 cmp         r6, #0

; 593  :     {
; 594  :         *pdwBytesTransferred = 0;

  00020	13a03000	 movne       r3, #0
  00024	15863000	 strne       r3, [r6]

; 595  :     }
; 596  : 
; 597  :     // The pOutBuf argument has already been probed with MapCallerPointer, and the upper layer 
; 598  :     // has already checked for the size of the buffer to be at least sizeof( CS_STREAM_DESCRIPTOR )
; 599  : 
; 600  :     switch( dwCommand )

  00028	e3510000	 cmp         r1, #0
  0002c	0a00000b	 beq         |$LN6@PinHandleB|
  00030	e3510001	 cmp         r1, #1
  00034	0a000005	 beq         |$LN3@PinHandleB|
  00038	e3510002	 cmp         r1, #2
  0003c	1a000019	 bne         |$LN7@PinHandleB|

; 618  : 
; 619  :         case CS_DEALLOCATE:
; 620  :             dwError = DeallocateBuffer( csBufferInfo.pStreamDescriptor );

  00040	e1a01005	 mov         r1, r5
  00044	e1a00004	 mov         r0, r4
  00048	eb000000	 bl          |?DeallocateBuffer@CPinDevice@@AAAKPAU_tagStreamDescriptor@@@Z|

; 621  : 
; 622  :         default:
; 623  :             break;

  0004c	ea000015	 b           |$LN7@PinHandleB|
  00050		 |$LN3@PinHandleB|

; 613  :             break;
; 614  : 
; 615  :         case CS_ENQUEUE:
; 616  :             dwError = EnqueueDescriptor( csBufferInfo.pStreamDescriptor );

  00050	e1a01005	 mov         r1, r5
  00054	e1a00004	 mov         r0, r4
  00058	eb000000	 bl          |?EnqueueDescriptor@CPinDevice@@AAAKPAU_tagStreamDescriptor@@@Z|

; 617  :             break;

  0005c	ea000011	 b           |$LN7@PinHandleB|
  00060		 |$LN6@PinHandleB|

; 601  :     {
; 602  :         case CS_ALLOCATE:
; 603  :             // Let's allocate our resources
; 604  :             if( m_pStreamDescriptorList == NULL )

  00060	e5943060	 ldr         r3, [r4, #0x60]
  00064	e3530000	 cmp         r3, #0
  00068	1a000008	 bne         |$LN4@PinHandleB|

; 605  :             {
; 606  :                 m_pStreamDescriptorList = (PCS_STREAM_DESCRIPTOR_SHADOW) LocalAlloc( LMEM_ZEROINIT, sizeof( CS_STREAM_DESCRIPTOR_SHADOW ) * m_ulMaxNumOfBuffers );

  0006c	e594301c	 ldr         r3, [r4, #0x1C]
  00070	e3a00040	 mov         r0, #0x40
  00074	e0833183	 add         r3, r3, r3, lsl #3
  00078	e1a01203	 mov         r1, r3, lsl #4
  0007c	eb000000	 bl          LocalAlloc
  00080	e3500000	 cmp         r0, #0
  00084	e5840060	 str         r0, [r4, #0x60]

; 607  :                 if( NULL == m_pStreamDescriptorList )
; 608  :                     return ERROR_OUTOFMEMORY;

  00088	03a0000e	 moveq       r0, #0xE
  0008c	0a000005	 beq         |$LN7@PinHandleB|
  00090		 |$LN4@PinHandleB|

; 609  :             }
; 610  : 
; 611  : 
; 612  :             dwError = AllocateBuffer( csBufferInfo.pStreamDescriptor, pOutBuf, OutBufLen, pdwBytesTransferred );

  00090	e59d3018	 ldr         r3, [sp, #0x18]
  00094	e1a02007	 mov         r2, r7
  00098	e1a01005	 mov         r1, r5
  0009c	e1a00004	 mov         r0, r4
  000a0	e58d6000	 str         r6, [sp]
  000a4	eb000000	 bl          |?AllocateBuffer@CPinDevice@@AAAKPAU_tagStreamDescriptor@@PAXKPAK@Z|
  000a8		 |$LN7@PinHandleB|

; 624  :     }
; 625  : 
; 626  :     return dwError;
; 627  : }

  000a8	e28dd004	 add         sp, sp, #4
  000ac	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  000b0	e12fff1e	 bx          lr
  000b4		 |$M36025|

			 ENDP  ; |?PinHandleBufferRequest@CPinDevice@@QAAKU_tagCSBUFFER_Info@@PAEKPAK@Z|, CPinDevice::PinHandleBufferRequest

	END
