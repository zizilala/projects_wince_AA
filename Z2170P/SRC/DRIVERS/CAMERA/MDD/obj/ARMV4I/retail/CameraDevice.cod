; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\EVM_OMAP3530\SRC\DRIVERS\CAMERA\MDD\CameraDevice.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.rdata|, DATA, READONLY
|g_wszPinNames| DCB "C", 0x0, "a", 0x0, "p", 0x0, "t", 0x0, "u", 0x0, "r", 0x0
	DCB	"e", 0x0, 0x0, 0x0
	%	4
	DCB	"S", 0x0, "t", 0x0, "i", 0x0, "l", 0x0, "l", 0x0, 0x0, 0x0
	%	8
	DCB	"P", 0x0, "r", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "e", 0x0
	DCB	"w", 0x0, 0x0, 0x0
	%	4
|g_wszPinDeviceNames| DCB "P", 0x0, "I", 0x0, "N", 0x0, "1", 0x0, ":", 0x0
	DCB	0x0, 0x0
	%	8
	DCB	"P", 0x0, "I", 0x0, "N", 0x0, "1", 0x0, ":", 0x0, 0x0, 0x0
	%	8
	DCB	"P", 0x0, "I", 0x0, "N", 0x0, "1", 0x0, ":", 0x0, 0x0, 0x0
	%	8
	EXPORT	|?IsEqualGUID@@YAHABU_GUID@@0@Z|	; IsEqualGUID
	IMPORT	|memcmp|
; File c:\wince600\public\common\sdk\inc\objbase.h

  00000			 AREA	 |.pdata|, PDATA
|$T35538| DCD	|$LN7@IsEqualGUI|
	DCD	0x40000901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsEqualGUID@@YAHABU_GUID@@0@Z| PROC	; IsEqualGUID

; 493  : {

  00000		 |$LN7@IsEqualGUI|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35535|

; 494  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00004	e3a02010	 mov         r2, #0x10
  00008	eb000000	 bl          memcmp
  0000c	e3500000	 cmp         r0, #0
  00010	03a00001	 moveq       r0, #1

; 495  : }

  00014	049de004	 ldreq       lr, [sp], #4

; 494  :     return !memcmp(&rguid1, &rguid2, sizeof(GUID));

  00018	13a00000	 movne       r0, #0

; 495  : }

  0001c	149de004	 ldrne       lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$M35536|

			 ENDP  ; |?IsEqualGUID@@YAHABU_GUID@@0@Z|, IsEqualGUID

	EXPORT	|MDD_HandleIO|
	IMPORT	|?HandlePinIO@CPinDevice@@QAAKXZ|	; CPinDevice::HandlePinIO
; File c:\wince600\platform\evm_omap3530\src\drivers\camera\mdd\cameradevice.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T35548| DCD	|$LN6@MDD_Handle|
	DCD	0x40000801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |MDD_HandleIO| PROC

; 36   : {

  00000		 |$LN6@MDD_Handle|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35545|
  00004	e3500000	 cmp         r0, #0

; 37   :     UNREFERENCED_PARAMETER(ulModeType);
; 38   : 
; 39   :     PPINDEVICE pPinDevice = (PPINDEVICE)ModeContext;
; 40   :     if( NULL == pPinDevice )
; 41   :     {
; 42   :         return ERROR_INVALID_PARAMETER;

  00008	03a00057	 moveq       r0, #0x57

; 45   : }

  0000c	049de004	 ldreq       lr, [sp], #4
  00010	012fff1e	 bxeq        lr

; 43   :     }
; 44   :     return pPinDevice->HandlePinIO() ;

  00014	eb000000	 bl          |?HandlePinIO@CPinDevice@@QAAKXZ|

; 45   : }

  00018	e49de004	 ldr         lr, [sp], #4
  0001c	e12fff1e	 bx          lr
  00020		 |$M35546|

			 ENDP  ; |MDD_HandleIO|

	EXPORT	|??0CCameraDevice@@QAA@XZ|		; CCameraDevice::CCameraDevice
	IMPORT	|InitializeCriticalSection|
	IMPORT	|memset|

  00000			 AREA	 |.pdata|, PDATA
|$T35559| DCD	|$LN5@CCameraDev|
	DCD	0x40001601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??0CCameraDevice@@QAA@XZ| PROC	; CCameraDevice::CCameraDevice

; 48   : {

  00000		 |$LN5@CCameraDev|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M35556|
  00004	e1a04000	 mov         r4, r0

; 49   :     m_hStream        = NULL;

  00008	e3a05000	 mov         r5, #0

; 50   :     m_hCallerProcess = NULL;
; 51   : 
; 52   :     m_dwVersion = 0;
; 53   :     m_PowerState = D0;
; 54   :     m_PDDContext = NULL;
; 55   : 
; 56   :     memset(&m_PDDFuncTbl, 0, sizeof(PDDFUNCTBL) );

  0000c	e3a02050	 mov         r2, #0x50
  00010	e3a01000	 mov         r1, #0
  00014	e2840faa	 add         r0, r4, #0xAA, 30
  00018	e5845014	 str         r5, [r4, #0x14]
  0001c	e5845018	 str         r5, [r4, #0x18]
  00020	e584501c	 str         r5, [r4, #0x1C]
  00024	e5845020	 str         r5, [r4, #0x20]
  00028	e58452a4	 str         r5, [r4, #0x2A4]
  0002c	eb000000	 bl          memset

; 57   :     memset( &m_AdapterInfo, 0, sizeof(ADAPTERINFO ));

  00030	e3a02f9f	 mov         r2, #0x9F, 30
  00034	e3a01000	 mov         r1, #0
  00038	e2840028	 add         r0, r4, #0x28
  0003c	eb000000	 bl          memset

; 58   :     InitializeCriticalSection( &m_csDevice );

  00040	e1a00004	 mov         r0, r4
  00044	eb000000	 bl          InitializeCriticalSection

; 59   :     m_pStrmInstances = NULL;

  00048	e5845024	 str         r5, [r4, #0x24]

; 60   : }

  0004c	e1a00004	 mov         r0, r4
  00050	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$M35557|

			 ENDP  ; |??0CCameraDevice@@QAA@XZ|, CCameraDevice::CCameraDevice

	EXPORT	|??1CCameraDevice@@QAA@XZ|		; CCameraDevice::~CCameraDevice
	IMPORT	|DeactivateDevice|
	IMPORT	|??3@YAXPAX@Z|				; operator delete
	IMPORT	|DeleteCriticalSection|

  00000			 AREA	 |.pdata|, PDATA
|$T35568| DCD	|$LN7@CCameraDev@2|
	DCD	0x40001601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |??1CCameraDevice@@QAA@XZ| PROC	; CCameraDevice::~CCameraDevice

; 64   : {

  00000		 |$LN7@CCameraDev@2|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M35565|
  00004	e1a04000	 mov         r4, r0

; 65   :     DeleteCriticalSection( &m_csDevice );

  00008	eb000000	 bl          DeleteCriticalSection

; 66   : 
; 67   :     m_PDDFuncTbl.PDD_DeInit( m_PDDContext );

  0000c	e59402a4	 ldr         r0, [r4, #0x2A4]
  00010	e59432b0	 ldr         r3, [r4, #0x2B0]
  00014	e1a0e00f	 mov         lr, pc
  00018	e12fff13	 bx          r3

; 68   : 
; 69   :     if( NULL != m_pStrmInstances )

  0001c	e5943024	 ldr         r3, [r4, #0x24]
  00020	e3a05000	 mov         r5, #0
  00024	e3530000	 cmp         r3, #0
  00028	0a000002	 beq         |$LN2@CCameraDev@2|

; 70   :     {
; 71   :         delete [] m_pStrmInstances;

  0002c	e1a00003	 mov         r0, r3
  00030	eb000000	 bl          |??3@YAXPAX@Z|

; 72   :         m_pStrmInstances = NULL;

  00034	e5845024	 str         r5, [r4, #0x24]
  00038		 |$LN2@CCameraDev@2|

; 73   :     }
; 74   : 
; 75   :     if ( NULL != m_hStream )

  00038	e5943014	 ldr         r3, [r4, #0x14]
  0003c	e3530000	 cmp         r3, #0
  00040	0a000002	 beq         |$LN1@CCameraDev@2|

; 76   :     {
; 77   :         DeactivateDevice( m_hStream );

  00044	e1a00003	 mov         r0, r3
  00048	eb000000	 bl          DeactivateDevice

; 78   :         m_hStream = NULL;

  0004c	e5845014	 str         r5, [r4, #0x14]
  00050		 |$LN1@CCameraDev@2|

; 79   :     }
; 80   : }

  00050	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00054	e12fff1e	 bx          lr
  00058		 |$M35566|

			 ENDP  ; |??1CCameraDevice@@QAA@XZ|, CCameraDevice::~CCameraDevice

	EXPORT	|?BindApplicationProc@CCameraDevice@@QAA_NPAX@Z| ; CCameraDevice::BindApplicationProc

  00000			 AREA	 |.pdata|, PDATA
|$T35579| DCD	|$LN6@BindApplic|
	DCD	0x40000600
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?BindApplicationProc@CCameraDevice@@QAA_NPAX@Z| PROC ; CCameraDevice::BindApplicationProc

; 194  : {

  00000		 |$LN6@BindApplic|
  00000		 |$M35576|

; 195  :     if ( NULL != m_hCallerProcess )

  00000	e5903018	 ldr         r3, [r0, #0x18]
  00004	e3530000	 cmp         r3, #0

; 196  :     {
; 197  :         return false;

  00008	13a00000	 movne       r0, #0

; 198  :     }
; 199  : 
; 200  :     m_hCallerProcess = hCurrentProc;

  0000c	05801018	 streq       r1, [r0, #0x18]

; 201  : 
; 202  :     return true;

  00010	03a00001	 moveq       r0, #1

; 203  : }

  00014	e12fff1e	 bx          lr
  00018		 |$M35577|

			 ENDP  ; |?BindApplicationProc@CCameraDevice@@QAA_NPAX@Z|, CCameraDevice::BindApplicationProc

	EXPORT	|?UnBindApplicationProc@CCameraDevice@@QAA_NXZ| ; CCameraDevice::UnBindApplicationProc
	EXPORT	|??_C@_1GG@GMPIGLJL@?$AAC?$AAA?$AAM?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?3?$AA?5?$AAU?$AAn?$AAb?$AAi?$AAn?$AAd?$AA?5?$AAa?$AAp?$AAp?$AAl?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAr@| [ DATA ] ; `string'
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|

  00000			 AREA	 |.pdata|, PDATA
|$T35591| DCD	|$LN7@UnBindAppl|
	DCD	0x40000e01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@GMPIGLJL@?$AAC?$AAA?$AAM?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?3?$AA?5?$AAU?$AAn?$AAb?$AAi?$AAn?$AAd?$AA?5?$AAa?$AAp?$AAp?$AAl?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAr@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, "_", 0x0, "C", 0x0, "l", 0x0, "o"
	DCB	0x0, "s", 0x0, "e", 0x0, ":", 0x0, " ", 0x0, "U", 0x0, "n"
	DCB	0x0, "b", 0x0, "i", 0x0, "n", 0x0, "d", 0x0, " ", 0x0, "a"
	DCB	0x0, "p", 0x0, "p", 0x0, "l", 0x0, "i", 0x0, "c", 0x0, "a"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "f"
	DCB	0x0, "r", 0x0, "o", 0x0, "m", 0x0, " ", 0x0, "c", 0x0, "a"
	DCB	0x0, "m", 0x0, "e", 0x0, "r", 0x0, "a", 0x0, " ", 0x0, "d"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UnBindApplicationProc@CCameraDevice@@QAA_NXZ| PROC ; CCameraDevice::UnBindApplicationProc

; 208  : {

  00000		 |$LN7@UnBindAppl|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M35588|
  00004	e1a04000	 mov         r4, r0

; 209  :     DEBUGMSG( ZONE_FUNCTION, ( _T("CAM_Close: Unbind application from camera device\r\n") ) );

  00008	e59f3024	 ldr         r3, [pc, #0x24]
  0000c	e5933440	 ldr         r3, [r3, #0x440]
  00010	e3130008	 tst         r3, #8
  00014	159f0014	 ldrne       r0, [pc, #0x14]
  00018	1b000000	 blne        NKDbgPrintfW

; 210  : 
; 211  :     m_hCallerProcess = NULL;

  0001c	e3a03000	 mov         r3, #0
  00020	e5843018	 str         r3, [r4, #0x18]

; 212  : 
; 213  :     return true;

  00024	e3a00001	 mov         r0, #1

; 214  : }

  00028	e8bd4010	 ldmia       sp!, {r4, lr}
  0002c	e12fff1e	 bx          lr
  00030		 |$LN8@UnBindAppl|
  00030		 |$LN9@UnBindAppl|
  00030	00000000	 DCD         |??_C@_1GG@GMPIGLJL@?$AAC?$AAA?$AAM?$AA_?$AAC?$AAl?$AAo?$AAs?$AAe?$AA?3?$AA?5?$AAU?$AAn?$AAb?$AAi?$AAn?$AAd?$AA?5?$AAa?$AAp?$AAp?$AAl?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAf?$AAr@|
  00034		 |$LN10@UnBindAppl|
  00034	00000000	 DCD         |dpCurSettings|
  00038		 |$M35589|

			 ENDP  ; |?UnBindApplicationProc@CCameraDevice@@QAA_NXZ|, CCameraDevice::UnBindApplicationProc

	EXPORT	|?IsValidPin@CCameraDevice@@QAA_NK@Z|	; CCameraDevice::IsValidPin

  00000			 AREA	 |.pdata|, PDATA
|$T35605| DCD	|$LN6@IsValidPin|
	DCD	0x40000500
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsValidPin@CCameraDevice@@QAA_NK@Z| PROC ; CCameraDevice::IsValidPin

; 220  : {

  00000		 |$LN6@IsValidPin|
  00000		 |$M35602|

; 221  :     if ( ulPinId >= m_AdapterInfo.ulCTypes )

  00000	e590302c	 ldr         r3, [r0, #0x2C]
  00004	e1510003	 cmp         r1, r3

; 222  :     {
; 223  :         return false;

  00008	23a00000	 movcs       r0, #0

; 224  :     }
; 225  : 
; 226  :     return true;

  0000c	33a00001	 movcc       r0, #1

; 227  : }

  00010	e12fff1e	 bx          lr
  00014		 |$M35603|

			 ENDP  ; |?IsValidPin@CCameraDevice@@QAA_NK@Z|, CCameraDevice::IsValidPin

	EXPORT	|?IncrCInstances@CCameraDevice@@QAA_NKPAVCPinDevice@@@Z| ; CCameraDevice::IncrCInstances

  00000			 AREA	 |.pdata|, PDATA
|$T35625| DCD	|$LN10@IncrCInsta|
	DCD	0x40001501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IncrCInstances@CCameraDevice@@QAA_NKPAVCPinDevice@@@Z| PROC ; CCameraDevice::IncrCInstances

; 234  : {

  00000		 |$LN10@IncrCInsta|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35622|
  00004	e1a0e002	 mov         lr, r2
  00008	e1a02000	 mov         r2, r0

; 235  :     bool bRet = false;
; 236  : 
; 237  :     if( IsValidPin( ulPinId ) )

  0000c	e592302c	 ldr         r3, [r2, #0x2C]
  00010	e3a00000	 mov         r0, #0
  00014	e1510003	 cmp         r1, r3
  00018	23a03000	 movcs       r3, #0
  0001c	33a03001	 movcc       r3, #1
  00020	e3530000	 cmp         r3, #0
  00024	0a000008	 beq         |$LN1@IncrCInsta|

; 238  :     {
; 239  :         PSTREAM_INSTANCES pStreamInst = &m_pStrmInstances[ulPinId];

  00028	e5923024	 ldr         r3, [r2, #0x24]
  0002c	e0832281	 add         r2, r3, r1, lsl #5

; 240  :         if( pStreamInst->ulCInstances < pStreamInst->ulPossibleCount )

  00030	e5921004	 ldr         r1, [r2, #4]
  00034	e5923008	 ldr         r3, [r2, #8]
  00038	e1510003	 cmp         r1, r3

; 241  :         {
; 242  :             pStreamInst->ulCInstances++;

  0003c	32813001	 addcc       r3, r1, #1
  00040	35823004	 strcc       r3, [r2, #4]

; 243  : // Need to fix this is memory leak...
; 244  :             pStreamInst->pPinDev = pPinDev;

  00044	3582e01c	 strcc       lr, [r2, #0x1C]

; 245  :             bRet = true;

  00048	33a00001	 movcc       r0, #1
  0004c		 |$LN1@IncrCInsta|

; 246  :         }
; 247  : 
; 248  :     }
; 249  : 
; 250  :     return bRet;
; 251  : }

  0004c	e49de004	 ldr         lr, [sp], #4
  00050	e12fff1e	 bx          lr
  00054		 |$M35623|

			 ENDP  ; |?IncrCInstances@CCameraDevice@@QAA_NKPAVCPinDevice@@@Z|, CCameraDevice::IncrCInstances

	EXPORT	|?DecrCInstances@CCameraDevice@@QAA_NK@Z| ; CCameraDevice::DecrCInstances

  00000			 AREA	 |.pdata|, PDATA
|$T35644| DCD	|$LN10@DecrCInsta|
	DCD	0x40001100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DecrCInstances@CCameraDevice@@QAA_NK@Z| PROC ; CCameraDevice::DecrCInstances

; 257  : {

  00000		 |$LN10@DecrCInsta|
  00000		 |$M35641|
  00000	e1a02000	 mov         r2, r0

; 258  :     bool bRet = false;
; 259  : 
; 260  :     if( IsValidPin( ulPinId ) )

  00004	e592302c	 ldr         r3, [r2, #0x2C]
  00008	e3a00000	 mov         r0, #0
  0000c	e1510003	 cmp         r1, r3
  00010	23a03000	 movcs       r3, #0
  00014	33a03001	 movcc       r3, #1
  00018	e3530000	 cmp         r3, #0

; 261  :     {
; 262  :         PSTREAM_INSTANCES pStreamInst = &m_pStrmInstances[ulPinId];

  0001c	15923024	 ldrne       r3, [r2, #0x24]
  00020	10832281	 addne       r2, r3, r1, lsl #5

; 263  :         if( 0 < pStreamInst->ulCInstances )

  00024	15923004	 ldrne       r3, [r2, #4]
  00028	13530000	 cmpne       r3, #0

; 264  :         {
; 265  :             pStreamInst->ulCInstances--;

  0002c	12433001	 subne       r3, r3, #1

; 266  : // Need fix this memory leak...
; 267  :             pStreamInst->pPinDev = NULL;

  00030	13a01000	 movne       r1, #0
  00034	15823004	 strne       r3, [r2, #4]
  00038	1582101c	 strne       r1, [r2, #0x1C]

; 268  :             bRet = true;

  0003c	13a00001	 movne       r0, #1

; 269  :         }
; 270  :     }
; 271  :     return bRet;
; 272  : }

  00040	e12fff1e	 bx          lr
  00044		 |$M35642|

			 ENDP  ; |?DecrCInstances@CCameraDevice@@QAA_NK@Z|, CCameraDevice::DecrCInstances

	EXPORT	|?PauseCaptureAndPreview@CCameraDevice@@QAA_NXZ| ; CCameraDevice::PauseCaptureAndPreview
	IMPORT	|?SetState@CPinDevice@@QAAXW4CSSTATE@@PAW42@@Z| ; CPinDevice::SetState

  00000			 AREA	 |.pdata|, PDATA
|$T35654| DCD	|$LN8@PauseCaptu|
	DCD	0x40001801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PauseCaptureAndPreview@CCameraDevice@@QAA_NXZ| PROC ; CCameraDevice::PauseCaptureAndPreview

; 276  : {

  00000		 |$LN8@PauseCaptu|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M35651|
  00004	e1a04000	 mov         r4, r0

; 277  :     if ( PREVIEW < m_AdapterInfo.ulCTypes )

  00008	e594302c	 ldr         r3, [r4, #0x2C]
  0000c	e3530001	 cmp         r3, #1
  00010	9a000007	 bls         |$LN2@PauseCaptu|

; 278  :     {
; 279  :         if ( NULL != m_pStrmInstances[PREVIEW].pPinDev )

  00014	e5943024	 ldr         r3, [r4, #0x24]
  00018	e593303c	 ldr         r3, [r3, #0x3C]
  0001c	e3530000	 cmp         r3, #0

; 280  :         {
; 281  :             m_pStrmInstances[PREVIEW].pPinDev->SetState( CSSTATE_PAUSE, &m_pStrmInstances[PREVIEW].CsPrevState );

  00020	15943024	 ldrne       r3, [r4, #0x24]
  00024	13a01001	 movne       r1, #1
  00028	1593003c	 ldrne       r0, [r3, #0x3C]
  0002c	1283202c	 addne       r2, r3, #0x2C
  00030	1b000000	 blne        |?SetState@CPinDevice@@QAAXW4CSSTATE@@PAW42@@Z|
  00034		 |$LN2@PauseCaptu|

; 282  :         }
; 283  :     }
; 284  : 
; 285  :     if ( NULL != m_pStrmInstances[CAPTURE].pPinDev )

  00034	e5943024	 ldr         r3, [r4, #0x24]
  00038	e593301c	 ldr         r3, [r3, #0x1C]
  0003c	e3530000	 cmp         r3, #0

; 286  :     {
; 287  :         m_pStrmInstances[CAPTURE].pPinDev->SetState( CSSTATE_PAUSE, &m_pStrmInstances[CAPTURE].CsPrevState );

  00040	15943024	 ldrne       r3, [r4, #0x24]
  00044	13a01001	 movne       r1, #1
  00048	1593001c	 ldrne       r0, [r3, #0x1C]
  0004c	1283200c	 addne       r2, r3, #0xC
  00050	1b000000	 blne        |?SetState@CPinDevice@@QAAXW4CSSTATE@@PAW42@@Z|

; 288  :     }
; 289  : 
; 290  :     return true;

  00054	e3a00001	 mov         r0, #1

; 291  : }

  00058	e8bd4010	 ldmia       sp!, {r4, lr}
  0005c	e12fff1e	 bx          lr
  00060		 |$M35652|

			 ENDP  ; |?PauseCaptureAndPreview@CCameraDevice@@QAA_NXZ|, CCameraDevice::PauseCaptureAndPreview

	EXPORT	|?RevertCaptureAndPreviewState@CCameraDevice@@QAA_NXZ| ; CCameraDevice::RevertCaptureAndPreviewState

  00000			 AREA	 |.pdata|, PDATA
|$T35664| DCD	|$LN6@RevertCapt|
	DCD	0x40001101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RevertCaptureAndPreviewState@CCameraDevice@@QAA_NXZ| PROC ; CCameraDevice::RevertCaptureAndPreviewState

; 295  : {

  00000		 |$LN6@RevertCapt|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M35661|
  00004	e1a04000	 mov         r4, r0

; 296  :     if ( PREVIEW < m_AdapterInfo.ulCTypes )

  00008	e594302c	 ldr         r3, [r4, #0x2C]
  0000c	e3530001	 cmp         r3, #1

; 297  :     {
; 298  :         m_pStrmInstances[PREVIEW].pPinDev->SetState( m_pStrmInstances[PREVIEW].CsPrevState, NULL );

  00010	85943024	 ldrhi       r3, [r4, #0x24]
  00014	83a02000	 movhi       r2, #0
  00018	8593102c	 ldrhi       r1, [r3, #0x2C]
  0001c	8593003c	 ldrhi       r0, [r3, #0x3C]
  00020	8b000000	 blhi        |?SetState@CPinDevice@@QAAXW4CSSTATE@@PAW42@@Z|

; 299  :     }
; 300  : 
; 301  :     m_pStrmInstances[CAPTURE].pPinDev->SetState( m_pStrmInstances[CAPTURE].CsPrevState, NULL );

  00024	e5943024	 ldr         r3, [r4, #0x24]
  00028	e3a02000	 mov         r2, #0
  0002c	e593100c	 ldr         r1, [r3, #0xC]
  00030	e593001c	 ldr         r0, [r3, #0x1C]
  00034	eb000000	 bl          |?SetState@CPinDevice@@QAAXW4CSSTATE@@PAW42@@Z|

; 302  : 
; 303  :     return true;

  00038	e3a00001	 mov         r0, #1

; 304  : }

  0003c	e8bd4010	 ldmia       sp!, {r4, lr}
  00040	e12fff1e	 bx          lr
  00044		 |$M35662|

			 ENDP  ; |?RevertCaptureAndPreviewState@CCameraDevice@@QAA_NXZ|, CCameraDevice::RevertCaptureAndPreviewState

	EXPORT	|?GetPinFormat@CCameraDevice@@QAA_NKKPAPAUtagCS_DATARANGE_VIDEO@@@Z| ; CCameraDevice::GetPinFormat

  00000			 AREA	 |.pdata|, PDATA
|$T35683| DCD	|$LN11@GetPinForm|
	DCD	0x40001901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPinFormat@CCameraDevice@@QAA_NKKPAPAUtagCS_DATARANGE_VIDEO@@@Z| PROC ; CCameraDevice::GetPinFormat

; 313  : {

  00000		 |$LN11@GetPinForm|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M35680|
  00004	e1a04003	 mov         r4, r3

; 314  :     if( false == IsValidPin( ulPinId ) )

  00008	e590e02c	 ldr         lr, [r0, #0x2C]
  0000c	e151000e	 cmp         r1, lr
  00010	23a0e000	 movcs       lr, #0
  00014	33a0e001	 movcc       lr, #1
  00018	e35e0000	 cmp         lr, #0

; 315  :     {
; 316  :         return false;

  0001c	0a00000d	 beq         |$LN1@GetPinForm|

; 317  :     }
; 318  : 
; 319  :     if ( 0 >= ulIndex || ulIndex > m_pStrmInstances[ulPinId].pVideoFormat->ulAvailFormats )

  00020	e3520000	 cmp         r2, #0
  00024	0a00000b	 beq         |$LN1@GetPinForm|
  00028	e5903024	 ldr         r3, [r0, #0x24]
  0002c	e0833281	 add         r3, r3, r1, lsl #5
  00030	e5931018	 ldr         r1, [r3, #0x18]
  00034	e5913010	 ldr         r3, [r1, #0x10]
  00038	e1520003	 cmp         r2, r3

; 322  :     }
; 323  : 
; 324  :     *ppCsDataRangeVid = m_pStrmInstances[ulPinId].pVideoFormat->pCsDataRangeVideo[ulIndex-1];

  0003c	95913014	 ldrls       r3, [r1, #0x14]

; 325  : 
; 326  :     return true;

  00040	93a00001	 movls       r0, #1
  00044	90833102	 addls       r3, r3, r2, lsl #2
  00048	95133004	 ldrls       r3, [r3, #-4]
  0004c	95843000	 strls       r3, [r4]

; 327  : }

  00050	98bd4010	 ldmlsia     sp!, {r4, lr}
  00054	912fff1e	 bxls        lr
  00058		 |$LN1@GetPinForm|

; 320  :     {
; 321  :         return false;

  00058	e3a00000	 mov         r0, #0

; 327  : }

  0005c	e8bd4010	 ldmia       sp!, {r4, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$M35681|

			 ENDP  ; |?GetPinFormat@CCameraDevice@@QAA_NKKPAPAUtagCS_DATARANGE_VIDEO@@@Z|, CCameraDevice::GetPinFormat

	EXPORT	|?AdapterCompareGUIDsAndFormatSize@CCameraDevice@@AAA_NQATCSDATAFORMAT@@0@Z| ; CCameraDevice::AdapterCompareGUIDsAndFormatSize
; File c:\wince600\public\common\sdk\inc\objbase.h

  00000			 AREA	 |.pdata|, PDATA
|$T35720| DCD	|$LN22@AdapterCom|
	DCD	0x40001a01
; Function compile flags: /Ogspy
; File c:\wince600\platform\evm_omap3530\src\drivers\camera\mdd\cameradevice.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AdapterCompareGUIDsAndFormatSize@CCameraDevice@@AAA_NQATCSDATAFORMAT@@0@Z| PROC ; CCameraDevice::AdapterCompareGUIDsAndFormatSize

; 437  : {

  00000		 |$LN22@AdapterCom|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M35717|
  00004	e1a04002	 mov         r4, r2
  00008	e1a05001	 mov         r5, r1

; 438  :     return ( IsEqualGUID( DataRange1->MajorFormat, DataRange2->MajorFormat )
; 439  :              && IsEqualGUID( DataRange1->SubFormat, DataRange2->SubFormat )
; 440  :              && IsEqualGUID( DataRange1->Specifier, DataRange2->Specifier ) );

  0000c	e3a02010	 mov         r2, #0x10
  00010	e2841010	 add         r1, r4, #0x10
  00014	e2850010	 add         r0, r5, #0x10
  00018	eb000000	 bl          memcmp
  0001c	e3500000	 cmp         r0, #0
  00020	1a00000c	 bne         |$LN3@AdapterCom|
  00024	e3a02010	 mov         r2, #0x10
  00028	e2841020	 add         r1, r4, #0x20
  0002c	e2850020	 add         r0, r5, #0x20
  00030	eb000000	 bl          memcmp
  00034	e3500000	 cmp         r0, #0
  00038	1a000006	 bne         |$LN3@AdapterCom|
  0003c	e3a02010	 mov         r2, #0x10
  00040	e2841030	 add         r1, r4, #0x30
  00044	e2850030	 add         r0, r5, #0x30
  00048	eb000000	 bl          memcmp
  0004c	e3500000	 cmp         r0, #0
  00050	03a03001	 moveq       r3, #1
  00054	0a000000	 beq         |$LN4@AdapterCom|
  00058		 |$LN3@AdapterCom|
  00058	e3a03000	 mov         r3, #0
  0005c		 |$LN4@AdapterCom|
  0005c	e20300ff	 and         r0, r3, #0xFF

; 441  : }

  00060	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00064	e12fff1e	 bx          lr
  00068		 |$M35718|

			 ENDP  ; |?AdapterCompareGUIDsAndFormatSize@CCameraDevice@@AAA_NQATCSDATAFORMAT@@0@Z|, CCameraDevice::AdapterCompareGUIDsAndFormatSize

	EXPORT	|?ValidateBuffer@CCameraDevice@@QAAPAXPAXKKPAK@Z| ; CCameraDevice::ValidateBuffer
	EXPORT	|??_C@_1FM@JEBDMAGF@?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAi?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAl@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T35735| DCD	|$LN9@ValidateBu|
	DCD	0x40001501

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@JEBDMAGF@?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAi?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAl@| DCB "I"
	DCB	0x0, "O", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8"
	DCB	0x0, "x", 0x0, ")", 0x0, ":", 0x0, " ", 0x0, "b", 0x0, "u"
	DCB	0x0, "f", 0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "i"
	DCB	0x0, "s", 0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, " "
	DCB	0x0, "l", 0x0, "a", 0x0, "r", 0x0, "g", 0x0, "e", 0x0, " "
	DCB	0x0, "e", 0x0, "n", 0x0, "o", 0x0, "u", 0x0, "g", 0x0, "h"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?ValidateBuffer@CCameraDevice@@QAAPAXPAXKKPAK@Z| PROC ; CCameraDevice::ValidateBuffer

; 451  : {

  00000		 |$LN9@ValidateBu|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35732|
  00004	e3510000	 cmp         r1, #0
  00008	e1a0e000	 mov         lr, r0

; 452  :     if ( NULL == lpBuff )
; 453  :     {
; 454  :         *dwError = ERROR_INSUFFICIENT_BUFFER;
; 455  : 
; 456  :         return NULL;

  0000c	0a000007	 beq         |$LN5@ValidateBu|

; 457  :     }
; 458  : 
; 459  :     if ( ulActualBufLen < ulExpectedBuffLen )

  00010	e1520003	 cmp         r2, r3
  00014	2a000009	 bcs         |$LN1@ValidateBu|

; 460  :     {
; 461  :         DEBUGMSG( ZONE_IOCTL|ZONE_ERROR, (_T("IOControl(%08x): buffer is not large enough\r\n"), this ) );

  00018	e59f3030	 ldr         r3, [pc, #0x30]
  0001c	e5933440	 ldr         r3, [r3, #0x440]
  00020	e3130011	 tst         r3, #0x11
  00024	159f0020	 ldrne       r0, [pc, #0x20]
  00028	11a0100e	 movne       r1, lr
  0002c	1b000000	 blne        NKDbgPrintfW
  00030		 |$LN5@ValidateBu|

; 462  :         *dwError = ERROR_INSUFFICIENT_BUFFER;

  00030	e59d3004	 ldr         r3, [sp, #4]
  00034	e3a0207a	 mov         r2, #0x7A

; 463  : 
; 464  :         return NULL;

  00038	e3a01000	 mov         r1, #0
  0003c	e5832000	 str         r2, [r3]
  00040		 |$LN1@ValidateBu|

; 465  :     }
; 466  : 
; 467  : 
; 468  :     //If the size is good, just return the buffer passed in
; 469  :     return lpBuff;
; 470  : }

  00040	e1a00001	 mov         r0, r1
  00044	e49de004	 ldr         lr, [sp], #4
  00048	e12fff1e	 bx          lr
  0004c		 |$LN10@ValidateBu|
  0004c		 |$LN11@ValidateBu|
  0004c	00000000	 DCD         |??_C@_1FM@JEBDMAGF@?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAb?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?5?$AAi?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAl@|
  00050		 |$LN12@ValidateBu|
  00050	00000000	 DCD         |dpCurSettings|
  00054		 |$M35733|

			 ENDP  ; |?ValidateBuffer@CCameraDevice@@QAAPAXPAXKKPAK@Z|, CCameraDevice::ValidateBuffer

	EXPORT	|?AdapterHandleVersion@CCameraDevice@@QAAKPAEKPAK@Z| ; CCameraDevice::AdapterHandleVersion
	IMPORT	|CeSafeCopyMemory|

  00000			 AREA	 |.pdata|, PDATA
|$T35751| DCD	|$LN7@AdapterHan|
	DCD	0x40001301
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AdapterHandleVersion@CCameraDevice@@QAAKPAEKPAK@Z| PROC ; CCameraDevice::AdapterHandleVersion

; 479  : {

  00000		 |$LN7@AdapterHan|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35748|
  00004	e1a0e001	 mov         lr, r1

; 480  :     if( OutBufLen < sizeof( DWORD ))

  00008	e3520004	 cmp         r2, #4

; 481  :     {
; 482  :         return ERROR_INSUFFICIENT_BUFFER;

  0000c	33a0007a	 movcc       r0, #0x7A

; 493  : }

  00010	349de004	 ldrcc       lr, [sp], #4
  00014	312fff1e	 bxcc        lr

; 483  :     }
; 484  : 
; 485  :     *pdwBytesTransferred = sizeof( DWORD );

  00018	e3a02004	 mov         r2, #4
  0001c	e5832000	 str         r2, [r3]

; 486  : 
; 487  :     if( !CeSafeCopyMemory( pOutBuf, &m_dwVersion, sizeof( DWORD )))

  00020	e3a02004	 mov         r2, #4
  00024	e280101c	 add         r1, r0, #0x1C
  00028	e1a0000e	 mov         r0, lr
  0002c	eb000000	 bl          CeSafeCopyMemory
  00030	e3500000	 cmp         r0, #0
  00034	03a03c06	 moveq       r3, #6, 24

; 488  :     {
; 489  :         return ERROR_INVALID_USER_BUFFER;

  00038	038300f8	 orreq       r0, r3, #0xF8

; 493  : }

  0003c	049de004	 ldreq       lr, [sp], #4

; 490  :     }
; 491  : 
; 492  :     return ERROR_SUCCESS;

  00040	13a00000	 movne       r0, #0

; 493  : }

  00044	149de004	 ldrne       lr, [sp], #4
  00048	e12fff1e	 bx          lr
  0004c		 |$M35749|

			 ENDP  ; |?AdapterHandleVersion@CCameraDevice@@QAAKPAEKPAK@Z|, CCameraDevice::AdapterHandleVersion

	EXPORT	|?AdapterHandleDroppedFramesRequests@CCameraDevice@@QAAKPAEK0KPAK@Z| ; CCameraDevice::AdapterHandleDroppedFramesRequests
	EXPORT	|??_C@_1FA@MOHHPKCL@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAP?$AAr?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GG@FOPBAPNH@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAD?$AAr?$AAo?$AAp?$AAp@| [ DATA ] ; `string'
	IMPORT	|?FrameSize@CPinDevice@@QBAKXZ|		; CPinDevice::FrameSize
	IMPORT	|?FramesDropped@CPinDevice@@QBAKXZ|	; CPinDevice::FramesDropped
	IMPORT	|?PictureNumber@CPinDevice@@QBAKXZ|	; CPinDevice::PictureNumber
	IMPORT	|memcpy|

  00000			 AREA	 |.pdata|, PDATA
|$T35770| DCD	|$LN21@AdapterHan@2|
	DCD	0x40005402

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@MOHHPKCL@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAP?$AAr?$AAo@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "P", 0x0, "r"
	DCB	0x0, "o", 0x0, "p", 0x0, "e", 0x0, "r", 0x0, "t", 0x0, "y"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@FOPBAPNH@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAD?$AAr?$AAo?$AAp?$AAp@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "D", 0x0, "r", 0x0, "o", 0x0, "p"
	DCB	0x0, "p", 0x0, "e", 0x0, "d", 0x0, "F", 0x0, "r", 0x0, "a"
	DCB	0x0, "m", 0x0, "e", 0x0, "s", 0x0, "R", 0x0, "e", 0x0, "q"
	DCB	0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AdapterHandleDroppedFramesRequests@CCameraDevice@@QAAKPAEK0KPAK@Z| PROC ; CCameraDevice::AdapterHandleDroppedFramesRequests

; 1259 : {

  00000		 |$LN21@AdapterHan@2|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004	e24dd048	 sub         sp, sp, #0x48
  00008		 |$M35767|
  00008	e1a07003	 mov         r7, r3
  0000c	e1a08001	 mov         r8, r1
  00010	e1a05000	 mov         r5, r0

; 1260 :     UNREFERENCED_PARAMETER(InBufLen);
; 1261 : 
; 1262 :     // Note: This whole function is wrapped in a __try/__except block
; 1263 :     DEBUGMSG( ZONE_IOCTL, (_T("CAM_IOControl(%08x): HandleDroppedFramesRequests\r\n"), this ) );

  00014	e59f6130	 ldr         r6, [pc, #0x130]
  00018	e5962440	 ldr         r2, [r6, #0x440]
  0001c	e3120010	 tst         r2, #0x10
  00020	159f0120	 ldrne       r0, [pc, #0x120]
  00024	11a01005	 movne       r1, r5
  00028	1b000000	 blne        NKDbgPrintfW

; 1264 : 
; 1265 :     DWORD dwError = ERROR_INVALID_PARAMETER;
; 1266 : 
; 1267 :     CSPROPERTY csProp;
; 1268 :     CSPROPERTY_DROPPEDFRAMES_CURRENT_S csPropDroppedFramesOutput = {0};

  0002c	e3a03000	 mov         r3, #0
  00030	e3a0202c	 mov         r2, #0x2C
  00034	e3a01000	 mov         r1, #0
  00038	e28d001c	 add         r0, sp, #0x1C
  0003c	e58d3018	 str         r3, [sp, #0x18]
  00040	e3a04057	 mov         r4, #0x57
  00044	eb000000	 bl          memset

; 1269 : 
; 1270 :     //if( !CeSafeCopyMemory( &csProp, pInBuf, InBufLen ))
; 1271 :     if( !CeSafeCopyMemory( &csProp, pInBuf, sizeof(CSPROPERTY)) )

  00048	e3a02018	 mov         r2, #0x18
  0004c	e1a01008	 mov         r1, r8
  00050	e28d0000	 add         r0, sp, #0
  00054	eb000000	 bl          CeSafeCopyMemory
  00058	e3500000	 cmp         r0, #0

; 1272 :     {
; 1273 :         return dwError;

  0005c	03a04057	 moveq       r4, #0x57
  00060	0a000033	 beq         |$LN17@AdapterHan@2|

; 1274 :     }
; 1275 : 
; 1276 :     *pdwBytesTransferred = 0;

  00064	e59d2064	 ldr         r2, [sp, #0x64]

; 1277 : 
; 1278 :     switch( csProp.Id )

  00068	e59d3010	 ldr         r3, [sp, #0x10]
  0006c	e3a01000	 mov         r1, #0
  00070	e5821000	 str         r1, [r2]
  00074	e3530000	 cmp         r3, #0
  00078	1a000028	 bne         |$LN2@AdapterHan@2|

; 1279 :     {
; 1280 :     case CSPROPERTY_DROPPEDFRAMES_CURRENT:
; 1281 : 
; 1282 :         switch ( csProp.Flags )

  0007c	e59d3014	 ldr         r3, [sp, #0x14]
  00080	e3530001	 cmp         r3, #1
  00084	1a000025	 bne         |$LN2@AdapterHan@2|

; 1283 :         {
; 1284 :         case CSPROPERTY_TYPE_GET:
; 1285 :             *pdwBytesTransferred = sizeof(CSPROPERTY_DROPPEDFRAMES_CURRENT_S);
; 1286 :             if( OutBufLen < *pdwBytesTransferred )

  00088	e59d3060	 ldr         r3, [sp, #0x60]
  0008c	e3a01030	 mov         r1, #0x30
  00090	e5821000	 str         r1, [r2]
  00094	e3530030	 cmp         r3, #0x30

; 1287 :             {
; 1288 :                 dwError = ERROR_MORE_DATA;

  00098	33a040ea	 movcc       r4, #0xEA
  0009c	3a00001f	 bcc         |$LN2@AdapterHan@2|

; 1289 :                 break;
; 1290 :             }
; 1291 : 
; 1292 :             if( NULL == pOutBuf )

  000a0	e3570000	 cmp         r7, #0
  000a4	0a00001d	 beq         |$LN2@AdapterHan@2|

; 1293 :             {
; 1294 :                 break;
; 1295 :             }
; 1296 : 
; 1297 :             //Copy the CSPROPERTY structure to the output buffer just in case!
; 1298 :             memcpy( &csPropDroppedFramesOutput, &csProp, sizeof( CSPROPERTY ) );

  000a8	e28d0018	 add         r0, sp, #0x18
  000ac	e28d1000	 add         r1, sp, #0
  000b0	e3a02018	 mov         r2, #0x18
  000b4	eb000000	 bl          memcpy

; 1299 : 
; 1300 :             if ( m_pStrmInstances[CAPTURE].pPinDev )

  000b8	e5953024	 ldr         r3, [r5, #0x24]
  000bc	e593301c	 ldr         r3, [r3, #0x1C]
  000c0	e3530000	 cmp         r3, #0
  000c4	0a000015	 beq         |$LN2@AdapterHan@2|

; 1301 :             {
; 1302 :                 csPropDroppedFramesOutput.PictureNumber    = m_pStrmInstances[CAPTURE].pPinDev->PictureNumber( );

  000c8	e1a00003	 mov         r0, r3
  000cc	eb000000	 bl          |?PictureNumber@CPinDevice@@QBAKXZ|

; 1303 :                 csPropDroppedFramesOutput.DropCount        = m_pStrmInstances[CAPTURE].pPinDev->FramesDropped( );

  000d0	e5953024	 ldr         r3, [r5, #0x24]
  000d4	e3a02000	 mov         r2, #0
  000d8	e58d0030	 str         r0, [sp, #0x30]
  000dc	e58d2034	 str         r2, [sp, #0x34]
  000e0	e593001c	 ldr         r0, [r3, #0x1C]
  000e4	eb000000	 bl          |?FramesDropped@CPinDevice@@QBAKXZ|

; 1304 :                 csPropDroppedFramesOutput.AverageFrameSize = m_pStrmInstances[CAPTURE].pPinDev->FrameSize( );

  000e8	e5953024	 ldr         r3, [r5, #0x24]
  000ec	e3a02000	 mov         r2, #0
  000f0	e58d0038	 str         r0, [sp, #0x38]
  000f4	e58d203c	 str         r2, [sp, #0x3C]
  000f8	e593001c	 ldr         r0, [r3, #0x1C]
  000fc	eb000000	 bl          |?FrameSize@CPinDevice@@QBAKXZ|
  00100	e1a03000	 mov         r3, r0

; 1305 : 
; 1306 :                 if( CeSafeCopyMemory( pOutBuf, &csPropDroppedFramesOutput, sizeof( CSPROPERTY_DROPPEDFRAMES_CURRENT_S )))

  00104	e1a00007	 mov         r0, r7
  00108	e3a02030	 mov         r2, #0x30
  0010c	e28d1018	 add         r1, sp, #0x18
  00110	e58d3040	 str         r3, [sp, #0x40]
  00114	eb000000	 bl          CeSafeCopyMemory
  00118	e3500000	 cmp         r0, #0

; 1307 :                 {
; 1308 :                     dwError = ERROR_SUCCESS;

  0011c	13a04000	 movne       r4, #0
  00120		 |$LN2@AdapterHan@2|

; 1309 :                 }
; 1310 :             }
; 1311 : 
; 1312 :             break;
; 1313 :         }
; 1314 : 
; 1315 :     default:
; 1316 :         DEBUGMSG(ZONE_IOCTL, (_T("CAM_IOControl(%08x): Invalid Property\r\n"), this)) ;

  00120	e5963440	 ldr         r3, [r6, #0x440]
  00124	e3130010	 tst         r3, #0x10
  00128	159f0014	 ldrne       r0, [pc, #0x14]
  0012c	11a01005	 movne       r1, r5
  00130	1b000000	 blne        NKDbgPrintfW
  00134		 |$LN17@AdapterHan@2|

; 1317 :         break;
; 1318 :     }
; 1319 : 
; 1320 :     return dwError;
; 1321 : }

  00134	e1a00004	 mov         r0, r4
  00138	e28dd048	 add         sp, sp, #0x48
  0013c	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00140	e12fff1e	 bx          lr
  00144		 |$LN22@AdapterHan@2|
  00144		 |$LN23@AdapterHan@2|
  00144	00000000	 DCD         |??_C@_1FA@MOHHPKCL@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAP?$AAr?$AAo@|
  00148		 |$LN24@AdapterHan@2|
  00148	00000000	 DCD         |??_C@_1GG@FOPBAPNH@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAD?$AAr?$AAo?$AAp?$AAp@|
  0014c		 |$LN25@AdapterHan@2|
  0014c	00000000	 DCD         |dpCurSettings|
  00150		 |$M35768|

			 ENDP  ; |?AdapterHandleDroppedFramesRequests@CCameraDevice@@QAAKPAEK0KPAK@Z|, CCameraDevice::AdapterHandleDroppedFramesRequests

	EXPORT	|?AdapterHandleCustomRequests@CCameraDevice@@QAAKPAEK0KPAK@Z| ; CCameraDevice::AdapterHandleCustomRequests
	EXPORT	|??_C@_1GG@IDHBNMCA@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAA?$AAd?$AAa?$AAp?$AAt?$AAe?$AAr?$AAH?$AAa?$AAn?$AAd@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T35789| DCD	|$LN7@AdapterHan@3|
	DCD	0x40001c02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@IDHBNMCA@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAA?$AAd?$AAa?$AAp?$AAt?$AAe?$AAr?$AAH?$AAa?$AAn?$AAd@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "A", 0x0, "d", 0x0, "a", 0x0, "p"
	DCB	0x0, "t", 0x0, "e", 0x0, "r", 0x0, "H", 0x0, "a", 0x0, "n"
	DCB	0x0, "d", 0x0, "l", 0x0, "e", 0x0, "C", 0x0, "u", 0x0, "s"
	DCB	0x0, "t", 0x0, "o", 0x0, "m", 0x0, "R", 0x0, "e", 0x0, "q"
	DCB	0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AdapterHandleCustomRequests@CCameraDevice@@QAAKPAEK0KPAK@Z| PROC ; CCameraDevice::AdapterHandleCustomRequests

; 1418 : {

  00000		 |$LN7@AdapterHan@3|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M35786|
  00008	e1a06003	 mov         r6, r3
  0000c	e1a07002	 mov         r7, r2
  00010	e1a08001	 mov         r8, r1
  00014	e1a05000	 mov         r5, r0

; 1419 :     // Note: This whole function is wrapped in a __try/__except block
; 1420 :     DEBUGMSG( ZONE_IOCTL, (_T("CAM_IOControl(%08x): AdapterHandleCustomRequests\r\n"), this ) );

  00018	e59fe04c	 ldr         lr, [pc, #0x4C]
  0001c	e59ee440	 ldr         lr, [lr, #0x440]
  00020	e31e0010	 tst         lr, #0x10
  00024	159f003c	 ldrne       r0, [pc, #0x3C]
  00028	11a01005	 movne       r1, r5
  0002c	1b000000	 blne        NKDbgPrintfW

; 1421 :     return m_PDDFuncTbl.PDD_HandleAdapterCustomProperties( m_PDDContext, pInBuf, InBufLen, pOutBuf, OutBufLen, pdwBytesTransferred );

  00030	e59de024	 ldr         lr, [sp, #0x24]
  00034	e59d4020	 ldr         r4, [sp, #0x20]
  00038	e59502a4	 ldr         r0, [r5, #0x2A4]
  0003c	e59552c8	 ldr         r5, [r5, #0x2C8]
  00040	e58de004	 str         lr, [sp, #4]
  00044	e58d4000	 str         r4, [sp]
  00048	e1a03006	 mov         r3, r6
  0004c	e1a02007	 mov         r2, r7
  00050	e1a01008	 mov         r1, r8
  00054	e1a0e00f	 mov         lr, pc
  00058	e12fff15	 bx          r5

; 1422 : }

  0005c	e28dd008	 add         sp, sp, #8
  00060	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  00064	e12fff1e	 bx          lr
  00068		 |$LN8@AdapterHan@3|
  00068		 |$LN9@AdapterHan@3|
  00068	00000000	 DCD         |??_C@_1GG@IDHBNMCA@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAA?$AAd?$AAa?$AAp?$AAt?$AAe?$AAr?$AAH?$AAa?$AAn?$AAd@|
  0006c		 |$LN10@AdapterHan@3|
  0006c	00000000	 DCD         |dpCurSettings|
  00070		 |$M35787|

			 ENDP  ; |?AdapterHandleCustomRequests@CCameraDevice@@QAAKPAEK0KPAK@Z|, CCameraDevice::AdapterHandleCustomRequests

	EXPORT	|?PowerDown@CCameraDevice@@QAAXXZ|	; CCameraDevice::PowerDown

  00000			 AREA	 |.pdata|, PDATA
|$T35803| DCD	|$LN12@PowerDown|
	DCD	0x40002001
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PowerDown@CCameraDevice@@QAAXXZ| PROC ; CCameraDevice::PowerDown

; 1426 : {

  00000		 |$LN12@PowerDown|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M35800|
  00004	e1a04000	 mov         r4, r0

; 1427 :     if ( m_hCallerProcess )

  00008	e5943018	 ldr         r3, [r4, #0x18]
  0000c	e3530000	 cmp         r3, #0
  00010	0a000018	 beq         |$LN5@PowerDown|

; 1428 :     {
; 1429 :         for( UINT i = 0; i < m_AdapterInfo.ulCTypes; i++ )

  00014	e594302c	 ldr         r3, [r4, #0x2C]
  00018	e3a06000	 mov         r6, #0
  0001c	e3530000	 cmp         r3, #0
  00020	9a00000f	 bls         |$LN2@PowerDown|
  00024	e3a05000	 mov         r5, #0
  00028		 |$LL4@PowerDown|

; 1430 :         {
; 1431 :             if ( NULL != m_pStrmInstances[i].pPinDev ) 

  00028	e5943024	 ldr         r3, [r4, #0x24]
  0002c	e0853003	 add         r3, r5, r3
  00030	e593301c	 ldr         r3, [r3, #0x1C]
  00034	e3530000	 cmp         r3, #0

; 1432 :             {
; 1433 :                 m_pStrmInstances[i].pPinDev->SetState( CSSTATE_STOP, &m_pStrmInstances[i].CsPrevState );

  00038	15943024	 ldrne       r3, [r4, #0x24]
  0003c	13a01000	 movne       r1, #0
  00040	10853003	 addne       r3, r5, r3
  00044	1593001c	 ldrne       r0, [r3, #0x1C]
  00048	1283200c	 addne       r2, r3, #0xC
  0004c	1b000000	 blne        |?SetState@CPinDevice@@QAAXW4CSSTATE@@PAW42@@Z|
  00050	e594302c	 ldr         r3, [r4, #0x2C]
  00054	e2866001	 add         r6, r6, #1
  00058	e2855020	 add         r5, r5, #0x20
  0005c	e1560003	 cmp         r6, r3
  00060	3afffff0	 bcc         |$LL4@PowerDown|
  00064		 |$LN2@PowerDown|

; 1434 :             }
; 1435 :         }
; 1436 : 
; 1437 :         m_PDDFuncTbl.PDD_SetPowerState( m_PDDContext, m_PowerState);

  00064	e5941020	 ldr         r1, [r4, #0x20]
  00068	e59402a4	 ldr         r0, [r4, #0x2A4]
  0006c	e59432c4	 ldr         r3, [r4, #0x2C4]
  00070	e1a0e00f	 mov         lr, pc
  00074	e12fff13	 bx          r3
  00078		 |$LN5@PowerDown|

; 1438 :     }
; 1439 : }

  00078	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0007c	e12fff1e	 bx          lr
  00080		 |$M35801|

			 ENDP  ; |?PowerDown@CCameraDevice@@QAAXXZ|, CCameraDevice::PowerDown

	EXPORT	|?PowerUp@CCameraDevice@@QAAXXZ|	; CCameraDevice::PowerUp

  00000			 AREA	 |.pdata|, PDATA
|$T35814| DCD	|$LN12@PowerUp|
	DCD	0x40002001
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PowerUp@CCameraDevice@@QAAXXZ| PROC	; CCameraDevice::PowerUp

; 1443 : {

  00000		 |$LN12@PowerUp|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M35811|
  00004	e1a04000	 mov         r4, r0

; 1444 :     if ( m_hCallerProcess )

  00008	e5943018	 ldr         r3, [r4, #0x18]
  0000c	e3530000	 cmp         r3, #0
  00010	0a000018	 beq         |$LN2@PowerUp|

; 1445 :     {
; 1446 :         m_PDDFuncTbl.PDD_SetPowerState( m_PDDContext, m_PowerState );

  00014	e5941020	 ldr         r1, [r4, #0x20]
  00018	e59402a4	 ldr         r0, [r4, #0x2A4]
  0001c	e59432c4	 ldr         r3, [r4, #0x2C4]
  00020	e1a0e00f	 mov         lr, pc
  00024	e12fff13	 bx          r3

; 1447 : 
; 1448 :         for( UINT i = 0; i < m_AdapterInfo.ulCTypes; i++ )

  00028	e594302c	 ldr         r3, [r4, #0x2C]
  0002c	e3a06000	 mov         r6, #0
  00030	e3530000	 cmp         r3, #0
  00034	9a00000f	 bls         |$LN2@PowerUp|

; 1445 :     {
; 1446 :         m_PDDFuncTbl.PDD_SetPowerState( m_PDDContext, m_PowerState );

  00038	e3a05000	 mov         r5, #0
  0003c		 |$LL4@PowerUp|

; 1449 :         {
; 1450 :             if ( NULL != m_pStrmInstances[i].pPinDev ) 

  0003c	e5943024	 ldr         r3, [r4, #0x24]
  00040	e0853003	 add         r3, r5, r3
  00044	e593301c	 ldr         r3, [r3, #0x1C]
  00048	e3530000	 cmp         r3, #0

; 1451 :             {
; 1452 :                 m_pStrmInstances[i].pPinDev->SetState( m_pStrmInstances[i].CsPrevState, NULL );

  0004c	15943024	 ldrne       r3, [r4, #0x24]
  00050	13a02000	 movne       r2, #0
  00054	10853003	 addne       r3, r5, r3
  00058	1593100c	 ldrne       r1, [r3, #0xC]
  0005c	1593001c	 ldrne       r0, [r3, #0x1C]
  00060	1b000000	 blne        |?SetState@CPinDevice@@QAAXW4CSSTATE@@PAW42@@Z|
  00064	e594302c	 ldr         r3, [r4, #0x2C]
  00068	e2866001	 add         r6, r6, #1
  0006c	e2855020	 add         r5, r5, #0x20
  00070	e1560003	 cmp         r6, r3
  00074	3afffff0	 bcc         |$LL4@PowerUp|
  00078		 |$LN2@PowerUp|

; 1453 :             }
; 1454 :         }
; 1455 :     }
; 1456 : }

  00078	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0007c	e12fff1e	 bx          lr
  00080		 |$M35812|

			 ENDP  ; |?PowerUp@CCameraDevice@@QAAXXZ|, CCameraDevice::PowerUp

	EXPORT	|?GetBasicSupportInfo@CCameraDevice@@AAAXPAEKPAKPAU_Sensor_Property@@1@Z| ; CCameraDevice::GetBasicSupportInfo
	EXPORT	|??_C@_1HC@MOMEBGNK@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AA?5?$AAb?$AAu?$AAf?$AAf@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@EAAFFBBM@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAR?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@BEMNEPGI@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAN?$AAo?$AAt?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAa?$AAv?$AAa@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T35837| DCD	|$LN22@GetBasicSu|
	DCD	0x40006702

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HC@MOMEBGNK@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AA?5?$AAb?$AAu?$AAf?$AAf@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "O", 0x0, "u", 0x0, "t", 0x0, "p"
	DCB	0x0, "u", 0x0, "t", 0x0, " ", 0x0, "b", 0x0, "u", 0x0, "f"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "i", 0x0, "s"
	DCB	0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "l"
	DCB	0x0, "a", 0x0, "r", 0x0, "g", 0x0, "e", 0x0, " ", 0x0, "e"
	DCB	0x0, "n", 0x0, "o", 0x0, "u", 0x0, "g", 0x0, "h", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@EAAFFBBM@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAR?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAA@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "R", 0x0, "e", 0x0, "t", 0x0, "u"
	DCB	0x0, "r", 0x0, "n", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "A", 0x0, "c", 0x0, "c", 0x0, "e", 0x0, "s", 0x0, "s"
	DCB	0x0, "F", 0x0, "l", 0x0, "a", 0x0, "g", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@BEMNEPGI@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAN?$AAo?$AAt?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAa?$AAv?$AAa@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "N", 0x0, "o", 0x0, "t", 0x0, " "
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, " ", 0x0, "a", 0x0, "v"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, " ", 0x0, "d", 0x0, "a", 0x0, "t", 0x0, "a"
	DCB	0x0, " ", 0x0, "c", 0x0, "o", 0x0, "u", 0x0, "l", 0x0, "d"
	DCB	0x0, " ", 0x0, "b", 0x0, "e", 0x0, " ", 0x0, "w", 0x0, "r"
	DCB	0x0, "i", 0x0, "t", 0x0, "t", 0x0, "e", 0x0, "n", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetBasicSupportInfo@CCameraDevice@@AAAXPAEKPAKPAU_Sensor_Property@@1@Z| PROC ; CCameraDevice::GetBasicSupportInfo

; 1466 : {

  00000		 |$LN22@GetBasicSu|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M35834|
  00008	e1a07003	 mov         r7, r3
  0000c	e1a05002	 mov         r5, r2
  00010	e1a08001	 mov         r8, r1
  00014	e1a04000	 mov         r4, r0

; 1467 :     PCSPROPERTY_DESCRIPTION   pCsPropDesc          = NULL;
; 1468 :     PCSPROPERTY_MEMBERSHEADER pCsPropMembersHeader = NULL;
; 1469 : 
; 1470 :     if ( OutBufLen >= sizeof(CSPROPERTY_DESCRIPTION) )

  00018	e3550028	 cmp         r5, #0x28
  0001c	3a000037	 bcc         |$LN10@GetBasicSu|

; 1471 :     {
; 1472 :         if( OutBufLen >= StandardSizeOfBasicValues )

  00020	e3550048	 cmp         r5, #0x48

; 1473 :         {
; 1474 :             *pdwBytesTransferred = StandardSizeOfBasicValues;
; 1475 :         }
; 1476 :         else
; 1477 :         {
; 1478 :             *pdwBytesTransferred = sizeof(CSPROPERTY_DESCRIPTION);
; 1479 :         }
; 1480 : 
; 1481 :         pCsPropDesc = reinterpret_cast<PCSPROPERTY_DESCRIPTION>( ValidateBuffer( pOutBuf, OutBufLen, sizeof (CSPROPERTY_DESCRIPTION), pdwError ) );

  00024	e59d6028	 ldr         r6, [sp, #0x28]
  00028	e3a09048	 mov         r9, #0x48
  0002c	33a03028	 movcc       r3, #0x28
  00030	25879000	 strcs       r9, [r7]
  00034	35873000	 strcc       r3, [r7]
  00038	e3a03028	 mov         r3, #0x28
  0003c	e1a02005	 mov         r2, r5
  00040	e1a01008	 mov         r1, r8
  00044	e1a00004	 mov         r0, r4
  00048	e58d6000	 str         r6, [sp]
  0004c	eb000000	 bl          |?ValidateBuffer@CCameraDevice@@QAAPAXPAXKKPAK@Z|
  00050	e1b07000	 movs        r7, r0

; 1482 : 
; 1483 :         if ( NULL == pCsPropDesc )
; 1484 :         {
; 1485 :             *pdwError = ERROR_MORE_DATA;
; 1486 : 
; 1487 :             return;

  00054	0a000026	 beq         |$LN13@GetBasicSu|

; 1488 :         }
; 1489 : 
; 1490 :         pCsPropDesc->AccessFlags      = (CSPROPERTY_TYPE_GET | CSPROPERTY_TYPE_SET | CSPROPERTY_TYPE_DEFAULTVALUES);
; 1491 :         pCsPropDesc->MembersListCount = 1;
; 1492 :         pCsPropDesc->Reserved         = 0;
; 1493 :         pCsPropDesc->DescriptionSize  = StandardSizeOfBasicValues;
; 1494 : 
; 1495 :         memcpy( &pCsPropDesc->PropTypeSet, &pSensorProp->pCsPropValues->PropTypeSet, sizeof (CSIDENTIFIER) );

  00058	e59d8024	 ldr         r8, [sp, #0x24]
  0005c	e3a03801	 mov         r3, #1, 16
  00060	e3833003	 orr         r3, r3, #3
  00064	e3a02001	 mov         r2, #1
  00068	e3a0a000	 mov         r10, #0
  0006c	e8870208	 stmia       r7, {r3, r9}
  00070	e5872020	 str         r2, [r7, #0x20]
  00074	e587a024	 str         r10, [r7, #0x24]
  00078	e5981010	 ldr         r1, [r8, #0x10]
  0007c	e2870008	 add         r0, r7, #8
  00080	e3a02018	 mov         r2, #0x18
  00084	eb000000	 bl          memcpy

; 1496 : 
; 1497 :         if( OutBufLen >= StandardSizeOfBasicValues )

  00088	e3550048	 cmp         r5, #0x48
  0008c	3a000012	 bcc         |$LN6@GetBasicSu|

; 1498 :         {
; 1499 :             pCsPropMembersHeader = reinterpret_cast<PCSPROPERTY_MEMBERSHEADER>( pCsPropDesc + 1 );
; 1500 : 
; 1501 :             // Copy the CSPROPERTY_MEMBERSHEADER
; 1502 :             memcpy( pCsPropMembersHeader, pSensorProp->pCsPropValues->MembersList, sizeof (CSPROPERTY_MEMBERSHEADER) );

  00090	e5983010	 ldr         r3, [r8, #0x10]
  00094	e287e028	 add         lr, r7, #0x28

; 1503 : 
; 1504 :             // Copy the CSPROPERTY_STEPPING_LONG
; 1505 :             memcpy( pCsPropMembersHeader + 1, pSensorProp->pCsPropValues->MembersList->Members, sizeof (CSPROPERTY_STEPPING_LONG) );

  00098	e28e0010	 add         r0, lr, #0x10
  0009c	e593101c	 ldr         r1, [r3, #0x1C]
  000a0	e3a02010	 mov         r2, #0x10
  000a4	e5913000	 ldr         r3, [r1]
  000a8	e58e3000	 str         r3, [lr]
  000ac	e5913004	 ldr         r3, [r1, #4]
  000b0	e58e3004	 str         r3, [lr, #4]
  000b4	e5913008	 ldr         r3, [r1, #8]
  000b8	e58e3008	 str         r3, [lr, #8]
  000bc	e591300c	 ldr         r3, [r1, #0xC]
  000c0	e58e300c	 str         r3, [lr, #0xC]
  000c4	e5983010	 ldr         r3, [r8, #0x10]
  000c8	e593301c	 ldr         r3, [r3, #0x1C]
  000cc	e5931010	 ldr         r1, [r3, #0x10]
  000d0	eb000000	 bl          memcpy

; 1506 : 
; 1507 :             *pdwError = ERROR_SUCCESS;

  000d4	e586a000	 str         r10, [r6]

; 1508 :         }
; 1509 :         else

  000d8	ea000028	 b           |$LN1@GetBasicSu|
  000dc		 |$LN6@GetBasicSu|

; 1510 :         {
; 1511 :             DEBUGMSG( ZONE_IOCTL|ZONE_ERROR, (_T("CAM_IOControl(%08x): Not all available data could be written\r\n"), this ) );

  000dc	e59f30b0	 ldr         r3, [pc, #0xB0]
  000e0	e5933440	 ldr         r3, [r3, #0x440]
  000e4	e3130011	 tst         r3, #0x11
  000e8	159f00a8	 ldrne       r0, [pc, #0xA8]
  000ec	11a01004	 movne       r1, r4
  000f0	1b000000	 blne        NKDbgPrintfW
  000f4		 |$LN13@GetBasicSu|

; 1512 :             *pdwError = ERROR_MORE_DATA;

  000f4	e3a030ea	 mov         r3, #0xEA

; 1529 :         *pdwError = ERROR_SUCCESS;

  000f8	e5863000	 str         r3, [r6]

; 1530 :     }
; 1531 :     else

  000fc	ea00001f	 b           |$LN1@GetBasicSu|
  00100		 |$LN10@GetBasicSu|

; 1513 :         }
; 1514 :     }
; 1515 :     else if ( OutBufLen >= sizeof(ULONG) )
; 1516 :     {
; 1517 :         // We just need to return AccessFlags.
; 1518 :         DEBUGMSG( ZONE_IOCTL, (_T("CAM_IOControl(%08x): Returning AccessFlags\r\n"), this ) );

  00100	e59f308c	 ldr         r3, [pc, #0x8C]
  00104	e3550004	 cmp         r5, #4
  00108	e5933440	 ldr         r3, [r3, #0x440]
  0010c	3a000014	 bcc         |$LN3@GetBasicSu|
  00110	e3130010	 tst         r3, #0x10
  00114	159f0074	 ldrne       r0, [pc, #0x74]
  00118	11a01004	 movne       r1, r4
  0011c	1b000000	 blne        NKDbgPrintfW

; 1519 : 
; 1520 :         *pdwBytesTransferred = sizeof(ULONG);
; 1521 : 
; 1522 :         if ( NULL == ValidateBuffer( pOutBuf, OutBufLen, sizeof (ULONG), pdwError ) )

  00120	e59d6028	 ldr         r6, [sp, #0x28]
  00124	e3a0e004	 mov         lr, #4
  00128	e3a03004	 mov         r3, #4
  0012c	e1a02005	 mov         r2, r5
  00130	e1a01008	 mov         r1, r8
  00134	e1a00004	 mov         r0, r4
  00138	e58d6000	 str         r6, [sp]
  0013c	e587e000	 str         lr, [r7]
  00140	eb000000	 bl          |?ValidateBuffer@CCameraDevice@@QAAPAXPAXKKPAK@Z|
  00144	e3500000	 cmp         r0, #0

; 1523 :         {
; 1524 :             *pdwError = ERROR_MORE_DATA;
; 1525 :             return;

  00148	0affffe9	 beq         |$LN13@GetBasicSu|
  0014c	e3a03801	 mov         r3, #1, 16

; 1526 :         }
; 1527 : 
; 1528 :         *((PULONG)pOutBuf) = static_cast<ULONG>( CSPROPERTY_TYPE_GET | CSPROPERTY_TYPE_SET | CSPROPERTY_TYPE_DEFAULTVALUES );

  00150	e3833003	 orr         r3, r3, #3
  00154	e5883000	 str         r3, [r8]

; 1529 :         *pdwError = ERROR_SUCCESS;

  00158	e3a03000	 mov         r3, #0
  0015c	e5863000	 str         r3, [r6]

; 1530 :     }
; 1531 :     else

  00160	ea000006	 b           |$LN1@GetBasicSu|
  00164		 |$LN3@GetBasicSu|

; 1532 :     {
; 1533 :         DEBUGMSG( ZONE_IOCTL, (_T("CAM_IOControl(%08x): Output buffer is not large enough\r\n"), this ) );

  00164	e3130010	 tst         r3, #0x10
  00168	159f001c	 ldrne       r0, [pc, #0x1C]
  0016c	11a01004	 movne       r1, r4
  00170	1b000000	 blne        NKDbgPrintfW

; 1534 :         *pdwError = ERROR_INSUFFICIENT_BUFFER;

  00174	e59d3028	 ldr         r3, [sp, #0x28]
  00178	e3a0207a	 mov         r2, #0x7A
  0017c	e5832000	 str         r2, [r3]
  00180		 |$LN1@GetBasicSu|

; 1535 :     }
; 1536 : 
; 1537 :     return;
; 1538 : }

  00180	e28dd004	 add         sp, sp, #4
  00184	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  00188	e12fff1e	 bx          lr
  0018c		 |$LN23@GetBasicSu|
  0018c		 |$LN24@GetBasicSu|
  0018c	00000000	 DCD         |??_C@_1HC@MOMEBGNK@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AA?5?$AAb?$AAu?$AAf?$AAf@|
  00190		 |$LN25@GetBasicSu|
  00190	00000000	 DCD         |??_C@_1FK@EAAFFBBM@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAR?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAA@|
  00194		 |$LN26@GetBasicSu|
  00194	00000000	 DCD         |dpCurSettings|
  00198		 |$LN27@GetBasicSu|
  00198	00000000	 DCD         |??_C@_1HO@BEMNEPGI@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAN?$AAo?$AAt?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAa?$AAv?$AAa@|
  0019c		 |$M35835|

			 ENDP  ; |?GetBasicSupportInfo@CCameraDevice@@AAAXPAEKPAKPAU_Sensor_Property@@1@Z|, CCameraDevice::GetBasicSupportInfo

	EXPORT	|?GetDefaultValues@CCameraDevice@@AAAXPAEKPAKPAU_Sensor_Property@@1@Z| ; CCameraDevice::GetDefaultValues

  00000			 AREA	 |.pdata|, PDATA
|$T35865| DCD	|$LN22@GetDefault|
	DCD	0x40006b02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetDefaultValues@CCameraDevice@@AAAXPAEKPAKPAU_Sensor_Property@@1@Z| PROC ; CCameraDevice::GetDefaultValues

; 1548 : {

  00000		 |$LN22@GetDefault|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M35862|
  00008	e1a07003	 mov         r7, r3
  0000c	e1a04002	 mov         r4, r2
  00010	e1a08001	 mov         r8, r1
  00014	e1a05000	 mov         r5, r0

; 1549 :     PCSPROPERTY_DESCRIPTION   pCsPropDesc          = NULL;
; 1550 :     PCSPROPERTY_MEMBERSHEADER pCsPropMembersHeader = NULL;
; 1551 : 
; 1552 :     if ( OutBufLen >= sizeof(CSPROPERTY_DESCRIPTION) )

  00018	e3540028	 cmp         r4, #0x28
  0001c	3a00003b	 bcc         |$LN10@GetDefault|

; 1553 :     {
; 1554 :         if( OutBufLen >= StandardSizeOfDefaultValues )

  00020	e354003c	 cmp         r4, #0x3C

; 1555 :         {
; 1556 :             *pdwBytesTransferred = StandardSizeOfDefaultValues;
; 1557 :         }
; 1558 :         else
; 1559 :         {
; 1560 :             *pdwBytesTransferred = sizeof(CSPROPERTY_DESCRIPTION);
; 1561 :         }
; 1562 : 
; 1563 :         pCsPropDesc = reinterpret_cast<PCSPROPERTY_DESCRIPTION>( ValidateBuffer( pOutBuf, OutBufLen, sizeof (CSPROPERTY_DESCRIPTION), pdwError ) );

  00024	e59d6028	 ldr         r6, [sp, #0x28]
  00028	e3a0903c	 mov         r9, #0x3C
  0002c	33a03028	 movcc       r3, #0x28
  00030	25879000	 strcs       r9, [r7]
  00034	35873000	 strcc       r3, [r7]
  00038	e3a03028	 mov         r3, #0x28
  0003c	e1a02004	 mov         r2, r4
  00040	e1a01008	 mov         r1, r8
  00044	e1a00005	 mov         r0, r5
  00048	e58d6000	 str         r6, [sp]
  0004c	eb000000	 bl          |?ValidateBuffer@CCameraDevice@@QAAPAXPAXKKPAK@Z|
  00050	e1b07000	 movs        r7, r0

; 1564 : 
; 1565 :         if ( NULL == pCsPropDesc )
; 1566 :         {
; 1567 :             *pdwError = ERROR_MORE_DATA;
; 1568 : 
; 1569 :             return;

  00054	0a00002a	 beq         |$LN13@GetDefault|

; 1570 :         }
; 1571 : 
; 1572 :         pCsPropDesc->AccessFlags      = (CSPROPERTY_TYPE_GET | CSPROPERTY_TYPE_SET | CSPROPERTY_TYPE_DEFAULTVALUES);
; 1573 :         pCsPropDesc->MembersListCount = 1;
; 1574 :         pCsPropDesc->Reserved         = 0;
; 1575 :         pCsPropDesc->DescriptionSize  = StandardSizeOfDefaultValues;
; 1576 : 
; 1577 :         memcpy( &pCsPropDesc->PropTypeSet, &pSensorProp->pCsPropValues->PropTypeSet, sizeof (CSIDENTIFIER) );

  00058	e59d8024	 ldr         r8, [sp, #0x24]
  0005c	e3a03801	 mov         r3, #1, 16
  00060	e3833003	 orr         r3, r3, #3
  00064	e3a02001	 mov         r2, #1
  00068	e3a0a000	 mov         r10, #0
  0006c	e8870208	 stmia       r7, {r3, r9}
  00070	e5872020	 str         r2, [r7, #0x20]
  00074	e587a024	 str         r10, [r7, #0x24]
  00078	e5981010	 ldr         r1, [r8, #0x10]
  0007c	e2870008	 add         r0, r7, #8
  00080	e3a02018	 mov         r2, #0x18
  00084	eb000000	 bl          memcpy

; 1578 : 
; 1579 :         if( OutBufLen >= StandardSizeOfDefaultValues )

  00088	e354003c	 cmp         r4, #0x3C
  0008c	3a000016	 bcc         |$LN6@GetDefault|

; 1580 :         {
; 1581 :             pCsPropMembersHeader = reinterpret_cast<PCSPROPERTY_MEMBERSHEADER>( pCsPropDesc + 1 );
; 1582 : 
; 1583 :             // Copy the CSPROPERTY_MEMBERSHEADER
; 1584 :             memcpy( pCsPropMembersHeader, &(pSensorProp->pCsPropValues->MembersList[1]), sizeof (CSPROPERTY_MEMBERSHEADER) );

  00090	e5983010	 ldr         r3, [r8, #0x10]
  00094	e593201c	 ldr         r2, [r3, #0x1C]
  00098	e5923014	 ldr         r3, [r2, #0x14]
  0009c	e5873028	 str         r3, [r7, #0x28]
  000a0	e5923018	 ldr         r3, [r2, #0x18]
  000a4	e587302c	 str         r3, [r7, #0x2C]
  000a8	e592301c	 ldr         r3, [r2, #0x1C]
  000ac	e5873030	 str         r3, [r7, #0x30]
  000b0	e5923020	 ldr         r3, [r2, #0x20]
  000b4	e5873034	 str         r3, [r7, #0x34]

; 1585 : 
; 1586 :             // Copy the LONG (default value)
; 1587 :             memcpy( pCsPropMembersHeader + 1, pSensorProp->pCsPropValues->MembersList[1].Members, sizeof (LONG) );

  000b8	e5983010	 ldr         r3, [r8, #0x10]
  000bc	e593301c	 ldr         r3, [r3, #0x1C]
  000c0	e5931024	 ldr         r1, [r3, #0x24]
  000c4	e5d10000	 ldrb        r0, [r1]
  000c8	e5d13001	 ldrb        r3, [r1, #1]
  000cc	e5d12002	 ldrb        r2, [r1, #2]
  000d0	e5d11003	 ldrb        r1, [r1, #3]
  000d4	e1803403	 orr         r3, r0, r3, lsl #8
  000d8	e1833802	 orr         r3, r3, r2, lsl #16
  000dc	e1833c01	 orr         r3, r3, r1, lsl #24
  000e0	e5873038	 str         r3, [r7, #0x38]

; 1588 : 
; 1589 :             *pdwError = ERROR_SUCCESS;

  000e4	e586a000	 str         r10, [r6]

; 1590 :         }
; 1591 :         else

  000e8	ea000028	 b           |$LN1@GetDefault|
  000ec		 |$LN6@GetDefault|

; 1592 :         {
; 1593 :             DEBUGMSG( ZONE_IOCTL|ZONE_ERROR, (_T("CAM_IOControl(%08x): Not all available data could be written\r\n"), this ) );

  000ec	e59f30b0	 ldr         r3, [pc, #0xB0]
  000f0	e5933440	 ldr         r3, [r3, #0x440]
  000f4	e3130011	 tst         r3, #0x11
  000f8	159f00a8	 ldrne       r0, [pc, #0xA8]
  000fc	11a01005	 movne       r1, r5
  00100	1b000000	 blne        NKDbgPrintfW
  00104		 |$LN13@GetDefault|

; 1594 :             *pdwError = ERROR_MORE_DATA;

  00104	e3a030ea	 mov         r3, #0xEA

; 1611 :         *pdwError = ERROR_SUCCESS;

  00108	e5863000	 str         r3, [r6]

; 1612 :     }
; 1613 :     else

  0010c	ea00001f	 b           |$LN1@GetDefault|
  00110		 |$LN10@GetDefault|

; 1595 :         }
; 1596 :     }
; 1597 :     else if ( OutBufLen >= sizeof(ULONG) )
; 1598 :     {
; 1599 :         // We just need to return AccessFlags.
; 1600 :         DEBUGMSG( ZONE_IOCTL, (_T("CAM_IOControl(%08x): Returning AccessFlags\r\n"), this ) );

  00110	e59f308c	 ldr         r3, [pc, #0x8C]
  00114	e3540004	 cmp         r4, #4
  00118	e5933440	 ldr         r3, [r3, #0x440]
  0011c	3a000014	 bcc         |$LN3@GetDefault|
  00120	e3130010	 tst         r3, #0x10
  00124	159f0074	 ldrne       r0, [pc, #0x74]
  00128	11a01005	 movne       r1, r5
  0012c	1b000000	 blne        NKDbgPrintfW

; 1601 : 
; 1602 :         *pdwBytesTransferred = sizeof(ULONG);
; 1603 : 
; 1604 :         if ( NULL == ValidateBuffer( pOutBuf, OutBufLen, sizeof (ULONG), pdwError ) )

  00130	e59d6028	 ldr         r6, [sp, #0x28]
  00134	e3a0e004	 mov         lr, #4
  00138	e3a03004	 mov         r3, #4
  0013c	e1a02004	 mov         r2, r4
  00140	e1a01008	 mov         r1, r8
  00144	e1a00005	 mov         r0, r5
  00148	e58d6000	 str         r6, [sp]
  0014c	e587e000	 str         lr, [r7]
  00150	eb000000	 bl          |?ValidateBuffer@CCameraDevice@@QAAPAXPAXKKPAK@Z|
  00154	e3500000	 cmp         r0, #0

; 1605 :         {
; 1606 :             *pdwError = ERROR_MORE_DATA;
; 1607 :             return;

  00158	0affffe9	 beq         |$LN13@GetDefault|
  0015c	e3a03801	 mov         r3, #1, 16

; 1608 :         }
; 1609 : 
; 1610 :         *((PULONG)pOutBuf) = static_cast<ULONG>( CSPROPERTY_TYPE_GET | CSPROPERTY_TYPE_SET | CSPROPERTY_TYPE_DEFAULTVALUES );

  00160	e3833003	 orr         r3, r3, #3
  00164	e5883000	 str         r3, [r8]

; 1611 :         *pdwError = ERROR_SUCCESS;

  00168	e3a03000	 mov         r3, #0
  0016c	e5863000	 str         r3, [r6]

; 1612 :     }
; 1613 :     else

  00170	ea000006	 b           |$LN1@GetDefault|
  00174		 |$LN3@GetDefault|

; 1614 :     {
; 1615 :         DEBUGMSG( ZONE_IOCTL, (_T("CAM_IOControl(%08x): Output buffer is not large enough\r\n"), this ) );

  00174	e3130010	 tst         r3, #0x10
  00178	159f001c	 ldrne       r0, [pc, #0x1C]
  0017c	11a01005	 movne       r1, r5
  00180	1b000000	 blne        NKDbgPrintfW

; 1616 :         *pdwError = ERROR_INSUFFICIENT_BUFFER;

  00184	e59d3028	 ldr         r3, [sp, #0x28]
  00188	e3a0207a	 mov         r2, #0x7A
  0018c	e5832000	 str         r2, [r3]
  00190		 |$LN1@GetDefault|

; 1617 :     }
; 1618 : 
; 1619 :     return;
; 1620 : }

  00190	e28dd004	 add         sp, sp, #4
  00194	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  00198	e12fff1e	 bx          lr
  0019c		 |$LN23@GetDefault|
  0019c		 |$LN24@GetDefault|
  0019c	00000000	 DCD         |??_C@_1HC@MOMEBGNK@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAO?$AAu?$AAt?$AAp?$AAu?$AAt?$AA?5?$AAb?$AAu?$AAf?$AAf@|
  001a0		 |$LN25@GetDefault|
  001a0	00000000	 DCD         |??_C@_1FK@EAAFFBBM@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAR?$AAe?$AAt?$AAu?$AAr?$AAn?$AAi?$AAn?$AAg?$AA?5?$AAA@|
  001a4		 |$LN26@GetDefault|
  001a4	00000000	 DCD         |dpCurSettings|
  001a8		 |$LN27@GetDefault|
  001a8	00000000	 DCD         |??_C@_1HO@BEMNEPGI@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAN?$AAo?$AAt?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAa?$AAv?$AAa@|
  001ac		 |$M35863|

			 ENDP  ; |?GetDefaultValues@CCameraDevice@@AAAXPAEKPAKPAU_Sensor_Property@@1@Z|, CCameraDevice::GetDefaultValues

	EXPORT	|?PDDClosePin@CCameraDevice@@QAAKK@Z|	; CCameraDevice::PDDClosePin

  00000			 AREA	 |.pdata|, PDATA
|$T35881| DCD	|$LN5@PDDClosePi|
	DCD	0x40000801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PDDClosePin@CCameraDevice@@QAAKK@Z| PROC ; CCameraDevice::PDDClosePin

; 1623 : {   

  00000		 |$LN5@PDDClosePi|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35878|
  00004	e1a03000	 mov         r3, r0

; 1624 :     return m_PDDFuncTbl.PDD_DeInitSensorMode( m_PDDContext, ulPinId );

  00008	e59302a4	 ldr         r0, [r3, #0x2A4]
  0000c	e59332d0	 ldr         r3, [r3, #0x2D0]
  00010	e1a0e00f	 mov         lr, pc
  00014	e12fff13	 bx          r3

; 1625 : }

  00018	e49de004	 ldr         lr, [sp], #4
  0001c	e12fff1e	 bx          lr
  00020		 |$M35879|

			 ENDP  ; |?PDDClosePin@CCameraDevice@@QAAKK@Z|, CCameraDevice::PDDClosePin

	EXPORT	|?PDDGetPinInfo@CCameraDevice@@QAAKKPAU_SensorModeInfo@@@Z| ; CCameraDevice::PDDGetPinInfo

  00000			 AREA	 |.pdata|, PDATA
|$T35893| DCD	|$LN5@PDDGetPinI|
	DCD	0x40000801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PDDGetPinInfo@CCameraDevice@@QAAKKPAU_SensorModeInfo@@@Z| PROC ; CCameraDevice::PDDGetPinInfo

; 1628 : {    

  00000		 |$LN5@PDDGetPinI|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35890|
  00004	e1a03000	 mov         r3, r0

; 1629 :     return m_PDDFuncTbl.PDD_GetSensorModeInfo( m_PDDContext, ulPinId, pSensorModeInfo );

  00008	e59302a4	 ldr         r0, [r3, #0x2A4]
  0000c	e59332d8	 ldr         r3, [r3, #0x2D8]
  00010	e1a0e00f	 mov         lr, pc
  00014	e12fff13	 bx          r3

; 1630 : }

  00018	e49de004	 ldr         lr, [sp], #4
  0001c	e12fff1e	 bx          lr
  00020		 |$M35891|

			 ENDP  ; |?PDDGetPinInfo@CCameraDevice@@QAAKKPAU_SensorModeInfo@@@Z|, CCameraDevice::PDDGetPinInfo

	EXPORT	|?PDDSetPinState@CCameraDevice@@QAAKKW4CSSTATE@@@Z| ; CCameraDevice::PDDSetPinState

  00000			 AREA	 |.pdata|, PDATA
|$T35905| DCD	|$LN5@PDDSetPinS|
	DCD	0x40000801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PDDSetPinState@CCameraDevice@@QAAKKW4CSSTATE@@@Z| PROC ; CCameraDevice::PDDSetPinState

; 1634 : {   

  00000		 |$LN5@PDDSetPinS|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35902|
  00004	e1a03000	 mov         r3, r0

; 1635 :     return m_PDDFuncTbl.PDD_SetSensorState( m_PDDContext, ulPinId, State );

  00008	e59302a4	 ldr         r0, [r3, #0x2A4]
  0000c	e59332d4	 ldr         r3, [r3, #0x2D4]
  00010	e1a0e00f	 mov         lr, pc
  00014	e12fff13	 bx          r3

; 1636 : }

  00018	e49de004	 ldr         lr, [sp], #4
  0001c	e12fff1e	 bx          lr
  00020		 |$M35903|

			 ENDP  ; |?PDDSetPinState@CCameraDevice@@QAAKKW4CSSTATE@@@Z|, CCameraDevice::PDDSetPinState

	EXPORT	|?PDDFillPinBuffer@CCameraDevice@@QAAKKPAE@Z| ; CCameraDevice::PDDFillPinBuffer

  00000			 AREA	 |.pdata|, PDATA
|$T35917| DCD	|$LN5@PDDFillPin|
	DCD	0x40000801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PDDFillPinBuffer@CCameraDevice@@QAAKKPAE@Z| PROC ; CCameraDevice::PDDFillPinBuffer

; 1640 : {  

  00000		 |$LN5@PDDFillPin|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35914|
  00004	e1a03000	 mov         r3, r0

; 1641 :     return m_PDDFuncTbl.PDD_FillBuffer( m_PDDContext, ulPinId, pImage );

  00008	e59302a4	 ldr         r0, [r3, #0x2A4]
  0000c	e59332f0	 ldr         r3, [r3, #0x2F0]
  00010	e1a0e00f	 mov         lr, pc
  00014	e12fff13	 bx          r3

; 1642 : }

  00018	e49de004	 ldr         lr, [sp], #4
  0001c	e12fff1e	 bx          lr
  00020		 |$M35915|

			 ENDP  ; |?PDDFillPinBuffer@CCameraDevice@@QAAKKPAE@Z|, CCameraDevice::PDDFillPinBuffer

	EXPORT	|?PDDInitPin@CCameraDevice@@QAAKKPAVCPinDevice@@@Z| ; CCameraDevice::PDDInitPin

  00000			 AREA	 |.pdata|, PDATA
|$T35929| DCD	|$LN5@PDDInitPin|
	DCD	0x40000801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PDDInitPin@CCameraDevice@@QAAKKPAVCPinDevice@@@Z| PROC ; CCameraDevice::PDDInitPin

; 1646 : {   

  00000		 |$LN5@PDDInitPin|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35926|
  00004	e1a03000	 mov         r3, r0

; 1647 :     return m_PDDFuncTbl.PDD_InitSensorMode( m_PDDContext, ulPinId, pPin );

  00008	e59302a4	 ldr         r0, [r3, #0x2A4]
  0000c	e59332cc	 ldr         r3, [r3, #0x2CC]
  00010	e1a0e00f	 mov         lr, pc
  00014	e12fff13	 bx          r3

; 1648 : }

  00018	e49de004	 ldr         lr, [sp], #4
  0001c	e12fff1e	 bx          lr
  00020		 |$M35927|

			 ENDP  ; |?PDDInitPin@CCameraDevice@@QAAKKPAVCPinDevice@@@Z|, CCameraDevice::PDDInitPin

	EXPORT	|?PDDSetPinFormat@CCameraDevice@@QAAKKPAUtagCS_DATARANGE_VIDEO@@@Z| ; CCameraDevice::PDDSetPinFormat

  00000			 AREA	 |.pdata|, PDATA
|$T35941| DCD	|$LN6@PDDSetPinF|
	DCD	0x40000c01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PDDSetPinFormat@CCameraDevice@@QAAKKPAUtagCS_DATARANGE_VIDEO@@@Z| PROC ; CCameraDevice::PDDSetPinFormat

; 1651 : {

  00000		 |$LN6@PDDSetPinF|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35938|
  00004	e3520000	 cmp         r2, #0
  00008	e1a03000	 mov         r3, r0

; 1652 :     if( NULL == pCsDataRangeVideo )
; 1653 :     {
; 1654 :         return ERROR_INVALID_PARAMETER;

  0000c	03a00057	 moveq       r0, #0x57

; 1658 : }

  00010	049de004	 ldreq       lr, [sp], #4
  00014	012fff1e	 bxeq        lr

; 1655 :     }
; 1656 :     
; 1657 :     return m_PDDFuncTbl.PDD_SetSensorModeFormat( m_PDDContext, ulPinId, pCsDataRangeVideo );

  00018	e59302a4	 ldr         r0, [r3, #0x2A4]
  0001c	e59332dc	 ldr         r3, [r3, #0x2DC]
  00020	e1a0e00f	 mov         lr, pc
  00024	e12fff13	 bx          r3

; 1658 : }

  00028	e49de004	 ldr         lr, [sp], #4
  0002c	e12fff1e	 bx          lr
  00030		 |$M35939|

			 ENDP  ; |?PDDSetPinFormat@CCameraDevice@@QAAKKPAUtagCS_DATARANGE_VIDEO@@@Z|, CCameraDevice::PDDSetPinFormat

	EXPORT	|?PDDAllocatePinBuffer@CCameraDevice@@QAAPAXK@Z| ; CCameraDevice::PDDAllocatePinBuffer

  00000			 AREA	 |.pdata|, PDATA
|$T35952| DCD	|$LN5@PDDAllocat|
	DCD	0x40000801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PDDAllocatePinBuffer@CCameraDevice@@QAAPAXK@Z| PROC ; CCameraDevice::PDDAllocatePinBuffer

; 1662 : {   

  00000		 |$LN5@PDDAllocat|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35949|
  00004	e1a03000	 mov         r3, r0

; 1663 :     return m_PDDFuncTbl.PDD_AllocateBuffer( m_PDDContext, ulPinId );

  00008	e59302a4	 ldr         r0, [r3, #0x2A4]
  0000c	e59332e0	 ldr         r3, [r3, #0x2E0]
  00010	e1a0e00f	 mov         lr, pc
  00014	e12fff13	 bx          r3

; 1664 : }

  00018	e49de004	 ldr         lr, [sp], #4
  0001c	e12fff1e	 bx          lr
  00020		 |$M35950|

			 ENDP  ; |?PDDAllocatePinBuffer@CCameraDevice@@QAAPAXK@Z|, CCameraDevice::PDDAllocatePinBuffer

	EXPORT	|?PDDDeAllocatePinBuffer@CCameraDevice@@QAAKKPAX@Z| ; CCameraDevice::PDDDeAllocatePinBuffer

  00000			 AREA	 |.pdata|, PDATA
|$T35964| DCD	|$LN5@PDDDeAlloc|
	DCD	0x40000801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PDDDeAllocatePinBuffer@CCameraDevice@@QAAKKPAX@Z| PROC ; CCameraDevice::PDDDeAllocatePinBuffer

; 1668 : {

  00000		 |$LN5@PDDDeAlloc|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35961|
  00004	e1a03000	 mov         r3, r0

; 1669 :     return m_PDDFuncTbl.PDD_DeAllocateBuffer( m_PDDContext, ulPinId, pBuffer );

  00008	e59302a4	 ldr         r0, [r3, #0x2A4]
  0000c	e59332e4	 ldr         r3, [r3, #0x2E4]
  00010	e1a0e00f	 mov         lr, pc
  00014	e12fff13	 bx          r3

; 1670 : }

  00018	e49de004	 ldr         lr, [sp], #4
  0001c	e12fff1e	 bx          lr
  00020		 |$M35962|

			 ENDP  ; |?PDDDeAllocatePinBuffer@CCameraDevice@@QAAKKPAX@Z|, CCameraDevice::PDDDeAllocatePinBuffer

	EXPORT	|?PDDRegisterClientBuffer@CCameraDevice@@QAAKKPAX@Z| ; CCameraDevice::PDDRegisterClientBuffer

  00000			 AREA	 |.pdata|, PDATA
|$T35976| DCD	|$LN5@PDDRegiste|
	DCD	0x40000801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PDDRegisterClientBuffer@CCameraDevice@@QAAKKPAX@Z| PROC ; CCameraDevice::PDDRegisterClientBuffer

; 1673 : {

  00000		 |$LN5@PDDRegiste|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35973|
  00004	e1a03000	 mov         r3, r0

; 1674 :     return m_PDDFuncTbl.PDD_RegisterClientBuffer( m_PDDContext, ulPinId, pBuffer );

  00008	e59302a4	 ldr         r0, [r3, #0x2A4]
  0000c	e59332e8	 ldr         r3, [r3, #0x2E8]
  00010	e1a0e00f	 mov         lr, pc
  00014	e12fff13	 bx          r3

; 1675 : }

  00018	e49de004	 ldr         lr, [sp], #4
  0001c	e12fff1e	 bx          lr
  00020		 |$M35974|

			 ENDP  ; |?PDDRegisterClientBuffer@CCameraDevice@@QAAKKPAX@Z|, CCameraDevice::PDDRegisterClientBuffer

	EXPORT	|?PDDUnRegisterClientBuffer@CCameraDevice@@QAAKKPAX@Z| ; CCameraDevice::PDDUnRegisterClientBuffer

  00000			 AREA	 |.pdata|, PDATA
|$T35988| DCD	|$LN5@PDDUnRegis|
	DCD	0x40000801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PDDUnRegisterClientBuffer@CCameraDevice@@QAAKKPAX@Z| PROC ; CCameraDevice::PDDUnRegisterClientBuffer

; 1678 : {   

  00000		 |$LN5@PDDUnRegis|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M35985|
  00004	e1a03000	 mov         r3, r0

; 1679 :     return m_PDDFuncTbl.PDD_UnRegisterClientBuffer( m_PDDContext, ulPinId, pBuffer );

  00008	e59302a4	 ldr         r0, [r3, #0x2A4]
  0000c	e59332ec	 ldr         r3, [r3, #0x2EC]
  00010	e1a0e00f	 mov         lr, pc
  00014	e12fff13	 bx          r3

; 1680 : }

  00018	e49de004	 ldr         lr, [sp], #4
  0001c	e12fff1e	 bx          lr
  00020		 |$M35986|

			 ENDP  ; |?PDDUnRegisterClientBuffer@CCameraDevice@@QAAKKPAX@Z|, CCameraDevice::PDDUnRegisterClientBuffer

	EXPORT	|?PDDHandlePinCustomProperties@CCameraDevice@@QAAKKPAEK0KPAK@Z| ; CCameraDevice::PDDHandlePinCustomProperties

  00000			 AREA	 |.pdata|, PDATA
|$T36001| DCD	|$LN5@PDDHandleP|
	DCD	0x40001002
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PDDHandlePinCustomProperties@CCameraDevice@@QAAKKPAEK0KPAK@Z| PROC ; CCameraDevice::PDDHandlePinCustomProperties

; 1691 : {   

  00000		 |$LN5@PDDHandleP|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M35998|
  00008	e1a06000	 mov         r6, r0

; 1692 :     return m_PDDFuncTbl.PDD_HandleModeCustomProperties( m_PDDContext, ulPinId, pInBuf, InBufLen, pOutBuf, OutBufLen, pdwBytesTransferred );

  0000c	e59de024	 ldr         lr, [sp, #0x24]
  00010	e59d4020	 ldr         r4, [sp, #0x20]
  00014	e59d501c	 ldr         r5, [sp, #0x1C]
  00018	e59602a4	 ldr         r0, [r6, #0x2A4]
  0001c	e59662f4	 ldr         r6, [r6, #0x2F4]
  00020	e58de008	 str         lr, [sp, #8]
  00024	e58d4004	 str         r4, [sp, #4]
  00028	e58d5000	 str         r5, [sp]
  0002c	e1a0e00f	 mov         lr, pc
  00030	e12fff16	 bx          r6

; 1693 : }

  00034	e28dd00c	 add         sp, sp, #0xC
  00038	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$M35999|

			 ENDP  ; |?PDDHandlePinCustomProperties@CCameraDevice@@QAAKKPAEK0KPAK@Z|, CCameraDevice::PDDHandlePinCustomProperties

	EXPORT	|?GetPDDPinInfo@CCameraDevice@@AAA_NXZ|	; CCameraDevice::GetPDDPinInfo

  00000			 AREA	 |.pdata|, PDATA
|$T36021| DCD	|$LN22@GetPDDPinI|
	DCD	0x40003c02
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?GetPDDPinInfo@CCameraDevice@@AAA_NXZ| PROC ; CCameraDevice::GetPDDPinInfo

; 155  : {

  00000		 |$LN22@GetPDDPinI|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd01c	 sub         sp, sp, #0x1C
  00008		 |$M36018|
  00008	e1a04000	 mov         r4, r0

; 156  :     SENSORMODEINFO SensorModeInfo;
; 157  :     if( NULL == m_pStrmInstances )

  0000c	e5943024	 ldr         r3, [r4, #0x24]
  00010	e3530000	 cmp         r3, #0
  00014	1a000001	 bne         |$LN9@GetPDDPinI|
  00018		 |$LN15@GetPDDPinI|

; 158  :     {
; 159  :         return false;

  00018	e3a00000	 mov         r0, #0
  0001c	ea000030	 b           |$LN10@GetPDDPinI|
  00020		 |$LN9@GetPDDPinI|

; 160  :     }
; 161  : 
; 162  :     for( UINT i=0; i < m_AdapterInfo.ulCTypes; i++ )

  00020	e594302c	 ldr         r3, [r4, #0x2C]
  00024	e3a05000	 mov         r5, #0
  00028	e3530000	 cmp         r3, #0
  0002c	9a00002b	 bls         |$LN6@GetPDDPinI|
  00030	e3a06000	 mov         r6, #0
  00034		 |$LL8@GetPDDPinI|

; 163  :     {
; 164  :         if( ERROR_SUCCESS != PDDGetPinInfo( i, &SensorModeInfo ) )

  00034	e59402a4	 ldr         r0, [r4, #0x2A4]
  00038	e59432d8	 ldr         r3, [r4, #0x2D8]
  0003c	e28d2000	 add         r2, sp, #0
  00040	e1a01005	 mov         r1, r5
  00044	e1a0e00f	 mov         lr, pc
  00048	e12fff13	 bx          r3
  0004c	e3500000	 cmp         r0, #0
  00050	1afffff0	 bne         |$LN15@GetPDDPinI|

; 165  :         {
; 166  :             return false ;
; 167  :         }
; 168  :         m_pStrmInstances[i].ulPossibleCount = SensorModeInfo.PossibleCount ;

  00054	e5943024	 ldr         r3, [r4, #0x24]
  00058	e59d200c	 ldr         r2, [sp, #0xC]
  0005c	e0863003	 add         r3, r6, r3
  00060	e5832008	 str         r2, [r3, #8]

; 169  :         m_pStrmInstances[i].VideoCaps.DefaultVideoControlCaps = SensorModeInfo.VideoCaps.DefaultVideoControlCaps;

  00064	e5943024	 ldr         r3, [r4, #0x24]
  00068	e59d2010	 ldr         r2, [sp, #0x10]
  0006c	e0863003	 add         r3, r6, r3
  00070	e5832010	 str         r2, [r3, #0x10]

; 170  :         m_pStrmInstances[i].VideoCaps.CurrentVideoControlCaps = SensorModeInfo.VideoCaps.CurrentVideoControlCaps;

  00074	e5943024	 ldr         r3, [r4, #0x24]
  00078	e59d2014	 ldr         r2, [sp, #0x14]
  0007c	e0863003	 add         r3, r6, r3
  00080	e5832014	 str         r2, [r3, #0x14]

; 171  :         m_pStrmInstances[i].pVideoFormat = SensorModeInfo.pVideoFormat;

  00084	e5943024	 ldr         r3, [r4, #0x24]
  00088	e59d2018	 ldr         r2, [sp, #0x18]
  0008c	e0863003	 add         r3, r6, r3
  00090	e5832018	 str         r2, [r3, #0x18]

; 172  :         
; 173  :         if( SensorModeInfo.MemoryModel == CSPROPERTY_BUFFER_DRIVER &&
; 174  :             ( NULL == m_PDDFuncTbl.PDD_AllocateBuffer || NULL == m_PDDFuncTbl.PDD_DeAllocateBuffer ) )

  00094	e59d3004	 ldr         r3, [sp, #4]
  00098	e3530001	 cmp         r3, #1
  0009c	1a000004	 bne         |$LN17@GetPDDPinI|
  000a0	e59432e0	 ldr         r3, [r4, #0x2E0]
  000a4	e3530000	 cmp         r3, #0
  000a8	0affffda	 beq         |$LN15@GetPDDPinI|
  000ac	e59432e4	 ldr         r3, [r4, #0x2E4]

; 175  :         {
; 176  :             return false;
; 177  :         }
; 178  : 
; 179  :         if( SensorModeInfo.MemoryModel != CSPROPERTY_BUFFER_DRIVER &&
; 180  :             ( NULL == m_PDDFuncTbl.PDD_RegisterClientBuffer || NULL == m_PDDFuncTbl.PDD_UnRegisterClientBuffer ) )

  000b0	ea000003	 b           |$LN19@GetPDDPinI|
  000b4		 |$LN17@GetPDDPinI|
  000b4	e59432e8	 ldr         r3, [r4, #0x2E8]
  000b8	e3530000	 cmp         r3, #0
  000bc	0affffd5	 beq         |$LN15@GetPDDPinI|
  000c0	e59432ec	 ldr         r3, [r4, #0x2EC]
  000c4		 |$LN19@GetPDDPinI|
  000c4	e3530000	 cmp         r3, #0
  000c8	0affffd2	 beq         |$LN15@GetPDDPinI|
  000cc	e594302c	 ldr         r3, [r4, #0x2C]
  000d0	e2855001	 add         r5, r5, #1
  000d4	e2866020	 add         r6, r6, #0x20
  000d8	e1550003	 cmp         r5, r3
  000dc	3affffd4	 bcc         |$LL8@GetPDDPinI|
  000e0		 |$LN6@GetPDDPinI|

; 181  :         {
; 182  :             return false;
; 183  :         }
; 184  :     }
; 185  : 
; 186  :     return true;

  000e0	e3a00001	 mov         r0, #1
  000e4		 |$LN10@GetPDDPinI|

; 187  : 
; 188  : }

  000e4	e28dd01c	 add         sp, sp, #0x1C
  000e8	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000ec	e12fff1e	 bx          lr
  000f0		 |$M36019|

			 ENDP  ; |?GetPDDPinInfo@CCameraDevice@@AAA_NXZ|, CCameraDevice::GetPDDPinInfo

	EXPORT	|?AdapterCompareFormat@CCameraDevice@@QAA_NKQAUtagCS_DATARANGE_VIDEO@@PAPAU2@_N@Z| ; CCameraDevice::AdapterCompareFormat

  00000			 AREA	 |.pdata|, PDATA
|$T36042| DCD	|$LN21@AdapterCom@2|
	DCD	0x40004801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AdapterCompareFormat@CCameraDevice@@QAA_NKQAUtagCS_DATARANGE_VIDEO@@PAPAU2@_N@Z| PROC ; CCameraDevice::AdapterCompareFormat

; 337  : {

  00000		 |$LN21@AdapterCom@2|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004		 |$M36039|
  00004	e1a06003	 mov         r6, r3
  00008	e1a05002	 mov         r5, r2
  0000c	e1a0b000	 mov         r11, r0

; 338  :     for ( ULONG ulCount = 0 ; ulCount < m_pStrmInstances[ulPinId].pVideoFormat->ulAvailFormats ; ulCount++ )

  00010	e59be024	 ldr         lr, [r11, #0x24]
  00014	e3a08000	 mov         r8, #0
  00018	e08e1281	 add         r1, lr, r1, lsl #5
  0001c	e5912018	 ldr         r2, [r1, #0x18]
  00020	e5921010	 ldr         r1, [r2, #0x10]
  00024	e1b0a001	 movs        r10, r1
  00028	0a000034	 beq         |$LN18@AdapterCom@2|
  0002c	e5927014	 ldr         r7, [r2, #0x14]
  00030	e5dd9024	 ldrb        r9, [sp, #0x24]
  00034		 |$LL11@AdapterCom@2|

; 339  :     {
; 340  :         PCS_DATARANGE_VIDEO pCsDataRangeVideo = m_pStrmInstances[ulPinId].pVideoFormat->pCsDataRangeVideo[ulCount];

  00034	e5974000	 ldr         r4, [r7]

; 341  : 
; 342  :         if ( false == AdapterCompareGUIDsAndFormatSize( reinterpret_cast<PCSDATARANGE>( pCsDataRangeVideo ),
; 343  :                                                         reinterpret_cast<PCSDATARANGE>( pCsDataRangeVideoToCompare ) ) )

  00038	e1a02005	 mov         r2, r5
  0003c	e1a0000b	 mov         r0, r11
  00040	e1a01004	 mov         r1, r4
  00044	eb000000	 bl          |?AdapterCompareGUIDsAndFormatSize@CCameraDevice@@AAA_NQATCSDATAFORMAT@@0@Z|
  00048	e3500000	 cmp         r0, #0
  0004c	0a000027	 beq         |$LN10@AdapterCom@2|

; 344  :         {
; 345  :             continue;
; 346  :         }
; 347  : 
; 348  :         if ( true == fDetailedComparison )

  00050	e3590001	 cmp         r9, #1
  00054	1a00002c	 bne         |$LN2@AdapterCom@2|

; 349  :         {
; 350  :             if ( ( pCsDataRangeVideoToCompare->bFixedSizeSamples != pCsDataRangeVideo->bFixedSizeSamples )
; 351  :                   || ( pCsDataRangeVideoToCompare->bTemporalCompression   != pCsDataRangeVideo->bTemporalCompression )
; 352  :                   || ( pCsDataRangeVideoToCompare->StreamDescriptionFlags != pCsDataRangeVideo->StreamDescriptionFlags )
; 353  :                   || ( pCsDataRangeVideoToCompare->MemoryAllocationFlags  != pCsDataRangeVideo->MemoryAllocationFlags ) )

  00058	e5952040	 ldr         r2, [r5, #0x40]
  0005c	e5943040	 ldr         r3, [r4, #0x40]
  00060	e1520003	 cmp         r2, r3
  00064	1a000021	 bne         |$LN10@AdapterCom@2|
  00068	e5952044	 ldr         r2, [r5, #0x44]
  0006c	e5943044	 ldr         r3, [r4, #0x44]
  00070	e1520003	 cmp         r2, r3
  00074	1a00001d	 bne         |$LN10@AdapterCom@2|
  00078	e5952048	 ldr         r2, [r5, #0x48]
  0007c	e5943048	 ldr         r3, [r4, #0x48]
  00080	e1520003	 cmp         r2, r3
  00084	1a000019	 bne         |$LN10@AdapterCom@2|
  00088	e595204c	 ldr         r2, [r5, #0x4C]
  0008c	e594304c	 ldr         r3, [r4, #0x4C]
  00090	e1520003	 cmp         r2, r3
  00094	1a000015	 bne         |$LN10@AdapterCom@2|

; 354  :             {
; 355  :                 continue;
; 356  :             }
; 357  :             if( pCsDataRangeVideoToCompare->VideoInfoHeader.AvgTimePerFrame < pCsDataRangeVideo->ConfigCaps.MinFrameInterval  ||
; 358  :                 pCsDataRangeVideoToCompare->VideoInfoHeader.AvgTimePerFrame > pCsDataRangeVideo->ConfigCaps.MaxFrameInterval  )

  00098	e59500fc	 ldr         r0, [r5, #0xFC]
  0009c	e59430bc	 ldr         r3, [r4, #0xBC]
  000a0	e59510f8	 ldr         r1, [r5, #0xF8]
  000a4	e59420b8	 ldr         r2, [r4, #0xB8]
  000a8	e1500003	 cmp         r0, r3
  000ac	ba00000f	 blt         |$LN10@AdapterCom@2|
  000b0	ca000001	 bgt         |$LN16@AdapterCom@2|
  000b4	e1510002	 cmp         r1, r2
  000b8	3a00000c	 bcc         |$LN10@AdapterCom@2|
  000bc		 |$LN16@AdapterCom@2|
  000bc	e59430c4	 ldr         r3, [r4, #0xC4]
  000c0	e59420c0	 ldr         r2, [r4, #0xC0]
  000c4	e1500003	 cmp         r0, r3
  000c8	ca000008	 bgt         |$LN10@AdapterCom@2|
  000cc	ba000001	 blt         |$LN17@AdapterCom@2|
  000d0	e1510002	 cmp         r1, r2
  000d4	8a000005	 bhi         |$LN10@AdapterCom@2|
  000d8		 |$LN17@AdapterCom@2|

; 359  :             {
; 360  :                 continue;
; 361  :             }
; 362  : 
; 363  :             if ( 0 != memcmp(&pCsDataRangeVideoToCompare->VideoInfoHeader.bmiHeader, &pCsDataRangeVideo->VideoInfoHeader.bmiHeader, sizeof (pCsDataRangeVideo->VideoInfoHeader.bmiHeader) ) )

  000d8	e3a02028	 mov         r2, #0x28
  000dc	e2841c01	 add         r1, r4, #1, 24
  000e0	e2850c01	 add         r0, r5, #1, 24
  000e4	eb000000	 bl          memcmp
  000e8	e3500000	 cmp         r0, #0
  000ec	0a000006	 beq         |$LN2@AdapterCom@2|
  000f0		 |$LN10@AdapterCom@2|

; 338  :     for ( ULONG ulCount = 0 ; ulCount < m_pStrmInstances[ulPinId].pVideoFormat->ulAvailFormats ; ulCount++ )

  000f0	e2888001	 add         r8, r8, #1
  000f4	e158000a	 cmp         r8, r10
  000f8	e2877004	 add         r7, r7, #4
  000fc	3affffcc	 bcc         |$LL11@AdapterCom@2|
  00100		 |$LN18@AdapterCom@2|

; 379  :     }
; 380  : 
; 381  :     return false;

  00100	e3a00000	 mov         r0, #0

; 382  : }

  00104	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00108	e12fff1e	 bx          lr
  0010c		 |$LN2@AdapterCom@2|

; 364  :             {
; 365  :                 continue;
; 366  :             }
; 367  : 
; 368  :         }
; 369  : 
; 370  :         // You can now perform more granular comparison involving ConfigCaps and VIDOINFOHEADER etc.
; 371  : 
; 372  :         /////////////////////////////////////////
; 373  :         if ( NULL != ppCsDataRangeVideoMatched )

  0010c	e3560000	 cmp         r6, #0

; 374  :         {
; 375  :             *ppCsDataRangeVideoMatched = pCsDataRangeVideo;

  00110	15864000	 strne       r4, [r6]

; 376  :         }
; 377  : 
; 378  :         return true;

  00114	e3a00001	 mov         r0, #1

; 382  : }

  00118	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  0011c	e12fff1e	 bx          lr
  00120		 |$M36040|

			 ENDP  ; |?AdapterCompareFormat@CCameraDevice@@QAA_NKQAUtagCS_DATARANGE_VIDEO@@PAPAU2@_N@Z|, CCameraDevice::AdapterCompareFormat

	EXPORT	|?AdapterCompareFormat@CCameraDevice@@QAA_NKQAUtagCS_DATAFORMAT_VIDEOINFOHEADER@@PAPAUtagCS_DATARANGE_VIDEO@@_N@Z| ; CCameraDevice::AdapterCompareFormat

  00000			 AREA	 |.pdata|, PDATA
|$T36063| DCD	|$LN19@AdapterCom@3|
	DCD	0x40003801
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AdapterCompareFormat@CCameraDevice@@QAA_NKQAUtagCS_DATAFORMAT_VIDEOINFOHEADER@@PAPAUtagCS_DATARANGE_VIDEO@@_N@Z| PROC ; CCameraDevice::AdapterCompareFormat

; 392  : {

  00000		 |$LN19@AdapterCom@3|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004		 |$M36060|
  00004	e1a05003	 mov         r5, r3
  00008	e1a09002	 mov         r9, r2
  0000c	e1a0b000	 mov         r11, r0

; 393  :     for ( ULONG ulCount = 0 ; ulCount < m_pStrmInstances[ulPinId].pVideoFormat->ulAvailFormats ; ulCount++ )

  00010	e59be024	 ldr         lr, [r11, #0x24]
  00014	e3a07000	 mov         r7, #0
  00018	e08e1281	 add         r1, lr, r1, lsl #5
  0001c	e5913018	 ldr         r3, [r1, #0x18]
  00020	e5931010	 ldr         r1, [r3, #0x10]
  00024	e1b0a001	 movs        r10, r1
  00028	0a000024	 beq         |$LN16@AdapterCom@3|
  0002c	e5936014	 ldr         r6, [r3, #0x14]
  00030	e5dd8024	 ldrb        r8, [sp, #0x24]
  00034		 |$LL9@AdapterCom@3|

; 394  :     {
; 395  :         PCS_DATARANGE_VIDEO pCsDataRangeVideo = m_pStrmInstances[ulPinId].pVideoFormat->pCsDataRangeVideo[ulCount];

  00034	e5964000	 ldr         r4, [r6]

; 396  : 
; 397  :         if ( false == AdapterCompareGUIDsAndFormatSize( reinterpret_cast<PCSDATARANGE>( pCsDataRangeVideo ),
; 398  :                                                         reinterpret_cast<PCSDATARANGE>( pCsDataVIHToCompare ) ) )

  00038	e1a02009	 mov         r2, r9
  0003c	e1a0000b	 mov         r0, r11
  00040	e1a01004	 mov         r1, r4
  00044	eb000000	 bl          |?AdapterCompareGUIDsAndFormatSize@CCameraDevice@@AAA_NQATCSDATAFORMAT@@0@Z|
  00048	e3500000	 cmp         r0, #0
  0004c	0a000017	 beq         |$LN8@AdapterCom@3|

; 399  :         {
; 400  :             continue;
; 401  :         }
; 402  : 
; 403  :         if ( true == fDetailedComparison )

  00050	e3580001	 cmp         r8, #1
  00054	1a00001c	 bne         |$LN2@AdapterCom@3|

; 404  :         {
; 405  :             if( pCsDataVIHToCompare->VideoInfoHeader.AvgTimePerFrame < pCsDataRangeVideo->ConfigCaps.MinFrameInterval  ||
; 406  :                 pCsDataVIHToCompare->VideoInfoHeader.AvgTimePerFrame > pCsDataRangeVideo->ConfigCaps.MaxFrameInterval  )

  00058	e599006c	 ldr         r0, [r9, #0x6C]
  0005c	e59430bc	 ldr         r3, [r4, #0xBC]
  00060	e5991068	 ldr         r1, [r9, #0x68]
  00064	e59420b8	 ldr         r2, [r4, #0xB8]
  00068	e1500003	 cmp         r0, r3
  0006c	ba00000f	 blt         |$LN8@AdapterCom@3|
  00070	ca000001	 bgt         |$LN14@AdapterCom@3|
  00074	e1510002	 cmp         r1, r2
  00078	3a00000c	 bcc         |$LN8@AdapterCom@3|
  0007c		 |$LN14@AdapterCom@3|
  0007c	e59430c4	 ldr         r3, [r4, #0xC4]
  00080	e59420c0	 ldr         r2, [r4, #0xC0]
  00084	e1500003	 cmp         r0, r3
  00088	ca000008	 bgt         |$LN8@AdapterCom@3|
  0008c	ba000001	 blt         |$LN15@AdapterCom@3|
  00090	e1510002	 cmp         r1, r2
  00094	8a000005	 bhi         |$LN8@AdapterCom@3|
  00098		 |$LN15@AdapterCom@3|

; 407  :             {
; 408  :                 continue;
; 409  :             }
; 410  : 
; 411  :             if ( 0 != memcmp(&pCsDataVIHToCompare->VideoInfoHeader.bmiHeader, &pCsDataRangeVideo->VideoInfoHeader.bmiHeader, sizeof (pCsDataRangeVideo->VideoInfoHeader.bmiHeader) ) )

  00098	e3a02028	 mov         r2, #0x28
  0009c	e2841c01	 add         r1, r4, #1, 24
  000a0	e2890070	 add         r0, r9, #0x70
  000a4	eb000000	 bl          memcmp
  000a8	e3500000	 cmp         r0, #0
  000ac	0a000006	 beq         |$LN2@AdapterCom@3|
  000b0		 |$LN8@AdapterCom@3|

; 393  :     for ( ULONG ulCount = 0 ; ulCount < m_pStrmInstances[ulPinId].pVideoFormat->ulAvailFormats ; ulCount++ )

  000b0	e2877001	 add         r7, r7, #1
  000b4	e157000a	 cmp         r7, r10
  000b8	e2866004	 add         r6, r6, #4
  000bc	3affffdc	 bcc         |$LL9@AdapterCom@3|
  000c0		 |$LN16@AdapterCom@3|

; 426  :     }
; 427  : 
; 428  :     return false;

  000c0	e3a00000	 mov         r0, #0

; 429  : }

  000c4	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  000c8	e12fff1e	 bx          lr
  000cc		 |$LN2@AdapterCom@3|

; 412  :             {
; 413  :                 continue;
; 414  :             }
; 415  :         }
; 416  : 
; 417  :         // You can now perform more granular comparison involving ConfigCaps and VIDOINFOHEADER etc.
; 418  : 
; 419  :         /////////////////////////////////////////
; 420  :         if ( NULL != ppCsDataRangeVideoMatched )

  000cc	e3550000	 cmp         r5, #0

; 421  :         {
; 422  :             *ppCsDataRangeVideoMatched = pCsDataRangeVideo;

  000d0	15854000	 strne       r4, [r5]

; 423  :         }
; 424  : 
; 425  :         return true;

  000d4	e3a00001	 mov         r0, #1

; 429  : }

  000d8	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  000dc	e12fff1e	 bx          lr
  000e0		 |$M36061|

			 ENDP  ; |?AdapterCompareFormat@CCameraDevice@@QAA_NKQAUtagCS_DATAFORMAT_VIDEOINFOHEADER@@PAPAUtagCS_DATARANGE_VIDEO@@_N@Z|, CCameraDevice::AdapterCompareFormat

	EXPORT	|?AdapterHandlePinRequests@CCameraDevice@@QAAKPAEK0KPAK@Z| ; CCameraDevice::AdapterHandlePinRequests
	EXPORT	|??_C@_1GC@ODMMNELO@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAC?$AAS?$AAP?$AAR?$AAO?$AAP?$AAE?$AAR?$AAT?$AAY?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@JCMDKLJI@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAC?$AAS?$AAP?$AAR?$AAO?$AAP?$AAE?$AAR?$AAT?$AAY?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GC@PAJEGMLE@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAC?$AAS?$AAP?$AAR?$AAO?$AAP?$AAE?$AAR?$AAT?$AAY?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GO@MEBIIEIP@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAC?$AAS?$AAP?$AAR?$AAO?$AAP?$AAE?$AAR?$AAT?$AAY?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FO@FPHPOEPM@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAC?$AAS?$AAP?$AAR?$AAO?$AAP?$AAE?$AAR?$AAT?$AAY?$AA_@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@DJBFBLFB@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAP?$AAi?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GI@JPCMHEPF@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAP?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy?$AA?5?$AAC?$AAS@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@OKCKHBJG@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAP?$AAi?$AAn?$AAR?$AAe@| [ DATA ] ; `string'
	IMPORT	|LeaveCriticalSection|
	IMPORT	|EnterCriticalSection|
	IMPORT	|wcslen|

  00000			 AREA	 |.pdata|, PDATA
|$T36178| DCD	|$LN108@AdapterHan@4|
	DCD	0x40018c02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@ODMMNELO@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAC?$AAS?$AAP?$AAR?$AAO?$AAP?$AAE?$AAR?$AAT?$AAY?$AA_@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "C", 0x0, "S", 0x0, "P", 0x0, "R"
	DCB	0x0, "O", 0x0, "P", 0x0, "E", 0x0, "R", 0x0, "T", 0x0, "Y"
	DCB	0x0, "_", 0x0, "P", 0x0, "I", 0x0, "N", 0x0, "_", 0x0, "C"
	DCB	0x0, "I", 0x0, "N", 0x0, "S", 0x0, "T", 0x0, "A", 0x0, "N"
	DCB	0x0, "C", 0x0, "E", 0x0, "S", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@JCMDKLJI@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAC?$AAS?$AAP?$AAR?$AAO?$AAP?$AAE?$AAR?$AAT?$AAY?$AA_@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "C", 0x0, "S", 0x0, "P", 0x0, "R"
	DCB	0x0, "O", 0x0, "P", 0x0, "E", 0x0, "R", 0x0, "T", 0x0, "Y"
	DCB	0x0, "_", 0x0, "P", 0x0, "I", 0x0, "N", 0x0, "_", 0x0, "C"
	DCB	0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, "S", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@PAJEGMLE@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAC?$AAS?$AAP?$AAR?$AAO?$AAP?$AAE?$AAR?$AAT?$AAY?$AA_@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "C", 0x0, "S", 0x0, "P", 0x0, "R"
	DCB	0x0, "O", 0x0, "P", 0x0, "E", 0x0, "R", 0x0, "T", 0x0, "Y"
	DCB	0x0, "_", 0x0, "P", 0x0, "I", 0x0, "N", 0x0, "_", 0x0, "D"
	DCB	0x0, "A", 0x0, "T", 0x0, "A", 0x0, "R", 0x0, "A", 0x0, "N"
	DCB	0x0, "G", 0x0, "E", 0x0, "S", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GO@MEBIIEIP@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAC?$AAS?$AAP?$AAR?$AAO?$AAP?$AAE?$AAR?$AAT?$AAY?$AA_@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "C", 0x0, "S", 0x0, "P", 0x0, "R"
	DCB	0x0, "O", 0x0, "P", 0x0, "E", 0x0, "R", 0x0, "T", 0x0, "Y"
	DCB	0x0, "_", 0x0, "P", 0x0, "I", 0x0, "N", 0x0, "_", 0x0, "D"
	DCB	0x0, "A", 0x0, "T", 0x0, "A", 0x0, "I", 0x0, "N", 0x0, "T"
	DCB	0x0, "E", 0x0, "R", 0x0, "S", 0x0, "E", 0x0, "C", 0x0, "T"
	DCB	0x0, "I", 0x0, "O", 0x0, "N", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@FPHPOEPM@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAC?$AAS?$AAP?$AAR?$AAO?$AAP?$AAE?$AAR?$AAT?$AAY?$AA_@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "C", 0x0, "S", 0x0, "P", 0x0, "R"
	DCB	0x0, "O", 0x0, "P", 0x0, "E", 0x0, "R", 0x0, "T", 0x0, "Y"
	DCB	0x0, "_", 0x0, "P", 0x0, "I", 0x0, "N", 0x0, "_", 0x0, "C"
	DCB	0x0, "A", 0x0, "T", 0x0, "E", 0x0, "G", 0x0, "O", 0x0, "R"
	DCB	0x0, "Y", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@DJBFBLFB@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAP?$AAi?$AAn@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "P", 0x0, "i"
	DCB	0x0, "n", 0x0, "I", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@JPCMHEPF@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAP?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy?$AA?5?$AAC?$AAS@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "P", 0x0, "r", 0x0, "o", 0x0, "p"
	DCB	0x0, "e", 0x0, "r", 0x0, "t", 0x0, "y", 0x0, " ", 0x0, "C"
	DCB	0x0, "S", 0x0, "P", 0x0, "R", 0x0, "O", 0x0, "P", 0x0, "E"
	DCB	0x0, "R", 0x0, "T", 0x0, "Y", 0x0, "_", 0x0, "P", 0x0, "I"
	DCB	0x0, "N", 0x0, "_", 0x0, "N", 0x0, "A", 0x0, "M", 0x0, "E"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@OKCKHBJG@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAP?$AAi?$AAn?$AAR?$AAe@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "P", 0x0, "i", 0x0, "n", 0x0, "R"
	DCB	0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AdapterHandlePinRequests@CCameraDevice@@QAAKPAEK0KPAK@Z| PROC ; CCameraDevice::AdapterHandlePinRequests

; 504  : {

  00000		 |$LN108@AdapterHan@4|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd020	 sub         sp, sp, #0x20
  00008		 |$M36175|
  00008	e1a0b003	 mov         r11, r3
  0000c	e1a09002	 mov         r9, r2
  00010	e1a07001	 mov         r7, r1
  00014	e1a05000	 mov         r5, r0

; 505  :     DEBUGMSG( ZONE_IOCTL, ( _T("CAM_IOControl(%08x): HandlePinRequests\r\n"), this ) );

  00018	e59f660c	 ldr         r6, [pc, #0x60C]
  0001c	e596e440	 ldr         lr, [r6, #0x440]
  00020	e31e0010	 tst         lr, #0x10
  00024	159f05fc	 ldrne       r0, [pc, #0x5FC]
  00028	11a01005	 movne       r1, r5
  0002c	1b000000	 blne        NKDbgPrintfW

; 506  : 
; 507  :     DWORD                          dwError           = ERROR_INVALID_PARAMETER;
; 508  :     PCSP_PIN                       pCsPin            = NULL;
; 509  :     PCS_DATARANGE_VIDEO            pCsDataRangeVideo = NULL;
; 510  :     PCSMULTIPLE_ITEM               pCsMultipleItem   = NULL;
; 511  :     PCS_DATAFORMAT_VIDEOINFOHEADER pCsDataFormatVih  = NULL;
; 512  :     PCSPIN_CINSTANCES              pCsPinCinstances  = NULL;
; 513  : 
; 514  :     CSPROPERTY                      csProp = {0};

  00030	e3a03000	 mov         r3, #0
  00034	e3a04057	 mov         r4, #0x57
  00038	e3a02014	 mov         r2, #0x14
  0003c	e3a01000	 mov         r1, #0
  00040	e28d000c	 add         r0, sp, #0xC
  00044	e58d3008	 str         r3, [sp, #8]
  00048	e58d4004	 str         r4, [sp, #4]
  0004c	eb000000	 bl          memset

; 515  :     LONG                            lPinId = 0;
; 516  : 
; 517  :     if( !CeSafeCopyMemory( &csProp, pInBuf, sizeof( CSPROPERTY )))

  00050	e3a02018	 mov         r2, #0x18
  00054	e1a01007	 mov         r1, r7
  00058	e28d0008	 add         r0, sp, #8
  0005c	eb000000	 bl          CeSafeCopyMemory
  00060	e3500000	 cmp         r0, #0

; 518  :     {
; 519  :         return dwError;

  00064	0a000136	 beq         |$LN103@AdapterHan@4|

; 520  :     }
; 521  : 
; 522  :     *pdwBytesTransferred = 0;

  00068	e59d8048	 ldr         r8, [sp, #0x48]

; 523  : 
; 524  :     // we support PROPSETID_Pin, so just return success
; 525  :     if ( CSPROPERTY_TYPE_SETSUPPORT == csProp.Flags )

  0006c	e59d301c	 ldr         r3, [sp, #0x1C]
  00070	e3a02000	 mov         r2, #0
  00074	e5882000	 str         r2, [r8]
  00078	e3530c01	 cmp         r3, #1, 24

; 526  :     {
; 527  :         return ERROR_SUCCESS;

  0007c	0a000134	 beq         |$LN26@AdapterHan@4|

; 528  :     }
; 529  : 
; 530  :     // we are here so the request is not SETSUPPORT and after this only GET requests will be entertained since
; 531  :     // PROPSETID_Pin contains READ-ONLY properties
; 532  :     if ( CSPROPERTY_TYPE_GET != csProp.Flags )

  00080	e3530001	 cmp         r3, #1

; 533  :     {
; 534  :         return dwError;

  00084	1a00012e	 bne         |$LN103@AdapterHan@4|

; 535  :     }
; 536  :    
; 537  :     switch( csProp.Id )

  00088	e59d3018	 ldr         r3, [sp, #0x18]
  0008c	e3530000	 cmp         r3, #0
  00090	0a000131	 beq         |$LN36@AdapterHan@4|
  00094	e3530001	 cmp         r3, #1
  00098	0a000115	 beq         |$LN39@AdapterHan@4|
  0009c	e3530002	 cmp         r3, #2
  000a0	0a0000ce	 beq         |$LN32@AdapterHan@4|
  000a4	e3530003	 cmp         r3, #3
  000a8	0a00007e	 beq         |$LN25@AdapterHan@4|
  000ac	e3530004	 cmp         r3, #4
  000b0	0a000058	 beq         |$LN16@AdapterHan@4|
  000b4	e3530005	 cmp         r3, #5
  000b8	0a000034	 beq         |$LN11@AdapterHan@4|
  000bc	e3530006	 cmp         r3, #6

; 787  :         }
; 788  : 
; 789  :         default:
; 790  :         {
; 791  :             DEBUGMSG( ZONE_IOCTL, (_T("CAM_IOControl(%08x): Invalid Property\r\n"), this ) );

  000c0	e5963440	 ldr         r3, [r6, #0x440]
  000c4	0a000005	 beq         |$LN6@AdapterHan@4|
  000c8	e3130010	 tst         r3, #0x10
  000cc	0a00001d	 beq         |$LN40@AdapterHan@4|
  000d0	e59f054c	 ldr         r0, [pc, #0x54C]
  000d4	e1a01005	 mov         r1, r5
  000d8	eb000000	 bl          NKDbgPrintfW

; 792  : 
; 793  :             break;

  000dc	ea000019	 b           |$LN40@AdapterHan@4|
  000e0		 |$LN6@AdapterHan@4|

; 755  :         }
; 756  : 
; 757  :         case CSPROPERTY_PIN_DEVICENAME:
; 758  :         {
; 759  :             DEBUGMSG( ZONE_IOCTL, (_T("CAM_IOControl(%08x): Property CSPROPERTY_PIN_NAME\r\n"), this ) );

  000e0	e3130010	 tst         r3, #0x10
  000e4	159f0530	 ldrne       r0, [pc, #0x530]
  000e8	11a01005	 movne       r1, r5
  000ec	1b000000	 blne        NKDbgPrintfW

; 760  : 
; 761  :             if ( NULL == ( pCsPin = reinterpret_cast<PCSP_PIN>( ValidateBuffer( pInBuf, InBufLen, sizeof(CSP_PIN), &dwError ) ) ) )

  000f0	e28d3004	 add         r3, sp, #4
  000f4	e58d3000	 str         r3, [sp]
  000f8	e3a03020	 mov         r3, #0x20
  000fc	e1a02009	 mov         r2, r9
  00100	e1a01007	 mov         r1, r7
  00104	e1a00005	 mov         r0, r5
  00108	eb000000	 bl          |?ValidateBuffer@CCameraDevice@@QAAPAXPAXKKPAK@Z|
  0010c	e3500000	 cmp         r0, #0
  00110	0a00000b	 beq         |$LN100@AdapterHan@4|

; 762  :             {
; 763  :                 break;
; 764  :             }
; 765  : 
; 766  :             lPinId = pCsPin->PinId;

  00114	e5902018	 ldr         r2, [r0, #0x18]

; 767  :             if ( false == IsValidPin( lPinId ) )

  00118	e595302c	 ldr         r3, [r5, #0x2C]
  0011c	e1520003	 cmp         r2, r3
  00120	23a03000	 movcs       r3, #0
  00124	33a03001	 movcc       r3, #1
  00128	e3530000	 cmp         r3, #0
  0012c	1a000009	 bne         |$LN4@AdapterHan@4|
  00130		 |$LN101@AdapterHan@4|

; 768  :             {
; 769  :                 DEBUGMSG( ZONE_IOCTL, (_T("CAM_IOControl(%08x): Invalid PinId\r\n"), this ) );

  00130	e5963440	 ldr         r3, [r6, #0x440]
  00134	e3130010	 tst         r3, #0x10
  00138	159f04e0	 ldrne       r0, [pc, #0x4E0]
  0013c	11a01005	 movne       r1, r5
  00140	1b000000	 blne        NKDbgPrintfW
  00144		 |$LN100@AdapterHan@4|

; 770  :                 break;

  00144	e59d4004	 ldr         r4, [sp, #4]
  00148		 |$LN40@AdapterHan@4|

; 794  :         }
; 795  :     }
; 796  : 
; 797  :     return dwError;
; 798  : }

  00148	e1a00004	 mov         r0, r4
  0014c	e28dd020	 add         sp, sp, #0x20
  00150	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00154	e12fff1e	 bx          lr
  00158		 |$LN4@AdapterHan@4|

; 771  :             }
; 772  : 
; 773  :             *pdwBytesTransferred = ( wcslen( g_wszPinDeviceNames[lPinId] ) + 1 ) * sizeof( g_wszPinDeviceNames[0][0] ) ;

  00158	e59f34b8	 ldr         r3, [pc, #0x4B8]
  0015c	e0824102	 add         r4, r2, r2, lsl #2
  00160	e283503c	 add         r5, r3, #0x3C
  00164	e0850104	 add         r0, r5, r4, lsl #2
  00168	eb000000	 bl          wcslen

; 774  : 
; 775  :             if( OutBufLen < *pdwBytesTransferred )

  0016c	e59d2044	 ldr         r2, [sp, #0x44]
  00170	e2803001	 add         r3, r0, #1
  00174	e1a03083	 mov         r3, r3, lsl #1
  00178	e5883000	 str         r3, [r8]
  0017c	e1520003	 cmp         r2, r3

; 776  :             {
; 777  :                 dwError = ERROR_MORE_DATA;
; 778  :                 break;

  00180	3a0000e7	 bcc         |$LN102@AdapterHan@4|

; 779  :             }
; 780  : 
; 781  :             if( CeSafeCopyMemory( pOutBuf, g_wszPinDeviceNames[lPinId], *pdwBytesTransferred ))

  00184	e1a02003	 mov         r2, r3
  00188	e0851104	 add         r1, r5, r4, lsl #2

; 782  :             {
; 783  :                 dwError = ERROR_SUCCESS;
; 784  :             }
; 785  : 
; 786  :             break;

  0018c	ea00003f	 b           |$LN105@AdapterHan@4|
  00190		 |$LN11@AdapterHan@4|

; 717  :             {
; 718  :                 dwError = ERROR_SUCCESS;
; 719  :             }
; 720  : 
; 721  :             break;
; 722  :         }
; 723  : 
; 724  :         case CSPROPERTY_PIN_NAME:
; 725  :         {
; 726  :             DEBUGMSG( ZONE_IOCTL, (_T("CAM_IOControl(%08x): Property CSPROPERTY_PIN_NAME\r\n"), this ) );

  00190	e5963440	 ldr         r3, [r6, #0x440]
  00194	e3130010	 tst         r3, #0x10
  00198	159f047c	 ldrne       r0, [pc, #0x47C]
  0019c	11a01005	 movne       r1, r5
  001a0	1b000000	 blne        NKDbgPrintfW

; 727  : 
; 728  :             if ( NULL == ( pCsPin = reinterpret_cast<PCSP_PIN>( ValidateBuffer( pInBuf, InBufLen, sizeof(CSP_PIN), &dwError ) ) ) )

  001a4	e28d3004	 add         r3, sp, #4
  001a8	e58d3000	 str         r3, [sp]
  001ac	e3a03020	 mov         r3, #0x20
  001b0	e1a02009	 mov         r2, r9
  001b4	e1a01007	 mov         r1, r7
  001b8	e1a00005	 mov         r0, r5
  001bc	eb000000	 bl          |?ValidateBuffer@CCameraDevice@@QAAPAXPAXKKPAK@Z|
  001c0	e3500000	 cmp         r0, #0
  001c4	0affffde	 beq         |$LN100@AdapterHan@4|

; 729  :             {
; 730  :                 break;
; 731  :             }
; 732  : 
; 733  :             lPinId = pCsPin->PinId;

  001c8	e5902018	 ldr         r2, [r0, #0x18]

; 734  : 
; 735  :             if ( false == IsValidPin( lPinId ) )

  001cc	e595302c	 ldr         r3, [r5, #0x2C]
  001d0	e1520003	 cmp         r2, r3
  001d4	23a03000	 movcs       r3, #0
  001d8	33a03001	 movcc       r3, #1
  001dc	e3530000	 cmp         r3, #0

; 736  :             {
; 737  :                 DEBUGMSG( ZONE_IOCTL, (_T("CAM_IOControl(%08x): Invalid PinId\r\n"), this ) );
; 738  :                 break;

  001e0	0affffd2	 beq         |$LN101@AdapterHan@4|

; 739  :             }
; 740  : 
; 741  :             *pdwBytesTransferred = ( wcslen(g_wszPinNames[lPinId] ) + 1 ) * sizeof( g_wszPinNames[0][0] );

  001e4	e59f442c	 ldr         r4, [pc, #0x42C]
  001e8	e0825102	 add         r5, r2, r2, lsl #2
  001ec	e0840105	 add         r0, r4, r5, lsl #2
  001f0	eb000000	 bl          wcslen

; 742  : 
; 743  :             if( OutBufLen < *pdwBytesTransferred )

  001f4	e59d2044	 ldr         r2, [sp, #0x44]
  001f8	e2803001	 add         r3, r0, #1
  001fc	e1a03083	 mov         r3, r3, lsl #1
  00200	e5883000	 str         r3, [r8]
  00204	e1520003	 cmp         r2, r3

; 744  :             {
; 745  :                 dwError = ERROR_MORE_DATA;
; 746  :                 break;

  00208	3a0000c5	 bcc         |$LN102@AdapterHan@4|

; 747  :             }
; 748  : 
; 749  :             if( CeSafeCopyMemory( pOutBuf, g_wszPinNames[lPinId], *pdwBytesTransferred ))

  0020c	e1a02003	 mov         r2, r3
  00210	e0841105	 add         r1, r4, r5, lsl #2

; 750  :             {
; 751  :                 dwError = ERROR_SUCCESS;
; 752  :             }
; 753  : 
; 754  :             break;

  00214	ea00001d	 b           |$LN105@AdapterHan@4|
  00218		 |$LN16@AdapterHan@4|

; 687  :                 }
; 688  :             }
; 689  :             break;
; 690  :         }
; 691  : 
; 692  :         case CSPROPERTY_PIN_CATEGORY:
; 693  :         {
; 694  :             DEBUGMSG( ZONE_IOCTL, (_T("CAM_IOControl(%08x): CSPROPERTY_PIN_CATEGORY\r\n"), this ) );

  00218	e5963440	 ldr         r3, [r6, #0x440]
  0021c	e3130010	 tst         r3, #0x10
  00220	159f03ec	 ldrne       r0, [pc, #0x3EC]
  00224	11a01005	 movne       r1, r5
  00228	1b000000	 blne        NKDbgPrintfW

; 695  : 
; 696  :             if ( NULL == ( pCsPin = reinterpret_cast<PCSP_PIN>( ValidateBuffer( pInBuf, InBufLen, sizeof (CSP_PIN), &dwError ) ) ) )

  0022c	e28d3004	 add         r3, sp, #4
  00230	e58d3000	 str         r3, [sp]
  00234	e3a03020	 mov         r3, #0x20
  00238	e1a02009	 mov         r2, r9
  0023c	e1a01007	 mov         r1, r7
  00240	e1a00005	 mov         r0, r5
  00244	eb000000	 bl          |?ValidateBuffer@CCameraDevice@@QAAPAXPAXKKPAK@Z|
  00248	e3500000	 cmp         r0, #0
  0024c	0affffbc	 beq         |$LN100@AdapterHan@4|

; 697  :             {
; 698  :                 break;
; 699  :             }
; 700  : 
; 701  :             lPinId = pCsPin->PinId;

  00250	e5901018	 ldr         r1, [r0, #0x18]

; 702  :             if ( false == IsValidPin( lPinId ) )

  00254	e595302c	 ldr         r3, [r5, #0x2C]
  00258	e1510003	 cmp         r1, r3
  0025c	23a03000	 movcs       r3, #0
  00260	33a03001	 movcc       r3, #1
  00264	e3530000	 cmp         r3, #0

; 703  :             {
; 704  :                 DEBUGMSG( ZONE_IOCTL, (_T("CAM_IOControl(%08x): Invalid PinId\r\n"), this ) );
; 705  :                 break;

  00268	0affffb0	 beq         |$LN101@AdapterHan@4|

; 706  :             }
; 707  : 
; 708  :             *pdwBytesTransferred = sizeof( GUID );
; 709  : 
; 710  :             if( OutBufLen < *pdwBytesTransferred )

  0026c	e59d3044	 ldr         r3, [sp, #0x44]
  00270	e3a02010	 mov         r2, #0x10
  00274	e5882000	 str         r2, [r8]
  00278	e3530010	 cmp         r3, #0x10

; 711  :             {
; 712  :                 dwError = ERROR_MORE_DATA;
; 713  :                 break;

  0027c	3a0000a8	 bcc         |$LN102@AdapterHan@4|

; 714  :             }
; 715  : 
; 716  :             if ( CeSafeCopyMemory( pOutBuf, &(m_pStrmInstances[lPinId].pVideoFormat->categoryGUID), sizeof( GUID ) ))

  00280	e5953024	 ldr         r3, [r5, #0x24]
  00284	e3a02010	 mov         r2, #0x10
  00288	e0833281	 add         r3, r3, r1, lsl #5
  0028c	e5931018	 ldr         r1, [r3, #0x18]
  00290		 |$LN105@AdapterHan@4|
  00290	e1a0000b	 mov         r0, r11
  00294	eb000000	 bl          CeSafeCopyMemory
  00298	e3500000	 cmp         r0, #0
  0029c	0affffa8	 beq         |$LN100@AdapterHan@4|

; 560  : 
; 561  :             dwError = ERROR_SUCCESS;

  002a0	e3a04000	 mov         r4, #0

; 562  :             break;

  002a4	eaffffa7	 b           |$LN40@AdapterHan@4|
  002a8		 |$LN25@AdapterHan@4|

; 630  :             }
; 631  : 
; 632  :             dwError = ERROR_SUCCESS;
; 633  : 
; 634  :             break;
; 635  :         }
; 636  : 
; 637  :         case CSPROPERTY_PIN_DATAINTERSECTION:
; 638  :         {
; 639  :             DEBUGMSG( ZONE_IOCTL, (_T("CAM_IOControl(%08x): CSPROPERTY_PIN_DATAINTERSECTION\r\n"), this ) );

  002a8	e5963440	 ldr         r3, [r6, #0x440]
  002ac	e3130010	 tst         r3, #0x10
  002b0	159f0358	 ldrne       r0, [pc, #0x358]
  002b4	11a01005	 movne       r1, r5
  002b8	1b000000	 blne        NKDbgPrintfW

; 640  :             if ( NULL == ( pCsPin = reinterpret_cast<PCSP_PIN>( ValidateBuffer( pInBuf, InBufLen, sizeof (CSP_PIN), &dwError ) ) ) )

  002bc	e28d3004	 add         r3, sp, #4
  002c0	e58d3000	 str         r3, [sp]
  002c4	e3a03020	 mov         r3, #0x20
  002c8	e1a02009	 mov         r2, r9
  002cc	e1a01007	 mov         r1, r7
  002d0	e1a00005	 mov         r0, r5
  002d4	eb000000	 bl          |?ValidateBuffer@CCameraDevice@@QAAPAXPAXKKPAK@Z|
  002d8	e3500000	 cmp         r0, #0
  002dc	0affff98	 beq         |$LN100@AdapterHan@4|

; 641  :             {
; 642  :                 break;
; 643  :             }
; 644  : 
; 645  :             lPinId = pCsPin->PinId;

  002e0	e590a018	 ldr         r10, [r0, #0x18]

; 646  :             if ( false == IsValidPin( lPinId ) )

  002e4	e595302c	 ldr         r3, [r5, #0x2C]
  002e8	e15a0003	 cmp         r10, r3
  002ec	23a03000	 movcs       r3, #0
  002f0	33a03001	 movcc       r3, #1
  002f4	e3530000	 cmp         r3, #0

; 647  :             {
; 648  :                 DEBUGMSG( ZONE_IOCTL, (_T("CAM_IOControl(%08x): Invalid PinId\r\n"), this ) );
; 649  :                 break;

  002f8	0affff8c	 beq         |$LN101@AdapterHan@4|

; 650  :             }
; 651  : 
; 652  :             pCsMultipleItem = NULL;
; 653  :             pCsMultipleItem = reinterpret_cast<PCSMULTIPLE_ITEM>( pCsPin + 1 );

  002fc	e2806020	 add         r6, r0, #0x20

; 654  : 
; 655  :             if ( NULL == ValidateBuffer( pInBuf, InBufLen, ( sizeof (CSP_PIN) + (pCsMultipleItem->Count * pCsMultipleItem->Size ) ), &dwError ) )

  00300	e5961004	 ldr         r1, [r6, #4]
  00304	e5963000	 ldr         r3, [r6]
  00308	e28de004	 add         lr, sp, #4
  0030c	e1a02009	 mov         r2, r9
  00310	e0030391	 mul         r3, r1, r3
  00314	e1a01007	 mov         r1, r7
  00318	e2833020	 add         r3, r3, #0x20
  0031c	e1a00005	 mov         r0, r5
  00320	e58de000	 str         lr, [sp]
  00324	eb000000	 bl          |?ValidateBuffer@CCameraDevice@@QAAPAXPAXKKPAK@Z|
  00328	e3500000	 cmp         r0, #0
  0032c	0affff84	 beq         |$LN100@AdapterHan@4|

; 656  :             {
; 657  :                 break;
; 658  :             }
; 659  : 
; 660  :             {
; 661  :                 *pdwBytesTransferred = sizeof(CS_DATAFORMAT_VIDEOINFOHEADER);
; 662  :             }
; 663  : 
; 664  :             if( NULL == ( pCsDataFormatVih = reinterpret_cast<PCS_DATAFORMAT_VIDEOINFOHEADER>( ValidateBuffer( pOutBuf, OutBufLen, *pdwBytesTransferred, &dwError ) ) ) )

  00330	e3a03b01	 mov         r3, #1, 22
  00334	e59d2044	 ldr         r2, [sp, #0x44]
  00338	e38340a8	 orr         r4, r3, #0xA8
  0033c	e28de004	 add         lr, sp, #4
  00340	e1a03004	 mov         r3, r4
  00344	e1a0100b	 mov         r1, r11
  00348	e1a00005	 mov         r0, r5
  0034c	e5884000	 str         r4, [r8]
  00350	e58de000	 str         lr, [sp]
  00354	eb000000	 bl          |?ValidateBuffer@CCameraDevice@@QAAPAXPAXKKPAK@Z|
  00358	e1b08000	 movs        r8, r0

; 665  :             {
; 666  :                 dwError = ERROR_MORE_DATA;
; 667  :                 break;

  0035c	0a000070	 beq         |$LN102@AdapterHan@4|

; 668  :             }
; 669  : 
; 670  :             pCsDataRangeVideo = NULL;
; 671  :             pCsDataRangeVideo = reinterpret_cast<PCS_DATARANGE_VIDEO>( pCsMultipleItem + 1 );
; 672  : 
; 673  : 
; 674  :             {
; 675  :                 for ( int iCount = 0 ; iCount < (int)pCsMultipleItem->Count ; iCount++ )

  00360	e5963004	 ldr         r3, [r6, #4]
  00364	e2864008	 add         r4, r6, #8
  00368	e3a07000	 mov         r7, #0
  0036c	e3530000	 cmp         r3, #0
  00370	daffff73	 ble         |$LN100@AdapterHan@4|
  00374	e3a09001	 mov         r9, #1
  00378		 |$LL20@AdapterHan@4|

; 676  :                 {
; 677  :                     // First check whether the GUIDs match or not. This driver also tests other high level attributes of KS_DATARANGE_VIDEO
; 678  :                     if ( true == AdapterCompareFormat( lPinId, pCsDataRangeVideo, NULL, true) )

  00378	e3a03000	 mov         r3, #0
  0037c	e1a02004	 mov         r2, r4
  00380	e1a0100a	 mov         r1, r10
  00384	e1a00005	 mov         r0, r5
  00388	e58d9000	 str         r9, [sp]
  0038c	eb000000	 bl          |?AdapterCompareFormat@CCameraDevice@@QAA_NKQAUtagCS_DATARANGE_VIDEO@@PAPAU2@_N@Z|
  00390	e3500001	 cmp         r0, #1
  00394	0a000006	 beq         |$LN97@AdapterHan@4|
  00398	e5963004	 ldr         r3, [r6, #4]

; 683  :                         dwError = ERROR_SUCCESS ;
; 684  :                         break ;
; 685  :                     }
; 686  :                     pCsDataRangeVideo = reinterpret_cast<PCS_DATARANGE_VIDEO>(pCsDataRangeVideo + 1) ;

  0039c	e2842c05	 add         r2, r4, #5, 24
  003a0	e2877001	 add         r7, r7, #1
  003a4	e1570003	 cmp         r7, r3
  003a8	e2824038	 add         r4, r2, #0x38
  003ac	bafffff1	 blt         |$LL20@AdapterHan@4|

; 676  :                 {
; 677  :                     // First check whether the GUIDs match or not. This driver also tests other high level attributes of KS_DATARANGE_VIDEO
; 678  :                     if ( true == AdapterCompareFormat( lPinId, pCsDataRangeVideo, NULL, true) )

  003b0	eaffff63	 b           |$LN100@AdapterHan@4|
  003b4		 |$LN97@AdapterHan@4|

; 679  :                     {
; 680  :                         // We found our format
; 681  :                         memcpy(&pCsDataFormatVih->DataFormat,&pCsDataRangeVideo->DataRange, sizeof(CSDATAFORMAT) ) ;

  003b4	e3a02040	 mov         r2, #0x40
  003b8	e1a01004	 mov         r1, r4
  003bc	e1a00008	 mov         r0, r8
  003c0	eb000000	 bl          memcpy
  003c4	e3a03b01	 mov         r3, #1, 22

; 682  :                         memcpy(&pCsDataFormatVih->VideoInfoHeader,&pCsDataRangeVideo->VideoInfoHeader, sizeof(CS_VIDEOINFOHEADER) ) ;

  003c8	e3832068	 orr         r2, r3, #0x68
  003cc	e2880040	 add         r0, r8, #0x40
  003d0	e28410d0	 add         r1, r4, #0xD0
  003d4	eb000000	 bl          memcpy
  003d8	e3a04000	 mov         r4, #0
  003dc	eaffff59	 b           |$LN40@AdapterHan@4|
  003e0		 |$LN32@AdapterHan@4|

; 593  :             break;
; 594  :         }
; 595  : 
; 596  :         case CSPROPERTY_PIN_DATARANGES:
; 597  :         {
; 598  :             DEBUGMSG( ZONE_IOCTL, (_T("CAM_IOControl(%08x): CSPROPERTY_PIN_DATARANGES\r\n"), this ) );

  003e0	e5963440	 ldr         r3, [r6, #0x440]
  003e4	e3130010	 tst         r3, #0x10
  003e8	159f021c	 ldrne       r0, [pc, #0x21C]
  003ec	11a01005	 movne       r1, r5
  003f0	1b000000	 blne        NKDbgPrintfW

; 599  : 
; 600  :             if( NULL == ( pCsPin = reinterpret_cast<PCSP_PIN>( ValidateBuffer( pInBuf, InBufLen, sizeof (CSP_PIN), &dwError ) ) ) )

  003f4	e28d3004	 add         r3, sp, #4
  003f8	e58d3000	 str         r3, [sp]
  003fc	e3a03020	 mov         r3, #0x20
  00400	e1a02009	 mov         r2, r9
  00404	e1a01007	 mov         r1, r7
  00408	e1a00005	 mov         r0, r5
  0040c	eb000000	 bl          |?ValidateBuffer@CCameraDevice@@QAAPAXPAXKKPAK@Z|
  00410	e3500000	 cmp         r0, #0
  00414	0affff4a	 beq         |$LN100@AdapterHan@4|

; 601  :             {
; 602  :                 break;
; 603  :             }
; 604  : 
; 605  :             lPinId = pCsPin->PinId;

  00418	e5907018	 ldr         r7, [r0, #0x18]

; 606  :             if ( false == IsValidPin( lPinId ) )

  0041c	e595302c	 ldr         r3, [r5, #0x2C]
  00420	e1570003	 cmp         r7, r3
  00424	23a03000	 movcs       r3, #0
  00428	33a03001	 movcc       r3, #1
  0042c	e3530000	 cmp         r3, #0

; 607  :             {
; 608  :                 DEBUGMSG(ZONE_IOCTL, (_T("CAM_IOControl(%08x): Invalid PinId\r\n"), this ) );
; 609  :                 break;

  00430	0affff3e	 beq         |$LN101@AdapterHan@4|

; 610  :             }
; 611  : 
; 612  :             *pdwBytesTransferred = sizeof(CSMULTIPLE_ITEM) + ( m_pStrmInstances[lPinId].pVideoFormat->ulAvailFormats * sizeof (CS_DATARANGE_VIDEO) );

  00434	e5953024	 ldr         r3, [r5, #0x24]
  00438	e3a02c05	 mov         r2, #5, 24
  0043c	e3829038	 orr         r9, r2, #0x38
  00440	e0833287	 add         r3, r3, r7, lsl #5
  00444	e5933018	 ldr         r3, [r3, #0x18]

; 613  : 
; 614  :             if ( NULL == ( pCsMultipleItem = reinterpret_cast<PCSMULTIPLE_ITEM>( ValidateBuffer( pOutBuf, OutBufLen, *pdwBytesTransferred, &dwError ) ) ) )

  00448	e59d2044	 ldr         r2, [sp, #0x44]
  0044c	e28d4004	 add         r4, sp, #4
  00450	e5930010	 ldr         r0, [r3, #0x10]
  00454	e1a0100b	 mov         r1, r11
  00458	e58d4000	 str         r4, [sp]
  0045c	e0030990	 mul         r3, r0, r9
  00460	e1a00005	 mov         r0, r5
  00464	e283e008	 add         lr, r3, #8
  00468	e1a0300e	 mov         r3, lr
  0046c	e588e000	 str         lr, [r8]
  00470	eb000000	 bl          |?ValidateBuffer@CCameraDevice@@QAAPAXPAXKKPAK@Z|
  00474	e1b04000	 movs        r4, r0

; 615  :             {
; 616  :                 dwError = ERROR_MORE_DATA ;
; 617  :                 break ;

  00478	0a000029	 beq         |$LN102@AdapterHan@4|

; 618  :             }
; 619  : 
; 620  :             pCsMultipleItem->Count = m_pStrmInstances[lPinId].pVideoFormat->ulAvailFormats;

  0047c	e5953024	 ldr         r3, [r5, #0x24]

; 621  :             pCsMultipleItem->Size  = *pdwBytesTransferred;
; 622  : 
; 623  :             pCsDataRangeVideo = NULL;
; 624  :             pCsDataRangeVideo = reinterpret_cast<PCS_DATARANGE_VIDEO>( pCsMultipleItem + 1 );
; 625  : 
; 626  :             for ( int iCount = 0 ; iCount < static_cast<int>( m_pStrmInstances[lPinId].pVideoFormat->ulAvailFormats ); iCount++ )

  00480	e3a06000	 mov         r6, #0
  00484	e0833287	 add         r3, r3, r7, lsl #5
  00488	e5933018	 ldr         r3, [r3, #0x18]
  0048c	e5933010	 ldr         r3, [r3, #0x10]
  00490	e5843004	 str         r3, [r4, #4]
  00494	e5983000	 ldr         r3, [r8]
  00498	e4843008	 str         r3, [r4], #8
  0049c	e5953024	 ldr         r3, [r5, #0x24]
  004a0	e0833287	 add         r3, r3, r7, lsl #5
  004a4	e5931018	 ldr         r1, [r3, #0x18]
  004a8	e5913010	 ldr         r3, [r1, #0x10]
  004ac	e3530000	 cmp         r3, #0
  004b0	da000027	 ble         |$LN26@AdapterHan@4|
  004b4		 |$LL28@AdapterHan@4|

; 627  :             {
; 628  :                 memcpy( pCsDataRangeVideo, m_pStrmInstances[lPinId].pVideoFormat->pCsDataRangeVideo[iCount], sizeof (CS_DATARANGE_VIDEO) );

  004b4	e5913014	 ldr         r3, [r1, #0x14]
  004b8	e1a02009	 mov         r2, r9
  004bc	e1a00004	 mov         r0, r4
  004c0	e7931106	 ldr         r1, [r3, +r6, lsl #2]
  004c4	eb000000	 bl          memcpy
  004c8	e5953024	 ldr         r3, [r5, #0x24]

; 629  :                 pCsDataRangeVideo = reinterpret_cast<PCS_DATARANGE_VIDEO>( pCsDataRangeVideo + 1 );

  004cc	e2842c05	 add         r2, r4, #5, 24
  004d0	e2866001	 add         r6, r6, #1
  004d4	e0833287	 add         r3, r3, r7, lsl #5
  004d8	e5931018	 ldr         r1, [r3, #0x18]
  004dc	e2824038	 add         r4, r2, #0x38
  004e0	e5913010	 ldr         r3, [r1, #0x10]
  004e4	e1560003	 cmp         r6, r3
  004e8	bafffff1	 blt         |$LL28@AdapterHan@4|

; 560  : 
; 561  :             dwError = ERROR_SUCCESS;

  004ec	e3a04000	 mov         r4, #0

; 562  :             break;

  004f0	eaffff14	 b           |$LN40@AdapterHan@4|
  004f4		 |$LN39@AdapterHan@4|

; 538  :     {
; 539  :         case CSPROPERTY_PIN_CTYPES:
; 540  :         {
; 541  :             DEBUGMSG( ZONE_IOCTL, (_T("CAM_IOControl(%08x): CSPROPERTY_PIN_CTYPES\r\n"), this ) );

  004f4	e5963440	 ldr         r3, [r6, #0x440]
  004f8	e3130010	 tst         r3, #0x10
  004fc	159f0104	 ldrne       r0, [pc, #0x104]
  00500	11a01005	 movne       r1, r5
  00504	1b000000	 blne        NKDbgPrintfW

; 542  : 
; 543  :             *pdwBytesTransferred = sizeof(ULONG);

  00508	e3a03004	 mov         r3, #4

; 544  : 
; 545  :             EnterCriticalSection( &m_csDevice );

  0050c	e1a00005	 mov         r0, r5
  00510	e5883000	 str         r3, [r8]
  00514	eb000000	 bl          EnterCriticalSection

; 546  : 
; 547  :             if( OutBufLen < sizeof( ULONG ))

  00518	e59d3044	 ldr         r3, [sp, #0x44]
  0051c	e3530004	 cmp         r3, #4
  00520	2a000001	 bcs         |$LN38@AdapterHan@4|
  00524		 |$LN102@AdapterHan@4|

; 548  :             {
; 549  :                 dwError = ERROR_MORE_DATA;

  00524	e3a040ea	 mov         r4, #0xEA

; 550  :                 break;

  00528	eaffff06	 b           |$LN40@AdapterHan@4|
  0052c		 |$LN38@AdapterHan@4|

; 551  :             }
; 552  : 
; 553  :             if( !CeSafeCopyMemory( pOutBuf, &(m_AdapterInfo.ulCTypes), sizeof (ULONG) ))

  0052c	e3a02004	 mov         r2, #4
  00530	e285102c	 add         r1, r5, #0x2C
  00534	e1a0000b	 mov         r0, r11
  00538	eb000000	 bl          CeSafeCopyMemory
  0053c	e3500000	 cmp         r0, #0
  00540	1a000001	 bne         |$LN37@AdapterHan@4|
  00544		 |$LN103@AdapterHan@4|

; 554  :             {
; 555  :                 dwError = ERROR_INVALID_PARAMETER;

  00544	e3a04057	 mov         r4, #0x57

; 556  :                 break;

  00548	eafffefe	 b           |$LN40@AdapterHan@4|
  0054c		 |$LN37@AdapterHan@4|

; 557  :             }
; 558  : 
; 559  :             LeaveCriticalSection( &m_csDevice );

  0054c	e1a00005	 mov         r0, r5
  00550	eb000000	 bl          LeaveCriticalSection
  00554		 |$LN26@AdapterHan@4|

; 560  : 
; 561  :             dwError = ERROR_SUCCESS;

  00554	e3a04000	 mov         r4, #0

; 562  :             break;

  00558	eafffefa	 b           |$LN40@AdapterHan@4|
  0055c		 |$LN36@AdapterHan@4|

; 563  :         }
; 564  : 
; 565  :         case CSPROPERTY_PIN_CINSTANCES:
; 566  :         {
; 567  :             DEBUGMSG( ZONE_IOCTL, (_T("CAM_IOControl(%08x): CSPROPERTY_PIN_CINSTANCES\r\n"), this ) );

  0055c	e5963440	 ldr         r3, [r6, #0x440]
  00560	e3130010	 tst         r3, #0x10
  00564	159f0098	 ldrne       r0, [pc, #0x98]
  00568	11a01005	 movne       r1, r5
  0056c	1b000000	 blne        NKDbgPrintfW

; 568  : 
; 569  :             if ( NULL == ( pCsPin = reinterpret_cast<PCSP_PIN>( ValidateBuffer( pInBuf, InBufLen, sizeof (CSP_PIN), &dwError ) ) ) )

  00570	e28d3004	 add         r3, sp, #4
  00574	e58d3000	 str         r3, [sp]
  00578	e3a03020	 mov         r3, #0x20
  0057c	e1a02009	 mov         r2, r9
  00580	e1a01007	 mov         r1, r7
  00584	e1a00005	 mov         r0, r5
  00588	eb000000	 bl          |?ValidateBuffer@CCameraDevice@@QAAPAXPAXKKPAK@Z|
  0058c	e3500000	 cmp         r0, #0
  00590	0afffeeb	 beq         |$LN100@AdapterHan@4|

; 570  :             {
; 571  :                 break;
; 572  :             }
; 573  : 
; 574  :             lPinId = pCsPin->PinId;

  00594	e5907018	 ldr         r7, [r0, #0x18]

; 575  :             if ( false == IsValidPin( lPinId ))

  00598	e595302c	 ldr         r3, [r5, #0x2C]
  0059c	e1570003	 cmp         r7, r3
  005a0	23a03000	 movcs       r3, #0
  005a4	33a03001	 movcc       r3, #1
  005a8	e3530000	 cmp         r3, #0

; 576  :             {
; 577  :                 DEBUGMSG( ZONE_IOCTL, (_T("CAM_IOControl(%08x): Invalid PinId\r\n"), this ) );
; 578  :                 break;

  005ac	0afffedf	 beq         |$LN101@AdapterHan@4|

; 579  :             }
; 580  : 
; 581  :             *pdwBytesTransferred = sizeof (CSPIN_CINSTANCES);
; 582  : 
; 583  :             if ( NULL == ( pCsPinCinstances = reinterpret_cast<PCSPIN_CINSTANCES>( ValidateBuffer( pOutBuf, OutBufLen, sizeof (CSPIN_CINSTANCES), &dwError ) ) ) )

  005b0	e59d2044	 ldr         r2, [sp, #0x44]
  005b4	e3a04008	 mov         r4, #8
  005b8	e28de004	 add         lr, sp, #4
  005bc	e3a03008	 mov         r3, #8
  005c0	e1a0100b	 mov         r1, r11
  005c4	e1a00005	 mov         r0, r5
  005c8	e5884000	 str         r4, [r8]
  005cc	e58de000	 str         lr, [sp]
  005d0	eb000000	 bl          |?ValidateBuffer@CCameraDevice@@QAAPAXPAXKKPAK@Z|
  005d4	e3500000	 cmp         r0, #0

; 584  :             {
; 585  :                 dwError = ERROR_MORE_DATA;
; 586  :                 break;

  005d8	0affffd1	 beq         |$LN102@AdapterHan@4|

; 587  :             }
; 588  : 
; 589  :             pCsPinCinstances->PossibleCount = m_pStrmInstances[lPinId].ulPossibleCount;

  005dc	e5953024	 ldr         r3, [r5, #0x24]

; 590  :             pCsPinCinstances->CurrentCount  = m_pStrmInstances[lPinId].ulCInstances;
; 591  : 
; 592  :             dwError = ERROR_SUCCESS;

  005e0	e3a04000	 mov         r4, #0
  005e4	e0833287	 add         r3, r3, r7, lsl #5
  005e8	e5933008	 ldr         r3, [r3, #8]
  005ec	e5803000	 str         r3, [r0]
  005f0	e5953024	 ldr         r3, [r5, #0x24]
  005f4	e0833287	 add         r3, r3, r7, lsl #5
  005f8	e5933004	 ldr         r3, [r3, #4]
  005fc	e5803004	 str         r3, [r0, #4]
  00600	eafffed0	 b           |$LN40@AdapterHan@4|
  00604		 |$LN109@AdapterHan@4|
  00604		 |$LN110@AdapterHan@4|
  00604	00000000	 DCD         |??_C@_1GC@ODMMNELO@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAC?$AAS?$AAP?$AAR?$AAO?$AAP?$AAE?$AAR?$AAT?$AAY?$AA_@|
  00608		 |$LN111@AdapterHan@4|
  00608	00000000	 DCD         |??_C@_1FK@JCMDKLJI@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAC?$AAS?$AAP?$AAR?$AAO?$AAP?$AAE?$AAR?$AAT?$AAY?$AA_@|
  0060c		 |$LN112@AdapterHan@4|
  0060c	00000000	 DCD         |??_C@_1GC@PAJEGMLE@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAC?$AAS?$AAP?$AAR?$AAO?$AAP?$AAE?$AAR?$AAT?$AAY?$AA_@|
  00610		 |$LN113@AdapterHan@4|
  00610	00000000	 DCD         |??_C@_1GO@MEBIIEIP@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAC?$AAS?$AAP?$AAR?$AAO?$AAP?$AAE?$AAR?$AAT?$AAY?$AA_@|
  00614		 |$LN114@AdapterHan@4|
  00614	00000000	 DCD         |??_C@_1FO@FPHPOEPM@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAC?$AAS?$AAP?$AAR?$AAO?$AAP?$AAE?$AAR?$AAT?$AAY?$AA_@|
  00618		 |$LN115@AdapterHan@4|
  00618	00000000	 DCD         |g_wszPinNames|
  0061c		 |$LN116@AdapterHan@4|
  0061c	00000000	 DCD         |??_C@_1GI@JPCMHEPF@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAP?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAy?$AA?5?$AAC?$AAS@|
  00620		 |$LN117@AdapterHan@4|
  00620	00000000	 DCD         |??_C@_1EK@DJBFBLFB@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAP?$AAi?$AAn@|
  00624		 |$LN118@AdapterHan@4|
  00624	00000000	 DCD         |??_C@_1FA@MOHHPKCL@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAP?$AAr?$AAo@|
  00628		 |$LN119@AdapterHan@4|
  00628	00000000	 DCD         |??_C@_1FC@OKCKHBJG@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAP?$AAi?$AAn?$AAR?$AAe@|
  0062c		 |$LN120@AdapterHan@4|
  0062c	00000000	 DCD         |dpCurSettings|
  00630		 |$M36176|

			 ENDP  ; |?AdapterHandlePinRequests@CCameraDevice@@QAAKPAEK0KPAK@Z|, CCameraDevice::AdapterHandlePinRequests

	EXPORT	|?AdapterHandleVidProcAmpRequests@CCameraDevice@@QAAKPAEK0KPAK@Z| ; CCameraDevice::AdapterHandleVidProcAmpRequests
	EXPORT	|??_C@_1EO@CNHHEAKN@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAR?$AAe?$AAq@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@FPFJBHJM@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAV?$AAi?$AAd?$AAP?$AAr@| [ DATA ] ; `string'
	IMPORT	|SetLastError|
	IMPORT	|__rt_udiv|

  00000			 AREA	 |.pdata|, PDATA
|$T36223| DCD	|$LN37@AdapterHan@5|
	DCD	0x4000bc02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@CNHHEAKN@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAR?$AAe?$AAq@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "R", 0x0, "e"
	DCB	0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@FPFJBHJM@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAV?$AAi?$AAd?$AAP?$AAr@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "V", 0x0, "i", 0x0, "d", 0x0, "P"
	DCB	0x0, "r", 0x0, "o", 0x0, "c", 0x0, "A", 0x0, "m", 0x0, "p"
	DCB	0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s"
	DCB	0x0, "t", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AdapterHandleVidProcAmpRequests@CCameraDevice@@QAAKPAEK0KPAK@Z| PROC ; CCameraDevice::AdapterHandleVidProcAmpRequests

; 808  : {

  00000		 |$LN37@AdapterHan@5|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd024	 sub         sp, sp, #0x24
  00008		 |$M36220|
  00008	e1a09003	 mov         r9, r3
  0000c	e1a0b002	 mov         r11, r2
  00010	e1a0a001	 mov         r10, r1
  00014	e1a05000	 mov         r5, r0

; 809  :     // Note: This whole function is wrapped in a __try/__except block
; 810  : 
; 811  :     DEBUGMSG( ZONE_IOCTL, (_T("CAM_IOControl(%08x): HandleVidProcAmpRequests\r\n"), this ) );

  00018	e59f82cc	 ldr         r8, [pc, #0x2CC]
  0001c	e598e440	 ldr         lr, [r8, #0x440]
  00020	e31e0010	 tst         lr, #0x10
  00024	159f02bc	 ldrne       r0, [pc, #0x2BC]
  00028	11a01005	 movne       r1, r5
  0002c	1b000000	 blne        NKDbgPrintfW

; 812  : 
; 813  :     DWORD                      dwError                 = ERROR_INVALID_PARAMETER;
; 814  :     LONG                       lValue                  = 0;
; 815  :     LONG                       lFlags                  = 0;
; 816  :     PSENSOR_PROPERTY           pSensorProp             = NULL;
; 817  :     PCSPROPERTY_VIDEOPROCAMP_S pCsPropVidProcAmpOutput = NULL;
; 818  :     PCSPROPERTY_VIDEOPROCAMP_S pCsPropVidProcAmpInput  = NULL;
; 819  :     CSPROPERTY                 csProp                  = {0};

  00030	e3a03000	 mov         r3, #0
  00034	e3a04057	 mov         r4, #0x57
  00038	e3a02014	 mov         r2, #0x14
  0003c	e3a01000	 mov         r1, #0
  00040	e28d0010	 add         r0, sp, #0x10
  00044	e58d300c	 str         r3, [sp, #0xC]
  00048	e58d4008	 str         r4, [sp, #8]
  0004c	eb000000	 bl          memset

; 820  : 
; 821  :     if( !CeSafeCopyMemory( &csProp, pInBuf, sizeof( CSPROPERTY )))

  00050	e3a02018	 mov         r2, #0x18
  00054	e1a0100a	 mov         r1, r10
  00058	e28d000c	 add         r0, sp, #0xC
  0005c	eb000000	 bl          CeSafeCopyMemory
  00060	e3500000	 cmp         r0, #0

; 822  :     {
; 823  :         return dwError;

  00064	0a000098	 beq         |$LN27@AdapterHan@5|

; 824  :     }
; 825  : 
; 826  :     *pdwBytesTransferred = 0;
; 827  : 
; 828  :     // we support PROPSETID_Pin, so just return success
; 829  :     if ( CSPROPERTY_TYPE_SETSUPPORT == csProp.Flags )

  00068	e59d3020	 ldr         r3, [sp, #0x20]
  0006c	e59d704c	 ldr         r7, [sp, #0x4C]
  00070	e3a02000	 mov         r2, #0
  00074	e3530c01	 cmp         r3, #1, 24

; 830  :     {
; 831  :         return ERROR_SUCCESS;

  00078	03a04000	 moveq       r4, #0
  0007c	e5872000	 str         r2, [r7]
  00080	0a000092	 beq         |$LN23@AdapterHan@5|

; 832  :     }
; 833  : 
; 834  :     if ( csProp.Id < CSPROPERTY_VIDEOPROCAMP_BRIGHTNESS || csProp.Id > ENUM_GAIN )

  00084	e59d301c	 ldr         r3, [sp, #0x1C]
  00088	e3530009	 cmp         r3, #9
  0008c	8a000088	 bhi         |$LN19@AdapterHan@5|

; 839  :     }
; 840  : 
; 841  :     if ( ERROR_SUCCESS != m_PDDFuncTbl.PDD_GetAdapterInfo( m_PDDContext, &m_AdapterInfo ) )

  00090	e59502a4	 ldr         r0, [r5, #0x2A4]
  00094	e59532b4	 ldr         r3, [r5, #0x2B4]
  00098	e2851028	 add         r1, r5, #0x28
  0009c	e1a0e00f	 mov         lr, pc
  000a0	e12fff13	 bx          r3
  000a4	e3500000	 cmp         r0, #0

; 842  :     {
; 843  :         return dwError;

  000a8	1a000087	 bne         |$LN27@AdapterHan@5|

; 844  :     }
; 845  : 
; 846  :     pSensorProp = m_AdapterInfo.SensorProps + csProp.Id;

  000ac	e59d301c	 ldr         r3, [sp, #0x1C]

; 847  : 
; 848  :     switch( csProp.Flags )

  000b0	e59d2020	 ldr         r2, [sp, #0x20]
  000b4	e0853283	 add         r3, r5, r3, lsl #5
  000b8	e2836064	 add         r6, r3, #0x64
  000bc	e3520001	 cmp         r2, #1
  000c0	0a000051	 beq         |$LN15@AdapterHan@5|
  000c4	e3520002	 cmp         r2, #2
  000c8	0a00001c	 beq         |$LN11@AdapterHan@5|
  000cc	e3520c02	 cmp         r2, #2, 24
  000d0	0a000010	 beq         |$LN2@AdapterHan@5|
  000d4	e3520801	 cmp         r2, #1, 16
  000d8	0a000004	 beq         |$LN3@AdapterHan@5|

; 931  :         break;
; 932  : 
; 933  :     default :
; 934  :         DEBUGMSG(ZONE_IOCTL, (_T("CAM_IOControl(%08x): Invalid Request\r\n"), this));

  000dc	e5983440	 ldr         r3, [r8, #0x440]
  000e0	e3130010	 tst         r3, #0x10
  000e4	0a000078	 beq         |$LN27@AdapterHan@5|
  000e8	e59f01f4	 ldr         r0, [pc, #0x1F4]

; 935  :         return dwError;

  000ec	ea000074	 b           |$LN32@AdapterHan@5|
  000f0		 |$LN3@AdapterHan@5|

; 922  : 
; 923  :     case CSPROPERTY_TYPE_DEFAULTVALUES:
; 924  : 
; 925  :         GetDefaultValues( pOutBuf, OutBufLen, pdwBytesTransferred, pSensorProp, &dwError );

  000f0	e59d2048	 ldr         r2, [sp, #0x48]
  000f4	e28de008	 add         lr, sp, #8
  000f8	e1a03007	 mov         r3, r7
  000fc	e1a01009	 mov         r1, r9
  00100	e1a00005	 mov         r0, r5
  00104	e58de004	 str         lr, [sp, #4]
  00108	e58d6000	 str         r6, [sp]
  0010c	eb000000	 bl          |?GetDefaultValues@CCameraDevice@@AAAXPAEKPAKPAU_Sensor_Property@@1@Z|
  00110	e59d4008	 ldr         r4, [sp, #8]
  00114	ea00006d	 b           |$LN23@AdapterHan@5|
  00118		 |$LN2@AdapterHan@5|

; 926  :         break;
; 927  : 
; 928  :     case CSPROPERTY_TYPE_BASICSUPPORT:
; 929  : 
; 930  :         GetBasicSupportInfo( pOutBuf, OutBufLen, pdwBytesTransferred, pSensorProp, &dwError );

  00118	e59d2048	 ldr         r2, [sp, #0x48]
  0011c	e28de008	 add         lr, sp, #8
  00120	e1a03007	 mov         r3, r7
  00124	e1a01009	 mov         r1, r9
  00128	e1a00005	 mov         r0, r5
  0012c	e58de004	 str         lr, [sp, #4]
  00130	e58d6000	 str         r6, [sp]
  00134	eb000000	 bl          |?GetBasicSupportInfo@CCameraDevice@@AAAXPAEKPAKPAU_Sensor_Property@@1@Z|
  00138	e59d4008	 ldr         r4, [sp, #8]
  0013c	ea000063	 b           |$LN23@AdapterHan@5|
  00140		 |$LN11@AdapterHan@5|

; 879  :         break;
; 880  : 
; 881  :     case CSPROPERTY_TYPE_SET:
; 882  : 
; 883  :         if ( NULL == ( pCsPropVidProcAmpInput = reinterpret_cast<PCSPROPERTY_VIDEOPROCAMP_S>( ValidateBuffer( pInBuf, InBufLen, sizeof (CSPROPERTY_VIDEOPROCAMP_S), &dwError ) ) ) )

  00140	e28d3008	 add         r3, sp, #8
  00144	e58d3000	 str         r3, [sp]
  00148	e3a03028	 mov         r3, #0x28
  0014c	e1a0200b	 mov         r2, r11
  00150	e1a0100a	 mov         r1, r10
  00154	e1a00005	 mov         r0, r5
  00158	eb000000	 bl          |?ValidateBuffer@CCameraDevice@@QAAPAXPAXKKPAK@Z|
  0015c	e3500000	 cmp         r0, #0

; 884  :         {
; 885  :             return dwError;

  00160	0a00003b	 beq         |$LN33@AdapterHan@5|

; 886  :         }
; 887  : 
; 888  :         if ( FALSE == pSensorProp->fSetSupported )

  00164	e596301c	 ldr         r3, [r6, #0x1C]
  00168	e3530000	 cmp         r3, #0
  0016c	1a000004	 bne         |$LN9@AdapterHan@5|
  00170		 |$LN34@AdapterHan@5|
  00170	e3a03a01	 mov         r3, #1, 20

; 889  :         {
; 890  :             SetLastError(ERROR_INVALID_OPERATION);

  00174	e38300dd	 orr         r0, r3, #0xDD
  00178	eb000000	 bl          SetLastError
  0017c	e59d4008	 ldr         r4, [sp, #8]
  00180	ea000052	 b           |$LN23@AdapterHan@5|
  00184		 |$LN9@AdapterHan@5|

; 891  :             break;
; 892  :         }
; 893  : 
; 894  :         // CSPROPERTY_VIDEOPROCAMP_FLAGS_MANUAL and CSPROPERTY_VIDEOPROCAMP_FLAGS_AUTO are mutually exclusive
; 895  :         if( pCsPropVidProcAmpInput->Flags != CSPROPERTY_VIDEOPROCAMP_FLAGS_MANUAL && 
; 896  :             pCsPropVidProcAmpInput->Flags != CSPROPERTY_VIDEOPROCAMP_FLAGS_AUTO )

  00184	e590701c	 ldr         r7, [r0, #0x1C]
  00188	e3570002	 cmp         r7, #2
  0018c	0a000001	 beq         |$LN8@AdapterHan@5|
  00190	e3570001	 cmp         r7, #1

; 897  :         {
; 898  :             SetLastError(ERROR_INVALID_OPERATION);
; 899  :             break;

  00194	1afffff5	 bne         |$LN34@AdapterHan@5|
  00198		 |$LN8@AdapterHan@5|

; 900  :         }
; 901  : 
; 902  :         lValue = pCsPropVidProcAmpInput->Value;
; 903  :         lFlags = pCsPropVidProcAmpInput->Flags;
; 904  : 
; 905  :         if( pCsPropVidProcAmpInput->Flags & ~pSensorProp->ulCapabilities )

  00198	e596300c	 ldr         r3, [r6, #0xC]
  0019c	e5908018	 ldr         r8, [r0, #0x18]
  001a0	e1d7c003	 bics        r12, r7, r3
  001a4	1a00002a	 bne         |$LN33@AdapterHan@5|

; 906  :         {
; 907  :             break;
; 908  :         }
; 909  : 
; 910  :         if( CSPROPERTY_VIDEOPROCAMP_FLAGS_MANUAL == pCsPropVidProcAmpInput->Flags )

  001a8	e3570002	 cmp         r7, #2
  001ac	1a00000d	 bne         |$LN5@AdapterHan@5|

; 911  :         {
; 912  :             if ( lValue < pSensorProp->pRangeNStep->Bounds.SignedMinimum ||
; 913  :                 lValue > pSensorProp->pRangeNStep->Bounds.SignedMaximum ||
; 914  :                 0 != ((lValue - pSensorProp->pRangeNStep->Bounds.SignedMinimum) % pSensorProp->pRangeNStep->SteppingDelta) )

  001b0	e5963014	 ldr         r3, [r6, #0x14]
  001b4	e5931008	 ldr         r1, [r3, #8]
  001b8	e1580001	 cmp         r8, r1
  001bc	ba000024	 blt         |$LN33@AdapterHan@5|
  001c0	e593100c	 ldr         r1, [r3, #0xC]
  001c4	e1580001	 cmp         r8, r1
  001c8	ca000021	 bgt         |$LN33@AdapterHan@5|
  001cc	e1a01003	 mov         r1, r3
  001d0	e591e008	 ldr         lr, [r1, #8]
  001d4	e5910000	 ldr         r0, [r1]
  001d8	e048100e	 sub         r1, r8, lr
  001dc	eb000000	 bl          __rt_udiv
  001e0	e3510000	 cmp         r1, #0

; 915  :             {
; 916  :                 break;

  001e4	1a00001a	 bne         |$LN33@AdapterHan@5|
  001e8		 |$LN5@AdapterHan@5|

; 917  :             }
; 918  :         }
; 919  : 
; 920  :         dwError = m_PDDFuncTbl.PDD_HandleVidProcAmpChanges( m_PDDContext, csProp.Id, lFlags, lValue );

  001e8	e59d101c	 ldr         r1, [sp, #0x1C]
  001ec	e59502a4	 ldr         r0, [r5, #0x2A4]
  001f0	e59542b8	 ldr         r4, [r5, #0x2B8]
  001f4	e1a03008	 mov         r3, r8
  001f8	e1a02007	 mov         r2, r7
  001fc	e1a0e00f	 mov         lr, pc
  00200	e12fff14	 bx          r4
  00204	e1a04000	 mov         r4, r0

; 921  :         break;

  00208	ea000030	 b           |$LN23@AdapterHan@5|
  0020c		 |$LN15@AdapterHan@5|

; 849  :     {
; 850  :     case CSPROPERTY_TYPE_GET:
; 851  : 
; 852  : 
; 853  :         if ( FALSE == pSensorProp->fGetSupported )

  0020c	e5963018	 ldr         r3, [r6, #0x18]
  00210	e3530000	 cmp         r3, #0
  00214	1a000003	 bne         |$LN14@AdapterHan@5|
  00218	e3a03a01	 mov         r3, #1, 20

; 854  :         {
; 855  :             SetLastError(ERROR_INVALID_OPERATION);

  0021c	e38300dd	 orr         r0, r3, #0xDD
  00220	eb000000	 bl          SetLastError

; 856  :             break;

  00224	ea000029	 b           |$LN23@AdapterHan@5|
  00228		 |$LN14@AdapterHan@5|

; 857  :         }
; 858  : 
; 859  :         *pdwBytesTransferred = sizeof(CSPROPERTY_VIDEOPROCAMP_S);

  00228	e3a02028	 mov         r2, #0x28

; 860  :         if ( NULL == ( pCsPropVidProcAmpInput = reinterpret_cast<PCSPROPERTY_VIDEOPROCAMP_S>( ValidateBuffer( pInBuf, InBufLen, sizeof (CSPROPERTY_VIDEOPROCAMP_S), &dwError ) ) ) )

  0022c	e28d3008	 add         r3, sp, #8
  00230	e5872000	 str         r2, [r7]
  00234	e58d3000	 str         r3, [sp]
  00238	e3a03028	 mov         r3, #0x28
  0023c	e1a0200b	 mov         r2, r11
  00240	e1a0100a	 mov         r1, r10
  00244	e1a00005	 mov         r0, r5
  00248	eb000000	 bl          |?ValidateBuffer@CCameraDevice@@QAAPAXPAXKKPAK@Z|
  0024c	e1b04000	 movs        r4, r0
  00250	1a000001	 bne         |$LN13@AdapterHan@5|
  00254		 |$LN33@AdapterHan@5|

; 861  :         {
; 862  :             return dwError;

  00254	e59d4008	 ldr         r4, [sp, #8]
  00258	ea00001c	 b           |$LN23@AdapterHan@5|
  0025c		 |$LN13@AdapterHan@5|

; 863  :         }
; 864  : 
; 865  :         if( NULL == ( pCsPropVidProcAmpOutput = reinterpret_cast<PCSPROPERTY_VIDEOPROCAMP_S>( ValidateBuffer( pOutBuf, OutBufLen, *pdwBytesTransferred, &dwError ) ) ) )

  0025c	e5973000	 ldr         r3, [r7]
  00260	e59d2048	 ldr         r2, [sp, #0x48]
  00264	e28de008	 add         lr, sp, #8
  00268	e1a01009	 mov         r1, r9
  0026c	e1a00005	 mov         r0, r5
  00270	e58de000	 str         lr, [sp]
  00274	eb000000	 bl          |?ValidateBuffer@CCameraDevice@@QAAPAXPAXKKPAK@Z|
  00278	e1b05000	 movs        r5, r0

; 866  :         {
; 867  :             dwError = ERROR_MORE_DATA;

  0027c	03a040ea	 moveq       r4, #0xEA
  00280	0a000012	 beq         |$LN23@AdapterHan@5|

; 868  :             break;
; 869  :         }
; 870  : 
; 871  :         //Copy the CSPROPERTY structure to the output buffer just in case!
; 872  :         memcpy( pCsPropVidProcAmpOutput, pCsPropVidProcAmpInput, sizeof(CSPROPERTY) );

  00284	e3a02018	 mov         r2, #0x18
  00288	e1a01004	 mov         r1, r4
  0028c	e1a00005	 mov         r0, r5
  00290	eb000000	 bl          memcpy

; 873  : 
; 874  :         pCsPropVidProcAmpOutput->Value        = pSensorProp->ulCurrentValue;

  00294	e5963004	 ldr         r3, [r6, #4]

; 875  :         pCsPropVidProcAmpOutput->Flags        = pSensorProp->ulFlags;
; 876  :         pCsPropVidProcAmpOutput->Capabilities = pSensorProp->ulCapabilities;
; 877  : 
; 878  :         dwError = ERROR_SUCCESS;

  00298	e3a04000	 mov         r4, #0
  0029c	e5853018	 str         r3, [r5, #0x18]
  002a0	e5963008	 ldr         r3, [r6, #8]
  002a4	e585301c	 str         r3, [r5, #0x1C]
  002a8	e596300c	 ldr         r3, [r6, #0xC]
  002ac	e5853020	 str         r3, [r5, #0x20]

; 936  :     }
; 937  : 
; 938  :     return dwError;

  002b0	ea000006	 b           |$LN23@AdapterHan@5|
  002b4		 |$LN19@AdapterHan@5|

; 835  :     {
; 836  :         DEBUGMSG( ZONE_IOCTL, (_T("CAM_IOControl(%08x): Invalid Property\r\n"), this ) );

  002b4	e5983440	 ldr         r3, [r8, #0x440]
  002b8	e3130010	 tst         r3, #0x10
  002bc	0a000002	 beq         |$LN27@AdapterHan@5|
  002c0	e59f0018	 ldr         r0, [pc, #0x18]
  002c4		 |$LN32@AdapterHan@5|
  002c4	e1a01005	 mov         r1, r5
  002c8	eb000000	 bl          NKDbgPrintfW
  002cc		 |$LN27@AdapterHan@5|

; 837  : 
; 838  :         return dwError;

  002cc	e3a04057	 mov         r4, #0x57
  002d0		 |$LN23@AdapterHan@5|

; 939  : }

  002d0	e1a00004	 mov         r0, r4
  002d4	e28dd024	 add         sp, sp, #0x24
  002d8	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  002dc	e12fff1e	 bx          lr
  002e0		 |$LN38@AdapterHan@5|
  002e0		 |$LN39@AdapterHan@5|
  002e0	00000000	 DCD         |??_C@_1FA@MOHHPKCL@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAP?$AAr?$AAo@|
  002e4		 |$LN40@AdapterHan@5|
  002e4	00000000	 DCD         |??_C@_1EO@CNHHEAKN@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAR?$AAe?$AAq@|
  002e8		 |$LN41@AdapterHan@5|
  002e8	00000000	 DCD         |??_C@_1GA@FPFJBHJM@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAV?$AAi?$AAd?$AAP?$AAr@|
  002ec		 |$LN42@AdapterHan@5|
  002ec	00000000	 DCD         |dpCurSettings|
  002f0		 |$M36221|

			 ENDP  ; |?AdapterHandleVidProcAmpRequests@CCameraDevice@@QAAKPAEK0KPAK@Z|, CCameraDevice::AdapterHandleVidProcAmpRequests

	EXPORT	|?AdapterHandleCamControlRequests@CCameraDevice@@QAAKPAEK0KPAK@Z| ; CCameraDevice::AdapterHandleCamControlRequests
	EXPORT	|??_C@_1GA@GHEGIMIG@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAC?$AAa?$AAm?$AAC?$AAo@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T36261| DCD	|$LN37@AdapterHan@6|
	DCD	0x4000b702

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@GHEGIMIG@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAC?$AAa?$AAm?$AAC?$AAo@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "C", 0x0, "a", 0x0, "m", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s"
	DCB	0x0, "t", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AdapterHandleCamControlRequests@CCameraDevice@@QAAKPAEK0KPAK@Z| PROC ; CCameraDevice::AdapterHandleCamControlRequests

; 949  : {

  00000		 |$LN37@AdapterHan@6|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004	e24dd024	 sub         sp, sp, #0x24
  00008		 |$M36258|
  00008	e1a09003	 mov         r9, r3
  0000c	e1a0a002	 mov         r10, r2
  00010	e1a08001	 mov         r8, r1
  00014	e1a04000	 mov         r4, r0

; 950  :     // Note: This whole function is wrapped in a __try/__except block
; 951  : 
; 952  :     DEBUGMSG( ZONE_IOCTL, ( _T("CAM_IOControl(%08x): HandleCamControlRequests\r\n"), this ) );

  00018	e59f62b8	 ldr         r6, [pc, #0x2B8]
  0001c	e596e440	 ldr         lr, [r6, #0x440]
  00020	e31e0010	 tst         lr, #0x10
  00024	159f02a8	 ldrne       r0, [pc, #0x2A8]
  00028	11a01004	 movne       r1, r4
  0002c	1b000000	 blne        NKDbgPrintfW

; 953  :     DWORD dwError = ERROR_INVALID_PARAMETER;
; 954  :     LONG  lValue  = 0;
; 955  :     LONG  lFlags  = 0;
; 956  :     PSENSOR_PROPERTY pSensorProp = NULL;
; 957  :     PCSPROPERTY_CAMERACONTROL_S pCsPropCamControlOutput = NULL;
; 958  :     PCSPROPERTY_CAMERACONTROL_S pCsPropCamControlInput  = NULL;
; 959  : 
; 960  :     CSPROPERTY   csProp = {0};

  00030	e3a02000	 mov         r2, #0
  00034	e58d200c	 str         r2, [sp, #0xC]
  00038	e3a03057	 mov         r3, #0x57
  0003c	e3a02014	 mov         r2, #0x14
  00040	e3a01000	 mov         r1, #0
  00044	e28d0010	 add         r0, sp, #0x10
  00048	e58d3008	 str         r3, [sp, #8]
  0004c	eb000000	 bl          memset

; 961  :     if( !CeSafeCopyMemory( &csProp, pInBuf, sizeof( CSPROPERTY )))

  00050	e3a02018	 mov         r2, #0x18
  00054	e1a01008	 mov         r1, r8
  00058	e28d000c	 add         r0, sp, #0xC
  0005c	eb000000	 bl          CeSafeCopyMemory
  00060	e3500000	 cmp         r0, #0

; 962  :     {
; 963  :         return dwError;

  00064	0a000094	 beq         |$LN27@AdapterHan@6|

; 964  :     }
; 965  : 
; 966  :     *pdwBytesTransferred = 0;
; 967  : 
; 968  :     // we support PROPSETID_Pin, so just return success
; 969  :     if ( CSPROPERTY_TYPE_SETSUPPORT == csProp.Flags )

  00068	e59d3020	 ldr         r3, [sp, #0x20]
  0006c	e59d7048	 ldr         r7, [sp, #0x48]
  00070	e3a02000	 mov         r2, #0
  00074	e3530c01	 cmp         r3, #1, 24

; 970  :     {
; 971  :         return ERROR_SUCCESS;

  00078	03a00000	 moveq       r0, #0
  0007c	e5872000	 str         r2, [r7]
  00080	0a00008e	 beq         |$LN23@AdapterHan@6|

; 972  :     }
; 973  : 
; 974  :     if ( csProp.Id < CSPROPERTY_CAMERACONTROL_PAN || csProp.Id > CSPROPERTY_CAMERACONTROL_FLASH )

  00084	e59d301c	 ldr         r3, [sp, #0x1C]
  00088	e3530007	 cmp         r3, #7
  0008c	8a000084	 bhi         |$LN19@AdapterHan@6|

; 978  :     }
; 979  : 
; 980  :     if ( ERROR_SUCCESS != m_PDDFuncTbl.PDD_GetAdapterInfo( m_PDDContext, &m_AdapterInfo ) )

  00090	e59402a4	 ldr         r0, [r4, #0x2A4]
  00094	e59432b4	 ldr         r3, [r4, #0x2B4]
  00098	e2841028	 add         r1, r4, #0x28
  0009c	e1a0e00f	 mov         lr, pc
  000a0	e12fff13	 bx          r3
  000a4	e3500000	 cmp         r0, #0

; 981  :     {
; 982  :         return dwError;

  000a8	1a000083	 bne         |$LN27@AdapterHan@6|

; 983  :     }
; 984  : 
; 985  :     pSensorProp = m_AdapterInfo.SensorProps + (csProp.Id + (NUM_VIDEOPROCAMP_ITEMS));

  000ac	e59d301c	 ldr         r3, [sp, #0x1C]

; 986  : 
; 987  :     switch( csProp.Flags )

  000b0	e59d2020	 ldr         r2, [sp, #0x20]
  000b4	e0843283	 add         r3, r4, r3, lsl #5
  000b8	e2835f69	 add         r5, r3, #0x69, 30
  000bc	e3520001	 cmp         r2, #1
  000c0	0a00004c	 beq         |$LN15@AdapterHan@6|
  000c4	e3520002	 cmp         r2, #2
  000c8	0a00001c	 beq         |$LN11@AdapterHan@6|
  000cc	e3520c02	 cmp         r2, #2, 24
  000d0	0a000010	 beq         |$LN2@AdapterHan@6|
  000d4	e3520801	 cmp         r2, #1, 16
  000d8	0a000004	 beq         |$LN3@AdapterHan@6|

; 1071 :         break;
; 1072 : 
; 1073 :     default :
; 1074 :         DEBUGMSG(ZONE_IOCTL, (_T("CAM_IOControl(%08x): Invalid Request\r\n"), this));

  000dc	e5963440	 ldr         r3, [r6, #0x440]
  000e0	e3130010	 tst         r3, #0x10
  000e4	0a000074	 beq         |$LN27@AdapterHan@6|
  000e8	e59f01e0	 ldr         r0, [pc, #0x1E0]

; 1075 :         return dwError;

  000ec	ea000070	 b           |$LN32@AdapterHan@6|
  000f0		 |$LN3@AdapterHan@6|

; 1062 : 
; 1063 :     case CSPROPERTY_TYPE_DEFAULTVALUES:
; 1064 : 
; 1065 :         GetDefaultValues( pOutBuf, OutBufLen, pdwBytesTransferred, pSensorProp, &dwError );

  000f0	e59d2044	 ldr         r2, [sp, #0x44]
  000f4	e28de008	 add         lr, sp, #8
  000f8	e1a03007	 mov         r3, r7
  000fc	e1a01009	 mov         r1, r9
  00100	e1a00004	 mov         r0, r4
  00104	e58de004	 str         lr, [sp, #4]
  00108	e58d5000	 str         r5, [sp]
  0010c	eb000000	 bl          |?GetDefaultValues@CCameraDevice@@AAAXPAEKPAKPAU_Sensor_Property@@1@Z|
  00110	e59d0008	 ldr         r0, [sp, #8]
  00114	ea000069	 b           |$LN23@AdapterHan@6|
  00118		 |$LN2@AdapterHan@6|

; 1066 :         break;
; 1067 : 
; 1068 :     case CSPROPERTY_TYPE_BASICSUPPORT:
; 1069 : 
; 1070 :         GetBasicSupportInfo( pOutBuf, OutBufLen, pdwBytesTransferred, pSensorProp, &dwError );

  00118	e59d2044	 ldr         r2, [sp, #0x44]
  0011c	e28de008	 add         lr, sp, #8
  00120	e1a03007	 mov         r3, r7
  00124	e1a01009	 mov         r1, r9
  00128	e1a00004	 mov         r0, r4
  0012c	e58de004	 str         lr, [sp, #4]
  00130	e58d5000	 str         r5, [sp]
  00134	eb000000	 bl          |?GetBasicSupportInfo@CCameraDevice@@AAAXPAEKPAKPAU_Sensor_Property@@1@Z|
  00138	e59d0008	 ldr         r0, [sp, #8]
  0013c	ea00005f	 b           |$LN23@AdapterHan@6|
  00140		 |$LN11@AdapterHan@6|

; 1017 :         break;
; 1018 : 
; 1019 :     case CSPROPERTY_TYPE_SET:
; 1020 : 
; 1021 :         if ( NULL == ( pCsPropCamControlInput = reinterpret_cast<PCSPROPERTY_CAMERACONTROL_S>( ValidateBuffer( pInBuf, InBufLen, sizeof(CSPROPERTY_CAMERACONTROL_S), &dwError ) ) ) )

  00140	e28d3008	 add         r3, sp, #8
  00144	e58d3000	 str         r3, [sp]
  00148	e3a03028	 mov         r3, #0x28
  0014c	e1a0200a	 mov         r2, r10
  00150	e1a01008	 mov         r1, r8
  00154	e1a00004	 mov         r0, r4
  00158	eb000000	 bl          |?ValidateBuffer@CCameraDevice@@QAAPAXPAXKKPAK@Z|
  0015c	e3500000	 cmp         r0, #0

; 1022 :         {
; 1023 :             return dwError;

  00160	0a00002d	 beq         |$LN33@AdapterHan@6|

; 1024 :         }
; 1025 : 
; 1026 :         if ( FALSE == pSensorProp->fSetSupported )

  00164	e595301c	 ldr         r3, [r5, #0x1C]
  00168	e3530000	 cmp         r3, #0

; 1027 :         {
; 1028 :             SetLastError(ERROR_INVALID_OPERATION);
; 1029 :             break;

  0016c	0a00002f	 beq         |$LN34@AdapterHan@6|

; 1030 :         }
; 1031 : 
; 1032 :         // CSPROPERTY_CAMERACONTROL_FLAGS_MANUAL and CSPROPERTY_CAMERACONTROL_FLAGS_AUTO are mutually exclusive
; 1033 :         if( pCsPropCamControlInput->Flags != CSPROPERTY_CAMERACONTROL_FLAGS_MANUAL && 
; 1034 :             pCsPropCamControlInput->Flags != CSPROPERTY_CAMERACONTROL_FLAGS_AUTO )

  00170	e590601c	 ldr         r6, [r0, #0x1C]
  00174	e3560002	 cmp         r6, #2
  00178	0a000001	 beq         |$LN8@AdapterHan@6|
  0017c	e3560001	 cmp         r6, #1

; 1035 :         {
; 1036 :             SetLastError(ERROR_INVALID_OPERATION);
; 1037 :             break;

  00180	1a00002a	 bne         |$LN34@AdapterHan@6|
  00184		 |$LN8@AdapterHan@6|

; 1038 :         }
; 1039 : 
; 1040 :         lValue = pCsPropCamControlInput->Value;
; 1041 :         lFlags = pCsPropCamControlInput->Flags;
; 1042 : 
; 1043 :         if( lFlags & ~pSensorProp->ulCapabilities )

  00184	e595300c	 ldr         r3, [r5, #0xC]
  00188	e5907018	 ldr         r7, [r0, #0x18]
  0018c	e1d6c003	 bics        r12, r6, r3
  00190	1a000021	 bne         |$LN33@AdapterHan@6|

; 1044 :         {
; 1045 :             break;
; 1046 :         }
; 1047 :         
; 1048 :         if( CSPROPERTY_CAMERACONTROL_FLAGS_MANUAL == lFlags )

  00194	e3560002	 cmp         r6, #2
  00198	1a00000d	 bne         |$LN5@AdapterHan@6|

; 1049 :         {
; 1050 :             if ( lValue < pSensorProp->pRangeNStep->Bounds.SignedMinimum ||
; 1051 :                 lValue > pSensorProp->pRangeNStep->Bounds.SignedMaximum ||
; 1052 :                 0 != ((lValue - pSensorProp->pRangeNStep->Bounds.SignedMinimum) % pSensorProp->pRangeNStep->SteppingDelta) )

  0019c	e5953014	 ldr         r3, [r5, #0x14]
  001a0	e5931008	 ldr         r1, [r3, #8]
  001a4	e1570001	 cmp         r7, r1
  001a8	ba00001b	 blt         |$LN33@AdapterHan@6|
  001ac	e593100c	 ldr         r1, [r3, #0xC]
  001b0	e1570001	 cmp         r7, r1
  001b4	ca000018	 bgt         |$LN33@AdapterHan@6|
  001b8	e1a01003	 mov         r1, r3
  001bc	e591e008	 ldr         lr, [r1, #8]
  001c0	e5910000	 ldr         r0, [r1]
  001c4	e047100e	 sub         r1, r7, lr
  001c8	eb000000	 bl          __rt_udiv
  001cc	e3510000	 cmp         r1, #0

; 1053 :             {
; 1054 :                 break;

  001d0	1a000011	 bne         |$LN33@AdapterHan@6|
  001d4		 |$LN5@AdapterHan@6|

; 1055 :             }
; 1056 : 
; 1057 :         }
; 1058 : 
; 1059 :         dwError = m_PDDFuncTbl.PDD_HandleCamControlChanges( m_PDDContext, csProp.Id + (NUM_VIDEOPROCAMP_ITEMS), lFlags, lValue );                                                                                             

  001d4	e59d101c	 ldr         r1, [sp, #0x1C]
  001d8	e59402a4	 ldr         r0, [r4, #0x2A4]
  001dc	e59442bc	 ldr         r4, [r4, #0x2BC]
  001e0	e281100a	 add         r1, r1, #0xA
  001e4	e1a03007	 mov         r3, r7
  001e8	e1a02006	 mov         r2, r6
  001ec	e1a0e00f	 mov         lr, pc
  001f0	e12fff14	 bx          r4

; 1060 :         
; 1061 :         break;

  001f4	ea000031	 b           |$LN23@AdapterHan@6|
  001f8		 |$LN15@AdapterHan@6|

; 988  :     {
; 989  :     case CSPROPERTY_TYPE_GET:
; 990  : 
; 991  :         if ( NULL == ( pCsPropCamControlInput = reinterpret_cast<PCSPROPERTY_CAMERACONTROL_S>( ValidateBuffer( pInBuf, InBufLen, sizeof(CSPROPERTY_CAMERACONTROL_S), &dwError ) ) ) )

  001f8	e28d3008	 add         r3, sp, #8
  001fc	e58d3000	 str         r3, [sp]
  00200	e3a03028	 mov         r3, #0x28
  00204	e1a0200a	 mov         r2, r10
  00208	e1a01008	 mov         r1, r8
  0020c	e1a00004	 mov         r0, r4
  00210	eb000000	 bl          |?ValidateBuffer@CCameraDevice@@QAAPAXPAXKKPAK@Z|
  00214	e1b06000	 movs        r6, r0
  00218	1a000001	 bne         |$LN14@AdapterHan@6|
  0021c		 |$LN33@AdapterHan@6|

; 992  :         {
; 993  :             return dwError;

  0021c	e59d0008	 ldr         r0, [sp, #8]
  00220	ea000026	 b           |$LN23@AdapterHan@6|
  00224		 |$LN14@AdapterHan@6|

; 994  :         }
; 995  : 
; 996  :         if ( FALSE == pSensorProp->fGetSupported )

  00224	e5953018	 ldr         r3, [r5, #0x18]
  00228	e3530000	 cmp         r3, #0
  0022c	1a000004	 bne         |$LN13@AdapterHan@6|
  00230		 |$LN34@AdapterHan@6|
  00230	e3a03a01	 mov         r3, #1, 20

; 997  :         {
; 998  :             SetLastError(ERROR_INVALID_OPERATION);

  00234	e38300dd	 orr         r0, r3, #0xDD
  00238	eb000000	 bl          SetLastError
  0023c	e59d0008	 ldr         r0, [sp, #8]
  00240	ea00001e	 b           |$LN23@AdapterHan@6|
  00244		 |$LN13@AdapterHan@6|

; 999  :             break;
; 1000 :         }
; 1001 : 
; 1002 :         *pdwBytesTransferred = sizeof(CSPROPERTY_CAMERACONTROL_S);
; 1003 :         if( NULL == ( pCsPropCamControlOutput = reinterpret_cast<PCSPROPERTY_CAMERACONTROL_S>(ValidateBuffer( pOutBuf, OutBufLen, *pdwBytesTransferred, &dwError ) ) ) )

  00244	e59d2044	 ldr         r2, [sp, #0x44]
  00248	e3a08028	 mov         r8, #0x28
  0024c	e28de008	 add         lr, sp, #8
  00250	e3a03028	 mov         r3, #0x28
  00254	e1a01009	 mov         r1, r9
  00258	e1a00004	 mov         r0, r4
  0025c	e5878000	 str         r8, [r7]
  00260	e58de000	 str         lr, [sp]
  00264	eb000000	 bl          |?ValidateBuffer@CCameraDevice@@QAAPAXPAXKKPAK@Z|
  00268	e1b04000	 movs        r4, r0

; 1004 :         {
; 1005 :             dwError = ERROR_MORE_DATA;

  0026c	03a000ea	 moveq       r0, #0xEA
  00270	0a000012	 beq         |$LN23@AdapterHan@6|

; 1006 :             break;
; 1007 :         }
; 1008 : 
; 1009 :         //Copy the CSPROPERTY structure to the output buffer just in case!
; 1010 :         memcpy( pCsPropCamControlOutput, pCsPropCamControlInput, sizeof(CSPROPERTY) );

  00274	e3a02018	 mov         r2, #0x18
  00278	e1a01006	 mov         r1, r6
  0027c	e1a00004	 mov         r0, r4
  00280	eb000000	 bl          memcpy

; 1011 : 
; 1012 :         pCsPropCamControlOutput->Value         = pSensorProp->ulCurrentValue;

  00284	e5953004	 ldr         r3, [r5, #4]

; 1013 :         pCsPropCamControlOutput->Flags         = pSensorProp->ulFlags;
; 1014 :         pCsPropCamControlOutput->Capabilities  = pSensorProp->ulCapabilities;
; 1015 : 
; 1016 :         dwError = ERROR_SUCCESS;

  00288	e3a00000	 mov         r0, #0
  0028c	e5843018	 str         r3, [r4, #0x18]
  00290	e5953008	 ldr         r3, [r5, #8]
  00294	e584301c	 str         r3, [r4, #0x1C]
  00298	e595300c	 ldr         r3, [r5, #0xC]
  0029c	e5843020	 str         r3, [r4, #0x20]

; 1076 :     }
; 1077 : 
; 1078 :     return dwError;

  002a0	ea000006	 b           |$LN23@AdapterHan@6|
  002a4		 |$LN19@AdapterHan@6|

; 975  :     {
; 976  :         DEBUGMSG(ZONE_IOCTL, (_T("CAM_IOControl(%08x): Invalid Property\r\n"), this));

  002a4	e5963440	 ldr         r3, [r6, #0x440]
  002a8	e3130010	 tst         r3, #0x10
  002ac	0a000002	 beq         |$LN27@AdapterHan@6|
  002b0	e59f0014	 ldr         r0, [pc, #0x14]
  002b4		 |$LN32@AdapterHan@6|
  002b4	e1a01004	 mov         r1, r4
  002b8	eb000000	 bl          NKDbgPrintfW
  002bc		 |$LN27@AdapterHan@6|

; 977  :         return dwError;

  002bc	e3a00057	 mov         r0, #0x57
  002c0		 |$LN23@AdapterHan@6|

; 1079 : }

  002c0	e28dd024	 add         sp, sp, #0x24
  002c4	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  002c8	e12fff1e	 bx          lr
  002cc		 |$LN38@AdapterHan@6|
  002cc		 |$LN39@AdapterHan@6|
  002cc	00000000	 DCD         |??_C@_1FA@MOHHPKCL@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAP?$AAr?$AAo@|
  002d0		 |$LN40@AdapterHan@6|
  002d0	00000000	 DCD         |??_C@_1EO@CNHHEAKN@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAR?$AAe?$AAq@|
  002d4		 |$LN41@AdapterHan@6|
  002d4	00000000	 DCD         |??_C@_1GA@GHEGIMIG@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAC?$AAa?$AAm?$AAC?$AAo@|
  002d8		 |$LN42@AdapterHan@6|
  002d8	00000000	 DCD         |dpCurSettings|
  002dc		 |$M36259|

			 ENDP  ; |?AdapterHandleCamControlRequests@CCameraDevice@@QAAKPAEK0KPAK@Z|, CCameraDevice::AdapterHandleCamControlRequests

	EXPORT	|?AdapterHandleVideoControlRequests@CCameraDevice@@QAAKPAEK0KPAK@Z| ; CCameraDevice::AdapterHandleVideoControlRequests
	EXPORT	|??_C@_1IK@ONENHPGG@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAf?$AAl?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@OHFKDCNB@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAp?$AAi?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@LDHDJFME@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAp?$AAi?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IK@CDPKPLGB@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAf?$AAl?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@GBIGGIOD@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAV?$AAi?$AAd?$AAe?$AAo@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T36347| DCD	|$LN76@AdapterHan@7|
	DCD	0x4000d702

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IK@ONENHPGG@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAf?$AAl?$AAa@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "f", 0x0, "l"
	DCB	0x0, "a", 0x0, "g", 0x0, " ", 0x0, "s", 0x0, "p", 0x0, "e"
	DCB	0x0, "c", 0x0, "i", 0x0, "f", 0x0, "i", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "a", 0x0, "s", 0x0, " ", 0x0, "V", 0x0, "i"
	DCB	0x0, "d", 0x0, "e", 0x0, "o", 0x0, " ", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, " "
	DCB	0x0, "C", 0x0, "a", 0x0, "p", 0x0, "s", 0x0, ".", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@OHFKDCNB@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAp?$AAi?$AAn@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "p", 0x0, "i"
	DCB	0x0, "n", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "d", 0x0, "e"
	DCB	0x0, "x", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@LDHDJFME@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAp?$AAi?$AAn@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "p", 0x0, "i"
	DCB	0x0, "n", 0x0, " ", 0x0, "f", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "T", 0x0, "r", 0x0, "i", 0x0, "g", 0x0, "g", 0x0, "e"
	DCB	0x0, "r", 0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IK@CDPKPLGB@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAf?$AAl?$AAa@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "I", 0x0, "n", 0x0, "v", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "f", 0x0, "l"
	DCB	0x0, "a", 0x0, "g", 0x0, " ", 0x0, "s", 0x0, "p", 0x0, "e"
	DCB	0x0, "c", 0x0, "i", 0x0, "f", 0x0, "i", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "a", 0x0, "s", 0x0, " ", 0x0, "V", 0x0, "i"
	DCB	0x0, "d", 0x0, "e", 0x0, "o", 0x0, " ", 0x0, "C", 0x0, "o"
	DCB	0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l", 0x0, " "
	DCB	0x0, "M", 0x0, "o", 0x0, "d", 0x0, "e", 0x0, ".", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@GBIGGIOD@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAV?$AAi?$AAd?$AAe?$AAo@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "V", 0x0, "i", 0x0, "d", 0x0, "e"
	DCB	0x0, "o", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, "s", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AdapterHandleVideoControlRequests@CCameraDevice@@QAAKPAEK0KPAK@Z| PROC ; CCameraDevice::AdapterHandleVideoControlRequests

; 1089 : {

  00000		 |$LN76@AdapterHan@7|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004	e24dd020	 sub         sp, sp, #0x20
  00008		 |$M36344|
  00008	e1a0a003	 mov         r10, r3
  0000c	e1a09002	 mov         r9, r2
  00010	e1a07001	 mov         r7, r1
  00014	e1a05000	 mov         r5, r0

; 1090 :     // Note: This whole function is wrapped in a __try/__except block
; 1091 :     DEBUGMSG( ZONE_IOCTL, (_T("CAM_IOControl(%08x): HandleVideoControlRequests\r\n"), this ) );

  00018	e59f6338	 ldr         r6, [pc, #0x338]
  0001c	e596e440	 ldr         lr, [r6, #0x440]
  00020	e31e0010	 tst         lr, #0x10
  00024	159f0328	 ldrne       r0, [pc, #0x328]
  00028	11a01005	 movne       r1, r5
  0002c	1b000000	 blne        NKDbgPrintfW

; 1092 : 
; 1093 :     DWORD dwError = ERROR_INVALID_PARAMETER;
; 1094 :     ULONG ulCaps  = 0;
; 1095 :     LONG lIndex = 0;
; 1096 : 
; 1097 :     PCSPROPERTY_VIDEOCONTROL_CAPS_S pCsPropVideoControlCapsOutput = NULL;
; 1098 :     PCSPROPERTY_VIDEOCONTROL_CAPS_S pCsPropVideoControlCapsInput  = NULL;
; 1099 :     PCSPROPERTY_VIDEOCONTROL_MODE_S pCsPropVideoControlModeInput  = NULL;
; 1100 : 
; 1101 :     CSPROPERTY csProp = {0};

  00030	e3a03000	 mov         r3, #0
  00034	e3a04057	 mov         r4, #0x57
  00038	e3a02014	 mov         r2, #0x14
  0003c	e3a01000	 mov         r1, #0
  00040	e28d000c	 add         r0, sp, #0xC
  00044	e58d3008	 str         r3, [sp, #8]
  00048	e58d4004	 str         r4, [sp, #4]
  0004c	eb000000	 bl          memset

; 1102 : 
; 1103 :     if( !CeSafeCopyMemory( &csProp, pInBuf, sizeof( CSPROPERTY )))

  00050	e3a02018	 mov         r2, #0x18
  00054	e1a01007	 mov         r1, r7
  00058	e28d0008	 add         r0, sp, #8
  0005c	eb000000	 bl          CeSafeCopyMemory
  00060	e3500000	 cmp         r0, #0

; 1104 :     {
; 1105 :         return dwError;

  00064	03a04057	 moveq       r4, #0x57
  00068	0a000022	 beq         |$LN17@AdapterHan@7|

; 1106 :     }
; 1107 : 
; 1108 :     *pdwBytesTransferred = 0;
; 1109 : 
; 1110 :     // we support PROPSETID_Pin, so just return success
; 1111 :     if ( CSPROPERTY_TYPE_SETSUPPORT == csProp.Flags )

  0006c	e59d301c	 ldr         r3, [sp, #0x1C]
  00070	e59d8044	 ldr         r8, [sp, #0x44]
  00074	e3a02000	 mov         r2, #0
  00078	e3530c01	 cmp         r3, #1, 24

; 1112 :     {
; 1113 :         return ERROR_SUCCESS;

  0007c	03a04000	 moveq       r4, #0
  00080	e5882000	 str         r2, [r8]
  00084	0a00001b	 beq         |$LN17@AdapterHan@7|

; 1114 :     }
; 1115 : 
; 1116 :     switch( csProp.Id )

  00088	e59d3018	 ldr         r3, [sp, #0x18]
  0008c	e3530000	 cmp         r3, #0
  00090	0a000039	 beq         |$LN24@AdapterHan@7|
  00094	e3530003	 cmp         r3, #3
  00098	1a000030	 bne         |$LN66@AdapterHan@7|

; 1206 :         }
; 1207 : 
; 1208 :         break;
; 1209 : 
; 1210 :     case CSPROPERTY_VIDEOCONTROL_MODE:
; 1211 :         if( NULL == ( pCsPropVideoControlModeInput = reinterpret_cast<PCSPROPERTY_VIDEOCONTROL_MODE_S>(ValidateBuffer( pInBuf, InBufLen, sizeof(CSPROPERTY_VIDEOCONTROL_MODE_S), &dwError ) ) ) )

  0009c	e28d3004	 add         r3, sp, #4
  000a0	e58d3000	 str         r3, [sp]
  000a4	e3a03020	 mov         r3, #0x20
  000a8	e1a02009	 mov         r2, r9
  000ac	e1a01007	 mov         r1, r7
  000b0	e1a00005	 mov         r0, r5
  000b4	eb000000	 bl          |?ValidateBuffer@CCameraDevice@@QAAPAXPAXKKPAK@Z|
  000b8	e3500000	 cmp         r0, #0
  000bc	0a00000c	 beq         |$LN68@AdapterHan@7|

; 1212 :         {
; 1213 :             break;
; 1214 :         }
; 1215 : 
; 1216 :         lIndex = pCsPropVideoControlModeInput->StreamIndex;
; 1217 :         if ( false == IsValidPin( lIndex ) )

  000c0	e5902018	 ldr         r2, [r0, #0x18]
  000c4	e595302c	 ldr         r3, [r5, #0x2C]
  000c8	e1520003	 cmp         r2, r3
  000cc	23a03000	 movcs       r3, #0
  000d0	33a03001	 movcc       r3, #1
  000d4	e3530000	 cmp         r3, #0
  000d8	1a00000a	 bne         |$LN7@AdapterHan@7|
  000dc		 |$LN70@AdapterHan@7|

; 1218 :         {
; 1219 :             DEBUGMSG( ZONE_IOCTL, (_T("CAM_IOControl(%08x): Invalid PinId\r\n"), this ) );

  000dc	e5963440	 ldr         r3, [r6, #0x440]
  000e0	e3130010	 tst         r3, #0x10
  000e4	0a000002	 beq         |$LN68@AdapterHan@7|
  000e8	e59f0260	 ldr         r0, [pc, #0x260]
  000ec		 |$LN71@AdapterHan@7|
  000ec	e1a01005	 mov         r1, r5
  000f0	eb000000	 bl          NKDbgPrintfW
  000f4		 |$LN68@AdapterHan@7|

; 1149 : 
; 1150 :                 dwError = ERROR_SUCCESS;

  000f4	e59d4004	 ldr         r4, [sp, #4]
  000f8		 |$LN17@AdapterHan@7|

; 1246 :     }
; 1247 : 
; 1248 :     return dwError;
; 1249 : }

  000f8	e1a00004	 mov         r0, r4
  000fc	e28dd020	 add         sp, sp, #0x20
  00100	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  00104	e12fff1e	 bx          lr
  00108		 |$LN7@AdapterHan@7|

; 1220 :             break;
; 1221 :         }
; 1222 : 
; 1223 :         switch( csProp.Flags )

  00108	e59d301c	 ldr         r3, [sp, #0x1C]
  0010c	e3530002	 cmp         r3, #2
  00110	0a000004	 beq         |$LN4@AdapterHan@7|

; 1236 :             break ;
; 1237 : 
; 1238 :         default :
; 1239 :             DEBUGMSG(ZONE_IOCTL, (_T("CAM_IOControl(%08x): Invalid Request\r\n"), this)) ;

  00114	e5963440	 ldr         r3, [r6, #0x440]
  00118	e3130010	 tst         r3, #0x10
  0011c	0a00000e	 beq         |$LN65@AdapterHan@7|
  00120	e59f0218	 ldr         r0, [pc, #0x218]

; 1240 :             break ;

  00124	ea00000a	 b           |$LN69@AdapterHan@7|
  00128		 |$LN4@AdapterHan@7|

; 1224 :         {
; 1225 :         case CSPROPERTY_TYPE_SET:
; 1226 :             ulCaps = pCsPropVideoControlModeInput->Mode;
; 1227 :             if ( ulCaps != CS_VideoControlFlag_Trigger )

  00128	e590301c	 ldr         r3, [r0, #0x1C]
  0012c	e3530008	 cmp         r3, #8

; 1236 :             break ;
; 1237 : 
; 1238 :         default :
; 1239 :             DEBUGMSG(ZONE_IOCTL, (_T("CAM_IOControl(%08x): Invalid Request\r\n"), this)) ;

  00130	e5963440	 ldr         r3, [r6, #0x440]
  00134	0a000003	 beq         |$LN3@AdapterHan@7|
  00138	e3130010	 tst         r3, #0x10
  0013c	0a000006	 beq         |$LN65@AdapterHan@7|
  00140	e59f0204	 ldr         r0, [pc, #0x204]
  00144	ea000002	 b           |$LN69@AdapterHan@7|
  00148		 |$LN3@AdapterHan@7|
  00148	e3130010	 tst         r3, #0x10
  0014c	0a000002	 beq         |$LN65@AdapterHan@7|
  00150	e59f01f0	 ldr         r0, [pc, #0x1F0]
  00154		 |$LN69@AdapterHan@7|
  00154	e1a01005	 mov         r1, r5
  00158	eb000000	 bl          NKDbgPrintfW
  0015c		 |$LN65@AdapterHan@7|

; 1228 :             {
; 1229 :                 DEBUGMSG( ZONE_IOCTL, (_T("CAM_IOControl(%08x): Invalid flag specified as Video Control Mode.\r\n"), this ) );
; 1230 :                 break;
; 1231 :             }
; 1232 : 
; 1233 :             //Only STILL pin supports CS_VideoControlFlag_Trigger for the current CAMERA MDD
; 1234 :             //but this video driver don't support STILL PIN, so we just return it           
; 1235 :                 DEBUGMSG( ZONE_IOCTL, (_T("CAM_IOControl(%08x): Invalid pin for Trigger.\r\n"), this ) );

  0015c	e59d4004	 ldr         r4, [sp, #4]
  00160		 |$LN66@AdapterHan@7|

; 1236 :             break ;
; 1237 : 
; 1238 :         default :
; 1239 :             DEBUGMSG(ZONE_IOCTL, (_T("CAM_IOControl(%08x): Invalid Request\r\n"), this)) ;

  00160	e5963440	 ldr         r3, [r6, #0x440]

; 1241 :         }
; 1242 : 
; 1243 :     default:
; 1244 :         DEBUGMSG(ZONE_IOCTL, (_T("CAM_IOControl(%08x): Invalid Property\r\n"), this)) ;

  00164	e3130010	 tst         r3, #0x10
  00168	0affffe2	 beq         |$LN17@AdapterHan@7|
  0016c	e59f01d0	 ldr         r0, [pc, #0x1D0]
  00170	e1a01005	 mov         r1, r5
  00174	eb000000	 bl          NKDbgPrintfW

; 1245 :         return dwError ;

  00178	eaffffde	 b           |$LN17@AdapterHan@7|
  0017c		 |$LN24@AdapterHan@7|

; 1117 :     {
; 1118 :     case CSPROPERTY_VIDEOCONTROL_CAPS:
; 1119 :         if( NULL == ( pCsPropVideoControlCapsInput = reinterpret_cast<PCSPROPERTY_VIDEOCONTROL_CAPS_S>(ValidateBuffer( pInBuf, InBufLen, sizeof(CSPROPERTY_VIDEOCONTROL_CAPS_S), &dwError ) ) ) )

  0017c	e28d3004	 add         r3, sp, #4
  00180	e58d3000	 str         r3, [sp]
  00184	e3a03020	 mov         r3, #0x20
  00188	e1a02009	 mov         r2, r9
  0018c	e1a01007	 mov         r1, r7
  00190	e1a00005	 mov         r0, r5
  00194	eb000000	 bl          |?ValidateBuffer@CCameraDevice@@QAAPAXPAXKKPAK@Z|
  00198	e1b04000	 movs        r4, r0
  0019c	0affffd4	 beq         |$LN68@AdapterHan@7|

; 1120 :         {
; 1121 :             break;
; 1122 :         }
; 1123 : 
; 1124 :         lIndex = pCsPropVideoControlCapsInput->StreamIndex;

  001a0	e5947018	 ldr         r7, [r4, #0x18]

; 1125 :         if ( false == IsValidPin( lIndex ) )

  001a4	e595202c	 ldr         r2, [r5, #0x2C]
  001a8	e1570002	 cmp         r7, r2
  001ac	23a03000	 movcs       r3, #0
  001b0	33a03001	 movcc       r3, #1
  001b4	e3530000	 cmp         r3, #0

; 1126 :         {
; 1127 :             DEBUGMSG( ZONE_IOCTL, (_T("CAM_IOControl(%08x): Invalid PinId\r\n"), this ) );
; 1128 :             break;

  001b8	0affffc7	 beq         |$LN70@AdapterHan@7|

; 1129 :         }
; 1130 : 
; 1131 :         switch ( csProp.Flags )

  001bc	e59d301c	 ldr         r3, [sp, #0x1C]
  001c0	e3530001	 cmp         r3, #1
  001c4	0a00003f	 beq         |$LN19@AdapterHan@7|
  001c8	e3530002	 cmp         r3, #2
  001cc	0a000028	 beq         |$LN16@AdapterHan@7|
  001d0	e3530801	 cmp         r3, #1, 16
  001d4	0a000004	 beq         |$LN13@AdapterHan@7|

; 1202 : 
; 1203 :         default:
; 1204 :             DEBUGMSG( ZONE_IOCTL, ( _T("CAM_IOControl(%08x): Invalid Request\r\n"), this ) );

  001d8	e5963440	 ldr         r3, [r6, #0x440]
  001dc	e3130010	 tst         r3, #0x10
  001e0	0affffc3	 beq         |$LN68@AdapterHan@7|
  001e4	e59f0154	 ldr         r0, [pc, #0x154]

; 1205 :             break;

  001e8	eaffffbf	 b           |$LN71@AdapterHan@7|
  001ec		 |$LN13@AdapterHan@7|

; 1175 : 
; 1176 :         case CSPROPERTY_TYPE_DEFAULTVALUES:
; 1177 :             *pdwBytesTransferred = sizeof(CSPROPERTY_VIDEOCONTROL_CAPS_S);
; 1178 : 
; 1179 :             if ( NULL == ( pCsPropVideoControlCapsOutput = reinterpret_cast<PCSPROPERTY_VIDEOCONTROL_CAPS_S>( ValidateBuffer( pOutBuf, OutBufLen, *pdwBytesTransferred, &dwError ) ) ) )

  001ec	e59d2040	 ldr         r2, [sp, #0x40]
  001f0	e3a07020	 mov         r7, #0x20
  001f4	e28de004	 add         lr, sp, #4
  001f8	e3a03020	 mov         r3, #0x20
  001fc	e1a0100a	 mov         r1, r10
  00200	e1a00005	 mov         r0, r5
  00204	e5887000	 str         r7, [r8]
  00208	e58de000	 str         lr, [sp]
  0020c	eb000000	 bl          |?ValidateBuffer@CCameraDevice@@QAAPAXPAXKKPAK@Z|
  00210	e1b08000	 movs        r8, r0

; 1180 :             {
; 1181 :                 dwError = ERROR_MORE_DATA;
; 1182 :                 break;

  00214	0a000036	 beq         |$LN72@AdapterHan@7|

; 1183 :             }
; 1184 : 
; 1185 :             lIndex = pCsPropVideoControlCapsInput->StreamIndex;

  00218	e5947018	 ldr         r7, [r4, #0x18]

; 1186 :             if( false == IsValidPin( lIndex ))

  0021c	e595302c	 ldr         r3, [r5, #0x2C]
  00220	e1570003	 cmp         r7, r3
  00224	23a03000	 movcs       r3, #0
  00228	33a03001	 movcc       r3, #1
  0022c	e3530000	 cmp         r3, #0
  00230	1a000004	 bne         |$LN11@AdapterHan@7|
  00234		 |$LN73@AdapterHan@7|

; 1187 :             {
; 1188 :                 DEBUGMSG( ZONE_IOCTL, ( _T("CAM_IOControl(%08x): Invalid pin index.\r\n"), this ) );

  00234	e5963440	 ldr         r3, [r6, #0x440]
  00238	e3130010	 tst         r3, #0x10
  0023c	0affffac	 beq         |$LN68@AdapterHan@7|
  00240	e59f00f4	 ldr         r0, [pc, #0xF4]

; 1189 :                 break;

  00244	eaffffa8	 b           |$LN71@AdapterHan@7|
  00248		 |$LN11@AdapterHan@7|

; 1190 :             }
; 1191 : 
; 1192 :             //Copy the CSPROPERTY structure to the output buffer just in case!
; 1193 :             memcpy( pCsPropVideoControlCapsOutput, pCsPropVideoControlCapsInput, sizeof ( CSPROPERTY ) );

  00248	e3a02018	 mov         r2, #0x18
  0024c	e1a01004	 mov         r1, r4
  00250	e1a00008	 mov         r0, r8
  00254	eb000000	 bl          memcpy

; 1194 : 
; 1195 :             pCsPropVideoControlCapsOutput->StreamIndex      = lIndex;

  00258	e5887018	 str         r7, [r8, #0x18]

; 1196 : 
; 1197 :             pCsPropVideoControlCapsOutput->VideoControlCaps =  m_pStrmInstances[lIndex].VideoCaps.DefaultVideoControlCaps;

  0025c	e5953024	 ldr         r3, [r5, #0x24]

; 1198 : 
; 1199 :             dwError = ERROR_SUCCESS;

  00260	e3a04000	 mov         r4, #0
  00264	e0833287	 add         r3, r3, r7, lsl #5
  00268	e5933010	 ldr         r3, [r3, #0x10]
  0026c	e588301c	 str         r3, [r8, #0x1C]

; 1200 : 
; 1201 :             break;

  00270	eaffffa0	 b           |$LN17@AdapterHan@7|
  00274		 |$LN16@AdapterHan@7|

; 1151 :             }
; 1152 :             break;
; 1153 : 
; 1154 :         case CSPROPERTY_TYPE_SET:
; 1155 :             lIndex = pCsPropVideoControlCapsInput->StreamIndex;
; 1156 : 
; 1157 :             ulCaps = pCsPropVideoControlCapsInput->VideoControlCaps;

  00274	e594101c	 ldr         r1, [r4, #0x1C]

; 1158 :             if ( ulCaps & ~( CS_VideoControlFlag_FlipHorizontal        |
; 1159 :                              CS_VideoControlFlag_FlipVertical          |
; 1160 :                              CS_VideoControlFlag_ExternalTriggerEnable |
; 1161 :                              CS_VideoControlFlag_Trigger ) )

  00278	e3d1c00f	 bics        r12, r1, #0xF
  0027c	0a000004	 beq         |$LN15@AdapterHan@7|

; 1162 :             {
; 1163 :                 DEBUGMSG( ZONE_IOCTL, ( _T("CAM_IOControl(%08x): Invalid flag specified as Video Control Caps.\r\n"), this ) );

  00280	e5963440	 ldr         r3, [r6, #0x440]
  00284	e3130010	 tst         r3, #0x10
  00288	0affff99	 beq         |$LN68@AdapterHan@7|
  0028c	e59f00a4	 ldr         r0, [pc, #0xA4]

; 1164 :                 break;

  00290	eaffff95	 b           |$LN71@AdapterHan@7|
  00294		 |$LN15@AdapterHan@7|

; 1165 :             }
; 1166 : 
; 1167 :             if( false == IsValidPin( lIndex ))

  00294	e1570002	 cmp         r7, r2
  00298	23a03000	 movcs       r3, #0
  0029c	33a03001	 movcc       r3, #1
  002a0	e3530000	 cmp         r3, #0

; 1168 :             {
; 1169 :                 DEBUGMSG( ZONE_IOCTL, ( _T("CAM_IOControl(%08x): Invalid pin index.\r\n"), this ) );
; 1170 :                 break;

  002a4	0affffe2	 beq         |$LN73@AdapterHan@7|

; 1171 :             }
; 1172 : 
; 1173 :             dwError = m_PDDFuncTbl.PDD_HandleVideoControlCapsChanges( m_PDDContext, lIndex ,ulCaps );            

  002a8	e59502a4	 ldr         r0, [r5, #0x2A4]
  002ac	e59532c0	 ldr         r3, [r5, #0x2C0]
  002b0	e1a02001	 mov         r2, r1
  002b4	e1a01007	 mov         r1, r7
  002b8	e1a0e00f	 mov         lr, pc
  002bc	e12fff13	 bx          r3
  002c0	e1a04000	 mov         r4, r0

; 1174 :             break;

  002c4	eaffff8b	 b           |$LN17@AdapterHan@7|
  002c8		 |$LN19@AdapterHan@7|

; 1132 :         {
; 1133 :         case CSPROPERTY_TYPE_GET:
; 1134 :             *pdwBytesTransferred = sizeof(CSPROPERTY_VIDEOCONTROL_CAPS_S);
; 1135 :             if ( NULL == ( pCsPropVideoControlCapsOutput = reinterpret_cast<PCSPROPERTY_VIDEOCONTROL_CAPS_S>( ValidateBuffer( pOutBuf, OutBufLen, *pdwBytesTransferred, &dwError ) ) ) )

  002c8	e59d2040	 ldr         r2, [sp, #0x40]
  002cc	e3a06020	 mov         r6, #0x20
  002d0	e28de004	 add         lr, sp, #4
  002d4	e3a03020	 mov         r3, #0x20
  002d8	e1a0100a	 mov         r1, r10
  002dc	e1a00005	 mov         r0, r5
  002e0	e5886000	 str         r6, [r8]
  002e4	e58de000	 str         lr, [sp]
  002e8	eb000000	 bl          |?ValidateBuffer@CCameraDevice@@QAAPAXPAXKKPAK@Z|
  002ec	e1b06000	 movs        r6, r0
  002f0	1a000001	 bne         |$LN18@AdapterHan@7|
  002f4		 |$LN72@AdapterHan@7|

; 1136 :             {
; 1137 :                 dwError = ERROR_MORE_DATA;

  002f4	e3a040ea	 mov         r4, #0xEA

; 1138 :                 break;

  002f8	eaffff7e	 b           |$LN17@AdapterHan@7|
  002fc		 |$LN18@AdapterHan@7|

; 1139 :             }
; 1140 : 
; 1141 :             //Copy the CSPROPERTY structure to the output buffer just in case!
; 1142 :             memcpy( pCsPropVideoControlCapsOutput, pCsPropVideoControlCapsInput, sizeof( CSPROPERTY ) );

  002fc	e3a02018	 mov         r2, #0x18
  00300	e1a01004	 mov         r1, r4
  00304	e1a00006	 mov         r0, r6
  00308	eb000000	 bl          memcpy

; 1143 : 
; 1144 :             pCsPropVideoControlCapsOutput->StreamIndex      = lIndex;
; 1145 : 
; 1146 :             if( true == GetPDDPinInfo() )

  0030c	e1a00005	 mov         r0, r5
  00310	e5867018	 str         r7, [r6, #0x18]
  00314	eb000000	 bl          |?GetPDDPinInfo@CCameraDevice@@AAA_NXZ|
  00318	e3500001	 cmp         r0, #1
  0031c	1affff74	 bne         |$LN68@AdapterHan@7|

; 1147 :             {
; 1148 :                 pCsPropVideoControlCapsOutput->VideoControlCaps = m_pStrmInstances[lIndex].VideoCaps.CurrentVideoControlCaps;

  00320	e5953024	 ldr         r3, [r5, #0x24]

; 1149 : 
; 1150 :                 dwError = ERROR_SUCCESS;

  00324	e3a04000	 mov         r4, #0
  00328	e0833287	 add         r3, r3, r7, lsl #5
  0032c	e5933014	 ldr         r3, [r3, #0x14]
  00330	e586301c	 str         r3, [r6, #0x1C]
  00334	eaffff6f	 b           |$LN17@AdapterHan@7|
  00338		 |$LN77@AdapterHan@7|
  00338		 |$LN78@AdapterHan@7|
  00338	00000000	 DCD         |??_C@_1IK@ONENHPGG@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAf?$AAl?$AAa@|
  0033c		 |$LN79@AdapterHan@7|
  0033c	00000000	 DCD         |??_C@_1FE@OHFKDCNB@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAp?$AAi?$AAn@|
  00340		 |$LN80@AdapterHan@7|
  00340	00000000	 DCD         |??_C@_1EO@CNHHEAKN@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAR?$AAe?$AAq@|
  00344		 |$LN81@AdapterHan@7|
  00344	00000000	 DCD         |??_C@_1FA@MOHHPKCL@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAP?$AAr?$AAo@|
  00348		 |$LN82@AdapterHan@7|
  00348	00000000	 DCD         |??_C@_1GA@LDHDJFME@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAp?$AAi?$AAn@|
  0034c		 |$LN83@AdapterHan@7|
  0034c	00000000	 DCD         |??_C@_1IK@CDPKPLGB@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAf?$AAl?$AAa@|
  00350		 |$LN84@AdapterHan@7|
  00350	00000000	 DCD         |??_C@_1EK@DJBFBLFB@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAP?$AAi?$AAn@|
  00354		 |$LN85@AdapterHan@7|
  00354	00000000	 DCD         |??_C@_1GE@GBIGGIOD@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAV?$AAi?$AAd?$AAe?$AAo@|
  00358		 |$LN86@AdapterHan@7|
  00358	00000000	 DCD         |dpCurSettings|
  0035c		 |$M36345|

			 ENDP  ; |?AdapterHandleVideoControlRequests@CCameraDevice@@QAAKPAEK0KPAK@Z|, CCameraDevice::AdapterHandleVideoControlRequests

	EXPORT	|?AdapterHandlePowerRequests@CCameraDevice@@QAAKKPAEK0KPAK@Z| ; CCameraDevice::AdapterHandlePowerRequests
	EXPORT	|??_C@_1EA@CKDEKDAE@?$AAC?$AAA?$AAM?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAC?$AAA?$AAP?$AAA?$AAB?$AAI?$AAL?$AAI?$AAT?$AAI?$AAE?$AAS?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@LFODONCO@?$AAC?$AAA?$AAM?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAG?$AAE?$AAT?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@LKPNDLKN@?$AAC?$AAA?$AAM?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAE?$AAT?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DK@JEALOGGK@?$AAC?$AAA?$AAM?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAE?$AAX?$AAT?$AA_?$AAR?$AAE?$AAS?$AAT?$AAO?$AAR?$AAE?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@HJPKFBPE@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T36386| DCD	|$LN31@AdapterHan@8|
	DCD	0x40006d01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@CKDEKDAE@?$AAC?$AAA?$AAM?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAC?$AAA?$AAP?$AAA?$AAB?$AAI?$AAL?$AAI?$AAT?$AAI?$AAE?$AAS?$AA?$AN?$AA?6?$AA?$AA@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "O"
	DCB	0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_", 0x0, "P", 0x0, "O"
	DCB	0x0, "W", 0x0, "E", 0x0, "R", 0x0, "_", 0x0, "C", 0x0, "A"
	DCB	0x0, "P", 0x0, "A", 0x0, "B", 0x0, "I", 0x0, "L", 0x0, "I"
	DCB	0x0, "T", 0x0, "I", 0x0, "E", 0x0, "S", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@LFODONCO@?$AAC?$AAA?$AAM?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAG?$AAE?$AAT?$AA?$AN?$AA?6?$AA?$AA@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "O"
	DCB	0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_", 0x0, "P", 0x0, "O"
	DCB	0x0, "W", 0x0, "E", 0x0, "R", 0x0, "_", 0x0, "G", 0x0, "E"
	DCB	0x0, "T", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@LKPNDLKN@?$AAC?$AAA?$AAM?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAE?$AAT?$AA?$AN?$AA?6?$AA?$AA@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "O"
	DCB	0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_", 0x0, "P", 0x0, "O"
	DCB	0x0, "W", 0x0, "E", 0x0, "R", 0x0, "_", 0x0, "S", 0x0, "E"
	DCB	0x0, "T", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DK@JEALOGGK@?$AAC?$AAA?$AAM?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAE?$AAX?$AAT?$AA_?$AAR?$AAE?$AAS?$AAT?$AAO?$AAR?$AAE?$AA?$AN?$AA?6?$AA?$AA@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, ":", 0x0, " ", 0x0, "I", 0x0, "O"
	DCB	0x0, "C", 0x0, "T", 0x0, "L", 0x0, "_", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "T", 0x0, "E", 0x0, "X", 0x0, "T", 0x0, "_"
	DCB	0x0, "R", 0x0, "E", 0x0, "S", 0x0, "T", 0x0, "O", 0x0, "R"
	DCB	0x0, "E", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@HJPKFBPE@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "H", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, "l", 0x0, "e", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e"
	DCB	0x0, "r", 0x0, "R", 0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e"
	DCB	0x0, "s", 0x0, "t", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?AdapterHandlePowerRequests@CCameraDevice@@QAAKKPAEK0KPAK@Z| PROC ; CCameraDevice::AdapterHandlePowerRequests

; 1332 : {

  00000		 |$LN31@AdapterHan@8|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M36383|
  00004	e1a06001	 mov         r6, r1
  00008	e1a05000	 mov         r5, r0

; 1333 :     UNREFERENCED_PARAMETER(InBufLen);
; 1334 :     UNREFERENCED_PARAMETER(pInBuf);
; 1335 : 
; 1336 :     DWORD dwErr = ERROR_INVALID_PARAMETER;
; 1337 : 
; 1338 :     DEBUGMSG( ZONE_IOCTL, ( _T("CAM_IOControl(%08x): HandlePowerRequests\r\n"), this ) );

  0000c	e59f719c	 ldr         r7, [pc, #0x19C]
  00010	e3a04057	 mov         r4, #0x57
  00014	e5972440	 ldr         r2, [r7, #0x440]
  00018	e3120010	 tst         r2, #0x10
  0001c	0a000003	 beq         |$LN19@AdapterHan@8|
  00020	e59f0184	 ldr         r0, [pc, #0x184]
  00024	e1a01005	 mov         r1, r5
  00028	eb000000	 bl          NKDbgPrintfW
  0002c	e5972440	 ldr         r2, [r7, #0x440]
  00030		 |$LN19@AdapterHan@8|
  00030	e3a03832	 mov         r3, #0x32, 16

; 1339 : 
; 1340 :     switch (dwCode)

  00034	e3833a01	 orr         r3, r3, #1, 20
  00038	e1560003	 cmp         r6, r3
  0003c	0a00003f	 beq         |$LN14@AdapterHan@8|
  00040	e59f3160	 ldr         r3, [pc, #0x160]
  00044	e1560003	 cmp         r6, r3
  00048	0a00002b	 beq         |$LN5@AdapterHan@8|
  0004c	e59f3150	 ldr         r3, [pc, #0x150]
  00050	e1560003	 cmp         r6, r3
  00054	0a000007	 beq         |$LN11@AdapterHan@8|
  00058	e59f3140	 ldr         r3, [pc, #0x140]
  0005c	e1560003	 cmp         r6, r3
  00060	1a000047	 bne         |$LN13@AdapterHan@8|

; 1394 : 
; 1395 :     case IOCTL_CONTEXT_RESTORE:
; 1396 :         DEBUGMSG(ZONE_IOCTL, (TEXT("CAM: IOCTL_CONTEXT_RESTORE\r\n")));

  00064	e3120010	 tst         r2, #0x10
  00068	0a000044	 beq         |$LN12@AdapterHan@8|
  0006c	e59f0128	 ldr         r0, [pc, #0x128]
  00070	eb000000	 bl          NKDbgPrintfW

; 1397 : 
; 1398 :         // Nothing to do here
; 1399 : 
; 1400 :         dwErr = ERROR_SUCCESS;
; 1401 :         break;

  00074	ea000041	 b           |$LN12@AdapterHan@8|
  00078		 |$LN11@AdapterHan@8|

; 1356 :         }
; 1357 :         break;
; 1358 : 
; 1359 :     case IOCTL_POWER_SET:
; 1360 : 
; 1361 :         DEBUGMSG(ZONE_IOCTL, (TEXT("CAM: IOCTL_POWER_SET\r\n")));

  00078	e3120010	 tst         r2, #0x10
  0007c	159f0114	 ldrne       r0, [pc, #0x114]
  00080	1b000000	 blne        NKDbgPrintfW

; 1362 :         if ( pOutBuf && OutBufLen >= sizeof(CEDEVICE_POWER_STATE) )

  00084	e59d2014	 ldr         r2, [sp, #0x14]
  00088	e3520000	 cmp         r2, #0
  0008c	0a00003c	 beq         |$LN13@AdapterHan@8|
  00090	e59d3018	 ldr         r3, [sp, #0x18]
  00094	e3530004	 cmp         r3, #4
  00098	3a000039	 bcc         |$LN13@AdapterHan@8|

; 1363 :         {
; 1364 :             PCEDEVICE_POWER_STATE pState = (PCEDEVICE_POWER_STATE) pOutBuf;
; 1365 :             CEDEVICE_POWER_STATE CurrentPowerState = m_PowerState;

  0009c	e5951020	 ldr         r1, [r5, #0x20]

; 1366 : 
; 1367 :             // driver only supports D0 (on) and D4 (off), D0/1/2 = ON, D3/4 = OFF
; 1368 :             m_PowerState = *pState;

  000a0	e5923000	 ldr         r3, [r2]

; 1369 :             if (CurrentPowerState <= D2 && *pState >= D3)

  000a4	e3510002	 cmp         r1, #2
  000a8	e5853020	 str         r3, [r5, #0x20]
  000ac	ca000005	 bgt         |$LN9@AdapterHan@8|
  000b0	e5923000	 ldr         r3, [r2]
  000b4	e3530003	 cmp         r3, #3
  000b8	ba000002	 blt         |$LN9@AdapterHan@8|

; 1370 : 			    PowerDown();

  000bc	e1a00005	 mov         r0, r5
  000c0	eb000000	 bl          |?PowerDown@CCameraDevice@@QAAXXZ|
  000c4	ea000005	 b           |$LN7@AdapterHan@8|
  000c8		 |$LN9@AdapterHan@8|

; 1371 : 			else if (CurrentPowerState >= D3 && *pState <= D2)

  000c8	e3510003	 cmp         r1, #3
  000cc	ba000003	 blt         |$LN7@AdapterHan@8|
  000d0	e5923000	 ldr         r3, [r2]
  000d4	e3530002	 cmp         r3, #2

; 1372 : 			    PowerUp();

  000d8	d1a00005	 movle       r0, r5
  000dc	db000000	 blle        |?PowerUp@CCameraDevice@@QAAXXZ|
  000e0		 |$LN7@AdapterHan@8|

; 1373 : 
; 1374 :             dwErr = ERROR_SUCCESS;
; 1375 : 
; 1376 :             if(pdwBytesTransferred)

  000e0	e59d301c	 ldr         r3, [sp, #0x1C]
  000e4	e3a04000	 mov         r4, #0
  000e8	e3530000	 cmp         r3, #0
  000ec	0a000024	 beq         |$LN13@AdapterHan@8|

; 1377 :                 *pdwBytesTransferred = sizeof(CEDEVICE_POWER_STATE);

  000f0	e3a02004	 mov         r2, #4
  000f4	e5832000	 str         r2, [r3]

; 1378 :         }
; 1379 :         break;

  000f8	ea000021	 b           |$LN13@AdapterHan@8|
  000fc		 |$LN5@AdapterHan@8|

; 1380 : 
; 1381 :     case IOCTL_POWER_GET:
; 1382 : 
; 1383 :         DEBUGMSG(ZONE_IOCTL, (TEXT("CAM: IOCTL_POWER_GET\r\n")));

  000fc	e3120010	 tst         r2, #0x10
  00100	159f008c	 ldrne       r0, [pc, #0x8C]
  00104	1b000000	 blne        NKDbgPrintfW

; 1384 :         if ( pOutBuf && OutBufLen >= sizeof(CEDEVICE_POWER_STATE) )

  00108	e59d1014	 ldr         r1, [sp, #0x14]
  0010c	e3510000	 cmp         r1, #0
  00110	0a00001b	 beq         |$LN13@AdapterHan@8|
  00114	e59d3018	 ldr         r3, [sp, #0x18]
  00118	e3530004	 cmp         r3, #4
  0011c	3a000018	 bcc         |$LN13@AdapterHan@8|

; 1385 :         {
; 1386 :             *((PCEDEVICE_POWER_STATE) pOutBuf) = m_PowerState;

  00120	e5953020	 ldr         r3, [r5, #0x20]

; 1387 :             if(pdwBytesTransferred)

  00124	e59d201c	 ldr         r2, [sp, #0x1C]
  00128	e5813000	 str         r3, [r1]
  0012c	e3520000	 cmp         r2, #0
  00130	0a000012	 beq         |$LN12@AdapterHan@8|

; 1388 :             {
; 1389 :                 *pdwBytesTransferred = sizeof(CEDEVICE_POWER_STATE);

  00134	e3a03004	 mov         r3, #4
  00138	e5823000	 str         r3, [r2]

; 1390 :             }
; 1391 :             dwErr = ERROR_SUCCESS;
; 1392 :         }
; 1393 :         break;

  0013c	ea00000f	 b           |$LN12@AdapterHan@8|
  00140		 |$LN14@AdapterHan@8|

; 1341 :     {
; 1342 :     //
; 1343 :     // Power Management Support.
; 1344 :     //
; 1345 :     case IOCTL_POWER_CAPABILITIES:
; 1346 : 
; 1347 :         DEBUGMSG(ZONE_IOCTL, (TEXT("CAM: IOCTL_POWER_CAPABILITIES\r\n")));

  00140	e3120010	 tst         r2, #0x10
  00144	159f0044	 ldrne       r0, [pc, #0x44]
  00148	1b000000	 blne        NKDbgPrintfW

; 1348 :         if ( pOutBuf && OutBufLen >= sizeof(POWER_CAPABILITIES) )

  0014c	e59d0014	 ldr         r0, [sp, #0x14]
  00150	e3500000	 cmp         r0, #0
  00154	0a00000a	 beq         |$LN13@AdapterHan@8|
  00158	e59d3018	 ldr         r3, [sp, #0x18]
  0015c	e3530030	 cmp         r3, #0x30
  00160	3a000007	 bcc         |$LN13@AdapterHan@8|

; 1349 :         {
; 1350 :              memcpy(pOutBuf, &m_AdapterInfo.PowerCaps, sizeof(POWER_CAPABILITIES));

  00164	e2851034	 add         r1, r5, #0x34
  00168	e3a02030	 mov         r2, #0x30
  0016c	eb000000	 bl          memcpy

; 1351 :              if(pdwBytesTransferred)

  00170	e59d301c	 ldr         r3, [sp, #0x1C]
  00174	e3530000	 cmp         r3, #0

; 1352 :              {
; 1353 :                  *pdwBytesTransferred = sizeof(POWER_CAPABILITIES);

  00178	13a02030	 movne       r2, #0x30
  0017c	15832000	 strne       r2, [r3]
  00180		 |$LN12@AdapterHan@8|

; 1354 :              }
; 1355 :              dwErr = ERROR_SUCCESS;

  00180	e3a04000	 mov         r4, #0
  00184		 |$LN13@AdapterHan@8|

; 1402 : 
; 1403 :     default:
; 1404 :         break;
; 1405 :     }
; 1406 : 
; 1407 :     return dwErr;
; 1408 : }

  00184	e1a00004	 mov         r0, r4
  00188	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  0018c	e12fff1e	 bx          lr
  00190		 |$LN32@AdapterHan@8|
  00190		 |$LN33@AdapterHan@8|
  00190	00000000	 DCD         |??_C@_1EA@CKDEKDAE@?$AAC?$AAA?$AAM?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAC?$AAA?$AAP?$AAA?$AAB?$AAI?$AAL?$AAI?$AAT?$AAI?$AAE?$AAS?$AA?$AN?$AA?6?$AA?$AA@|
  00194		 |$LN34@AdapterHan@8|
  00194	00000000	 DCD         |??_C@_1CO@LFODONCO@?$AAC?$AAA?$AAM?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAG?$AAE?$AAT?$AA?$AN?$AA?6?$AA?$AA@|
  00198		 |$LN35@AdapterHan@8|
  00198	00000000	 DCD         |??_C@_1CO@LKPNDLKN@?$AAC?$AAA?$AAM?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAP?$AAO?$AAW?$AAE?$AAR?$AA_?$AAS?$AAE?$AAT?$AA?$AN?$AA?6?$AA?$AA@|
  0019c		 |$LN36@AdapterHan@8|
  0019c	00000000	 DCD         |??_C@_1DK@JEALOGGK@?$AAC?$AAA?$AAM?$AA?3?$AA?5?$AAI?$AAO?$AAC?$AAT?$AAL?$AA_?$AAC?$AAO?$AAN?$AAT?$AAE?$AAX?$AAT?$AA_?$AAR?$AAE?$AAS?$AAT?$AAO?$AAR?$AAE?$AA?$AN?$AA?6?$AA?$AA@|
  001a0		 |$LN37@AdapterHan@8|
  001a0	80038140	 DCD         0x80038140
  001a4		 |$LN38@AdapterHan@8|
  001a4	00321008	 DCD         0x321008
  001a8		 |$LN39@AdapterHan@8|
  001a8	00321004	 DCD         0x321004
  001ac		 |$LN40@AdapterHan@8|
  001ac	00000000	 DCD         |??_C@_1FG@HJPKFBPE@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAP?$AAo?$AAw?$AAe?$AAr@|
  001b0		 |$LN41@AdapterHan@8|
  001b0	00000000	 DCD         |dpCurSettings|
  001b4		 |$M36384|

			 ENDP  ; |?AdapterHandlePowerRequests@CCameraDevice@@QAAKKPAEK0KPAK@Z|, CCameraDevice::AdapterHandlePowerRequests

	EXPORT	|?Initialize@CCameraDevice@@QAA_NPAX@Z|	; CCameraDevice::Initialize
	EXPORT	|??_C@_1IC@GCFPBFDC@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@OFKGBAHF@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAA?$AAc?$AAt?$AAi?$AAv?$AAa?$AAt?$AAe?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAo?$AAn?$AA?5?$AAP?$AAi?$AAn?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FM@OAJHJHEK@?$AAS?$AAo?$AAf?$AAt?$AAw?$AAa?$AAr?$AAe?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?2?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAX?$AA?2?$AAD?$AAi?$AAr?$AAe?$AAc@| [ DATA ] ; `string'
	IMPORT	|??2@YAPAXI@Z|				; operator new
	IMPORT	|PDD_Init|
	IMPORT	|ActivateDeviceEx|

  00000			 AREA	 |.pdata|, PDATA
|$T36415| DCD	|$LN19@Initialize|
	DCD	0x40007901

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IC@GCFPBFDC@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, "_", 0x0, "I", 0x0, "O", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o", 0x0, "l"
	DCB	0x0, "(", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "x", 0x0, ")"
	DCB	0x0, ":", 0x0, " ", 0x0, "F", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "t", 0x0, "r", 0x0, "i", 0x0, "e"
	DCB	0x0, "v", 0x0, "e", 0x0, " ", 0x0, "s", 0x0, "u", 0x0, "b"
	DCB	0x0, "-", 0x0, "d", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c"
	DCB	0x0, "e", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "f", 0x0, "o"
	DCB	0x0, "r", 0x0, "m", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o"
	DCB	0x0, "n", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@OFKGBAHF@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAA?$AAc?$AAt?$AAi?$AAv?$AAa?$AAt?$AAe?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAo?$AAn?$AA?5?$AAP?$AAi?$AAn?$AA?5@| DCB "C"
	DCB	0x0, "A", 0x0, "M", 0x0, "_", 0x0, "I", 0x0, "n", 0x0, "i"
	DCB	0x0, "t", 0x0, ":", 0x0, " ", 0x0, "A", 0x0, "c", 0x0, "t"
	DCB	0x0, "i", 0x0, "v", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "D"
	DCB	0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e", 0x0, " "
	DCB	0x0, "o", 0x0, "n", 0x0, " ", 0x0, "P", 0x0, "i", 0x0, "n"
	DCB	0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@OAJHJHEK@?$AAS?$AAo?$AAf?$AAt?$AAw?$AAa?$AAr?$AAe?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?2?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAX?$AA?2?$AAD?$AAi?$AAr?$AAe?$AAc@| DCB "S"
	DCB	0x0, "o", 0x0, "f", 0x0, "t", 0x0, "w", 0x0, "a", 0x0, "r"
	DCB	0x0, "e", 0x0, "\\", 0x0, "M", 0x0, "i", 0x0, "c", 0x0, "r"
	DCB	0x0, "o", 0x0, "s", 0x0, "o", 0x0, "f", 0x0, "t", 0x0, "\\"
	DCB	0x0, "D", 0x0, "i", 0x0, "r", 0x0, "e", 0x0, "c", 0x0, "t"
	DCB	0x0, "X", 0x0, "\\", 0x0, "D", 0x0, "i", 0x0, "r", 0x0, "e"
	DCB	0x0, "c", 0x0, "t", 0x0, "S", 0x0, "h", 0x0, "o", 0x0, "w"
	DCB	0x0, "\\", 0x0, "C", 0x0, "a", 0x0, "p", 0x0, "t", 0x0, "u"
	DCB	0x0, "r", 0x0, "e", 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?Initialize@CCameraDevice@@QAA_NPAX@Z| PROC ; CCameraDevice::Initialize

; 87   : {

  00000		 |$LN19@Initialize|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M36412|
  00004	e1a05001	 mov         r5, r1
  00008	e1a04000	 mov         r4, r0

; 88   :     DWORD dwRet = ERROR_SUCCESS;
; 89   :     m_hStream = ActivateDeviceEx( PIN_REG_PATH, NULL, 0, reinterpret_cast<LPVOID>( this ) );

  0000c	e59f01cc	 ldr         r0, [pc, #0x1CC]
  00010	e1a03004	 mov         r3, r4
  00014	e3a02000	 mov         r2, #0
  00018	e3a01000	 mov         r1, #0
  0001c	eb000000	 bl          ActivateDeviceEx
  00020	e3500000	 cmp         r0, #0
  00024	e5840014	 str         r0, [r4, #0x14]

; 90   : 
; 91   :     if ( NULL == m_hStream )

  00028	1a000007	 bne         |$LN8@Initialize|

; 92   :     {
; 93   :         DEBUGMSG( ZONE_INIT|ZONE_ERROR, ( _T("CAM_Init: ActivateDevice on Pin failed\r\n") ) );

  0002c	e59f31a4	 ldr         r3, [pc, #0x1A4]
  00030	e5933440	 ldr         r3, [r3, #0x440]
  00034	e3130005	 tst         r3, #5
  00038	159f019c	 ldrne       r0, [pc, #0x19C]
  0003c	1b000000	 blne        NKDbgPrintfW
  00040		 |$LN5@Initialize|

; 121  :     {
; 122  :         return false;

  00040	e3a00000	 mov         r0, #0

; 151  : }

  00044	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00048	e12fff1e	 bx          lr
  0004c		 |$LN8@Initialize|

; 94   :         return false;
; 95   :     }
; 96   : 
; 97   :     m_PDDFuncTbl.dwSize = sizeof( PDDFUNCTBL );

  0004c	e3a03050	 mov         r3, #0x50

; 98   :     m_PDDContext = PDD_Init( context, &m_PDDFuncTbl );

  00050	e1a01004	 mov         r1, r4
  00054	e5a132a8	 str         r3, [r1, #0x2A8]!
  00058	e1a00005	 mov         r0, r5
  0005c	eb000000	 bl          PDD_Init
  00060	e3500000	 cmp         r0, #0
  00064	e58402a4	 str         r0, [r4, #0x2A4]

; 99   : 
; 100  :     if( m_PDDContext == NULL )
; 101  :     {
; 102  :         return false;

  00068	0afffff4	 beq         |$LN5@Initialize|

; 103  :     }       
; 104  : 
; 105  :     if( m_PDDFuncTbl.dwSize < sizeof( PDDFUNCTBL ) ||
; 106  :         NULL == m_PDDFuncTbl.PDD_Init || 
; 107  :         NULL == m_PDDFuncTbl.PDD_DeInit ||
; 108  :         NULL == m_PDDFuncTbl.PDD_GetAdapterInfo ||
; 109  :         NULL == m_PDDFuncTbl.PDD_HandleVidProcAmpChanges ||
; 110  :         NULL == m_PDDFuncTbl.PDD_HandleCamControlChanges ||
; 111  :         NULL == m_PDDFuncTbl.PDD_HandleVideoControlCapsChanges ||
; 112  :         NULL == m_PDDFuncTbl.PDD_SetPowerState ||
; 113  :         NULL == m_PDDFuncTbl.PDD_HandleAdapterCustomProperties ||
; 114  :         NULL == m_PDDFuncTbl.PDD_InitSensorMode ||
; 115  :         NULL == m_PDDFuncTbl.PDD_DeInitSensorMode ||
; 116  :         NULL == m_PDDFuncTbl.PDD_SetSensorState ||
; 117  :         NULL == m_PDDFuncTbl.PDD_GetSensorModeInfo ||
; 118  :         NULL == m_PDDFuncTbl.PDD_SetSensorModeFormat ||
; 119  :         NULL == m_PDDFuncTbl.PDD_FillBuffer ||
; 120  :         NULL == m_PDDFuncTbl.PDD_HandleModeCustomProperties )

  0006c	e59432a8	 ldr         r3, [r4, #0x2A8]
  00070	e3530050	 cmp         r3, #0x50
  00074	3afffff1	 bcc         |$LN5@Initialize|
  00078	e59432ac	 ldr         r3, [r4, #0x2AC]
  0007c	e3530000	 cmp         r3, #0
  00080	0affffee	 beq         |$LN5@Initialize|
  00084	e59432b0	 ldr         r3, [r4, #0x2B0]
  00088	e3530000	 cmp         r3, #0
  0008c	0affffeb	 beq         |$LN5@Initialize|
  00090	e59432b4	 ldr         r3, [r4, #0x2B4]
  00094	e1b02003	 movs        r2, r3
  00098	0affffe8	 beq         |$LN5@Initialize|
  0009c	e59432b8	 ldr         r3, [r4, #0x2B8]
  000a0	e3530000	 cmp         r3, #0
  000a4	0affffe5	 beq         |$LN5@Initialize|
  000a8	e59432bc	 ldr         r3, [r4, #0x2BC]
  000ac	e3530000	 cmp         r3, #0
  000b0	0affffe2	 beq         |$LN5@Initialize|
  000b4	e59432c0	 ldr         r3, [r4, #0x2C0]
  000b8	e3530000	 cmp         r3, #0
  000bc	0affffdf	 beq         |$LN5@Initialize|
  000c0	e59432c4	 ldr         r3, [r4, #0x2C4]
  000c4	e3530000	 cmp         r3, #0
  000c8	0affffdc	 beq         |$LN5@Initialize|
  000cc	e59432c8	 ldr         r3, [r4, #0x2C8]
  000d0	e3530000	 cmp         r3, #0
  000d4	0affffd9	 beq         |$LN5@Initialize|
  000d8	e59432cc	 ldr         r3, [r4, #0x2CC]
  000dc	e3530000	 cmp         r3, #0
  000e0	0affffd6	 beq         |$LN5@Initialize|
  000e4	e59432d0	 ldr         r3, [r4, #0x2D0]
  000e8	e3530000	 cmp         r3, #0
  000ec	0affffd3	 beq         |$LN5@Initialize|
  000f0	e59432d4	 ldr         r3, [r4, #0x2D4]
  000f4	e3530000	 cmp         r3, #0
  000f8	0affffd0	 beq         |$LN5@Initialize|
  000fc	e59432d8	 ldr         r3, [r4, #0x2D8]
  00100	e3530000	 cmp         r3, #0
  00104	0affffcd	 beq         |$LN5@Initialize|
  00108	e59432dc	 ldr         r3, [r4, #0x2DC]
  0010c	e3530000	 cmp         r3, #0
  00110	0affffca	 beq         |$LN5@Initialize|
  00114	e59432f0	 ldr         r3, [r4, #0x2F0]
  00118	e3530000	 cmp         r3, #0
  0011c	0affffc7	 beq         |$LN5@Initialize|
  00120	e59432f4	 ldr         r3, [r4, #0x2F4]
  00124	e3530000	 cmp         r3, #0
  00128	0affffc4	 beq         |$LN5@Initialize|

; 123  :     }
; 124  : 
; 125  :     dwRet = m_PDDFuncTbl.PDD_GetAdapterInfo( m_PDDContext, &m_AdapterInfo );

  0012c	e2841028	 add         r1, r4, #0x28
  00130	e1a0e00f	 mov         lr, pc
  00134	e12fff12	 bx          r2
  00138	e3500000	 cmp         r0, #0

; 126  : 
; 127  :     if( ERROR_SUCCESS != dwRet || DRIVER_VERSION > m_AdapterInfo.ulVersionID || DRIVER_VERSION_2 < m_AdapterInfo.ulVersionID )

  0013c	1affffbf	 bne         |$LN5@Initialize|
  00140	e5943030	 ldr         r3, [r4, #0x30]
  00144	e3530001	 cmp         r3, #1
  00148	3affffbc	 bcc         |$LN5@Initialize|
  0014c	e3530002	 cmp         r3, #2
  00150	8affffba	 bhi         |$LN5@Initialize|

; 128  :     {
; 129  :         return false;
; 130  :     }
; 131  : 
; 132  :     m_dwVersion = m_AdapterInfo.ulVersionID;
; 133  : 
; 134  :     m_pStrmInstances = new STREAM_INSTANCES[m_AdapterInfo.ulCTypes];

  00154	e594202c	 ldr         r2, [r4, #0x2C]
  00158	e584301c	 str         r3, [r4, #0x1C]
  0015c	e372037e	 cmn         r2, #0x7E, 6
  00160	91a00282	 movls       r0, r2, lsl #5
  00164	83e00000	 mvnhi       r0, #0
  00168	eb000000	 bl          |??2@YAPAXI@Z|
  0016c	e3500000	 cmp         r0, #0
  00170	e5840024	 str         r0, [r4, #0x24]

; 135  :     if( NULL == m_pStrmInstances )
; 136  :     {
; 137  :         return false;

  00174	0affffb1	 beq         |$LN5@Initialize|

; 138  :     }
; 139  :     memset( m_pStrmInstances, 0x0, sizeof ( STREAM_INSTANCES ) * m_AdapterInfo.ulCTypes );

  00178	e594302c	 ldr         r3, [r4, #0x2C]
  0017c	e3a01000	 mov         r1, #0
  00180	e1a02283	 mov         r2, r3, lsl #5
  00184	eb000000	 bl          memset

; 140  : 
; 141  :     
; 142  :     if( false == GetPDDPinInfo() )

  00188	e1a00004	 mov         r0, r4
  0018c	eb000000	 bl          |?GetPDDPinInfo@CCameraDevice@@AAA_NXZ|
  00190	e3500000	 cmp         r0, #0
  00194	1a00000b	 bne         |$LN1@Initialize|

; 143  :     {
; 144  :         delete m_pStrmInstances;

  00198	e5940024	 ldr         r0, [r4, #0x24]
  0019c	eb000000	 bl          |??3@YAXPAX@Z|

; 145  :         m_pStrmInstances = NULL;
; 146  :         DEBUGMSG(ZONE_IOCTL|ZONE_ERROR, (_T("CAM_IOControl(%08x): Failed to retrieve sub-device information\r\n"), this)) ;

  001a0	e59f3030	 ldr         r3, [pc, #0x30]
  001a4	e3a02000	 mov         r2, #0
  001a8	e5842024	 str         r2, [r4, #0x24]
  001ac	e5933440	 ldr         r3, [r3, #0x440]
  001b0	e3130011	 tst         r3, #0x11
  001b4	0affffa1	 beq         |$LN5@Initialize|
  001b8	e59f0014	 ldr         r0, [pc, #0x14]
  001bc	e1a01004	 mov         r1, r4
  001c0	eb000000	 bl          NKDbgPrintfW

; 147  :         return false ;

  001c4	eaffff9d	 b           |$LN5@Initialize|
  001c8		 |$LN1@Initialize|

; 148  :     }
; 149  : 
; 150  :     return true;

  001c8	e3a00001	 mov         r0, #1

; 151  : }

  001cc	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  001d0	e12fff1e	 bx          lr
  001d4		 |$LN20@Initialize|
  001d4		 |$LN21@Initialize|
  001d4	00000000	 DCD         |??_C@_1IC@GCFPBFDC@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAO?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AA?$CF?$AA0?$AA8?$AAx?$AA?$CJ?$AA?3?$AA?5?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAr@|
  001d8		 |$LN22@Initialize|
  001d8	00000000	 DCD         |dpCurSettings|
  001dc		 |$LN23@Initialize|
  001dc	00000000	 DCD         |??_C@_1FC@OFKGBAHF@?$AAC?$AAA?$AAM?$AA_?$AAI?$AAn?$AAi?$AAt?$AA?3?$AA?5?$AAA?$AAc?$AAt?$AAi?$AAv?$AAa?$AAt?$AAe?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?5?$AAo?$AAn?$AA?5?$AAP?$AAi?$AAn?$AA?5@|
  001e0		 |$LN24@Initialize|
  001e0	00000000	 DCD         |??_C@_1FM@OAJHJHEK@?$AAS?$AAo?$AAf?$AAt?$AAw?$AAa?$AAr?$AAe?$AA?2?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?2?$AAD?$AAi?$AAr?$AAe?$AAc?$AAt?$AAX?$AA?2?$AAD?$AAi?$AAr?$AAe?$AAc@|
  001e4		 |$M36413|

			 ENDP  ; |?Initialize@CCameraDevice@@QAA_NPAX@Z|, CCameraDevice::Initialize

	END
