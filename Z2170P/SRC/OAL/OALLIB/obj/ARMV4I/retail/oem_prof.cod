; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\Z2170P\SRC\OAL\OALLIB\oem_prof.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.bss|, NOINIT
|_frequency| %	0x4
|_profilerEnabled| % 0x4
|_pProfTimer| %	0x4

  00000			 AREA	 |.data|, DATA
|_preScale| DCD	0xffffffff

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|OmapProfilerMark|

  0000c			 AREA	 |.bss|, NOINIT
|_rgMarkers| %	0x40
|_rgMarkers| %	0x40
; File c:\wince600\platform\z2170p\src\oal\oallib\oem_prof.c

  00000			 AREA	 |.pdata|, PDATA
|$T46955| DCD	|$LN13@OmapProfil|
	DCD	0x40001700
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OmapProfilerMark| PROC

; 43   : {

  00000		 |$LN13@OmapProfil|
  00000		 |$M46952|

; 44   :     // validate index
; 45   :     if (id >= PROFILE_COUNT) return;

  00000	e3500010	 cmp         r0, #0x10
  00004	2a000012	 bcs         |$LN5@OmapProfil|

; 46   :     
; 47   :     switch (id)

  00008	e3500001	 cmp         r0, #1
  0000c	9a00000a	 bls         |$LN4@OmapProfil|
  00010	e3500003	 cmp         r0, #3
  00014	9a000005	 bls         |$LN1@OmapProfil|
  00018	e3500009	 cmp         r0, #9

; 55   :                 }
; 56   :             break;
; 57   :         
; 58   :         // calculate latency 
; 59   :         case PROFILE_WAKEUP_LATENCY_CHIP_OFF:
; 60   :         case PROFILE_WAKEUP_LATENCY_CHIP_OSWR:
; 61   :         case PROFILE_WAKEUP_LATENCY_CHIP_CSWR:
; 62   :         case PROFILE_WAKEUP_LATENCY_CORE_CSWR:
; 63   :         case PROFILE_WAKEUP_LATENCY_CORE_INACTIVE:
; 64   :         case PROFILE_WAKEUP_LATENCY_MPU_INACTIVE:
; 65   :             _rgMarkers[id] = (DWORD)pv - _rgMarkers[PROFILE_WAKEUP_TIMER_MATCH];

  0001c	959f2034	 ldrls       r2, [pc, #0x34]
  00020	95923008	 ldrls       r3, [r2, #8]
  00024	90413003	 subls       r3, r1, r3
  00028	97823100	 strls       r3, [r2, +r0, lsl #2]

; 70   :             break;
; 71   :             
; 72   :         }
; 73   : }

  0002c	912fff1e	 bxls        lr
  00030		 |$LN1@OmapProfil|

; 66   :             break;
; 67   : 
; 68   :         default:
; 69   :             _rgMarkers[id] = (DWORD)pv;

  00030	e59f3020	 ldr         r3, [pc, #0x20]
  00034	e7831100	 str         r1, [r3, +r0, lsl #2]

; 70   :             break;
; 71   :             
; 72   :         }
; 73   : }

  00038	e12fff1e	 bx          lr
  0003c		 |$LN4@OmapProfil|

; 48   :         {
; 49   :         // core DVFS latency info
; 50   :         case PROFILE_CORE1_DVFS_BEGIN:
; 51   :         case PROFILE_CORE1_DVFS_END:
; 52   :             if (_profilerEnabled != FALSE)

  0003c	e59f2014	 ldr         r2, [pc, #0x14]
  00040	e5923044	 ldr         r3, [r2, #0x44]
  00044	e3530000	 cmp         r3, #0

; 53   :                 {
; 54   :                 _rgMarkers[id] = INREG32(&_pProfTimer->TCRR);

  00048	15923048	 ldrne       r3, [r2, #0x48]
  0004c	15933028	 ldrne       r3, [r3, #0x28]
  00050	17823100	 strne       r3, [r2, +r0, lsl #2]

; 66   :             break;
; 67   : 
; 68   :         default:
; 69   :             _rgMarkers[id] = (DWORD)pv;

  00054		 |$LN5@OmapProfil|

; 70   :             break;
; 71   :             
; 72   :         }
; 73   : }

  00054	e12fff1e	 bx          lr
  00058		 |$LN14@OmapProfil|
  00058		 |$LN15@OmapProfil|
  00058	00000000	 DCD         |_rgMarkers|
  0005c		 |$M46953|

			 ENDP  ; |OmapProfilerMark|

	EXPORT	|OmapProfilerStart|
	IMPORT	|PrcmDeviceEnableClocks|
	IMPORT	|GetAddressByDevice|
	IMPORT	|OALPAtoVA|
	IMPORT	|memset|

  00000			 AREA	 |.pdata|, PDATA
|$T46969| DCD	|$LN23@OmapProfil@2|
	DCD	0x40006101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OmapProfilerStart| PROC

; 84   : {

  00000		 |$LN23@OmapProfil@2|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M46966|

; 85   :     // initialize gptimer
; 86   :     OMAP_PRCM_CLOCK_CONTROL_PRM_REGS *pPrcmClkPRM;
; 87   : 
; 88   :     pPrcmClkPRM = OALPAtoUA(OMAP_PRCM_CLOCK_CONTROL_PRM_REGS_PA);

  00004	e59f0174	 ldr         r0, [pc, #0x174]
  00008	e3a01000	 mov         r1, #0
  0000c	eb000000	 bl          OALPAtoVA

; 89   :     if (_pProfTimer == NULL)

  00010	e59f4164	 ldr         r4, [pc, #0x164]
  00014	e1a06000	 mov         r6, r0
  00018	e3e07000	 mvn         r7, #0
  0001c	e5943048	 ldr         r3, [r4, #0x48]

; 90   :         {
; 91   :         // map gptimer and turn it on
; 92   :         _pProfTimer = OALPAtoUA(GetAddressByDevice(GPTIMER_DEVICE));

  00020	e3a00036	 mov         r0, #0x36
  00024	e3530000	 cmp         r3, #0
  00028	1a000038	 bne         |$LN15@OmapProfil@2|
  0002c	eb000000	 bl          GetAddressByDevice
  00030	e3a01000	 mov         r1, #0
  00034	eb000000	 bl          OALPAtoVA
  00038	e1a03000	 mov         r3, r0

; 93   :         PrcmDeviceEnableClocks(GPTIMER_DEVICE, TRUE);

  0003c	e3a00036	 mov         r0, #0x36
  00040	e3a01001	 mov         r1, #1
  00044	e5843048	 str         r3, [r4, #0x48]
  00048	eb000000	 bl          PrcmDeviceEnableClocks

; 94   : 
; 95   :         // configure performance timer
; 96   :         //---------------------------------------------------
; 97   :         // Soft reset GPTIMER and wait until finished
; 98   :         SETREG32(&_pProfTimer->TIOCP, SYSCONFIG_SOFTRESET);

  0004c	e5945048	 ldr         r5, [r4, #0x48]
  00050	e5953010	 ldr         r3, [r5, #0x10]
  00054	e3833002	 orr         r3, r3, #2
  00058	e5853010	 str         r3, [r5, #0x10]
  0005c		 |$LL14@OmapProfil@2|

; 99   :         while ((INREG32(&_pProfTimer->TISTAT) & GPTIMER_TISTAT_RESETDONE) == 0);

  0005c	e5953014	 ldr         r3, [r5, #0x14]
  00060	e3130001	 tst         r3, #1
  00064	0afffffc	 beq         |$LL14@OmapProfil@2|
  00068	e3a03c02	 mov         r3, #2, 24

; 100  :      
; 101  :         // Enable smart idle and autoidle
; 102  :         // Set clock activity - FCLK can be  switched off, 
; 103  :         // L4 interface clock is maintained during wkup.
; 104  :         OUTREG32(&_pProfTimer->TIOCP, 
; 105  :             SYSCONFIG_CLOCKACTIVITY_I_ON | SYSCONFIG_SMARTIDLE | 
; 106  :             SYSCONFIG_ENAWAKEUP | SYSCONFIG_AUTOIDLE
; 107  :             ); 

  0006c	e3833015	 orr         r3, r3, #0x15
  00070	e5853010	 str         r3, [r5, #0x10]

; 108  : 
; 109  :         // Select posted mode
; 110  :         SETREG32(&_pProfTimer->TSICR, GPTIMER_TSICR_POSTED);

  00074	e5953040	 ldr         r3, [r5, #0x40]

; 111  : 
; 112  :         // clear match register
; 113  :         OUTREG32(&_pProfTimer->TMAR, 0xFFFFFFFF);
; 114  :         
; 115  :         // clear interrupts
; 116  :         OUTREG32(&_pProfTimer->TISR, 0x00000000);

  00078	e3833004	 orr         r3, r3, #4
  0007c	e5853040	 str         r3, [r5, #0x40]
  00080	e3a03000	 mov         r3, #0
  00084	e5857038	 str         r7, [r5, #0x38]
  00088	e5853018	 str         r3, [r5, #0x18]

; 117  : 
; 118  :         // Set the load register value.
; 119  :         OUTREG32(&_pProfTimer->TLDR, 0x00000000);

  0008c	e585302c	 str         r3, [r5, #0x2C]

; 120  : 
; 121  :         // calculate 1 microsecond offset value and timer divisor
; 122  :         switch (INREG32(&pPrcmClkPRM->PRM_CLKSEL))

  00090	e5963040	 ldr         r3, [r6, #0x40]
  00094	e3530000	 cmp         r3, #0
  00098	0a000018	 beq         |$LN10@OmapProfil@2|
  0009c	e3530001	 cmp         r3, #1
  000a0	0a000013	 beq         |$LN9@OmapProfil@2|
  000a4	e3530002	 cmp         r3, #2
  000a8	0a00000d	 beq         |$LN8@OmapProfil@2|
  000ac	e3530003	 cmp         r3, #3
  000b0	0a000008	 beq         |$LN7@OmapProfil@2|
  000b4	e3530004	 cmp         r3, #4

; 147  :                 break;
; 148  : 
; 149  :             default:
; 150  :                 _frequency = 0;

  000b8	13a03000	 movne       r3, #0
  000bc	15843040	 strne       r3, [r4, #0x40]

; 178  : }

  000c0	18bd40f0	 ldmneia     sp!, {r4 - r7, lr}
  000c4	112fff1e	 bxne        lr

; 151  :                 return;

  000c8	e3a03792	 mov         r3, #0x92, 14

; 143  : 
; 144  :             case 4:
; 145  :                 // 38.4mhz
; 146  :                 _frequency = 38400000;          // 38,400,000 mhz

  000cc	e3833a1f	 orr         r3, r3, #0x1F, 20

; 123  :             {
; 124  :             case 0:
; 125  :                 // 12mhz
; 126  :                 _frequency = 12000000;          // 12,000,000 mhz

  000d0	e5843040	 str         r3, [r4, #0x40]

; 152  :             }                
; 153  :         }
; 154  :     else

  000d4	ea000010	 b           |$LN4@OmapProfil@2|
  000d8		 |$LN7@OmapProfil@2|

; 133  : 
; 134  :             case 2:
; 135  :                 // 19.2mhz
; 136  :                 _frequency = 19200000;          // 19,200,000 mhz
; 137  :                 break;
; 138  :                 
; 139  :             case 3:
; 140  :                 // 26mhz
; 141  :                 _frequency = 26000000;          // 26,000,000 mhz

  000d8	e59f3098	 ldr         r3, [pc, #0x98]
  000dc	e5843040	 str         r3, [r4, #0x40]

; 152  :             }                
; 153  :         }
; 154  :     else

  000e0	ea00000d	 b           |$LN4@OmapProfil@2|
  000e4		 |$LN8@OmapProfil@2|

; 142  :                 break;

  000e4	e3a03749	 mov         r3, #0x49, 14
  000e8	e3833b3e	 orr         r3, r3, #0x3E, 22
  000ec	e5843040	 str         r3, [r4, #0x40]

; 152  :             }                
; 153  :         }
; 154  :     else

  000f0	ea000009	 b           |$LN4@OmapProfil@2|
  000f4		 |$LN9@OmapProfil@2|

; 127  :                 break;
; 128  : 
; 129  :             case 1:
; 130  :                 // 13mhz
; 131  :                 _frequency = 13000000;          // 13,000,000 mhz

  000f4	e59f3078	 ldr         r3, [pc, #0x78]
  000f8	e5843040	 str         r3, [r4, #0x40]

; 152  :             }                
; 153  :         }
; 154  :     else

  000fc	ea000006	 b           |$LN4@OmapProfil@2|
  00100		 |$LN10@OmapProfil@2|

; 132  :                 break;

  00100	e3a038b7	 mov         r3, #0xB7, 16
  00104	e3833c1b	 orr         r3, r3, #0x1B, 24
  00108	e5843040	 str         r3, [r4, #0x40]

; 152  :             }                
; 153  :         }
; 154  :     else

  0010c	ea000002	 b           |$LN4@OmapProfil@2|
  00110		 |$LN15@OmapProfil@2|

; 155  :         {
; 156  :         PrcmDeviceEnableClocks(GPTIMER_DEVICE, TRUE);

  00110	e3a01001	 mov         r1, #1
  00114	eb000000	 bl          PrcmDeviceEnableClocks
  00118	e5945048	 ldr         r5, [r4, #0x48]
  0011c		 |$LN4@OmapProfil@2|

; 157  :         }
; 158  : 
; 159  :     // set prescaler
; 160  :     if (_preScale != -1)

  0011c	e59f304c	 ldr         r3, [pc, #0x4C]

; 161  :         {
; 162  :         OUTREG32(&_pProfTimer->TCLR, 
; 163  :             GPTIMER_TLCR_PRE | _preScale << GPTIMER_TLCR_PTV_SHIFT
; 164  :             );
; 165  :         }
; 166  : 
; 167  :     // clear all markers
; 168  :     memset(_rgMarkers, 0, sizeof(DWORD) * PROFILE_COUNT);

  00120	e3a02040	 mov         r2, #0x40
  00124	e3a01000	 mov         r1, #0
  00128	e5933000	 ldr         r3, [r3]
  0012c	e1a00004	 mov         r0, r4
  00130	e3730001	 cmn         r3, #1
  00134	13833008	 orrne       r3, r3, #8
  00138	11a03103	 movne       r3, r3, lsl #2
  0013c	15853024	 strne       r3, [r5, #0x24]
  00140	eb000000	 bl          memset

; 169  : 
; 170  :     // Trigger a counter reload by writing    
; 171  :     OUTREG32(&_pProfTimer->TTGR, 0xFFFFFFFF);

  00144	e5857030	 str         r7, [r5, #0x30]

; 172  :     
; 173  :     //  Start the timer.  Also set for auto reload
; 174  :     SETREG32(&_pProfTimer->TCLR, GPTIMER_TCLR_ST);

  00148	e5953024	 ldr         r3, [r5, #0x24]
  0014c	e3833001	 orr         r3, r3, #1
  00150	e5853024	 str         r3, [r5, #0x24]
  00154		 |$LL2@OmapProfil@2|

; 175  :     while ((INREG32(&_pProfTimer->TWPS) & GPTIMER_TWPS_TCLR) != 0);

  00154	e5953034	 ldr         r3, [r5, #0x34]
  00158	e3130001	 tst         r3, #1
  0015c	1afffffc	 bne         |$LL2@OmapProfil@2|

; 176  :         
; 177  :     _profilerEnabled = TRUE;

  00160	e3a03001	 mov         r3, #1
  00164	e5843044	 str         r3, [r4, #0x44]

; 178  : }

  00168	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  0016c	e12fff1e	 bx          lr
  00170		 |$LN24@OmapProfil@2|
  00170		 |$LN25@OmapProfil@2|
  00170	00000000	 DCD         |_preScale|
  00174		 |$LN26@OmapProfil@2|
  00174	00c65d40	 DCD         0xc65d40
  00178		 |$LN27@OmapProfil@2|
  00178	018cba80	 DCD         0x18cba80
  0017c		 |$LN28@OmapProfil@2|
  0017c	00000000	 DCD         |_rgMarkers|
  00180		 |$LN29@OmapProfil@2|
  00180	48306d00	 DCD         0x48306d00
  00184		 |$M46967|

			 ENDP  ; |OmapProfilerStart|

	EXPORT	|OmapProfilerStop|

  00000			 AREA	 |.pdata|, PDATA
|$T46983| DCD	|$LN8@OmapProfil@3|
	DCD	0x40001101
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OmapProfilerStop| PROC

; 189  : {

  00000		 |$LN8@OmapProfil@3|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M46980|

; 190  :     CLRREG32(&_pProfTimer->TCLR, GPTIMER_TCLR_ST);

  00004	e59f1034	 ldr         r1, [pc, #0x34]
  00008	e5912004	 ldr         r2, [r1, #4]
  0000c	e5923024	 ldr         r3, [r2, #0x24]
  00010	e3c33001	 bic         r3, r3, #1
  00014	e5823024	 str         r3, [r2, #0x24]
  00018		 |$LL2@OmapProfil@3|

; 191  :     while ((INREG32(&_pProfTimer->TWPS) & GPTIMER_TWPS_TCLR) != 0);

  00018	e5923034	 ldr         r3, [r2, #0x34]
  0001c	e3130001	 tst         r3, #1
  00020	1afffffc	 bne         |$LL2@OmapProfil@3|

; 192  :     _profilerEnabled = FALSE;

  00024	e3a03000	 mov         r3, #0
  00028	e5813000	 str         r3, [r1]

; 193  : 
; 194  :     PrcmDeviceEnableClocks(GPTIMER_DEVICE, FALSE);

  0002c	e3a01000	 mov         r1, #0
  00030	e3a00036	 mov         r0, #0x36
  00034	eb000000	 bl          PrcmDeviceEnableClocks

; 195  : }

  00038	e49de004	 ldr         lr, [sp], #4
  0003c	e12fff1e	 bx          lr
  00040		 |$LN9@OmapProfil@3|
  00040		 |$LN10@OmapProfil@3|
  00040	00000000	 DCD         |_profilerEnabled|
  00044		 |$M46981|

			 ENDP  ; |OmapProfilerStop|

	EXPORT	|OmapProfilerQuery|

  00000			 AREA	 |.pdata|, PDATA
|$T46997| DCD	|$LN10@OmapProfil@4|
	DCD	0x40001001
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OmapProfilerQuery| PROC

; 209  : {

  00000		 |$LN10@OmapProfil@4|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M46994|
  00004	e3500000	 cmp         r0, #0

; 210  :     DWORD i;
; 211  :     
; 212  :     for (i = 0; i < count; ++i)

  00008	0a000009	 beq         |$LN1@OmapProfil@4|
  0000c	e59fe028	 ldr         lr, [pc, #0x28]
  00010	e0422001	 sub         r2, r2, r1
  00014	e3a04000	 mov         r4, #0
  00018		 |$LL3@OmapProfil@4|

; 213  :         {
; 214  :         value[i] = _rgMarkers[target[i]];

  00018	e5913000	 ldr         r3, [r1]
  0001c	e2500001	 subs        r0, r0, #1
  00020	e79e3103	 ldr         r3, [lr, +r3, lsl #2]
  00024	e7823001	 str         r3, [r2, +r1]

; 215  :         _rgMarkers[target[i]] = 0;

  00028	e4913004	 ldr         r3, [r1], #4
  0002c	e78e4103	 str         r4, [lr, +r3, lsl #2]
  00030	1afffff8	 bne         |$LL3@OmapProfil@4|
  00034		 |$LN1@OmapProfil@4|

; 216  :         }
; 217  : }

  00034	e8bd4010	 ldmia       sp!, {r4, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$LN11@OmapProfil@4|
  0003c		 |$LN12@OmapProfil@4|
  0003c	00000000	 DCD         |_rgMarkers|
  00040		 |$M46995|

			 ENDP  ; |OmapProfilerQuery|

	EXPORT	|OALIoCtlHALProfiler|
	EXPORT	|??_C@_1EA@KOAOAACA@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAA?$AAL?$AAP?$AAr?$AAo?$AAf?$AAi?$AAl?$AAe?$AAr?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@JAMDPBAN@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAA?$AAL?$AAP?$AAr?$AAo?$AAf?$AAi?$AAl?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|

  00000			 AREA	 |.pdata|, PDATA
|$T47016| DCD	|$LN18@OALIoCtlHA|
	DCD	0x40002e01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@KOAOAACA@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAA?$AAL?$AAP?$AAr?$AAo?$AAf?$AAi?$AAl?$AAe?$AAr?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "H", 0x0, "A", 0x0, "L", 0x0, "P"
	DCB	0x0, "r", 0x0, "o", 0x0, "f", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "r", 0x0, "(", 0x0, "r", 0x0, "c", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@JAMDPBAN@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAA?$AAL?$AAP?$AAr?$AAo?$AAf?$AAi?$AAl?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "H", 0x0, "A", 0x0, "L", 0x0, "P"
	DCB	0x0, "r", 0x0, "o", 0x0, "f", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALIoCtlHALProfiler| PROC

; 234  : {

  00000		 |$LN18@OALIoCtlHA|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M47013|
  00004	e1a07002	 mov         r7, r2
  00008	e1a05001	 mov         r5, r1

; 235  :     BOOL rc;
; 236  :     ProfilerControl    *pProfilerControl;
; 237  :     ProfilerControlEx  *pProfilerControlEx;
; 238  : 
; 239  :     UNREFERENCED_PARAMETER(pOutSize);
; 240  :     UNREFERENCED_PARAMETER(outSize);
; 241  :     UNREFERENCED_PARAMETER(pOutBuffer);
; 242  :     UNREFERENCED_PARAMETER(code);
; 243  : 
; 244  :     OALMSG(OAL_IOCTL&&OAL_FUNC, (L"+OALIoCtlHALProfiler\r\n"));

  0000c	e59f60a0	 ldr         r6, [pc, #0xA0]
  00010	e5963440	 ldr         r3, [r6, #0x440]
  00014	e3130a01	 tst         r3, #1, 20
  00018	13130004	 tstne       r3, #4
  0001c	159f008c	 ldrne       r0, [pc, #0x8C]
  00020	1b000000	 blne        NKDbgPrintfW

; 245  : 
; 246  :     // validate parameters
; 247  :     //
; 248  :     rc = FALSE;

  00024	e3a04000	 mov         r4, #0

; 249  :     if (pInBuffer == NULL)

  00028	e3550000	 cmp         r5, #0
  0002c	0a000015	 beq         |$cleanUp$46907|

; 250  :         {
; 251  :         goto cleanUp;
; 252  :         }
; 253  : 
; 254  :     pProfilerControl = (ProfilerControl*)pInBuffer;
; 255  :     if (inSize != sizeof(ProfilerControl) + pProfilerControl->OEM.dwControlSize)

  00030	e5953010	 ldr         r3, [r5, #0x10]
  00034	e2833014	 add         r3, r3, #0x14
  00038	e1570003	 cmp         r7, r3
  0003c	1a000011	 bne         |$cleanUp$46907|

; 256  :         {
; 257  :         goto cleanUp;
; 258  :         }
; 259  : 
; 260  :     // determine command
; 261  :     if (pProfilerControl->dwOptions & (PROFILE_STARTPAUSED | PROFILE_CONTINUE | PROFILE_START))

  00040	e5953004	 ldr         r3, [r5, #4]
  00044	e3130e13	 tst         r3, #0x13, 28
  00048	0a000001	 beq         |$LN6@OALIoCtlHA|

; 262  :         {
; 263  :         OmapProfilerStart();

  0004c	eb000000	 bl          OmapProfilerStart

; 264  :         rc = TRUE;

  00050	ea00000b	 b           |$LN15@OALIoCtlHA|
  00054		 |$LN6@OALIoCtlHA|

; 265  :         }
; 266  :     else if (pProfilerControl->dwOptions & (PROFILE_PAUSE | PROFILE_STOP))

  00054	e3130f82	 tst         r3, #0x82, 30
  00058	0a000001	 beq         |$LN4@OALIoCtlHA|

; 267  :         {
; 268  :         OmapProfilerStop();

  0005c	eb000000	 bl          OmapProfilerStop

; 269  :         rc = TRUE;

  00060	ea000007	 b           |$LN15@OALIoCtlHA|
  00064		 |$LN4@OALIoCtlHA|

; 270  :         }
; 271  :     else if (pProfilerControl->dwOptions & (PROFILE_OEMDEFINED))

  00064	e3130080	 tst         r3, #0x80
  00068	0a000006	 beq         |$cleanUp$46907|

; 272  :         {
; 273  :         if (inSize != sizeof(ProfilerControlEx)) goto cleanUp;

  0006c	e3570098	 cmp         r7, #0x98
  00070	1a000004	 bne         |$cleanUp$46907|

; 274  : 
; 275  :         // get data
; 276  :         pProfilerControlEx = (ProfilerControlEx*)pProfilerControl;
; 277  :         OmapProfilerQuery(pProfilerControlEx->OEM.dwCount, 
; 278  :             pProfilerControlEx->OEM.rgTargets, 
; 279  :             pProfilerControlEx->OEM.rgValues
; 280  :             );

  00074	e5950014	 ldr         r0, [r5, #0x14]
  00078	e2852058	 add         r2, r5, #0x58
  0007c	e2851018	 add         r1, r5, #0x18
  00080	eb000000	 bl          OmapProfilerQuery
  00084		 |$LN15@OALIoCtlHA|

; 281  :         
; 282  :         rc = TRUE;

  00084	e3a04001	 mov         r4, #1
  00088		 |$cleanUp$46907|
  00088	e5963440	 ldr         r3, [r6, #0x440]

; 283  :         }
; 284  :     
; 285  : cleanUp:
; 286  :     OALMSG(OAL_INTR&&OAL_FUNC, (L"-OALIoCtlHALProfiler(rc = %d)\r\n", rc));

  0008c	e3130901	 tst         r3, #1, 18
  00090	13130004	 tstne       r3, #4
  00094	159f0010	 ldrne       r0, [pc, #0x10]
  00098	11a01004	 movne       r1, r4
  0009c	1b000000	 blne        NKDbgPrintfW

; 287  :     return rc;
; 288  : }

  000a0	e1a00004	 mov         r0, r4
  000a4	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  000a8	e12fff1e	 bx          lr
  000ac		 |$LN19@OALIoCtlHA|
  000ac		 |$LN20@OALIoCtlHA|
  000ac	00000000	 DCD         |??_C@_1EA@KOAOAACA@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAA?$AAL?$AAP?$AAr?$AAo?$AAf?$AAi?$AAl?$AAe?$AAr?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  000b0		 |$LN21@OALIoCtlHA|
  000b0	00000000	 DCD         |??_C@_1CO@JAMDPBAN@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAA?$AAL?$AAP?$AAr?$AAo?$AAf?$AAi?$AAl?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  000b4		 |$LN22@OALIoCtlHA|
  000b4	00000000	 DCD         |dpCurSettings|
  000b8		 |$M47014|

			 ENDP  ; |OALIoCtlHALProfiler|

	END
