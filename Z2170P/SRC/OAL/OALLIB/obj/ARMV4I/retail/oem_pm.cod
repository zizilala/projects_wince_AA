; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\Z2170P\SRC\OAL\OALLIB\oem_pm.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|g_PrcmDebugSuspendResume| [ DATA ]
	EXPORT	|g_pTimerRegs| [ DATA ]
	EXPORT	|g_pGPMCRegs| [ DATA ]
	EXPORT	|g_pSDRCRegs| [ DATA ]
	EXPORT	|g_pSMSRegs| [ DATA ]
	EXPORT	|g_pVRFBRegs| [ DATA ]
	EXPORT	|g_pContextRestore| [ DATA ]
	EXPORT	|g_pSdrcRestore| [ DATA ]
	EXPORT	|g_pPrcmRestore| [ DATA ]
	EXPORT	|g_ffContextSaveMask| [ DATA ]
	EXPORT	|g_pSyscPadWkupRegs| [ DATA ]
	EXPORT	|g_pSyscPadConfsRegs| [ DATA ]

  00000			 AREA	 |.data|, DATA
	 COMMON	|g_PrcmCm|, 0x38

	 COMMON	|g_pIdCodeReg|, 0x4

	 COMMON	|g_PrcmPrm|, 0x38


  00000			 AREA	 |.bss|, NOINIT
|g_pTimerRegs| % 0x4
|g_pGPMCRegs| %	0x4
|g_pSDRCRegs| %	0x4
|g_pSMSRegs| %	0x4
|g_pVRFBRegs| %	0x4
|g_pContextRestore| % 0x4
|g_pSdrcRestore| % 0x4
|g_pPrcmRestore| % 0x4
|g_ffContextSaveMask| % 0x4
|s_pSyscIFContext| % 0x4
|g_pSyscPadWkupRegs| % 0x4
|g_pSyscPadConfsRegs| % 0x4
|s_pDmaController| % 0x4
|s_bCoreOffModeSet| % 0x4

  00000			 AREA	 |.data|, DATA
|g_PrcmDebugSuspendResume| DCD 0x1

  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	IMPORT	|TWLWriteRegs|
; File c:\wince600\platform\common\src\soc\common_ti_v1\triton\inc\twl.h

  00000			 AREA	 |.pdata|, PDATA
|$T49797| DCD	|$LN5@TWLWriteBy|
	DCD	0x40000803
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |TWLWriteByteReg| PROC

; 57   : {

  00000		 |$LN5@TWLWriteBy|
  00000	e1a0c00d	 mov         r12, sp
  00004	e92d000f	 stmdb       sp!, {r0 - r3}
  00008	e92d5000	 stmdb       sp!, {r12, lr}
  0000c		 |$M49794|

; 58   :     return TWLWriteRegs(hTWL,address,&data,sizeof(data));

  0000c	e3a03001	 mov         r3, #1
  00010	e28d2010	 add         r2, sp, #0x10
  00014	eb000000	 bl          TWLWriteRegs

; 59   : }

  00018	e89d6000	 ldmia       sp, {sp, lr}
  0001c	e12fff1e	 bx          lr
  00020		 |$M49795|

			 ENDP  ; |TWLWriteByteReg|

	EXPORT	|??_C@_1CC@DGKOMBLF@?$AAT?$AA2?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|NKDbgPrintfW|
	IMPORT	|TWLReadRegs|
; File c:\wince600\platform\z2170p\src\oal\oallib\oem_pm.c

  00000			 AREA	 |.pdata|, PDATA
|$T49807| DCD	|$LN5@ShowT2Reg|
	DCD	0x40001002

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@DGKOMBLF@?$AAT?$AA2?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "T"
	DCB	0x0, "2", 0x0, " ", 0x0, "%", 0x0, "s", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "2"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |ShowT2Reg| PROC

; 114  : {

  00000		 |$LN5@ShowT2Reg|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M49804|
  00008	e1a04002	 mov         r4, r2

; 115  :     UINT8 Value = 0;

  0000c	e3a03000	 mov         r3, #0
  00010	e5cd3000	 strb        r3, [sp]

; 116  :     TWLReadRegs(hTwl, RegAddr, &Value, sizeof(Value));

  00014	e3a03001	 mov         r3, #1
  00018	e28d2000	 add         r2, sp, #0
  0001c	eb000000	 bl          TWLReadRegs

; 117  :     OALLog(L"T2 %s = 0x%02x\r\n", szRegname, Value);

  00020	e5dd2000	 ldrb        r2, [sp]
  00024	e59f0010	 ldr         r0, [pc, #0x10]
  00028	e1a01004	 mov         r1, r4
  0002c	eb000000	 bl          NKDbgPrintfW

; 118  : }

  00030	e28dd004	 add         sp, sp, #4
  00034	e8bd4010	 ldmia       sp!, {r4, lr}
  00038	e12fff1e	 bx          lr
  0003c		 |$LN6@ShowT2Reg|
  0003c		 |$LN7@ShowT2Reg|
  0003c	00000000	 DCD         |??_C@_1CC@DGKOMBLF@?$AAT?$AA2?$AA?5?$AA?$CF?$AAs?$AA?5?$AA?$DN?$AA?5?$AA0?$AAx?$AA?$CF?$AA0?$AA2?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00040		 |$M49805|

			 ENDP  ; |ShowT2Reg|

	EXPORT	|TwlDump|
	EXPORT	|??_C@_1CM@MNPFNCNH@?$AAT?$AAW?$AAL?$AA_?$AAC?$AAF?$AAG?$AA_?$AAP?$AA1?$AA_?$AAT?$AAR?$AAA?$AAN?$AAS?$AAI?$AAT?$AAI?$AAO?$AAN?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@DPKCDPCP@?$AAT?$AAW?$AAL?$AA_?$AAC?$AAF?$AAG?$AA_?$AAP?$AA2?$AA_?$AAT?$AAR?$AAA?$AAN?$AAS?$AAI?$AAT?$AAI?$AAO?$AAN?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@NILPJJLI@?$AAT?$AAW?$AAL?$AA_?$AAC?$AAF?$AAG?$AA_?$AAP?$AA3?$AA_?$AAT?$AAR?$AAA?$AAN?$AAS?$AAI?$AAT?$AAI?$AAO?$AAN?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DA@HDPMAPEI@?$AAT?$AAW?$AAL?$AA_?$AAC?$AAF?$AAG?$AA_?$AAP?$AA1?$AA2?$AA3?$AA_?$AAT?$AAR?$AAA?$AAN?$AAS?$AAI?$AAT?$AAI?$AAO?$AAN?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@FNHLMNDA@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAT?$AAS?$AA_?$AAB?$AAO?$AAO?$AAT?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@GNEBDJKC@?$AAT?$AAW?$AAL?$AA_?$AAC?$AAF?$AAG?$AA_?$AAB?$AAO?$AAO?$AAT?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@ELLCNJKN@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAH?$AAU?$AAN?$AAD?$AAA?$AAN?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@IBEHGLBF@?$AAT?$AAW?$AAL?$AA_?$AAB?$AAO?$AAO?$AAT?$AA_?$AAB?$AAC?$AAI?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@EMJKAEPC@?$AAT?$AAW?$AAL?$AA_?$AAC?$AAF?$AAG?$AA_?$AAP?$AAW?$AAR?$AAA?$AAN?$AAA?$AA1?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@FOCPKLBM@?$AAT?$AAW?$AAL?$AA_?$AAC?$AAF?$AAG?$AA_?$AAP?$AAW?$AAR?$AAA?$AAN?$AAA?$AA2?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@DAHFEIMF@?$AAT?$AAW?$AAL?$AA_?$AAB?$AAG?$AAA?$AAP?$AA_?$AAT?$AAR?$AAI?$AAM?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@OCABEEAE@?$AAT?$AAW?$AAL?$AA_?$AAB?$AAA?$AAC?$AAK?$AAU?$AAP?$AA_?$AAM?$AAI?$AAS?$AAC?$AA_?$AAS?$AAT?$AAS?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@PNPBGHH@?$AAT?$AAW?$AAL?$AA_?$AAB?$AAA?$AAC?$AAK?$AAU?$AAP?$AA_?$AAM?$AAI?$AAS?$AAC?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@GIBGEFBM@?$AAT?$AAW?$AAL?$AA_?$AAB?$AAA?$AAC?$AAK?$AAU?$AAP?$AA_?$AAM?$AAI?$AAS?$AAC?$AA_?$AAT?$AAS?$AAT?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@OGGMHJKA@?$AAT?$AAW?$AAL?$AA_?$AAP?$AAR?$AAO?$AAT?$AAE?$AAC?$AAT?$AA_?$AAK?$AAE?$AAY?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@INKDNOIM@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAT?$AAS?$AA_?$AAH?$AAW?$AA_?$AAC?$AAO?$AAN?$AAD?$AAI?$AAT?$AAI?$AAO?$AAN?$AAS?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@GFJKHABJ@?$AAT?$AAW?$AAL?$AA_?$AAP?$AA1?$AA_?$AAS?$AAW?$AA_?$AAE?$AAV?$AAE?$AAN?$AAT?$AAS?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@DNIENJDB@?$AAT?$AAW?$AAL?$AA_?$AAP?$AA2?$AA_?$AAS?$AAW?$AA_?$AAE?$AAV?$AAE?$AAN?$AAT?$AAS?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@LMKBLMBG@?$AAT?$AAW?$AAL?$AA_?$AAP?$AA3?$AA_?$AAS?$AAW?$AA_?$AAE?$AAV?$AAE?$AAN?$AAT?$AAS?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@ICBMDMK@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAT?$AAS?$AA_?$AAP?$AA1?$AA2?$AA3?$AA_?$AAS?$AAT?$AAA?$AAT?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@HHOPMMMB@?$AAT?$AAW?$AAL?$AA_?$AAP?$AAB?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@NCDFPHPD@?$AAT?$AAW?$AAL?$AA_?$AAP?$AAB?$AA_?$AAW?$AAO?$AAR?$AAD?$AA_?$AAM?$AAS?$AAB?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@BOJPPHGN@?$AAT?$AAW?$AAL?$AA_?$AAP?$AAB?$AA_?$AAW?$AAO?$AAR?$AAD?$AA_?$AAL?$AAS?$AAB?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@HCLKMPEO@?$AAT?$AAW?$AAL?$AA_?$AAR?$AAE?$AAS?$AAE?$AAR?$AAV?$AAE?$AAD?$AA_?$AAA?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@GAAPGAKA@?$AAT?$AAW?$AAL?$AA_?$AAR?$AAE?$AAS?$AAE?$AAR?$AAV?$AAE?$AAD?$AA_?$AAB?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@NILDAHMF@?$AAT?$AAW?$AAL?$AA_?$AAR?$AAE?$AAS?$AAE?$AAR?$AAV?$AAE?$AAD?$AA_?$AAC?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@EFGEDPHM@?$AAT?$AAW?$AAL?$AA_?$AAR?$AAE?$AAS?$AAE?$AAR?$AAV?$AAE?$AAD?$AA_?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@PNNIFIBJ@?$AAT?$AAW?$AAL?$AA_?$AAR?$AAE?$AAS?$AAE?$AAR?$AAV?$AAE?$AAD?$AA_?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@ILGKGKIJ@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAE?$AAQ?$AA_?$AAA?$AAD?$AAD?$AA_?$AAW?$AA2?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@GJAKFDGK@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAE?$AAQ?$AA_?$AAA?$AAD?$AAD?$AA_?$AAP?$AA2?$AAA?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@KMGJGKJM@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAE?$AAQ?$AA_?$AAA?$AAD?$AAD?$AA_?$AAA?$AA2?$AAW?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@CDALPNML@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAE?$AAQ?$AA_?$AAA?$AAD?$AAD?$AA_?$AAA?$AA2?$AAS?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@BGHKIACK@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAE?$AAQ?$AA_?$AAA?$AAD?$AAD?$AA_?$AAS?$AA2?$AAA?$AA1?$AA2?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@GENJAGCF@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAE?$AAQ?$AA_?$AAA?$AAD?$AAD?$AA_?$AAS?$AA2?$AAA?$AA3?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@EBEPJHLG@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAE?$AAQ?$AA_?$AAA?$AAD?$AAD?$AA_?$AAW?$AAA?$AAR?$AAM?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@MNNGICG@?$AAT?$AAW?$AAL?$AA_?$AAM?$AAE?$AAM?$AAO?$AAR?$AAY?$AA_?$AAA?$AAD?$AAD?$AAR?$AAE?$AAS?$AAS?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@LLNNKACL@?$AAT?$AAW?$AAL?$AA_?$AAM?$AAE?$AAM?$AAO?$AAR?$AAY?$AA_?$AAD?$AAA?$AAT?$AAA?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@MJNCPNEK@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAC?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@LHFJIPLF@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAC?$AA_?$AAD?$AAE?$AAT?$AAE?$AAC?$AAT?$AA1?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@KFOMCAFL@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAC?$AA_?$AAD?$AAE?$AAT?$AAE?$AAC?$AAT?$AA2?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@GBIDKBFL@?$AAT?$AAW?$AAL?$AA_?$AAW?$AAA?$AAT?$AAC?$AAH?$AAD?$AAO?$AAG?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@DHMCEIBG@?$AAT?$AAW?$AAL?$AA_?$AAI?$AAT?$AA_?$AAC?$AAH?$AAE?$AAC?$AAK?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@IAKLAHEP@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAB?$AAR?$AAA?$AAT?$AAO?$AAR?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@ENEBFMGG@?$AAT?$AAW?$AAL?$AA_?$AAD?$AAC?$AAD?$AAC?$AA_?$AAG?$AAL?$AAO?$AAB?$AAA?$AAL?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@KPDBKMGC@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAT?$AAR?$AAI?$AAM?$AA1?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@LNIEADIM@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAT?$AAR?$AAI?$AAM?$AA2?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@IGPJBIJA@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAT?$AAR?$AAI?$AAM?$AA1?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@JEEMLHHO@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAT?$AAR?$AAI?$AAM?$AA2?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@BGEAPMGL@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAT?$AAR?$AAI?$AAM?$AA1?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@EPFFDIF@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAT?$AAR?$AAI?$AAM?$AA2?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@GMNGOJLF@?$AAT?$AAW?$AAL?$AA_?$AAM?$AAI?$AAS?$AAC?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@KOJFJKIL@?$AAT?$AAW?$AAL?$AA_?$AAL?$AAS?$AA_?$AAT?$AAS?$AAT?$AA_?$AAA?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@LMCADFGF@?$AAT?$AAW?$AAL?$AA_?$AAL?$AAS?$AA_?$AAT?$AAS?$AAT?$AA_?$AAB?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@EJMFCAA@?$AAT?$AAW?$AAL?$AA_?$AAL?$AAS?$AA_?$AAT?$AAS?$AAT?$AA_?$AAC?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@JJELGKLJ@?$AAT?$AAW?$AAL?$AA_?$AAL?$AAS?$AA_?$AAT?$AAS?$AAT?$AA_?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@PADDDEAA@?$AAT?$AAW?$AAL?$AA_?$AAB?$AAB?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@LBPLKNO@?$AAT?$AAW?$AAL?$AA_?$AAM?$AAI?$AAS?$AAC?$AA_?$AAT?$AAS?$AAT?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@KJCFJAOL@?$AAT?$AAW?$AAL?$AA_?$AAT?$AAR?$AAI?$AAM?$AA1?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@LLJADPAF@?$AAT?$AAW?$AAL?$AA_?$AAT?$AAR?$AAI?$AAM?$AA2?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@NCNINGIK@?$AAT?$AAW?$AAL?$AA_?$AAD?$AAC?$AAD?$AAC?$AA_?$AAT?$AAI?$AAM?$AAE?$AAO?$AAU?$AAT?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@PKPKJOBA@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA1?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@LNBEAMJI@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA1?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@NFKDFMOF@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA1?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@OLGOOHKM@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA1?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@FFFDNDNK@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA2?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@MBHFCJED@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA2?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@PMGLOIBH@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA2?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@LDHAEOIE@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA2?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@DADEOIJM@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA3?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@FMHKMIDF@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA3?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@FCADHJIG@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA3?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@DCFFCLKD@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA3?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@NBHAEOAP@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA4?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@DJLHGCPF@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA4?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@KPPKIBPD@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA4?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@DENBMNE@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA4?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@BONKHPA@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAM?$AAM?$AAC?$AA1?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@OLCMNGEE@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAM?$AAM?$AAC?$AA1?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@JOCILLAE@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAM?$AAM?$AAC?$AA1?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@DJEHNHIJ@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAM?$AAM?$AAC?$AA1?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@KOEEOKDK@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAM?$AAM?$AAC?$AA2?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@JHENPDJP@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAM?$AAM?$AAC?$AA2?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@LHOAAPPG@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAM?$AAM?$AAC?$AA2?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@GBFJHOKB@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAM?$AAM?$AAC?$AA2?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@GOKAJMBK@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAP?$AAL?$AAL?$AA1?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@NMADKKBH@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAP?$AAL?$AAL?$AA1?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@FGANLPKL@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAP?$AAL?$AAL?$AA1?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@DAGBDBCF@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAP?$AAL?$AAL?$AA1?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@MBAJNBNA@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAP?$AAL?$AAL?$AA2?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@KAGCIPMM@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAP?$AAL?$AAL?$AA2?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@HPMFALFJ@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAP?$AAL?$AAL?$AA2?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@GIHPJIAN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAP?$AAL?$AAL?$AA2?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@DJMPGIDN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAS?$AAI?$AAM?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@KFAJDHDF@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAS?$AAI?$AAM?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@HPABGPHI@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAS?$AAI?$AAM?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@KICDMOJB@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAS?$AAI?$AAM?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@NHAHENBA@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAA?$AAC?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@NCAMKLIG@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAA?$AAC?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@EJFADKGJ@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAA?$AAC?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@IAGMKPEA@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAA?$AAC?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@PDAFKBJG@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAA?$AAN?$AAA?$AA1?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@BOJHFIFH@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAA?$AAN?$AAA?$AA1?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@PFMHKBAK@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAA?$AAN?$AAA?$AA1?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@OGJDOJDA@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAA?$AAN?$AAA?$AA1?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@FMKMOMFM@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAA?$AAN?$AAA?$AA2?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@GCPGHNIM@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAA?$AAN?$AAA?$AA2?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@NMAPBFPI@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAA?$AAN?$AAA?$AA2?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@LOINEABI@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAA?$AAN?$AAA?$AA2?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@LPFEGHP@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAD?$AAI?$AAG?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@CNBGNCHL@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAD?$AAI?$AAG?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@MBJLJDBL@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAD?$AAI?$AAG?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@EGJDLKDE@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAD?$AAI?$AAG?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@MKPLFMB@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@JAOKDEOG@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@EMBNJNPN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@OIGPHMKN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@OMFONJDN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAM?$AAI?$AAS?$AAC?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@BKJABIEK@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAT?$AAE?$AAS?$AAT?$AA1?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@ICFLHKE@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAT?$AAE?$AAS?$AAT?$AA2?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@GDLJGNJN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAO?$AAS?$AAC?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@CJBJDONK@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAR?$AAE?$AAS?$AAE?$AAR?$AAV?$AAE?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@CLMMCELB@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAV?$AAS?$AAE?$AAL?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@JJICJHGE@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@KDFEABHI@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@PFGMMNPE@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@HNOGANFN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@OKEOEFFI@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAM?$AAI?$AAS?$AAC?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@KDOBEIED@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAT?$AAE?$AAS?$AAT?$AA1?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@LBFEOHKN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAT?$AAE?$AAS?$AAT?$AA2?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@PGDABMGN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAO?$AAS?$AAC?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@CPAJKCLP@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAR?$AAE?$AAS?$AAE?$AAR?$AAV?$AAE?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@BIHCBBCP@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAV?$AAS?$AAE?$AAL?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@NHMCPBHO@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAV?$AAM?$AAO?$AAD?$AAE?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@JCPLDMFI@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAV?$AAF?$AAL?$AAO?$AAO?$AAR?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@DOEFACFE@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAV?$AAR?$AAO?$AAO?$AAF?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@OOFBDLFF@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAS?$AAT?$AAE?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@DGCLNKKO@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@NPDFCEKD@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@NMKEHJAG@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@KHINPKN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@NDDGOIBI@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAM?$AAI?$AAS?$AAC?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@IKCJPMLB@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAT?$AAE?$AAS?$AAT?$AA1?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@JIJMFDFP@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAT?$AAE?$AAS?$AAT?$AA2?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@IBKOMOJN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAO?$AAS?$AAC?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@BGHBAPPP@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAR?$AAE?$AAS?$AAE?$AAR?$AAV?$AAE?$AAD?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@GEBDDEPE@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAV?$AAS?$AAE?$AAL?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@IPNMFIFG@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAV?$AAM?$AAO?$AAD?$AAE?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@HIHNOBDK@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAV?$AAF?$AAL?$AAO?$AAO?$AAR?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@BHINLGKG@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAV?$AAR?$AAO?$AAO?$AAF?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BM@JCDABOIO@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAS?$AAT?$AAE?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@JNBKBPL@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA1?$AAV?$AA5?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@JIPAHJDF@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA1?$AAV?$AA5?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@OOGFDOBG@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA1?$AAV?$AA5?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@LPIAKHFG@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA1?$AAV?$AA8?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@CPAKAJGO@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA1?$AAV?$AA8?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@OHCPHMEP@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA1?$AAV?$AA8?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@JOAHIGKN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA3?$AAV?$AA1?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@IEIIJNKN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA3?$AAV?$AA1?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@PAJKAEBN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA3?$AAV?$AA1?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@MOBGKOKO@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AAC?$AAP?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@JHNNABBA@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AAC?$AAP?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@FIEIBINC@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AAC?$AAP?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@ENCCLMKD@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA1?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@FPJHBDEN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA2?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@JIIJPPBA@?$AAT?$AAW?$AAL?$AA_?$AAR?$AAE?$AAG?$AAE?$AAN?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@NHLJDICO@?$AAT?$AAW?$AAL?$AA_?$AAR?$AAE?$AAG?$AAE?$AAN?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@EGIIMLMD@?$AAT?$AAW?$AAL?$AA_?$AAR?$AAE?$AAG?$AAE?$AAN?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@MDBMJOFI@?$AAT?$AAW?$AAL?$AA_?$AAN?$AAR?$AAE?$AAS?$AAP?$AAW?$AAR?$AAO?$AAN?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@FILDJJNN@?$AAT?$AAW?$AAL?$AA_?$AAN?$AAR?$AAE?$AAS?$AAP?$AAW?$AAR?$AAO?$AAN?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@NIMIGFMJ@?$AAT?$AAW?$AAL?$AA_?$AAN?$AAR?$AAE?$AAS?$AAP?$AAW?$AAR?$AAO?$AAN?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@ILFMPKBH@?$AAT?$AAW?$AAL?$AA_?$AAC?$AAL?$AAK?$AAE?$AAN?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@INCDICFB@?$AAT?$AAW?$AAL?$AA_?$AAC?$AAL?$AAK?$AAE?$AAN?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@MFJLKOPC@?$AAT?$AAW?$AAL?$AA_?$AAC?$AAL?$AAK?$AAE?$AAN?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@FKLOADHF@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAY?$AAS?$AAE?$AAN?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@NGGKEBDO@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAY?$AAS?$AAE?$AAN?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@CFJDBBNJ@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAY?$AAS?$AAE?$AAN?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CK@HKKHEFBH@?$AAT?$AAW?$AAL?$AA_?$AAH?$AAF?$AAC?$AAL?$AAK?$AAO?$AAU?$AAT?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@CIIEBHLO@?$AAT?$AAW?$AAL?$AA_?$AAH?$AAF?$AAC?$AAL?$AAK?$AAO?$AAU?$AAT?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@JMBIIDLN@?$AAT?$AAW?$AAL?$AA_?$AAH?$AAF?$AAC?$AAL?$AAK?$AAO?$AAU?$AAT?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@NLHAPHPH@?$AAT?$AAW?$AAL?$AA_?$AA3?$AA2?$AAK?$AAC?$AAL?$AAK?$AAO?$AAU?$AAT?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@GOHDKJFC@?$AAT?$AAW?$AAL?$AA_?$AA3?$AA2?$AAK?$AAC?$AAL?$AAK?$AAO?$AAU?$AAT?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@ECAKOHCB@?$AAT?$AAW?$AAL?$AA_?$AA3?$AA2?$AAK?$AAC?$AAL?$AAK?$AAO?$AAU?$AAT?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@IKLKMIKH@?$AAT?$AAW?$AAL?$AA_?$AAT?$AAR?$AAI?$AAT?$AAO?$AAN?$AA_?$AAR?$AAE?$AAS?$AAE?$AAT?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@LCHEGJFI@?$AAT?$AAW?$AAL?$AA_?$AAT?$AAR?$AAI?$AAT?$AAO?$AAN?$AA_?$AAR?$AAE?$AAS?$AAE?$AAT?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@CDIBBBBM@?$AAT?$AAW?$AAL?$AA_?$AAT?$AAR?$AAI?$AAT?$AAO?$AAN?$AA_?$AAR?$AAE?$AAS?$AAE?$AAT?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@KFDKGHKP@?$AAT?$AAW?$AAL?$AA_?$AAM?$AAA?$AAI?$AAN?$AAR?$AAE?$AAF?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@DKMPJCIB@?$AAT?$AAW?$AAL?$AA_?$AAM?$AAA?$AAI?$AAN?$AAR?$AAE?$AAF?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@FJBEMMGF@?$AAT?$AAW?$AAL?$AA_?$AAM?$AAA?$AAI?$AAN?$AAR?$AAE?$AAF?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T49817| DCD	|$LN5@TwlDump|
	DCD	0x4003b001

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@MNPFNCNH@?$AAT?$AAW?$AAL?$AA_?$AAC?$AAF?$AAG?$AA_?$AAP?$AA1?$AA_?$AAT?$AAR?$AAA?$AAN?$AAS?$AAI?$AAT?$AAI?$AAO?$AAN?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "C", 0x0, "F", 0x0, "G"
	DCB	0x0, "_", 0x0, "P", 0x0, "1", 0x0, "_", 0x0, "T", 0x0, "R"
	DCB	0x0, "A", 0x0, "N", 0x0, "S", 0x0, "I", 0x0, "T", 0x0, "I"
	DCB	0x0, "O", 0x0, "N", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@DPKCDPCP@?$AAT?$AAW?$AAL?$AA_?$AAC?$AAF?$AAG?$AA_?$AAP?$AA2?$AA_?$AAT?$AAR?$AAA?$AAN?$AAS?$AAI?$AAT?$AAI?$AAO?$AAN?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "C", 0x0, "F", 0x0, "G"
	DCB	0x0, "_", 0x0, "P", 0x0, "2", 0x0, "_", 0x0, "T", 0x0, "R"
	DCB	0x0, "A", 0x0, "N", 0x0, "S", 0x0, "I", 0x0, "T", 0x0, "I"
	DCB	0x0, "O", 0x0, "N", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@NILPJJLI@?$AAT?$AAW?$AAL?$AA_?$AAC?$AAF?$AAG?$AA_?$AAP?$AA3?$AA_?$AAT?$AAR?$AAA?$AAN?$AAS?$AAI?$AAT?$AAI?$AAO?$AAN?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "C", 0x0, "F", 0x0, "G"
	DCB	0x0, "_", 0x0, "P", 0x0, "3", 0x0, "_", 0x0, "T", 0x0, "R"
	DCB	0x0, "A", 0x0, "N", 0x0, "S", 0x0, "I", 0x0, "T", 0x0, "I"
	DCB	0x0, "O", 0x0, "N", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DA@HDPMAPEI@?$AAT?$AAW?$AAL?$AA_?$AAC?$AAF?$AAG?$AA_?$AAP?$AA1?$AA2?$AA3?$AA_?$AAT?$AAR?$AAA?$AAN?$AAS?$AAI?$AAT?$AAI?$AAO?$AAN?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "C", 0x0, "F", 0x0, "G"
	DCB	0x0, "_", 0x0, "P", 0x0, "1", 0x0, "2", 0x0, "3", 0x0, "_"
	DCB	0x0, "T", 0x0, "R", 0x0, "A", 0x0, "N", 0x0, "S", 0x0, "I"
	DCB	0x0, "T", 0x0, "I", 0x0, "O", 0x0, "N", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@FNHLMNDA@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAT?$AAS?$AA_?$AAB?$AAO?$AAO?$AAT?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "S"
	DCB	0x0, "_", 0x0, "B", 0x0, "O", 0x0, "O", 0x0, "T", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@GNEBDJKC@?$AAT?$AAW?$AAL?$AA_?$AAC?$AAF?$AAG?$AA_?$AAB?$AAO?$AAO?$AAT?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "C", 0x0, "F", 0x0, "G"
	DCB	0x0, "_", 0x0, "B", 0x0, "O", 0x0, "O", 0x0, "T", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@ELLCNJKN@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAH?$AAU?$AAN?$AAD?$AAA?$AAN?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "S", 0x0, "H", 0x0, "U"
	DCB	0x0, "N", 0x0, "D", 0x0, "A", 0x0, "N", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@IBEHGLBF@?$AAT?$AAW?$AAL?$AA_?$AAB?$AAO?$AAO?$AAT?$AA_?$AAB?$AAC?$AAI?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "B", 0x0, "O", 0x0, "O"
	DCB	0x0, "T", 0x0, "_", 0x0, "B", 0x0, "C", 0x0, "I", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@EMJKAEPC@?$AAT?$AAW?$AAL?$AA_?$AAC?$AAF?$AAG?$AA_?$AAP?$AAW?$AAR?$AAA?$AAN?$AAA?$AA1?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "C", 0x0, "F", 0x0, "G"
	DCB	0x0, "_", 0x0, "P", 0x0, "W", 0x0, "R", 0x0, "A", 0x0, "N"
	DCB	0x0, "A", 0x0, "1", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@FOCPKLBM@?$AAT?$AAW?$AAL?$AA_?$AAC?$AAF?$AAG?$AA_?$AAP?$AAW?$AAR?$AAA?$AAN?$AAA?$AA2?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "C", 0x0, "F", 0x0, "G"
	DCB	0x0, "_", 0x0, "P", 0x0, "W", 0x0, "R", 0x0, "A", 0x0, "N"
	DCB	0x0, "A", 0x0, "2", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@DAHFEIMF@?$AAT?$AAW?$AAL?$AA_?$AAB?$AAG?$AAA?$AAP?$AA_?$AAT?$AAR?$AAI?$AAM?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "B", 0x0, "G", 0x0, "A"
	DCB	0x0, "P", 0x0, "_", 0x0, "T", 0x0, "R", 0x0, "I", 0x0, "M"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@OCABEEAE@?$AAT?$AAW?$AAL?$AA_?$AAB?$AAA?$AAC?$AAK?$AAU?$AAP?$AA_?$AAM?$AAI?$AAS?$AAC?$AA_?$AAS?$AAT?$AAS?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "B", 0x0, "A", 0x0, "C"
	DCB	0x0, "K", 0x0, "U", 0x0, "P", 0x0, "_", 0x0, "M", 0x0, "I"
	DCB	0x0, "S", 0x0, "C", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "S"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@PNPBGHH@?$AAT?$AAW?$AAL?$AA_?$AAB?$AAA?$AAC?$AAK?$AAU?$AAP?$AA_?$AAM?$AAI?$AAS?$AAC?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "B", 0x0, "A", 0x0, "C"
	DCB	0x0, "K", 0x0, "U", 0x0, "P", 0x0, "_", 0x0, "M", 0x0, "I"
	DCB	0x0, "S", 0x0, "C", 0x0, "_", 0x0, "C", 0x0, "F", 0x0, "G"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@GIBGEFBM@?$AAT?$AAW?$AAL?$AA_?$AAB?$AAA?$AAC?$AAK?$AAU?$AAP?$AA_?$AAM?$AAI?$AAS?$AAC?$AA_?$AAT?$AAS?$AAT?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "B", 0x0, "A", 0x0, "C"
	DCB	0x0, "K", 0x0, "U", 0x0, "P", 0x0, "_", 0x0, "M", 0x0, "I"
	DCB	0x0, "S", 0x0, "C", 0x0, "_", 0x0, "T", 0x0, "S", 0x0, "T"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@OGGMHJKA@?$AAT?$AAW?$AAL?$AA_?$AAP?$AAR?$AAO?$AAT?$AAE?$AAC?$AAT?$AA_?$AAK?$AAE?$AAY?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "P", 0x0, "R", 0x0, "O"
	DCB	0x0, "T", 0x0, "E", 0x0, "C", 0x0, "T", 0x0, "_", 0x0, "K"
	DCB	0x0, "E", 0x0, "Y", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@INKDNOIM@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAT?$AAS?$AA_?$AAH?$AAW?$AA_?$AAC?$AAO?$AAN?$AAD?$AAI?$AAT?$AAI?$AAO?$AAN?$AAS?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "S"
	DCB	0x0, "_", 0x0, "H", 0x0, "W", 0x0, "_", 0x0, "C", 0x0, "O"
	DCB	0x0, "N", 0x0, "D", 0x0, "I", 0x0, "T", 0x0, "I", 0x0, "O"
	DCB	0x0, "N", 0x0, "S", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@GFJKHABJ@?$AAT?$AAW?$AAL?$AA_?$AAP?$AA1?$AA_?$AAS?$AAW?$AA_?$AAE?$AAV?$AAE?$AAN?$AAT?$AAS?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "P", 0x0, "1", 0x0, "_"
	DCB	0x0, "S", 0x0, "W", 0x0, "_", 0x0, "E", 0x0, "V", 0x0, "E"
	DCB	0x0, "N", 0x0, "T", 0x0, "S", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@DNIENJDB@?$AAT?$AAW?$AAL?$AA_?$AAP?$AA2?$AA_?$AAS?$AAW?$AA_?$AAE?$AAV?$AAE?$AAN?$AAT?$AAS?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "P", 0x0, "2", 0x0, "_"
	DCB	0x0, "S", 0x0, "W", 0x0, "_", 0x0, "E", 0x0, "V", 0x0, "E"
	DCB	0x0, "N", 0x0, "T", 0x0, "S", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@LMKBLMBG@?$AAT?$AAW?$AAL?$AA_?$AAP?$AA3?$AA_?$AAS?$AAW?$AA_?$AAE?$AAV?$AAE?$AAN?$AAT?$AAS?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "P", 0x0, "3", 0x0, "_"
	DCB	0x0, "S", 0x0, "W", 0x0, "_", 0x0, "E", 0x0, "V", 0x0, "E"
	DCB	0x0, "N", 0x0, "T", 0x0, "S", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@ICBMDMK@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAT?$AAS?$AA_?$AAP?$AA1?$AA2?$AA3?$AA_?$AAS?$AAT?$AAA?$AAT?$AAE?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "S"
	DCB	0x0, "_", 0x0, "P", 0x0, "1", 0x0, "2", 0x0, "3", 0x0, "_"
	DCB	0x0, "S", 0x0, "T", 0x0, "A", 0x0, "T", 0x0, "E", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@HHOPMMMB@?$AAT?$AAW?$AAL?$AA_?$AAP?$AAB?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "P", 0x0, "B", 0x0, "_"
	DCB	0x0, "C", 0x0, "F", 0x0, "G", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@NCDFPHPD@?$AAT?$AAW?$AAL?$AA_?$AAP?$AAB?$AA_?$AAW?$AAO?$AAR?$AAD?$AA_?$AAM?$AAS?$AAB?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "P", 0x0, "B", 0x0, "_"
	DCB	0x0, "W", 0x0, "O", 0x0, "R", 0x0, "D", 0x0, "_", 0x0, "M"
	DCB	0x0, "S", 0x0, "B", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@BOJPPHGN@?$AAT?$AAW?$AAL?$AA_?$AAP?$AAB?$AA_?$AAW?$AAO?$AAR?$AAD?$AA_?$AAL?$AAS?$AAB?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "P", 0x0, "B", 0x0, "_"
	DCB	0x0, "W", 0x0, "O", 0x0, "R", 0x0, "D", 0x0, "_", 0x0, "L"
	DCB	0x0, "S", 0x0, "B", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@HCLKMPEO@?$AAT?$AAW?$AAL?$AA_?$AAR?$AAE?$AAS?$AAE?$AAR?$AAV?$AAE?$AAD?$AA_?$AAA?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "S"
	DCB	0x0, "E", 0x0, "R", 0x0, "V", 0x0, "E", 0x0, "D", 0x0, "_"
	DCB	0x0, "A", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@GAAPGAKA@?$AAT?$AAW?$AAL?$AA_?$AAR?$AAE?$AAS?$AAE?$AAR?$AAV?$AAE?$AAD?$AA_?$AAB?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "S"
	DCB	0x0, "E", 0x0, "R", 0x0, "V", 0x0, "E", 0x0, "D", 0x0, "_"
	DCB	0x0, "B", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@NILDAHMF@?$AAT?$AAW?$AAL?$AA_?$AAR?$AAE?$AAS?$AAE?$AAR?$AAV?$AAE?$AAD?$AA_?$AAC?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "S"
	DCB	0x0, "E", 0x0, "R", 0x0, "V", 0x0, "E", 0x0, "D", 0x0, "_"
	DCB	0x0, "C", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@EFGEDPHM@?$AAT?$AAW?$AAL?$AA_?$AAR?$AAE?$AAS?$AAE?$AAR?$AAV?$AAE?$AAD?$AA_?$AAD?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "S"
	DCB	0x0, "E", 0x0, "R", 0x0, "V", 0x0, "E", 0x0, "D", 0x0, "_"
	DCB	0x0, "D", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@PNNIFIBJ@?$AAT?$AAW?$AAL?$AA_?$AAR?$AAE?$AAS?$AAE?$AAR?$AAV?$AAE?$AAD?$AA_?$AAE?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "S"
	DCB	0x0, "E", 0x0, "R", 0x0, "V", 0x0, "E", 0x0, "D", 0x0, "_"
	DCB	0x0, "E", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@ILGKGKIJ@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAE?$AAQ?$AA_?$AAA?$AAD?$AAD?$AA_?$AAW?$AA2?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "S", 0x0, "E", 0x0, "Q"
	DCB	0x0, "_", 0x0, "A", 0x0, "D", 0x0, "D", 0x0, "_", 0x0, "W"
	DCB	0x0, "2", 0x0, "P", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@GJAKFDGK@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAE?$AAQ?$AA_?$AAA?$AAD?$AAD?$AA_?$AAP?$AA2?$AAA?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "S", 0x0, "E", 0x0, "Q"
	DCB	0x0, "_", 0x0, "A", 0x0, "D", 0x0, "D", 0x0, "_", 0x0, "P"
	DCB	0x0, "2", 0x0, "A", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@KMGJGKJM@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAE?$AAQ?$AA_?$AAA?$AAD?$AAD?$AA_?$AAA?$AA2?$AAW?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "S", 0x0, "E", 0x0, "Q"
	DCB	0x0, "_", 0x0, "A", 0x0, "D", 0x0, "D", 0x0, "_", 0x0, "A"
	DCB	0x0, "2", 0x0, "W", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@CDALPNML@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAE?$AAQ?$AA_?$AAA?$AAD?$AAD?$AA_?$AAA?$AA2?$AAS?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "S", 0x0, "E", 0x0, "Q"
	DCB	0x0, "_", 0x0, "A", 0x0, "D", 0x0, "D", 0x0, "_", 0x0, "A"
	DCB	0x0, "2", 0x0, "S", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@BGHKIACK@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAE?$AAQ?$AA_?$AAA?$AAD?$AAD?$AA_?$AAS?$AA2?$AAA?$AA1?$AA2?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "S", 0x0, "E", 0x0, "Q"
	DCB	0x0, "_", 0x0, "A", 0x0, "D", 0x0, "D", 0x0, "_", 0x0, "S"
	DCB	0x0, "2", 0x0, "A", 0x0, "1", 0x0, "2", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@GENJAGCF@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAE?$AAQ?$AA_?$AAA?$AAD?$AAD?$AA_?$AAS?$AA2?$AAA?$AA3?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "S", 0x0, "E", 0x0, "Q"
	DCB	0x0, "_", 0x0, "A", 0x0, "D", 0x0, "D", 0x0, "_", 0x0, "S"
	DCB	0x0, "2", 0x0, "A", 0x0, "3", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@EBEPJHLG@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAE?$AAQ?$AA_?$AAA?$AAD?$AAD?$AA_?$AAW?$AAA?$AAR?$AAM?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "S", 0x0, "E", 0x0, "Q"
	DCB	0x0, "_", 0x0, "A", 0x0, "D", 0x0, "D", 0x0, "_", 0x0, "W"
	DCB	0x0, "A", 0x0, "R", 0x0, "M", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@MNNGICG@?$AAT?$AAW?$AAL?$AA_?$AAM?$AAE?$AAM?$AAO?$AAR?$AAY?$AA_?$AAA?$AAD?$AAD?$AAR?$AAE?$AAS?$AAS?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "M", 0x0, "E", 0x0, "M"
	DCB	0x0, "O", 0x0, "R", 0x0, "Y", 0x0, "_", 0x0, "A", 0x0, "D"
	DCB	0x0, "D", 0x0, "R", 0x0, "E", 0x0, "S", 0x0, "S", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@LLNNKACL@?$AAT?$AAW?$AAL?$AA_?$AAM?$AAE?$AAM?$AAO?$AAR?$AAY?$AA_?$AAD?$AAA?$AAT?$AAA?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "M", 0x0, "E", 0x0, "M"
	DCB	0x0, "O", 0x0, "R", 0x0, "Y", 0x0, "_", 0x0, "D", 0x0, "A"
	DCB	0x0, "T", 0x0, "A", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@MJNCPNEK@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAC?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "_"
	DCB	0x0, "C", 0x0, "O", 0x0, "N", 0x0, "F", 0x0, "I", 0x0, "G"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@LHFJIPLF@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAC?$AA_?$AAD?$AAE?$AAT?$AAE?$AAC?$AAT?$AA1?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "_"
	DCB	0x0, "D", 0x0, "E", 0x0, "T", 0x0, "E", 0x0, "C", 0x0, "T"
	DCB	0x0, "1", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@KFOMCAFL@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAC?$AA_?$AAD?$AAE?$AAT?$AAE?$AAC?$AAT?$AA2?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "S", 0x0, "C", 0x0, "_"
	DCB	0x0, "D", 0x0, "E", 0x0, "T", 0x0, "E", 0x0, "C", 0x0, "T"
	DCB	0x0, "2", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@GBIDKBFL@?$AAT?$AAW?$AAL?$AA_?$AAW?$AAA?$AAT?$AAC?$AAH?$AAD?$AAO?$AAG?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "W", 0x0, "A", 0x0, "T"
	DCB	0x0, "C", 0x0, "H", 0x0, "D", 0x0, "O", 0x0, "G", 0x0, "_"
	DCB	0x0, "C", 0x0, "F", 0x0, "G", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@DHMCEIBG@?$AAT?$AAW?$AAL?$AA_?$AAI?$AAT?$AA_?$AAC?$AAH?$AAE?$AAC?$AAK?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "I", 0x0, "T", 0x0, "_"
	DCB	0x0, "C", 0x0, "H", 0x0, "E", 0x0, "C", 0x0, "K", 0x0, "_"
	DCB	0x0, "C", 0x0, "F", 0x0, "G", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@IAKLAHEP@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAB?$AAR?$AAA?$AAT?$AAO?$AAR?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "I", 0x0, "B"
	DCB	0x0, "R", 0x0, "A", 0x0, "T", 0x0, "O", 0x0, "R", 0x0, "_"
	DCB	0x0, "C", 0x0, "F", 0x0, "G", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@ENEBFMGG@?$AAT?$AAW?$AAL?$AA_?$AAD?$AAC?$AAD?$AAC?$AA_?$AAG?$AAL?$AAO?$AAB?$AAA?$AAL?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "D", 0x0, "C", 0x0, "D"
	DCB	0x0, "C", 0x0, "_", 0x0, "G", 0x0, "L", 0x0, "O", 0x0, "B"
	DCB	0x0, "A", 0x0, "L", 0x0, "_", 0x0, "C", 0x0, "F", 0x0, "G"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@KPDBKMGC@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAT?$AAR?$AAI?$AAM?$AA1?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "1", 0x0, "_", 0x0, "T", 0x0, "R", 0x0, "I", 0x0, "M"
	DCB	0x0, "1", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@LNIEADIM@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAT?$AAR?$AAI?$AAM?$AA2?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "1", 0x0, "_", 0x0, "T", 0x0, "R", 0x0, "I", 0x0, "M"
	DCB	0x0, "2", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@IGPJBIJA@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAT?$AAR?$AAI?$AAM?$AA1?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "2", 0x0, "_", 0x0, "T", 0x0, "R", 0x0, "I", 0x0, "M"
	DCB	0x0, "1", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@JEEMLHHO@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAT?$AAR?$AAI?$AAM?$AA2?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "2", 0x0, "_", 0x0, "T", 0x0, "R", 0x0, "I", 0x0, "M"
	DCB	0x0, "2", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@BGEAPMGL@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAT?$AAR?$AAI?$AAM?$AA1?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "I", 0x0, "O"
	DCB	0x0, "_", 0x0, "T", 0x0, "R", 0x0, "I", 0x0, "M", 0x0, "1"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@EPFFDIF@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAT?$AAR?$AAI?$AAM?$AA2?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "I", 0x0, "O"
	DCB	0x0, "_", 0x0, "T", 0x0, "R", 0x0, "I", 0x0, "M", 0x0, "2"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@GMNGOJLF@?$AAT?$AAW?$AAL?$AA_?$AAM?$AAI?$AAS?$AAC?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "M", 0x0, "I", 0x0, "S"
	DCB	0x0, "C", 0x0, "_", 0x0, "C", 0x0, "F", 0x0, "G", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@KOJFJKIL@?$AAT?$AAW?$AAL?$AA_?$AAL?$AAS?$AA_?$AAT?$AAS?$AAT?$AA_?$AAA?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "L", 0x0, "S", 0x0, "_"
	DCB	0x0, "T", 0x0, "S", 0x0, "T", 0x0, "_", 0x0, "A", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@LMCADFGF@?$AAT?$AAW?$AAL?$AA_?$AAL?$AAS?$AA_?$AAT?$AAS?$AAT?$AA_?$AAB?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "L", 0x0, "S", 0x0, "_"
	DCB	0x0, "T", 0x0, "S", 0x0, "T", 0x0, "_", 0x0, "B", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@EJMFCAA@?$AAT?$AAW?$AAL?$AA_?$AAL?$AAS?$AA_?$AAT?$AAS?$AAT?$AA_?$AAC?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "L", 0x0, "S", 0x0, "_"
	DCB	0x0, "T", 0x0, "S", 0x0, "T", 0x0, "_", 0x0, "C", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@JJELGKLJ@?$AAT?$AAW?$AAL?$AA_?$AAL?$AAS?$AA_?$AAT?$AAS?$AAT?$AA_?$AAD?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "L", 0x0, "S", 0x0, "_"
	DCB	0x0, "T", 0x0, "S", 0x0, "T", 0x0, "_", 0x0, "D", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@PADDDEAA@?$AAT?$AAW?$AAL?$AA_?$AAB?$AAB?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "B", 0x0, "B", 0x0, "_"
	DCB	0x0, "C", 0x0, "F", 0x0, "G", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@LBPLKNO@?$AAT?$AAW?$AAL?$AA_?$AAM?$AAI?$AAS?$AAC?$AA_?$AAT?$AAS?$AAT?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "M", 0x0, "I", 0x0, "S"
	DCB	0x0, "C", 0x0, "_", 0x0, "T", 0x0, "S", 0x0, "T", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@KJCFJAOL@?$AAT?$AAW?$AAL?$AA_?$AAT?$AAR?$AAI?$AAM?$AA1?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "T", 0x0, "R", 0x0, "I"
	DCB	0x0, "M", 0x0, "1", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@LLJADPAF@?$AAT?$AAW?$AAL?$AA_?$AAT?$AAR?$AAI?$AAM?$AA2?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "T", 0x0, "R", 0x0, "I"
	DCB	0x0, "M", 0x0, "2", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@NCNINGIK@?$AAT?$AAW?$AAL?$AA_?$AAD?$AAC?$AAD?$AAC?$AA_?$AAT?$AAI?$AAM?$AAE?$AAO?$AAU?$AAT?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "D", 0x0, "C", 0x0, "D"
	DCB	0x0, "C", 0x0, "_", 0x0, "T", 0x0, "I", 0x0, "M", 0x0, "E"
	DCB	0x0, "O", 0x0, "U", 0x0, "T", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@PKPKJOBA@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA1?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "A", 0x0, "U"
	DCB	0x0, "X", 0x0, "1", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V"
	DCB	0x0, "_", 0x0, "G", 0x0, "R", 0x0, "P", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@LNBEAMJI@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA1?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "A", 0x0, "U"
	DCB	0x0, "X", 0x0, "1", 0x0, "_", 0x0, "T", 0x0, "Y", 0x0, "P"
	DCB	0x0, "E", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@NFKDFMOF@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA1?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "A", 0x0, "U"
	DCB	0x0, "X", 0x0, "1", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "M"
	DCB	0x0, "A", 0x0, "P", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@OLGOOHKM@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA1?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "A", 0x0, "U"
	DCB	0x0, "X", 0x0, "1", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "D"
	DCB	0x0, "I", 0x0, "C", 0x0, "A", 0x0, "T", 0x0, "E", 0x0, "D"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@FFFDNDNK@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA2?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "A", 0x0, "U"
	DCB	0x0, "X", 0x0, "2", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V"
	DCB	0x0, "_", 0x0, "G", 0x0, "R", 0x0, "P", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@MBHFCJED@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA2?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "A", 0x0, "U"
	DCB	0x0, "X", 0x0, "2", 0x0, "_", 0x0, "T", 0x0, "Y", 0x0, "P"
	DCB	0x0, "E", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@PMGLOIBH@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA2?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "A", 0x0, "U"
	DCB	0x0, "X", 0x0, "2", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "M"
	DCB	0x0, "A", 0x0, "P", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@LDHAEOIE@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA2?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "A", 0x0, "U"
	DCB	0x0, "X", 0x0, "2", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "D"
	DCB	0x0, "I", 0x0, "C", 0x0, "A", 0x0, "T", 0x0, "E", 0x0, "D"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@DADEOIJM@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA3?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "A", 0x0, "U"
	DCB	0x0, "X", 0x0, "3", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V"
	DCB	0x0, "_", 0x0, "G", 0x0, "R", 0x0, "P", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@FMHKMIDF@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA3?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "A", 0x0, "U"
	DCB	0x0, "X", 0x0, "3", 0x0, "_", 0x0, "T", 0x0, "Y", 0x0, "P"
	DCB	0x0, "E", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@FCADHJIG@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA3?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "A", 0x0, "U"
	DCB	0x0, "X", 0x0, "3", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "M"
	DCB	0x0, "A", 0x0, "P", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@DCFFCLKD@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA3?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "A", 0x0, "U"
	DCB	0x0, "X", 0x0, "3", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "D"
	DCB	0x0, "I", 0x0, "C", 0x0, "A", 0x0, "T", 0x0, "E", 0x0, "D"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@NBHAEOAP@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA4?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "A", 0x0, "U"
	DCB	0x0, "X", 0x0, "4", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V"
	DCB	0x0, "_", 0x0, "G", 0x0, "R", 0x0, "P", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@DJLHGCPF@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA4?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "A", 0x0, "U"
	DCB	0x0, "X", 0x0, "4", 0x0, "_", 0x0, "T", 0x0, "Y", 0x0, "P"
	DCB	0x0, "E", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@KPPKIBPD@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA4?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "A", 0x0, "U"
	DCB	0x0, "X", 0x0, "4", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "M"
	DCB	0x0, "A", 0x0, "P", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@DENBMNE@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA4?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "A", 0x0, "U"
	DCB	0x0, "X", 0x0, "4", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "D"
	DCB	0x0, "I", 0x0, "C", 0x0, "A", 0x0, "T", 0x0, "E", 0x0, "D"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@BONKHPA@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAM?$AAM?$AAC?$AA1?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "M", 0x0, "M"
	DCB	0x0, "C", 0x0, "1", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V"
	DCB	0x0, "_", 0x0, "G", 0x0, "R", 0x0, "P", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@OLCMNGEE@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAM?$AAM?$AAC?$AA1?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "M", 0x0, "M"
	DCB	0x0, "C", 0x0, "1", 0x0, "_", 0x0, "T", 0x0, "Y", 0x0, "P"
	DCB	0x0, "E", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@JOCILLAE@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAM?$AAM?$AAC?$AA1?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "M", 0x0, "M"
	DCB	0x0, "C", 0x0, "1", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "M"
	DCB	0x0, "A", 0x0, "P", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@DJEHNHIJ@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAM?$AAM?$AAC?$AA1?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "M", 0x0, "M"
	DCB	0x0, "C", 0x0, "1", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "D"
	DCB	0x0, "I", 0x0, "C", 0x0, "A", 0x0, "T", 0x0, "E", 0x0, "D"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@KOEEOKDK@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAM?$AAM?$AAC?$AA2?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "M", 0x0, "M"
	DCB	0x0, "C", 0x0, "2", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V"
	DCB	0x0, "_", 0x0, "G", 0x0, "R", 0x0, "P", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@JHENPDJP@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAM?$AAM?$AAC?$AA2?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "M", 0x0, "M"
	DCB	0x0, "C", 0x0, "2", 0x0, "_", 0x0, "T", 0x0, "Y", 0x0, "P"
	DCB	0x0, "E", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@LHOAAPPG@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAM?$AAM?$AAC?$AA2?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "M", 0x0, "M"
	DCB	0x0, "C", 0x0, "2", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "M"
	DCB	0x0, "A", 0x0, "P", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@GBFJHOKB@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAM?$AAM?$AAC?$AA2?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "M", 0x0, "M"
	DCB	0x0, "C", 0x0, "2", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "D"
	DCB	0x0, "I", 0x0, "C", 0x0, "A", 0x0, "T", 0x0, "E", 0x0, "D"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@GOKAJMBK@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAP?$AAL?$AAL?$AA1?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "P", 0x0, "L"
	DCB	0x0, "L", 0x0, "1", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V"
	DCB	0x0, "_", 0x0, "G", 0x0, "R", 0x0, "P", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@NMADKKBH@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAP?$AAL?$AAL?$AA1?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "P", 0x0, "L"
	DCB	0x0, "L", 0x0, "1", 0x0, "_", 0x0, "T", 0x0, "Y", 0x0, "P"
	DCB	0x0, "E", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@FGANLPKL@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAP?$AAL?$AAL?$AA1?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "P", 0x0, "L"
	DCB	0x0, "L", 0x0, "1", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "M"
	DCB	0x0, "A", 0x0, "P", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@DAGBDBCF@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAP?$AAL?$AAL?$AA1?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "P", 0x0, "L"
	DCB	0x0, "L", 0x0, "1", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "D"
	DCB	0x0, "I", 0x0, "C", 0x0, "A", 0x0, "T", 0x0, "E", 0x0, "D"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@MBAJNBNA@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAP?$AAL?$AAL?$AA2?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "P", 0x0, "L"
	DCB	0x0, "L", 0x0, "2", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V"
	DCB	0x0, "_", 0x0, "G", 0x0, "R", 0x0, "P", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@KAGCIPMM@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAP?$AAL?$AAL?$AA2?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "P", 0x0, "L"
	DCB	0x0, "L", 0x0, "2", 0x0, "_", 0x0, "T", 0x0, "Y", 0x0, "P"
	DCB	0x0, "E", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@HPMFALFJ@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAP?$AAL?$AAL?$AA2?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "P", 0x0, "L"
	DCB	0x0, "L", 0x0, "2", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "M"
	DCB	0x0, "A", 0x0, "P", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@GIHPJIAN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAP?$AAL?$AAL?$AA2?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "P", 0x0, "L"
	DCB	0x0, "L", 0x0, "2", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "D"
	DCB	0x0, "I", 0x0, "C", 0x0, "A", 0x0, "T", 0x0, "E", 0x0, "D"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@DJMPGIDN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAS?$AAI?$AAM?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "S", 0x0, "I"
	DCB	0x0, "M", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "_"
	DCB	0x0, "G", 0x0, "R", 0x0, "P", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@KFAJDHDF@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAS?$AAI?$AAM?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "S", 0x0, "I"
	DCB	0x0, "M", 0x0, "_", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@HPABGPHI@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAS?$AAI?$AAM?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "S", 0x0, "I"
	DCB	0x0, "M", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "M", 0x0, "A"
	DCB	0x0, "P", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@KICDMOJB@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAS?$AAI?$AAM?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "S", 0x0, "I"
	DCB	0x0, "M", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "D", 0x0, "I"
	DCB	0x0, "C", 0x0, "A", 0x0, "T", 0x0, "E", 0x0, "D", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@NHAHENBA@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAA?$AAC?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "A"
	DCB	0x0, "C", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "_"
	DCB	0x0, "G", 0x0, "R", 0x0, "P", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@NCAMKLIG@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAA?$AAC?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "A"
	DCB	0x0, "C", 0x0, "_", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@EJFADKGJ@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAA?$AAC?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "A"
	DCB	0x0, "C", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "M", 0x0, "A"
	DCB	0x0, "P", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@IAGMKPEA@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAA?$AAC?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "A"
	DCB	0x0, "C", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "D", 0x0, "I"
	DCB	0x0, "C", 0x0, "A", 0x0, "T", 0x0, "E", 0x0, "D", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@PDAFKBJG@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAA?$AAN?$AAA?$AA1?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "I", 0x0, "N"
	DCB	0x0, "T", 0x0, "A", 0x0, "N", 0x0, "A", 0x0, "1", 0x0, "_"
	DCB	0x0, "D", 0x0, "E", 0x0, "V", 0x0, "_", 0x0, "G", 0x0, "R"
	DCB	0x0, "P", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@BOJHFIFH@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAA?$AAN?$AAA?$AA1?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "I", 0x0, "N"
	DCB	0x0, "T", 0x0, "A", 0x0, "N", 0x0, "A", 0x0, "1", 0x0, "_"
	DCB	0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@PFMHKBAK@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAA?$AAN?$AAA?$AA1?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "I", 0x0, "N"
	DCB	0x0, "T", 0x0, "A", 0x0, "N", 0x0, "A", 0x0, "1", 0x0, "_"
	DCB	0x0, "R", 0x0, "E", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@OGJDOJDA@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAA?$AAN?$AAA?$AA1?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "I", 0x0, "N"
	DCB	0x0, "T", 0x0, "A", 0x0, "N", 0x0, "A", 0x0, "1", 0x0, "_"
	DCB	0x0, "D", 0x0, "E", 0x0, "D", 0x0, "I", 0x0, "C", 0x0, "A"
	DCB	0x0, "T", 0x0, "E", 0x0, "D", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@FMKMOMFM@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAA?$AAN?$AAA?$AA2?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "I", 0x0, "N"
	DCB	0x0, "T", 0x0, "A", 0x0, "N", 0x0, "A", 0x0, "2", 0x0, "_"
	DCB	0x0, "D", 0x0, "E", 0x0, "V", 0x0, "_", 0x0, "G", 0x0, "R"
	DCB	0x0, "P", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@GCPGHNIM@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAA?$AAN?$AAA?$AA2?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "I", 0x0, "N"
	DCB	0x0, "T", 0x0, "A", 0x0, "N", 0x0, "A", 0x0, "2", 0x0, "_"
	DCB	0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@NMAPBFPI@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAA?$AAN?$AAA?$AA2?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "I", 0x0, "N"
	DCB	0x0, "T", 0x0, "A", 0x0, "N", 0x0, "A", 0x0, "2", 0x0, "_"
	DCB	0x0, "R", 0x0, "E", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@LOINEABI@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAA?$AAN?$AAA?$AA2?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "I", 0x0, "N"
	DCB	0x0, "T", 0x0, "A", 0x0, "N", 0x0, "A", 0x0, "2", 0x0, "_"
	DCB	0x0, "D", 0x0, "E", 0x0, "D", 0x0, "I", 0x0, "C", 0x0, "A"
	DCB	0x0, "T", 0x0, "E", 0x0, "D", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@LPFEGHP@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAD?$AAI?$AAG?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "I", 0x0, "N"
	DCB	0x0, "T", 0x0, "D", 0x0, "I", 0x0, "G", 0x0, "_", 0x0, "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "_", 0x0, "G", 0x0, "R", 0x0, "P"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@CNBGNCHL@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAD?$AAI?$AAG?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "I", 0x0, "N"
	DCB	0x0, "T", 0x0, "D", 0x0, "I", 0x0, "G", 0x0, "_", 0x0, "T"
	DCB	0x0, "Y", 0x0, "P", 0x0, "E", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@MBJLJDBL@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAD?$AAI?$AAG?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "I", 0x0, "N"
	DCB	0x0, "T", 0x0, "D", 0x0, "I", 0x0, "G", 0x0, "_", 0x0, "R"
	DCB	0x0, "E", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@EGJDLKDE@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAD?$AAI?$AAG?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "I", 0x0, "N"
	DCB	0x0, "T", 0x0, "D", 0x0, "I", 0x0, "G", 0x0, "_", 0x0, "D"
	DCB	0x0, "E", 0x0, "D", 0x0, "I", 0x0, "C", 0x0, "A", 0x0, "T"
	DCB	0x0, "E", 0x0, "D", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@MKPLFMB@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "I", 0x0, "O"
	DCB	0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "_", 0x0, "G"
	DCB	0x0, "R", 0x0, "P", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@JAOKDEOG@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "I", 0x0, "O"
	DCB	0x0, "_", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@EMBNJNPN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "I", 0x0, "O"
	DCB	0x0, "_", 0x0, "R", 0x0, "E", 0x0, "M", 0x0, "A", 0x0, "P"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@OIGPHMKN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "I", 0x0, "O"
	DCB	0x0, "_", 0x0, "C", 0x0, "F", 0x0, "G", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@OMFONJDN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAM?$AAI?$AAS?$AAC?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "I", 0x0, "O"
	DCB	0x0, "_", 0x0, "M", 0x0, "I", 0x0, "S", 0x0, "C", 0x0, "_"
	DCB	0x0, "C", 0x0, "F", 0x0, "G", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@BKJABIEK@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAT?$AAE?$AAS?$AAT?$AA1?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "I", 0x0, "O"
	DCB	0x0, "_", 0x0, "T", 0x0, "E", 0x0, "S", 0x0, "T", 0x0, "1"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@ICFLHKE@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAT?$AAE?$AAS?$AAT?$AA2?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "I", 0x0, "O"
	DCB	0x0, "_", 0x0, "T", 0x0, "E", 0x0, "S", 0x0, "T", 0x0, "2"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@GDLJGNJN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAO?$AAS?$AAC?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "I", 0x0, "O"
	DCB	0x0, "_", 0x0, "O", 0x0, "S", 0x0, "C", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@CJBJDONK@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAR?$AAE?$AAS?$AAE?$AAR?$AAV?$AAE?$AAD?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "I", 0x0, "O"
	DCB	0x0, "_", 0x0, "R", 0x0, "E", 0x0, "S", 0x0, "E", 0x0, "R"
	DCB	0x0, "V", 0x0, "E", 0x0, "D", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@CLMMCELB@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAV?$AAS?$AAE?$AAL?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "I", 0x0, "O"
	DCB	0x0, "_", 0x0, "V", 0x0, "S", 0x0, "E", 0x0, "L", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@JJICJHGE@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "1", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "_"
	DCB	0x0, "G", 0x0, "R", 0x0, "P", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@KDFEABHI@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "1", 0x0, "_", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@PFGMMNPE@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "1", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "M", 0x0, "A"
	DCB	0x0, "P", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@HNOGANFN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "1", 0x0, "_", 0x0, "C", 0x0, "F", 0x0, "G", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@OKEOEFFI@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAM?$AAI?$AAS?$AAC?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "1", 0x0, "_", 0x0, "M", 0x0, "I", 0x0, "S", 0x0, "C"
	DCB	0x0, "_", 0x0, "C", 0x0, "F", 0x0, "G", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@KDOBEIED@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAT?$AAE?$AAS?$AAT?$AA1?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "1", 0x0, "_", 0x0, "T", 0x0, "E", 0x0, "S", 0x0, "T"
	DCB	0x0, "1", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@LBFEOHKN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAT?$AAE?$AAS?$AAT?$AA2?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "1", 0x0, "_", 0x0, "T", 0x0, "E", 0x0, "S", 0x0, "T"
	DCB	0x0, "2", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@PGDABMGN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAO?$AAS?$AAC?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "1", 0x0, "_", 0x0, "O", 0x0, "S", 0x0, "C", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@CPAJKCLP@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAR?$AAE?$AAS?$AAE?$AAR?$AAV?$AAE?$AAD?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "1", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "S", 0x0, "E"
	DCB	0x0, "R", 0x0, "V", 0x0, "E", 0x0, "D", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@BIHCBBCP@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAV?$AAS?$AAE?$AAL?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "1", 0x0, "_", 0x0, "V", 0x0, "S", 0x0, "E", 0x0, "L"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@NHMCPBHO@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAV?$AAM?$AAO?$AAD?$AAE?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "1", 0x0, "_", 0x0, "V", 0x0, "M", 0x0, "O", 0x0, "D"
	DCB	0x0, "E", 0x0, "_", 0x0, "C", 0x0, "F", 0x0, "G", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@JCPLDMFI@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAV?$AAF?$AAL?$AAO?$AAO?$AAR?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "1", 0x0, "_", 0x0, "V", 0x0, "F", 0x0, "L", 0x0, "O"
	DCB	0x0, "O", 0x0, "R", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@DOEFACFE@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAV?$AAR?$AAO?$AAO?$AAF?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "1", 0x0, "_", 0x0, "V", 0x0, "R", 0x0, "O", 0x0, "O"
	DCB	0x0, "F", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@OOFBDLFF@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAS?$AAT?$AAE?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "1", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "E", 0x0, "P"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@DGCLNKKO@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "2", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "_"
	DCB	0x0, "G", 0x0, "R", 0x0, "P", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@NPDFCEKD@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "2", 0x0, "_", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@NMKEHJAG@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "2", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "M", 0x0, "A"
	DCB	0x0, "P", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@KHINPKN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "2", 0x0, "_", 0x0, "C", 0x0, "F", 0x0, "G", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@NDDGOIBI@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAM?$AAI?$AAS?$AAC?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "2", 0x0, "_", 0x0, "M", 0x0, "I", 0x0, "S", 0x0, "C"
	DCB	0x0, "_", 0x0, "C", 0x0, "F", 0x0, "G", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@IKCJPMLB@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAT?$AAE?$AAS?$AAT?$AA1?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "2", 0x0, "_", 0x0, "T", 0x0, "E", 0x0, "S", 0x0, "T"
	DCB	0x0, "1", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@JIJMFDFP@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAT?$AAE?$AAS?$AAT?$AA2?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "2", 0x0, "_", 0x0, "T", 0x0, "E", 0x0, "S", 0x0, "T"
	DCB	0x0, "2", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@IBKOMOJN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAO?$AAS?$AAC?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "2", 0x0, "_", 0x0, "O", 0x0, "S", 0x0, "C", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@BGHBAPPP@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAR?$AAE?$AAS?$AAE?$AAR?$AAV?$AAE?$AAD?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "2", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "S", 0x0, "E"
	DCB	0x0, "R", 0x0, "V", 0x0, "E", 0x0, "D", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@GEBDDEPE@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAV?$AAS?$AAE?$AAL?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "2", 0x0, "_", 0x0, "V", 0x0, "S", 0x0, "E", 0x0, "L"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@IPNMFIFG@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAV?$AAM?$AAO?$AAD?$AAE?$AA_?$AAC?$AAF?$AAG?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "2", 0x0, "_", 0x0, "V", 0x0, "M", 0x0, "O", 0x0, "D"
	DCB	0x0, "E", 0x0, "_", 0x0, "C", 0x0, "F", 0x0, "G", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@HIHNOBDK@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAV?$AAF?$AAL?$AAO?$AAO?$AAR?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "2", 0x0, "_", 0x0, "V", 0x0, "F", 0x0, "L", 0x0, "O"
	DCB	0x0, "O", 0x0, "R", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@BHINLGKG@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAV?$AAR?$AAO?$AAO?$AAF?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "2", 0x0, "_", 0x0, "V", 0x0, "R", 0x0, "O", 0x0, "O"
	DCB	0x0, "F", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BM@JCDABOIO@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAS?$AAT?$AAE?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "D", 0x0, "D"
	DCB	0x0, "2", 0x0, "_", 0x0, "S", 0x0, "T", 0x0, "E", 0x0, "P"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@JNBKBPL@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA1?$AAV?$AA5?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "1", 0x0, "V", 0x0, "5", 0x0, "_", 0x0, "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "_", 0x0, "G", 0x0, "R", 0x0, "P"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@JIPAHJDF@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA1?$AAV?$AA5?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "1", 0x0, "V", 0x0, "5", 0x0, "_", 0x0, "T"
	DCB	0x0, "Y", 0x0, "P", 0x0, "E", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@OOGFDOBG@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA1?$AAV?$AA5?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "1", 0x0, "V", 0x0, "5", 0x0, "_", 0x0, "R"
	DCB	0x0, "E", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@LPIAKHFG@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA1?$AAV?$AA8?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "1", 0x0, "V", 0x0, "8", 0x0, "_", 0x0, "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "_", 0x0, "G", 0x0, "R", 0x0, "P"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@CPAKAJGO@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA1?$AAV?$AA8?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "1", 0x0, "V", 0x0, "8", 0x0, "_", 0x0, "T"
	DCB	0x0, "Y", 0x0, "P", 0x0, "E", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@OHCPHMEP@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA1?$AAV?$AA8?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "1", 0x0, "V", 0x0, "8", 0x0, "_", 0x0, "R"
	DCB	0x0, "E", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@JOAHIGKN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA3?$AAV?$AA1?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "3", 0x0, "V", 0x0, "1", 0x0, "_", 0x0, "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "_", 0x0, "G", 0x0, "R", 0x0, "P"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@IEIIJNKN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA3?$AAV?$AA1?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "3", 0x0, "V", 0x0, "1", 0x0, "_", 0x0, "T"
	DCB	0x0, "Y", 0x0, "P", 0x0, "E", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@PAJKAEBN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA3?$AAV?$AA1?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "3", 0x0, "V", 0x0, "1", 0x0, "_", 0x0, "R"
	DCB	0x0, "E", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@MOBGKOKO@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AAC?$AAP?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "C", 0x0, "P", 0x0, "_", 0x0, "D", 0x0, "E"
	DCB	0x0, "V", 0x0, "_", 0x0, "G", 0x0, "R", 0x0, "P", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@JHNNABBA@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AAC?$AAP?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "C", 0x0, "P", 0x0, "_", 0x0, "T", 0x0, "Y"
	DCB	0x0, "P", 0x0, "E", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@FIEIBINC@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AAC?$AAP?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "C", 0x0, "P", 0x0, "_", 0x0, "R", 0x0, "E"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@ENCCLMKD@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA1?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "D", 0x0, "I"
	DCB	0x0, "C", 0x0, "A", 0x0, "T", 0x0, "E", 0x0, "D", 0x0, "1"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@FPJHBDEN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA2?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "V", 0x0, "U", 0x0, "S"
	DCB	0x0, "B", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "D", 0x0, "I"
	DCB	0x0, "C", 0x0, "A", 0x0, "T", 0x0, "E", 0x0, "D", 0x0, "2"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@JIIJPPBA@?$AAT?$AAW?$AAL?$AA_?$AAR?$AAE?$AAG?$AAE?$AAN?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "G"
	DCB	0x0, "E", 0x0, "N", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V"
	DCB	0x0, "_", 0x0, "G", 0x0, "R", 0x0, "P", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@NHLJDICO@?$AAT?$AAW?$AAL?$AA_?$AAR?$AAE?$AAG?$AAE?$AAN?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "G"
	DCB	0x0, "E", 0x0, "N", 0x0, "_", 0x0, "T", 0x0, "Y", 0x0, "P"
	DCB	0x0, "E", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@EGIIMLMD@?$AAT?$AAW?$AAL?$AA_?$AAR?$AAE?$AAG?$AAE?$AAN?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "G"
	DCB	0x0, "E", 0x0, "N", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "M"
	DCB	0x0, "A", 0x0, "P", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@MDBMJOFI@?$AAT?$AAW?$AAL?$AA_?$AAN?$AAR?$AAE?$AAS?$AAP?$AAW?$AAR?$AAO?$AAN?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "N", 0x0, "R", 0x0, "E"
	DCB	0x0, "S", 0x0, "P", 0x0, "W", 0x0, "R", 0x0, "O", 0x0, "N"
	DCB	0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "_", 0x0, "G"
	DCB	0x0, "R", 0x0, "P", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@FILDJJNN@?$AAT?$AAW?$AAL?$AA_?$AAN?$AAR?$AAE?$AAS?$AAP?$AAW?$AAR?$AAO?$AAN?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "N", 0x0, "R", 0x0, "E"
	DCB	0x0, "S", 0x0, "P", 0x0, "W", 0x0, "R", 0x0, "O", 0x0, "N"
	DCB	0x0, "_", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@NIMIGFMJ@?$AAT?$AAW?$AAL?$AA_?$AAN?$AAR?$AAE?$AAS?$AAP?$AAW?$AAR?$AAO?$AAN?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "N", 0x0, "R", 0x0, "E"
	DCB	0x0, "S", 0x0, "P", 0x0, "W", 0x0, "R", 0x0, "O", 0x0, "N"
	DCB	0x0, "_", 0x0, "R", 0x0, "E", 0x0, "M", 0x0, "A", 0x0, "P"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@ILFMPKBH@?$AAT?$AAW?$AAL?$AA_?$AAC?$AAL?$AAK?$AAE?$AAN?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "C", 0x0, "L", 0x0, "K"
	DCB	0x0, "E", 0x0, "N", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V"
	DCB	0x0, "_", 0x0, "G", 0x0, "R", 0x0, "P", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@INCDICFB@?$AAT?$AAW?$AAL?$AA_?$AAC?$AAL?$AAK?$AAE?$AAN?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "C", 0x0, "L", 0x0, "K"
	DCB	0x0, "E", 0x0, "N", 0x0, "_", 0x0, "T", 0x0, "Y", 0x0, "P"
	DCB	0x0, "E", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@MFJLKOPC@?$AAT?$AAW?$AAL?$AA_?$AAC?$AAL?$AAK?$AAE?$AAN?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "C", 0x0, "L", 0x0, "K"
	DCB	0x0, "E", 0x0, "N", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "M"
	DCB	0x0, "A", 0x0, "P", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@FKLOADHF@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAY?$AAS?$AAE?$AAN?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "S", 0x0, "Y", 0x0, "S"
	DCB	0x0, "E", 0x0, "N", 0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V"
	DCB	0x0, "_", 0x0, "G", 0x0, "R", 0x0, "P", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@NGGKEBDO@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAY?$AAS?$AAE?$AAN?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "S", 0x0, "Y", 0x0, "S"
	DCB	0x0, "E", 0x0, "N", 0x0, "_", 0x0, "T", 0x0, "Y", 0x0, "P"
	DCB	0x0, "E", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@CFJDBBNJ@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAY?$AAS?$AAE?$AAN?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "S", 0x0, "Y", 0x0, "S"
	DCB	0x0, "E", 0x0, "N", 0x0, "_", 0x0, "R", 0x0, "E", 0x0, "M"
	DCB	0x0, "A", 0x0, "P", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@HKKHEFBH@?$AAT?$AAW?$AAL?$AA_?$AAH?$AAF?$AAC?$AAL?$AAK?$AAO?$AAU?$AAT?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "H", 0x0, "F", 0x0, "C"
	DCB	0x0, "L", 0x0, "K", 0x0, "O", 0x0, "U", 0x0, "T", 0x0, "_"
	DCB	0x0, "D", 0x0, "E", 0x0, "V", 0x0, "_", 0x0, "G", 0x0, "R"
	DCB	0x0, "P", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@CIIEBHLO@?$AAT?$AAW?$AAL?$AA_?$AAH?$AAF?$AAC?$AAL?$AAK?$AAO?$AAU?$AAT?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "H", 0x0, "F", 0x0, "C"
	DCB	0x0, "L", 0x0, "K", 0x0, "O", 0x0, "U", 0x0, "T", 0x0, "_"
	DCB	0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@JMBIIDLN@?$AAT?$AAW?$AAL?$AA_?$AAH?$AAF?$AAC?$AAL?$AAK?$AAO?$AAU?$AAT?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "H", 0x0, "F", 0x0, "C"
	DCB	0x0, "L", 0x0, "K", 0x0, "O", 0x0, "U", 0x0, "T", 0x0, "_"
	DCB	0x0, "R", 0x0, "E", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@NLHAPHPH@?$AAT?$AAW?$AAL?$AA_?$AA3?$AA2?$AAK?$AAC?$AAL?$AAK?$AAO?$AAU?$AAT?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "3", 0x0, "2", 0x0, "K"
	DCB	0x0, "C", 0x0, "L", 0x0, "K", 0x0, "O", 0x0, "U", 0x0, "T"
	DCB	0x0, "_", 0x0, "D", 0x0, "E", 0x0, "V", 0x0, "_", 0x0, "G"
	DCB	0x0, "R", 0x0, "P", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@GOHDKJFC@?$AAT?$AAW?$AAL?$AA_?$AA3?$AA2?$AAK?$AAC?$AAL?$AAK?$AAO?$AAU?$AAT?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "3", 0x0, "2", 0x0, "K"
	DCB	0x0, "C", 0x0, "L", 0x0, "K", 0x0, "O", 0x0, "U", 0x0, "T"
	DCB	0x0, "_", 0x0, "T", 0x0, "Y", 0x0, "P", 0x0, "E", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@ECAKOHCB@?$AAT?$AAW?$AAL?$AA_?$AA3?$AA2?$AAK?$AAC?$AAL?$AAK?$AAO?$AAU?$AAT?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "3", 0x0, "2", 0x0, "K"
	DCB	0x0, "C", 0x0, "L", 0x0, "K", 0x0, "O", 0x0, "U", 0x0, "T"
	DCB	0x0, "_", 0x0, "R", 0x0, "E", 0x0, "M", 0x0, "A", 0x0, "P"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@IKLKMIKH@?$AAT?$AAW?$AAL?$AA_?$AAT?$AAR?$AAI?$AAT?$AAO?$AAN?$AA_?$AAR?$AAE?$AAS?$AAE?$AAT?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "T", 0x0, "R", 0x0, "I"
	DCB	0x0, "T", 0x0, "O", 0x0, "N", 0x0, "_", 0x0, "R", 0x0, "E"
	DCB	0x0, "S", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "D", 0x0, "E"
	DCB	0x0, "V", 0x0, "_", 0x0, "G", 0x0, "R", 0x0, "P", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@LCHEGJFI@?$AAT?$AAW?$AAL?$AA_?$AAT?$AAR?$AAI?$AAT?$AAO?$AAN?$AA_?$AAR?$AAE?$AAS?$AAE?$AAT?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "T", 0x0, "R", 0x0, "I"
	DCB	0x0, "T", 0x0, "O", 0x0, "N", 0x0, "_", 0x0, "R", 0x0, "E"
	DCB	0x0, "S", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "T", 0x0, "Y"
	DCB	0x0, "P", 0x0, "E", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@CDIBBBBM@?$AAT?$AAW?$AAL?$AA_?$AAT?$AAR?$AAI?$AAT?$AAO?$AAN?$AA_?$AAR?$AAE?$AAS?$AAE?$AAT?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "T", 0x0, "R", 0x0, "I"
	DCB	0x0, "T", 0x0, "O", 0x0, "N", 0x0, "_", 0x0, "R", 0x0, "E"
	DCB	0x0, "S", 0x0, "E", 0x0, "T", 0x0, "_", 0x0, "R", 0x0, "E"
	DCB	0x0, "M", 0x0, "A", 0x0, "P", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@KFDKGHKP@?$AAT?$AAW?$AAL?$AA_?$AAM?$AAA?$AAI?$AAN?$AAR?$AAE?$AAF?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "M", 0x0, "A", 0x0, "I"
	DCB	0x0, "N", 0x0, "R", 0x0, "E", 0x0, "F", 0x0, "_", 0x0, "D"
	DCB	0x0, "E", 0x0, "V", 0x0, "_", 0x0, "G", 0x0, "R", 0x0, "P"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@DKMPJCIB@?$AAT?$AAW?$AAL?$AA_?$AAM?$AAA?$AAI?$AAN?$AAR?$AAE?$AAF?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "M", 0x0, "A", 0x0, "I"
	DCB	0x0, "N", 0x0, "R", 0x0, "E", 0x0, "F", 0x0, "_", 0x0, "T"
	DCB	0x0, "Y", 0x0, "P", 0x0, "E", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@FJBEMMGF@?$AAT?$AAW?$AAL?$AA_?$AAM?$AAA?$AAI?$AAN?$AAR?$AAE?$AAF?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@| DCB "T"
	DCB	0x0, "W", 0x0, "L", 0x0, "_", 0x0, "M", 0x0, "A", 0x0, "I"
	DCB	0x0, "N", 0x0, "R", 0x0, "E", 0x0, "F", 0x0, "_", 0x0, "R"
	DCB	0x0, "E", 0x0, "M", 0x0, "A", 0x0, "P", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |TwlDump| PROC

; 536  : {

  00000		 |$LN5@TwlDump|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M49814|
  00004	e1a04000	 mov         r4, r0

; 537  :     SHOW_T2_REG(hTWL, TWL_CFG_P1_TRANSITION);

  00008	e59f2eac	 ldr         r2, [pc, #0xEAC]
  0000c	e3a05803	 mov         r5, #3, 16
  00010	e3851036	 orr         r1, r5, #0x36
  00014	eb000000	 bl          ShowT2Reg

; 538  :     SHOW_T2_REG(hTWL, TWL_CFG_P2_TRANSITION);

  00018	e59f2e98	 ldr         r2, [pc, #0xE98]
  0001c	e3851037	 orr         r1, r5, #0x37
  00020	e1a00004	 mov         r0, r4
  00024	eb000000	 bl          ShowT2Reg

; 539  :     SHOW_T2_REG(hTWL, TWL_CFG_P3_TRANSITION);

  00028	e59f2e84	 ldr         r2, [pc, #0xE84]
  0002c	e3851038	 orr         r1, r5, #0x38
  00030	e1a00004	 mov         r0, r4
  00034	eb000000	 bl          ShowT2Reg

; 540  :     SHOW_T2_REG(hTWL, TWL_CFG_P123_TRANSITION);

  00038	e59f2e70	 ldr         r2, [pc, #0xE70]
  0003c	e3851039	 orr         r1, r5, #0x39
  00040	e1a00004	 mov         r0, r4
  00044	eb000000	 bl          ShowT2Reg

; 541  :     SHOW_T2_REG(hTWL, TWL_STS_BOOT);

  00048	e59f2e5c	 ldr         r2, [pc, #0xE5C]
  0004c	e385103a	 orr         r1, r5, #0x3A
  00050	e1a00004	 mov         r0, r4
  00054	eb000000	 bl          ShowT2Reg

; 542  :     SHOW_T2_REG(hTWL, TWL_CFG_BOOT);

  00058	e59f2e48	 ldr         r2, [pc, #0xE48]
  0005c	e385103b	 orr         r1, r5, #0x3B
  00060	e1a00004	 mov         r0, r4
  00064	eb000000	 bl          ShowT2Reg

; 543  :     SHOW_T2_REG(hTWL, TWL_SHUNDAN);

  00068	e59f2e34	 ldr         r2, [pc, #0xE34]
  0006c	e385103c	 orr         r1, r5, #0x3C
  00070	e1a00004	 mov         r0, r4
  00074	eb000000	 bl          ShowT2Reg

; 544  :     SHOW_T2_REG(hTWL, TWL_BOOT_BCI);

  00078	e59f2e20	 ldr         r2, [pc, #0xE20]
  0007c	e385103d	 orr         r1, r5, #0x3D
  00080	e1a00004	 mov         r0, r4
  00084	eb000000	 bl          ShowT2Reg

; 545  :     SHOW_T2_REG(hTWL, TWL_CFG_PWRANA1);

  00088	e59f2e0c	 ldr         r2, [pc, #0xE0C]
  0008c	e385103e	 orr         r1, r5, #0x3E
  00090	e1a00004	 mov         r0, r4
  00094	eb000000	 bl          ShowT2Reg

; 546  :     SHOW_T2_REG(hTWL, TWL_CFG_PWRANA2);

  00098	e59f2df8	 ldr         r2, [pc, #0xDF8]
  0009c	e385103f	 orr         r1, r5, #0x3F
  000a0	e1a00004	 mov         r0, r4
  000a4	eb000000	 bl          ShowT2Reg

; 547  :     SHOW_T2_REG(hTWL, TWL_BGAP_TRIM);

  000a8	e59f2de4	 ldr         r2, [pc, #0xDE4]
  000ac	e3851040	 orr         r1, r5, #0x40
  000b0	e1a00004	 mov         r0, r4
  000b4	eb000000	 bl          ShowT2Reg

; 548  :     SHOW_T2_REG(hTWL, TWL_BACKUP_MISC_STS);

  000b8	e59f2dd0	 ldr         r2, [pc, #0xDD0]
  000bc	e3851041	 orr         r1, r5, #0x41
  000c0	e1a00004	 mov         r0, r4
  000c4	eb000000	 bl          ShowT2Reg

; 549  :     SHOW_T2_REG(hTWL, TWL_BACKUP_MISC_CFG);

  000c8	e59f2dbc	 ldr         r2, [pc, #0xDBC]
  000cc	e3851042	 orr         r1, r5, #0x42
  000d0	e1a00004	 mov         r0, r4
  000d4	eb000000	 bl          ShowT2Reg

; 550  :     SHOW_T2_REG(hTWL, TWL_BACKUP_MISC_TST);

  000d8	e59f2da8	 ldr         r2, [pc, #0xDA8]
  000dc	e3851043	 orr         r1, r5, #0x43
  000e0	e1a00004	 mov         r0, r4
  000e4	eb000000	 bl          ShowT2Reg

; 551  :     SHOW_T2_REG(hTWL, TWL_PROTECT_KEY);

  000e8	e59f2d94	 ldr         r2, [pc, #0xD94]
  000ec	e3851044	 orr         r1, r5, #0x44
  000f0	e1a00004	 mov         r0, r4
  000f4	eb000000	 bl          ShowT2Reg

; 552  :     SHOW_T2_REG(hTWL, TWL_STS_HW_CONDITIONS);

  000f8	e59f2d80	 ldr         r2, [pc, #0xD80]
  000fc	e3851045	 orr         r1, r5, #0x45
  00100	e1a00004	 mov         r0, r4
  00104	eb000000	 bl          ShowT2Reg

; 553  :     SHOW_T2_REG(hTWL, TWL_P1_SW_EVENTS);

  00108	e59f2d6c	 ldr         r2, [pc, #0xD6C]
  0010c	e3851046	 orr         r1, r5, #0x46
  00110	e1a00004	 mov         r0, r4
  00114	eb000000	 bl          ShowT2Reg

; 554  :     SHOW_T2_REG(hTWL, TWL_P2_SW_EVENTS);

  00118	e59f2d58	 ldr         r2, [pc, #0xD58]
  0011c	e3851047	 orr         r1, r5, #0x47
  00120	e1a00004	 mov         r0, r4
  00124	eb000000	 bl          ShowT2Reg

; 555  :     SHOW_T2_REG(hTWL, TWL_P3_SW_EVENTS);

  00128	e59f2d44	 ldr         r2, [pc, #0xD44]
  0012c	e3851048	 orr         r1, r5, #0x48
  00130	e1a00004	 mov         r0, r4
  00134	eb000000	 bl          ShowT2Reg

; 556  :     SHOW_T2_REG(hTWL, TWL_STS_P123_STATE);

  00138	e59f2d30	 ldr         r2, [pc, #0xD30]
  0013c	e3851049	 orr         r1, r5, #0x49
  00140	e1a00004	 mov         r0, r4
  00144	eb000000	 bl          ShowT2Reg

; 557  :     SHOW_T2_REG(hTWL, TWL_PB_CFG);

  00148	e59f2d1c	 ldr         r2, [pc, #0xD1C]
  0014c	e385104a	 orr         r1, r5, #0x4A
  00150	e1a00004	 mov         r0, r4
  00154	eb000000	 bl          ShowT2Reg

; 558  :     SHOW_T2_REG(hTWL, TWL_PB_WORD_MSB);

  00158	e59f2d08	 ldr         r2, [pc, #0xD08]
  0015c	e385104b	 orr         r1, r5, #0x4B
  00160	e1a00004	 mov         r0, r4
  00164	eb000000	 bl          ShowT2Reg

; 559  :     SHOW_T2_REG(hTWL, TWL_PB_WORD_LSB);

  00168	e59f2cf4	 ldr         r2, [pc, #0xCF4]
  0016c	e385104c	 orr         r1, r5, #0x4C
  00170	e1a00004	 mov         r0, r4
  00174	eb000000	 bl          ShowT2Reg

; 560  :     SHOW_T2_REG(hTWL, TWL_RESERVED_A);

  00178	e59f2ce0	 ldr         r2, [pc, #0xCE0]
  0017c	e385104d	 orr         r1, r5, #0x4D
  00180	e1a00004	 mov         r0, r4
  00184	eb000000	 bl          ShowT2Reg

; 561  :     SHOW_T2_REG(hTWL, TWL_RESERVED_B);

  00188	e59f2ccc	 ldr         r2, [pc, #0xCCC]
  0018c	e385104e	 orr         r1, r5, #0x4E
  00190	e1a00004	 mov         r0, r4
  00194	eb000000	 bl          ShowT2Reg

; 562  :     SHOW_T2_REG(hTWL, TWL_RESERVED_C);

  00198	e59f2cb8	 ldr         r2, [pc, #0xCB8]
  0019c	e385104f	 orr         r1, r5, #0x4F
  001a0	e1a00004	 mov         r0, r4
  001a4	eb000000	 bl          ShowT2Reg

; 563  :     SHOW_T2_REG(hTWL, TWL_RESERVED_D);

  001a8	e59f2ca4	 ldr         r2, [pc, #0xCA4]
  001ac	e3851050	 orr         r1, r5, #0x50
  001b0	e1a00004	 mov         r0, r4
  001b4	eb000000	 bl          ShowT2Reg

; 564  :     SHOW_T2_REG(hTWL, TWL_RESERVED_E);

  001b8	e59f2c90	 ldr         r2, [pc, #0xC90]
  001bc	e3851051	 orr         r1, r5, #0x51
  001c0	e1a00004	 mov         r0, r4
  001c4	eb000000	 bl          ShowT2Reg

; 565  :     SHOW_T2_REG(hTWL, TWL_SEQ_ADD_W2P);

  001c8	e59f2c7c	 ldr         r2, [pc, #0xC7C]
  001cc	e3851052	 orr         r1, r5, #0x52
  001d0	e1a00004	 mov         r0, r4
  001d4	eb000000	 bl          ShowT2Reg

; 566  :     SHOW_T2_REG(hTWL, TWL_SEQ_ADD_P2A);

  001d8	e59f2c68	 ldr         r2, [pc, #0xC68]
  001dc	e3851053	 orr         r1, r5, #0x53
  001e0	e1a00004	 mov         r0, r4
  001e4	eb000000	 bl          ShowT2Reg

; 567  :     SHOW_T2_REG(hTWL, TWL_SEQ_ADD_A2W);

  001e8	e59f2c54	 ldr         r2, [pc, #0xC54]
  001ec	e3851054	 orr         r1, r5, #0x54
  001f0	e1a00004	 mov         r0, r4
  001f4	eb000000	 bl          ShowT2Reg

; 568  :     SHOW_T2_REG(hTWL, TWL_SEQ_ADD_A2S);

  001f8	e59f2c40	 ldr         r2, [pc, #0xC40]
  001fc	e3851055	 orr         r1, r5, #0x55
  00200	e1a00004	 mov         r0, r4
  00204	eb000000	 bl          ShowT2Reg

; 569  :     SHOW_T2_REG(hTWL, TWL_SEQ_ADD_S2A12);

  00208	e59f2c2c	 ldr         r2, [pc, #0xC2C]
  0020c	e3851056	 orr         r1, r5, #0x56
  00210	e1a00004	 mov         r0, r4
  00214	eb000000	 bl          ShowT2Reg

; 570  :     SHOW_T2_REG(hTWL, TWL_SEQ_ADD_S2A3);

  00218	e59f2c18	 ldr         r2, [pc, #0xC18]
  0021c	e3851057	 orr         r1, r5, #0x57
  00220	e1a00004	 mov         r0, r4
  00224	eb000000	 bl          ShowT2Reg

; 571  :     SHOW_T2_REG(hTWL, TWL_SEQ_ADD_WARM);

  00228	e59f2c04	 ldr         r2, [pc, #0xC04]
  0022c	e3851058	 orr         r1, r5, #0x58
  00230	e1a00004	 mov         r0, r4
  00234	eb000000	 bl          ShowT2Reg

; 572  :     SHOW_T2_REG(hTWL, TWL_MEMORY_ADDRESS);

  00238	e59f2bf0	 ldr         r2, [pc, #0xBF0]
  0023c	e3851059	 orr         r1, r5, #0x59
  00240	e1a00004	 mov         r0, r4
  00244	eb000000	 bl          ShowT2Reg

; 573  :     SHOW_T2_REG(hTWL, TWL_MEMORY_DATA);

  00248	e59f2bdc	 ldr         r2, [pc, #0xBDC]
  0024c	e385105a	 orr         r1, r5, #0x5A
  00250	e1a00004	 mov         r0, r4
  00254	eb000000	 bl          ShowT2Reg

; 574  : 
; 575  :     // pm receiver (un)secure mode
; 576  :     SHOW_T2_REG(hTWL, TWL_SC_CONFIG);

  00258	e59f2bc8	 ldr         r2, [pc, #0xBC8]
  0025c	e385105b	 orr         r1, r5, #0x5B
  00260	e1a00004	 mov         r0, r4
  00264	eb000000	 bl          ShowT2Reg

; 577  :     SHOW_T2_REG(hTWL, TWL_SC_DETECT1);

  00268	e59f2bb4	 ldr         r2, [pc, #0xBB4]
  0026c	e385105c	 orr         r1, r5, #0x5C
  00270	e1a00004	 mov         r0, r4
  00274	eb000000	 bl          ShowT2Reg

; 578  :     SHOW_T2_REG(hTWL, TWL_SC_DETECT2);

  00278	e59f2ba0	 ldr         r2, [pc, #0xBA0]
  0027c	e385105d	 orr         r1, r5, #0x5D
  00280	e1a00004	 mov         r0, r4
  00284	eb000000	 bl          ShowT2Reg

; 579  :     SHOW_T2_REG(hTWL, TWL_WATCHDOG_CFG);

  00288	e59f2b8c	 ldr         r2, [pc, #0xB8C]
  0028c	e385105e	 orr         r1, r5, #0x5E
  00290	e1a00004	 mov         r0, r4
  00294	eb000000	 bl          ShowT2Reg

; 580  :     SHOW_T2_REG(hTWL, TWL_IT_CHECK_CFG);

  00298	e59f2b78	 ldr         r2, [pc, #0xB78]
  0029c	e385105f	 orr         r1, r5, #0x5F
  002a0	e1a00004	 mov         r0, r4
  002a4	eb000000	 bl          ShowT2Reg

; 581  :     SHOW_T2_REG(hTWL, TWL_VIBRATOR_CFG);

  002a8	e59f2b64	 ldr         r2, [pc, #0xB64]
  002ac	e3851060	 orr         r1, r5, #0x60
  002b0	e1a00004	 mov         r0, r4
  002b4	eb000000	 bl          ShowT2Reg

; 582  :     SHOW_T2_REG(hTWL, TWL_DCDC_GLOBAL_CFG);

  002b8	e59f2b50	 ldr         r2, [pc, #0xB50]
  002bc	e3851061	 orr         r1, r5, #0x61
  002c0	e1a00004	 mov         r0, r4
  002c4	eb000000	 bl          ShowT2Reg

; 583  :     SHOW_T2_REG(hTWL, TWL_VDD1_TRIM1);

  002c8	e59f2b3c	 ldr         r2, [pc, #0xB3C]
  002cc	e3851062	 orr         r1, r5, #0x62
  002d0	e1a00004	 mov         r0, r4
  002d4	eb000000	 bl          ShowT2Reg

; 584  :     SHOW_T2_REG(hTWL, TWL_VDD1_TRIM2);

  002d8	e59f2b28	 ldr         r2, [pc, #0xB28]
  002dc	e3851063	 orr         r1, r5, #0x63
  002e0	e1a00004	 mov         r0, r4
  002e4	eb000000	 bl          ShowT2Reg

; 585  :     SHOW_T2_REG(hTWL, TWL_VDD2_TRIM1);

  002e8	e59f2b14	 ldr         r2, [pc, #0xB14]
  002ec	e3851064	 orr         r1, r5, #0x64
  002f0	e1a00004	 mov         r0, r4
  002f4	eb000000	 bl          ShowT2Reg

; 586  :     SHOW_T2_REG(hTWL, TWL_VDD2_TRIM2);

  002f8	e59f2b00	 ldr         r2, [pc, #0xB00]
  002fc	e3851065	 orr         r1, r5, #0x65
  00300	e1a00004	 mov         r0, r4
  00304	eb000000	 bl          ShowT2Reg

; 587  :     SHOW_T2_REG(hTWL, TWL_VIO_TRIM1);

  00308	e59f2aec	 ldr         r2, [pc, #0xAEC]
  0030c	e3851066	 orr         r1, r5, #0x66
  00310	e1a00004	 mov         r0, r4
  00314	eb000000	 bl          ShowT2Reg

; 588  :     SHOW_T2_REG(hTWL, TWL_VIO_TRIM2);

  00318	e59f2ad8	 ldr         r2, [pc, #0xAD8]
  0031c	e3851067	 orr         r1, r5, #0x67
  00320	e1a00004	 mov         r0, r4
  00324	eb000000	 bl          ShowT2Reg

; 589  :     SHOW_T2_REG(hTWL, TWL_MISC_CFG);

  00328	e59f2ac4	 ldr         r2, [pc, #0xAC4]
  0032c	e3851068	 orr         r1, r5, #0x68
  00330	e1a00004	 mov         r0, r4
  00334	eb000000	 bl          ShowT2Reg

; 590  :     SHOW_T2_REG(hTWL, TWL_LS_TST_A);

  00338	e59f2ab0	 ldr         r2, [pc, #0xAB0]
  0033c	e3851069	 orr         r1, r5, #0x69
  00340	e1a00004	 mov         r0, r4
  00344	eb000000	 bl          ShowT2Reg

; 591  :     SHOW_T2_REG(hTWL, TWL_LS_TST_B);

  00348	e59f2a9c	 ldr         r2, [pc, #0xA9C]
  0034c	e385106a	 orr         r1, r5, #0x6A
  00350	e1a00004	 mov         r0, r4
  00354	eb000000	 bl          ShowT2Reg

; 592  :     SHOW_T2_REG(hTWL, TWL_LS_TST_C);

  00358	e59f2a88	 ldr         r2, [pc, #0xA88]
  0035c	e385106b	 orr         r1, r5, #0x6B
  00360	e1a00004	 mov         r0, r4
  00364	eb000000	 bl          ShowT2Reg

; 593  :     SHOW_T2_REG(hTWL, TWL_LS_TST_D);

  00368	e59f2a74	 ldr         r2, [pc, #0xA74]
  0036c	e385106c	 orr         r1, r5, #0x6C
  00370	e1a00004	 mov         r0, r4
  00374	eb000000	 bl          ShowT2Reg

; 594  :     SHOW_T2_REG(hTWL, TWL_BB_CFG);

  00378	e59f2a60	 ldr         r2, [pc, #0xA60]
  0037c	e385106d	 orr         r1, r5, #0x6D
  00380	e1a00004	 mov         r0, r4
  00384	eb000000	 bl          ShowT2Reg

; 595  :     SHOW_T2_REG(hTWL, TWL_MISC_TST);

  00388	e59f2a4c	 ldr         r2, [pc, #0xA4C]
  0038c	e385106e	 orr         r1, r5, #0x6E
  00390	e1a00004	 mov         r0, r4
  00394	eb000000	 bl          ShowT2Reg

; 596  :     SHOW_T2_REG(hTWL, TWL_TRIM1);

  00398	e59f2a38	 ldr         r2, [pc, #0xA38]
  0039c	e385106f	 orr         r1, r5, #0x6F
  003a0	e1a00004	 mov         r0, r4
  003a4	eb000000	 bl          ShowT2Reg

; 597  :     SHOW_T2_REG(hTWL, TWL_TRIM2);

  003a8	e59f2a24	 ldr         r2, [pc, #0xA24]
  003ac	e3851070	 orr         r1, r5, #0x70
  003b0	e1a00004	 mov         r0, r4
  003b4	eb000000	 bl          ShowT2Reg

; 598  :     SHOW_T2_REG(hTWL, TWL_DCDC_TIMEOUT);

  003b8	e59f2a10	 ldr         r2, [pc, #0xA10]
  003bc	e3851071	 orr         r1, r5, #0x71
  003c0	e1a00004	 mov         r0, r4
  003c4	eb000000	 bl          ShowT2Reg

; 599  :     SHOW_T2_REG(hTWL, TWL_VAUX1_DEV_GRP);

  003c8	e59f29fc	 ldr         r2, [pc, #0x9FC]
  003cc	e3851072	 orr         r1, r5, #0x72
  003d0	e1a00004	 mov         r0, r4
  003d4	eb000000	 bl          ShowT2Reg

; 600  :     SHOW_T2_REG(hTWL, TWL_VAUX1_TYPE);

  003d8	e59f29e8	 ldr         r2, [pc, #0x9E8]
  003dc	e3851073	 orr         r1, r5, #0x73
  003e0	e1a00004	 mov         r0, r4
  003e4	eb000000	 bl          ShowT2Reg

; 601  :     SHOW_T2_REG(hTWL, TWL_VAUX1_REMAP);

  003e8	e59f29d4	 ldr         r2, [pc, #0x9D4]
  003ec	e3851074	 orr         r1, r5, #0x74
  003f0	e1a00004	 mov         r0, r4
  003f4	eb000000	 bl          ShowT2Reg

; 602  :     SHOW_T2_REG(hTWL, TWL_VAUX1_DEDICATED);

  003f8	e59f29c0	 ldr         r2, [pc, #0x9C0]
  003fc	e3851075	 orr         r1, r5, #0x75
  00400	e1a00004	 mov         r0, r4
  00404	eb000000	 bl          ShowT2Reg

; 603  :     SHOW_T2_REG(hTWL, TWL_VAUX2_DEV_GRP);

  00408	e59f29ac	 ldr         r2, [pc, #0x9AC]
  0040c	e3851076	 orr         r1, r5, #0x76
  00410	e1a00004	 mov         r0, r4
  00414	eb000000	 bl          ShowT2Reg

; 604  :     SHOW_T2_REG(hTWL, TWL_VAUX2_TYPE);

  00418	e59f2998	 ldr         r2, [pc, #0x998]
  0041c	e3851077	 orr         r1, r5, #0x77
  00420	e1a00004	 mov         r0, r4
  00424	eb000000	 bl          ShowT2Reg

; 605  :     SHOW_T2_REG(hTWL, TWL_VAUX2_REMAP);

  00428	e59f2984	 ldr         r2, [pc, #0x984]
  0042c	e3851078	 orr         r1, r5, #0x78
  00430	e1a00004	 mov         r0, r4
  00434	eb000000	 bl          ShowT2Reg

; 606  :     SHOW_T2_REG(hTWL, TWL_VAUX2_DEDICATED);

  00438	e59f2970	 ldr         r2, [pc, #0x970]
  0043c	e3851079	 orr         r1, r5, #0x79
  00440	e1a00004	 mov         r0, r4
  00444	eb000000	 bl          ShowT2Reg

; 607  :     SHOW_T2_REG(hTWL, TWL_VAUX3_DEV_GRP);

  00448	e59f295c	 ldr         r2, [pc, #0x95C]
  0044c	e385107a	 orr         r1, r5, #0x7A
  00450	e1a00004	 mov         r0, r4
  00454	eb000000	 bl          ShowT2Reg

; 608  :     SHOW_T2_REG(hTWL, TWL_VAUX3_TYPE);

  00458	e59f2948	 ldr         r2, [pc, #0x948]
  0045c	e385107b	 orr         r1, r5, #0x7B
  00460	e1a00004	 mov         r0, r4
  00464	eb000000	 bl          ShowT2Reg

; 609  :     SHOW_T2_REG(hTWL, TWL_VAUX3_REMAP);

  00468	e59f2934	 ldr         r2, [pc, #0x934]
  0046c	e385107c	 orr         r1, r5, #0x7C
  00470	e1a00004	 mov         r0, r4
  00474	eb000000	 bl          ShowT2Reg

; 610  :     SHOW_T2_REG(hTWL, TWL_VAUX3_DEDICATED);

  00478	e59f2920	 ldr         r2, [pc, #0x920]
  0047c	e385107d	 orr         r1, r5, #0x7D
  00480	e1a00004	 mov         r0, r4
  00484	eb000000	 bl          ShowT2Reg

; 611  :     SHOW_T2_REG(hTWL, TWL_VAUX4_DEV_GRP);

  00488	e59f290c	 ldr         r2, [pc, #0x90C]
  0048c	e385107e	 orr         r1, r5, #0x7E
  00490	e1a00004	 mov         r0, r4
  00494	eb000000	 bl          ShowT2Reg

; 612  :     SHOW_T2_REG(hTWL, TWL_VAUX4_TYPE);

  00498	e59f28f8	 ldr         r2, [pc, #0x8F8]
  0049c	e385107f	 orr         r1, r5, #0x7F
  004a0	e1a00004	 mov         r0, r4
  004a4	eb000000	 bl          ShowT2Reg

; 613  :     SHOW_T2_REG(hTWL, TWL_VAUX4_REMAP);

  004a8	e59f28e4	 ldr         r2, [pc, #0x8E4]
  004ac	e3851080	 orr         r1, r5, #0x80
  004b0	e1a00004	 mov         r0, r4
  004b4	eb000000	 bl          ShowT2Reg

; 614  :     SHOW_T2_REG(hTWL, TWL_VAUX4_DEDICATED);

  004b8	e59f28d0	 ldr         r2, [pc, #0x8D0]
  004bc	e3851081	 orr         r1, r5, #0x81
  004c0	e1a00004	 mov         r0, r4
  004c4	eb000000	 bl          ShowT2Reg

; 615  :     SHOW_T2_REG(hTWL, TWL_VMMC1_DEV_GRP);

  004c8	e59f28bc	 ldr         r2, [pc, #0x8BC]
  004cc	e3851082	 orr         r1, r5, #0x82
  004d0	e1a00004	 mov         r0, r4
  004d4	eb000000	 bl          ShowT2Reg

; 616  :     SHOW_T2_REG(hTWL, TWL_VMMC1_TYPE);

  004d8	e59f28a8	 ldr         r2, [pc, #0x8A8]
  004dc	e3851083	 orr         r1, r5, #0x83
  004e0	e1a00004	 mov         r0, r4
  004e4	eb000000	 bl          ShowT2Reg

; 617  :     SHOW_T2_REG(hTWL, TWL_VMMC1_REMAP);

  004e8	e59f2894	 ldr         r2, [pc, #0x894]
  004ec	e3851084	 orr         r1, r5, #0x84
  004f0	e1a00004	 mov         r0, r4
  004f4	eb000000	 bl          ShowT2Reg

; 618  :     SHOW_T2_REG(hTWL, TWL_VMMC1_DEDICATED);

  004f8	e59f2880	 ldr         r2, [pc, #0x880]
  004fc	e3851085	 orr         r1, r5, #0x85
  00500	e1a00004	 mov         r0, r4
  00504	eb000000	 bl          ShowT2Reg

; 619  :     SHOW_T2_REG(hTWL, TWL_VMMC2_DEV_GRP);

  00508	e59f286c	 ldr         r2, [pc, #0x86C]
  0050c	e3851086	 orr         r1, r5, #0x86
  00510	e1a00004	 mov         r0, r4
  00514	eb000000	 bl          ShowT2Reg

; 620  :     SHOW_T2_REG(hTWL, TWL_VMMC2_TYPE);

  00518	e59f2858	 ldr         r2, [pc, #0x858]
  0051c	e3851087	 orr         r1, r5, #0x87
  00520	e1a00004	 mov         r0, r4
  00524	eb000000	 bl          ShowT2Reg

; 621  :     SHOW_T2_REG(hTWL, TWL_VMMC2_REMAP);

  00528	e59f2844	 ldr         r2, [pc, #0x844]
  0052c	e3851088	 orr         r1, r5, #0x88
  00530	e1a00004	 mov         r0, r4
  00534	eb000000	 bl          ShowT2Reg

; 622  :     SHOW_T2_REG(hTWL, TWL_VMMC2_DEDICATED);

  00538	e59f2830	 ldr         r2, [pc, #0x830]
  0053c	e3851089	 orr         r1, r5, #0x89
  00540	e1a00004	 mov         r0, r4
  00544	eb000000	 bl          ShowT2Reg

; 623  :     SHOW_T2_REG(hTWL, TWL_VPLL1_DEV_GRP);

  00548	e59f281c	 ldr         r2, [pc, #0x81C]
  0054c	e385108a	 orr         r1, r5, #0x8A
  00550	e1a00004	 mov         r0, r4
  00554	eb000000	 bl          ShowT2Reg

; 624  :     SHOW_T2_REG(hTWL, TWL_VPLL1_TYPE);

  00558	e59f2808	 ldr         r2, [pc, #0x808]
  0055c	e385108b	 orr         r1, r5, #0x8B
  00560	e1a00004	 mov         r0, r4
  00564	eb000000	 bl          ShowT2Reg

; 625  :     SHOW_T2_REG(hTWL, TWL_VPLL1_REMAP);

  00568	e59f27f4	 ldr         r2, [pc, #0x7F4]
  0056c	e385108c	 orr         r1, r5, #0x8C
  00570	e1a00004	 mov         r0, r4
  00574	eb000000	 bl          ShowT2Reg

; 626  :     SHOW_T2_REG(hTWL, TWL_VPLL1_DEDICATED);

  00578	e59f27e0	 ldr         r2, [pc, #0x7E0]
  0057c	e385108d	 orr         r1, r5, #0x8D
  00580	e1a00004	 mov         r0, r4
  00584	eb000000	 bl          ShowT2Reg

; 627  :     SHOW_T2_REG(hTWL, TWL_VPLL2_DEV_GRP);

  00588	e59f27cc	 ldr         r2, [pc, #0x7CC]
  0058c	e385108e	 orr         r1, r5, #0x8E
  00590	e1a00004	 mov         r0, r4
  00594	eb000000	 bl          ShowT2Reg

; 628  :     SHOW_T2_REG(hTWL, TWL_VPLL2_TYPE);

  00598	e59f27b8	 ldr         r2, [pc, #0x7B8]
  0059c	e385108f	 orr         r1, r5, #0x8F
  005a0	e1a00004	 mov         r0, r4
  005a4	eb000000	 bl          ShowT2Reg

; 629  :     SHOW_T2_REG(hTWL, TWL_VPLL2_REMAP);

  005a8	e59f27a4	 ldr         r2, [pc, #0x7A4]
  005ac	e3851090	 orr         r1, r5, #0x90
  005b0	e1a00004	 mov         r0, r4
  005b4	eb000000	 bl          ShowT2Reg

; 630  :     SHOW_T2_REG(hTWL, TWL_VPLL2_DEDICATED);

  005b8	e59f2790	 ldr         r2, [pc, #0x790]
  005bc	e3851091	 orr         r1, r5, #0x91
  005c0	e1a00004	 mov         r0, r4
  005c4	eb000000	 bl          ShowT2Reg

; 631  :     SHOW_T2_REG(hTWL, TWL_VSIM_DEV_GRP);

  005c8	e59f277c	 ldr         r2, [pc, #0x77C]
  005cc	e3851092	 orr         r1, r5, #0x92
  005d0	e1a00004	 mov         r0, r4
  005d4	eb000000	 bl          ShowT2Reg

; 632  :     SHOW_T2_REG(hTWL, TWL_VSIM_TYPE);

  005d8	e59f2768	 ldr         r2, [pc, #0x768]
  005dc	e3851093	 orr         r1, r5, #0x93
  005e0	e1a00004	 mov         r0, r4
  005e4	eb000000	 bl          ShowT2Reg

; 633  :     SHOW_T2_REG(hTWL, TWL_VSIM_REMAP);

  005e8	e59f2754	 ldr         r2, [pc, #0x754]
  005ec	e3851094	 orr         r1, r5, #0x94
  005f0	e1a00004	 mov         r0, r4
  005f4	eb000000	 bl          ShowT2Reg

; 634  :     SHOW_T2_REG(hTWL, TWL_VSIM_DEDICATED);

  005f8	e59f2740	 ldr         r2, [pc, #0x740]
  005fc	e3851095	 orr         r1, r5, #0x95
  00600	e1a00004	 mov         r0, r4
  00604	eb000000	 bl          ShowT2Reg

; 635  :     SHOW_T2_REG(hTWL, TWL_VDAC_DEV_GRP);

  00608	e59f272c	 ldr         r2, [pc, #0x72C]
  0060c	e3851096	 orr         r1, r5, #0x96
  00610	e1a00004	 mov         r0, r4
  00614	eb000000	 bl          ShowT2Reg

; 636  :     SHOW_T2_REG(hTWL, TWL_VDAC_TYPE);

  00618	e59f2718	 ldr         r2, [pc, #0x718]
  0061c	e3851097	 orr         r1, r5, #0x97
  00620	e1a00004	 mov         r0, r4
  00624	eb000000	 bl          ShowT2Reg

; 637  :     SHOW_T2_REG(hTWL, TWL_VDAC_REMAP);

  00628	e59f2704	 ldr         r2, [pc, #0x704]
  0062c	e3851098	 orr         r1, r5, #0x98
  00630	e1a00004	 mov         r0, r4
  00634	eb000000	 bl          ShowT2Reg

; 638  :     SHOW_T2_REG(hTWL, TWL_VDAC_DEDICATED);

  00638	e59f26f0	 ldr         r2, [pc, #0x6F0]
  0063c	e3851099	 orr         r1, r5, #0x99
  00640	e1a00004	 mov         r0, r4
  00644	eb000000	 bl          ShowT2Reg

; 639  :     SHOW_T2_REG(hTWL, TWL_VINTANA1_DEV_GRP);

  00648	e59f26dc	 ldr         r2, [pc, #0x6DC]
  0064c	e385109a	 orr         r1, r5, #0x9A
  00650	e1a00004	 mov         r0, r4
  00654	eb000000	 bl          ShowT2Reg

; 640  :     SHOW_T2_REG(hTWL, TWL_VINTANA1_TYPE);

  00658	e59f26c8	 ldr         r2, [pc, #0x6C8]
  0065c	e385109b	 orr         r1, r5, #0x9B
  00660	e1a00004	 mov         r0, r4
  00664	eb000000	 bl          ShowT2Reg

; 641  :     SHOW_T2_REG(hTWL, TWL_VINTANA1_REMAP);

  00668	e59f26b4	 ldr         r2, [pc, #0x6B4]
  0066c	e385109c	 orr         r1, r5, #0x9C
  00670	e1a00004	 mov         r0, r4
  00674	eb000000	 bl          ShowT2Reg

; 642  :     SHOW_T2_REG(hTWL, TWL_VINTANA1_DEDICATED);

  00678	e59f26a0	 ldr         r2, [pc, #0x6A0]
  0067c	e385109d	 orr         r1, r5, #0x9D
  00680	e1a00004	 mov         r0, r4
  00684	eb000000	 bl          ShowT2Reg

; 643  :     SHOW_T2_REG(hTWL, TWL_VINTANA2_DEV_GRP);

  00688	e59f268c	 ldr         r2, [pc, #0x68C]
  0068c	e385109e	 orr         r1, r5, #0x9E
  00690	e1a00004	 mov         r0, r4
  00694	eb000000	 bl          ShowT2Reg

; 644  :     SHOW_T2_REG(hTWL, TWL_VINTANA2_TYPE);

  00698	e59f2678	 ldr         r2, [pc, #0x678]
  0069c	e385109f	 orr         r1, r5, #0x9F
  006a0	e1a00004	 mov         r0, r4
  006a4	eb000000	 bl          ShowT2Reg

; 645  :     SHOW_T2_REG(hTWL, TWL_VINTANA2_REMAP);

  006a8	e59f2664	 ldr         r2, [pc, #0x664]
  006ac	e38510a0	 orr         r1, r5, #0xA0
  006b0	e1a00004	 mov         r0, r4
  006b4	eb000000	 bl          ShowT2Reg

; 646  :     SHOW_T2_REG(hTWL, TWL_VINTANA2_DEDICATED);

  006b8	e59f2650	 ldr         r2, [pc, #0x650]
  006bc	e38510a1	 orr         r1, r5, #0xA1
  006c0	e1a00004	 mov         r0, r4
  006c4	eb000000	 bl          ShowT2Reg

; 647  :     SHOW_T2_REG(hTWL, TWL_VINTDIG_DEV_GRP);

  006c8	e59f263c	 ldr         r2, [pc, #0x63C]
  006cc	e38510a2	 orr         r1, r5, #0xA2
  006d0	e1a00004	 mov         r0, r4
  006d4	eb000000	 bl          ShowT2Reg

; 648  :     SHOW_T2_REG(hTWL, TWL_VINTDIG_TYPE);

  006d8	e59f2628	 ldr         r2, [pc, #0x628]
  006dc	e38510a3	 orr         r1, r5, #0xA3
  006e0	e1a00004	 mov         r0, r4
  006e4	eb000000	 bl          ShowT2Reg

; 649  :     SHOW_T2_REG(hTWL, TWL_VINTDIG_REMAP);

  006e8	e59f2614	 ldr         r2, [pc, #0x614]
  006ec	e38510a4	 orr         r1, r5, #0xA4
  006f0	e1a00004	 mov         r0, r4
  006f4	eb000000	 bl          ShowT2Reg

; 650  :     SHOW_T2_REG(hTWL, TWL_VINTDIG_DEDICATED);

  006f8	e59f2600	 ldr         r2, [pc, #0x600]
  006fc	e38510a5	 orr         r1, r5, #0xA5
  00700	e1a00004	 mov         r0, r4
  00704	eb000000	 bl          ShowT2Reg

; 651  :     SHOW_T2_REG(hTWL, TWL_VIO_DEV_GRP);

  00708	e59f25ec	 ldr         r2, [pc, #0x5EC]
  0070c	e38510a6	 orr         r1, r5, #0xA6
  00710	e1a00004	 mov         r0, r4
  00714	eb000000	 bl          ShowT2Reg

; 652  :     SHOW_T2_REG(hTWL, TWL_VIO_TYPE);

  00718	e59f25d8	 ldr         r2, [pc, #0x5D8]
  0071c	e38510a7	 orr         r1, r5, #0xA7
  00720	e1a00004	 mov         r0, r4
  00724	eb000000	 bl          ShowT2Reg

; 653  :     SHOW_T2_REG(hTWL, TWL_VIO_REMAP);

  00728	e59f25c4	 ldr         r2, [pc, #0x5C4]
  0072c	e38510a8	 orr         r1, r5, #0xA8
  00730	e1a00004	 mov         r0, r4
  00734	eb000000	 bl          ShowT2Reg

; 654  :     SHOW_T2_REG(hTWL, TWL_VIO_CFG);

  00738	e59f25b0	 ldr         r2, [pc, #0x5B0]
  0073c	e38510a9	 orr         r1, r5, #0xA9
  00740	e1a00004	 mov         r0, r4
  00744	eb000000	 bl          ShowT2Reg

; 655  :     SHOW_T2_REG(hTWL, TWL_VIO_MISC_CFG);

  00748	e59f259c	 ldr         r2, [pc, #0x59C]
  0074c	e38510aa	 orr         r1, r5, #0xAA
  00750	e1a00004	 mov         r0, r4
  00754	eb000000	 bl          ShowT2Reg

; 656  :     SHOW_T2_REG(hTWL, TWL_VIO_TEST1);

  00758	e59f2588	 ldr         r2, [pc, #0x588]
  0075c	e38510ab	 orr         r1, r5, #0xAB
  00760	e1a00004	 mov         r0, r4
  00764	eb000000	 bl          ShowT2Reg

; 657  :     SHOW_T2_REG(hTWL, TWL_VIO_TEST2);

  00768	e59f2574	 ldr         r2, [pc, #0x574]
  0076c	e38510ac	 orr         r1, r5, #0xAC
  00770	e1a00004	 mov         r0, r4
  00774	eb000000	 bl          ShowT2Reg

; 658  :     SHOW_T2_REG(hTWL, TWL_VIO_OSC);

  00778	e59f2560	 ldr         r2, [pc, #0x560]
  0077c	e38510ad	 orr         r1, r5, #0xAD
  00780	e1a00004	 mov         r0, r4
  00784	eb000000	 bl          ShowT2Reg

; 659  :     SHOW_T2_REG(hTWL, TWL_VIO_RESERVED);

  00788	e59f254c	 ldr         r2, [pc, #0x54C]
  0078c	e38510ae	 orr         r1, r5, #0xAE
  00790	e1a00004	 mov         r0, r4
  00794	eb000000	 bl          ShowT2Reg

; 660  :     SHOW_T2_REG(hTWL, TWL_VIO_VSEL);

  00798	e59f2538	 ldr         r2, [pc, #0x538]
  0079c	e38510af	 orr         r1, r5, #0xAF
  007a0	e1a00004	 mov         r0, r4
  007a4	eb000000	 bl          ShowT2Reg

; 661  :     SHOW_T2_REG(hTWL, TWL_VDD1_DEV_GRP);

  007a8	e59f2524	 ldr         r2, [pc, #0x524]
  007ac	e38510b0	 orr         r1, r5, #0xB0
  007b0	e1a00004	 mov         r0, r4
  007b4	eb000000	 bl          ShowT2Reg

; 662  :     SHOW_T2_REG(hTWL, TWL_VDD1_TYPE);

  007b8	e59f2510	 ldr         r2, [pc, #0x510]
  007bc	e38510b1	 orr         r1, r5, #0xB1
  007c0	e1a00004	 mov         r0, r4
  007c4	eb000000	 bl          ShowT2Reg

; 663  :     SHOW_T2_REG(hTWL, TWL_VDD1_REMAP);

  007c8	e59f24fc	 ldr         r2, [pc, #0x4FC]
  007cc	e38510b2	 orr         r1, r5, #0xB2
  007d0	e1a00004	 mov         r0, r4
  007d4	eb000000	 bl          ShowT2Reg

; 664  :     SHOW_T2_REG(hTWL, TWL_VDD1_CFG);

  007d8	e59f24e8	 ldr         r2, [pc, #0x4E8]
  007dc	e38510b3	 orr         r1, r5, #0xB3
  007e0	e1a00004	 mov         r0, r4
  007e4	eb000000	 bl          ShowT2Reg

; 665  :     SHOW_T2_REG(hTWL, TWL_VDD1_MISC_CFG);

  007e8	e59f24d4	 ldr         r2, [pc, #0x4D4]
  007ec	e38510b4	 orr         r1, r5, #0xB4
  007f0	e1a00004	 mov         r0, r4
  007f4	eb000000	 bl          ShowT2Reg

; 666  :     SHOW_T2_REG(hTWL, TWL_VDD1_TEST1);

  007f8	e59f24c0	 ldr         r2, [pc, #0x4C0]
  007fc	e38510b5	 orr         r1, r5, #0xB5
  00800	e1a00004	 mov         r0, r4
  00804	eb000000	 bl          ShowT2Reg

; 667  :     SHOW_T2_REG(hTWL, TWL_VDD1_TEST2);

  00808	e59f24ac	 ldr         r2, [pc, #0x4AC]
  0080c	e38510b6	 orr         r1, r5, #0xB6
  00810	e1a00004	 mov         r0, r4
  00814	eb000000	 bl          ShowT2Reg

; 668  :     SHOW_T2_REG(hTWL, TWL_VDD1_OSC);

  00818	e59f2498	 ldr         r2, [pc, #0x498]
  0081c	e38510b7	 orr         r1, r5, #0xB7
  00820	e1a00004	 mov         r0, r4
  00824	eb000000	 bl          ShowT2Reg

; 669  :     SHOW_T2_REG(hTWL, TWL_VDD1_RESERVED);

  00828	e59f2484	 ldr         r2, [pc, #0x484]
  0082c	e38510b8	 orr         r1, r5, #0xB8
  00830	e1a00004	 mov         r0, r4
  00834	eb000000	 bl          ShowT2Reg

; 670  :     SHOW_T2_REG(hTWL, TWL_VDD1_VSEL);

  00838	e59f2470	 ldr         r2, [pc, #0x470]
  0083c	e38510b9	 orr         r1, r5, #0xB9
  00840	e1a00004	 mov         r0, r4
  00844	eb000000	 bl          ShowT2Reg

; 671  :     SHOW_T2_REG(hTWL, TWL_VDD1_VMODE_CFG);

  00848	e59f245c	 ldr         r2, [pc, #0x45C]
  0084c	e38510ba	 orr         r1, r5, #0xBA
  00850	e1a00004	 mov         r0, r4
  00854	eb000000	 bl          ShowT2Reg

; 672  :     SHOW_T2_REG(hTWL, TWL_VDD1_VFLOOR);

  00858	e59f2448	 ldr         r2, [pc, #0x448]
  0085c	e38510bb	 orr         r1, r5, #0xBB
  00860	e1a00004	 mov         r0, r4
  00864	eb000000	 bl          ShowT2Reg

; 673  :     SHOW_T2_REG(hTWL, TWL_VDD1_VROOF);

  00868	e59f2434	 ldr         r2, [pc, #0x434]
  0086c	e38510bc	 orr         r1, r5, #0xBC
  00870	e1a00004	 mov         r0, r4
  00874	eb000000	 bl          ShowT2Reg

; 674  :     SHOW_T2_REG(hTWL, TWL_VDD1_STEP);

  00878	e59f2420	 ldr         r2, [pc, #0x420]
  0087c	e38510bd	 orr         r1, r5, #0xBD
  00880	e1a00004	 mov         r0, r4
  00884	eb000000	 bl          ShowT2Reg

; 675  :     SHOW_T2_REG(hTWL, TWL_VDD2_DEV_GRP);

  00888	e59f240c	 ldr         r2, [pc, #0x40C]
  0088c	e38510be	 orr         r1, r5, #0xBE
  00890	e1a00004	 mov         r0, r4
  00894	eb000000	 bl          ShowT2Reg

; 676  :     SHOW_T2_REG(hTWL, TWL_VDD2_TYPE);

  00898	e59f23f8	 ldr         r2, [pc, #0x3F8]
  0089c	e38510bf	 orr         r1, r5, #0xBF
  008a0	e1a00004	 mov         r0, r4
  008a4	eb000000	 bl          ShowT2Reg

; 677  :     SHOW_T2_REG(hTWL, TWL_VDD2_REMAP);

  008a8	e59f23e4	 ldr         r2, [pc, #0x3E4]
  008ac	e38510c0	 orr         r1, r5, #0xC0
  008b0	e1a00004	 mov         r0, r4
  008b4	eb000000	 bl          ShowT2Reg

; 678  :     SHOW_T2_REG(hTWL, TWL_VDD2_CFG);

  008b8	e59f23d0	 ldr         r2, [pc, #0x3D0]
  008bc	e38510c1	 orr         r1, r5, #0xC1
  008c0	e1a00004	 mov         r0, r4
  008c4	eb000000	 bl          ShowT2Reg

; 679  :     SHOW_T2_REG(hTWL, TWL_VDD2_MISC_CFG);

  008c8	e59f23bc	 ldr         r2, [pc, #0x3BC]
  008cc	e38510c2	 orr         r1, r5, #0xC2
  008d0	e1a00004	 mov         r0, r4
  008d4	eb000000	 bl          ShowT2Reg

; 680  :     SHOW_T2_REG(hTWL, TWL_VDD2_TEST1);

  008d8	e59f23a8	 ldr         r2, [pc, #0x3A8]
  008dc	e38510c3	 orr         r1, r5, #0xC3
  008e0	e1a00004	 mov         r0, r4
  008e4	eb000000	 bl          ShowT2Reg

; 681  :     SHOW_T2_REG(hTWL, TWL_VDD2_TEST2);

  008e8	e59f2394	 ldr         r2, [pc, #0x394]
  008ec	e38510c4	 orr         r1, r5, #0xC4
  008f0	e1a00004	 mov         r0, r4
  008f4	eb000000	 bl          ShowT2Reg

; 682  :     SHOW_T2_REG(hTWL, TWL_VDD2_OSC);

  008f8	e59f2380	 ldr         r2, [pc, #0x380]
  008fc	e38510c5	 orr         r1, r5, #0xC5
  00900	e1a00004	 mov         r0, r4
  00904	eb000000	 bl          ShowT2Reg

; 683  :     SHOW_T2_REG(hTWL, TWL_VDD2_RESERVED);

  00908	e59f236c	 ldr         r2, [pc, #0x36C]
  0090c	e38510c6	 orr         r1, r5, #0xC6
  00910	e1a00004	 mov         r0, r4
  00914	eb000000	 bl          ShowT2Reg

; 684  :     SHOW_T2_REG(hTWL, TWL_VDD2_VSEL);

  00918	e59f2358	 ldr         r2, [pc, #0x358]
  0091c	e38510c7	 orr         r1, r5, #0xC7
  00920	e1a00004	 mov         r0, r4
  00924	eb000000	 bl          ShowT2Reg

; 685  :     SHOW_T2_REG(hTWL, TWL_VDD2_VMODE_CFG);

  00928	e59f2344	 ldr         r2, [pc, #0x344]
  0092c	e38510c8	 orr         r1, r5, #0xC8
  00930	e1a00004	 mov         r0, r4
  00934	eb000000	 bl          ShowT2Reg

; 686  :     SHOW_T2_REG(hTWL, TWL_VDD2_VFLOOR);

  00938	e59f2330	 ldr         r2, [pc, #0x330]
  0093c	e38510c9	 orr         r1, r5, #0xC9
  00940	e1a00004	 mov         r0, r4
  00944	eb000000	 bl          ShowT2Reg

; 687  :     SHOW_T2_REG(hTWL, TWL_VDD2_VROOF);

  00948	e59f231c	 ldr         r2, [pc, #0x31C]
  0094c	e38510ca	 orr         r1, r5, #0xCA
  00950	e1a00004	 mov         r0, r4
  00954	eb000000	 bl          ShowT2Reg

; 688  :     SHOW_T2_REG(hTWL, TWL_VDD2_STEP);

  00958	e59f2308	 ldr         r2, [pc, #0x308]
  0095c	e38510cb	 orr         r1, r5, #0xCB
  00960	e1a00004	 mov         r0, r4
  00964	eb000000	 bl          ShowT2Reg

; 689  :     SHOW_T2_REG(hTWL, TWL_VUSB1V5_DEV_GRP);

  00968	e59f22f4	 ldr         r2, [pc, #0x2F4]
  0096c	e38510cc	 orr         r1, r5, #0xCC
  00970	e1a00004	 mov         r0, r4
  00974	eb000000	 bl          ShowT2Reg

; 690  :     SHOW_T2_REG(hTWL, TWL_VUSB1V5_TYPE);

  00978	e59f22e0	 ldr         r2, [pc, #0x2E0]
  0097c	e38510cd	 orr         r1, r5, #0xCD
  00980	e1a00004	 mov         r0, r4
  00984	eb000000	 bl          ShowT2Reg

; 691  :     SHOW_T2_REG(hTWL, TWL_VUSB1V5_REMAP);

  00988	e59f22cc	 ldr         r2, [pc, #0x2CC]
  0098c	e38510ce	 orr         r1, r5, #0xCE
  00990	e1a00004	 mov         r0, r4
  00994	eb000000	 bl          ShowT2Reg

; 692  :     SHOW_T2_REG(hTWL, TWL_VUSB1V8_DEV_GRP);

  00998	e59f22b8	 ldr         r2, [pc, #0x2B8]
  0099c	e38510cf	 orr         r1, r5, #0xCF
  009a0	e1a00004	 mov         r0, r4
  009a4	eb000000	 bl          ShowT2Reg

; 693  :     SHOW_T2_REG(hTWL, TWL_VUSB1V8_TYPE);

  009a8	e59f22a4	 ldr         r2, [pc, #0x2A4]
  009ac	e38510d0	 orr         r1, r5, #0xD0
  009b0	e1a00004	 mov         r0, r4
  009b4	eb000000	 bl          ShowT2Reg

; 694  :     SHOW_T2_REG(hTWL, TWL_VUSB1V8_REMAP);

  009b8	e59f2290	 ldr         r2, [pc, #0x290]
  009bc	e38510d1	 orr         r1, r5, #0xD1
  009c0	e1a00004	 mov         r0, r4
  009c4	eb000000	 bl          ShowT2Reg

; 695  :     SHOW_T2_REG(hTWL, TWL_VUSB3V1_DEV_GRP);

  009c8	e59f227c	 ldr         r2, [pc, #0x27C]
  009cc	e38510d2	 orr         r1, r5, #0xD2
  009d0	e1a00004	 mov         r0, r4
  009d4	eb000000	 bl          ShowT2Reg

; 696  :     SHOW_T2_REG(hTWL, TWL_VUSB3V1_TYPE);

  009d8	e59f2268	 ldr         r2, [pc, #0x268]
  009dc	e38510d3	 orr         r1, r5, #0xD3
  009e0	e1a00004	 mov         r0, r4
  009e4	eb000000	 bl          ShowT2Reg

; 697  :     SHOW_T2_REG(hTWL, TWL_VUSB3V1_REMAP);

  009e8	e59f2254	 ldr         r2, [pc, #0x254]
  009ec	e38510d4	 orr         r1, r5, #0xD4
  009f0	e1a00004	 mov         r0, r4
  009f4	eb000000	 bl          ShowT2Reg

; 698  :     SHOW_T2_REG(hTWL, TWL_VUSBCP_DEV_GRP);

  009f8	e59f2240	 ldr         r2, [pc, #0x240]
  009fc	e38510d5	 orr         r1, r5, #0xD5
  00a00	e1a00004	 mov         r0, r4
  00a04	eb000000	 bl          ShowT2Reg

; 699  :     SHOW_T2_REG(hTWL, TWL_VUSBCP_TYPE);

  00a08	e59f222c	 ldr         r2, [pc, #0x22C]
  00a0c	e38510d6	 orr         r1, r5, #0xD6
  00a10	e1a00004	 mov         r0, r4
  00a14	eb000000	 bl          ShowT2Reg

; 700  :     SHOW_T2_REG(hTWL, TWL_VUSBCP_REMAP);

  00a18	e59f2218	 ldr         r2, [pc, #0x218]
  00a1c	e38510d7	 orr         r1, r5, #0xD7
  00a20	e1a00004	 mov         r0, r4
  00a24	eb000000	 bl          ShowT2Reg

; 701  :     SHOW_T2_REG(hTWL, TWL_VUSB_DEDICATED1);

  00a28	e59f2204	 ldr         r2, [pc, #0x204]
  00a2c	e38510d8	 orr         r1, r5, #0xD8
  00a30	e1a00004	 mov         r0, r4
  00a34	eb000000	 bl          ShowT2Reg

; 702  :     SHOW_T2_REG(hTWL, TWL_VUSB_DEDICATED2);

  00a38	e59f21f0	 ldr         r2, [pc, #0x1F0]
  00a3c	e38510d9	 orr         r1, r5, #0xD9
  00a40	e1a00004	 mov         r0, r4
  00a44	eb000000	 bl          ShowT2Reg

; 703  :     SHOW_T2_REG(hTWL, TWL_REGEN_DEV_GRP);

  00a48	e59f21dc	 ldr         r2, [pc, #0x1DC]
  00a4c	e38510da	 orr         r1, r5, #0xDA
  00a50	e1a00004	 mov         r0, r4
  00a54	eb000000	 bl          ShowT2Reg

; 704  :     SHOW_T2_REG(hTWL, TWL_REGEN_TYPE);

  00a58	e59f21c8	 ldr         r2, [pc, #0x1C8]
  00a5c	e38510db	 orr         r1, r5, #0xDB
  00a60	e1a00004	 mov         r0, r4
  00a64	eb000000	 bl          ShowT2Reg

; 705  :     SHOW_T2_REG(hTWL, TWL_REGEN_REMAP);

  00a68	e59f21b4	 ldr         r2, [pc, #0x1B4]
  00a6c	e38510dc	 orr         r1, r5, #0xDC
  00a70	e1a00004	 mov         r0, r4
  00a74	eb000000	 bl          ShowT2Reg

; 706  :     SHOW_T2_REG(hTWL, TWL_NRESPWRON_DEV_GRP);

  00a78	e59f21a0	 ldr         r2, [pc, #0x1A0]
  00a7c	e38510dd	 orr         r1, r5, #0xDD
  00a80	e1a00004	 mov         r0, r4
  00a84	eb000000	 bl          ShowT2Reg

; 707  :     SHOW_T2_REG(hTWL, TWL_NRESPWRON_TYPE);

  00a88	e59f218c	 ldr         r2, [pc, #0x18C]
  00a8c	e38510de	 orr         r1, r5, #0xDE
  00a90	e1a00004	 mov         r0, r4
  00a94	eb000000	 bl          ShowT2Reg

; 708  :     SHOW_T2_REG(hTWL, TWL_NRESPWRON_REMAP);

  00a98	e59f2178	 ldr         r2, [pc, #0x178]
  00a9c	e38510df	 orr         r1, r5, #0xDF
  00aa0	e1a00004	 mov         r0, r4
  00aa4	eb000000	 bl          ShowT2Reg

; 709  :     SHOW_T2_REG(hTWL, TWL_CLKEN_DEV_GRP);

  00aa8	e59f2164	 ldr         r2, [pc, #0x164]
  00aac	e38510e0	 orr         r1, r5, #0xE0
  00ab0	e1a00004	 mov         r0, r4
  00ab4	eb000000	 bl          ShowT2Reg

; 710  :     SHOW_T2_REG(hTWL, TWL_CLKEN_TYPE);

  00ab8	e59f2150	 ldr         r2, [pc, #0x150]
  00abc	e38510e1	 orr         r1, r5, #0xE1
  00ac0	e1a00004	 mov         r0, r4
  00ac4	eb000000	 bl          ShowT2Reg

; 711  :     SHOW_T2_REG(hTWL, TWL_CLKEN_REMAP);

  00ac8	e59f213c	 ldr         r2, [pc, #0x13C]
  00acc	e38510e2	 orr         r1, r5, #0xE2
  00ad0	e1a00004	 mov         r0, r4
  00ad4	eb000000	 bl          ShowT2Reg

; 712  :     SHOW_T2_REG(hTWL, TWL_SYSEN_DEV_GRP);

  00ad8	e59f2128	 ldr         r2, [pc, #0x128]
  00adc	e38510e3	 orr         r1, r5, #0xE3
  00ae0	e1a00004	 mov         r0, r4
  00ae4	eb000000	 bl          ShowT2Reg

; 713  :     SHOW_T2_REG(hTWL, TWL_SYSEN_TYPE);

  00ae8	e59f2114	 ldr         r2, [pc, #0x114]
  00aec	e38510e4	 orr         r1, r5, #0xE4
  00af0	e1a00004	 mov         r0, r4
  00af4	eb000000	 bl          ShowT2Reg

; 714  :     SHOW_T2_REG(hTWL, TWL_SYSEN_REMAP);

  00af8	e59f2100	 ldr         r2, [pc, #0x100]
  00afc	e38510e5	 orr         r1, r5, #0xE5
  00b00	e1a00004	 mov         r0, r4
  00b04	eb000000	 bl          ShowT2Reg

; 715  :     SHOW_T2_REG(hTWL, TWL_HFCLKOUT_DEV_GRP);

  00b08	e59f20ec	 ldr         r2, [pc, #0xEC]
  00b0c	e38510e6	 orr         r1, r5, #0xE6
  00b10	e1a00004	 mov         r0, r4
  00b14	eb000000	 bl          ShowT2Reg

; 716  :     SHOW_T2_REG(hTWL, TWL_HFCLKOUT_TYPE);

  00b18	e59f20d8	 ldr         r2, [pc, #0xD8]
  00b1c	e38510e7	 orr         r1, r5, #0xE7
  00b20	e1a00004	 mov         r0, r4
  00b24	eb000000	 bl          ShowT2Reg

; 717  :     SHOW_T2_REG(hTWL, TWL_HFCLKOUT_REMAP);

  00b28	e59f20c4	 ldr         r2, [pc, #0xC4]
  00b2c	e38510e8	 orr         r1, r5, #0xE8
  00b30	e1a00004	 mov         r0, r4
  00b34	eb000000	 bl          ShowT2Reg

; 718  :     SHOW_T2_REG(hTWL, TWL_32KCLKOUT_DEV_GRP);

  00b38	e59f20b0	 ldr         r2, [pc, #0xB0]
  00b3c	e38510e9	 orr         r1, r5, #0xE9
  00b40	e1a00004	 mov         r0, r4
  00b44	eb000000	 bl          ShowT2Reg

; 719  :     SHOW_T2_REG(hTWL, TWL_32KCLKOUT_TYPE);

  00b48	e59f209c	 ldr         r2, [pc, #0x9C]
  00b4c	e38510ea	 orr         r1, r5, #0xEA
  00b50	e1a00004	 mov         r0, r4
  00b54	eb000000	 bl          ShowT2Reg

; 720  :     SHOW_T2_REG(hTWL, TWL_32KCLKOUT_REMAP);

  00b58	e59f2088	 ldr         r2, [pc, #0x88]
  00b5c	e38510eb	 orr         r1, r5, #0xEB
  00b60	e1a00004	 mov         r0, r4
  00b64	eb000000	 bl          ShowT2Reg

; 721  :     SHOW_T2_REG(hTWL, TWL_TRITON_RESET_DEV_GRP);

  00b68	e59f2074	 ldr         r2, [pc, #0x74]
  00b6c	e38510ec	 orr         r1, r5, #0xEC
  00b70	e1a00004	 mov         r0, r4
  00b74	eb000000	 bl          ShowT2Reg

; 722  :     SHOW_T2_REG(hTWL, TWL_TRITON_RESET_TYPE);

  00b78	e59f2060	 ldr         r2, [pc, #0x60]
  00b7c	e38510ed	 orr         r1, r5, #0xED
  00b80	e1a00004	 mov         r0, r4
  00b84	eb000000	 bl          ShowT2Reg

; 723  :     SHOW_T2_REG(hTWL, TWL_TRITON_RESET_REMAP);

  00b88	e59f204c	 ldr         r2, [pc, #0x4C]
  00b8c	e38510ee	 orr         r1, r5, #0xEE
  00b90	e1a00004	 mov         r0, r4
  00b94	eb000000	 bl          ShowT2Reg

; 724  :     SHOW_T2_REG(hTWL, TWL_MAINREF_DEV_GRP);

  00b98	e59f2038	 ldr         r2, [pc, #0x38]
  00b9c	e38510ef	 orr         r1, r5, #0xEF
  00ba0	e1a00004	 mov         r0, r4
  00ba4	eb000000	 bl          ShowT2Reg

; 725  :     SHOW_T2_REG(hTWL, TWL_MAINREF_TYPE);

  00ba8	e59f2024	 ldr         r2, [pc, #0x24]
  00bac	e38510f0	 orr         r1, r5, #0xF0
  00bb0	e1a00004	 mov         r0, r4
  00bb4	eb000000	 bl          ShowT2Reg

; 726  :     SHOW_T2_REG(hTWL, TWL_MAINREF_REMAP);

  00bb8	e59f2010	 ldr         r2, [pc, #0x10]
  00bbc	e38510f1	 orr         r1, r5, #0xF1
  00bc0	e1a00004	 mov         r0, r4
  00bc4	eb000000	 bl          ShowT2Reg

; 727  : }

  00bc8	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00bcc	e12fff1e	 bx          lr
  00bd0		 |$LN6@TwlDump|
  00bd0		 |$LN7@TwlDump|
  00bd0	00000000	 DCD         |??_C@_1CE@FJBEMMGF@?$AAT?$AAW?$AAL?$AA_?$AAM?$AAA?$AAI?$AAN?$AAR?$AAE?$AAF?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@|
  00bd4		 |$LN8@TwlDump|
  00bd4	00000000	 DCD         |??_C@_1CC@DKMPJCIB@?$AAT?$AAW?$AAL?$AA_?$AAM?$AAA?$AAI?$AAN?$AAR?$AAE?$AAF?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  00bd8		 |$LN9@TwlDump|
  00bd8	00000000	 DCD         |??_C@_1CI@KFDKGHKP@?$AAT?$AAW?$AAL?$AA_?$AAM?$AAA?$AAI?$AAN?$AAR?$AAE?$AAF?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@|
  00bdc		 |$LN10@TwlDump|
  00bdc	00000000	 DCD         |??_C@_1CO@CDIBBBBM@?$AAT?$AAW?$AAL?$AA_?$AAT?$AAR?$AAI?$AAT?$AAO?$AAN?$AA_?$AAR?$AAE?$AAS?$AAE?$AAT?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@|
  00be0		 |$LN11@TwlDump|
  00be0	00000000	 DCD         |??_C@_1CM@LCHEGJFI@?$AAT?$AAW?$AAL?$AA_?$AAT?$AAR?$AAI?$AAT?$AAO?$AAN?$AA_?$AAR?$AAE?$AAS?$AAE?$AAT?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  00be4		 |$LN12@TwlDump|
  00be4	00000000	 DCD         |??_C@_1DC@IKLKMIKH@?$AAT?$AAW?$AAL?$AA_?$AAT?$AAR?$AAI?$AAT?$AAO?$AAN?$AA_?$AAR?$AAE?$AAS?$AAE?$AAT?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@|
  00be8		 |$LN13@TwlDump|
  00be8	00000000	 DCD         |??_C@_1CI@ECAKOHCB@?$AAT?$AAW?$AAL?$AA_?$AA3?$AA2?$AAK?$AAC?$AAL?$AAK?$AAO?$AAU?$AAT?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@|
  00bec		 |$LN14@TwlDump|
  00bec	00000000	 DCD         |??_C@_1CG@GOHDKJFC@?$AAT?$AAW?$AAL?$AA_?$AA3?$AA2?$AAK?$AAC?$AAL?$AAK?$AAO?$AAU?$AAT?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  00bf0		 |$LN15@TwlDump|
  00bf0	00000000	 DCD         |??_C@_1CM@NLHAPHPH@?$AAT?$AAW?$AAL?$AA_?$AA3?$AA2?$AAK?$AAC?$AAL?$AAK?$AAO?$AAU?$AAT?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@|
  00bf4		 |$LN16@TwlDump|
  00bf4	00000000	 DCD         |??_C@_1CG@JMBIIDLN@?$AAT?$AAW?$AAL?$AA_?$AAH?$AAF?$AAC?$AAL?$AAK?$AAO?$AAU?$AAT?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@|
  00bf8		 |$LN17@TwlDump|
  00bf8	00000000	 DCD         |??_C@_1CE@CIIEBHLO@?$AAT?$AAW?$AAL?$AA_?$AAH?$AAF?$AAC?$AAL?$AAK?$AAO?$AAU?$AAT?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  00bfc		 |$LN18@TwlDump|
  00bfc	00000000	 DCD         |??_C@_1CK@HKKHEFBH@?$AAT?$AAW?$AAL?$AA_?$AAH?$AAF?$AAC?$AAL?$AAK?$AAO?$AAU?$AAT?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@|
  00c00		 |$LN19@TwlDump|
  00c00	00000000	 DCD         |??_C@_1CA@CFJDBBNJ@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAY?$AAS?$AAE?$AAN?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@|
  00c04		 |$LN20@TwlDump|
  00c04	00000000	 DCD         |??_C@_1BO@NGGKEBDO@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAY?$AAS?$AAE?$AAN?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  00c08		 |$LN21@TwlDump|
  00c08	00000000	 DCD         |??_C@_1CE@FKLOADHF@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAY?$AAS?$AAE?$AAN?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@|
  00c0c		 |$LN22@TwlDump|
  00c0c	00000000	 DCD         |??_C@_1CA@MFJLKOPC@?$AAT?$AAW?$AAL?$AA_?$AAC?$AAL?$AAK?$AAE?$AAN?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@|
  00c10		 |$LN23@TwlDump|
  00c10	00000000	 DCD         |??_C@_1BO@INCDICFB@?$AAT?$AAW?$AAL?$AA_?$AAC?$AAL?$AAK?$AAE?$AAN?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  00c14		 |$LN24@TwlDump|
  00c14	00000000	 DCD         |??_C@_1CE@ILFMPKBH@?$AAT?$AAW?$AAL?$AA_?$AAC?$AAL?$AAK?$AAE?$AAN?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@|
  00c18		 |$LN25@TwlDump|
  00c18	00000000	 DCD         |??_C@_1CI@NIMIGFMJ@?$AAT?$AAW?$AAL?$AA_?$AAN?$AAR?$AAE?$AAS?$AAP?$AAW?$AAR?$AAO?$AAN?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@|
  00c1c		 |$LN26@TwlDump|
  00c1c	00000000	 DCD         |??_C@_1CG@FILDJJNN@?$AAT?$AAW?$AAL?$AA_?$AAN?$AAR?$AAE?$AAS?$AAP?$AAW?$AAR?$AAO?$AAN?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  00c20		 |$LN27@TwlDump|
  00c20	00000000	 DCD         |??_C@_1CM@MDBMJOFI@?$AAT?$AAW?$AAL?$AA_?$AAN?$AAR?$AAE?$AAS?$AAP?$AAW?$AAR?$AAO?$AAN?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@|
  00c24		 |$LN28@TwlDump|
  00c24	00000000	 DCD         |??_C@_1CA@EGIIMLMD@?$AAT?$AAW?$AAL?$AA_?$AAR?$AAE?$AAG?$AAE?$AAN?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@|
  00c28		 |$LN29@TwlDump|
  00c28	00000000	 DCD         |??_C@_1BO@NHLJDICO@?$AAT?$AAW?$AAL?$AA_?$AAR?$AAE?$AAG?$AAE?$AAN?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  00c2c		 |$LN30@TwlDump|
  00c2c	00000000	 DCD         |??_C@_1CE@JIIJPPBA@?$AAT?$AAW?$AAL?$AA_?$AAR?$AAE?$AAG?$AAE?$AAN?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@|
  00c30		 |$LN31@TwlDump|
  00c30	00000000	 DCD         |??_C@_1CI@FPJHBDEN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA2?$AA?$AA@|
  00c34		 |$LN32@TwlDump|
  00c34	00000000	 DCD         |??_C@_1CI@ENCCLMKD@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA1?$AA?$AA@|
  00c38		 |$LN33@TwlDump|
  00c38	00000000	 DCD         |??_C@_1CC@FIEIBINC@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AAC?$AAP?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@|
  00c3c		 |$LN34@TwlDump|
  00c3c	00000000	 DCD         |??_C@_1CA@JHNNABBA@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AAC?$AAP?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  00c40		 |$LN35@TwlDump|
  00c40	00000000	 DCD         |??_C@_1CG@MOBGKOKO@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AAC?$AAP?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@|
  00c44		 |$LN36@TwlDump|
  00c44	00000000	 DCD         |??_C@_1CE@PAJKAEBN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA3?$AAV?$AA1?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@|
  00c48		 |$LN37@TwlDump|
  00c48	00000000	 DCD         |??_C@_1CC@IEIIJNKN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA3?$AAV?$AA1?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  00c4c		 |$LN38@TwlDump|
  00c4c	00000000	 DCD         |??_C@_1CI@JOAHIGKN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA3?$AAV?$AA1?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@|
  00c50		 |$LN39@TwlDump|
  00c50	00000000	 DCD         |??_C@_1CE@OHCPHMEP@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA1?$AAV?$AA8?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@|
  00c54		 |$LN40@TwlDump|
  00c54	00000000	 DCD         |??_C@_1CC@CPAKAJGO@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA1?$AAV?$AA8?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  00c58		 |$LN41@TwlDump|
  00c58	00000000	 DCD         |??_C@_1CI@LPIAKHFG@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA1?$AAV?$AA8?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@|
  00c5c		 |$LN42@TwlDump|
  00c5c	00000000	 DCD         |??_C@_1CE@OOGFDOBG@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA1?$AAV?$AA5?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@|
  00c60		 |$LN43@TwlDump|
  00c60	00000000	 DCD         |??_C@_1CC@JIPAHJDF@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA1?$AAV?$AA5?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  00c64		 |$LN44@TwlDump|
  00c64	00000000	 DCD         |??_C@_1CI@JNBKBPL@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAU?$AAS?$AAB?$AA1?$AAV?$AA5?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@|
  00c68		 |$LN45@TwlDump|
  00c68	00000000	 DCD         |??_C@_1BM@JCDABOIO@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAS?$AAT?$AAE?$AAP?$AA?$AA@|
  00c6c		 |$LN46@TwlDump|
  00c6c	00000000	 DCD         |??_C@_1BO@BHINLGKG@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAV?$AAR?$AAO?$AAO?$AAF?$AA?$AA@|
  00c70		 |$LN47@TwlDump|
  00c70	00000000	 DCD         |??_C@_1CA@HIHNOBDK@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAV?$AAF?$AAL?$AAO?$AAO?$AAR?$AA?$AA@|
  00c74		 |$LN48@TwlDump|
  00c74	00000000	 DCD         |??_C@_1CG@IPNMFIFG@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAV?$AAM?$AAO?$AAD?$AAE?$AA_?$AAC?$AAF?$AAG?$AA?$AA@|
  00c78		 |$LN49@TwlDump|
  00c78	00000000	 DCD         |??_C@_1BM@GEBDDEPE@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAV?$AAS?$AAE?$AAL?$AA?$AA@|
  00c7c		 |$LN50@TwlDump|
  00c7c	00000000	 DCD         |??_C@_1CE@BGHBAPPP@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAR?$AAE?$AAS?$AAE?$AAR?$AAV?$AAE?$AAD?$AA?$AA@|
  00c80		 |$LN51@TwlDump|
  00c80	00000000	 DCD         |??_C@_1BK@IBKOMOJN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAO?$AAS?$AAC?$AA?$AA@|
  00c84		 |$LN52@TwlDump|
  00c84	00000000	 DCD         |??_C@_1BO@JIJMFDFP@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAT?$AAE?$AAS?$AAT?$AA2?$AA?$AA@|
  00c88		 |$LN53@TwlDump|
  00c88	00000000	 DCD         |??_C@_1BO@IKCJPMLB@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAT?$AAE?$AAS?$AAT?$AA1?$AA?$AA@|
  00c8c		 |$LN54@TwlDump|
  00c8c	00000000	 DCD         |??_C@_1CE@NDDGOIBI@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAM?$AAI?$AAS?$AAC?$AA_?$AAC?$AAF?$AAG?$AA?$AA@|
  00c90		 |$LN55@TwlDump|
  00c90	00000000	 DCD         |??_C@_1BK@KHINPKN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAC?$AAF?$AAG?$AA?$AA@|
  00c94		 |$LN56@TwlDump|
  00c94	00000000	 DCD         |??_C@_1BO@NMKEHJAG@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@|
  00c98		 |$LN57@TwlDump|
  00c98	00000000	 DCD         |??_C@_1BM@NPDFCEKD@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  00c9c		 |$LN58@TwlDump|
  00c9c	00000000	 DCD         |??_C@_1CC@DGCLNKKO@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@|
  00ca0		 |$LN59@TwlDump|
  00ca0	00000000	 DCD         |??_C@_1BM@OOFBDLFF@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAS?$AAT?$AAE?$AAP?$AA?$AA@|
  00ca4		 |$LN60@TwlDump|
  00ca4	00000000	 DCD         |??_C@_1BO@DOEFACFE@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAV?$AAR?$AAO?$AAO?$AAF?$AA?$AA@|
  00ca8		 |$LN61@TwlDump|
  00ca8	00000000	 DCD         |??_C@_1CA@JCPLDMFI@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAV?$AAF?$AAL?$AAO?$AAO?$AAR?$AA?$AA@|
  00cac		 |$LN62@TwlDump|
  00cac	00000000	 DCD         |??_C@_1CG@NHMCPBHO@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAV?$AAM?$AAO?$AAD?$AAE?$AA_?$AAC?$AAF?$AAG?$AA?$AA@|
  00cb0		 |$LN63@TwlDump|
  00cb0	00000000	 DCD         |??_C@_1BM@BIHCBBCP@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAV?$AAS?$AAE?$AAL?$AA?$AA@|
  00cb4		 |$LN64@TwlDump|
  00cb4	00000000	 DCD         |??_C@_1CE@CPAJKCLP@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAR?$AAE?$AAS?$AAE?$AAR?$AAV?$AAE?$AAD?$AA?$AA@|
  00cb8		 |$LN65@TwlDump|
  00cb8	00000000	 DCD         |??_C@_1BK@PGDABMGN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAO?$AAS?$AAC?$AA?$AA@|
  00cbc		 |$LN66@TwlDump|
  00cbc	00000000	 DCD         |??_C@_1BO@LBFEOHKN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAT?$AAE?$AAS?$AAT?$AA2?$AA?$AA@|
  00cc0		 |$LN67@TwlDump|
  00cc0	00000000	 DCD         |??_C@_1BO@KDOBEIED@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAT?$AAE?$AAS?$AAT?$AA1?$AA?$AA@|
  00cc4		 |$LN68@TwlDump|
  00cc4	00000000	 DCD         |??_C@_1CE@OKEOEFFI@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAM?$AAI?$AAS?$AAC?$AA_?$AAC?$AAF?$AAG?$AA?$AA@|
  00cc8		 |$LN69@TwlDump|
  00cc8	00000000	 DCD         |??_C@_1BK@HNOGANFN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAC?$AAF?$AAG?$AA?$AA@|
  00ccc		 |$LN70@TwlDump|
  00ccc	00000000	 DCD         |??_C@_1BO@PFGMMNPE@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@|
  00cd0		 |$LN71@TwlDump|
  00cd0	00000000	 DCD         |??_C@_1BM@KDFEABHI@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  00cd4		 |$LN72@TwlDump|
  00cd4	00000000	 DCD         |??_C@_1CC@JJICJHGE@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@|
  00cd8		 |$LN73@TwlDump|
  00cd8	00000000	 DCD         |??_C@_1BK@CLMMCELB@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAV?$AAS?$AAE?$AAL?$AA?$AA@|
  00cdc		 |$LN74@TwlDump|
  00cdc	00000000	 DCD         |??_C@_1CC@CJBJDONK@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAR?$AAE?$AAS?$AAE?$AAR?$AAV?$AAE?$AAD?$AA?$AA@|
  00ce0		 |$LN75@TwlDump|
  00ce0	00000000	 DCD         |??_C@_1BI@GDLJGNJN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAO?$AAS?$AAC?$AA?$AA@|
  00ce4		 |$LN76@TwlDump|
  00ce4	00000000	 DCD         |??_C@_1BM@ICFLHKE@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAT?$AAE?$AAS?$AAT?$AA2?$AA?$AA@|
  00ce8		 |$LN77@TwlDump|
  00ce8	00000000	 DCD         |??_C@_1BM@BKJABIEK@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAT?$AAE?$AAS?$AAT?$AA1?$AA?$AA@|
  00cec		 |$LN78@TwlDump|
  00cec	00000000	 DCD         |??_C@_1CC@OMFONJDN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAM?$AAI?$AAS?$AAC?$AA_?$AAC?$AAF?$AAG?$AA?$AA@|
  00cf0		 |$LN79@TwlDump|
  00cf0	00000000	 DCD         |??_C@_1BI@OIGPHMKN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAC?$AAF?$AAG?$AA?$AA@|
  00cf4		 |$LN80@TwlDump|
  00cf4	00000000	 DCD         |??_C@_1BM@EMBNJNPN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@|
  00cf8		 |$LN81@TwlDump|
  00cf8	00000000	 DCD         |??_C@_1BK@JAOKDEOG@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  00cfc		 |$LN82@TwlDump|
  00cfc	00000000	 DCD         |??_C@_1CA@MKPLFMB@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@|
  00d00		 |$LN83@TwlDump|
  00d00	00000000	 DCD         |??_C@_1CM@EGJDLKDE@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAD?$AAI?$AAG?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@|
  00d04		 |$LN84@TwlDump|
  00d04	00000000	 DCD         |??_C@_1CE@MBJLJDBL@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAD?$AAI?$AAG?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@|
  00d08		 |$LN85@TwlDump|
  00d08	00000000	 DCD         |??_C@_1CC@CNBGNCHL@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAD?$AAI?$AAG?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  00d0c		 |$LN86@TwlDump|
  00d0c	00000000	 DCD         |??_C@_1CI@LPFEGHP@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAD?$AAI?$AAG?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@|
  00d10		 |$LN87@TwlDump|
  00d10	00000000	 DCD         |??_C@_1CO@LOINEABI@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAA?$AAN?$AAA?$AA2?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@|
  00d14		 |$LN88@TwlDump|
  00d14	00000000	 DCD         |??_C@_1CG@NMAPBFPI@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAA?$AAN?$AAA?$AA2?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@|
  00d18		 |$LN89@TwlDump|
  00d18	00000000	 DCD         |??_C@_1CE@GCPGHNIM@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAA?$AAN?$AAA?$AA2?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  00d1c		 |$LN90@TwlDump|
  00d1c	00000000	 DCD         |??_C@_1CK@FMKMOMFM@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAA?$AAN?$AAA?$AA2?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@|
  00d20		 |$LN91@TwlDump|
  00d20	00000000	 DCD         |??_C@_1CO@OGJDOJDA@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAA?$AAN?$AAA?$AA1?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@|
  00d24		 |$LN92@TwlDump|
  00d24	00000000	 DCD         |??_C@_1CG@PFMHKBAK@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAA?$AAN?$AAA?$AA1?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@|
  00d28		 |$LN93@TwlDump|
  00d28	00000000	 DCD         |??_C@_1CE@BOJHFIFH@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAA?$AAN?$AAA?$AA1?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  00d2c		 |$LN94@TwlDump|
  00d2c	00000000	 DCD         |??_C@_1CK@PDAFKBJG@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAN?$AAT?$AAA?$AAN?$AAA?$AA1?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@|
  00d30		 |$LN95@TwlDump|
  00d30	00000000	 DCD         |??_C@_1CG@IAGMKPEA@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAA?$AAC?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@|
  00d34		 |$LN96@TwlDump|
  00d34	00000000	 DCD         |??_C@_1BO@EJFADKGJ@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAA?$AAC?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@|
  00d38		 |$LN97@TwlDump|
  00d38	00000000	 DCD         |??_C@_1BM@NCAMKLIG@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAA?$AAC?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  00d3c		 |$LN98@TwlDump|
  00d3c	00000000	 DCD         |??_C@_1CC@NHAHENBA@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAA?$AAC?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@|
  00d40		 |$LN99@TwlDump|
  00d40	00000000	 DCD         |??_C@_1CG@KICDMOJB@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAS?$AAI?$AAM?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@|
  00d44		 |$LN100@TwlDump|
  00d44	00000000	 DCD         |??_C@_1BO@HPABGPHI@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAS?$AAI?$AAM?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@|
  00d48		 |$LN101@TwlDump|
  00d48	00000000	 DCD         |??_C@_1BM@KFAJDHDF@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAS?$AAI?$AAM?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  00d4c		 |$LN102@TwlDump|
  00d4c	00000000	 DCD         |??_C@_1CC@DJMPGIDN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAS?$AAI?$AAM?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@|
  00d50		 |$LN103@TwlDump|
  00d50	00000000	 DCD         |??_C@_1CI@GIHPJIAN@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAP?$AAL?$AAL?$AA2?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@|
  00d54		 |$LN104@TwlDump|
  00d54	00000000	 DCD         |??_C@_1CA@HPMFALFJ@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAP?$AAL?$AAL?$AA2?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@|
  00d58		 |$LN105@TwlDump|
  00d58	00000000	 DCD         |??_C@_1BO@KAGCIPMM@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAP?$AAL?$AAL?$AA2?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  00d5c		 |$LN106@TwlDump|
  00d5c	00000000	 DCD         |??_C@_1CE@MBAJNBNA@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAP?$AAL?$AAL?$AA2?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@|
  00d60		 |$LN107@TwlDump|
  00d60	00000000	 DCD         |??_C@_1CI@DAGBDBCF@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAP?$AAL?$AAL?$AA1?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@|
  00d64		 |$LN108@TwlDump|
  00d64	00000000	 DCD         |??_C@_1CA@FGANLPKL@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAP?$AAL?$AAL?$AA1?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@|
  00d68		 |$LN109@TwlDump|
  00d68	00000000	 DCD         |??_C@_1BO@NMADKKBH@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAP?$AAL?$AAL?$AA1?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  00d6c		 |$LN110@TwlDump|
  00d6c	00000000	 DCD         |??_C@_1CE@GOKAJMBK@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAP?$AAL?$AAL?$AA1?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@|
  00d70		 |$LN111@TwlDump|
  00d70	00000000	 DCD         |??_C@_1CI@GBFJHOKB@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAM?$AAM?$AAC?$AA2?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@|
  00d74		 |$LN112@TwlDump|
  00d74	00000000	 DCD         |??_C@_1CA@LHOAAPPG@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAM?$AAM?$AAC?$AA2?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@|
  00d78		 |$LN113@TwlDump|
  00d78	00000000	 DCD         |??_C@_1BO@JHENPDJP@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAM?$AAM?$AAC?$AA2?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  00d7c		 |$LN114@TwlDump|
  00d7c	00000000	 DCD         |??_C@_1CE@KOEEOKDK@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAM?$AAM?$AAC?$AA2?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@|
  00d80		 |$LN115@TwlDump|
  00d80	00000000	 DCD         |??_C@_1CI@DJEHNHIJ@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAM?$AAM?$AAC?$AA1?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@|
  00d84		 |$LN116@TwlDump|
  00d84	00000000	 DCD         |??_C@_1CA@JOCILLAE@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAM?$AAM?$AAC?$AA1?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@|
  00d88		 |$LN117@TwlDump|
  00d88	00000000	 DCD         |??_C@_1BO@OLCMNGEE@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAM?$AAM?$AAC?$AA1?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  00d8c		 |$LN118@TwlDump|
  00d8c	00000000	 DCD         |??_C@_1CE@BONKHPA@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAM?$AAM?$AAC?$AA1?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@|
  00d90		 |$LN119@TwlDump|
  00d90	00000000	 DCD         |??_C@_1CI@DENBMNE@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA4?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@|
  00d94		 |$LN120@TwlDump|
  00d94	00000000	 DCD         |??_C@_1CA@KPPKIBPD@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA4?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@|
  00d98		 |$LN121@TwlDump|
  00d98	00000000	 DCD         |??_C@_1BO@DJLHGCPF@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA4?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  00d9c		 |$LN122@TwlDump|
  00d9c	00000000	 DCD         |??_C@_1CE@NBHAEOAP@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA4?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@|
  00da0		 |$LN123@TwlDump|
  00da0	00000000	 DCD         |??_C@_1CI@DCFFCLKD@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA3?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@|
  00da4		 |$LN124@TwlDump|
  00da4	00000000	 DCD         |??_C@_1CA@FCADHJIG@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA3?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@|
  00da8		 |$LN125@TwlDump|
  00da8	00000000	 DCD         |??_C@_1BO@FMHKMIDF@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA3?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  00dac		 |$LN126@TwlDump|
  00dac	00000000	 DCD         |??_C@_1CE@DADEOIJM@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA3?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@|
  00db0		 |$LN127@TwlDump|
  00db0	00000000	 DCD         |??_C@_1CI@LDHAEOIE@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA2?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@|
  00db4		 |$LN128@TwlDump|
  00db4	00000000	 DCD         |??_C@_1CA@PMGLOIBH@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA2?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@|
  00db8		 |$LN129@TwlDump|
  00db8	00000000	 DCD         |??_C@_1BO@MBHFCJED@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA2?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  00dbc		 |$LN130@TwlDump|
  00dbc	00000000	 DCD         |??_C@_1CE@FFFDNDNK@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA2?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@|
  00dc0		 |$LN131@TwlDump|
  00dc0	00000000	 DCD         |??_C@_1CI@OLGOOHKM@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA1?$AA_?$AAD?$AAE?$AAD?$AAI?$AAC?$AAA?$AAT?$AAE?$AAD?$AA?$AA@|
  00dc4		 |$LN132@TwlDump|
  00dc4	00000000	 DCD         |??_C@_1CA@NFKDFMOF@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA1?$AA_?$AAR?$AAE?$AAM?$AAA?$AAP?$AA?$AA@|
  00dc8		 |$LN133@TwlDump|
  00dc8	00000000	 DCD         |??_C@_1BO@LNBEAMJI@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA1?$AA_?$AAT?$AAY?$AAP?$AAE?$AA?$AA@|
  00dcc		 |$LN134@TwlDump|
  00dcc	00000000	 DCD         |??_C@_1CE@PKPKJOBA@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAA?$AAU?$AAX?$AA1?$AA_?$AAD?$AAE?$AAV?$AA_?$AAG?$AAR?$AAP?$AA?$AA@|
  00dd0		 |$LN135@TwlDump|
  00dd0	00000000	 DCD         |??_C@_1CC@NCNINGIK@?$AAT?$AAW?$AAL?$AA_?$AAD?$AAC?$AAD?$AAC?$AA_?$AAT?$AAI?$AAM?$AAE?$AAO?$AAU?$AAT?$AA?$AA@|
  00dd4		 |$LN136@TwlDump|
  00dd4	00000000	 DCD         |??_C@_1BE@LLJADPAF@?$AAT?$AAW?$AAL?$AA_?$AAT?$AAR?$AAI?$AAM?$AA2?$AA?$AA@|
  00dd8		 |$LN137@TwlDump|
  00dd8	00000000	 DCD         |??_C@_1BE@KJCFJAOL@?$AAT?$AAW?$AAL?$AA_?$AAT?$AAR?$AAI?$AAM?$AA1?$AA?$AA@|
  00ddc		 |$LN138@TwlDump|
  00ddc	00000000	 DCD         |??_C@_1BK@LBPLKNO@?$AAT?$AAW?$AAL?$AA_?$AAM?$AAI?$AAS?$AAC?$AA_?$AAT?$AAS?$AAT?$AA?$AA@|
  00de0		 |$LN139@TwlDump|
  00de0	00000000	 DCD         |??_C@_1BG@PADDDEAA@?$AAT?$AAW?$AAL?$AA_?$AAB?$AAB?$AA_?$AAC?$AAF?$AAG?$AA?$AA@|
  00de4		 |$LN140@TwlDump|
  00de4	00000000	 DCD         |??_C@_1BK@JJELGKLJ@?$AAT?$AAW?$AAL?$AA_?$AAL?$AAS?$AA_?$AAT?$AAS?$AAT?$AA_?$AAD?$AA?$AA@|
  00de8		 |$LN141@TwlDump|
  00de8	00000000	 DCD         |??_C@_1BK@EJMFCAA@?$AAT?$AAW?$AAL?$AA_?$AAL?$AAS?$AA_?$AAT?$AAS?$AAT?$AA_?$AAC?$AA?$AA@|
  00dec		 |$LN142@TwlDump|
  00dec	00000000	 DCD         |??_C@_1BK@LMCADFGF@?$AAT?$AAW?$AAL?$AA_?$AAL?$AAS?$AA_?$AAT?$AAS?$AAT?$AA_?$AAB?$AA?$AA@|
  00df0		 |$LN143@TwlDump|
  00df0	00000000	 DCD         |??_C@_1BK@KOJFJKIL@?$AAT?$AAW?$AAL?$AA_?$AAL?$AAS?$AA_?$AAT?$AAS?$AAT?$AA_?$AAA?$AA?$AA@|
  00df4		 |$LN144@TwlDump|
  00df4	00000000	 DCD         |??_C@_1BK@GMNGOJLF@?$AAT?$AAW?$AAL?$AA_?$AAM?$AAI?$AAS?$AAC?$AA_?$AAC?$AAF?$AAG?$AA?$AA@|
  00df8		 |$LN145@TwlDump|
  00df8	00000000	 DCD         |??_C@_1BM@EPFFDIF@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAT?$AAR?$AAI?$AAM?$AA2?$AA?$AA@|
  00dfc		 |$LN146@TwlDump|
  00dfc	00000000	 DCD         |??_C@_1BM@BGEAPMGL@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAO?$AA_?$AAT?$AAR?$AAI?$AAM?$AA1?$AA?$AA@|
  00e00		 |$LN147@TwlDump|
  00e00	00000000	 DCD         |??_C@_1BO@JEEMLHHO@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAT?$AAR?$AAI?$AAM?$AA2?$AA?$AA@|
  00e04		 |$LN148@TwlDump|
  00e04	00000000	 DCD         |??_C@_1BO@IGPJBIJA@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA2?$AA_?$AAT?$AAR?$AAI?$AAM?$AA1?$AA?$AA@|
  00e08		 |$LN149@TwlDump|
  00e08	00000000	 DCD         |??_C@_1BO@LNIEADIM@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAT?$AAR?$AAI?$AAM?$AA2?$AA?$AA@|
  00e0c		 |$LN150@TwlDump|
  00e0c	00000000	 DCD         |??_C@_1BO@KPDBKMGC@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAD?$AAD?$AA1?$AA_?$AAT?$AAR?$AAI?$AAM?$AA1?$AA?$AA@|
  00e10		 |$LN151@TwlDump|
  00e10	00000000	 DCD         |??_C@_1CI@ENEBFMGG@?$AAT?$AAW?$AAL?$AA_?$AAD?$AAC?$AAD?$AAC?$AA_?$AAG?$AAL?$AAO?$AAB?$AAA?$AAL?$AA_?$AAC?$AAF?$AAG?$AA?$AA@|
  00e14		 |$LN152@TwlDump|
  00e14	00000000	 DCD         |??_C@_1CC@IAKLAHEP@?$AAT?$AAW?$AAL?$AA_?$AAV?$AAI?$AAB?$AAR?$AAA?$AAT?$AAO?$AAR?$AA_?$AAC?$AAF?$AAG?$AA?$AA@|
  00e18		 |$LN153@TwlDump|
  00e18	00000000	 DCD         |??_C@_1CC@DHMCEIBG@?$AAT?$AAW?$AAL?$AA_?$AAI?$AAT?$AA_?$AAC?$AAH?$AAE?$AAC?$AAK?$AA_?$AAC?$AAF?$AAG?$AA?$AA@|
  00e1c		 |$LN154@TwlDump|
  00e1c	00000000	 DCD         |??_C@_1CC@GBIDKBFL@?$AAT?$AAW?$AAL?$AA_?$AAW?$AAA?$AAT?$AAC?$AAH?$AAD?$AAO?$AAG?$AA_?$AAC?$AAF?$AAG?$AA?$AA@|
  00e20		 |$LN155@TwlDump|
  00e20	00000000	 DCD         |??_C@_1BO@KFOMCAFL@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAC?$AA_?$AAD?$AAE?$AAT?$AAE?$AAC?$AAT?$AA2?$AA?$AA@|
  00e24		 |$LN156@TwlDump|
  00e24	00000000	 DCD         |??_C@_1BO@LHFJIPLF@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAC?$AA_?$AAD?$AAE?$AAT?$AAE?$AAC?$AAT?$AA1?$AA?$AA@|
  00e28		 |$LN157@TwlDump|
  00e28	00000000	 DCD         |??_C@_1BM@MJNCPNEK@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAC?$AA_?$AAC?$AAO?$AAN?$AAF?$AAI?$AAG?$AA?$AA@|
  00e2c		 |$LN158@TwlDump|
  00e2c	00000000	 DCD         |??_C@_1CA@LLNNKACL@?$AAT?$AAW?$AAL?$AA_?$AAM?$AAE?$AAM?$AAO?$AAR?$AAY?$AA_?$AAD?$AAA?$AAT?$AAA?$AA?$AA@|
  00e30		 |$LN159@TwlDump|
  00e30	00000000	 DCD         |??_C@_1CG@MNNGICG@?$AAT?$AAW?$AAL?$AA_?$AAM?$AAE?$AAM?$AAO?$AAR?$AAY?$AA_?$AAA?$AAD?$AAD?$AAR?$AAE?$AAS?$AAS?$AA?$AA@|
  00e34		 |$LN160@TwlDump|
  00e34	00000000	 DCD         |??_C@_1CC@EBEPJHLG@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAE?$AAQ?$AA_?$AAA?$AAD?$AAD?$AA_?$AAW?$AAA?$AAR?$AAM?$AA?$AA@|
  00e38		 |$LN161@TwlDump|
  00e38	00000000	 DCD         |??_C@_1CC@GENJAGCF@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAE?$AAQ?$AA_?$AAA?$AAD?$AAD?$AA_?$AAS?$AA2?$AAA?$AA3?$AA?$AA@|
  00e3c		 |$LN162@TwlDump|
  00e3c	00000000	 DCD         |??_C@_1CE@BGHKIACK@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAE?$AAQ?$AA_?$AAA?$AAD?$AAD?$AA_?$AAS?$AA2?$AAA?$AA1?$AA2?$AA?$AA@|
  00e40		 |$LN163@TwlDump|
  00e40	00000000	 DCD         |??_C@_1CA@CDALPNML@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAE?$AAQ?$AA_?$AAA?$AAD?$AAD?$AA_?$AAA?$AA2?$AAS?$AA?$AA@|
  00e44		 |$LN164@TwlDump|
  00e44	00000000	 DCD         |??_C@_1CA@KMGJGKJM@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAE?$AAQ?$AA_?$AAA?$AAD?$AAD?$AA_?$AAA?$AA2?$AAW?$AA?$AA@|
  00e48		 |$LN165@TwlDump|
  00e48	00000000	 DCD         |??_C@_1CA@GJAKFDGK@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAE?$AAQ?$AA_?$AAA?$AAD?$AAD?$AA_?$AAP?$AA2?$AAA?$AA?$AA@|
  00e4c		 |$LN166@TwlDump|
  00e4c	00000000	 DCD         |??_C@_1CA@ILGKGKIJ@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAE?$AAQ?$AA_?$AAA?$AAD?$AAD?$AA_?$AAW?$AA2?$AAP?$AA?$AA@|
  00e50		 |$LN167@TwlDump|
  00e50	00000000	 DCD         |??_C@_1BO@PNNIFIBJ@?$AAT?$AAW?$AAL?$AA_?$AAR?$AAE?$AAS?$AAE?$AAR?$AAV?$AAE?$AAD?$AA_?$AAE?$AA?$AA@|
  00e54		 |$LN168@TwlDump|
  00e54	00000000	 DCD         |??_C@_1BO@EFGEDPHM@?$AAT?$AAW?$AAL?$AA_?$AAR?$AAE?$AAS?$AAE?$AAR?$AAV?$AAE?$AAD?$AA_?$AAD?$AA?$AA@|
  00e58		 |$LN169@TwlDump|
  00e58	00000000	 DCD         |??_C@_1BO@NILDAHMF@?$AAT?$AAW?$AAL?$AA_?$AAR?$AAE?$AAS?$AAE?$AAR?$AAV?$AAE?$AAD?$AA_?$AAC?$AA?$AA@|
  00e5c		 |$LN170@TwlDump|
  00e5c	00000000	 DCD         |??_C@_1BO@GAAPGAKA@?$AAT?$AAW?$AAL?$AA_?$AAR?$AAE?$AAS?$AAE?$AAR?$AAV?$AAE?$AAD?$AA_?$AAB?$AA?$AA@|
  00e60		 |$LN171@TwlDump|
  00e60	00000000	 DCD         |??_C@_1BO@HCLKMPEO@?$AAT?$AAW?$AAL?$AA_?$AAR?$AAE?$AAS?$AAE?$AAR?$AAV?$AAE?$AAD?$AA_?$AAA?$AA?$AA@|
  00e64		 |$LN172@TwlDump|
  00e64	00000000	 DCD         |??_C@_1CA@BOJPPHGN@?$AAT?$AAW?$AAL?$AA_?$AAP?$AAB?$AA_?$AAW?$AAO?$AAR?$AAD?$AA_?$AAL?$AAS?$AAB?$AA?$AA@|
  00e68		 |$LN173@TwlDump|
  00e68	00000000	 DCD         |??_C@_1CA@NCDFPHPD@?$AAT?$AAW?$AAL?$AA_?$AAP?$AAB?$AA_?$AAW?$AAO?$AAR?$AAD?$AA_?$AAM?$AAS?$AAB?$AA?$AA@|
  00e6c		 |$LN174@TwlDump|
  00e6c	00000000	 DCD         |??_C@_1BG@HHOPMMMB@?$AAT?$AAW?$AAL?$AA_?$AAP?$AAB?$AA_?$AAC?$AAF?$AAG?$AA?$AA@|
  00e70		 |$LN175@TwlDump|
  00e70	00000000	 DCD         |??_C@_1CG@ICBMDMK@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAT?$AAS?$AA_?$AAP?$AA1?$AA2?$AA3?$AA_?$AAS?$AAT?$AAA?$AAT?$AAE?$AA?$AA@|
  00e74		 |$LN176@TwlDump|
  00e74	00000000	 DCD         |??_C@_1CC@LMKBLMBG@?$AAT?$AAW?$AAL?$AA_?$AAP?$AA3?$AA_?$AAS?$AAW?$AA_?$AAE?$AAV?$AAE?$AAN?$AAT?$AAS?$AA?$AA@|
  00e78		 |$LN177@TwlDump|
  00e78	00000000	 DCD         |??_C@_1CC@DNIENJDB@?$AAT?$AAW?$AAL?$AA_?$AAP?$AA2?$AA_?$AAS?$AAW?$AA_?$AAE?$AAV?$AAE?$AAN?$AAT?$AAS?$AA?$AA@|
  00e7c		 |$LN178@TwlDump|
  00e7c	00000000	 DCD         |??_C@_1CC@GFJKHABJ@?$AAT?$AAW?$AAL?$AA_?$AAP?$AA1?$AA_?$AAS?$AAW?$AA_?$AAE?$AAV?$AAE?$AAN?$AAT?$AAS?$AA?$AA@|
  00e80		 |$LN179@TwlDump|
  00e80	00000000	 DCD         |??_C@_1CM@INKDNOIM@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAT?$AAS?$AA_?$AAH?$AAW?$AA_?$AAC?$AAO?$AAN?$AAD?$AAI?$AAT?$AAI?$AAO?$AAN?$AAS?$AA?$AA@|
  00e84		 |$LN180@TwlDump|
  00e84	00000000	 DCD         |??_C@_1CA@OGGMHJKA@?$AAT?$AAW?$AAL?$AA_?$AAP?$AAR?$AAO?$AAT?$AAE?$AAC?$AAT?$AA_?$AAK?$AAE?$AAY?$AA?$AA@|
  00e88		 |$LN181@TwlDump|
  00e88	00000000	 DCD         |??_C@_1CI@GIBGEFBM@?$AAT?$AAW?$AAL?$AA_?$AAB?$AAA?$AAC?$AAK?$AAU?$AAP?$AA_?$AAM?$AAI?$AAS?$AAC?$AA_?$AAT?$AAS?$AAT?$AA?$AA@|
  00e8c		 |$LN182@TwlDump|
  00e8c	00000000	 DCD         |??_C@_1CI@PNPBGHH@?$AAT?$AAW?$AAL?$AA_?$AAB?$AAA?$AAC?$AAK?$AAU?$AAP?$AA_?$AAM?$AAI?$AAS?$AAC?$AA_?$AAC?$AAF?$AAG?$AA?$AA@|
  00e90		 |$LN183@TwlDump|
  00e90	00000000	 DCD         |??_C@_1CI@OCABEEAE@?$AAT?$AAW?$AAL?$AA_?$AAB?$AAA?$AAC?$AAK?$AAU?$AAP?$AA_?$AAM?$AAI?$AAS?$AAC?$AA_?$AAS?$AAT?$AAS?$AA?$AA@|
  00e94		 |$LN184@TwlDump|
  00e94	00000000	 DCD         |??_C@_1BM@DAHFEIMF@?$AAT?$AAW?$AAL?$AA_?$AAB?$AAG?$AAA?$AAP?$AA_?$AAT?$AAR?$AAI?$AAM?$AA?$AA@|
  00e98		 |$LN185@TwlDump|
  00e98	00000000	 DCD         |??_C@_1CA@FOCPKLBM@?$AAT?$AAW?$AAL?$AA_?$AAC?$AAF?$AAG?$AA_?$AAP?$AAW?$AAR?$AAA?$AAN?$AAA?$AA2?$AA?$AA@|
  00e9c		 |$LN186@TwlDump|
  00e9c	00000000	 DCD         |??_C@_1CA@EMJKAEPC@?$AAT?$AAW?$AAL?$AA_?$AAC?$AAF?$AAG?$AA_?$AAP?$AAW?$AAR?$AAA?$AAN?$AAA?$AA1?$AA?$AA@|
  00ea0		 |$LN187@TwlDump|
  00ea0	00000000	 DCD         |??_C@_1BK@IBEHGLBF@?$AAT?$AAW?$AAL?$AA_?$AAB?$AAO?$AAO?$AAT?$AA_?$AAB?$AAC?$AAI?$AA?$AA@|
  00ea4		 |$LN188@TwlDump|
  00ea4	00000000	 DCD         |??_C@_1BI@ELLCNJKN@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAH?$AAU?$AAN?$AAD?$AAA?$AAN?$AA?$AA@|
  00ea8		 |$LN189@TwlDump|
  00ea8	00000000	 DCD         |??_C@_1BK@GNEBDJKC@?$AAT?$AAW?$AAL?$AA_?$AAC?$AAF?$AAG?$AA_?$AAB?$AAO?$AAO?$AAT?$AA?$AA@|
  00eac		 |$LN190@TwlDump|
  00eac	00000000	 DCD         |??_C@_1BK@FNHLMNDA@?$AAT?$AAW?$AAL?$AA_?$AAS?$AAT?$AAS?$AA_?$AAB?$AAO?$AAO?$AAT?$AA?$AA@|
  00eb0		 |$LN191@TwlDump|
  00eb0	00000000	 DCD         |??_C@_1DA@HDPMAPEI@?$AAT?$AAW?$AAL?$AA_?$AAC?$AAF?$AAG?$AA_?$AAP?$AA1?$AA2?$AA3?$AA_?$AAT?$AAR?$AAA?$AAN?$AAS?$AAI?$AAT?$AAI?$AAO?$AAN?$AA?$AA@|
  00eb4		 |$LN192@TwlDump|
  00eb4	00000000	 DCD         |??_C@_1CM@NILPJJLI@?$AAT?$AAW?$AAL?$AA_?$AAC?$AAF?$AAG?$AA_?$AAP?$AA3?$AA_?$AAT?$AAR?$AAA?$AAN?$AAS?$AAI?$AAT?$AAI?$AAO?$AAN?$AA?$AA@|
  00eb8		 |$LN193@TwlDump|
  00eb8	00000000	 DCD         |??_C@_1CM@DPKCDPCP@?$AAT?$AAW?$AAL?$AA_?$AAC?$AAF?$AAG?$AA_?$AAP?$AA2?$AA_?$AAT?$AAR?$AAA?$AAN?$AAS?$AAI?$AAT?$AAI?$AAO?$AAN?$AA?$AA@|
  00ebc		 |$LN194@TwlDump|
  00ebc	00000000	 DCD         |??_C@_1CM@MNPFNCNH@?$AAT?$AAW?$AAL?$AA_?$AAC?$AAF?$AAG?$AA_?$AAP?$AA1?$AA_?$AAT?$AAR?$AAA?$AAN?$AAS?$AAI?$AAT?$AAI?$AAO?$AAN?$AA?$AA@|
  00ec0		 |$M49815|

			 ENDP  ; |TwlDump|

	EXPORT	|OALIoCtlPrcmDeviceSetAutoIdleState|
	EXPORT	|??_C@_1FO@JLFGCFEN@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAe?$AAt?$AAA?$AAu?$AAt?$AAo?$AAI?$AAd?$AAl?$AAe?$AAS?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@EIPOCMLO@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAe?$AAt?$AAA?$AAu?$AAt?$AAo?$AAI?$AAd?$AAl?$AAe?$AAS?$AAt@| [ DATA ] ; `string'
	IMPORT	|PrcmDeviceEnableAutoIdle|
	IMPORT	|dpCurSettings|

  00000			 AREA	 |.pdata|, PDATA
|$T50023| DCD	|$LN12@OALIoCtlPr|
	DCD	0x40002501

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FO@JLFGCFEN@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAe?$AAt?$AAA?$AAu?$AAt?$AAo?$AAI?$AAd?$AAl?$AAe?$AAS?$AAt@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "P", 0x0, "r", 0x0, "c", 0x0, "m"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "A", 0x0, "u", 0x0, "t"
	DCB	0x0, "o", 0x0, "I", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "(", 0x0, "r"
	DCB	0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@EIPOCMLO@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAe?$AAt?$AAA?$AAu?$AAt?$AAo?$AAI?$AAd?$AAl?$AAe?$AAS?$AAt@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "P", 0x0, "r", 0x0, "c", 0x0, "m"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "A", 0x0, "u", 0x0, "t"
	DCB	0x0, "o", 0x0, "I", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALIoCtlPrcmDeviceSetAutoIdleState| PROC

; 743  : {

  00000		 |$LN12@OALIoCtlPr|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M50020|
  00004	e1a07002	 mov         r7, r2
  00008	e1a05001	 mov         r5, r1

; 744  :     BOOL rc = FALSE;
; 745  :     IOCTL_PRCM_DEVICE_ENABLE_IN *pInfo;
; 746  : 
; 747  :     UNREFERENCED_PARAMETER(outSize);
; 748  :     UNREFERENCED_PARAMETER(code);
; 749  :     UNREFERENCED_PARAMETER(pOutBuffer);
; 750  : 
; 751  :     OALMSG(OAL_IOCTL&&OAL_FUNC, (L"+OALIoCtlPrcmDeviceSetAutoIdleState\r\n"));

  0000c	e59f607c	 ldr         r6, [pc, #0x7C]
  00010	e3a04000	 mov         r4, #0
  00014	e5963440	 ldr         r3, [r6, #0x440]
  00018	e3130a01	 tst         r3, #1, 20
  0001c	0a000004	 beq         |$LN6@OALIoCtlPr|
  00020	e3130004	 tst         r3, #4
  00024	0a000002	 beq         |$LN6@OALIoCtlPr|
  00028	e59f005c	 ldr         r0, [pc, #0x5C]
  0002c	eb000000	 bl          NKDbgPrintfW
  00030	e5963440	 ldr         r3, [r6, #0x440]
  00034		 |$LN6@OALIoCtlPr|

; 752  :     if (pInBuffer == NULL || inSize < sizeof(IOCTL_PRCM_DEVICE_ENABLE_IN))

  00034	e3550000	 cmp         r5, #0
  00038	0a00000a	 beq         |$cleanUp$47879|
  0003c	e3570018	 cmp         r7, #0x18
  00040	3a000008	 bcc         |$cleanUp$47879|

; 753  :         {
; 754  :         goto cleanUp;
; 755  :         }
; 756  : 
; 757  :     // update info and call appropriate routine
; 758  :     //
; 759  :     if (pOutSize != NULL) *pOutSize = 0;

  00044	e59d3018	 ldr         r3, [sp, #0x18]
  00048	e3530000	 cmp         r3, #0
  0004c	13a02000	 movne       r2, #0
  00050	15832000	 strne       r2, [r3]

; 760  :     pInfo = (IOCTL_PRCM_DEVICE_ENABLE_IN*)(pInBuffer);        
; 761  :     PrcmDeviceEnableAutoIdle(pInfo->devId, pInfo->bEnable);

  00054	e5951014	 ldr         r1, [r5, #0x14]
  00058	e5950010	 ldr         r0, [r5, #0x10]
  0005c	eb000000	 bl          PrcmDeviceEnableAutoIdle

; 762  : 
; 763  :     rc = TRUE;

  00060	e5963440	 ldr         r3, [r6, #0x440]
  00064	e3a04001	 mov         r4, #1
  00068		 |$cleanUp$47879|

; 764  : 
; 765  : cleanUp:
; 766  :     OALMSG(OAL_INTR&&OAL_FUNC, (L"-OALIoCtlPrcmDeviceSetAutoIdleState(rc = %d)\r\n", rc));

  00068	e3130901	 tst         r3, #1, 18
  0006c	13130004	 tstne       r3, #4
  00070	159f0010	 ldrne       r0, [pc, #0x10]
  00074	11a01004	 movne       r1, r4
  00078	1b000000	 blne        NKDbgPrintfW

; 767  :     return rc;
; 768  : }

  0007c	e1a00004	 mov         r0, r4
  00080	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00084	e12fff1e	 bx          lr
  00088		 |$LN13@OALIoCtlPr|
  00088		 |$LN14@OALIoCtlPr|
  00088	00000000	 DCD         |??_C@_1FO@JLFGCFEN@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAe?$AAt?$AAA?$AAu?$AAt?$AAo?$AAI?$AAd?$AAl?$AAe?$AAS?$AAt@|
  0008c		 |$LN15@OALIoCtlPr|
  0008c	00000000	 DCD         |??_C@_1EM@EIPOCMLO@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAe?$AAt?$AAA?$AAu?$AAt?$AAo?$AAI?$AAd?$AAl?$AAe?$AAS?$AAt@|
  00090		 |$LN16@OALIoCtlPr|
  00090	00000000	 DCD         |dpCurSettings|
  00094		 |$M50021|

			 ENDP  ; |OALIoCtlPrcmDeviceSetAutoIdleState|

	EXPORT	|OALIoCtlPrcmDeviceGetDeviceStatus|
	EXPORT	|??_C@_1FM@LBIPKPNP@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@IDKGDIPB@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt@| [ DATA ] ; `string'
	IMPORT	|PrcmDeviceGetAutoIdleState|
	IMPORT	|PrcmDeviceGetEnabledState|

  00000			 AREA	 |.pdata|, PDATA
|$T50046| DCD	|$LN15@OALIoCtlPr@2|
	DCD	0x40003101

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FM@LBIPKPNP@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "P", 0x0, "r", 0x0, "c", 0x0, "m"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "G", 0x0, "e", 0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "u", 0x0, "s", 0x0, "(", 0x0, "r", 0x0, "c"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@IDKGDIPB@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "P", 0x0, "r", 0x0, "c", 0x0, "m"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "G", 0x0, "e", 0x0, "t", 0x0, "D", 0x0, "e", 0x0, "v"
	DCB	0x0, "i", 0x0, "c", 0x0, "e", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "u", 0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALIoCtlPrcmDeviceGetDeviceStatus| PROC

; 784  : {

  00000		 |$LN15@OALIoCtlPr@2|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M50043|
  00004	e1a06003	 mov         r6, r3
  00008	e1a08002	 mov         r8, r2
  0000c	e1a07001	 mov         r7, r1

; 785  :     BOOL rc = FALSE;
; 786  :     IOCTL_PRCM_DEVICE_GET_DEVICESTATUS_OUT *pOut;
; 787  : 
; 788  :     UNREFERENCED_PARAMETER(code);
; 789  : 
; 790  :     OALMSG(OAL_IOCTL&&OAL_FUNC, (L"+OALIoCtlPrcmDeviceGetDeviceStatus\r\n"));

  00010	e59f50a8	 ldr         r5, [pc, #0xA8]
  00014	e3a04000	 mov         r4, #0
  00018	e5950440	 ldr         r0, [r5, #0x440]
  0001c	e3100a01	 tst         r0, #1, 20
  00020	0a000004	 beq         |$LN8@OALIoCtlPr@2|
  00024	e3100004	 tst         r0, #4
  00028	0a000002	 beq         |$LN8@OALIoCtlPr@2|
  0002c	e59f0088	 ldr         r0, [pc, #0x88]
  00030	eb000000	 bl          NKDbgPrintfW
  00034	e5950440	 ldr         r0, [r5, #0x440]
  00038		 |$LN8@OALIoCtlPr@2|

; 791  :     
; 792  :     // validate parameters
; 793  :     //
; 794  :     if (pInBuffer == NULL || inSize != sizeof(UINT) ||
; 795  :         pOutBuffer == NULL || outSize != sizeof(IOCTL_PRCM_DEVICE_GET_DEVICESTATUS_OUT))

  00038	e3570000	 cmp         r7, #0
  0003c	0a000015	 beq         |$cleanUp$47908|
  00040	e3580004	 cmp         r8, #4
  00044	1a000013	 bne         |$cleanUp$47908|
  00048	e3560000	 cmp         r6, #0
  0004c	0a000011	 beq         |$cleanUp$47908|
  00050	e59d3018	 ldr         r3, [sp, #0x18]
  00054	e3530008	 cmp         r3, #8
  00058	1a00000e	 bne         |$cleanUp$47908|

; 796  :         {
; 797  :         goto cleanUp;
; 798  :         }
; 799  : 
; 800  :     if (pOutSize != NULL) *pOutSize = 0;

  0005c	e59d301c	 ldr         r3, [sp, #0x1C]

; 801  :     
; 802  :     // update function pointers
; 803  :     //
; 804  :     pOut = (IOCTL_PRCM_DEVICE_GET_DEVICESTATUS_OUT*)pOutBuffer;
; 805  :     if (PrcmDeviceGetEnabledState(*(UINT*)pInBuffer, &pOut->bEnabled) == FALSE ||
; 806  :         PrcmDeviceGetAutoIdleState(*(UINT*)pInBuffer, &pOut->bAutoIdle) == FALSE)

  00060	e1a01006	 mov         r1, r6
  00064	e3530000	 cmp         r3, #0
  00068	13a02000	 movne       r2, #0
  0006c	15832000	 strne       r2, [r3]
  00070	e5970000	 ldr         r0, [r7]
  00074	eb000000	 bl          PrcmDeviceGetEnabledState
  00078	e3500000	 cmp         r0, #0
  0007c	0a000004	 beq         |$LN12@OALIoCtlPr@2|
  00080	e5970000	 ldr         r0, [r7]
  00084	e2861004	 add         r1, r6, #4
  00088	eb000000	 bl          PrcmDeviceGetAutoIdleState
  0008c	e3500000	 cmp         r0, #0

; 807  :         {
; 808  :         goto cleanUp;
; 809  :         }
; 810  : 
; 811  :     rc = TRUE;

  00090	13a04001	 movne       r4, #1
  00094		 |$LN12@OALIoCtlPr@2|
  00094	e5950440	 ldr         r0, [r5, #0x440]
  00098		 |$cleanUp$47908|

; 812  : cleanUp:
; 813  :     OALMSG(OAL_INTR&&OAL_FUNC, (L"-OALIoCtlPrcmDeviceGetDeviceStatus(rc = %d)\r\n", rc));

  00098	e3100901	 tst         r0, #1, 18
  0009c	13100004	 tstne       r0, #4
  000a0	159f0010	 ldrne       r0, [pc, #0x10]
  000a4	11a01004	 movne       r1, r4
  000a8	1b000000	 blne        NKDbgPrintfW

; 814  :     return rc;
; 815  : }

  000ac	e1a00004	 mov         r0, r4
  000b0	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  000b4	e12fff1e	 bx          lr
  000b8		 |$LN16@OALIoCtlPr@2|
  000b8		 |$LN17@OALIoCtlPr@2|
  000b8	00000000	 DCD         |??_C@_1FM@LBIPKPNP@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt@|
  000bc		 |$LN18@OALIoCtlPr@2|
  000bc	00000000	 DCD         |??_C@_1EK@IDKGDIPB@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAG?$AAe?$AAt?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS?$AAt?$AAa?$AAt@|
  000c0		 |$LN19@OALIoCtlPr@2|
  000c0	00000000	 DCD         |dpCurSettings|
  000c4		 |$M50044|

			 ENDP  ; |OALIoCtlPrcmDeviceGetDeviceStatus|

	EXPORT	|OALIoCtlPrcmDeviceGetSourceClockInfo|
	EXPORT	|??_C@_1GC@PIMMNGGL@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAG?$AAe?$AAt?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAC?$AAl?$AAo?$AAc@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@ECEPPKCB@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAG?$AAe?$AAt?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAC?$AAl?$AAo?$AAc@| [ DATA ] ; `string'
	IMPORT	|PrcmDeviceGetSourceClockInfo|

  00000			 AREA	 |.pdata|, PDATA
|$T50068| DCD	|$LN12@OALIoCtlPr@3|
	DCD	0x40002b01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@PIMMNGGL@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAG?$AAe?$AAt?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAC?$AAl?$AAo?$AAc@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "P", 0x0, "r", 0x0, "c", 0x0, "m"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "G", 0x0, "e", 0x0, "t", 0x0, "S", 0x0, "o", 0x0, "u"
	DCB	0x0, "r", 0x0, "c", 0x0, "e", 0x0, "C", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "k", 0x0, "I", 0x0, "n", 0x0, "f", 0x0, "o"
	DCB	0x0, "(", 0x0, "r", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@ECEPPKCB@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAG?$AAe?$AAt?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAC?$AAl?$AAo?$AAc@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "P", 0x0, "r", 0x0, "c", 0x0, "m"
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, "G", 0x0, "e", 0x0, "t", 0x0, "S", 0x0, "o", 0x0, "u"
	DCB	0x0, "r", 0x0, "c", 0x0, "e", 0x0, "C", 0x0, "l", 0x0, "o"
	DCB	0x0, "c", 0x0, "k", 0x0, "I", 0x0, "n", 0x0, "f", 0x0, "o"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALIoCtlPrcmDeviceGetSourceClockInfo| PROC

; 831  : {

  00000		 |$LN12@OALIoCtlPr@3|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004		 |$M50065|
  00004	e1a05003	 mov         r5, r3
  00008	e1a08002	 mov         r8, r2
  0000c	e1a07001	 mov         r7, r1

; 832  :     BOOL rc = FALSE;
; 833  :     IOCTL_PRCM_DEVICE_GET_SOURCECLOCKINFO_OUT *pOut;
; 834  : 
; 835  :     UNREFERENCED_PARAMETER(code);
; 836  : 
; 837  :     OALMSG(OAL_IOCTL&&OAL_FUNC, (L"+OALIoCtlPrcmDeviceGetSourceClockInfo\r\n"));

  00010	e59f6090	 ldr         r6, [pc, #0x90]
  00014	e3a04000	 mov         r4, #0
  00018	e5960440	 ldr         r0, [r6, #0x440]
  0001c	e3100a01	 tst         r0, #1, 20
  00020	0a000004	 beq         |$LN6@OALIoCtlPr@3|
  00024	e3100004	 tst         r0, #4
  00028	0a000002	 beq         |$LN6@OALIoCtlPr@3|
  0002c	e59f0070	 ldr         r0, [pc, #0x70]
  00030	eb000000	 bl          NKDbgPrintfW
  00034	e5960440	 ldr         r0, [r6, #0x440]
  00038		 |$LN6@OALIoCtlPr@3|

; 838  :     
; 839  :     if (pInBuffer == NULL || inSize != sizeof(UINT) ||
; 840  :         pOutBuffer == NULL || outSize != sizeof(IOCTL_PRCM_DEVICE_GET_SOURCECLOCKINFO_OUT))

  00038	e3570000	 cmp         r7, #0
  0003c	0a00000f	 beq         |$cleanUp$47941|
  00040	e3580004	 cmp         r8, #4
  00044	1a00000d	 bne         |$cleanUp$47941|
  00048	e3550000	 cmp         r5, #0
  0004c	0a00000b	 beq         |$cleanUp$47941|
  00050	e59d3018	 ldr         r3, [sp, #0x18]
  00054	e3530028	 cmp         r3, #0x28
  00058	1a000008	 bne         |$cleanUp$47941|

; 841  :         {
; 842  :         goto cleanUp;
; 843  :         }
; 844  : 
; 845  :     // update info and call appropriate routine
; 846  :     //
; 847  :     if (pOutSize != NULL) *pOutSize = 0;

  0005c	e59d301c	 ldr         r3, [sp, #0x1C]

; 848  :     pOut = (IOCTL_PRCM_DEVICE_GET_SOURCECLOCKINFO_OUT*)(pOutBuffer);        
; 849  :     rc = PrcmDeviceGetSourceClockInfo(*(UINT*)pInBuffer, pOut);

  00060	e1a01005	 mov         r1, r5
  00064	e3530000	 cmp         r3, #0
  00068	13a02000	 movne       r2, #0
  0006c	15832000	 strne       r2, [r3]
  00070	e5970000	 ldr         r0, [r7]
  00074	eb000000	 bl          PrcmDeviceGetSourceClockInfo
  00078	e1a04000	 mov         r4, r0
  0007c	e5960440	 ldr         r0, [r6, #0x440]
  00080		 |$cleanUp$47941|

; 850  : 
; 851  : cleanUp:
; 852  :     OALMSG(OAL_INTR&&OAL_FUNC, (L"-OALIoCtlPrcmDeviceGetSourceClockInfo(rc = %d)\r\n", rc));

  00080	e3100901	 tst         r0, #1, 18
  00084	13100004	 tstne       r0, #4
  00088	159f0010	 ldrne       r0, [pc, #0x10]
  0008c	11a01004	 movne       r1, r4
  00090	1b000000	 blne        NKDbgPrintfW

; 853  :     return rc;
; 854  : }

  00094	e1a00004	 mov         r0, r4
  00098	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  0009c	e12fff1e	 bx          lr
  000a0		 |$LN13@OALIoCtlPr@3|
  000a0		 |$LN14@OALIoCtlPr@3|
  000a0	00000000	 DCD         |??_C@_1GC@PIMMNGGL@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAG?$AAe?$AAt?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAC?$AAl?$AAo?$AAc@|
  000a4		 |$LN15@OALIoCtlPr@3|
  000a4	00000000	 DCD         |??_C@_1FA@ECEPPKCB@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAG?$AAe?$AAt?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAC?$AAl?$AAo?$AAc@|
  000a8		 |$LN16@OALIoCtlPr@3|
  000a8	00000000	 DCD         |dpCurSettings|
  000ac		 |$M50066|

			 ENDP  ; |OALIoCtlPrcmDeviceGetSourceClockInfo|

	EXPORT	|OALIoCtlPrcmClockGetSourceClockInfo|
	EXPORT	|??_C@_1GA@NDMNMIPM@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAC?$AAl?$AAo?$AAc?$AAk?$AAG?$AAe?$AAt?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAC?$AAl?$AAo?$AAc?$AAk@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@HHGONEEA@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAC?$AAl?$AAo?$AAc?$AAk?$AAG?$AAe?$AAt?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAC?$AAl?$AAo?$AAc?$AAk@| [ DATA ] ; `string'
	IMPORT	|PrcmClockGetParentClockInfo|
	IMPORT	|PrcmClockGetParentClockRefcount|

  00000			 AREA	 |.pdata|, PDATA
|$T50091| DCD	|$LN14@OALIoCtlPr@4|
	DCD	0x40003e02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@NDMNMIPM@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAC?$AAl?$AAo?$AAc?$AAk?$AAG?$AAe?$AAt?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAC?$AAl?$AAo?$AAc?$AAk@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "P", 0x0, "r", 0x0, "c", 0x0, "m"
	DCB	0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "S", 0x0, "o", 0x0, "u", 0x0, "r"
	DCB	0x0, "c", 0x0, "e", 0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, "k", 0x0, "I", 0x0, "n", 0x0, "f", 0x0, "o", 0x0, "("
	DCB	0x0, "r", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@HHGONEEA@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAC?$AAl?$AAo?$AAc?$AAk?$AAG?$AAe?$AAt?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAC?$AAl?$AAo?$AAc?$AAk@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "P", 0x0, "r", 0x0, "c", 0x0, "m"
	DCB	0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, "G"
	DCB	0x0, "e", 0x0, "t", 0x0, "S", 0x0, "o", 0x0, "u", 0x0, "r"
	DCB	0x0, "c", 0x0, "e", 0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, "k", 0x0, "I", 0x0, "n", 0x0, "f", 0x0, "o", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALIoCtlPrcmClockGetSourceClockInfo| PROC

; 870  : {

  00000		 |$LN14@OALIoCtlPr@4|
  00000	e92d41f0	 stmdb       sp!, {r4 - r8, lr}
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M50088|
  00008	e1a04003	 mov         r4, r3
  0000c	e1a08002	 mov         r8, r2
  00010	e1a07001	 mov         r7, r1

; 871  :     BOOL rc = FALSE;
; 872  :     SourceClockInfo_t info;
; 873  :     IOCTL_PRCM_CLOCK_GET_SOURCECLOCKINFO_IN *pIn;
; 874  :     IOCTL_PRCM_CLOCK_GET_SOURCECLOCKINFO_OUT *pOut;
; 875  : 
; 876  :     UNREFERENCED_PARAMETER(code);
; 877  : 
; 878  :     OALMSG(OAL_IOCTL&&OAL_FUNC, (L"+OALIoCtlPrcmClockGetSourceClockInfo\r\n"));

  00014	e59f50d8	 ldr         r5, [pc, #0xD8]
  00018	e3a06000	 mov         r6, #0
  0001c	e5950440	 ldr         r0, [r5, #0x440]
  00020	e3100a01	 tst         r0, #1, 20
  00024	0a000004	 beq         |$LN7@OALIoCtlPr@4|
  00028	e3100004	 tst         r0, #4
  0002c	0a000002	 beq         |$LN7@OALIoCtlPr@4|
  00030	e59f00b8	 ldr         r0, [pc, #0xB8]
  00034	eb000000	 bl          NKDbgPrintfW
  00038	e5950440	 ldr         r0, [r5, #0x440]
  0003c		 |$LN7@OALIoCtlPr@4|

; 879  :     
; 880  :     if (pInBuffer == NULL || inSize != sizeof(IOCTL_PRCM_CLOCK_GET_SOURCECLOCKINFO_IN) ||
; 881  :         pOutBuffer == NULL || outSize != sizeof(IOCTL_PRCM_CLOCK_GET_SOURCECLOCKINFO_OUT))

  0003c	e3570000	 cmp         r7, #0
  00040	0a000020	 beq         |$cleanUp$47973|
  00044	e3580008	 cmp         r8, #8
  00048	1a00001e	 bne         |$cleanUp$47973|
  0004c	e3540000	 cmp         r4, #0
  00050	0a00001c	 beq         |$cleanUp$47973|
  00054	e59d3024	 ldr         r3, [sp, #0x24]
  00058	e3530010	 cmp         r3, #0x10
  0005c	1a000019	 bne         |$cleanUp$47973|

; 882  :         {
; 883  :         goto cleanUp;
; 884  :         }
; 885  : 
; 886  :     // update info and call appropriate routine
; 887  :     //
; 888  :     if (pOutSize != NULL) *pOutSize = 0;

  00060	e59d3028	 ldr         r3, [sp, #0x28]
  00064	e3530000	 cmp         r3, #0
  00068	13a02000	 movne       r2, #0
  0006c	15832000	 strne       r2, [r3]

; 889  :     pIn = (IOCTL_PRCM_CLOCK_GET_SOURCECLOCKINFO_IN*)pInBuffer;
; 890  :     pOut = (IOCTL_PRCM_CLOCK_GET_SOURCECLOCKINFO_OUT*)pOutBuffer;
; 891  : 
; 892  :     memset(pOut, 0, sizeof(IOCTL_PRCM_CLOCK_GET_SOURCECLOCKINFO_OUT));

  00070	e3a03000	 mov         r3, #0
  00074	e5843000	 str         r3, [r4]
  00078	e5843004	 str         r3, [r4, #4]
  0007c	e5843008	 str         r3, [r4, #8]
  00080	e584300c	 str         r3, [r4, #0xC]

; 893  :     rc = PrcmClockGetParentClockRefcount(pIn->clockId, pIn->clockLevel, &pOut->refCount);

  00084	e5971004	 ldr         r1, [r7, #4]
  00088	e5970000	 ldr         r0, [r7]
  0008c	e1a02004	 mov         r2, r4
  00090	eb000000	 bl          PrcmClockGetParentClockRefcount

; 894  :     if (PrcmClockGetParentClockInfo(pIn->clockId, pIn->clockLevel, &info))

  00094	e5971004	 ldr         r1, [r7, #4]
  00098	e1a06000	 mov         r6, r0
  0009c	e5970000	 ldr         r0, [r7]
  000a0	e28d2000	 add         r2, sp, #0
  000a4	eb000000	 bl          PrcmClockGetParentClockInfo
  000a8	e3500000	 cmp         r0, #0

; 895  :         {        
; 896  :         pOut->parentId = info.clockId;

  000ac	159d3000	 ldrne       r3, [sp]

; 897  :         pOut->parentLevel = info.nLevel;

  000b0	159d2008	 ldrne       r2, [sp, #8]

; 898  :         pOut->parentRefCount = info.refCount;

  000b4	159d1004	 ldrne       r1, [sp, #4]
  000b8	15843004	 strne       r3, [r4, #4]
  000bc	15842008	 strne       r2, [r4, #8]
  000c0	1584100c	 strne       r1, [r4, #0xC]
  000c4	e5950440	 ldr         r0, [r5, #0x440]
  000c8		 |$cleanUp$47973|

; 899  :         }
; 900  : 
; 901  : cleanUp:
; 902  :     OALMSG(OAL_INTR&&OAL_FUNC, (L"-OALIoCtlPrcmClockGetSourceClockInfo(rc = %d)\r\n", rc));

  000c8	e3100901	 tst         r0, #1, 18
  000cc	13100004	 tstne       r0, #4
  000d0	159f0014	 ldrne       r0, [pc, #0x14]
  000d4	11a01006	 movne       r1, r6
  000d8	1b000000	 blne        NKDbgPrintfW

; 903  :     return rc;
; 904  : }

  000dc	e1a00006	 mov         r0, r6
  000e0	e28dd00c	 add         sp, sp, #0xC
  000e4	e8bd41f0	 ldmia       sp!, {r4 - r8, lr}
  000e8	e12fff1e	 bx          lr
  000ec		 |$LN15@OALIoCtlPr@4|
  000ec		 |$LN16@OALIoCtlPr@4|
  000ec	00000000	 DCD         |??_C@_1GA@NDMNMIPM@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAC?$AAl?$AAo?$AAc?$AAk?$AAG?$AAe?$AAt?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAC?$AAl?$AAo?$AAc?$AAk@|
  000f0		 |$LN17@OALIoCtlPr@4|
  000f0	00000000	 DCD         |??_C@_1EO@HHGONEEA@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAC?$AAl?$AAo?$AAc?$AAk?$AAG?$AAe?$AAt?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAC?$AAl?$AAo?$AAc?$AAk@|
  000f4		 |$LN18@OALIoCtlPr@4|
  000f4	00000000	 DCD         |dpCurSettings|
  000f8		 |$M50089|

			 ENDP  ; |OALIoCtlPrcmClockGetSourceClockInfo|

	EXPORT	|OALIoCtlPrcmClockSetSourceClock|
	EXPORT	|??_C@_1FI@LHKECLHF@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAC?$AAl?$AAo?$AAc?$AAk?$AAS?$AAe?$AAt?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAC?$AAl?$AAo?$AAc?$AAk@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@GJHFLHDM@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAC?$AAl?$AAo?$AAc?$AAk?$AAS?$AAe?$AAt?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAC?$AAl?$AAo?$AAc?$AAk@| [ DATA ] ; `string'
	IMPORT	|PrcmClockSetParent|

  00000			 AREA	 |.pdata|, PDATA
|$T50112| DCD	|$LN12@OALIoCtlPr@5|
	DCD	0x40002501

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@LHKECLHF@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAC?$AAl?$AAo?$AAc?$AAk?$AAS?$AAe?$AAt?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAC?$AAl?$AAo?$AAc?$AAk@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "P", 0x0, "r", 0x0, "c", 0x0, "m"
	DCB	0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, "S"
	DCB	0x0, "e", 0x0, "t", 0x0, "S", 0x0, "o", 0x0, "u", 0x0, "r"
	DCB	0x0, "c", 0x0, "e", 0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, "k", 0x0, "(", 0x0, "r", 0x0, "c", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@GJHFLHDM@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAC?$AAl?$AAo?$AAc?$AAk?$AAS?$AAe?$AAt?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAC?$AAl?$AAo?$AAc?$AAk@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "P", 0x0, "r", 0x0, "c", 0x0, "m"
	DCB	0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, "S"
	DCB	0x0, "e", 0x0, "t", 0x0, "S", 0x0, "o", 0x0, "u", 0x0, "r"
	DCB	0x0, "c", 0x0, "e", 0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, "k", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALIoCtlPrcmClockSetSourceClock| PROC

; 920  : {

  00000		 |$LN12@OALIoCtlPr@5|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M50109|
  00004	e1a07002	 mov         r7, r2
  00008	e1a05001	 mov         r5, r1

; 921  :     BOOL rc = FALSE;
; 922  :     IOCTL_PRCM_CLOCK_SET_SOURCECLOCK_IN *pIn;
; 923  : 
; 924  :     UNREFERENCED_PARAMETER(outSize);
; 925  :     UNREFERENCED_PARAMETER(pOutBuffer);
; 926  :     UNREFERENCED_PARAMETER(code);
; 927  : 
; 928  :     OALMSG(OAL_IOCTL&&OAL_FUNC, (L"+OALIoCtlPrcmClockSetSourceClock\r\n"));

  0000c	e59f607c	 ldr         r6, [pc, #0x7C]
  00010	e3a04000	 mov         r4, #0
  00014	e5963440	 ldr         r3, [r6, #0x440]
  00018	e3130a01	 tst         r3, #1, 20
  0001c	0a000004	 beq         |$LN6@OALIoCtlPr@5|
  00020	e3130004	 tst         r3, #4
  00024	0a000002	 beq         |$LN6@OALIoCtlPr@5|
  00028	e59f005c	 ldr         r0, [pc, #0x5C]
  0002c	eb000000	 bl          NKDbgPrintfW
  00030	e5963440	 ldr         r3, [r6, #0x440]
  00034		 |$LN6@OALIoCtlPr@5|

; 929  :     
; 930  :     if (pInBuffer == NULL || inSize != sizeof(IOCTL_PRCM_CLOCK_SET_SOURCECLOCK_IN))

  00034	e3550000	 cmp         r5, #0
  00038	0a00000a	 beq         |$cleanUp$48003|
  0003c	e3570008	 cmp         r7, #8
  00040	1a000008	 bne         |$cleanUp$48003|

; 931  :         {
; 932  :         goto cleanUp;
; 933  :         }
; 934  : 
; 935  :     // update info and call appropriate routine
; 936  :     //
; 937  :     if (pOutSize != NULL) *pOutSize = 0;

  00044	e59d3018	 ldr         r3, [sp, #0x18]
  00048	e3530000	 cmp         r3, #0
  0004c	13a02000	 movne       r2, #0
  00050	15832000	 strne       r2, [r3]

; 938  :     pIn = (IOCTL_PRCM_CLOCK_SET_SOURCECLOCK_IN*)pInBuffer;
; 939  :     rc = PrcmClockSetParent(pIn->clkId, pIn->newParentClkId);

  00054	e5951004	 ldr         r1, [r5, #4]
  00058	e5950000	 ldr         r0, [r5]
  0005c	eb000000	 bl          PrcmClockSetParent
  00060	e5963440	 ldr         r3, [r6, #0x440]
  00064	e1a04000	 mov         r4, r0
  00068		 |$cleanUp$48003|

; 940  : 
; 941  : cleanUp:
; 942  :     OALMSG(OAL_INTR&&OAL_FUNC, (L"-OALIoCtlPrcmClockSetSourceClock(rc = %d)\r\n", rc));

  00068	e3130901	 tst         r3, #1, 18
  0006c	13130004	 tstne       r3, #4
  00070	159f0010	 ldrne       r0, [pc, #0x10]
  00074	11a01004	 movne       r1, r4
  00078	1b000000	 blne        NKDbgPrintfW

; 943  :     return rc;
; 944  : }

  0007c	e1a00004	 mov         r0, r4
  00080	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00084	e12fff1e	 bx          lr
  00088		 |$LN13@OALIoCtlPr@5|
  00088		 |$LN14@OALIoCtlPr@5|
  00088	00000000	 DCD         |??_C@_1FI@LHKECLHF@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAC?$AAl?$AAo?$AAc?$AAk?$AAS?$AAe?$AAt?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAC?$AAl?$AAo?$AAc?$AAk@|
  0008c		 |$LN15@OALIoCtlPr@5|
  0008c	00000000	 DCD         |??_C@_1EG@GJHFLHDM@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAC?$AAl?$AAo?$AAc?$AAk?$AAS?$AAe?$AAt?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAC?$AAl?$AAo?$AAc?$AAk@|
  00090		 |$LN16@OALIoCtlPr@5|
  00090	00000000	 DCD         |dpCurSettings|
  00094		 |$M50110|

			 ENDP  ; |OALIoCtlPrcmClockSetSourceClock|

	EXPORT	|OALIoCtlPrcmClockSetSourceClockDivisor|
	EXPORT	|??_C@_1GG@PFIOPLFN@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAC?$AAl?$AAo?$AAc?$AAk?$AAS?$AAe?$AAt?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAC?$AAl?$AAo?$AAc?$AAk@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@OMCINOEK@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAC?$AAl?$AAo?$AAc?$AAk?$AAS?$AAe?$AAt?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAC?$AAl?$AAo?$AAc?$AAk@| [ DATA ] ; `string'
	IMPORT	|PrcmClockSetDivisor|

  00000			 AREA	 |.pdata|, PDATA
|$T50133| DCD	|$LN12@OALIoCtlPr@6|
	DCD	0x40002601

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GG@PFIOPLFN@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAC?$AAl?$AAo?$AAc?$AAk?$AAS?$AAe?$AAt?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAC?$AAl?$AAo?$AAc?$AAk@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "P", 0x0, "r", 0x0, "c", 0x0, "m"
	DCB	0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, "S"
	DCB	0x0, "e", 0x0, "t", 0x0, "S", 0x0, "o", 0x0, "u", 0x0, "r"
	DCB	0x0, "c", 0x0, "e", 0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, "k", 0x0, "D", 0x0, "i", 0x0, "v", 0x0, "i", 0x0, "s"
	DCB	0x0, "o", 0x0, "r", 0x0, "(", 0x0, "r", 0x0, "c", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@OMCINOEK@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAC?$AAl?$AAo?$AAc?$AAk?$AAS?$AAe?$AAt?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAC?$AAl?$AAo?$AAc?$AAk@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "P", 0x0, "r", 0x0, "c", 0x0, "m"
	DCB	0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, "S"
	DCB	0x0, "e", 0x0, "t", 0x0, "S", 0x0, "o", 0x0, "u", 0x0, "r"
	DCB	0x0, "c", 0x0, "e", 0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c"
	DCB	0x0, "k", 0x0, "D", 0x0, "i", 0x0, "v", 0x0, "i", 0x0, "s"
	DCB	0x0, "o", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALIoCtlPrcmClockSetSourceClockDivisor| PROC

; 960  : {

  00000		 |$LN12@OALIoCtlPr@6|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M50130|
  00004	e1a07002	 mov         r7, r2
  00008	e1a05001	 mov         r5, r1

; 961  :     BOOL rc = FALSE;
; 962  :     IOCTL_PRCM_CLOCK_SET_SOURCECLOCKDIVISOR_IN *pIn;
; 963  : 
; 964  :     UNREFERENCED_PARAMETER(outSize);
; 965  :     UNREFERENCED_PARAMETER(pOutBuffer);
; 966  :     UNREFERENCED_PARAMETER(code);
; 967  : 
; 968  :     OALMSG(OAL_IOCTL&&OAL_FUNC, (L"+OALIoCtlPrcmClockSetSourceClockDivisor\r\n"));

  0000c	e59f6080	 ldr         r6, [pc, #0x80]
  00010	e3a04000	 mov         r4, #0
  00014	e5963440	 ldr         r3, [r6, #0x440]
  00018	e3130a01	 tst         r3, #1, 20
  0001c	0a000004	 beq         |$LN6@OALIoCtlPr@6|
  00020	e3130004	 tst         r3, #4
  00024	0a000002	 beq         |$LN6@OALIoCtlPr@6|
  00028	e59f0060	 ldr         r0, [pc, #0x60]
  0002c	eb000000	 bl          NKDbgPrintfW
  00030	e5963440	 ldr         r3, [r6, #0x440]
  00034		 |$LN6@OALIoCtlPr@6|

; 969  :     
; 970  :     if (pInBuffer == NULL || inSize != sizeof(IOCTL_PRCM_CLOCK_SET_SOURCECLOCKDIVISOR_IN))

  00034	e3550000	 cmp         r5, #0
  00038	0a00000b	 beq         |$cleanUp$48030|
  0003c	e357000c	 cmp         r7, #0xC
  00040	1a000009	 bne         |$cleanUp$48030|

; 971  :         {
; 972  :         goto cleanUp;
; 973  :         }
; 974  : 
; 975  :     // update info and call appropriate routine
; 976  :     //
; 977  :     if (pOutSize != NULL) *pOutSize = 0;

  00044	e59d3018	 ldr         r3, [sp, #0x18]
  00048	e3530000	 cmp         r3, #0
  0004c	13a02000	 movne       r2, #0
  00050	15832000	 strne       r2, [r3]

; 978  :     pIn = (IOCTL_PRCM_CLOCK_SET_SOURCECLOCKDIVISOR_IN*)pInBuffer;
; 979  :     rc = PrcmClockSetDivisor(pIn->clkId, pIn->parentClkId, pIn->divisor);

  00054	e5952008	 ldr         r2, [r5, #8]
  00058	e5951004	 ldr         r1, [r5, #4]
  0005c	e5950000	 ldr         r0, [r5]
  00060	eb000000	 bl          PrcmClockSetDivisor
  00064	e5963440	 ldr         r3, [r6, #0x440]
  00068	e1a04000	 mov         r4, r0
  0006c		 |$cleanUp$48030|

; 980  : 
; 981  : cleanUp:
; 982  :     OALMSG(OAL_INTR&&OAL_FUNC, (L"-OALIoCtlPrcmClockSetSourceClockDivisor(rc = %d)\r\n", rc));

  0006c	e3130901	 tst         r3, #1, 18
  00070	13130004	 tstne       r3, #4
  00074	159f0010	 ldrne       r0, [pc, #0x10]
  00078	11a01004	 movne       r1, r4
  0007c	1b000000	 blne        NKDbgPrintfW

; 983  :     return rc;
; 984  : }

  00080	e1a00004	 mov         r0, r4
  00084	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00088	e12fff1e	 bx          lr
  0008c		 |$LN13@OALIoCtlPr@6|
  0008c		 |$LN14@OALIoCtlPr@6|
  0008c	00000000	 DCD         |??_C@_1GG@PFIOPLFN@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAC?$AAl?$AAo?$AAc?$AAk?$AAS?$AAe?$AAt?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAC?$AAl?$AAo?$AAc?$AAk@|
  00090		 |$LN15@OALIoCtlPr@6|
  00090	00000000	 DCD         |??_C@_1FE@OMCINOEK@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAC?$AAl?$AAo?$AAc?$AAk?$AAS?$AAe?$AAt?$AAS?$AAo?$AAu?$AAr?$AAc?$AAe?$AAC?$AAl?$AAo?$AAc?$AAk@|
  00094		 |$LN16@OALIoCtlPr@6|
  00094	00000000	 DCD         |dpCurSettings|
  00098		 |$M50131|

			 ENDP  ; |OALIoCtlPrcmClockSetSourceClockDivisor|

	EXPORT	|OALIoCtlPrcmClockSetDpllState|
	EXPORT	|??_C@_1FE@GNONCHJN@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAC?$AAl?$AAo?$AAc?$AAk?$AAS?$AAe?$AAt?$AAD?$AAp?$AAl?$AAl?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$CI?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EC@CIFBIGJI@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAC?$AAl?$AAo?$AAc?$AAk?$AAS?$AAe?$AAt?$AAD?$AAp?$AAl?$AAl?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AN?$AA?6@| [ DATA ] ; `string'
	IMPORT	|PrcmClockSetDpllState|

  00000			 AREA	 |.pdata|, PDATA
|$T50154| DCD	|$LN12@OALIoCtlPr@7|
	DCD	0x40002401

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@GNONCHJN@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAC?$AAl?$AAo?$AAc?$AAk?$AAS?$AAe?$AAt?$AAD?$AAp?$AAl?$AAl?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$CI?$AAr@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "P", 0x0, "r", 0x0, "c", 0x0, "m"
	DCB	0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, "S"
	DCB	0x0, "e", 0x0, "t", 0x0, "D", 0x0, "p", 0x0, "l", 0x0, "l"
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "("
	DCB	0x0, "r", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EC@CIFBIGJI@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAC?$AAl?$AAo?$AAc?$AAk?$AAS?$AAe?$AAt?$AAD?$AAp?$AAl?$AAl?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AN?$AA?6@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "P", 0x0, "r", 0x0, "c", 0x0, "m"
	DCB	0x0, "C", 0x0, "l", 0x0, "o", 0x0, "c", 0x0, "k", 0x0, "S"
	DCB	0x0, "e", 0x0, "t", 0x0, "D", 0x0, "p", 0x0, "l", 0x0, "l"
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALIoCtlPrcmClockSetDpllState| PROC

; 1001 : {

  00000		 |$LN12@OALIoCtlPr@7|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M50151|
  00004	e1a07002	 mov         r7, r2
  00008	e1a06001	 mov         r6, r1

; 1002 :     BOOL rc = FALSE;
; 1003 :     IOCTL_PRCM_CLOCK_SET_DPLLSTATE_IN *pIn;
; 1004 : 
; 1005 :     UNREFERENCED_PARAMETER(outSize);
; 1006 :     UNREFERENCED_PARAMETER(pOutBuffer);
; 1007 :     UNREFERENCED_PARAMETER(code);
; 1008 : 
; 1009 :     OALMSG(OAL_IOCTL&&OAL_FUNC, (L"+OALIoCtlPrcmClockSetDpllState\r\n"));

  0000c	e59f5078	 ldr         r5, [pc, #0x78]
  00010	e3a04000	 mov         r4, #0
  00014	e5953440	 ldr         r3, [r5, #0x440]
  00018	e3130a01	 tst         r3, #1, 20
  0001c	0a000004	 beq         |$LN6@OALIoCtlPr@7|
  00020	e3130004	 tst         r3, #4
  00024	0a000002	 beq         |$LN6@OALIoCtlPr@7|
  00028	e59f0058	 ldr         r0, [pc, #0x58]
  0002c	eb000000	 bl          NKDbgPrintfW
  00030	e5953440	 ldr         r3, [r5, #0x440]
  00034		 |$LN6@OALIoCtlPr@7|

; 1010 :     
; 1011 :     if (pInBuffer == NULL || inSize != sizeof(IOCTL_PRCM_CLOCK_SET_DPLLSTATE_IN))

  00034	e3560000	 cmp         r6, #0
  00038	0a000009	 beq         |$cleanUp$48057|
  0003c	e3570020	 cmp         r7, #0x20
  00040	1a000007	 bne         |$cleanUp$48057|

; 1012 :         {
; 1013 :         goto cleanUp;
; 1014 :         }
; 1015 : 
; 1016 :     // update info and call appropriate routine
; 1017 :     //
; 1018 :     if (pOutSize != NULL) *pOutSize = 0;

  00044	e59d3018	 ldr         r3, [sp, #0x18]

; 1019 :     pIn = (IOCTL_PRCM_CLOCK_SET_DPLLSTATE_IN*)pInBuffer;
; 1020 :     rc = PrcmClockSetDpllState(pIn);

  00048	e1a00006	 mov         r0, r6
  0004c	e3530000	 cmp         r3, #0
  00050	13a02000	 movne       r2, #0
  00054	15832000	 strne       r2, [r3]
  00058	eb000000	 bl          PrcmClockSetDpllState
  0005c	e5953440	 ldr         r3, [r5, #0x440]
  00060	e1a04000	 mov         r4, r0
  00064		 |$cleanUp$48057|

; 1021 : 
; 1022 : cleanUp:
; 1023 :     OALMSG(OAL_INTR&&OAL_FUNC, (L"-OALIoCtlPrcmClockSetDpllState(rc = %d)\r\n", rc));

  00064	e3130901	 tst         r3, #1, 18
  00068	13130004	 tstne       r3, #4
  0006c	159f0010	 ldrne       r0, [pc, #0x10]
  00070	11a01004	 movne       r1, r4
  00074	1b000000	 blne        NKDbgPrintfW

; 1024 :     return rc;
; 1025 : }

  00078	e1a00004	 mov         r0, r4
  0007c	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00080	e12fff1e	 bx          lr
  00084		 |$LN13@OALIoCtlPr@7|
  00084		 |$LN14@OALIoCtlPr@7|
  00084	00000000	 DCD         |??_C@_1FE@GNONCHJN@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAC?$AAl?$AAo?$AAc?$AAk?$AAS?$AAe?$AAt?$AAD?$AAp?$AAl?$AAl?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$CI?$AAr@|
  00088		 |$LN15@OALIoCtlPr@7|
  00088	00000000	 DCD         |??_C@_1EC@CIFBIGJI@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAC?$AAl?$AAo?$AAc?$AAk?$AAS?$AAe?$AAt?$AAD?$AAp?$AAl?$AAl?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AN?$AA?6@|
  0008c		 |$LN16@OALIoCtlPr@7|
  0008c	00000000	 DCD         |dpCurSettings|
  00090		 |$M50152|

			 ENDP  ; |OALIoCtlPrcmClockSetDpllState|

	EXPORT	|OALIoCtlPrcmDomainSetWakeupDependency|
	EXPORT	|??_C@_1GE@IAGKICDJ@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAo?$AAm?$AAa?$AAi?$AAn?$AAS?$AAe?$AAt?$AAW?$AAa?$AAk?$AAe?$AAu?$AAp?$AAD?$AAe?$AAp?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@IFJLFJMC@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAo?$AAm?$AAa?$AAi?$AAn?$AAS?$AAe?$AAt?$AAW?$AAa?$AAk?$AAe?$AAu?$AAp?$AAD?$AAe?$AAp?$AAe@| [ DATA ] ; `string'
	IMPORT	|PrcmDomainSetWakeupDependency|

  00000			 AREA	 |.pdata|, PDATA
|$T50175| DCD	|$LN12@OALIoCtlPr@8|
	DCD	0x40002601

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@IAGKICDJ@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAo?$AAm?$AAa?$AAi?$AAn?$AAS?$AAe?$AAt?$AAW?$AAa?$AAk?$AAe?$AAu?$AAp?$AAD?$AAe?$AAp?$AAe@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "P", 0x0, "r", 0x0, "c", 0x0, "m"
	DCB	0x0, "D", 0x0, "o", 0x0, "m", 0x0, "a", 0x0, "i", 0x0, "n"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "W", 0x0, "a", 0x0, "k"
	DCB	0x0, "e", 0x0, "u", 0x0, "p", 0x0, "D", 0x0, "e", 0x0, "p"
	DCB	0x0, "e", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "n", 0x0, "c"
	DCB	0x0, "y", 0x0, "(", 0x0, "r", 0x0, "c", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@IFJLFJMC@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAo?$AAm?$AAa?$AAi?$AAn?$AAS?$AAe?$AAt?$AAW?$AAa?$AAk?$AAe?$AAu?$AAp?$AAD?$AAe?$AAp?$AAe@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "P", 0x0, "r", 0x0, "c", 0x0, "m"
	DCB	0x0, "D", 0x0, "o", 0x0, "m", 0x0, "a", 0x0, "i", 0x0, "n"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "W", 0x0, "a", 0x0, "k"
	DCB	0x0, "e", 0x0, "u", 0x0, "p", 0x0, "D", 0x0, "e", 0x0, "p"
	DCB	0x0, "e", 0x0, "n", 0x0, "d", 0x0, "e", 0x0, "n", 0x0, "c"
	DCB	0x0, "y", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALIoCtlPrcmDomainSetWakeupDependency| PROC

; 1042 : {

  00000		 |$LN12@OALIoCtlPr@8|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M50172|
  00004	e1a07002	 mov         r7, r2
  00008	e1a05001	 mov         r5, r1

; 1043 :     BOOL rc = FALSE;
; 1044 :     IOCTL_PRCM_DOMAIN_SET_WAKEUPDEP_IN *pIn;
; 1045 : 
; 1046 :     UNREFERENCED_PARAMETER(outSize);
; 1047 :     UNREFERENCED_PARAMETER(pOutBuffer);
; 1048 :     UNREFERENCED_PARAMETER(code);
; 1049 : 
; 1050 :     OALMSG(OAL_IOCTL&&OAL_FUNC, (L"+OALIoCtlPrcmDomainSetWakeupDependency\r\n"));

  0000c	e59f6080	 ldr         r6, [pc, #0x80]
  00010	e3a04000	 mov         r4, #0
  00014	e5963440	 ldr         r3, [r6, #0x440]
  00018	e3130a01	 tst         r3, #1, 20
  0001c	0a000004	 beq         |$LN6@OALIoCtlPr@8|
  00020	e3130004	 tst         r3, #4
  00024	0a000002	 beq         |$LN6@OALIoCtlPr@8|
  00028	e59f0060	 ldr         r0, [pc, #0x60]
  0002c	eb000000	 bl          NKDbgPrintfW
  00030	e5963440	 ldr         r3, [r6, #0x440]
  00034		 |$LN6@OALIoCtlPr@8|

; 1051 :     
; 1052 :     if (pInBuffer == NULL || inSize != sizeof(IOCTL_PRCM_DOMAIN_SET_WAKEUPDEP_IN))

  00034	e3550000	 cmp         r5, #0
  00038	0a00000b	 beq         |$cleanUp$48084|
  0003c	e3570010	 cmp         r7, #0x10
  00040	1a000009	 bne         |$cleanUp$48084|

; 1053 :         {
; 1054 :         goto cleanUp;
; 1055 :         }
; 1056 : 
; 1057 :     // update info and call appropriate routine
; 1058 :     //
; 1059 :     if (pOutSize != NULL) *pOutSize = 0;

  00044	e59d3018	 ldr         r3, [sp, #0x18]
  00048	e3530000	 cmp         r3, #0
  0004c	13a02000	 movne       r2, #0
  00050	15832000	 strne       r2, [r3]

; 1060 :     pIn = (IOCTL_PRCM_DOMAIN_SET_WAKEUPDEP_IN*)pInBuffer;
; 1061 :     rc = PrcmDomainSetWakeupDependency(pIn->powerDomain, pIn->ffWakeDep, pIn->bEnable);

  00054	e595200c	 ldr         r2, [r5, #0xC]
  00058	e5951008	 ldr         r1, [r5, #8]
  0005c	e5950004	 ldr         r0, [r5, #4]
  00060	eb000000	 bl          PrcmDomainSetWakeupDependency
  00064	e5963440	 ldr         r3, [r6, #0x440]
  00068	e1a04000	 mov         r4, r0
  0006c		 |$cleanUp$48084|

; 1062 : 
; 1063 : cleanUp:
; 1064 :     OALMSG(OAL_INTR&&OAL_FUNC, (L"-OALIoCtlPrcmDomainSetWakeupDependency(rc = %d)\r\n", rc));

  0006c	e3130901	 tst         r3, #1, 18
  00070	13130004	 tstne       r3, #4
  00074	159f0010	 ldrne       r0, [pc, #0x10]
  00078	11a01004	 movne       r1, r4
  0007c	1b000000	 blne        NKDbgPrintfW

; 1065 :     return rc;
; 1066 : }

  00080	e1a00004	 mov         r0, r4
  00084	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00088	e12fff1e	 bx          lr
  0008c		 |$LN13@OALIoCtlPr@8|
  0008c		 |$LN14@OALIoCtlPr@8|
  0008c	00000000	 DCD         |??_C@_1GE@IAGKICDJ@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAo?$AAm?$AAa?$AAi?$AAn?$AAS?$AAe?$AAt?$AAW?$AAa?$AAk?$AAe?$AAu?$AAp?$AAD?$AAe?$AAp?$AAe@|
  00090		 |$LN15@OALIoCtlPr@8|
  00090	00000000	 DCD         |??_C@_1FC@IFJLFJMC@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAo?$AAm?$AAa?$AAi?$AAn?$AAS?$AAe?$AAt?$AAW?$AAa?$AAk?$AAe?$AAu?$AAp?$AAD?$AAe?$AAp?$AAe@|
  00094		 |$LN16@OALIoCtlPr@8|
  00094	00000000	 DCD         |dpCurSettings|
  00098		 |$M50173|

			 ENDP  ; |OALIoCtlPrcmDomainSetWakeupDependency|

	EXPORT	|OALIoCtlPrcmDomainSetSleepDependency|
	EXPORT	|??_C@_1GC@OENIKAAG@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAo?$AAm?$AAa?$AAi?$AAn?$AAS?$AAe?$AAt?$AAS?$AAl?$AAe?$AAe?$AAp?$AAD?$AAe?$AAp?$AAe?$AAn@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@DCKFFJGO@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAo?$AAm?$AAa?$AAi?$AAn?$AAS?$AAe?$AAt?$AAS?$AAl?$AAe?$AAe?$AAp?$AAD?$AAe?$AAp?$AAe?$AAn@| [ DATA ] ; `string'
	IMPORT	|PrcmDomainSetSleepDependency|

  00000			 AREA	 |.pdata|, PDATA
|$T50196| DCD	|$LN12@OALIoCtlPr@9|
	DCD	0x40002601

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@OENIKAAG@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAo?$AAm?$AAa?$AAi?$AAn?$AAS?$AAe?$AAt?$AAS?$AAl?$AAe?$AAe?$AAp?$AAD?$AAe?$AAp?$AAe?$AAn@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "P", 0x0, "r", 0x0, "c", 0x0, "m"
	DCB	0x0, "D", 0x0, "o", 0x0, "m", 0x0, "a", 0x0, "i", 0x0, "n"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "S", 0x0, "l", 0x0, "e"
	DCB	0x0, "e", 0x0, "p", 0x0, "D", 0x0, "e", 0x0, "p", 0x0, "e"
	DCB	0x0, "n", 0x0, "d", 0x0, "e", 0x0, "n", 0x0, "c", 0x0, "y"
	DCB	0x0, "(", 0x0, "r", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@DCKFFJGO@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAo?$AAm?$AAa?$AAi?$AAn?$AAS?$AAe?$AAt?$AAS?$AAl?$AAe?$AAe?$AAp?$AAD?$AAe?$AAp?$AAe?$AAn@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "P", 0x0, "r", 0x0, "c", 0x0, "m"
	DCB	0x0, "D", 0x0, "o", 0x0, "m", 0x0, "a", 0x0, "i", 0x0, "n"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "S", 0x0, "l", 0x0, "e"
	DCB	0x0, "e", 0x0, "p", 0x0, "D", 0x0, "e", 0x0, "p", 0x0, "e"
	DCB	0x0, "n", 0x0, "d", 0x0, "e", 0x0, "n", 0x0, "c", 0x0, "y"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALIoCtlPrcmDomainSetSleepDependency| PROC

; 1083 : {

  00000		 |$LN12@OALIoCtlPr@9|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M50193|
  00004	e1a07002	 mov         r7, r2
  00008	e1a05001	 mov         r5, r1

; 1084 :     BOOL rc = FALSE;
; 1085 :     IOCTL_PRCM_DOMAIN_SET_SLEEPDEP_IN *pIn;
; 1086 :     
; 1087 :     UNREFERENCED_PARAMETER(outSize);
; 1088 :     UNREFERENCED_PARAMETER(pOutBuffer);
; 1089 :     UNREFERENCED_PARAMETER(code);
; 1090 : 
; 1091 :     OALMSG(OAL_IOCTL&&OAL_FUNC, (L"+OALIoCtlPrcmDomainSetSleepDependency\r\n"));

  0000c	e59f6080	 ldr         r6, [pc, #0x80]
  00010	e3a04000	 mov         r4, #0
  00014	e5963440	 ldr         r3, [r6, #0x440]
  00018	e3130a01	 tst         r3, #1, 20
  0001c	0a000004	 beq         |$LN6@OALIoCtlPr@9|
  00020	e3130004	 tst         r3, #4
  00024	0a000002	 beq         |$LN6@OALIoCtlPr@9|
  00028	e59f0060	 ldr         r0, [pc, #0x60]
  0002c	eb000000	 bl          NKDbgPrintfW
  00030	e5963440	 ldr         r3, [r6, #0x440]
  00034		 |$LN6@OALIoCtlPr@9|

; 1092 :     
; 1093 :     if (pInBuffer == NULL || inSize != sizeof(IOCTL_PRCM_DOMAIN_SET_SLEEPDEP_IN))

  00034	e3550000	 cmp         r5, #0
  00038	0a00000b	 beq         |$cleanUp$48111|
  0003c	e3570010	 cmp         r7, #0x10
  00040	1a000009	 bne         |$cleanUp$48111|

; 1094 :         {
; 1095 :         goto cleanUp;
; 1096 :         }
; 1097 : 
; 1098 :     // update info and call appropriate routine
; 1099 :     //
; 1100 :     if (pOutSize != NULL) *pOutSize = 0;

  00044	e59d3018	 ldr         r3, [sp, #0x18]
  00048	e3530000	 cmp         r3, #0
  0004c	13a02000	 movne       r2, #0
  00050	15832000	 strne       r2, [r3]

; 1101 :     pIn = (IOCTL_PRCM_DOMAIN_SET_SLEEPDEP_IN*)pInBuffer;
; 1102 :     rc = PrcmDomainSetSleepDependency(pIn->powerDomain, pIn->ffSleepDep, pIn->bEnable);

  00054	e595200c	 ldr         r2, [r5, #0xC]
  00058	e5951008	 ldr         r1, [r5, #8]
  0005c	e5950004	 ldr         r0, [r5, #4]
  00060	eb000000	 bl          PrcmDomainSetSleepDependency
  00064	e5963440	 ldr         r3, [r6, #0x440]
  00068	e1a04000	 mov         r4, r0
  0006c		 |$cleanUp$48111|

; 1103 : 
; 1104 : cleanUp:
; 1105 :     OALMSG(OAL_INTR&&OAL_FUNC, (L"-OALIoCtlPrcmDomainSetSleepDependency(rc = %d)\r\n", rc));

  0006c	e3130901	 tst         r3, #1, 18
  00070	13130004	 tstne       r3, #4
  00074	159f0010	 ldrne       r0, [pc, #0x10]
  00078	11a01004	 movne       r1, r4
  0007c	1b000000	 blne        NKDbgPrintfW

; 1106 :     return rc;
; 1107 : }

  00080	e1a00004	 mov         r0, r4
  00084	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00088	e12fff1e	 bx          lr
  0008c		 |$LN13@OALIoCtlPr@9|
  0008c		 |$LN14@OALIoCtlPr@9|
  0008c	00000000	 DCD         |??_C@_1GC@OENIKAAG@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAo?$AAm?$AAa?$AAi?$AAn?$AAS?$AAe?$AAt?$AAS?$AAl?$AAe?$AAe?$AAp?$AAD?$AAe?$AAp?$AAe?$AAn@|
  00090		 |$LN15@OALIoCtlPr@9|
  00090	00000000	 DCD         |??_C@_1FA@DCKFFJGO@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAo?$AAm?$AAa?$AAi?$AAn?$AAS?$AAe?$AAt?$AAS?$AAl?$AAe?$AAe?$AAp?$AAD?$AAe?$AAp?$AAe?$AAn@|
  00094		 |$LN16@OALIoCtlPr@9|
  00094	00000000	 DCD         |dpCurSettings|
  00098		 |$M50194|

			 ENDP  ; |OALIoCtlPrcmDomainSetSleepDependency|

	EXPORT	|OALIoCtlPrcmDomainSetPowerState|
	EXPORT	|??_C@_1FI@HLFNCHGP@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAo?$AAm?$AAa?$AAi?$AAn?$AAS?$AAe?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@FCCADHII@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAo?$AAm?$AAa?$AAi?$AAn?$AAS?$AAe?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe@| [ DATA ] ; `string'
	IMPORT	|OALWakeupLatency_UpdateDomainState|
	IMPORT	|PrcmDomainSetPowerState|

  00000			 AREA	 |.pdata|, PDATA
|$T50221| DCD	|$LN25@OALIoCtlPr@10|
	DCD	0x40003f01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@HLFNCHGP@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAo?$AAm?$AAa?$AAi?$AAn?$AAS?$AAe?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "P", 0x0, "r", 0x0, "c", 0x0, "m"
	DCB	0x0, "D", 0x0, "o", 0x0, "m", 0x0, "a", 0x0, "i", 0x0, "n"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "P", 0x0, "o", 0x0, "w"
	DCB	0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, "(", 0x0, "r", 0x0, "c", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@FCCADHII@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAo?$AAm?$AAa?$AAi?$AAn?$AAS?$AAe?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "P", 0x0, "r", 0x0, "c", 0x0, "m"
	DCB	0x0, "D", 0x0, "o", 0x0, "m", 0x0, "a", 0x0, "i", 0x0, "n"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "P", 0x0, "o", 0x0, "w"
	DCB	0x0, "e", 0x0, "r", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALIoCtlPrcmDomainSetPowerState| PROC

; 1124 : {

  00000		 |$LN25@OALIoCtlPr@10|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M50218|
  00004	e1a07002	 mov         r7, r2
  00008	e1a04001	 mov         r4, r1

; 1125 :     BOOL rc = TRUE;
; 1126 :     IOCTL_PRCM_DOMAIN_SET_POWERSTATE_IN *pIn;
; 1127 : 
; 1128 :     UNREFERENCED_PARAMETER(outSize);
; 1129 :     UNREFERENCED_PARAMETER(pOutBuffer);
; 1130 :     UNREFERENCED_PARAMETER(code);
; 1131 : 
; 1132 :     OALMSG(OAL_IOCTL&&OAL_FUNC, (L"+OALIoCtlPrcmDomainSetPowerState\r\n"));

  0000c	e59f60e4	 ldr         r6, [pc, #0xE4]
  00010	e3a05001	 mov         r5, #1
  00014	e5963440	 ldr         r3, [r6, #0x440]
  00018	e3130a01	 tst         r3, #1, 20
  0001c	13130004	 tstne       r3, #4
  00020	159f00cc	 ldrne       r0, [pc, #0xCC]
  00024	1b000000	 blne        NKDbgPrintfW

; 1133 :     
; 1134 :     if (pInBuffer == NULL || inSize != sizeof(IOCTL_PRCM_DOMAIN_SET_POWERSTATE_IN))

  00028	e3540000	 cmp         r4, #0
  0002c	0a000025	 beq         |$LN11@OALIoCtlPr@10|
  00030	e3570010	 cmp         r7, #0x10
  00034	1a000023	 bne         |$LN11@OALIoCtlPr@10|

; 1137 :         goto cleanUp;
; 1138 :         }
; 1139 : 
; 1140 :     // update info and call appropriate routine
; 1141 :     //
; 1142 :     if (pOutSize != NULL) *pOutSize = 0;

  00038	e59d3018	 ldr         r3, [sp, #0x18]
  0003c	e3530000	 cmp         r3, #0
  00040	13a02000	 movne       r2, #0
  00044	15832000	 strne       r2, [r3]

; 1143 :     pIn = (IOCTL_PRCM_DOMAIN_SET_POWERSTATE_IN*)pInBuffer;
; 1144 : 
; 1145 :     switch (pIn->powerDomain)

  00048	e5940004	 ldr         r0, [r4, #4]
  0004c	e3500001	 cmp         r0, #1
  00050	0a000014	 beq         |$LN4@OALIoCtlPr@10|
  00054	e3500002	 cmp         r0, #2
  00058	0a000003	 beq         |$LN7@OALIoCtlPr@10|
  0005c	e3500005	 cmp         r0, #5
  00060	13500007	 cmpne       r0, #7

; 1189 :                 {
; 1190 :                 PrcmDomainSetPowerState(pIn->powerDomain,
; 1191 :                     pIn->powerState,
; 1192 :                     pIn->logicState
; 1193 :                     );
; 1194 :                 }
; 1195 :             break;
; 1196 : 
; 1197 :         default:
; 1198 :             PrcmDomainSetPowerState(pIn->powerDomain,
; 1199 :                     pIn->powerState,
; 1200 :                     pIn->logicState
; 1201 :                     );

  00064	15941008	 ldrne       r1, [r4, #8]
  00068	1a00000b	 bne         |$LN21@OALIoCtlPr@10|
  0006c		 |$LN7@OALIoCtlPr@10|

; 1146 :         {
; 1147 :         case POWERDOMAIN_MPU:
; 1148 :         case POWERDOMAIN_NEON:
; 1149 :         case POWERDOMAIN_PERIPHERAL:
; 1150 :             if (pIn->powerState == POWERSTATE_OFF)

  0006c	e5943008	 ldr         r3, [r4, #8]
  00070	e3530000	 cmp         r3, #0
  00074	1a000007	 bne         |$LN6@OALIoCtlPr@10|

; 1151 :                 {
; 1152 :                 PrcmDomainSetPowerState(pIn->powerDomain,
; 1153 :                     POWERSTATE_RETENTION,
; 1154 :                     LOGICRETSTATE_LOGICRET_DOMAINRET
; 1155 :                     );

  00078	e3a02004	 mov         r2, #4
  0007c	e3a01001	 mov         r1, #1
  00080	eb000000	 bl          PrcmDomainSetPowerState

; 1156 : 
; 1157 :                 // need to notify wakeup latency framework
; 1158 :                 // what the actual power domain state will be
; 1159 :                 OALWakeupLatency_UpdateDomainState(pIn->powerDomain,
; 1160 :                     POWERSTATE_OFF,
; 1161 :                     pIn->logicState
; 1162 :                     );

  00084	e594200c	 ldr         r2, [r4, #0xC]
  00088		 |$LN22@OALIoCtlPr@10|
  00088	e5940004	 ldr         r0, [r4, #4]
  0008c	e3a01000	 mov         r1, #0
  00090	eb000000	 bl          OALWakeupLatency_UpdateDomainState

; 1163 :                 }
; 1164 :             else

  00094	ea00000c	 b           |$cleanUp$48138|
  00098		 |$LN6@OALIoCtlPr@10|

; 1165 :                 {
; 1166 :                 PrcmDomainSetPowerState(pIn->powerDomain,
; 1167 :                     pIn->powerState,
; 1168 :                     pIn->logicState
; 1169 :                     );

  00098	e1a01003	 mov         r1, r3
  0009c		 |$LN21@OALIoCtlPr@10|
  0009c	e594200c	 ldr         r2, [r4, #0xC]
  000a0	eb000000	 bl          PrcmDomainSetPowerState

; 1170 :                 }
; 1171 :             break;

  000a4	ea000008	 b           |$cleanUp$48138|
  000a8		 |$LN4@OALIoCtlPr@10|

; 1172 : 
; 1173 :         case POWERDOMAIN_CORE:
; 1174 :             if (pIn->powerState == POWERSTATE_OFF)

  000a8	e5943008	 ldr         r3, [r4, #8]
  000ac	e3530000	 cmp         r3, #0
  000b0	1afffff8	 bne         |$LN6@OALIoCtlPr@10|

; 1175 :                 {
; 1176 :                 PrcmDomainSetPowerState(pIn->powerDomain,
; 1177 :                     POWERSTATE_RETENTION,
; 1178 :                     LOGICRETSTATE_LOGICOFF_DOMAINRET
; 1179 :                     );

  000b4	e3a02000	 mov         r2, #0
  000b8	e3a01001	 mov         r1, #1
  000bc	eb000000	 bl          PrcmDomainSetPowerState

; 1180 : 
; 1181 :                 // need to notify wakeup latency framework
; 1182 :                 // what the actual power domain state will be
; 1183 :                 OALWakeupLatency_UpdateDomainState(pIn->powerDomain,
; 1184 :                     POWERSTATE_OFF,
; 1185 :                     LOGICRETSTATE_LOGICOFF_DOMAINRET
; 1186 :                     );

  000c0	e3a02000	 mov         r2, #0

; 1187 :                 }
; 1188 :             else

  000c4	eaffffef	 b           |$LN22@OALIoCtlPr@10|
  000c8		 |$LN11@OALIoCtlPr@10|

; 1135 :         {
; 1136 :         rc = FALSE;

  000c8	e3a05000	 mov         r5, #0
  000cc		 |$cleanUp$48138|

; 1125 :     BOOL rc = TRUE;
; 1126 :     IOCTL_PRCM_DOMAIN_SET_POWERSTATE_IN *pIn;
; 1127 : 
; 1128 :     UNREFERENCED_PARAMETER(outSize);
; 1129 :     UNREFERENCED_PARAMETER(pOutBuffer);
; 1130 :     UNREFERENCED_PARAMETER(code);
; 1131 : 
; 1132 :     OALMSG(OAL_IOCTL&&OAL_FUNC, (L"+OALIoCtlPrcmDomainSetPowerState\r\n"));

  000cc	e5963440	 ldr         r3, [r6, #0x440]

; 1202 :         }
; 1203 : 
; 1204 : cleanUp:
; 1205 :     OALMSG(OAL_INTR&&OAL_FUNC, (L"-OALIoCtlPrcmDomainSetPowerState(rc = %d)\r\n", rc));

  000d0	e3130901	 tst         r3, #1, 18
  000d4	13130004	 tstne       r3, #4
  000d8	159f0010	 ldrne       r0, [pc, #0x10]
  000dc	11a01005	 movne       r1, r5
  000e0	1b000000	 blne        NKDbgPrintfW

; 1206 :     return rc;
; 1207 : }

  000e4	e1a00005	 mov         r0, r5
  000e8	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  000ec	e12fff1e	 bx          lr
  000f0		 |$LN26@OALIoCtlPr@10|
  000f0		 |$LN27@OALIoCtlPr@10|
  000f0	00000000	 DCD         |??_C@_1FI@HLFNCHGP@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAo?$AAm?$AAa?$AAi?$AAn?$AAS?$AAe?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe@|
  000f4		 |$LN28@OALIoCtlPr@10|
  000f4	00000000	 DCD         |??_C@_1EG@FCCADHII@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAD?$AAo?$AAm?$AAa?$AAi?$AAn?$AAS?$AAe?$AAt?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAt?$AAa?$AAt?$AAe@|
  000f8		 |$LN29@OALIoCtlPr@10|
  000f8	00000000	 DCD         |dpCurSettings|
  000fc		 |$M50219|

			 ENDP  ; |OALIoCtlPrcmDomainSetPowerState|

	EXPORT	|OALIoCtlPrcmSetSuspendState|
	EXPORT	|??_C@_1FA@LOEOCPDH@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAS?$AAe?$AAt?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$CI?$AAr?$AAc?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DO@DKNNCPML@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAS?$AAe?$AAt?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|OALWakeupLatency_SetSuspendState|

  00000			 AREA	 |.pdata|, PDATA
|$T50241| DCD	|$LN11@OALIoCtlPr@11|
	DCD	0x40002001

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@LOEOCPDH@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAS?$AAe?$AAt?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$CI?$AAr?$AAc?$AA?5@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "P", 0x0, "r", 0x0, "c", 0x0, "m"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "S", 0x0, "u", 0x0, "s"
	DCB	0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, "(", 0x0, "r", 0x0, "c"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@DKNNCPML@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAS?$AAe?$AAt?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "P", 0x0, "r", 0x0, "c", 0x0, "m"
	DCB	0x0, "S", 0x0, "e", 0x0, "t", 0x0, "S", 0x0, "u", 0x0, "s"
	DCB	0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALIoCtlPrcmSetSuspendState| PROC

; 1224 : {

  00000		 |$LN11@OALIoCtlPr@11|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M50238|
  00004	e1a07002	 mov         r7, r2
  00008	e1a06001	 mov         r6, r1

; 1225 :     BOOL rc = FALSE;
; 1226 :     OALMSG(OAL_IOCTL&&OAL_FUNC, (L"+OALIoCtlPrcmSetSuspendState\r\n"));

  0000c	e59f5068	 ldr         r5, [pc, #0x68]
  00010	e3a04000	 mov         r4, #0
  00014	e5953440	 ldr         r3, [r5, #0x440]
  00018	e3130a01	 tst         r3, #1, 20
  0001c	0a000004	 beq         |$LN5@OALIoCtlPr@11|
  00020	e3130004	 tst         r3, #4
  00024	0a000002	 beq         |$LN5@OALIoCtlPr@11|
  00028	e59f0048	 ldr         r0, [pc, #0x48]
  0002c	eb000000	 bl          NKDbgPrintfW
  00030	e5953440	 ldr         r3, [r5, #0x440]
  00034		 |$LN5@OALIoCtlPr@11|

; 1227 : 
; 1228 :     UNREFERENCED_PARAMETER(outSize);
; 1229 :     UNREFERENCED_PARAMETER(pOutSize);
; 1230 :     UNREFERENCED_PARAMETER(pOutBuffer);
; 1231 :     UNREFERENCED_PARAMETER(code);
; 1232 : 
; 1233 :     if (pInBuffer == NULL || inSize != sizeof(DWORD)) goto cleanUp;

  00034	e3560000	 cmp         r6, #0
  00038	0a000005	 beq         |$cleanUp$48175|
  0003c	e3570004	 cmp         r7, #4
  00040	1a000003	 bne         |$cleanUp$48175|

; 1234 : 
; 1235 :     rc = OALWakeupLatency_SetSuspendState(*(DWORD*)pInBuffer);

  00044	e5960000	 ldr         r0, [r6]
  00048	eb000000	 bl          OALWakeupLatency_SetSuspendState
  0004c	e5953440	 ldr         r3, [r5, #0x440]
  00050	e1a04000	 mov         r4, r0
  00054		 |$cleanUp$48175|

; 1236 : 
; 1237 : cleanUp:
; 1238 :     OALMSG(OAL_INTR&&OAL_FUNC, (L"-OALIoCtlPrcmSetSuspendState(rc = %d)\r\n", rc));

  00054	e3130901	 tst         r3, #1, 18
  00058	13130004	 tstne       r3, #4
  0005c	159f0010	 ldrne       r0, [pc, #0x10]
  00060	11a01004	 movne       r1, r4
  00064	1b000000	 blne        NKDbgPrintfW

; 1239 :     return rc;
; 1240 : }

  00068	e1a00004	 mov         r0, r4
  0006c	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00070	e12fff1e	 bx          lr
  00074		 |$LN12@OALIoCtlPr@11|
  00074		 |$LN13@OALIoCtlPr@11|
  00074	00000000	 DCD         |??_C@_1FA@LOEOCPDH@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAS?$AAe?$AAt?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$CI?$AAr?$AAc?$AA?5@|
  00078		 |$LN14@OALIoCtlPr@11|
  00078	00000000	 DCD         |??_C@_1DO@DKNNCPML@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAP?$AAr?$AAc?$AAm?$AAS?$AAe?$AAt?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  0007c		 |$LN15@OALIoCtlPr@11|
  0007c	00000000	 DCD         |dpCurSettings|
  00080		 |$M50239|

			 ENDP  ; |OALIoCtlPrcmSetSuspendState|

	EXPORT	|OALIoCtlOppRequest|
	EXPORT	|??_C@_1DO@PHDKNHBH@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAO?$AAp?$AAp?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@LGFHCAO@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAO?$AAp?$AAp?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|SetOpp|

  00000			 AREA	 |.pdata|, PDATA
|$T50261| DCD	|$LN12@OALIoCtlOp|
	DCD	0x40002401

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DO@PHDKNHBH@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAO?$AAp?$AAp?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "O", 0x0, "p", 0x0, "p", 0x0, "R"
	DCB	0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t"
	DCB	0x0, "(", 0x0, "r", 0x0, "c", 0x0, " ", 0x0, "=", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@LGFHCAO@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAO?$AAp?$AAp?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "O", 0x0, "p", 0x0, "p", 0x0, "R"
	DCB	0x0, "e", 0x0, "q", 0x0, "u", 0x0, "e", 0x0, "s", 0x0, "t"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALIoCtlOppRequest| PROC

; 1257 : {

  00000		 |$LN12@OALIoCtlOp|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M50258|
  00004	e1a07002	 mov         r7, r2
  00008	e1a05001	 mov         r5, r1

; 1258 :     BOOL rc = FALSE;
; 1259 :     IOCTL_OPP_REQUEST_IN *pOppRequest;
; 1260 :     OALMSG(OAL_IOCTL&&OAL_FUNC, (L"+OALIoCtlOppRequest\r\n"));

  0000c	e59f6078	 ldr         r6, [pc, #0x78]
  00010	e3a04000	 mov         r4, #0
  00014	e5963440	 ldr         r3, [r6, #0x440]
  00018	e3130a01	 tst         r3, #1, 20
  0001c	0a000004	 beq         |$LN6@OALIoCtlOp|
  00020	e3130004	 tst         r3, #4
  00024	0a000002	 beq         |$LN6@OALIoCtlOp|
  00028	e59f0058	 ldr         r0, [pc, #0x58]
  0002c	eb000000	 bl          NKDbgPrintfW
  00030	e5963440	 ldr         r3, [r6, #0x440]
  00034		 |$LN6@OALIoCtlOp|

; 1261 : 
; 1262 :     UNREFERENCED_PARAMETER(outSize);
; 1263 :     UNREFERENCED_PARAMETER(pOutSize);
; 1264 :     UNREFERENCED_PARAMETER(pOutBuffer);
; 1265 :     UNREFERENCED_PARAMETER(code);
; 1266 : 
; 1267 :     if (pInBuffer == NULL || inSize != sizeof(IOCTL_OPP_REQUEST_IN)) goto cleanUp;

  00034	e3550000	 cmp         r5, #0
  00038	0a000009	 beq         |$cleanUp$48200|
  0003c	e3570048	 cmp         r7, #0x48
  00040	1a000007	 bne         |$cleanUp$48200|

; 1268 :     
; 1269 :     pOppRequest = (IOCTL_OPP_REQUEST_IN*)pInBuffer;
; 1270 :     if (pOppRequest->dwCount > MAX_DVFS_DOMAINS) goto cleanUp;

  00044	e5952004	 ldr         r2, [r5, #4]
  00048	e3520008	 cmp         r2, #8
  0004c	8a000004	 bhi         |$cleanUp$48200|

; 1271 :     
; 1272 :     rc = SetOpp(pOppRequest->rgDomains, 
; 1273 :             pOppRequest->rgOpps, 
; 1274 :             pOppRequest->dwCount
; 1275 :             );

  00050	e2851028	 add         r1, r5, #0x28
  00054	e2850008	 add         r0, r5, #8
  00058	eb000000	 bl          SetOpp
  0005c	e5963440	 ldr         r3, [r6, #0x440]
  00060	e1a04000	 mov         r4, r0
  00064		 |$cleanUp$48200|

; 1276 : 
; 1277 : cleanUp:    
; 1278 :     OALMSG(OAL_INTR&&OAL_FUNC, (L"-OALIoCtlOppRequest(rc = %d)\r\n", rc));

  00064	e3130901	 tst         r3, #1, 18
  00068	13130004	 tstne       r3, #4
  0006c	159f0010	 ldrne       r0, [pc, #0x10]
  00070	11a01004	 movne       r1, r4
  00074	1b000000	 blne        NKDbgPrintfW

; 1279 :     return rc;
; 1280 : }

  00078	e1a00004	 mov         r0, r4
  0007c	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00080	e12fff1e	 bx          lr
  00084		 |$LN13@OALIoCtlOp|
  00084		 |$LN14@OALIoCtlOp|
  00084	00000000	 DCD         |??_C@_1DO@PHDKNHBH@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAO?$AAp?$AAp?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN?$AA?5?$AA?$CF?$AAd?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  00088		 |$LN15@OALIoCtlOp|
  00088	00000000	 DCD         |??_C@_1CM@LGFHCAO@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAO?$AAp?$AAp?$AAR?$AAe?$AAq?$AAu?$AAe?$AAs?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  0008c		 |$LN16@OALIoCtlOp|
  0008c	00000000	 DCD         |dpCurSettings|
  00090		 |$M50259|

			 ENDP  ; |OALIoCtlOppRequest|

	EXPORT	|OALIoCtlSmartReflexControl|
	EXPORT	|??_C@_1EO@KHFBABJJ@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@DBFHMFOM@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|SmartReflex_EnableMonitor|

  00000			 AREA	 |.pdata|, PDATA
|$T50281| DCD	|$LN11@OALIoCtlSm|
	DCD	0x40002401

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@KHFBABJJ@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "S", 0x0, "m", 0x0, "a", 0x0, "r"
	DCB	0x0, "t", 0x0, "R", 0x0, "e", 0x0, "f", 0x0, "l", 0x0, "e"
	DCB	0x0, "x", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "(", 0x0, "r", 0x0, "c", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@DBFHMFOM@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "S", 0x0, "m", 0x0, "a", 0x0, "r"
	DCB	0x0, "t", 0x0, "R", 0x0, "e", 0x0, "f", 0x0, "l", 0x0, "e"
	DCB	0x0, "x", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALIoCtlSmartReflexControl| PROC

; 1297 : {

  00000		 |$LN11@OALIoCtlSm|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M50278|
  00004	e1a07002	 mov         r7, r2
  00008	e1a05001	 mov         r5, r1

; 1298 :     BOOL rc = FALSE;
; 1299 :     OALMSG(OAL_IOCTL&&OAL_FUNC, (L"+OALIoCtlSmartReflexControl\r\n"));

  0000c	e59f6078	 ldr         r6, [pc, #0x78]
  00010	e3a04000	 mov         r4, #0
  00014	e5963440	 ldr         r3, [r6, #0x440]
  00018	e3130a01	 tst         r3, #1, 20
  0001c	0a000004	 beq         |$LN5@OALIoCtlSm|
  00020	e3130004	 tst         r3, #4
  00024	0a000002	 beq         |$LN5@OALIoCtlSm|
  00028	e59f0058	 ldr         r0, [pc, #0x58]
  0002c	eb000000	 bl          NKDbgPrintfW
  00030	e5963440	 ldr         r3, [r6, #0x440]
  00034		 |$LN5@OALIoCtlSm|

; 1300 :     
; 1301 :     UNREFERENCED_PARAMETER(outSize);
; 1302 :     UNREFERENCED_PARAMETER(pOutSize);
; 1303 :     UNREFERENCED_PARAMETER(pOutBuffer);
; 1304 :     UNREFERENCED_PARAMETER(code);
; 1305 : 
; 1306 :     if (pInBuffer == NULL || inSize < sizeof(BOOL)) goto cleanUp;

  00034	e3550000	 cmp         r5, #0
  00038	0a000009	 beq         |$cleanUp$48225|
  0003c	e3570004	 cmp         r7, #4
  00040	3a000007	 bcc         |$cleanUp$48225|

; 1307 : 
; 1308 :     SmartReflex_EnableMonitor(kSmartReflex_Channel1, *(BOOL*)pInBuffer);

  00044	e5951000	 ldr         r1, [r5]
  00048	e3a00000	 mov         r0, #0
  0004c	eb000000	 bl          SmartReflex_EnableMonitor

; 1309 :     SmartReflex_EnableMonitor(kSmartReflex_Channel2, *(BOOL*)pInBuffer);

  00050	e5951000	 ldr         r1, [r5]
  00054	e3a00001	 mov         r0, #1
  00058	eb000000	 bl          SmartReflex_EnableMonitor

; 1310 : 
; 1311 :     rc = TRUE;

  0005c	e5963440	 ldr         r3, [r6, #0x440]
  00060	e3a04001	 mov         r4, #1
  00064		 |$cleanUp$48225|

; 1312 : 
; 1313 : cleanUp:    
; 1314 :     OALMSG(OAL_INTR&&OAL_FUNC, (L"-OALIoCtlSmartReflexControl(rc = %d)\r\n", rc));

  00064	e3130901	 tst         r3, #1, 18
  00068	13130004	 tstne       r3, #4
  0006c	159f0010	 ldrne       r0, [pc, #0x10]
  00070	11a01004	 movne       r1, r4
  00074	1b000000	 blne        NKDbgPrintfW

; 1315 :     return rc;
; 1316 : }

  00078	e1a00004	 mov         r0, r4
  0007c	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00080	e12fff1e	 bx          lr
  00084		 |$LN12@OALIoCtlSm|
  00084		 |$LN13@OALIoCtlSm|
  00084	00000000	 DCD         |??_C@_1EO@KHFBABJJ@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$CI?$AAr?$AAc?$AA?5?$AA?$DN@|
  00088		 |$LN14@OALIoCtlSm|
  00088	00000000	 DCD         |??_C@_1DM@DBFHMFOM@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$AN?$AA?6?$AA?$AA@|
  0008c		 |$LN15@OALIoCtlSm|
  0008c	00000000	 DCD         |dpCurSettings|
  00090		 |$M50279|

			 ENDP  ; |OALIoCtlSmartReflexControl|

	EXPORT	|OALIoCtlUpdateRetentionVoltages|
	EXPORT	|??_C@_1FI@NIAMEIGG@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAR?$AAe?$AAt?$AAe?$AAn?$AAt?$AAi?$AAo?$AAn?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@LLINCBJK@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAR?$AAe?$AAt?$AAe?$AAn?$AAt?$AAi?$AAo?$AAn?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAs@| [ DATA ] ; `string'
	IMPORT	|UpdateRetentionVoltages|

  00000			 AREA	 |.pdata|, PDATA
|$T50301| DCD	|$LN11@OALIoCtlUp|
	DCD	0x40002001

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@NIAMEIGG@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAR?$AAe?$AAt?$AAe?$AAn?$AAt?$AAi?$AAo?$AAn?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAs@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "U", 0x0, "p", 0x0, "d", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, "R", 0x0, "e", 0x0, "t", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "V"
	DCB	0x0, "o", 0x0, "l", 0x0, "t", 0x0, "a", 0x0, "g", 0x0, "e"
	DCB	0x0, "s", 0x0, "(", 0x0, "r", 0x0, "c", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@LLINCBJK@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAR?$AAe?$AAt?$AAe?$AAn?$AAt?$AAi?$AAo?$AAn?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAs@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "U", 0x0, "p", 0x0, "d", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, "R", 0x0, "e", 0x0, "t", 0x0, "e"
	DCB	0x0, "n", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, "V"
	DCB	0x0, "o", 0x0, "l", 0x0, "t", 0x0, "a", 0x0, "g", 0x0, "e"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALIoCtlUpdateRetentionVoltages| PROC

; 1333 : {

  00000		 |$LN11@OALIoCtlUp|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M50298|
  00004	e1a07002	 mov         r7, r2
  00008	e1a06001	 mov         r6, r1

; 1334 :     IOCTL_RETENTION_VOLTAGES *pData;
; 1335 :     BOOL rc = FALSE;
; 1336 : 
; 1337 :     UNREFERENCED_PARAMETER(code);
; 1338 :     UNREFERENCED_PARAMETER(pOutSize);
; 1339 :     UNREFERENCED_PARAMETER(outSize);
; 1340 :     UNREFERENCED_PARAMETER(pOutBuffer);
; 1341 : 
; 1342 :     OALMSG(OAL_IOCTL&&OAL_FUNC, (L"+OALIoCtlUpdateRetentionVoltages\r\n"));

  0000c	e59f5068	 ldr         r5, [pc, #0x68]
  00010	e3a04000	 mov         r4, #0
  00014	e5953440	 ldr         r3, [r5, #0x440]
  00018	e3130a01	 tst         r3, #1, 20
  0001c	0a000004	 beq         |$LN5@OALIoCtlUp|
  00020	e3130004	 tst         r3, #4
  00024	0a000002	 beq         |$LN5@OALIoCtlUp|
  00028	e59f0048	 ldr         r0, [pc, #0x48]
  0002c	eb000000	 bl          NKDbgPrintfW
  00030	e5953440	 ldr         r3, [r5, #0x440]
  00034		 |$LN5@OALIoCtlUp|

; 1343 : 
; 1344 :     if (pInBuffer == NULL || inSize < sizeof(IOCTL_RETENTION_VOLTAGES)) goto cleanUp;

  00034	e3560000	 cmp         r6, #0
  00038	0a000005	 beq         |$cleanUp$48251|
  0003c	e3570008	 cmp         r7, #8
  00040	3a000003	 bcc         |$cleanUp$48251|

; 1345 : 
; 1346 :     pData = (IOCTL_RETENTION_VOLTAGES *)pInBuffer;
; 1347 :     UpdateRetentionVoltages(pData);

  00044	e1a00006	 mov         r0, r6
  00048	eb000000	 bl          UpdateRetentionVoltages

; 1348 : 
; 1349 :     rc = TRUE;

  0004c	e5953440	 ldr         r3, [r5, #0x440]
  00050	e3a04001	 mov         r4, #1
  00054		 |$cleanUp$48251|

; 1350 : 
; 1351 : cleanUp:
; 1352 :     OALMSG(OAL_INTR&&OAL_FUNC, (L"-OALIoCtlUpdateRetentionVoltages(rc = %d)\r\n", rc));

  00054	e3130901	 tst         r3, #1, 18
  00058	13130004	 tstne       r3, #4
  0005c	159f0010	 ldrne       r0, [pc, #0x10]
  00060	11a01004	 movne       r1, r4
  00064	1b000000	 blne        NKDbgPrintfW

; 1353 :     return rc;
; 1354 : }

  00068	e1a00004	 mov         r0, r4
  0006c	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00070	e12fff1e	 bx          lr
  00074		 |$LN12@OALIoCtlUp|
  00074		 |$LN13@OALIoCtlUp|
  00074	00000000	 DCD         |??_C@_1FI@NIAMEIGG@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAR?$AAe?$AAt?$AAe?$AAn?$AAt?$AAi?$AAo?$AAn?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAs@|
  00078		 |$LN14@OALIoCtlUp|
  00078	00000000	 DCD         |??_C@_1EG@LLINCBJK@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAR?$AAe?$AAt?$AAe?$AAn?$AAt?$AAi?$AAo?$AAn?$AAV?$AAo?$AAl?$AAt?$AAa?$AAg?$AAe?$AAs@|
  0007c		 |$LN15@OALIoCtlUp|
  0007c	00000000	 DCD         |dpCurSettings|
  00080		 |$M50299|

			 ENDP  ; |OALIoCtlUpdateRetentionVoltages|

	EXPORT	|OALIoCtlHalContextSaveGetBuffer|
	EXPORT	|??_C@_1FI@JNLFHLFE@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAS?$AAa?$AAv?$AAe?$AAG?$AAe?$AAt?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@NGBNIFNG@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAS?$AAa?$AAv?$AAe?$AAG?$AAe?$AAt?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T50320| DCD	|$LN11@OALIoCtlHa|
	DCD	0x40002001

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@JNLFHLFE@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAS?$AAa?$AAv?$AAe?$AAG?$AAe?$AAt?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t"
	DCB	0x0, "S", 0x0, "a", 0x0, "v", 0x0, "e", 0x0, "G", 0x0, "e"
	DCB	0x0, "t", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, "(", 0x0, "r", 0x0, "c", 0x0, " ", 0x0, "="
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ")", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@NGBNIFNG@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAS?$AAa?$AAv?$AAe?$AAG?$AAe?$AAt?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "I", 0x0, "o", 0x0, "C"
	DCB	0x0, "t", 0x0, "l", 0x0, "H", 0x0, "a", 0x0, "l", 0x0, "C"
	DCB	0x0, "o", 0x0, "n", 0x0, "t", 0x0, "e", 0x0, "x", 0x0, "t"
	DCB	0x0, "S", 0x0, "a", 0x0, "v", 0x0, "e", 0x0, "G", 0x0, "e"
	DCB	0x0, "t", 0x0, "B", 0x0, "u", 0x0, "f", 0x0, "f", 0x0, "e"
	DCB	0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALIoCtlHalContextSaveGetBuffer| PROC

; 1373 : {

  00000		 |$LN11@OALIoCtlHa|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M50317|
  00004	e1a06003	 mov         r6, r3

; 1374 :     BOOL rc = FALSE;
; 1375 :     OALMSG(OAL_IOCTL&&OAL_FUNC, (L"+OALIoCtlHalContextSaveGetBuffer\r\n"));

  00008	e59f506c	 ldr         r5, [pc, #0x6C]
  0000c	e3a04000	 mov         r4, #0
  00010	e5951440	 ldr         r1, [r5, #0x440]
  00014	e3110a01	 tst         r1, #1, 20
  00018	0a000004	 beq         |$LN5@OALIoCtlHa|
  0001c	e3110004	 tst         r1, #4
  00020	0a000002	 beq         |$LN5@OALIoCtlHa|
  00024	e59f004c	 ldr         r0, [pc, #0x4C]
  00028	eb000000	 bl          NKDbgPrintfW
  0002c	e5951440	 ldr         r1, [r5, #0x440]
  00030		 |$LN5@OALIoCtlHa|

; 1376 : 
; 1377 :     UNREFERENCED_PARAMETER(inSize);
; 1378 :     UNREFERENCED_PARAMETER(pOutSize);
; 1379 :     UNREFERENCED_PARAMETER(pInBuffer);
; 1380 :     UNREFERENCED_PARAMETER(code);
; 1381 : 
; 1382 : 
; 1383 :     if (pOutBuffer == NULL || outSize < sizeof(UINT32**)) goto cleanUp;

  00030	e3560000	 cmp         r6, #0
  00034	0a000005	 beq         |$cleanUp$48275|
  00038	e59d2010	 ldr         r2, [sp, #0x10]
  0003c	e3520004	 cmp         r2, #4

; 1384 : 
; 1385 :     *(UINT32**)pOutBuffer = &g_ffContextSaveMask;

  00040	259f302c	 ldrcs       r3, [pc, #0x2C]

; 1386 : 
; 1387 :     rc = TRUE;

  00044	23a04001	 movcs       r4, #1
  00048	25863000	 strcs       r3, [r6]
  0004c	25951440	 ldrcs       r1, [r5, #0x440]
  00050		 |$cleanUp$48275|

; 1388 : 
; 1389 : cleanUp:
; 1390 :     OALMSG(OAL_INTR&&OAL_FUNC,
; 1391 :         (L"-OALIoCtlHalContextSaveGetBuffer(rc = %d)\r\n", rc)
; 1392 :         );

  00050	e3110901	 tst         r1, #1, 18
  00054	13110004	 tstne       r1, #4
  00058	159f0010	 ldrne       r0, [pc, #0x10]
  0005c	11a01004	 movne       r1, r4
  00060	1b000000	 blne        NKDbgPrintfW

; 1393 :     return rc;
; 1394 : }

  00064	e1a00004	 mov         r0, r4
  00068	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0006c	e12fff1e	 bx          lr
  00070		 |$LN12@OALIoCtlHa|
  00070		 |$LN13@OALIoCtlHa|
  00070	00000000	 DCD         |??_C@_1FI@JNLFHLFE@?$AA?9?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAS?$AAa?$AAv?$AAe?$AAG?$AAe?$AAt?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr@|
  00074		 |$LN14@OALIoCtlHa|
  00074	00000000	 DCD         |g_ffContextSaveMask|
  00078		 |$LN15@OALIoCtlHa|
  00078	00000000	 DCD         |??_C@_1EG@NGBNIFNG@?$AA?$CL?$AAO?$AAA?$AAL?$AAI?$AAo?$AAC?$AAt?$AAl?$AAH?$AAa?$AAl?$AAC?$AAo?$AAn?$AAt?$AAe?$AAx?$AAt?$AAS?$AAa?$AAv?$AAe?$AAG?$AAe?$AAt?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr@|
  0007c		 |$LN16@OALIoCtlHa|
  0007c	00000000	 DCD         |dpCurSettings|
  00080		 |$M50318|

			 ENDP  ; |OALIoCtlHalContextSaveGetBuffer|

	EXPORT	|ForceStandbyUSB|
	IMPORT	|g_pSysCtrlGenReg|
	IMPORT	|PrcmDeviceEnableClocks|

  00000			 AREA	 |.pdata|, PDATA
|$T50332| DCD	|$LN5@ForceStand|
	DCD	0x40000f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |ForceStandbyUSB| PROC

; 1404 : {

  00000		 |$LN5@ForceStand|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M50329|

; 1405 :     // ES1.0 only
; 1406 :     //force_standby_usb(void)
; 1407 :     PrcmDeviceEnableClocks(OMAP_DEVICE_OMAPCTRL, TRUE);

  00004	e3a01001	 mov         r1, #1
  00008	e3a00004	 mov         r0, #4
  0000c	eb000000	 bl          PrcmDeviceEnableClocks

; 1408 :     SETREG32(&g_pSysCtrlGenReg->CONTROL_DEVCONF0, (1 << 15));

  00010	e59f3020	 ldr         r3, [pc, #0x20]

; 1409 :     PrcmDeviceEnableClocks(OMAP_DEVICE_OMAPCTRL, FALSE);

  00014	e3a01000	 mov         r1, #0
  00018	e3a00004	 mov         r0, #4
  0001c	e5932000	 ldr         r2, [r3]
  00020	e5923004	 ldr         r3, [r2, #4]
  00024	e3833902	 orr         r3, r3, #2, 18
  00028	e5823004	 str         r3, [r2, #4]
  0002c	eb000000	 bl          PrcmDeviceEnableClocks

; 1410 : }

  00030	e49de004	 ldr         lr, [sp], #4
  00034	e12fff1e	 bx          lr
  00038		 |$LN6@ForceStand|
  00038		 |$LN7@ForceStand|
  00038	00000000	 DCD         |g_pSysCtrlGenReg|
  0003c		 |$M50330|

			 ENDP  ; |ForceStandbyUSB|

	EXPORT	|ReleaseIvaReset|
	IMPORT	|PrcmDomainResetRelease|
	IMPORT	|PrcmClockSetDpllAutoIdleState|

  00000			 AREA	 |.pdata|, PDATA
|$T50341| DCD	|$LN5@ReleaseIva|
	DCD	0x40002401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |ReleaseIvaReset| PROC

; 1420 : {

  00000		 |$LN5@ReleaseIva|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M50338|

; 1421 :     // ES 1.0 only
; 1422 :     // workaround for errata 1.27
; 1423 :     //
; 1424 :     PrcmDeviceEnableClocks(OMAP_DEVICE_OMAPCTRL, TRUE);

  00004	e3a01001	 mov         r1, #1
  00008	e3a00004	 mov         r0, #4
  0000c	eb000000	 bl          PrcmDeviceEnableClocks

; 1425 :     
; 1426 :     PrcmClockSetDpllAutoIdleState(kDPLL2, DPLL_AUTOIDLE_DISABLED);

  00010	e3a01000	 mov         r1, #0
  00014	e3a00001	 mov         r0, #1
  00018	eb000000	 bl          PrcmClockSetDpllAutoIdleState

; 1427 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_IVA2_BOOTMOD, 1);

  0001c	e59f4068	 ldr         r4, [pc, #0x68]
  00020	e3a02001	 mov         r2, #1

; 1428 :     PrcmDomainResetRelease(POWERDOMAIN_IVA2, RST2_IVA2);

  00024	e3a01002	 mov         r1, #2
  00028	e5943000	 ldr         r3, [r4]
  0002c	e3a00008	 mov         r0, #8
  00030	e5832194	 str         r2, [r3, #0x194]
  00034	eb000000	 bl          PrcmDomainResetRelease

; 1429 :     PrcmDomainResetRelease(POWERDOMAIN_IVA2, RST1_IVA2);

  00038	e3a01001	 mov         r1, #1
  0003c	e3a00008	 mov         r0, #8
  00040	eb000000	 bl          PrcmDomainResetRelease

; 1430 :     PrcmClockSetDpllAutoIdleState(kDPLL2, DPLL_AUTOIDLE_LOWPOWERSTOPMODE);

  00044	e3a01001	 mov         r1, #1
  00048	e3a00001	 mov         r0, #1
  0004c	eb000000	 bl          PrcmClockSetDpllAutoIdleState

; 1431 : 
; 1432 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_IVA2_BOOTMOD, 0);

  00050	e5943000	 ldr         r3, [r4]

; 1433 :     OUTREG32(&g_PrcmPrm.pOMAP_IVA2_PRM->RM_RSTCTRL_IVA2, 0);

  00054	e59f202c	 ldr         r2, [pc, #0x2C]
  00058	e3a0e000	 mov         lr, #0
  0005c	e583e194	 str         lr, [r3, #0x194]
  00060	e5923020	 ldr         r3, [r2, #0x20]

; 1434 :     OUTREG32(&g_PrcmPrm.pOMAP_IVA2_PRM->RM_RSTST_IVA2, INREG32(&g_PrcmPrm.pOMAP_IVA2_PRM->RM_RSTST_IVA2));    
; 1435 : 
; 1436 :     PrcmDeviceEnableClocks(OMAP_DEVICE_OMAPCTRL, FALSE);

  00064	e3a01000	 mov         r1, #0
  00068	e3a00004	 mov         r0, #4
  0006c	e583e050	 str         lr, [r3, #0x50]
  00070	e5922020	 ldr         r2, [r2, #0x20]
  00074	e5923058	 ldr         r3, [r2, #0x58]
  00078	e5823058	 str         r3, [r2, #0x58]
  0007c	eb000000	 bl          PrcmDeviceEnableClocks

; 1437 : }

  00080	e8bd4010	 ldmia       sp!, {r4, lr}
  00084	e12fff1e	 bx          lr
  00088		 |$LN6@ReleaseIva|
  00088		 |$LN7@ReleaseIva|
  00088	00000000	 DCD         |g_PrcmPrm|
  0008c		 |$LN8@ReleaseIva|
  0008c	00000000	 DCD         |g_pSysCtrlGenReg|
  00090		 |$M50339|

			 ENDP  ; |ReleaseIvaReset|

	EXPORT	|ResetDisplay|
	IMPORT	|OALTimerGetReg|
	IMPORT	|OALPAtoVA|

  00000			 AREA	 |.pdata|, PDATA
|$T50361| DCD	|$LN18@ResetDispl|
	DCD	0x40004d01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |ResetDisplay| PROC

; 1447 : {

  00000		 |$LN18@ResetDispl|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M50358|

; 1448 :     unsigned int        val;
; 1449 :     unsigned int        tcrr;
; 1450 :     OMAP_DISPC_REGS    *pDispRegs = OALPAtoUA(OMAP_DISC1_REGS_PA);

  00004	e59f0124	 ldr         r0, [pc, #0x124]
  00008	e3a01000	 mov         r1, #0
  0000c	eb000000	 bl          OALPAtoVA
  00010	e1a04000	 mov         r4, r0

; 1451 : 
; 1452 :     // enable all the interface and functional clocks
; 1453 :     PrcmDeviceEnableClocks(OMAP_DEVICE_DSS, TRUE);

  00014	e3a0003f	 mov         r0, #0x3F
  00018	e3a01001	 mov         r1, #1
  0001c	eb000000	 bl          PrcmDeviceEnableClocks

; 1454 :     PrcmDeviceEnableClocks(OMAP_DEVICE_DSS1, TRUE);

  00020	e3a01001	 mov         r1, #1
  00024	e3a00040	 mov         r0, #0x40
  00028	eb000000	 bl          PrcmDeviceEnableClocks

; 1455 :     PrcmDeviceEnableClocks(OMAP_DEVICE_DSS2, TRUE);

  0002c	e3a01001	 mov         r1, #1
  00030	e3a00041	 mov         r0, #0x41
  00034	eb000000	 bl          PrcmDeviceEnableClocks

; 1456 :     PrcmDeviceEnableClocks(OMAP_DEVICE_TVOUT, TRUE);

  00038	e3a01001	 mov         r1, #1
  0003c	e3a00042	 mov         r0, #0x42
  00040	eb000000	 bl          PrcmDeviceEnableClocks

; 1457 : 
; 1458 :     // check if digital output or the lcd output are enabled
; 1459 :     val = INREG16(&pDispRegs->DISPC_CONTROL);

  00044	e1d434b0	 ldrh        r3, [r4, #0x40]

; 1460 :     if(val & (DISPC_CONTROL_DIGITALENABLE | DISPC_CONTROL_LCDENABLE))

  00048	e59f50dc	 ldr         r5, [pc, #0xDC]
  0004c	e3a02b01	 mov         r2, #1, 22
  00050	e3130003	 tst         r3, #3
  00054	e382604c	 orr         r6, r2, #0x4C
  00058	0a000011	 beq         |$LN14@ResetDispl|

; 1461 :     {
; 1462 :         // disable the lcd output and digital output
; 1463 :         val &= ~(DISPC_CONTROL_DIGITALENABLE | DISPC_CONTROL_LCDENABLE);

  0005c	e3c33003	 bic         r3, r3, #3

; 1464 :         OUTREG32(&pDispRegs->DISPC_CONTROL, val);

  00060	e5843040	 str         r3, [r4, #0x40]

; 1465 : 
; 1466 :         // wait until frame is done
; 1467 :         tcrr = OALTimerGetReg(&g_pTimerRegs->TCRR);

  00064	e5953000	 ldr         r3, [r5]
  00068	e2830028	 add         r0, r3, #0x28
  0006c	eb000000	 bl          OALTimerGetReg

; 1468 :         OUTREG32(&pDispRegs->DISPC_IRQSTATUS, DISPC_IRQSTATUS_FRAMEDONE);                

  00070	e3a03001	 mov         r3, #1
  00074	e5843018	 str         r3, [r4, #0x18]

; 1469 :         while ((INREG32(&pDispRegs->DISPC_IRQSTATUS) & DISPC_IRQSTATUS_FRAMEDONE) == 0)

  00078	e5943018	 ldr         r3, [r4, #0x18]
  0007c	e3130001	 tst         r3, #1
  00080	1a000007	 bne         |$LN14@ResetDispl|
  00084	e5952000	 ldr         r2, [r5]
  00088		 |$LL6@ResetDispl|

; 1470 :         {
; 1471 :            if ((g_pTimerRegs->TCRR - tcrr) > DISPLAY_TIMEOUT) break;

  00088	e5923028	 ldr         r3, [r2, #0x28]
  0008c	e0433000	 sub         r3, r3, r0
  00090	e1530006	 cmp         r3, r6
  00094	8a000002	 bhi         |$LN14@ResetDispl|
  00098	e5943018	 ldr         r3, [r4, #0x18]
  0009c	e3130001	 tst         r3, #1
  000a0	0afffff8	 beq         |$LL6@ResetDispl|
  000a4		 |$LN14@ResetDispl|

; 1472 :         }        
; 1473 :     }
; 1474 : 
; 1475 :     // reset the display controller
; 1476 :     SETREG32(&pDispRegs->DISPC_SYSCONFIG, DISPC_SYSCONFIG_SOFTRESET);

  000a4	e5943010	 ldr         r3, [r4, #0x10]
  000a8	e3833002	 orr         r3, r3, #2
  000ac	e5843010	 str         r3, [r4, #0x10]

; 1477 :     
; 1478 :     // wait until reset completes OR timeout occurs   
; 1479 :     tcrr = OALTimerGetReg(&g_pTimerRegs->TCRR);

  000b0	e5953000	 ldr         r3, [r5]
  000b4	e2830028	 add         r0, r3, #0x28
  000b8	eb000000	 bl          OALTimerGetReg

; 1480 :     while ((INREG32(&pDispRegs->DISPC_SYSSTATUS) & DISPC_SYSSTATUS_RESETDONE) == 0)

  000bc	e5943014	 ldr         r3, [r4, #0x14]
  000c0	e3130001	 tst         r3, #1
  000c4	1a000007	 bne         |$LN15@ResetDispl|
  000c8	e5952000	 ldr         r2, [r5]
  000cc		 |$LL3@ResetDispl|

; 1481 :     {
; 1482 :         // delay
; 1483 :         if ((g_pTimerRegs->TCRR - tcrr) > DISPLAY_TIMEOUT) break;

  000cc	e5923028	 ldr         r3, [r2, #0x28]
  000d0	e0433000	 sub         r3, r3, r0
  000d4	e1530006	 cmp         r3, r6
  000d8	8a000002	 bhi         |$LN15@ResetDispl|
  000dc	e5943014	 ldr         r3, [r4, #0x14]
  000e0	e3130001	 tst         r3, #1
  000e4	0afffff8	 beq         |$LL3@ResetDispl|
  000e8		 |$LN15@ResetDispl|
  000e8	e3a03c22	 mov         r3, #0x22, 24

; 1484 :     }
; 1485 : 
; 1486 :     // Configure for smart-idle mode
; 1487 :     OUTREG32( &pDispRegs->DISPC_SYSCONFIG,
; 1488 :                   DISPC_SYSCONFIG_AUTOIDLE |
; 1489 :                   SYSCONFIG_SMARTIDLE |
; 1490 :                   SYSCONFIG_ENAWAKEUP |
; 1491 :                   SYSCONFIG_CLOCKACTIVITY_I_ON |
; 1492 :                   SYSCONFIG_SMARTSTANDBY
; 1493 :                   );

  000ec	e3833015	 orr         r3, r3, #0x15

; 1494 : 
; 1495 :     // restore old clock settings
; 1496 :     PrcmDeviceEnableClocks(OMAP_DEVICE_DSS, FALSE);

  000f0	e3a01000	 mov         r1, #0
  000f4	e3a0003f	 mov         r0, #0x3F
  000f8	e5843010	 str         r3, [r4, #0x10]
  000fc	eb000000	 bl          PrcmDeviceEnableClocks

; 1497 :     PrcmDeviceEnableClocks(OMAP_DEVICE_DSS1, FALSE);

  00100	e3a01000	 mov         r1, #0
  00104	e3a00040	 mov         r0, #0x40
  00108	eb000000	 bl          PrcmDeviceEnableClocks

; 1498 :     PrcmDeviceEnableClocks(OMAP_DEVICE_DSS2, FALSE);

  0010c	e3a01000	 mov         r1, #0
  00110	e3a00041	 mov         r0, #0x41
  00114	eb000000	 bl          PrcmDeviceEnableClocks

; 1499 :     PrcmDeviceEnableClocks(OMAP_DEVICE_TVOUT, FALSE);

  00118	e3a01000	 mov         r1, #0
  0011c	e3a00042	 mov         r0, #0x42
  00120	eb000000	 bl          PrcmDeviceEnableClocks

; 1500 : 
; 1501 : }

  00124	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00128	e12fff1e	 bx          lr
  0012c		 |$LN19@ResetDispl|
  0012c		 |$LN20@ResetDispl|
  0012c	00000000	 DCD         |g_pTimerRegs|
  00130		 |$LN21@ResetDispl|
  00130	48050400	 DCD         0x48050400
  00134		 |$M50359|

			 ENDP  ; |ResetDisplay|

	EXPORT	|PrcmSetIVA2OffMode|
	EXPORT	|??_C@_1FK@FIFKBPFK@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?3?$AA?5?$AAI?$AAV?$AAA?$AA2?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAd?$AAo?$AAm?$AAa?$AAi?$AAn?$AA?5?$AAf?$AAu?$AAn?$AAc?$AAa?$AAt?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@HMFNDBFB@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?3?$AA?5?$AAI?$AAV?$AAA?$AA2?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAd?$AAo?$AAm?$AAa?$AAi?$AAn?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAO?$AAF?$AAF@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@ELNCGKNN@?$AAl?$AAp?$AAm?$AA?4?$AAk?$AAo?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?3?$AA?5?$AAI?$AAV?$AAA?$AA2?$AA_?$AAR?$AAS?$AAT?$AA1?$AA?5?$AAs?$AAi?$AAg?$AAn?$AAa?$AAl?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@PFIDHFBP@?$AAl?$AAp?$AAm?$AA?4?$AAk?$AAo?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?3?$AA?5?$AAI?$AAV?$AAA?$AA2?$AA?5?$AAd?$AAi?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAb?$AAe?$AAc?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@ENJPGDMG@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?3?$AA?5?$AAI?$AAV?$AAA?$AA2?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAd?$AAo?$AAm?$AAa?$AAi?$AAn?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAO?$AAN?$AA?5@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T50393| DCD	|$LN38@PrcmSetIVA|
	DCD	0x40006f01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@FIFKBPFK@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?3?$AA?5?$AAI?$AAV?$AAA?$AA2?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAd?$AAo?$AAm?$AAa?$AAi?$AAn?$AA?5?$AAf?$AAu?$AAn?$AAc?$AAa?$AAt?$AAi@| DCB "E"
	DCB	0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "V", 0x0, "A", 0x0, "2", 0x0, " ", 0x0, "p"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "d"
	DCB	0x0, "o", 0x0, "m", 0x0, "a", 0x0, "i", 0x0, "n", 0x0, " "
	DCB	0x0, "f", 0x0, "u", 0x0, "n", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "f", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@HMFNDBFB@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?3?$AA?5?$AAI?$AAV?$AAA?$AA2?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAd?$AAo?$AAm?$AAa?$AAi?$AAn?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAO?$AAF?$AAF@| DCB "E"
	DCB	0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "V", 0x0, "A", 0x0, "2", 0x0, " ", 0x0, "p"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "d"
	DCB	0x0, "o", 0x0, "m", 0x0, "a", 0x0, "i", 0x0, "n", 0x0, " "
	DCB	0x0, "n", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "O", 0x0, "F"
	DCB	0x0, "F", 0x0, " ", 0x0, "(", 0x0, "2", 0x0, ")", 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@ELNCGKNN@?$AAl?$AAp?$AAm?$AA?4?$AAk?$AAo?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?3?$AA?5?$AAI?$AAV?$AAA?$AA2?$AA_?$AAR?$AAS?$AAT?$AA1?$AA?5?$AAs?$AAi?$AAg?$AAn?$AAa?$AAl?$AA?5@| DCB "l"
	DCB	0x0, "p", 0x0, "m", 0x0, ".", 0x0, "k", 0x0, "o", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r"
	DCB	0x0, ":", 0x0, " ", 0x0, "I", 0x0, "V", 0x0, "A", 0x0, "2"
	DCB	0x0, "_", 0x0, "R", 0x0, "S", 0x0, "T", 0x0, "1", 0x0, " "
	DCB	0x0, "s", 0x0, "i", 0x0, "g", 0x0, "n", 0x0, "a", 0x0, "l"
	DCB	0x0, " ", 0x0, "w", 0x0, "a", 0x0, "s", 0x0, " ", 0x0, "n"
	DCB	0x0, "o", 0x0, "t", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "l"
	DCB	0x0, "e", 0x0, "a", 0x0, "s", 0x0, "e", 0x0, "d", 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@PFIDHFBP@?$AAl?$AAp?$AAm?$AA?4?$AAk?$AAo?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?3?$AA?5?$AAI?$AAV?$AAA?$AA2?$AA?5?$AAd?$AAi?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAb?$AAe?$AAc?$AAo@| DCB "l"
	DCB	0x0, "p", 0x0, "m", 0x0, ".", 0x0, "k", 0x0, "o", 0x0, ":"
	DCB	0x0, " ", 0x0, "E", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r"
	DCB	0x0, ":", 0x0, " ", 0x0, "I", 0x0, "V", 0x0, "A", 0x0, "2"
	DCB	0x0, " ", 0x0, "d", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "n"
	DCB	0x0, "o", 0x0, "t", 0x0, " ", 0x0, "b", 0x0, "e", 0x0, "c"
	DCB	0x0, "o", 0x0, "m", 0x0, "e", 0x0, " ", 0x0, "a", 0x0, "c"
	DCB	0x0, "t", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@ENJPGDMG@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?3?$AA?5?$AAI?$AAV?$AAA?$AA2?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAd?$AAo?$AAm?$AAa?$AAi?$AAn?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAO?$AAN?$AA?5@| DCB "E"
	DCB	0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, ":", 0x0, " "
	DCB	0x0, "I", 0x0, "V", 0x0, "A", 0x0, "2", 0x0, " ", 0x0, "p"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "d"
	DCB	0x0, "o", 0x0, "m", 0x0, "a", 0x0, "i", 0x0, "n", 0x0, " "
	DCB	0x0, "n", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "O", 0x0, "N"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "L", 0x0, "P"
	DCB	0x0, "M", 0x0, "_", 0x0, "o", 0x0, "n", 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |PrcmSetIVA2OffMode| PROC

; 1515 : {

  00000		 |$LN38@PrcmSetIVA|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M50390|

; 1516 :     UINT32 data, i;
; 1517 : 	
; 1518 :      /* MPU controlled ON + ACTIVE */
; 1519 :     // set next IVA2 power state to ON
; 1520 : 
; 1521 :     data = INREG32(&g_PrcmPrm.pOMAP_IVA2_PRM->PM_PWSTCTRL_IVA2);

  00004	e59f51ac	 ldr         r5, [pc, #0x1AC]

; 1522 :     data |= (3 << 0);
; 1523 :     OUTREG32(&g_PrcmPrm.pOMAP_IVA2_PRM->PM_PWSTCTRL_IVA2, data);
; 1524 : 
; 1525 :     // start a software supervised wake-up transition
; 1526 :     OUTREG32(&g_PrcmCm.pOMAP_IVA2_CM->CM_CLKSTCTRL_IVA2, 0x2);

  00008	e59f41a4	 ldr         r4, [pc, #0x1A4]
  0000c	e3a00002	 mov         r0, #2
  00010	e5952020	 ldr         r2, [r5, #0x20]

; 1527 : 
; 1528 :     // wait for IVA2 power domain to switch ON
; 1529 :     for (i = 0; i < MAX_IVA2_WAIT_COUNT; i++) {

  00014	e3a01000	 mov         r1, #0
  00018	e59230e0	 ldr         r3, [r2, #0xE0]
  0001c	e3833003	 orr         r3, r3, #3
  00020	e58230e0	 str         r3, [r2, #0xE0]
  00024	e5943020	 ldr         r3, [r4, #0x20]
  00028	e5830048	 str         r0, [r3, #0x48]
  0002c	e5952020	 ldr         r2, [r5, #0x20]
  00030		 |$LL20@PrcmSetIVA|

; 1530 :        if((INREG32(&g_PrcmPrm.pOMAP_IVA2_PRM->PM_PWSTST_IVA2) & 0x3) == 0x3 ) {

  00030	e59230e4	 ldr         r3, [r2, #0xE4]
  00034	e2033003	 and         r3, r3, #3
  00038	e3530003	 cmp         r3, #3
  0003c	0a000002	 beq         |$LN27@PrcmSetIVA|
  00040	e2811001	 add         r1, r1, #1
  00044	e3510805	 cmp         r1, #5, 16
  00048	3afffff8	 bcc         |$LL20@PrcmSetIVA|
  0004c		 |$LN27@PrcmSetIVA|

; 1531 :        
; 1532 :             break;
; 1533 :         }
; 1534 :     }
; 1535 :     if (i == MAX_IVA2_WAIT_COUNT) {

  0004c	e3510805	 cmp         r1, #5, 16
  00050	1a000002	 bne         |$LN16@PrcmSetIVA|

; 1536 :         RETAILMSG(1, (L"Error: IVA2 power domain not ON in LPM_on\n"));

  00054	e59f0154	 ldr         r0, [pc, #0x154]
  00058	eb000000	 bl          NKDbgPrintfW

; 1537 :         goto fail;

  0005c	ea00004a	 b           |$fail$48338|
  00060		 |$LN16@PrcmSetIVA|

; 1538 :     }
; 1539 :     // clear power-on transition request
; 1540 :     OUTREG32(&g_PrcmCm.pOMAP_IVA2_CM->CM_CLKSTCTRL_IVA2, 0);

  00060	e5943020	 ldr         r3, [r4, #0x20]
  00064	e3a06000	 mov         r6, #0

; 1541 : 
; 1542 :     // turn on IVA2 domain functional clock
; 1543 :     OUTREG32(&g_PrcmCm.pOMAP_IVA2_CM->CM_FCLKEN_IVA2, 1);

  00068	e3a07001	 mov         r7, #1
  0006c	e5836048	 str         r6, [r3, #0x48]
  00070	e5943020	 ldr         r3, [r4, #0x20]

; 1544 : 
; 1545 :     PrcmDomainResetRelease(POWERDOMAIN_IVA2, RST2_IVA2);

  00074	e3a01002	 mov         r1, #2
  00078	e3a00008	 mov         r0, #8
  0007c	e5837000	 str         r7, [r3]
  00080	eb000000	 bl          PrcmDomainResetRelease

; 1546 : 	
; 1547 :     // first wait for IVA2 state to become active
; 1548 :     for (i = 0; i < MAX_IVA2_WAIT_COUNT; i++) {

  00084	e5941020	 ldr         r1, [r4, #0x20]
  00088	e3a02000	 mov         r2, #0
  0008c		 |$LL15@PrcmSetIVA|

; 1549 :          if ((INREG32(&g_PrcmCm.pOMAP_IVA2_CM->CM_IDLEST_IVA2) & 0x1) ==0)  {        

  0008c	e5913020	 ldr         r3, [r1, #0x20]
  00090	e3130001	 tst         r3, #1
  00094	0a000002	 beq         |$LN28@PrcmSetIVA|
  00098	e2822001	 add         r2, r2, #1
  0009c	e3520805	 cmp         r2, #5, 16
  000a0	3afffff9	 bcc         |$LL15@PrcmSetIVA|
  000a4		 |$LN28@PrcmSetIVA|

; 1550 :             break;
; 1551 :         }
; 1552 :     }
; 1553 :     if (i == MAX_IVA2_WAIT_COUNT) {

  000a4	e3520805	 cmp         r2, #5, 16
  000a8	1a000002	 bne         |$LN11@PrcmSetIVA|

; 1554 :         RETAILMSG(1, (L"lpm.ko: Error: IVA2 did not become active\n"));

  000ac	e59f00f8	 ldr         r0, [pc, #0xF8]
  000b0	eb000000	 bl          NKDbgPrintfW
  000b4	ea000034	 b           |$fail$48338|
  000b8		 |$LN11@PrcmSetIVA|

; 1555 :         goto fail;
; 1556 :     }
; 1557 : 
; 1558 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_IVA2_BOOTMOD, 1);

  000b8	e59f30e8	 ldr         r3, [pc, #0xE8]

; 1559 : 
; 1560 :     // enable automatic clock gating
; 1561 :     OUTREG32(&g_PrcmCm.pOMAP_IVA2_CM->CM_CLKSTCTRL_IVA2, 0x3);

  000bc	e3a02003	 mov         r2, #3

; 1562 : 
; 1563 :     // set next IVA2 power state to OFF
; 1564 :     data = INREG32(&g_PrcmPrm.pOMAP_IVA2_PRM->PM_PWSTCTRL_IVA2);
; 1565 :     data &= ~(0x3);
; 1566 :     OUTREG32(&g_PrcmPrm.pOMAP_IVA2_PRM->PM_PWSTCTRL_IVA2, data);
; 1567 : 
; 1568 :     // ensure the IVA2_SW_RST1 status bit is cleared
; 1569 :     data = INREG32(&g_PrcmPrm.pOMAP_IVA2_PRM->RM_RSTST_IVA2);
; 1570 :     data |= (1 << 8);
; 1571 :     OUTREG32(&g_PrcmPrm.pOMAP_IVA2_PRM->RM_RSTST_IVA2, data);
; 1572 : 
; 1573 :     // release DSP from reset
; 1574 :     data = INREG32(&g_PrcmPrm.pOMAP_IVA2_PRM->RM_RSTCTRL_IVA2);
; 1575 :     data &= ~(1 << 0);
; 1576 :     OUTREG32(&g_PrcmPrm.pOMAP_IVA2_PRM->RM_RSTCTRL_IVA2, data);
; 1577 : 
; 1578 :     // wait for IVA2_RST1 signal to be released
; 1579 :     for (i = 0; i < MAX_IVA2_WAIT_COUNT; i++) {

  000c0	e3a01000	 mov         r1, #0
  000c4	e5933000	 ldr         r3, [r3]
  000c8	e5837194	 str         r7, [r3, #0x194]
  000cc	e5943020	 ldr         r3, [r4, #0x20]
  000d0	e5832048	 str         r2, [r3, #0x48]
  000d4	e5952020	 ldr         r2, [r5, #0x20]
  000d8	e59230e0	 ldr         r3, [r2, #0xE0]
  000dc	e3c33003	 bic         r3, r3, #3
  000e0	e58230e0	 str         r3, [r2, #0xE0]
  000e4	e5952020	 ldr         r2, [r5, #0x20]
  000e8	e5923058	 ldr         r3, [r2, #0x58]
  000ec	e3833c01	 orr         r3, r3, #1, 24
  000f0	e5823058	 str         r3, [r2, #0x58]
  000f4	e5952020	 ldr         r2, [r5, #0x20]
  000f8	e5923050	 ldr         r3, [r2, #0x50]
  000fc	e3c33001	 bic         r3, r3, #1
  00100	e5823050	 str         r3, [r2, #0x50]
  00104	e5950020	 ldr         r0, [r5, #0x20]
  00108		 |$LL10@PrcmSetIVA|

; 1580 :          if ((INREG32(&g_PrcmPrm.pOMAP_IVA2_PRM->RM_RSTST_IVA2) & (1 << 8)))  {        

  00108	e5903058	 ldr         r3, [r0, #0x58]
  0010c	e3130c01	 tst         r3, #1, 24
  00110	1a000002	 bne         |$LN29@PrcmSetIVA|
  00114	e2811001	 add         r1, r1, #1
  00118	e3510805	 cmp         r1, #5, 16
  0011c	3afffff9	 bcc         |$LL10@PrcmSetIVA|
  00120		 |$LN29@PrcmSetIVA|

; 1581 :             break;
; 1582 :         }
; 1583 :     }
; 1584 :     if (i == MAX_IVA2_WAIT_COUNT) {

  00120	e3510805	 cmp         r1, #5, 16
  00124	1a000002	 bne         |$LN6@PrcmSetIVA|

; 1585 :         RETAILMSG(1, (L"lpm.ko: Error: IVA2_RST1 signal was not released\n"));

  00128	e59f0074	 ldr         r0, [pc, #0x74]
  0012c	eb000000	 bl          NKDbgPrintfW
  00130	ea000015	 b           |$fail$48338|
  00134		 |$LN6@PrcmSetIVA|

; 1586 :         goto fail;
; 1587 :     }
; 1588 : 
; 1589 :     // clear the IVA2_SW_RST1 status bit
; 1590 :     data = INREG32(&g_PrcmPrm.pOMAP_IVA2_PRM->RM_RSTST_IVA2);

  00134	e5903058	 ldr         r3, [r0, #0x58]

; 1591 :     data |= (1 << 8);
; 1592 :     OUTREG32(&g_PrcmPrm.pOMAP_IVA2_PRM->RM_RSTST_IVA2, data);
; 1593 : 
; 1594 :     // wait for IVA2 power domain to switch OFF (~7 loops @ 312MHz)
; 1595 :     for (i = 0; i < MAX_IVA2_WAIT_COUNT; i++) {

  00138	e3a02000	 mov         r2, #0
  0013c	e3833c01	 orr         r3, r3, #1, 24
  00140	e5803058	 str         r3, [r0, #0x58]
  00144	e5951020	 ldr         r1, [r5, #0x20]
  00148		 |$LL5@PrcmSetIVA|

; 1596 :        if((INREG32(&g_PrcmPrm.pOMAP_IVA2_PRM->PM_PWSTST_IVA2) & 0x3) == 0 ) {

  00148	e59130e4	 ldr         r3, [r1, #0xE4]
  0014c	e3130003	 tst         r3, #3
  00150	0a000002	 beq         |$LN30@PrcmSetIVA|
  00154	e2822001	 add         r2, r2, #1
  00158	e3520805	 cmp         r2, #5, 16
  0015c	3afffff9	 bcc         |$LL5@PrcmSetIVA|
  00160		 |$LN30@PrcmSetIVA|

; 1597 :             break;
; 1598 :         }
; 1599 :     }
; 1600 :     if (i == MAX_IVA2_WAIT_COUNT) {

  00160	e3520805	 cmp         r2, #5, 16
  00164	1a000002	 bne         |$LN1@PrcmSetIVA|

; 1601 :         RETAILMSG(1, (L"Error: IVA2 power domain not OFF (2)\n"));

  00168	e59f0030	 ldr         r0, [pc, #0x30]
  0016c	eb000000	 bl          NKDbgPrintfW
  00170	ea000005	 b           |$fail$48338|
  00174		 |$LN1@PrcmSetIVA|

; 1602 :         goto fail;
; 1603 :     }
; 1604 : 	
; 1605 :     // assert reset on DSP, SEQ
; 1606 :     OUTREG32(&g_PrcmPrm.pOMAP_IVA2_PRM->RM_RSTCTRL_IVA2, 0x7);

  00174	e3a03007	 mov         r3, #7
  00178	e5813050	 str         r3, [r1, #0x50]

; 1607 : 	
; 1608 :     // disable automatic clock gating
; 1609 :     OUTREG32(&g_PrcmCm.pOMAP_IVA2_CM->CM_CLKSTCTRL_IVA2, 0);

  0017c	e5943020	 ldr         r3, [r4, #0x20]
  00180	e5836048	 str         r6, [r3, #0x48]

; 1610 : 
; 1611 :     // turn off IVA2 domain functional clock
; 1612 :     OUTREG32(&g_PrcmCm.pOMAP_IVA2_CM->CM_FCLKEN_IVA2, 0);

  00184	e5943020	 ldr         r3, [r4, #0x20]
  00188	e5836000	 str         r6, [r3]
  0018c		 |$fail$48338|

; 1613 : 	
; 1614 : fail:
; 1615 :     RETAILMSG(1, (L"Error: IVA2 power domain funcation failed \r\n"));

  0018c	e59f0008	 ldr         r0, [pc, #8]
  00190	eb000000	 bl          NKDbgPrintfW

; 1616 :     return;
; 1617 :    
; 1618 : }

  00194	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00198	e12fff1e	 bx          lr
  0019c		 |$LN39@PrcmSetIVA|
  0019c		 |$LN40@PrcmSetIVA|
  0019c	00000000	 DCD         |??_C@_1FK@FIFKBPFK@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?3?$AA?5?$AAI?$AAV?$AAA?$AA2?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAd?$AAo?$AAm?$AAa?$AAi?$AAn?$AA?5?$AAf?$AAu?$AAn?$AAc?$AAa?$AAt?$AAi@|
  001a0		 |$LN41@PrcmSetIVA|
  001a0	00000000	 DCD         |??_C@_1EM@HMFNDBFB@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?3?$AA?5?$AAI?$AAV?$AAA?$AA2?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAd?$AAo?$AAm?$AAa?$AAi?$AAn?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAO?$AAF?$AAF@|
  001a4		 |$LN42@PrcmSetIVA|
  001a4	00000000	 DCD         |??_C@_1GE@ELNCGKNN@?$AAl?$AAp?$AAm?$AA?4?$AAk?$AAo?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?3?$AA?5?$AAI?$AAV?$AAA?$AA2?$AA_?$AAR?$AAS?$AAT?$AA1?$AA?5?$AAs?$AAi?$AAg?$AAn?$AAa?$AAl?$AA?5@|
  001a8		 |$LN43@PrcmSetIVA|
  001a8	00000000	 DCD         |g_pSysCtrlGenReg|
  001ac		 |$LN44@PrcmSetIVA|
  001ac	00000000	 DCD         |??_C@_1FG@PFIDHFBP@?$AAl?$AAp?$AAm?$AA?4?$AAk?$AAo?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?3?$AA?5?$AAI?$AAV?$AAA?$AA2?$AA?5?$AAd?$AAi?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAb?$AAe?$AAc?$AAo@|
  001b0		 |$LN45@PrcmSetIVA|
  001b0	00000000	 DCD         |??_C@_1FG@ENJPGDMG@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?3?$AA?5?$AAI?$AAV?$AAA?$AA2?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAd?$AAo?$AAm?$AAa?$AAi?$AAn?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAO?$AAN?$AA?5@|
  001b4		 |$LN46@PrcmSetIVA|
  001b4	00000000	 DCD         |g_PrcmCm|
  001b8		 |$LN47@PrcmSetIVA|
  001b8	00000000	 DCD         |g_PrcmPrm|
  001bc		 |$M50391|

			 ENDP  ; |PrcmSetIVA2OffMode|

	EXPORT	|ForceIdleMMC|

  00000			 AREA	 |.pdata|, PDATA
|$T50409| DCD	|$LN5@ForceIdleM|
	DCD	0x40001901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |ForceIdleMMC| PROC

; 1629 : {

  00000		 |$LN5@ForceIdleM|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M50406|

; 1630 :     OMAP_MMCHS_REGS    *pMmcRegs;
; 1631 :     
; 1632 :     PrcmDeviceEnableClocks(OMAP_DEVICE_MMC1, TRUE);

  00004	e3a01001	 mov         r1, #1
  00008	e3a00015	 mov         r0, #0x15
  0000c	eb000000	 bl          PrcmDeviceEnableClocks
  00010	e3a05312	 mov         r5, #0x12, 6

; 1633 :     pMmcRegs = OALPAtoUA(OMAP_MMCHS1_REGS_PA);

  00014	e3850927	 orr         r0, r5, #0x27, 18
  00018	e3a01000	 mov         r1, #0
  0001c	eb000000	 bl          OALPAtoVA

; 1634 :     OUTREG32(&pMmcRegs->MMCHS_SYSCONFIG, SYSCONFIG_FORCEIDLE);

  00020	e3a04000	 mov         r4, #0
  00024	e5804010	 str         r4, [r0, #0x10]

; 1635 :     PrcmDeviceEnableClocks(OMAP_DEVICE_MMC1, FALSE);

  00028	e3a00015	 mov         r0, #0x15
  0002c	e3a01000	 mov         r1, #0
  00030	eb000000	 bl          PrcmDeviceEnableClocks

; 1636 : 
; 1637 :     PrcmDeviceEnableClocks(OMAP_DEVICE_MMC2, TRUE);

  00034	e3a01001	 mov         r1, #1
  00038	e3a00016	 mov         r0, #0x16
  0003c	eb000000	 bl          PrcmDeviceEnableClocks

; 1638 :     pMmcRegs = OALPAtoUA(OMAP_MMCHS2_REGS_PA);

  00040	e3a01000	 mov         r1, #0
  00044	e385092d	 orr         r0, r5, #0x2D, 18
  00048	eb000000	 bl          OALPAtoVA

; 1639 :     OUTREG32(&pMmcRegs->MMCHS_SYSCONFIG, SYSCONFIG_FORCEIDLE);

  0004c	e5804010	 str         r4, [r0, #0x10]

; 1640 :     PrcmDeviceEnableClocks(OMAP_DEVICE_MMC2, FALSE);

  00050	e3a00016	 mov         r0, #0x16
  00054	e3a01000	 mov         r1, #0
  00058	eb000000	 bl          PrcmDeviceEnableClocks

; 1641 : }

  0005c	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$M50407|

			 ENDP  ; |ForceIdleMMC|

	IMPORT	|TWLClose|
	IMPORT	|TWLOpen|
; File c:\wince600\platform\common\src\soc\common_ti_v1\triton\inc\twl.h

  00000			 AREA	 |.pdata|, PDATA
|$T50443| DCD	|$LN18@TWLconfigO|
	DCD	0x40003d02
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\oal\oallib\oem_pm.c

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |TWLconfigOFFmode| PROC

; 1688 : {

  00000		 |$LN18@TWLconfigO|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M50440|

; 1689 :     void *hTwl;
; 1690 :     UINT8 data;
; 1691 :    
; 1692 :     hTwl = TWLOpen();

  00008	eb000000	 bl          TWLOpen
  0000c	e1b04000	 movs        r4, r0

; 1693 :     if (hTwl == NULL) return;

  00010	0a000034	 beq         |$LN2@TWLconfigO|

; 1694 : 
; 1695 :     // unsecure registers
; 1696 :     TWLWriteByteReg(hTwl, TWL_PROTECT_KEY, 0xCE);

  00014	e3a030ce	 mov         r3, #0xCE
  00018	e3a05803	 mov         r5, #3, 16
  0001c	e5cd3004	 strb        r3, [sp, #4]
  00020	e3a03001	 mov         r3, #1
  00024	e3851044	 orr         r1, r5, #0x44
  00028	e28d2004	 add         r2, sp, #4
  0002c	e1a00004	 mov         r0, r4
  00030	eb000000	 bl          TWLWriteRegs

; 1697 :     TWLWriteByteReg(hTwl, TWL_PROTECT_KEY, 0xEC);

  00034	e3a030ec	 mov         r3, #0xEC
  00038	e5cd3004	 strb        r3, [sp, #4]
  0003c	e3a03001	 mov         r3, #1
  00040	e28d2004	 add         r2, sp, #4
  00044	e3851044	 orr         r1, r5, #0x44
  00048	e1a00004	 mov         r0, r4
  0004c	eb000000	 bl          TWLWriteRegs

; 1698 : 
; 1699 :     TWLReadRegs(hTwl, TWL_CFG_P1_TRANSITION, &data, sizeof(data));          

  00050	e3851036	 orr         r1, r5, #0x36
  00054	e3a03001	 mov         r3, #1
  00058	e28d2000	 add         r2, sp, #0
  0005c	e1a00004	 mov         r0, r4
  00060	eb000000	 bl          TWLReadRegs

; 1700 :     data &= ~STARTON_CHG;                                       

  00064	e5dd3000	 ldrb        r3, [sp]

; 1701 :     TWLWriteByteReg(hTwl, TWL_CFG_P1_TRANSITION, data);          

  00068	e28d2004	 add         r2, sp, #4
  0006c	e3851036	 orr         r1, r5, #0x36
  00070	e20330fd	 and         r3, r3, #0xFD
  00074	e5cd3000	 strb        r3, [sp]
  00078	e5cd3004	 strb        r3, [sp, #4]
  0007c	e3a03001	 mov         r3, #1
  00080	e1a00004	 mov         r0, r4
  00084	eb000000	 bl          TWLWriteRegs

; 1702 : 
; 1703 :      // secure registers
; 1704 :     TWLWriteByteReg(hTwl, TWL_PROTECT_KEY, 0x00);

  00088	e3a03000	 mov         r3, #0
  0008c	e5cd3004	 strb        r3, [sp, #4]
  00090	e3a03001	 mov         r3, #1
  00094	e28d2004	 add         r2, sp, #4
  00098	e3851044	 orr         r1, r5, #0x44
  0009c	e1a00004	 mov         r0, r4
  000a0	eb000000	 bl          TWLWriteRegs
  000a4	e3a05803	 mov         r5, #3, 16

; 1705 : 
; 1706 :     TWLWriteByteReg(hTwl, TWL_VDD1_REMAP, 0);

  000a8	e3a0e000	 mov         lr, #0
  000ac	e38510b2	 orr         r1, r5, #0xB2
  000b0	e3a03001	 mov         r3, #1
  000b4	e28d2004	 add         r2, sp, #4
  000b8	e1a00004	 mov         r0, r4
  000bc	e5cde004	 strb        lr, [sp, #4]
  000c0	eb000000	 bl          TWLWriteRegs

; 1707 : 
; 1708 :     TWLWriteByteReg(hTwl, TWL_VDD2_REMAP, 0);

  000c4	e3a03000	 mov         r3, #0
  000c8	e5cd3004	 strb        r3, [sp, #4]
  000cc	e3a03001	 mov         r3, #1
  000d0	e28d2004	 add         r2, sp, #4
  000d4	e38510c0	 orr         r1, r5, #0xC0
  000d8	e1a00004	 mov         r0, r4
  000dc	eb000000	 bl          TWLWriteRegs

; 1709 : 	 
; 1710 :     TWLClose(hTwl);

  000e0	e1a00004	 mov         r0, r4
  000e4	eb000000	 bl          TWLClose
  000e8		 |$LN2@TWLconfigO|

; 1711 : }

  000e8	e28dd008	 add         sp, sp, #8
  000ec	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000f0	e12fff1e	 bx          lr
  000f4		 |$M50441|

			 ENDP  ; |TWLconfigOFFmode|

	EXPORT	|??_C@_1DI@GEPKCEFA@?$AA?9?$AAO?$AAA?$AAL?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAT?$AA2?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAe?$AAq?$AAu?$AAe?$AAn?$AAc?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FI@HMIHMJMI@?$AA?$CL?$AAO?$AAA?$AAL?$AA?3?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAe?$AA?5?$AAW?$AAA?$AAR?$AAM?$AA?5?$AAR?$AAE?$AAS?$AAE?$AAT?$AA?5?$AAS?$AAE?$AAQ?$AA?5?$AAt?$AAo?$AA?5?$AAm?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GM@MPAJFJKN@?$AA?$CL?$AAO?$AAA?$AAL?$AA?3?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAe?$AA?5?$AAS?$AAl?$AAe?$AAe?$AAp?$AA?5?$AAt?$AAo?$AA?5?$AAA?$AAc?$AAt?$AAi?$AAv?$AAe?$AA?5?$AAs?$AAe?$AAq?$AAu@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@NAGNGIJH@?$AA?$CL?$AAO?$AAA?$AAL?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?9?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GK@DPCKBHCM@?$AA?$CL?$AAO?$AAA?$AAL?$AA?3?$AA?5?$AAr?$AAi?$AAt?$AAe?$AA?5?$AAA?$AAc?$AAt?$AAi?$AAv?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAS?$AAl?$AAe?$AAe?$AAp?$AA?5?$AAs?$AAe?$AAq?$AAu?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@CJIEEMKC@?$AA?$CL?$AAO?$AAA?$AAL?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAT?$AA2?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAe?$AAq?$AAu?$AAe?$AAn?$AAc?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00038			 AREA	 |.bss|, NOINIT
|s_pT2WarmResetSeqWords| % 0x18
|s_pT2WarmResetSeqWords| % 0x18
|s_pT2WakeOnSeqWords| % 0x10
|s_pT2SleepOffSeqWords| % 0x10
; File c:\wince600\platform\common\src\soc\common_ti_v1\triton\inc\twl.h

  00000			 AREA	 |.pdata|, PDATA
|$T50633| DCD	|$LN118@InitT2Powe|
	DCD	0x4001a202

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@GEPKCEFA@?$AA?9?$AAO?$AAA?$AAL?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAT?$AA2?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAe?$AAq?$AAu?$AAe?$AAn?$AAc?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, ":", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "T", 0x0, "2", 0x0, "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S", 0x0, "e"
	DCB	0x0, "q", 0x0, "u", 0x0, "e", 0x0, "n", 0x0, "c", 0x0, "e"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FI@HMIHMJMI@?$AA?$CL?$AAO?$AAA?$AAL?$AA?3?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAe?$AA?5?$AAW?$AAA?$AAR?$AAM?$AA?5?$AAR?$AAE?$AAS?$AAE?$AAT?$AA?5?$AAS?$AAE?$AAQ?$AA?5?$AAt?$AAo?$AA?5?$AAm?$AAe@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, ":", 0x0, " ", 0x0, "w"
	DCB	0x0, "r", 0x0, "i", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "W"
	DCB	0x0, "A", 0x0, "R", 0x0, "M", 0x0, " ", 0x0, "R", 0x0, "E"
	DCB	0x0, "S", 0x0, "E", 0x0, "T", 0x0, " ", 0x0, "S", 0x0, "E"
	DCB	0x0, "Q", 0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "m"
	DCB	0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, " "
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@MPAJFJKN@?$AA?$CL?$AAO?$AAA?$AAL?$AA?3?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAe?$AA?5?$AAS?$AAl?$AAe?$AAe?$AAp?$AA?5?$AAt?$AAo?$AA?5?$AAA?$AAc?$AAt?$AAi?$AAv?$AAe?$AA?5?$AAs?$AAe?$AAq?$AAu@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, ":", 0x0, " ", 0x0, "w"
	DCB	0x0, "r", 0x0, "i", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "S"
	DCB	0x0, "l", 0x0, "e", 0x0, "e", 0x0, "p", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "A", 0x0, "c", 0x0, "t", 0x0, "i"
	DCB	0x0, "v", 0x0, "e", 0x0, " ", 0x0, "s", 0x0, "e", 0x0, "q"
	DCB	0x0, "u", 0x0, "e", 0x0, "n", 0x0, "c", 0x0, "e", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "m", 0x0, "e", 0x0, "m"
	DCB	0x0, "o", 0x0, "r", 0x0, "y", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@NAGNGIJH@?$AA?$CL?$AAO?$AAA?$AAL?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?9?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, ":", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, "-", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GK@DPCKBHCM@?$AA?$CL?$AAO?$AAA?$AAL?$AA?3?$AA?5?$AAr?$AAi?$AAt?$AAe?$AA?5?$AAA?$AAc?$AAt?$AAi?$AAv?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAS?$AAl?$AAe?$AAe?$AAp?$AA?5?$AAs?$AAe?$AAq?$AAu?$AAe@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, ":", 0x0, " ", 0x0, "r"
	DCB	0x0, "i", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "A", 0x0, "c"
	DCB	0x0, "t", 0x0, "i", 0x0, "v", 0x0, "e", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "S", 0x0, "l", 0x0, "e", 0x0, "e"
	DCB	0x0, "p", 0x0, " ", 0x0, "s", 0x0, "e", 0x0, "q", 0x0, "u"
	DCB	0x0, "e", 0x0, "n", 0x0, "c", 0x0, "e", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "m", 0x0, "e", 0x0, "m", 0x0, "o"
	DCB	0x0, "r", 0x0, "y", 0x0, " ", 0x0, "0", 0x0, "x", 0x0, "%"
	DCB	0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@CJIEEMKC@?$AA?$CL?$AAO?$AAA?$AAL?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAT?$AA2?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAe?$AAq?$AAu?$AAe?$AAn?$AAc?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, ":", 0x0, " ", 0x0, "I"
	DCB	0x0, "n", 0x0, "i", 0x0, "t", 0x0, "T", 0x0, "2", 0x0, "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "S", 0x0, "e"
	DCB	0x0, "q", 0x0, "u", 0x0, "e", 0x0, "n", 0x0, "c", 0x0, "e"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\oal\oallib\oem_pm.c

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |InitT2PowerSequence| PROC

; 1721 : {    

  00000		 |$LN118@InitT2Powe|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M50630|

; 1722 :     int i, j;
; 1723 :     void *hTwl;
; 1724 : 	UCHAR addr = 0;
; 1725 :    
; 1726 : 	OALMSG(1, (L"+OAL: InitT2PowerSequence\r\n"));

  00008	e59f0674	 ldr         r0, [pc, #0x674]
  0000c	eb000000	 bl          NKDbgPrintfW

; 1727 :     hTwl = TWLOpen();

  00010	eb000000	 bl          TWLOpen
  00014	e1b05000	 movs        r5, r0

; 1728 :     if (hTwl == NULL) return;

  00018	0a000181	 beq         |$LN20@InitT2Powe|

; 1729 :     
; 1730 :     //  Initialize interrupts of T2 to all off
; 1731 :     TWLWriteByteReg(hTwl, TWL_PWR_ISR1, 0xFF); // Interrupt Status Register

  0001c	e3a030ff	 mov         r3, #0xFF
  00020	e3a07803	 mov         r7, #3, 16
  00024	e5cd3000	 strb        r3, [sp]
  00028	e3a03001	 mov         r3, #1
  0002c	e387102e	 orr         r1, r7, #0x2E
  00030	e28d2000	 add         r2, sp, #0
  00034	e1a00005	 mov         r0, r5
  00038	eb000000	 bl          TWLWriteRegs
  0003c	e3a0b803	 mov         r11, #3, 16

; 1732 :     TWLWriteByteReg(hTwl, TWL_PWR_IMR1, 0xFF); // Interrupt Mask Register

  00040	e3a0e0ff	 mov         lr, #0xFF
  00044	e38b102f	 orr         r1, r11, #0x2F
  00048	e3a03001	 mov         r3, #1
  0004c	e28d2000	 add         r2, sp, #0
  00050	e1a00005	 mov         r0, r5
  00054	e5cde000	 strb        lr, [sp]
  00058	eb000000	 bl          TWLWriteRegs

; 1733 :     
; 1734 :     TWLWriteByteReg(hTwl, TWL_PWR_ISR2, 0xFF); // INT2

  0005c	e3a030ff	 mov         r3, #0xFF
  00060	e5cd3000	 strb        r3, [sp]
  00064	e3a03001	 mov         r3, #1
  00068	e38b1030	 orr         r1, r11, #0x30
  0006c	e28d2000	 add         r2, sp, #0
  00070	e1a00005	 mov         r0, r5
  00074	eb000000	 bl          TWLWriteRegs

; 1735 :     TWLWriteByteReg(hTwl, TWL_PWR_IMR2, 0xFF);

  00078	e3a030ff	 mov         r3, #0xFF
  0007c	e5cd3000	 strb        r3, [sp]
  00080	e3a03001	 mov         r3, #1
  00084	e28d2000	 add         r2, sp, #0
  00088	e38b1031	 orr         r1, r11, #0x31
  0008c	e1a00005	 mov         r0, r5
  00090	eb000000	 bl          TWLWriteRegs
  00094	e3a06802	 mov         r6, #2, 16

; 1736 : 
; 1737 :     TWLWriteByteReg(hTwl, TWL_BCIIMR1A, 0xFF);

  00098	e3a0e0ff	 mov         lr, #0xFF
  0009c	e38610bb	 orr         r1, r6, #0xBB
  000a0	e3a03001	 mov         r3, #1
  000a4	e28d2000	 add         r2, sp, #0
  000a8	e1a00005	 mov         r0, r5
  000ac	e5cde000	 strb        lr, [sp]
  000b0	eb000000	 bl          TWLWriteRegs

; 1738 :     TWLWriteByteReg(hTwl, TWL_BCIIMR2A, 0xFF);

  000b4	e3a030ff	 mov         r3, #0xFF
  000b8	e5cd3000	 strb        r3, [sp]
  000bc	e3a03001	 mov         r3, #1
  000c0	e28d2000	 add         r2, sp, #0
  000c4	e38610bc	 orr         r1, r6, #0xBC
  000c8	e1a00005	 mov         r0, r5
  000cc	eb000000	 bl          TWLWriteRegs

; 1739 :     TWLWriteByteReg(hTwl, TWL_BCIIMR1B, 0xFF);

  000d0	e3a030ff	 mov         r3, #0xFF
  000d4	e5cd3000	 strb        r3, [sp]
  000d8	e3a03001	 mov         r3, #1
  000dc	e28d2000	 add         r2, sp, #0
  000e0	e38610bf	 orr         r1, r6, #0xBF
  000e4	e1a00005	 mov         r0, r5
  000e8	eb000000	 bl          TWLWriteRegs

; 1740 :     TWLWriteByteReg(hTwl, TWL_BCIIMR2B, 0xFF);

  000ec	e3a030ff	 mov         r3, #0xFF
  000f0	e5cd3000	 strb        r3, [sp]
  000f4	e3a03001	 mov         r3, #1
  000f8	e28d2000	 add         r2, sp, #0
  000fc	e38610c0	 orr         r1, r6, #0xC0
  00100	e1a00005	 mov         r0, r5
  00104	eb000000	 bl          TWLWriteRegs

; 1741 : 
; 1742 :     TWLWriteByteReg(hTwl, TWL_MADC_ISR1, 0xFF);

  00108	e3a030ff	 mov         r3, #0xFF
  0010c	e5cd3000	 strb        r3, [sp]
  00110	e3a03001	 mov         r3, #1
  00114	e3861061	 orr         r1, r6, #0x61
  00118	e28d2000	 add         r2, sp, #0
  0011c	e1a00005	 mov         r0, r5
  00120	eb000000	 bl          TWLWriteRegs

; 1743 :     TWLWriteByteReg(hTwl, TWL_MADC_IMR1, 0xFF);

  00124	e3a030ff	 mov         r3, #0xFF
  00128	e5cd3000	 strb        r3, [sp]
  0012c	e3a03001	 mov         r3, #1
  00130	e28d2000	 add         r2, sp, #0
  00134	e3861062	 orr         r1, r6, #0x62
  00138	e1a00005	 mov         r0, r5
  0013c	eb000000	 bl          TWLWriteRegs

; 1744 :     TWLWriteByteReg(hTwl, TWL_MADC_ISR2, 0xFF);

  00140	e3a030ff	 mov         r3, #0xFF
  00144	e5cd3000	 strb        r3, [sp]
  00148	e3a03001	 mov         r3, #1
  0014c	e28d2000	 add         r2, sp, #0
  00150	e3861063	 orr         r1, r6, #0x63
  00154	e1a00005	 mov         r0, r5
  00158	eb000000	 bl          TWLWriteRegs

; 1745 :     TWLWriteByteReg(hTwl, TWL_MADC_IMR2, 0xFF);

  0015c	e3a030ff	 mov         r3, #0xFF
  00160	e5cd3000	 strb        r3, [sp]
  00164	e3a03001	 mov         r3, #1
  00168	e28d2000	 add         r2, sp, #0
  0016c	e3861064	 orr         r1, r6, #0x64
  00170	e1a00005	 mov         r0, r5
  00174	eb000000	 bl          TWLWriteRegs

; 1746 : 
; 1747 :     TWLWriteByteReg(hTwl, TWL_KEYP_IMR1, 0xFF);

  00178	e3a030ff	 mov         r3, #0xFF
  0017c	e5cd3000	 strb        r3, [sp]
  00180	e3a03001	 mov         r3, #1
  00184	e28d2000	 add         r2, sp, #0
  00188	e38610e4	 orr         r1, r6, #0xE4
  0018c	e1a00005	 mov         r0, r5
  00190	eb000000	 bl          TWLWriteRegs

; 1748 :     TWLWriteByteReg(hTwl, TWL_KEYP_IMR2, 0xFF);

  00194	e3a030ff	 mov         r3, #0xFF
  00198	e5cd3000	 strb        r3, [sp]
  0019c	e3a03001	 mov         r3, #1
  001a0	e28d2000	 add         r2, sp, #0
  001a4	e38610e6	 orr         r1, r6, #0xE6
  001a8	e1a00005	 mov         r0, r5
  001ac	eb000000	 bl          TWLWriteRegs
  001b0	e3a04801	 mov         r4, #1, 16

; 1749 : 
; 1750 :     TWLWriteByteReg(hTwl, TWL_GPIO_IMR1A, 0xFF);

  001b4	e3a0e0ff	 mov         lr, #0xFF
  001b8	e38410b4	 orr         r1, r4, #0xB4
  001bc	e3a03001	 mov         r3, #1
  001c0	e28d2000	 add         r2, sp, #0
  001c4	e1a00005	 mov         r0, r5
  001c8	e5cde000	 strb        lr, [sp]
  001cc	eb000000	 bl          TWLWriteRegs

; 1751 :     TWLWriteByteReg(hTwl, TWL_GPIO_IMR2A, 0xFF);

  001d0	e3a030ff	 mov         r3, #0xFF
  001d4	e5cd3000	 strb        r3, [sp]
  001d8	e3a03001	 mov         r3, #1
  001dc	e28d2000	 add         r2, sp, #0
  001e0	e38410b5	 orr         r1, r4, #0xB5
  001e4	e1a00005	 mov         r0, r5
  001e8	eb000000	 bl          TWLWriteRegs

; 1752 :     TWLWriteByteReg(hTwl, TWL_GPIO_IMR3A, 0xFF);

  001ec	e3a030ff	 mov         r3, #0xFF
  001f0	e5cd3000	 strb        r3, [sp]
  001f4	e3a03001	 mov         r3, #1
  001f8	e28d2000	 add         r2, sp, #0
  001fc	e38410b6	 orr         r1, r4, #0xB6
  00200	e1a00005	 mov         r0, r5
  00204	eb000000	 bl          TWLWriteRegs

; 1753 :     TWLWriteByteReg(hTwl, TWL_GPIO_IMR1B, 0xFF);

  00208	e3a030ff	 mov         r3, #0xFF
  0020c	e5cd3000	 strb        r3, [sp]
  00210	e3a03001	 mov         r3, #1
  00214	e28d2000	 add         r2, sp, #0
  00218	e38410ba	 orr         r1, r4, #0xBA
  0021c	e1a00005	 mov         r0, r5
  00220	eb000000	 bl          TWLWriteRegs

; 1754 :     TWLWriteByteReg(hTwl, TWL_GPIO_IMR2B, 0xFF);

  00224	e3a030ff	 mov         r3, #0xFF
  00228	e5cd3000	 strb        r3, [sp]
  0022c	e3a03001	 mov         r3, #1
  00230	e28d2000	 add         r2, sp, #0
  00234	e38410bb	 orr         r1, r4, #0xBB
  00238	e1a00005	 mov         r0, r5
  0023c	eb000000	 bl          TWLWriteRegs

; 1755 :     TWLWriteByteReg(hTwl, TWL_GPIO_IMR3B, 0xFF);

  00240	e3a030ff	 mov         r3, #0xFF
  00244	e5cd3000	 strb        r3, [sp]
  00248	e3a03001	 mov         r3, #1
  0024c	e28d2000	 add         r2, sp, #0
  00250	e38410bc	 orr         r1, r4, #0xBC
  00254	e1a00005	 mov         r0, r5
  00258	eb000000	 bl          TWLWriteRegs

; 1756 : 
; 1757 :     //  Ensure that that there are no pending interrupts
; 1758 :     //  on power and MADC
; 1759 :     TWLWriteByteReg(hTwl, TWL_PWR_ISR1, 0xFF);

  0025c	e3a030ff	 mov         r3, #0xFF
  00260	e5cd3000	 strb        r3, [sp]
  00264	e3a03001	 mov         r3, #1
  00268	e28d2000	 add         r2, sp, #0
  0026c	e387102e	 orr         r1, r7, #0x2E
  00270	e1a00005	 mov         r0, r5
  00274	eb000000	 bl          TWLWriteRegs

; 1760 :     TWLWriteByteReg(hTwl, TWL_PWR_ISR2, 0xFF);

  00278	e3a030ff	 mov         r3, #0xFF
  0027c	e5cd3000	 strb        r3, [sp]
  00280	e3a03001	 mov         r3, #1
  00284	e28d2000	 add         r2, sp, #0
  00288	e38b1030	 orr         r1, r11, #0x30
  0028c	e1a00005	 mov         r0, r5
  00290	eb000000	 bl          TWLWriteRegs

; 1761 :     TWLWriteByteReg(hTwl, TWL_MADC_ISR1, 0xFF);

  00294	e3a030ff	 mov         r3, #0xFF
  00298	e5cd3000	 strb        r3, [sp]
  0029c	e3a03001	 mov         r3, #1
  002a0	e28d2000	 add         r2, sp, #0
  002a4	e3861061	 orr         r1, r6, #0x61
  002a8	e1a00005	 mov         r0, r5
  002ac	eb000000	 bl          TWLWriteRegs

; 1762 :     TWLWriteByteReg(hTwl, TWL_MADC_ISR2, 0xFF);

  002b0	e3a030ff	 mov         r3, #0xFF
  002b4	e5cd3000	 strb        r3, [sp]
  002b8	e3a03001	 mov         r3, #1
  002bc	e28d2000	 add         r2, sp, #0
  002c0	e3861063	 orr         r1, r6, #0x63
  002c4	e1a00005	 mov         r0, r5
  002c8	eb000000	 bl          TWLWriteRegs

; 1763 :     
; 1764 :     // Resources in T2 are allocated to one or more of three groups.
; 1765 :     // Each group has a control input that tells causes the resources
; 1766 :     // in that group to transition between Sleep and Active states.
; 1767 :     // Groups and control signals are as follows:
; 1768 :     // P1 (Controlled by nSLEEP1) Intended for resources needed by the processor itself
; 1769 :     // P2 (Controlled by nSLEEP2) Intended for resources needed by the external modem (not used)
; 1770 :     // P3 (Controlled by CLKREQ) Intended for resources used by peripherals
; 1771 :     
; 1772 :     // EVM3530 has sys_clkreq connected to nSLEEP1, nSLEEP2 is floating, CLKREQ is pulled high and goes 
; 1773 :     // only to expansion connector.  So any resource allocated in group P2/P3 will never go to sleep 
; 1774 :     // mode when the processor drops sys_clkreq.  
; 1775 :     // Therefore all resources needed by the BSP need to be allocated to P1, only.
; 1776 :     // Change HFCLKOUT and CLKEN to P1 only instead of default P1/P2/P3 so it shuts off in suspend
; 1777 : 	TWLWriteByteReg(hTwl, TWL_HFCLKOUT_DEV_GRP, TWL_DEV_GROUP_P1);

  002cc	e3a03020	 mov         r3, #0x20
  002d0	e5cd3000	 strb        r3, [sp]
  002d4	e3a03001	 mov         r3, #1
  002d8	e28d2000	 add         r2, sp, #0
  002dc	e38b10e6	 orr         r1, r11, #0xE6
  002e0	e1a00005	 mov         r0, r5
  002e4	eb000000	 bl          TWLWriteRegs

; 1778 : 
; 1779 :     // unsecure registers
; 1780 :     TWLWriteByteReg(hTwl, TWL_PROTECT_KEY, 0xCE);

  002e8	e3a030ce	 mov         r3, #0xCE
  002ec	e5cd3000	 strb        r3, [sp]
  002f0	e3a03001	 mov         r3, #1
  002f4	e38b1044	 orr         r1, r11, #0x44
  002f8	e28d2000	 add         r2, sp, #0
  002fc	e1a00005	 mov         r0, r5
  00300	eb000000	 bl          TWLWriteRegs

; 1781 :     TWLWriteByteReg(hTwl, TWL_PROTECT_KEY, 0xEC);

  00304	e3a030ec	 mov         r3, #0xEC
  00308	e5cd3000	 strb        r3, [sp]
  0030c	e3a03001	 mov         r3, #1
  00310	e28d2000	 add         r2, sp, #0
  00314	e38b1044	 orr         r1, r11, #0x44
  00318	e1a00005	 mov         r0, r5
  0031c	eb000000	 bl          TWLWriteRegs

; 1782 : 
; 1783 :     //Set ACTIVE to SLEEP SEQ address
; 1784 :     TWLWriteByteReg(hTwl, TWL_SEQ_ADD_A2S, T2_A2S_SEQ_START_ADDR);

  00320	e3a0302b	 mov         r3, #0x2B
  00324	e5cd3000	 strb        r3, [sp]
  00328	e3a03001	 mov         r3, #1
  0032c	e28d2000	 add         r2, sp, #0
  00330	e38b1055	 orr         r1, r11, #0x55
  00334	e1a00005	 mov         r0, r5
  00338	eb000000	 bl          TWLWriteRegs

; 1785 : 
; 1786 :     //Set SLEEP to ACTIVE SEQ address for P1 and P2
; 1787 :     TWLWriteByteReg(hTwl, TWL_SEQ_ADD_S2A12, T2_S2A_SEQ_START_ADDR);

  0033c	e3a03030	 mov         r3, #0x30
  00340	e5cd3000	 strb        r3, [sp]
  00344	e3a03001	 mov         r3, #1
  00348	e28d2000	 add         r2, sp, #0
  0034c	e38b1056	 orr         r1, r11, #0x56
  00350	e1a00005	 mov         r0, r5
  00354	eb000000	 bl          TWLWriteRegs

; 1788 : 
; 1789 :     //Set SLEEP to ACTIVE SEQ address for P3
; 1790 :     TWLWriteByteReg(hTwl, TWL_SEQ_ADD_S2A3, T2_S2A_SEQ_START_ADDR);

  00358	e3a03030	 mov         r3, #0x30
  0035c	e5cd3000	 strb        r3, [sp]
  00360	e3a03001	 mov         r3, #1
  00364	e28d2000	 add         r2, sp, #0
  00368	e38b1057	 orr         r1, r11, #0x57
  0036c	e1a00005	 mov         r0, r5
  00370	eb000000	 bl          TWLWriteRegs

; 1791 : 
; 1792 :     // P1 LVL_WAKEUP should be on LEVEL
; 1793 :     TWLWriteByteReg(hTwl, TWL_P1_SW_EVENTS, 0x08);

  00374	e3a03008	 mov         r3, #8
  00378	e5cd3000	 strb        r3, [sp]
  0037c	e3a03001	 mov         r3, #1
  00380	e28d2000	 add         r2, sp, #0
  00384	e38b1046	 orr         r1, r11, #0x46
  00388	e1a00005	 mov         r0, r5
  0038c	eb000000	 bl          TWLWriteRegs

; 1794 : 
; 1795 :     // P2 LVL_WAKEUP should be on LEVEL
; 1796 :     TWLWriteByteReg(hTwl, TWL_P2_SW_EVENTS, 0x00); // 0x08

  00390	e3a03000	 mov         r3, #0
  00394	e5cd3000	 strb        r3, [sp]
  00398	e3a03001	 mov         r3, #1
  0039c	e28d2000	 add         r2, sp, #0
  003a0	e38b1047	 orr         r1, r11, #0x47
  003a4	e1a00005	 mov         r0, r5
  003a8	eb000000	 bl          TWLWriteRegs

; 1797 :     
; 1798 :     // P3 LVL_WAKEUP should be on LEVEL 
; 1799 :     TWLWriteByteReg(hTwl, TWL_P3_SW_EVENTS, 0x00); // 0x08

  003ac	e3a03000	 mov         r3, #0
  003b0	e5cd3000	 strb        r3, [sp]
  003b4	e3a03001	 mov         r3, #1
  003b8	e28d2000	 add         r2, sp, #0
  003bc	e38b1048	 orr         r1, r11, #0x48
  003c0	e1a00005	 mov         r0, r5
  003c4	eb000000	 bl          TWLWriteRegs

; 1800 : 
; 1801 :     // Should generate correct sequence for EVM, using new method
; 1802 :     // Program Active to Sleep sequence
; 1803 :     s_pT2SleepOffSeqWords[0].msgWord = TwlSingularMsgSequence(TWL_PROCESSOR_GRP1,
; 1804 : 														 TWL_VDD1_RES_ID,
; 1805 :                                                          TWL_RES_OFF,
; 1806 :                                                          4,
; 1807 :                                                          (T2_A2S_SEQ_START_ADDR+1));

  003c8	e59f62b0	 ldr         r6, [pc, #0x2B0]
  003cc	e59f32a8	 ldr         r3, [pc, #0x2A8]

; 1808 : 
; 1809 :     s_pT2SleepOffSeqWords[1].msgWord = TwlSingularMsgSequence(TWL_PROCESSOR_GRP1,
; 1810 : 														 TWL_VDD2_RES_ID,
; 1811 :                                                          TWL_RES_OFF,
; 1812 :                                                          2,
; 1813 :                                                          (T2_A2S_SEQ_START_ADDR+2));
; 1814 : 
; 1815 :     s_pT2SleepOffSeqWords[2].msgWord = TwlSingularMsgSequence(TWL_PROCESSOR_GRP1,
; 1816 : 														 TWL_VPLL1_RES_ID,
; 1817 :                                                          TWL_RES_OFF,
; 1818 :                                                          3,
; 1819 :                                                          (T2_A2S_SEQ_START_ADDR+3));

  003d0	e59f22a0	 ldr         r2, [pc, #0x2A0]

; 1820 : 
; 1821 :     s_pT2SleepOffSeqWords[3].msgWord = TwlSingularMsgSequence(TWL_PROCESSOR_GRP1,
; 1822 : 														 TWL_HFCLKOUT_RES_ID,
; 1823 :                                                          TWL_RES_OFF,
; 1824 :                                                          3,
; 1825 :                                                          0x3F);

  003d4	e59f1298	 ldr         r1, [pc, #0x298]
  003d8	e58636a0	 str         r3, [r6, #0x6A0]
  003dc	e59f328c	 ldr         r3, [pc, #0x28C]

; 1826 : 
; 1827 : 	// Set sequence start memory address for Active to Sleep
; 1828 : 	addr = T2_A2S_SEQ_START_ADDR << 2;
; 1829 : 
; 1830 : 	// write Active to Sleep sequence to memory
; 1831 : 	OALMSG(1, (L"+OAL: rite Active to Sleep sequence to memory 0x%x\r\n",addr));

  003e0	e59f0284	 ldr         r0, [pc, #0x284]
  003e4	e58636a4	 str         r3, [r6, #0x6A4]
  003e8	e58626a8	 str         r2, [r6, #0x6A8]
  003ec	e58616ac	 str         r1, [r6, #0x6AC]
  003f0	e3a010ac	 mov         r1, #0xAC
  003f4	e3a0a0ac	 mov         r10, #0xAC
  003f8	eb000000	 bl          NKDbgPrintfW

; 1832 : 	for (i = 0; i < T2_SLEEPOFF_COUNT; ++i)

  003fc	e3a04000	 mov         r4, #0
  00400	e2867e6a	 add         r7, r6, #0x6A, 28
  00404		 |$LL18@InitT2Powe|

; 1833 : 	{
; 1834 : 		OALMSG(1, (L"+OAL: %d - 0x%x\r\n",i,s_pT2SleepOffSeqWords[i].msgWord));

  00404	e5972000	 ldr         r2, [r7]
  00408	e59f0224	 ldr         r0, [pc, #0x224]
  0040c	e1a01004	 mov         r1, r4
  00410	eb000000	 bl          NKDbgPrintfW
  00414	e1a08007	 mov         r8, r7
  00418	e3a09004	 mov         r9, #4
  0041c		 |$LL15@InitT2Powe|

; 1835 : 		for (j = 0; j < 4; ++j)
; 1836 : 		{			
; 1837 : 			TWLWriteByteReg(hTwl, TWL_MEMORY_ADDRESS,  addr++);

  0041c	e3a03001	 mov         r3, #1
  00420	e28d2000	 add         r2, sp, #0
  00424	e38b1059	 orr         r1, r11, #0x59
  00428	e1a00005	 mov         r0, r5
  0042c	e5cda000	 strb        r10, [sp]
  00430	eb000000	 bl          TWLWriteRegs

; 1838 : 			TWLWriteByteReg(hTwl, TWL_MEMORY_DATA, s_pT2SleepOffSeqWords[i].msgByte[3-j]);

  00434	e5d82003	 ldrb        r2, [r8, #3]
  00438	e28ae001	 add         lr, r10, #1
  0043c	e3a03001	 mov         r3, #1
  00440	e5cd2000	 strb        r2, [sp]
  00444	e28d2000	 add         r2, sp, #0
  00448	e38b105a	 orr         r1, r11, #0x5A
  0044c	e1a00005	 mov         r0, r5
  00450	e20ea0ff	 and         r10, lr, #0xFF
  00454	eb000000	 bl          TWLWriteRegs
  00458	e2488001	 sub         r8, r8, #1
  0045c	e2599001	 subs        r9, r9, #1
  00460	1affffed	 bne         |$LL15@InitT2Powe|
  00464	e2844001	 add         r4, r4, #1
  00468	e3540004	 cmp         r4, #4
  0046c	e2877004	 add         r7, r7, #4
  00470	baffffe3	 blt         |$LL18@InitT2Powe|

; 1839 : 		}
; 1840 : 	}
; 1841 : 
; 1842 :     s_pT2WakeOnSeqWords[0].msgWord = TwlSingularMsgSequence(TWL_PROCESSOR_GRP1,
; 1843 : 														 TWL_VPLL1_RES_ID,
; 1844 :                                                          TWL_RES_ACTIVE,
; 1845 :                                                          0x30,
; 1846 :                                                          (T2_S2A_SEQ_START_ADDR+1));

  00474	e59f41ec	 ldr         r4, [pc, #0x1EC]
  00478	e59f31e4	 ldr         r3, [pc, #0x1E4]

; 1847 : 
; 1848 :     s_pT2WakeOnSeqWords[1].msgWord = TwlSingularMsgSequence(TWL_PROCESSOR_GRP1,
; 1849 : 														 TWL_VDD1_RES_ID,
; 1850 :                                                          TWL_RES_ACTIVE,
; 1851 :                                                          0x30,
; 1852 :                                                          (T2_S2A_SEQ_START_ADDR+2));

  0047c	e59f21dc	 ldr         r2, [pc, #0x1DC]

; 1853 : 
; 1854 :     s_pT2WakeOnSeqWords[2].msgWord = TwlSingularMsgSequence(TWL_PROCESSOR_GRP1,
; 1855 : 														 TWL_VDD2_RES_ID,
; 1856 :                                                          TWL_RES_ACTIVE,
; 1857 :                                                          0x37,
; 1858 :                                                          (T2_S2A_SEQ_START_ADDR+3));

  00480	e59f11d4	 ldr         r1, [pc, #0x1D4]

; 1859 : 
; 1860 :     s_pT2WakeOnSeqWords[3].msgWord = TwlSingularMsgSequence(TWL_PROCESSOR_GRP1,
; 1861 : 														 TWL_HFCLKOUT_RES_ID,
; 1862 :                                                          TWL_RES_ACTIVE,
; 1863 :                                                          3,
; 1864 :                                                          0x3F);

  00484	e59fe1cc	 ldr         lr, [pc, #0x1CC]

; 1865 : 
; 1866 :     // Set sequence start memory address for Sleep to Active
; 1867 : 	addr = T2_S2A_SEQ_START_ADDR << 2;
; 1868 : 
; 1869 : 	// write Active to Sleep sequence to memory
; 1870 : 	OALMSG(1, (L"+OAL: write Sleep to Active sequence to memory 0x%x\r\n",addr));

  00488	e59f01c4	 ldr         r0, [pc, #0x1C4]
  0048c	e5843000	 str         r3, [r4]
  00490	e5842004	 str         r2, [r4, #4]
  00494	e5841008	 str         r1, [r4, #8]
  00498	e3a010c0	 mov         r1, #0xC0
  0049c	e584e00c	 str         lr, [r4, #0xC]
  004a0	e3a090c0	 mov         r9, #0xC0
  004a4	eb000000	 bl          NKDbgPrintfW

; 1871 : 	for (i = 0; i < T2_WAKEON_COUNT; ++i)

  004a8	e3a07000	 mov         r7, #0
  004ac		 |$LL12@InitT2Powe|

; 1872 : 	{
; 1873 : 		OALMSG(1, (L"+OAL: %d - 0x%x\r\n",i,s_pT2WakeOnSeqWords[i].msgWord));

  004ac	e5942000	 ldr         r2, [r4]
  004b0	e59f017c	 ldr         r0, [pc, #0x17C]
  004b4	e1a01007	 mov         r1, r7
  004b8	eb000000	 bl          NKDbgPrintfW
  004bc	e1a08004	 mov         r8, r4
  004c0	e3a0a004	 mov         r10, #4
  004c4		 |$LL9@InitT2Powe|

; 1874 : 		for (j = 0; j < 4; ++j)
; 1875 : 		{
; 1876 : 			TWLWriteByteReg(hTwl, TWL_MEMORY_ADDRESS,  addr++);

  004c4	e3a03001	 mov         r3, #1
  004c8	e28d2000	 add         r2, sp, #0
  004cc	e38b1059	 orr         r1, r11, #0x59
  004d0	e1a00005	 mov         r0, r5
  004d4	e5cd9000	 strb        r9, [sp]
  004d8	eb000000	 bl          TWLWriteRegs

; 1877 : 			TWLWriteByteReg(hTwl, TWL_MEMORY_DATA, s_pT2WakeOnSeqWords[i].msgByte[3-j]);

  004dc	e5d82003	 ldrb        r2, [r8, #3]
  004e0	e289e001	 add         lr, r9, #1
  004e4	e3a03001	 mov         r3, #1
  004e8	e5cd2000	 strb        r2, [sp]
  004ec	e28d2000	 add         r2, sp, #0
  004f0	e38b105a	 orr         r1, r11, #0x5A
  004f4	e1a00005	 mov         r0, r5
  004f8	e20e90ff	 and         r9, lr, #0xFF
  004fc	eb000000	 bl          TWLWriteRegs
  00500	e2488001	 sub         r8, r8, #1
  00504	e25aa001	 subs        r10, r10, #1
  00508	1affffed	 bne         |$LL9@InitT2Powe|
  0050c	e2877001	 add         r7, r7, #1
  00510	e3570004	 cmp         r7, #4
  00514	e2844004	 add         r4, r4, #4
  00518	baffffe3	 blt         |$LL12@InitT2Powe|
  0051c	e3a03803	 mov         r3, #3, 16

; 1878 : 		}
; 1879 : 	}
; 1880 : 
; 1881 :     // Program Warm Reset Sequence
; 1882 :     //Set WARM RESET SEQ address for WARM RESET
; 1883 :     TWLWriteByteReg(hTwl, TWL_SEQ_ADD_WARM, T2_WARMRESET_SEQ_START_ADDR);

  00520	e3831058	 orr         r1, r3, #0x58
  00524	e3a0e038	 mov         lr, #0x38
  00528	e3a03001	 mov         r3, #1
  0052c	e28d2000	 add         r2, sp, #0
  00530	e1a00005	 mov         r0, r5
  00534	e5cde000	 strb        lr, [sp]
  00538	eb000000	 bl          TWLWriteRegs

; 1884 : 
; 1885 :     s_pT2WarmResetSeqWords[0].msgWord = TwlSingularMsgSequence(TWL_PROCESSOR_GRP_NULL,
; 1886 :                                                             TWL_TRITON_RESET_RES_ID,
; 1887 :                                                             TWL_RES_OFF,
; 1888 :                                                             0x02,
; 1889 :                                                             (T2_WARMRESET_SEQ_START_ADDR+1));

  0053c	e59f310c	 ldr         r3, [pc, #0x10C]

; 1890 : 
; 1891 :     s_pT2WarmResetSeqWords[1].msgWord = TwlSingularMsgSequence(TWL_PROCESSOR_GRP1,
; 1892 :                                                             TWL_VDD1_RES_ID,
; 1893 :                                                             TWL_RES_WRST,
; 1894 :                                                             0x0E,
; 1895 :                                                             (T2_WARMRESET_SEQ_START_ADDR+2));

  00540	e59f2104	 ldr         r2, [pc, #0x104]

; 1896 : 
; 1897 :     s_pT2WarmResetSeqWords[2].msgWord = TwlSingularMsgSequence(TWL_PROCESSOR_GRP1,
; 1898 :                                                             TWL_VDD2_RES_ID,
; 1899 :                                                             TWL_RES_WRST,
; 1900 :                                                             0x0E,
; 1901 :                                                             (T2_WARMRESET_SEQ_START_ADDR+3));

  00544	e59f10fc	 ldr         r1, [pc, #0xFC]

; 1902 : 
; 1903 :     s_pT2WarmResetSeqWords[3].msgWord = TwlSingularMsgSequence(TWL_PROCESSOR_GRP1,
; 1904 :                                                             TWL_VPLL1_RES_ID,
; 1905 :                                                             TWL_RES_WRST,
; 1906 :                                                             0x60,
; 1907 :                                                             (T2_WARMRESET_SEQ_START_ADDR+4));

  00548	e59f40f4	 ldr         r4, [pc, #0xF4]

; 1908 : 
; 1909 :     s_pT2WarmResetSeqWords[4].msgWord = TwlSingularMsgSequence(TWL_PROCESSOR_GRP1,
; 1910 :                                                             TWL_32KCLK_OUT_RES_ID,
; 1911 :                                                             TWL_RES_ACTIVE,
; 1912 :                                                             0x02,
; 1913 :                                                             (T2_WARMRESET_SEQ_START_ADDR+5));                                                            	                                                           

  0054c	e59fe0ec	 ldr         lr, [pc, #0xEC]
  00550	e5863000	 str         r3, [r6]

; 1914 : 
; 1915 :     s_pT2WarmResetSeqWords[5].msgWord = TwlSingularMsgSequence(TWL_PROCESSOR_GRP_NULL,
; 1916 :                                                             TWL_TRITON_RESET_RES_ID,
; 1917 :                                                             TWL_RES_ACTIVE,
; 1918 :                                                             0x02,
; 1919 :                                                             0x3F);

  00554	e59f30e0	 ldr         r3, [pc, #0xE0]

; 1920 : 
; 1921 :     // Set sequence start memory address for WARM RESET
; 1922 : 	addr = T2_WARMRESET_SEQ_START_ADDR << 2;
; 1923 : 
; 1924 :     // write WARM RESET SEQ to memory
; 1925 :     OALMSG(1, (L"+OAL: write WARM RESET SEQ to memory 0x%x\r\n",addr));

  00558	e59f00d8	 ldr         r0, [pc, #0xD8]
  0055c	e5862004	 str         r2, [r6, #4]
  00560	e5861008	 str         r1, [r6, #8]
  00564	e586400c	 str         r4, [r6, #0xC]
  00568	e586e010	 str         lr, [r6, #0x10]
  0056c	e3a010e0	 mov         r1, #0xE0
  00570	e5863014	 str         r3, [r6, #0x14]
  00574	e3a080e0	 mov         r8, #0xE0
  00578	eb000000	 bl          NKDbgPrintfW

; 1926 : 	for (i = 0; i < T2_WARMRESET_COUNT; ++i)

  0057c	e3a04000	 mov         r4, #0
  00580		 |$LL6@InitT2Powe|

; 1927 : 	{
; 1928 : 		OALMSG(1, (L"+OAL: %d - 0x%x\r\n",i,s_pT2WarmResetSeqWords[i].msgWord));

  00580	e5962000	 ldr         r2, [r6]
  00584	e59f00a8	 ldr         r0, [pc, #0xA8]
  00588	e1a01004	 mov         r1, r4
  0058c	eb000000	 bl          NKDbgPrintfW
  00590	e1a07006	 mov         r7, r6
  00594	e3a09004	 mov         r9, #4
  00598		 |$LL3@InitT2Powe|

; 1929 : 		for (j = 0; j < 4; ++j)
; 1930 : 		{
; 1931 : 			TWLWriteByteReg(hTwl, TWL_MEMORY_ADDRESS,  addr++);

  00598	e3a03001	 mov         r3, #1
  0059c	e28d2000	 add         r2, sp, #0
  005a0	e38b1059	 orr         r1, r11, #0x59
  005a4	e1a00005	 mov         r0, r5
  005a8	e5cd8000	 strb        r8, [sp]
  005ac	eb000000	 bl          TWLWriteRegs

; 1932 : 			TWLWriteByteReg(hTwl, TWL_MEMORY_DATA, s_pT2WarmResetSeqWords[i].msgByte[3-j]);

  005b0	e5d72003	 ldrb        r2, [r7, #3]
  005b4	e288e001	 add         lr, r8, #1
  005b8	e3a03001	 mov         r3, #1
  005bc	e5cd2000	 strb        r2, [sp]
  005c0	e28d2000	 add         r2, sp, #0
  005c4	e38b105a	 orr         r1, r11, #0x5A
  005c8	e1a00005	 mov         r0, r5
  005cc	e20e80ff	 and         r8, lr, #0xFF
  005d0	eb000000	 bl          TWLWriteRegs
  005d4	e2477001	 sub         r7, r7, #1
  005d8	e2599001	 subs        r9, r9, #1
  005dc	1affffed	 bne         |$LL3@InitT2Powe|
  005e0	e2844001	 add         r4, r4, #1
  005e4	e3540006	 cmp         r4, #6
  005e8	e2866004	 add         r6, r6, #4
  005ec	baffffe3	 blt         |$LL6@InitT2Powe|

; 1933 : 		}
; 1934 : 	}
; 1935 : 
; 1936 :     // secure registers
; 1937 :     TWLWriteByteReg(hTwl, TWL_PROTECT_KEY, 0x00);

  005f0	e3a03000	 mov         r3, #0
  005f4	e5cd3000	 strb        r3, [sp]
  005f8	e3a03001	 mov         r3, #1
  005fc	e28d2000	 add         r2, sp, #0
  00600	e38b1044	 orr         r1, r11, #0x44
  00604	e1a00005	 mov         r0, r5
  00608	eb000000	 bl          TWLWriteRegs

; 1938 :     
; 1939 :     TwlDump(hTwl);

  0060c	e1a00005	 mov         r0, r5
  00610	eb000000	 bl          TwlDump

; 1940 :     
; 1941 :     TWLClose(hTwl);

  00614	e1a00005	 mov         r0, r5
  00618	eb000000	 bl          TWLClose

; 1942 :     OALMSG(1, (L"-OAL: InitT2PowerSequence\r\n"));

  0061c	e59f000c	 ldr         r0, [pc, #0xC]
  00620	eb000000	 bl          NKDbgPrintfW
  00624		 |$LN20@InitT2Powe|

; 1943 : }

  00624	e28dd004	 add         sp, sp, #4
  00628	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  0062c	e12fff1e	 bx          lr
  00630		 |$LN119@InitT2Powe|
  00630		 |$LN120@InitT2Powe|
  00630	00000000	 DCD         |??_C@_1DI@GEPKCEFA@?$AA?9?$AAO?$AAA?$AAL?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAT?$AA2?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAe?$AAq?$AAu?$AAe?$AAn?$AAc?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  00634		 |$LN121@InitT2Powe|
  00634	00000000	 DCD         |??_C@_1CE@NAGNGIJH@?$AA?$CL?$AAO?$AAA?$AAL?$AA?3?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?9?$AA?5?$AA0?$AAx?$AA?$CF?$AAx?$AA?$AN?$AA?6?$AA?$AA@|
  00638		 |$LN122@InitT2Powe|
  00638	00000000	 DCD         |??_C@_1FI@HMIHMJMI@?$AA?$CL?$AAO?$AAA?$AAL?$AA?3?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAe?$AA?5?$AAW?$AAA?$AAR?$AAM?$AA?5?$AAR?$AAE?$AAS?$AAE?$AAT?$AA?5?$AAS?$AAE?$AAQ?$AA?5?$AAt?$AAo?$AA?5?$AAm?$AAe@|
  0063c		 |$LN123@InitT2Powe|
  0063c	01be023f	 DCD         0x1be023f
  00640		 |$LN124@InitT2Powe|
  00640	21ae023d	 DCD         0x21ae023d
  00644		 |$LN125@InitT2Powe|
  00644	207f603c	 DCD         0x207f603c
  00648		 |$LN126@InitT2Powe|
  00648	210f0e3b	 DCD         0x210f0e3b
  0064c		 |$LN127@InitT2Powe|
  0064c	20ff0e3a	 DCD         0x20ff0e3a
  00650		 |$LN128@InitT2Powe|
  00650	01b00239	 DCD         0x1b00239
  00654		 |$LN129@InitT2Powe|
  00654	00000000	 DCD         |??_C@_1GM@MPAJFJKN@?$AA?$CL?$AAO?$AAA?$AAL?$AA?3?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAe?$AA?5?$AAS?$AAl?$AAe?$AAe?$AAp?$AA?5?$AAt?$AAo?$AA?5?$AAA?$AAc?$AAt?$AAi?$AAv?$AAe?$AA?5?$AAs?$AAe?$AAq?$AAu@|
  00658		 |$LN130@InitT2Powe|
  00658	219e033f	 DCD         0x219e033f
  0065c		 |$LN131@InitT2Powe|
  0065c	210e3733	 DCD         0x210e3733
  00660		 |$LN132@InitT2Powe|
  00660	20fe3032	 DCD         0x20fe3032
  00664		 |$LN133@InitT2Powe|
  00664	207e3031	 DCD         0x207e3031
  00668		 |$LN134@InitT2Powe|
  00668	00000000	 DCD         |s_pT2WakeOnSeqWords|
  0066c		 |$LN135@InitT2Powe|
  0066c	00000000	 DCD         |??_C@_1GK@DPCKBHCM@?$AA?$CL?$AAO?$AAA?$AAL?$AA?3?$AA?5?$AAr?$AAi?$AAt?$AAe?$AA?5?$AAA?$AAc?$AAt?$AAi?$AAv?$AAe?$AA?5?$AAt?$AAo?$AA?5?$AAS?$AAl?$AAe?$AAe?$AAp?$AA?5?$AAs?$AAe?$AAq?$AAu?$AAe@|
  00670		 |$LN136@InitT2Powe|
  00670	2100022d	 DCD         0x2100022d
  00674		 |$LN137@InitT2Powe|
  00674	2190033f	 DCD         0x2190033f
  00678		 |$LN138@InitT2Powe|
  00678	2070032e	 DCD         0x2070032e
  0067c		 |$LN139@InitT2Powe|
  0067c	20f0042c	 DCD         0x20f0042c
  00680		 |$LN140@InitT2Powe|
  00680	00000000	 DCD         |s_pT2WarmResetSeqWords|
  00684		 |$LN141@InitT2Powe|
  00684	00000000	 DCD         |??_C@_1DI@CJIEEMKC@?$AA?$CL?$AAO?$AAA?$AAL?$AA?3?$AA?5?$AAI?$AAn?$AAi?$AAt?$AAT?$AA2?$AAP?$AAo?$AAw?$AAe?$AAr?$AAS?$AAe?$AAq?$AAu?$AAe?$AAn?$AAc?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  00688		 |$M50631|

			 ENDP  ; |InitT2PowerSequence|

	EXPORT	|OALPowerVFP|

  00000			 AREA	 |.pdata|, PDATA
|$T50665| DCD	|$LN5@OALPowerVF|
	DCD	0x40000200
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALPowerVFP| PROC

; 2341 : {

  00000		 |$LN5@OALPowerVF|
  00000		 |$M50662|

; 2342 : #if 1
; 2343 :     UNREFERENCED_PARAMETER(dwCommand);
; 2344 : #else
; 2345 :     switch (dwCommand)
; 2346 :     {
; 2347 :     case VFP_CONTROL_POWER_ON:
; 2348 :         PrcmDomainSetPowerState(POWERDOMAIN_NEON, POWERSTATE_ON, LOGICRETSTATE);
; 2349 :         return TRUE;
; 2350 : 
; 2351 :     case VFP_CONTROL_POWER_OFF:
; 2352 :         PrcmDomainSetPowerState(POWERDOMAIN_NEON, POWERSTATE_OFF, LOGICRETSTATE);
; 2353 :         return TRUE;
; 2354 : 
; 2355 :     case VFP_CONTROL_POWER_RETENTION:
; 2356 :         PrcmDomainSetPowerState(POWERDOMAIN_NEON, POWERSTATE_RETENTION, LOGICRETSTATE);
; 2357 :         return TRUE;
; 2358 :     }
; 2359 : #endif
; 2360 :     return FALSE;

  00000	e3a00000	 mov         r0, #0

; 2361 : }

  00004	e12fff1e	 bx          lr
  00008		 |$M50663|

			 ENDP  ; |OALPowerVFP|

	EXPORT	|OALPrcmIntrHandler|
	EXPORT	|??_C@_1CM@JBCMAKOK@?$AA?9?$AAO?$AAA?$AAL?$AAP?$AAr?$AAc?$AAm?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@GNNMJLKG@?$AA?$CL?$AAO?$AAA?$AAL?$AAP?$AAr?$AAc?$AAm?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|PrcmInterruptProcess|

  00000			 AREA	 |.pdata|, PDATA
|$T50679| DCD	|$LN9@OALPrcmInt|
	DCD	0x40001401

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@JBCMAKOK@?$AA?9?$AAO?$AAA?$AAL?$AAP?$AAr?$AAc?$AAm?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "P", 0x0, "r", 0x0, "c"
	DCB	0x0, "m", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@GNNMJLKG@?$AA?$CL?$AAO?$AAA?$AAL?$AAP?$AAr?$AAc?$AAm?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "P", 0x0, "r", 0x0, "c"
	DCB	0x0, "m", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "H"
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, "r"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALPrcmIntrHandler| PROC

; 2372 : {

  00000		 |$LN9@OALPrcmInt|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M50676|

; 2373 :     const UINT clear_mask = PRM_IRQENABLE_VP1_NOSMPSACK_EN |
; 2374 :                             PRM_IRQENABLE_VP2_NOSMPSACK_EN |
; 2375 :                             PRM_IRQENABLE_VC_SAERR_EN |
; 2376 :                             PRM_IRQENABLE_VC_RAERR_EN |
; 2377 :                             PRM_IRQENABLE_VC_TIMEOUTERR_EN |
; 2378 :                             PRM_IRQENABLE_WKUP_EN |
; 2379 :                             PRM_IRQENABLE_TRANSITION_EN |
; 2380 :                             PRM_IRQENABLE_MPU_DPLL_RECAL_EN |
; 2381 :                             PRM_IRQENABLE_CORE_DPLL_RECAL_EN |
; 2382 :                             PRM_IRQENABLE_VP1_OPPCHANGEDONE_EN |
; 2383 :                             PRM_IRQENABLE_VP2_OPPCHANGEDONE_EN |
; 2384 :                             PRM_IRQENABLE_IO_EN ;
; 2385 :     UINT sysIntr = SYSINTR_NOP;
; 2386 : 
; 2387 :     OALMSG(OAL_FUNC, (L"+OALPrcmIntrHandler\r\n"));

  00004	e59f4040	 ldr         r4, [pc, #0x40]
  00008	e5943440	 ldr         r3, [r4, #0x440]
  0000c	e3130004	 tst         r3, #4
  00010	159f0030	 ldrne       r0, [pc, #0x30]
  00014	1b000000	 blne        NKDbgPrintfW

; 2388 : 
; 2389 :     // get cause of interrupt
; 2390 :     sysIntr = PrcmInterruptProcess(clear_mask);

  00018	e59f0024	 ldr         r0, [pc, #0x24]
  0001c	eb000000	 bl          PrcmInterruptProcess

; 2391 : 
; 2392 :     OALMSG(OAL_FUNC, (L"-OALPrcmIntrHandler\r\n"));

  00020	e5943440	 ldr         r3, [r4, #0x440]
  00024	e1a04000	 mov         r4, r0
  00028	e3130004	 tst         r3, #4
  0002c	159f000c	 ldrne       r0, [pc, #0xC]
  00030	1b000000	 blne        NKDbgPrintfW

; 2393 :     return sysIntr;
; 2394 : }

  00034	e1a00004	 mov         r0, r4
  00038	e8bd4010	 ldmia       sp!, {r4, lr}
  0003c	e12fff1e	 bx          lr
  00040		 |$LN10@OALPrcmInt|
  00040		 |$LN11@OALPrcmInt|
  00040	00000000	 DCD         |??_C@_1CM@JBCMAKOK@?$AA?9?$AAO?$AAA?$AAL?$AAP?$AAr?$AAc?$AAm?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  00044		 |$LN12@OALPrcmInt|
  00044	01c926b1	 DCD         0x1c926b1
  00048		 |$LN13@OALPrcmInt|
  00048	00000000	 DCD         |??_C@_1CM@GNNMJLKG@?$AA?$CL?$AAO?$AAA?$AAL?$AAP?$AAr?$AAc?$AAm?$AAI?$AAn?$AAt?$AAr?$AAH?$AAa?$AAn?$AAd?$AAl?$AAe?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  0004c		 |$LN14@OALPrcmInt|
  0004c	00000000	 DCD         |dpCurSettings|
  00050		 |$M50677|

			 ENDP  ; |OALPrcmIntrHandler|

	EXPORT	|OALSmartReflex1Intr|
	EXPORT	|??_C@_1CO@OILFLAEL@?$AA?9?$AAO?$AAA?$AAL?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA1?$AAI?$AAn?$AAt?$AAr?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@BPEDMOIJ@?$AAO?$AAA?$AAL?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA1?$AAI?$AAn?$AAt?$AAr?$AA?5?$AAi?$AAn?$AAt?$AAr?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$DN?$AA0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@DDHBOPGA@?$AA?$CL?$AAO?$AAA?$AAL?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA1?$AAI?$AAn?$AAt?$AAr?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|SmartReflex_funcs|

  00000			 AREA	 |.pdata|, PDATA
|$T50698| DCD	|$LN9@OALSmartRe|
	DCD	0x40001d01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@OILFLAEL@?$AA?9?$AAO?$AAA?$AAL?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA1?$AAI?$AAn?$AAt?$AAr?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "S", 0x0, "m", 0x0, "a"
	DCB	0x0, "r", 0x0, "t", 0x0, "R", 0x0, "e", 0x0, "f", 0x0, "l"
	DCB	0x0, "e", 0x0, "x", 0x0, "1", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@BPEDMOIJ@?$AAO?$AAA?$AAL?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA1?$AAI?$AAn?$AAt?$AAr?$AA?5?$AAi?$AAn?$AAt?$AAr?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$DN?$AA0@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "S", 0x0, "m", 0x0, "a", 0x0, "r"
	DCB	0x0, "t", 0x0, "R", 0x0, "e", 0x0, "f", 0x0, "l", 0x0, "e"
	DCB	0x0, "x", 0x0, "1", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, "="
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@DDHBOPGA@?$AA?$CL?$AAO?$AAA?$AAL?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA1?$AAI?$AAn?$AAt?$AAr?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "S", 0x0, "m", 0x0, "a"
	DCB	0x0, "r", 0x0, "t", 0x0, "R", 0x0, "e", 0x0, "f", 0x0, "l"
	DCB	0x0, "e", 0x0, "x", 0x0, "1", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALSmartReflex1Intr| PROC

; 2406 : {

  00000		 |$LN9@OALSmartRe|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M50695|

; 2407 :     UINT intrStatus;
; 2408 :     OALMSG(OAL_FUNC, (L"+OALSmartReflex1Intr\r\n"));

  00004	e59f4064	 ldr         r4, [pc, #0x64]
  00008	e5943440	 ldr         r3, [r4, #0x440]
  0000c	e3130004	 tst         r3, #4
  00010	159f0054	 ldrne       r0, [pc, #0x54]
  00014	1b000000	 blne        NKDbgPrintfW

; 2409 : 
; 2410 :     // get cause of interrupt
; 2411 :     intrStatus = SmartReflex_funcs->ClearInterruptStatus(kSmartReflex_Channel1,
; 2412 :                     ERRCONFIG_INTR_SR_MASK
; 2413 :                     );

  00018	e59f3048	 ldr         r3, [pc, #0x48]
  0001c	e3a02455	 mov         r2, #0x55, 8
  00020	e3821501	 orr         r1, r2, #1, 10
  00024	e5933000	 ldr         r3, [r3]
  00028	e3a00000	 mov         r0, #0
  0002c	e593302c	 ldr         r3, [r3, #0x2C]
  00030	e1a0e00f	 mov         lr, pc
  00034	e12fff13	 bx          r3
  00038	e1a01000	 mov         r1, r0

; 2414 :     
; 2415 :     OALMSG(TRUE, (L"OALSmartReflex1Intr intrStatus=0x%08X\r\n", intrStatus));

  0003c	e59f0020	 ldr         r0, [pc, #0x20]
  00040	eb000000	 bl          NKDbgPrintfW

; 2416 :     OALMSG(OAL_FUNC, (L"-OALSmartReflex1Intr\r\n"));

  00044	e5943440	 ldr         r3, [r4, #0x440]
  00048	e3130004	 tst         r3, #4
  0004c	159f000c	 ldrne       r0, [pc, #0xC]
  00050	1b000000	 blne        NKDbgPrintfW

; 2417 :     return SYSINTR_NOP;

  00054	e3a00000	 mov         r0, #0

; 2418 : }

  00058	e8bd4010	 ldmia       sp!, {r4, lr}
  0005c	e12fff1e	 bx          lr
  00060		 |$LN10@OALSmartRe|
  00060		 |$LN11@OALSmartRe|
  00060	00000000	 DCD         |??_C@_1CO@OILFLAEL@?$AA?9?$AAO?$AAA?$AAL?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA1?$AAI?$AAn?$AAt?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  00064		 |$LN12@OALSmartRe|
  00064	00000000	 DCD         |??_C@_1FA@BPEDMOIJ@?$AAO?$AAA?$AAL?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA1?$AAI?$AAn?$AAt?$AAr?$AA?5?$AAi?$AAn?$AAt?$AAr?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$DN?$AA0@|
  00068		 |$LN13@OALSmartRe|
  00068	00000000	 DCD         |SmartReflex_funcs|
  0006c		 |$LN14@OALSmartRe|
  0006c	00000000	 DCD         |??_C@_1CO@DDHBOPGA@?$AA?$CL?$AAO?$AAA?$AAL?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA1?$AAI?$AAn?$AAt?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  00070		 |$LN15@OALSmartRe|
  00070	00000000	 DCD         |dpCurSettings|
  00074		 |$M50696|

			 ENDP  ; |OALSmartReflex1Intr|

	EXPORT	|OALSmartReflex2Intr|
	EXPORT	|??_C@_1CO@MBHNAELJ@?$AA?9?$AAO?$AAA?$AAL?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA2?$AAI?$AAn?$AAt?$AAr?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@KFBGMKJO@?$AAO?$AAA?$AAL?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA2?$AAI?$AAn?$AAt?$AAr?$AA?5?$AAi?$AAn?$AAt?$AAr?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$DN?$AA0@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@BKLJFLJC@?$AA?$CL?$AAO?$AAA?$AAL?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA2?$AAI?$AAn?$AAt?$AAr?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T50718| DCD	|$LN9@OALSmartRe@2|
	DCD	0x40001d01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@MBHNAELJ@?$AA?9?$AAO?$AAA?$AAL?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA2?$AAI?$AAn?$AAt?$AAr?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "S", 0x0, "m", 0x0, "a"
	DCB	0x0, "r", 0x0, "t", 0x0, "R", 0x0, "e", 0x0, "f", 0x0, "l"
	DCB	0x0, "e", 0x0, "x", 0x0, "2", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@KFBGMKJO@?$AAO?$AAA?$AAL?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA2?$AAI?$AAn?$AAt?$AAr?$AA?5?$AAi?$AAn?$AAt?$AAr?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$DN?$AA0@| DCB "O"
	DCB	0x0, "A", 0x0, "L", 0x0, "S", 0x0, "m", 0x0, "a", 0x0, "r"
	DCB	0x0, "t", 0x0, "R", 0x0, "e", 0x0, "f", 0x0, "l", 0x0, "e"
	DCB	0x0, "x", 0x0, "2", 0x0, "I", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "u", 0x0, "s", 0x0, "="
	DCB	0x0, "0", 0x0, "x", 0x0, "%", 0x0, "0", 0x0, "8", 0x0, "X"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@BKLJFLJC@?$AA?$CL?$AAO?$AAA?$AAL?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA2?$AAI?$AAn?$AAt?$AAr?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "S", 0x0, "m", 0x0, "a"
	DCB	0x0, "r", 0x0, "t", 0x0, "R", 0x0, "e", 0x0, "f", 0x0, "l"
	DCB	0x0, "e", 0x0, "x", 0x0, "2", 0x0, "I", 0x0, "n", 0x0, "t"
	DCB	0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALSmartReflex2Intr| PROC

; 2430 : {

  00000		 |$LN9@OALSmartRe@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M50715|

; 2431 :     UINT intrStatus;
; 2432 :     OALMSG(OAL_FUNC, (L"+OALSmartReflex2Intr\r\n"));

  00004	e59f4064	 ldr         r4, [pc, #0x64]
  00008	e5943440	 ldr         r3, [r4, #0x440]
  0000c	e3130004	 tst         r3, #4
  00010	159f0054	 ldrne       r0, [pc, #0x54]
  00014	1b000000	 blne        NKDbgPrintfW

; 2433 : 
; 2434 :     // get cause of interrupt
; 2435 :     intrStatus = SmartReflex_funcs->ClearInterruptStatus(kSmartReflex_Channel2,
; 2436 :                     ERRCONFIG_INTR_SR_MASK
; 2437 :                     );

  00018	e59f3048	 ldr         r3, [pc, #0x48]
  0001c	e3a02455	 mov         r2, #0x55, 8
  00020	e3821501	 orr         r1, r2, #1, 10
  00024	e5933000	 ldr         r3, [r3]
  00028	e3a00001	 mov         r0, #1
  0002c	e593302c	 ldr         r3, [r3, #0x2C]
  00030	e1a0e00f	 mov         lr, pc
  00034	e12fff13	 bx          r3
  00038	e1a01000	 mov         r1, r0

; 2438 :     
; 2439 :     OALMSG(TRUE, (L"OALSmartReflex2Intr intrStatus=0x%08X\r\n", intrStatus));

  0003c	e59f0020	 ldr         r0, [pc, #0x20]
  00040	eb000000	 bl          NKDbgPrintfW

; 2440 :     OALMSG(OAL_FUNC, (L"-OALSmartReflex2Intr\r\n"));

  00044	e5943440	 ldr         r3, [r4, #0x440]
  00048	e3130004	 tst         r3, #4
  0004c	159f000c	 ldrne       r0, [pc, #0xC]
  00050	1b000000	 blne        NKDbgPrintfW

; 2441 :     return SYSINTR_NOP;

  00054	e3a00000	 mov         r0, #0

; 2442 : }

  00058	e8bd4010	 ldmia       sp!, {r4, lr}
  0005c	e12fff1e	 bx          lr
  00060		 |$LN10@OALSmartRe@2|
  00060		 |$LN11@OALSmartRe@2|
  00060	00000000	 DCD         |??_C@_1CO@MBHNAELJ@?$AA?9?$AAO?$AAA?$AAL?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA2?$AAI?$AAn?$AAt?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  00064		 |$LN12@OALSmartRe@2|
  00064	00000000	 DCD         |??_C@_1FA@KFBGMKJO@?$AAO?$AAA?$AAL?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA2?$AAI?$AAn?$AAt?$AAr?$AA?5?$AAi?$AAn?$AAt?$AAr?$AAS?$AAt?$AAa?$AAt?$AAu?$AAs?$AA?$DN?$AA0@|
  00068		 |$LN13@OALSmartRe@2|
  00068	00000000	 DCD         |SmartReflex_funcs|
  0006c		 |$LN14@OALSmartRe@2|
  0006c	00000000	 DCD         |??_C@_1CO@BKLJFLJC@?$AA?$CL?$AAO?$AAA?$AAL?$AAS?$AAm?$AAa?$AAr?$AAt?$AAR?$AAe?$AAf?$AAl?$AAe?$AAx?$AA2?$AAI?$AAn?$AAt?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  00070		 |$LN15@OALSmartRe@2|
  00070	00000000	 DCD         |dpCurSettings|
  00074		 |$M50716|

			 ENDP  ; |OALSmartReflex2Intr|

	EXPORT	|OALContextSaveGPIO|

  00088			 AREA	 |.bss|, NOINIT
|s_rgGpioContext| % 0x3c0
|s_rgGpioRegsAddr| % 0x18
|s_rgGpioContext| % 0x3c0

  00000			 AREA	 |.pdata|, PDATA
|$T50733| DCD	|$LN10@OALContext|
	DCD	0x40002f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALContextSaveGPIO| PROC

; 2452 : {

  00000		 |$LN10@OALContext|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M50730|

; 2453 :     UINT32 i;
; 2454 : 
; 2455 :     for(i=0; i< OMAP_GPIO_BANK_TO_RESTORE; i++)

  00004	e59f30ac	 ldr         r3, [pc, #0xAC]
  00008	e59f50a4	 ldr         r5, [pc, #0xA4]
  0000c	e3a06006	 mov         r6, #6
  00010	e2834010	 add         r4, r3, #0x10
  00014		 |$LL3@OALContext|

; 2456 :         {
; 2457 :         // disable gpio clocks
; 2458 :         s_rgGpioContext[i].SYSCONFIG        =   INREG32(&s_rgGpioRegsAddr[i]->SYSCONFIG);

  00014	e495e004	 ldr         lr, [r5], #4

; 2459 :         s_rgGpioContext[i].IRQENABLE1       =   INREG32(&s_rgGpioRegsAddr[i]->IRQENABLE1);
; 2460 :         s_rgGpioContext[i].WAKEUPENABLE     =   INREG32(&s_rgGpioRegsAddr[i]->WAKEUPENABLE);
; 2461 :         s_rgGpioContext[i].IRQENABLE2       =   INREG32(&s_rgGpioRegsAddr[i]->IRQENABLE2);
; 2462 :         s_rgGpioContext[i].CTRL             =   INREG32(&s_rgGpioRegsAddr[i]->CTRL);
; 2463 :         s_rgGpioContext[i].OE               =   INREG32(&s_rgGpioRegsAddr[i]->OE);
; 2464 :         s_rgGpioContext[i].LEVELDETECT0     =   INREG32(&s_rgGpioRegsAddr[i]->LEVELDETECT0);
; 2465 :         s_rgGpioContext[i].LEVELDETECT1     =   INREG32(&s_rgGpioRegsAddr[i]->LEVELDETECT1);
; 2466 :         s_rgGpioContext[i].RISINGDETECT     =   INREG32(&s_rgGpioRegsAddr[i]->RISINGDETECT);
; 2467 :         s_rgGpioContext[i].FALLINGDETECT    =   INREG32(&s_rgGpioRegsAddr[i]->FALLINGDETECT);
; 2468 :         s_rgGpioContext[i].DEBOUNCENABLE    =   INREG32(&s_rgGpioRegsAddr[i]->DEBOUNCENABLE);

  00018	e2840040	 add         r0, r4, #0x40

; 2469 :         s_rgGpioContext[i].DEBOUNCINGTIME   =   INREG32(&s_rgGpioRegsAddr[i]->DEBOUNCINGTIME);

  0001c	e2841044	 add         r1, r4, #0x44

; 2470 :         s_rgGpioContext[i].DATAOUT          =   INREG32(&s_rgGpioRegsAddr[i]->DATAOUT);

  00020	e284202c	 add         r2, r4, #0x2C
  00024	e59e3010	 ldr         r3, [lr, #0x10]
  00028	e2566001	 subs        r6, r6, #1
  0002c	e5843000	 str         r3, [r4]
  00030	e59e301c	 ldr         r3, [lr, #0x1C]
  00034	e584300c	 str         r3, [r4, #0xC]
  00038	e59e3020	 ldr         r3, [lr, #0x20]
  0003c	e5843010	 str         r3, [r4, #0x10]
  00040	e59e302c	 ldr         r3, [lr, #0x2C]
  00044	e584301c	 str         r3, [r4, #0x1C]
  00048	e59e3030	 ldr         r3, [lr, #0x30]
  0004c	e5843020	 str         r3, [r4, #0x20]
  00050	e59e3034	 ldr         r3, [lr, #0x34]
  00054	e5843024	 str         r3, [r4, #0x24]
  00058	e59e3040	 ldr         r3, [lr, #0x40]
  0005c	e5843030	 str         r3, [r4, #0x30]
  00060	e59e3044	 ldr         r3, [lr, #0x44]
  00064	e5843034	 str         r3, [r4, #0x34]
  00068	e59e3048	 ldr         r3, [lr, #0x48]
  0006c	e5843038	 str         r3, [r4, #0x38]
  00070	e59e304c	 ldr         r3, [lr, #0x4C]
  00074	e584303c	 str         r3, [r4, #0x3C]
  00078	e59e3050	 ldr         r3, [lr, #0x50]
  0007c	e28440a0	 add         r4, r4, #0xA0
  00080	e5803000	 str         r3, [r0]
  00084	e59e3054	 ldr         r3, [lr, #0x54]
  00088	e5813000	 str         r3, [r1]
  0008c	e59e303c	 ldr         r3, [lr, #0x3C]
  00090	e5823000	 str         r3, [r2]
  00094	1affffde	 bne         |$LL3@OALContext|

; 2471 :         }
; 2472 : 
; 2473 :     // clear dirty bit for gpio
; 2474 :     g_ffContextSaveMask &= ~HAL_CONTEXTSAVE_GPIO;

  00098	e59f2010	 ldr         r2, [pc, #0x10]
  0009c	e5923000	 ldr         r3, [r2]
  000a0	e3c33001	 bic         r3, r3, #1
  000a4	e5823000	 str         r3, [r2]

; 2475 : }

  000a8	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000ac	e12fff1e	 bx          lr
  000b0		 |$LN11@OALContext|
  000b0		 |$LN12@OALContext|
  000b0	00000000	 DCD         |g_ffContextSaveMask|
  000b4		 |$LN13@OALContext|
  000b4	00000000	 DCD         |s_rgGpioRegsAddr|
  000b8		 |$LN14@OALContext|
  000b8	00000000	 DCD         |s_rgGpioContext|
  000bc		 |$M50731|

			 ENDP  ; |OALContextSaveGPIO|

	EXPORT	|OALContextSaveGPMC|

  00820			 AREA	 |.bss|, NOINIT
|s_gpmcContext| % 0x2c0
|s_gpmcContext| % 0x2c0

  00000			 AREA	 |.pdata|, PDATA
|$T50744| DCD	|$LN13@OALContext@2|
	DCD	0x4000a100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALContextSaveGPMC| PROC

; 2485 : {

  00000		 |$LN13@OALContext@2|
  00000		 |$M50741|

; 2486 :     // Read the GPMC registers value and store it in shadow variable.
; 2487 :     s_gpmcContext.GPMC_SYSCONFIG = INREG32(&g_pGPMCRegs->GPMC_SYSCONFIG);

  00000	e59f3278	 ldr         r3, [pc, #0x278]
  00004	e59f1270	 ldr         r1, [pc, #0x270]
  00008	e5932000	 ldr         r2, [r3]
  0000c	e5923010	 ldr         r3, [r2, #0x10]

; 2488 :     s_gpmcContext.GPMC_IRQENABLE = INREG32(&g_pGPMCRegs->GPMC_IRQENABLE);
; 2489 :     s_gpmcContext.GPMC_TIMEOUT_CONTROL = INREG32(&g_pGPMCRegs->GPMC_TIMEOUT_CONTROL);

  00010	e5813010	 str         r3, [r1, #0x10]
  00014	e592301c	 ldr         r3, [r2, #0x1C]

; 2490 :     s_gpmcContext.GPMC_CONFIG = INREG32(&g_pGPMCRegs->GPMC_CONFIG);
; 2491 :     s_gpmcContext.GPMC_PREFETCH_CONFIG1 = INREG32(&g_pGPMCRegs->GPMC_PREFETCH_CONFIG1);

  00018	e581301c	 str         r3, [r1, #0x1C]
  0001c	e5923040	 ldr         r3, [r2, #0x40]

; 2492 :     s_gpmcContext.GPMC_PREFETCH_CONFIG2 = INREG32(&g_pGPMCRegs->GPMC_PREFETCH_CONFIG2);
; 2493 :     s_gpmcContext.GPMC_PREFETCH_CONTROL = INREG32(&g_pGPMCRegs->GPMC_PREFETCH_CONTROL);

  00020	e5813040	 str         r3, [r1, #0x40]
  00024	e5923050	 ldr         r3, [r2, #0x50]

; 2494 : 
; 2495 :     // Store the GPMC CS0 group only if it is enabled.
; 2496 :     if(INREG32(&g_pGPMCRegs->GPMC_CONFIG7_0) & GPMC_CSVALID)

  00028	e5813050	 str         r3, [r1, #0x50]
  0002c	e59231e0	 ldr         r3, [r2, #0x1E0]
  00030	e58131e0	 str         r3, [r1, #0x1E0]
  00034	e59231e4	 ldr         r3, [r2, #0x1E4]
  00038	e58131e4	 str         r3, [r1, #0x1E4]
  0003c	e59231ec	 ldr         r3, [r2, #0x1EC]
  00040	e58131ec	 str         r3, [r1, #0x1EC]
  00044	e5923078	 ldr         r3, [r2, #0x78]
  00048	e3130040	 tst         r3, #0x40
  0004c	0a00000d	 beq         |$LN8@OALContext@2|

; 2497 :     {
; 2498 :         s_gpmcContext.GPMC_CONFIG1_0 = INREG32(&g_pGPMCRegs->GPMC_CONFIG1_0);

  00050	e5923060	 ldr         r3, [r2, #0x60]

; 2499 :         s_gpmcContext.GPMC_CONFIG2_0 = INREG32(&g_pGPMCRegs->GPMC_CONFIG2_0);
; 2500 :         s_gpmcContext.GPMC_CONFIG3_0 = INREG32(&g_pGPMCRegs->GPMC_CONFIG3_0);

  00054	e5813060	 str         r3, [r1, #0x60]
  00058	e5923064	 ldr         r3, [r2, #0x64]

; 2501 :         s_gpmcContext.GPMC_CONFIG4_0 = INREG32(&g_pGPMCRegs->GPMC_CONFIG4_0);
; 2502 :         s_gpmcContext.GPMC_CONFIG5_0 = INREG32(&g_pGPMCRegs->GPMC_CONFIG5_0);

  0005c	e5813064	 str         r3, [r1, #0x64]
  00060	e5923068	 ldr         r3, [r2, #0x68]

; 2503 :         s_gpmcContext.GPMC_CONFIG6_0 = INREG32(&g_pGPMCRegs->GPMC_CONFIG6_0);

  00064	e5813068	 str         r3, [r1, #0x68]
  00068	e592306c	 ldr         r3, [r2, #0x6C]
  0006c	e581306c	 str         r3, [r1, #0x6C]
  00070	e5923070	 ldr         r3, [r2, #0x70]
  00074	e5813070	 str         r3, [r1, #0x70]
  00078	e5923074	 ldr         r3, [r2, #0x74]
  0007c	e5813074	 str         r3, [r1, #0x74]

; 2504 :         s_gpmcContext.GPMC_CONFIG7_0 = INREG32(&g_pGPMCRegs->GPMC_CONFIG7_0);

  00080	e5923078	 ldr         r3, [r2, #0x78]
  00084	e5813078	 str         r3, [r1, #0x78]
  00088		 |$LN8@OALContext@2|

; 2505 :     }
; 2506 : 
; 2507 :     // Store the GPMC CS1 group only if it is enabled.
; 2508 :     if(INREG32(&g_pGPMCRegs->GPMC_CONFIG7_1) & GPMC_CSVALID)

  00088	e59230a8	 ldr         r3, [r2, #0xA8]
  0008c	e3130040	 tst         r3, #0x40
  00090	0a00000d	 beq         |$LN7@OALContext@2|

; 2509 :     {
; 2510 :         s_gpmcContext.GPMC_CONFIG1_1 = INREG32(&g_pGPMCRegs->GPMC_CONFIG1_1);

  00094	e5923090	 ldr         r3, [r2, #0x90]

; 2511 :         s_gpmcContext.GPMC_CONFIG2_1 = INREG32(&g_pGPMCRegs->GPMC_CONFIG2_1);
; 2512 :         s_gpmcContext.GPMC_CONFIG3_1 = INREG32(&g_pGPMCRegs->GPMC_CONFIG3_1);

  00098	e5813090	 str         r3, [r1, #0x90]
  0009c	e5923094	 ldr         r3, [r2, #0x94]

; 2513 :         s_gpmcContext.GPMC_CONFIG4_1 = INREG32(&g_pGPMCRegs->GPMC_CONFIG4_1);
; 2514 :         s_gpmcContext.GPMC_CONFIG5_1 = INREG32(&g_pGPMCRegs->GPMC_CONFIG5_1);

  000a0	e5813094	 str         r3, [r1, #0x94]
  000a4	e5923098	 ldr         r3, [r2, #0x98]

; 2515 :         s_gpmcContext.GPMC_CONFIG6_1 = INREG32(&g_pGPMCRegs->GPMC_CONFIG6_1);

  000a8	e5813098	 str         r3, [r1, #0x98]
  000ac	e592309c	 ldr         r3, [r2, #0x9C]
  000b0	e581309c	 str         r3, [r1, #0x9C]
  000b4	e59230a0	 ldr         r3, [r2, #0xA0]
  000b8	e58130a0	 str         r3, [r1, #0xA0]
  000bc	e59230a4	 ldr         r3, [r2, #0xA4]
  000c0	e58130a4	 str         r3, [r1, #0xA4]

; 2516 :         s_gpmcContext.GPMC_CONFIG7_1 = INREG32(&g_pGPMCRegs->GPMC_CONFIG7_1);

  000c4	e59230a8	 ldr         r3, [r2, #0xA8]
  000c8	e58130a8	 str         r3, [r1, #0xA8]
  000cc		 |$LN7@OALContext@2|

; 2517 :     }
; 2518 : 
; 2519 :     // Store the GPMC CS2 group only if it is enabled.
; 2520 :     if(INREG32(&g_pGPMCRegs->GPMC_CONFIG7_2) & GPMC_CSVALID)

  000cc	e59230d8	 ldr         r3, [r2, #0xD8]
  000d0	e3130040	 tst         r3, #0x40
  000d4	0a00000d	 beq         |$LN6@OALContext@2|

; 2521 :     {
; 2522 :         s_gpmcContext.GPMC_CONFIG1_2 = INREG32(&g_pGPMCRegs->GPMC_CONFIG1_2);

  000d8	e59230c0	 ldr         r3, [r2, #0xC0]

; 2523 :         s_gpmcContext.GPMC_CONFIG2_2 = INREG32(&g_pGPMCRegs->GPMC_CONFIG2_2);
; 2524 :         s_gpmcContext.GPMC_CONFIG3_2 = INREG32(&g_pGPMCRegs->GPMC_CONFIG3_2);

  000dc	e58130c0	 str         r3, [r1, #0xC0]
  000e0	e59230c4	 ldr         r3, [r2, #0xC4]

; 2525 :         s_gpmcContext.GPMC_CONFIG4_2 = INREG32(&g_pGPMCRegs->GPMC_CONFIG4_2);
; 2526 :         s_gpmcContext.GPMC_CONFIG5_2 = INREG32(&g_pGPMCRegs->GPMC_CONFIG5_2);

  000e4	e58130c4	 str         r3, [r1, #0xC4]
  000e8	e59230c8	 ldr         r3, [r2, #0xC8]

; 2527 :         s_gpmcContext.GPMC_CONFIG6_2 = INREG32(&g_pGPMCRegs->GPMC_CONFIG6_2);

  000ec	e58130c8	 str         r3, [r1, #0xC8]
  000f0	e59230cc	 ldr         r3, [r2, #0xCC]
  000f4	e58130cc	 str         r3, [r1, #0xCC]
  000f8	e59230d0	 ldr         r3, [r2, #0xD0]
  000fc	e58130d0	 str         r3, [r1, #0xD0]
  00100	e59230d4	 ldr         r3, [r2, #0xD4]
  00104	e58130d4	 str         r3, [r1, #0xD4]

; 2528 :         s_gpmcContext.GPMC_CONFIG7_2 = INREG32(&g_pGPMCRegs->GPMC_CONFIG7_2);

  00108	e59230d8	 ldr         r3, [r2, #0xD8]
  0010c	e58130d8	 str         r3, [r1, #0xD8]
  00110		 |$LN6@OALContext@2|

; 2529 :     }
; 2530 : 
; 2531 :     // Store the GPMC CS3 group only if it is enabled.
; 2532 :     if(INREG32(&g_pGPMCRegs->GPMC_CONFIG7_3) & GPMC_CSVALID)

  00110	e5923108	 ldr         r3, [r2, #0x108]
  00114	e3130040	 tst         r3, #0x40
  00118	0a00000d	 beq         |$LN5@OALContext@2|

; 2533 :     {
; 2534 :         s_gpmcContext.GPMC_CONFIG1_3 = INREG32(&g_pGPMCRegs->GPMC_CONFIG1_3);

  0011c	e59230f0	 ldr         r3, [r2, #0xF0]

; 2535 :         s_gpmcContext.GPMC_CONFIG2_3 = INREG32(&g_pGPMCRegs->GPMC_CONFIG2_3);
; 2536 :         s_gpmcContext.GPMC_CONFIG3_3 = INREG32(&g_pGPMCRegs->GPMC_CONFIG3_3);

  00120	e58130f0	 str         r3, [r1, #0xF0]
  00124	e59230f4	 ldr         r3, [r2, #0xF4]

; 2537 :         s_gpmcContext.GPMC_CONFIG4_3 = INREG32(&g_pGPMCRegs->GPMC_CONFIG4_3);
; 2538 :         s_gpmcContext.GPMC_CONFIG5_3 = INREG32(&g_pGPMCRegs->GPMC_CONFIG5_3);

  00128	e58130f4	 str         r3, [r1, #0xF4]
  0012c	e59230f8	 ldr         r3, [r2, #0xF8]

; 2539 :         s_gpmcContext.GPMC_CONFIG6_3 = INREG32(&g_pGPMCRegs->GPMC_CONFIG6_3);

  00130	e58130f8	 str         r3, [r1, #0xF8]
  00134	e59230fc	 ldr         r3, [r2, #0xFC]
  00138	e58130fc	 str         r3, [r1, #0xFC]
  0013c	e5923100	 ldr         r3, [r2, #0x100]
  00140	e5813100	 str         r3, [r1, #0x100]
  00144	e5923104	 ldr         r3, [r2, #0x104]
  00148	e5813104	 str         r3, [r1, #0x104]

; 2540 :         s_gpmcContext.GPMC_CONFIG7_3 = INREG32(&g_pGPMCRegs->GPMC_CONFIG7_3);

  0014c	e5923108	 ldr         r3, [r2, #0x108]
  00150	e5813108	 str         r3, [r1, #0x108]
  00154		 |$LN5@OALContext@2|

; 2541 :     }
; 2542 : 
; 2543 :     // Store the GPMC CS4 group only if it is enabled.
; 2544 :     if(INREG32(&g_pGPMCRegs->GPMC_CONFIG7_4) & GPMC_CSVALID)

  00154	e5923138	 ldr         r3, [r2, #0x138]
  00158	e3130040	 tst         r3, #0x40
  0015c	0a00000d	 beq         |$LN4@OALContext@2|

; 2545 :     {
; 2546 :         s_gpmcContext.GPMC_CONFIG1_4 = INREG32(&g_pGPMCRegs->GPMC_CONFIG1_4);

  00160	e5923120	 ldr         r3, [r2, #0x120]

; 2547 :         s_gpmcContext.GPMC_CONFIG2_4 = INREG32(&g_pGPMCRegs->GPMC_CONFIG2_4);
; 2548 :         s_gpmcContext.GPMC_CONFIG3_4 = INREG32(&g_pGPMCRegs->GPMC_CONFIG3_4);

  00164	e5813120	 str         r3, [r1, #0x120]
  00168	e5923124	 ldr         r3, [r2, #0x124]

; 2549 :         s_gpmcContext.GPMC_CONFIG4_4 = INREG32(&g_pGPMCRegs->GPMC_CONFIG4_4);
; 2550 :         s_gpmcContext.GPMC_CONFIG5_4 = INREG32(&g_pGPMCRegs->GPMC_CONFIG5_4);

  0016c	e5813124	 str         r3, [r1, #0x124]
  00170	e5923128	 ldr         r3, [r2, #0x128]

; 2551 :         s_gpmcContext.GPMC_CONFIG6_4 = INREG32(&g_pGPMCRegs->GPMC_CONFIG6_4);

  00174	e5813128	 str         r3, [r1, #0x128]
  00178	e592312c	 ldr         r3, [r2, #0x12C]
  0017c	e581312c	 str         r3, [r1, #0x12C]
  00180	e5923130	 ldr         r3, [r2, #0x130]
  00184	e5813130	 str         r3, [r1, #0x130]
  00188	e5923134	 ldr         r3, [r2, #0x134]
  0018c	e5813134	 str         r3, [r1, #0x134]

; 2552 :         s_gpmcContext.GPMC_CONFIG7_4 = INREG32(&g_pGPMCRegs->GPMC_CONFIG7_4);

  00190	e5923138	 ldr         r3, [r2, #0x138]
  00194	e5813138	 str         r3, [r1, #0x138]
  00198		 |$LN4@OALContext@2|

; 2553 :     }
; 2554 : 
; 2555 :     // Store the GPMC CS5 group only if it is enabled.
; 2556 :     if(INREG32(&g_pGPMCRegs->GPMC_CONFIG7_5) & GPMC_CSVALID)

  00198	e5923168	 ldr         r3, [r2, #0x168]
  0019c	e3130040	 tst         r3, #0x40
  001a0	0a00000d	 beq         |$LN3@OALContext@2|

; 2557 :     {
; 2558 :         s_gpmcContext.GPMC_CONFIG1_5 = INREG32(&g_pGPMCRegs->GPMC_CONFIG1_5);

  001a4	e5923150	 ldr         r3, [r2, #0x150]

; 2559 :         s_gpmcContext.GPMC_CONFIG2_5 = INREG32(&g_pGPMCRegs->GPMC_CONFIG2_5);
; 2560 :         s_gpmcContext.GPMC_CONFIG3_5 = INREG32(&g_pGPMCRegs->GPMC_CONFIG3_5);

  001a8	e5813150	 str         r3, [r1, #0x150]
  001ac	e5923154	 ldr         r3, [r2, #0x154]

; 2561 :         s_gpmcContext.GPMC_CONFIG4_5 = INREG32(&g_pGPMCRegs->GPMC_CONFIG4_5);
; 2562 :         s_gpmcContext.GPMC_CONFIG5_5 = INREG32(&g_pGPMCRegs->GPMC_CONFIG5_5);

  001b0	e5813154	 str         r3, [r1, #0x154]
  001b4	e5923158	 ldr         r3, [r2, #0x158]

; 2563 :         s_gpmcContext.GPMC_CONFIG6_5 = INREG32(&g_pGPMCRegs->GPMC_CONFIG6_5);

  001b8	e5813158	 str         r3, [r1, #0x158]
  001bc	e592315c	 ldr         r3, [r2, #0x15C]
  001c0	e581315c	 str         r3, [r1, #0x15C]
  001c4	e5923160	 ldr         r3, [r2, #0x160]
  001c8	e5813160	 str         r3, [r1, #0x160]
  001cc	e5923164	 ldr         r3, [r2, #0x164]
  001d0	e5813164	 str         r3, [r1, #0x164]

; 2564 :         s_gpmcContext.GPMC_CONFIG7_5 = INREG32(&g_pGPMCRegs->GPMC_CONFIG7_5);

  001d4	e5923168	 ldr         r3, [r2, #0x168]
  001d8	e5813168	 str         r3, [r1, #0x168]
  001dc		 |$LN3@OALContext@2|

; 2565 :     }
; 2566 : 
; 2567 :     // Store the GPMC CS6 group only if it is enabled.
; 2568 :     if(INREG32(&g_pGPMCRegs->GPMC_CONFIG7_6) & GPMC_CSVALID)

  001dc	e5923198	 ldr         r3, [r2, #0x198]
  001e0	e3130040	 tst         r3, #0x40
  001e4	0a00000d	 beq         |$LN2@OALContext@2|

; 2569 :     {
; 2570 :         s_gpmcContext.GPMC_CONFIG1_6 = INREG32(&g_pGPMCRegs->GPMC_CONFIG1_6);

  001e8	e5923180	 ldr         r3, [r2, #0x180]

; 2571 :         s_gpmcContext.GPMC_CONFIG2_6 = INREG32(&g_pGPMCRegs->GPMC_CONFIG2_6);
; 2572 :         s_gpmcContext.GPMC_CONFIG3_6 = INREG32(&g_pGPMCRegs->GPMC_CONFIG3_6);

  001ec	e5813180	 str         r3, [r1, #0x180]
  001f0	e5923184	 ldr         r3, [r2, #0x184]

; 2573 :         s_gpmcContext.GPMC_CONFIG4_6 = INREG32(&g_pGPMCRegs->GPMC_CONFIG4_6);
; 2574 :         s_gpmcContext.GPMC_CONFIG5_6 = INREG32(&g_pGPMCRegs->GPMC_CONFIG5_6);

  001f4	e5813184	 str         r3, [r1, #0x184]
  001f8	e5923188	 ldr         r3, [r2, #0x188]

; 2575 :         s_gpmcContext.GPMC_CONFIG6_6 = INREG32(&g_pGPMCRegs->GPMC_CONFIG6_6);

  001fc	e5813188	 str         r3, [r1, #0x188]
  00200	e592318c	 ldr         r3, [r2, #0x18C]
  00204	e581318c	 str         r3, [r1, #0x18C]
  00208	e5923190	 ldr         r3, [r2, #0x190]
  0020c	e5813190	 str         r3, [r1, #0x190]
  00210	e5923194	 ldr         r3, [r2, #0x194]
  00214	e5813194	 str         r3, [r1, #0x194]

; 2576 :         s_gpmcContext.GPMC_CONFIG7_6 = INREG32(&g_pGPMCRegs->GPMC_CONFIG7_6);

  00218	e5923198	 ldr         r3, [r2, #0x198]
  0021c	e5813198	 str         r3, [r1, #0x198]
  00220		 |$LN2@OALContext@2|

; 2577 :     }
; 2578 : 
; 2579 :     // Store the GPMC CS7 group only if it is enabled.
; 2580 :     if(INREG32(&g_pGPMCRegs->GPMC_CONFIG7_7) & GPMC_CSVALID)

  00220	e59231c8	 ldr         r3, [r2, #0x1C8]
  00224	e3130040	 tst         r3, #0x40
  00228	0a00000d	 beq         |$LN1@OALContext@2|

; 2581 :     {
; 2582 :         s_gpmcContext.GPMC_CONFIG1_7 = INREG32(&g_pGPMCRegs->GPMC_CONFIG1_7);

  0022c	e59231b0	 ldr         r3, [r2, #0x1B0]

; 2583 :         s_gpmcContext.GPMC_CONFIG2_7 = INREG32(&g_pGPMCRegs->GPMC_CONFIG2_7);
; 2584 :         s_gpmcContext.GPMC_CONFIG3_7 = INREG32(&g_pGPMCRegs->GPMC_CONFIG3_7);

  00230	e58131b0	 str         r3, [r1, #0x1B0]
  00234	e59231b4	 ldr         r3, [r2, #0x1B4]

; 2585 :         s_gpmcContext.GPMC_CONFIG4_7 = INREG32(&g_pGPMCRegs->GPMC_CONFIG4_7);
; 2586 :         s_gpmcContext.GPMC_CONFIG5_7 = INREG32(&g_pGPMCRegs->GPMC_CONFIG5_7);

  00238	e58131b4	 str         r3, [r1, #0x1B4]
  0023c	e59231b8	 ldr         r3, [r2, #0x1B8]

; 2587 :         s_gpmcContext.GPMC_CONFIG6_7 = INREG32(&g_pGPMCRegs->GPMC_CONFIG6_7);

  00240	e58131b8	 str         r3, [r1, #0x1B8]
  00244	e59231bc	 ldr         r3, [r2, #0x1BC]
  00248	e58131bc	 str         r3, [r1, #0x1BC]
  0024c	e59231c0	 ldr         r3, [r2, #0x1C0]
  00250	e58131c0	 str         r3, [r1, #0x1C0]
  00254	e59231c4	 ldr         r3, [r2, #0x1C4]
  00258	e58131c4	 str         r3, [r1, #0x1C4]

; 2588 :         s_gpmcContext.GPMC_CONFIG7_7 = INREG32(&g_pGPMCRegs->GPMC_CONFIG7_7);

  0025c	e59231c8	 ldr         r3, [r2, #0x1C8]
  00260	e58131c8	 str         r3, [r1, #0x1C8]
  00264		 |$LN1@OALContext@2|

; 2589 :     }
; 2590 : 
; 2591 :     // clear dirty bit
; 2592 :     g_ffContextSaveMask &= ~HAL_CONTEXTSAVE_GPMC;

  00264	e59f200c	 ldr         r2, [pc, #0xC]
  00268	e5923000	 ldr         r3, [r2]
  0026c	e3c33010	 bic         r3, r3, #0x10
  00270	e5823000	 str         r3, [r2]

; 2593 : }

  00274	e12fff1e	 bx          lr
  00278		 |$LN14@OALContext@2|
  00278		 |$LN15@OALContext@2|
  00278	00000000	 DCD         |g_ffContextSaveMask|
  0027c		 |$LN16@OALContext@2|
  0027c	00000000	 DCD         |s_gpmcContext|
  00280		 |$LN17@OALContext@2|
  00280	00000000	 DCD         |g_pGPMCRegs|
  00284		 |$M50742|

			 ENDP  ; |OALContextSaveGPMC|

	EXPORT	|OALContextSaveSCM|

  00da0			 AREA	 |.bss|, NOINIT
|s_syscGenContext| % 0x2d4
|s_syscIntContext| % 0x14
|s_syscGenContext| % 0x2d4

  00000			 AREA	 |.pdata|, PDATA
|$T50755| DCD	|$LN5@OALContext@3|
	DCD	0x40005601
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALContextSaveSCM| PROC

; 2603 : {

  00000		 |$LN5@OALContext@3|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M50752|

; 2604 :     // Read the SCM registers value and store it in shadow variable.
; 2605 : 
; 2606 :     s_syscIntContext.CONTROL_SYSCONFIG = INREG32(&s_pSyscIFContext->CONTROL_SYSCONFIG);

  00004	e59f3148	 ldr         r3, [pc, #0x148]

; 2607 : 
; 2608 :     s_syscGenContext.CONTROL_DEVCONF0      = INREG32(&g_pSysCtrlGenReg->CONTROL_DEVCONF0);

  00008	e59f2140	 ldr         r2, [pc, #0x140]
  0000c	e59fe138	 ldr         lr, [pc, #0x138]
  00010	e5933000	 ldr         r3, [r3]
  00014	e5920000	 ldr         r0, [r2]

; 2609 :     s_syscGenContext.CONTROL_MEM_DFTRW0    = INREG32(&g_pSysCtrlGenReg->CONTROL_MEM_DFTRW0);
; 2610 :     s_syscGenContext.CONTROL_MEM_DFTRW1    = INREG32(&g_pSysCtrlGenReg->CONTROL_MEM_DFTRW1);
; 2611 :     s_syscGenContext.CONTROL_MSUSPENDMUX_0 = INREG32(&g_pSysCtrlGenReg->CONTROL_MSUSPENDMUX_0);
; 2612 :     s_syscGenContext.CONTROL_MSUSPENDMUX_1 = INREG32(&g_pSysCtrlGenReg->CONTROL_MSUSPENDMUX_1);
; 2613 :     s_syscGenContext.CONTROL_MSUSPENDMUX_2 = INREG32(&g_pSysCtrlGenReg->CONTROL_MSUSPENDMUX_2);
; 2614 :     s_syscGenContext.CONTROL_MSUSPENDMUX_3 = INREG32(&g_pSysCtrlGenReg->CONTROL_MSUSPENDMUX_3);
; 2615 :     s_syscGenContext.CONTROL_MSUSPENDMUX_4 = INREG32(&g_pSysCtrlGenReg->CONTROL_MSUSPENDMUX_4);
; 2616 :     s_syscGenContext.CONTROL_MSUSPENDMUX_5 = INREG32(&g_pSysCtrlGenReg->CONTROL_MSUSPENDMUX_5);
; 2617 :     s_syscGenContext.CONTROL_SEC_CTRL      = INREG32(&g_pSysCtrlGenReg->CONTROL_SEC_CTRL);
; 2618 :     s_syscGenContext.CONTROL_DEVCONF1      = INREG32(&g_pSysCtrlGenReg->CONTROL_DEVCONF1);
; 2619 :     s_syscGenContext.CONTROL_CSIRXFE       = INREG32(&g_pSysCtrlGenReg->CONTROL_CSIRXFE);
; 2620 :     s_syscGenContext.CONTROL_IVA2_BOOTADDR = INREG32(&g_pSysCtrlGenReg->CONTROL_IVA2_BOOTADDR);
; 2621 :     s_syscGenContext.CONTROL_IVA2_BOOTMOD  = INREG32(&g_pSysCtrlGenReg->CONTROL_IVA2_BOOTMOD);
; 2622 :     s_syscGenContext.CONTROL_DEBOBS_0      = INREG32(&g_pSysCtrlGenReg->CONTROL_DEBOBS_0);
; 2623 :     s_syscGenContext.CONTROL_DEBOBS_1      = INREG32(&g_pSysCtrlGenReg->CONTROL_DEBOBS_1);
; 2624 :     s_syscGenContext.CONTROL_DEBOBS_2      = INREG32(&g_pSysCtrlGenReg->CONTROL_DEBOBS_2);
; 2625 :     s_syscGenContext.CONTROL_DEBOBS_3      = INREG32(&g_pSysCtrlGenReg->CONTROL_DEBOBS_3);
; 2626 :     s_syscGenContext.CONTROL_DEBOBS_4      = INREG32(&g_pSysCtrlGenReg->CONTROL_DEBOBS_4);
; 2627 :     s_syscGenContext.CONTROL_DEBOBS_5      = INREG32(&g_pSysCtrlGenReg->CONTROL_DEBOBS_5);
; 2628 :     s_syscGenContext.CONTROL_DEBOBS_6      = INREG32(&g_pSysCtrlGenReg->CONTROL_DEBOBS_6);
; 2629 :     s_syscGenContext.CONTROL_DEBOBS_7      = INREG32(&g_pSysCtrlGenReg->CONTROL_DEBOBS_7);
; 2630 :     s_syscGenContext.CONTROL_DEBOBS_8      = INREG32(&g_pSysCtrlGenReg->CONTROL_DEBOBS_8);
; 2631 :     s_syscGenContext.CONTROL_PROG_IO0      = INREG32(&g_pSysCtrlGenReg->CONTROL_PROG_IO0);
; 2632 :     s_syscGenContext.CONTROL_PROG_IO1      = INREG32(&g_pSysCtrlGenReg->CONTROL_PROG_IO1);
; 2633 : 
; 2634 :     s_syscGenContext.CONTROL_DSS_DPLL_SPREADING     = INREG32(&g_pSysCtrlGenReg->CONTROL_DSS_DPLL_SPREADING);
; 2635 :     s_syscGenContext.CONTROL_CORE_DPLL_SPREADING    = INREG32(&g_pSysCtrlGenReg->CONTROL_CORE_DPLL_SPREADING);
; 2636 :     s_syscGenContext.CONTROL_PER_DPLL_SPREADING     = INREG32(&g_pSysCtrlGenReg->CONTROL_PER_DPLL_SPREADING);
; 2637 :     s_syscGenContext.CONTROL_USBHOST_DPLL_SPREADING = INREG32(&g_pSysCtrlGenReg->CONTROL_USBHOST_DPLL_SPREADING);
; 2638 :     s_syscGenContext.CONTROL_PBIAS_LITE             = INREG32(&g_pSysCtrlGenReg->CONTROL_PBIAS_LITE);
; 2639 :     s_syscGenContext.CONTROL_TEMP_SENSOR            = INREG32(&g_pSysCtrlGenReg->CONTROL_TEMP_SENSOR);
; 2640 :     s_syscGenContext.CONTROL_SRAMLDO4               = INREG32(&g_pSysCtrlGenReg->CONTROL_SRAMLDO4);
; 2641 :     s_syscGenContext.CONTROL_SRAMLDO5               = INREG32(&g_pSysCtrlGenReg->CONTROL_SRAMLDO5);
; 2642 :     s_syscGenContext.CONTROL_CSI                    = INREG32(&g_pSysCtrlGenReg->CONTROL_CSI);
; 2643 : 
; 2644 :     g_ffContextSaveMask &= ~HAL_CONTEXTSAVE_SCM;

  00018	e59f1128	 ldr         r1, [pc, #0x128]
  0001c	e5933010	 ldr         r3, [r3, #0x10]
  00020	e5912000	 ldr         r2, [r1]
  00024	e58e333c	 str         r3, [lr, #0x33C]
  00028	e5903004	 ldr         r3, [r0, #4]
  0002c	e3c22002	 bic         r2, r2, #2
  00030	e58e3004	 str         r3, [lr, #4]
  00034	e5903008	 ldr         r3, [r0, #8]
  00038	e58e3008	 str         r3, [lr, #8]
  0003c	e590300c	 ldr         r3, [r0, #0xC]
  00040	e58e300c	 str         r3, [lr, #0xC]
  00044	e5903020	 ldr         r3, [r0, #0x20]
  00048	e58e3020	 str         r3, [lr, #0x20]
  0004c	e5903024	 ldr         r3, [r0, #0x24]
  00050	e58e3024	 str         r3, [lr, #0x24]
  00054	e5903028	 ldr         r3, [r0, #0x28]
  00058	e58e3028	 str         r3, [lr, #0x28]
  0005c	e590302c	 ldr         r3, [r0, #0x2C]
  00060	e58e302c	 str         r3, [lr, #0x2C]
  00064	e5903030	 ldr         r3, [r0, #0x30]
  00068	e58e3030	 str         r3, [lr, #0x30]
  0006c	e5903034	 ldr         r3, [r0, #0x34]
  00070	e58e3034	 str         r3, [lr, #0x34]
  00074	e5903040	 ldr         r3, [r0, #0x40]
  00078	e58e3040	 str         r3, [lr, #0x40]
  0007c	e5903068	 ldr         r3, [r0, #0x68]
  00080	e58e3068	 str         r3, [lr, #0x68]
  00084	e590306c	 ldr         r3, [r0, #0x6C]
  00088	e58e306c	 str         r3, [lr, #0x6C]
  0008c	e5903190	 ldr         r3, [r0, #0x190]
  00090	e58e3190	 str         r3, [lr, #0x190]
  00094	e5903194	 ldr         r3, [r0, #0x194]
  00098	e58e3194	 str         r3, [lr, #0x194]
  0009c	e59031b0	 ldr         r3, [r0, #0x1B0]
  000a0	e58e31b0	 str         r3, [lr, #0x1B0]
  000a4	e59031b4	 ldr         r3, [r0, #0x1B4]
  000a8	e58e31b4	 str         r3, [lr, #0x1B4]
  000ac	e59031b8	 ldr         r3, [r0, #0x1B8]
  000b0	e58e31b8	 str         r3, [lr, #0x1B8]
  000b4	e59031bc	 ldr         r3, [r0, #0x1BC]
  000b8	e58e31bc	 str         r3, [lr, #0x1BC]
  000bc	e59031c0	 ldr         r3, [r0, #0x1C0]
  000c0	e58e31c0	 str         r3, [lr, #0x1C0]
  000c4	e59031c4	 ldr         r3, [r0, #0x1C4]
  000c8	e58e31c4	 str         r3, [lr, #0x1C4]
  000cc	e59031c8	 ldr         r3, [r0, #0x1C8]
  000d0	e58e31c8	 str         r3, [lr, #0x1C8]
  000d4	e59031cc	 ldr         r3, [r0, #0x1CC]
  000d8	e58e31cc	 str         r3, [lr, #0x1CC]
  000dc	e59031d0	 ldr         r3, [r0, #0x1D0]
  000e0	e58e31d0	 str         r3, [lr, #0x1D0]
  000e4	e59031d4	 ldr         r3, [r0, #0x1D4]
  000e8	e58e31d4	 str         r3, [lr, #0x1D4]
  000ec	e59031d8	 ldr         r3, [r0, #0x1D8]
  000f0	e58e31d8	 str         r3, [lr, #0x1D8]
  000f4	e59031e0	 ldr         r3, [r0, #0x1E0]
  000f8	e58e31e0	 str         r3, [lr, #0x1E0]
  000fc	e59031e4	 ldr         r3, [r0, #0x1E4]
  00100	e58e31e4	 str         r3, [lr, #0x1E4]
  00104	e59031e8	 ldr         r3, [r0, #0x1E8]
  00108	e58e31e8	 str         r3, [lr, #0x1E8]
  0010c	e59031ec	 ldr         r3, [r0, #0x1EC]
  00110	e58e31ec	 str         r3, [lr, #0x1EC]
  00114	e59032b0	 ldr         r3, [r0, #0x2B0]
  00118	e58e32b0	 str         r3, [lr, #0x2B0]
  0011c	e59032b4	 ldr         r3, [r0, #0x2B4]
  00120	e58e32b4	 str         r3, [lr, #0x2B4]
  00124	e59032b8	 ldr         r3, [r0, #0x2B8]
  00128	e58e32b8	 str         r3, [lr, #0x2B8]
  0012c	e59032bc	 ldr         r3, [r0, #0x2BC]
  00130	e58e32bc	 str         r3, [lr, #0x2BC]
  00134	e59032c0	 ldr         r3, [r0, #0x2C0]
  00138	e5812000	 str         r2, [r1]
  0013c	e58e32c0	 str         r3, [lr, #0x2C0]

; 2645 : }

  00140	e49de004	 ldr         lr, [sp], #4
  00144	e12fff1e	 bx          lr
  00148		 |$LN6@OALContext@3|
  00148		 |$LN7@OALContext@3|
  00148	00000000	 DCD         |g_ffContextSaveMask|
  0014c		 |$LN8@OALContext@3|
  0014c	00000000	 DCD         |s_syscGenContext|
  00150		 |$LN9@OALContext@3|
  00150	00000000	 DCD         |g_pSysCtrlGenReg|
  00154		 |$LN10@OALContext@3|
  00154	00000000	 DCD         |s_pSyscIFContext|
  00158		 |$M50753|

			 ENDP  ; |OALContextSaveSCM|

	EXPORT	|OALContextSavePRCM|

  0135c			 AREA	 |.bss|, NOINIT
|s_ocpSysCmContext| % 0x14
|s_ocpSysCmContext| % 0x14
|s_coreCmContext| % 0x50
|s_wkupCmContext| % 0x44
|s_globalCmContext| % 0xa0
|s_clkCtrlCmContext| % 0x74
|s_emuCmContext| % 0x58

  00000			 AREA	 |.pdata|, PDATA
|$T50767| DCD	|$LN5@OALContext@4|
	DCD	0x40003e01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALContextSavePRCM| PROC

; 2655 : {

  00000		 |$LN5@OALContext@4|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M50764|

; 2656 :     s_ocpSysCmContext.CM_SYSCONFIG  = INREG32(&g_PrcmCm.pOMAP_OCP_SYSTEM_CM->CM_SYSCONFIG);

  00004	e59f60e8	 ldr         r6, [pc, #0xE8]
  00008	e59fe0e0	 ldr         lr, [pc, #0xE0]

; 2657 : 
; 2658 :     s_coreCmContext.CM_AUTOIDLE1_CORE = INREG32(&g_PrcmCm.pOMAP_CORE_CM->CM_AUTOIDLE1_CORE);

  0000c	e59f10d8	 ldr         r1, [pc, #0xD8]
  00010	e5963030	 ldr         r3, [r6, #0x30]
  00014	e5962004	 ldr         r2, [r6, #4]

; 2659 :     s_coreCmContext.CM_AUTOIDLE2_CORE = INREG32(&g_PrcmCm.pOMAP_CORE_CM->CM_AUTOIDLE2_CORE);
; 2660 :     s_coreCmContext.CM_AUTOIDLE3_CORE = INREG32(&g_PrcmCm.pOMAP_CORE_CM->CM_AUTOIDLE3_CORE);
; 2661 : 
; 2662 :     s_wkupCmContext.CM_FCLKEN_WKUP    = INREG32(&g_PrcmCm.pOMAP_WKUP_CM->CM_FCLKEN_WKUP);

  00018	e5960000	 ldr         r0, [r6]
  0001c	e5933010	 ldr         r3, [r3, #0x10]

; 2663 :     s_wkupCmContext.CM_ICLKEN_WKUP    = INREG32(&g_PrcmCm.pOMAP_WKUP_CM->CM_ICLKEN_WKUP);
; 2664 :     s_wkupCmContext.CM_AUTOIDLE_WKUP  = INREG32(&g_PrcmCm.pOMAP_WKUP_CM->CM_AUTOIDLE_WKUP);
; 2665 : 
; 2666 :     s_clkCtrlCmContext.CM_CLKEN2_PLL = INREG32(&g_PrcmCm.pOMAP_CLOCK_CONTROL_CM->CM_CLKEN2_PLL);

  00020	e5965034	 ldr         r5, [r6, #0x34]
  00024	e59f40bc	 ldr         r4, [pc, #0xBC]
  00028	e58e3010	 str         r3, [lr, #0x10]
  0002c	e5923030	 ldr         r3, [r2, #0x30]
  00030	e5813030	 str         r3, [r1, #0x30]
  00034	e5923034	 ldr         r3, [r2, #0x34]
  00038	e5813034	 str         r3, [r1, #0x34]
  0003c	e5923038	 ldr         r3, [r2, #0x38]

; 2667 :     s_clkCtrlCmContext.CM_CLKSEL4_PLL = INREG32(&g_PrcmCm.pOMAP_CLOCK_CONTROL_CM->CM_CLKSEL4_PLL);
; 2668 :     s_clkCtrlCmContext.CM_CLKSEL5_PLL = INREG32(&g_PrcmCm.pOMAP_CLOCK_CONTROL_CM->CM_CLKSEL5_PLL);
; 2669 :     s_clkCtrlCmContext.CM_AUTOIDLE2_PLL = INREG32(&g_PrcmCm.pOMAP_CLOCK_CONTROL_CM->CM_AUTOIDLE2_PLL);
; 2670 : 
; 2671 :     s_globalCmContext.CM_POLCTRL = INREG32(&g_PrcmCm.pOMAP_GLOBAL_CM->CM_POLCTRL);

  00040	e59f209c	 ldr         r2, [pc, #0x9C]
  00044	e5813038	 str         r3, [r1, #0x38]
  00048	e5903000	 ldr         r3, [r0]
  0004c	e596102c	 ldr         r1, [r6, #0x2C]
  00050	e58e3014	 str         r3, [lr, #0x14]
  00054	e5903010	 ldr         r3, [r0, #0x10]
  00058	e58e3024	 str         r3, [lr, #0x24]
  0005c	e5903030	 ldr         r3, [r0, #0x30]

; 2672 : 
; 2673 :     s_clkCtrlCmContext.CM_CLKOUT_CTRL = INREG32(&g_PrcmCm.pOMAP_CLOCK_CONTROL_CM->CM_CLKOUT_CTRL);
; 2674 :     s_clkCtrlCmContext.CM_AUTOIDLE_PLL = INREG32(&g_PrcmCm.pOMAP_CLOCK_CONTROL_CM->CM_AUTOIDLE_PLL);
; 2675 : 
; 2676 :     s_emuCmContext.CM_CLKSEL1_EMU = INREG32(&g_PrcmCm.pOMAP_EMU_CM->CM_CLKSEL1_EMU);

  00060	e5960010	 ldr         r0, [r6, #0x10]
  00064	e58e3044	 str         r3, [lr, #0x44]
  00068	e5953004	 ldr         r3, [r5, #4]
  0006c	e59fe06c	 ldr         lr, [pc, #0x6C]
  00070	e5843004	 str         r3, [r4, #4]
  00074	e595304c	 ldr         r3, [r5, #0x4C]
  00078	e584304c	 str         r3, [r4, #0x4C]
  0007c	e5953050	 ldr         r3, [r5, #0x50]
  00080	e5843050	 str         r3, [r4, #0x50]
  00084	e5953034	 ldr         r3, [r5, #0x34]

; 2677 :     s_emuCmContext.CM_CLKSTCTRL_EMU = INREG32(&g_PrcmCm.pOMAP_EMU_CM->CM_CLKSTCTRL_EMU);

  00088	e5843034	 str         r3, [r4, #0x34]
  0008c	e591309c	 ldr         r3, [r1, #0x9C]

; 2678 :     s_emuCmContext.CM_CLKSEL2_EMU = INREG32(&g_PrcmCm.pOMAP_EMU_CM->CM_CLKSEL2_EMU);
; 2679 :     s_emuCmContext.CM_CLKSEL3_EMU = INREG32(&g_PrcmCm.pOMAP_EMU_CM->CM_CLKSEL3_EMU);
; 2680 : 
; 2681 :     g_ffContextSaveMask &= ~HAL_CONTEXTSAVE_PRCM;

  00090	e59f1044	 ldr         r1, [pc, #0x44]
  00094	e582309c	 str         r3, [r2, #0x9C]
  00098	e5953070	 ldr         r3, [r5, #0x70]
  0009c	e5912000	 ldr         r2, [r1]
  000a0	e5843070	 str         r3, [r4, #0x70]
  000a4	e5953030	 ldr         r3, [r5, #0x30]
  000a8	e3c22040	 bic         r2, r2, #0x40
  000ac	e5843030	 str         r3, [r4, #0x30]
  000b0	e5903040	 ldr         r3, [r0, #0x40]
  000b4	e58e3040	 str         r3, [lr, #0x40]
  000b8	e5903048	 ldr         r3, [r0, #0x48]
  000bc	e58e3048	 str         r3, [lr, #0x48]
  000c0	e5903050	 ldr         r3, [r0, #0x50]
  000c4	e58e3050	 str         r3, [lr, #0x50]
  000c8	e5903054	 ldr         r3, [r0, #0x54]
  000cc	e5812000	 str         r2, [r1]
  000d0	e58e3054	 str         r3, [lr, #0x54]

; 2682 : }

  000d4	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000d8	e12fff1e	 bx          lr
  000dc		 |$LN6@OALContext@4|
  000dc		 |$LN7@OALContext@4|
  000dc	00000000	 DCD         |g_ffContextSaveMask|
  000e0		 |$LN8@OALContext@4|
  000e0	00000000	 DCD         |s_emuCmContext|
  000e4		 |$LN9@OALContext@4|
  000e4	00000000	 DCD         |s_globalCmContext|
  000e8		 |$LN10@OALContext@4|
  000e8	00000000	 DCD         |s_clkCtrlCmContext|
  000ec		 |$LN11@OALContext@4|
  000ec	00000000	 DCD         |s_coreCmContext|
  000f0		 |$LN12@OALContext@4|
  000f0	00000000	 DCD         |s_ocpSysCmContext|
  000f4		 |$LN13@OALContext@4|
  000f4	00000000	 DCD         |g_PrcmCm|
  000f8		 |$M50765|

			 ENDP  ; |OALContextSavePRCM|

	EXPORT	|OALContextSaveINTC|
	IMPORT	|g_pIntr|

  01584			 AREA	 |.bss|, NOINIT
|s_intcContext| % 0x280
|s_intcContext| % 0x280

  00000			 AREA	 |.pdata|, PDATA
|$T50784| DCD	|$LN10@OALContext@5|
	DCD	0x40002301
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALContextSaveINTC| PROC

; 2692 : {

  00000		 |$LN10@OALContext@5|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M50781|

; 2693 :     UINT32 i;
; 2694 : 
; 2695 :     s_intcContext.INTC_SYSCONFIG = INREG32(&g_pIntr->pICLRegs->INTC_SYSCONFIG);

  00004	e59f307c	 ldr         r3, [pc, #0x7C]
  00008	e59fe074	 ldr         lr, [pc, #0x74]
  0000c	e3a02060	 mov         r2, #0x60
  00010	e5933000	 ldr         r3, [r3]
  00014	e28e1c01	 add         r1, lr, #1, 24
  00018	e5934000	 ldr         r4, [r3]
  0001c	e5943010	 ldr         r3, [r4, #0x10]

; 2696 :     s_intcContext.INTC_PROTECTION = INREG32(&g_pIntr->pICLRegs->INTC_PROTECTION);
; 2697 :     s_intcContext.INTC_IDLE = INREG32(&g_pIntr->pICLRegs->INTC_IDLE);
; 2698 :     s_intcContext.INTC_THRESHOLD = INREG32(&g_pIntr->pICLRegs->INTC_THRESHOLD);

  00020	e2840c01	 add         r0, r4, #1, 24
  00024	e58e3010	 str         r3, [lr, #0x10]
  00028	e594304c	 ldr         r3, [r4, #0x4C]
  0002c	e58e304c	 str         r3, [lr, #0x4C]
  00030	e5943050	 ldr         r3, [r4, #0x50]
  00034	e58e3050	 str         r3, [lr, #0x50]
  00038	e5943068	 ldr         r3, [r4, #0x68]
  0003c	e58e3068	 str         r3, [lr, #0x68]
  00040		 |$LL3@OALContext@5|

; 2699 : 
; 2700 :     for (i = 0; i < dimof(g_pIntr->pICLRegs->INTC_ILR); i++)
; 2701 :         s_intcContext.INTC_ILR[i] = INREG32(&g_pIntr->pICLRegs->INTC_ILR[i]);

  00040	e4903004	 ldr         r3, [r0], #4
  00044	e2522001	 subs        r2, r2, #1
  00048	e4813004	 str         r3, [r1], #4
  0004c	1afffffb	 bne         |$LL3@OALContext@5|

; 2702 : 
; 2703 :     s_intcContext.INTC_MIR0 = INREG32(&g_pIntr->pICLRegs->INTC_MIR0);

  00050	e5943084	 ldr         r3, [r4, #0x84]

; 2704 :     s_intcContext.INTC_MIR1 = INREG32(&g_pIntr->pICLRegs->INTC_MIR1);
; 2705 :     s_intcContext.INTC_MIR2 = INREG32(&g_pIntr->pICLRegs->INTC_MIR2);
; 2706 : 
; 2707 :     g_ffContextSaveMask &= ~HAL_CONTEXTSAVE_INTC;

  00054	e59f0024	 ldr         r0, [pc, #0x24]
  00058	e58e3084	 str         r3, [lr, #0x84]
  0005c	e59430a4	 ldr         r3, [r4, #0xA4]
  00060	e5901000	 ldr         r1, [r0]
  00064	e58e30a4	 str         r3, [lr, #0xA4]
  00068	e59420c4	 ldr         r2, [r4, #0xC4]
  0006c	e3c13020	 bic         r3, r1, #0x20
  00070	e5803000	 str         r3, [r0]
  00074	e58e20c4	 str         r2, [lr, #0xC4]

; 2708 : }

  00078	e8bd4010	 ldmia       sp!, {r4, lr}
  0007c	e12fff1e	 bx          lr
  00080		 |$LN11@OALContext@5|
  00080		 |$LN12@OALContext@5|
  00080	00000000	 DCD         |g_ffContextSaveMask|
  00084		 |$LN13@OALContext@5|
  00084	00000000	 DCD         |s_intcContext|
  00088		 |$LN14@OALContext@5|
  00088	00000000	 DCD         |g_pIntr|
  0008c		 |$M50782|

			 ENDP  ; |OALContextSaveINTC|

	EXPORT	|OALContextSaveDMA|

  01a84			 AREA	 |.bss|, NOINIT
|s_dmaController| % 0xc80
|s_dmaController| % 0xc80

  00000			 AREA	 |.pdata|, PDATA
|$T50795| DCD	|$LN5@OALContext@6|
	DCD	0x40001300
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALContextSaveDMA| PROC

; 2718 : {

  00000		 |$LN5@OALContext@6|
  00000		 |$M50792|

; 2719 :     s_dmaController.DMA4_GCR           = INREG32(&s_pDmaController->DMA4_GCR);

  00000	e59f0040	 ldr         r0, [pc, #0x40]

; 2720 :     s_dmaController.DMA4_OCP_SYSCONFIG = INREG32(&s_pDmaController->DMA4_OCP_SYSCONFIG);
; 2721 :     s_dmaController.DMA4_IRQENABLE_L0  = INREG32(&s_pDmaController->DMA4_IRQENABLE_L0);
; 2722 :     s_dmaController.DMA4_IRQENABLE_L1  = INREG32(&s_pDmaController->DMA4_IRQENABLE_L1);
; 2723 :     s_dmaController.DMA4_IRQENABLE_L2  = INREG32(&s_pDmaController->DMA4_IRQENABLE_L2);
; 2724 :     s_dmaController.DMA4_IRQENABLE_L3  = INREG32(&s_pDmaController->DMA4_IRQENABLE_L3);
; 2725 : 
; 2726 :     g_ffContextSaveMask &= ~HAL_CONTEXTSAVE_DMA;

  00004	e5901d78	 ldr         r1, [r0, #0xD78]
  00008	e5902d68	 ldr         r2, [r0, #0xD68]
  0000c	e5913078	 ldr         r3, [r1, #0x78]
  00010	e3c22004	 bic         r2, r2, #4
  00014	e5803078	 str         r3, [r0, #0x78]
  00018	e591302c	 ldr         r3, [r1, #0x2C]
  0001c	e580302c	 str         r3, [r0, #0x2C]
  00020	e5913018	 ldr         r3, [r1, #0x18]
  00024	e5803018	 str         r3, [r0, #0x18]
  00028	e591301c	 ldr         r3, [r1, #0x1C]
  0002c	e580301c	 str         r3, [r0, #0x1C]
  00030	e5913020	 ldr         r3, [r1, #0x20]
  00034	e5803020	 str         r3, [r0, #0x20]
  00038	e5913024	 ldr         r3, [r1, #0x24]
  0003c	e5802d68	 str         r2, [r0, #0xD68]
  00040	e5803024	 str         r3, [r0, #0x24]

; 2727 : }

  00044	e12fff1e	 bx          lr
  00048		 |$LN6@OALContext@6|
  00048		 |$LN7@OALContext@6|
  00048	00000000	 DCD         |s_dmaController|
  0004c		 |$M50793|

			 ENDP  ; |OALContextSaveDMA|

	EXPORT	|OALContextSaveSMS|

  03384			 AREA	 |.bss|, NOINIT
|s_smsContext| % 0x164
|s_smsContext| % 0x164

  00000			 AREA	 |.pdata|, PDATA
|$T50804| DCD	|$LN5@OALContext@7|
	DCD	0x40000d00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALContextSaveSMS| PROC

; 2737 : {

  00000		 |$LN5@OALContext@7|
  00000		 |$M50801|

; 2738 :     s_smsContext.SMS_SYSCONFIG         = INREG32(&g_pSMSRegs->SMS_SYSCONFIG);

  00000	e59f3028	 ldr         r3, [pc, #0x28]

; 2739 : 
; 2740 :     g_ffContextSaveMask &= ~HAL_CONTEXTSAVE_SMS;

  00004	e59f1020	 ldr         r1, [pc, #0x20]
  00008	e59f0018	 ldr         r0, [pc, #0x18]
  0000c	e5932000	 ldr         r2, [r3]
  00010	e5913000	 ldr         r3, [r1]
  00014	e5922010	 ldr         r2, [r2, #0x10]
  00018	e3c33c02	 bic         r3, r3, #2, 24
  0001c	e5813000	 str         r3, [r1]
  00020	e5802010	 str         r2, [r0, #0x10]

; 2741 : }

  00024	e12fff1e	 bx          lr
  00028		 |$LN6@OALContext@7|
  00028		 |$LN7@OALContext@7|
  00028	00000000	 DCD         |s_smsContext|
  0002c		 |$LN8@OALContext@7|
  0002c	00000000	 DCD         |g_ffContextSaveMask|
  00030		 |$LN9@OALContext@7|
  00030	00000000	 DCD         |g_pSMSRegs|
  00034		 |$M50802|

			 ENDP  ; |OALContextSaveSMS|

	EXPORT	|OALContextSaveVRFB|

  0364c			 AREA	 |.bss|, NOINIT
|s_vrfbContext| % 0xdc
|s_vrfbContext| % 0xdc

  00000			 AREA	 |.pdata|, PDATA
|$T50817| DCD	|$LN10@OALContext@8|
	DCD	0x40001a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALContextSaveVRFB| PROC

; 2751 : {

  00000		 |$LN10@OALContext@8|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M50814|

; 2752 :     int i;
; 2753 : 
; 2754 :     for (i = 0; i < VRFB_ROTATION_CONTEXTS; ++i)

  00004	e59f1058	 ldr         r1, [pc, #0x58]
  00008	e3a0e00c	 mov         lr, #0xC
  0000c	e5912ea0	 ldr         r2, [r1, #0xEA0]
  00010	e2813004	 add         r3, r1, #4
  00014	e281401c	 add         r4, r1, #0x1C
  00018	e2820020	 add         r0, r2, #0x20
  0001c	e0415002	 sub         r5, r1, r2
  00020	e0436002	 sub         r6, r3, r2
  00024		 |$LL3@OALContext@8|

; 2755 :         {
; 2756 :         s_vrfbContext.aVRFB_SMS_ROT_CTRL[i].VRFB_SMS_ROT_CONTROL =
; 2757 :             INREG32(&g_pVRFBRegs->aVRFB_SMS_ROT_CTRL[i].VRFB_SMS_ROT_CONTROL);

  00024	e2403004	 sub         r3, r0, #4
  00028	e5933000	 ldr         r3, [r3]

; 2758 : 
; 2759 :         s_vrfbContext.aVRFB_SMS_ROT_CTRL[i].VRFB_SMS_ROT_SIZE =
; 2760 :             INREG32(&g_pVRFBRegs->aVRFB_SMS_ROT_CTRL[i].VRFB_SMS_ROT_SIZE);
; 2761 : 
; 2762 :         s_vrfbContext.aVRFB_SMS_ROT_CTRL[i].VRFB_SMS_ROT_PHYSICAL_BA =
; 2763 :             INREG32(&g_pVRFBRegs->aVRFB_SMS_ROT_CTRL[i].VRFB_SMS_ROT_PHYSICAL_BA);

  0002c	e0862000	 add         r2, r6, r0
  00030	e25ee001	 subs        lr, lr, #1
  00034	e4843010	 str         r3, [r4], #0x10
  00038	e5903000	 ldr         r3, [r0]
  0003c	e7853000	 str         r3, [r5, +r0]
  00040	e5903004	 ldr         r3, [r0, #4]
  00044	e2800010	 add         r0, r0, #0x10
  00048	e5823000	 str         r3, [r2]
  0004c	1afffff4	 bne         |$LL3@OALContext@8|

; 2764 :         }
; 2765 : 
; 2766 :     g_ffContextSaveMask &= ~HAL_CONTEXTSAVE_VRFB;

  00050	e5913eb0	 ldr         r3, [r1, #0xEB0]
  00054	e3c33080	 bic         r3, r3, #0x80
  00058	e5813eb0	 str         r3, [r1, #0xEB0]

; 2767 : }

  0005c	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  00060	e12fff1e	 bx          lr
  00064		 |$LN11@OALContext@8|
  00064		 |$LN12@OALContext@8|
  00064	00000000	 DCD         |s_vrfbContext|
  00068		 |$M50815|

			 ENDP  ; |OALContextSaveVRFB|

	EXPORT	|OALContextSavePerfTimer|
	IMPORT	|g_pPerfTimer|

  03804			 AREA	 |.bss|, NOINIT
|s_perfTimerContext| % 0x5c
|s_perfTimerContext| % 0x5c

  00000			 AREA	 |.pdata|, PDATA
|$T50826| DCD	|$LN5@OALContext@9|
	DCD	0x40002e00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALContextSavePerfTimer| PROC

; 2778 : {	

  00000		 |$LN5@OALContext@9|
  00000		 |$M50823|

; 2779 : 	s_perfTimerContext.TIDR = INREG32(&g_pPerfTimer->TIDR);		// 0000

  00000	e59f30ac	 ldr         r3, [pc, #0xAC]
  00004	e59f10a4	 ldr         r1, [pc, #0xA4]
  00008	e5932000	 ldr         r2, [r3]
  0000c	e5923000	 ldr         r3, [r2]

; 2780 : 	s_perfTimerContext.TIOCP = INREG32(&g_pPerfTimer->TIOCP);	// 0010
; 2781 : 	s_perfTimerContext.TISTAT = INREG32(&g_pPerfTimer->TISTAT);	// 0014
; 2782 : 	s_perfTimerContext.TISR = INREG32(&g_pPerfTimer->TISR);		// 0018

  00010	e5813000	 str         r3, [r1]
  00014	e5923010	 ldr         r3, [r2, #0x10]

; 2783 : 	s_perfTimerContext.TIER = INREG32(&g_pPerfTimer->TIER);		// 001C
; 2784 : 	s_perfTimerContext.TWER = INREG32(&g_pPerfTimer->TWER);		// 0020

  00018	e5813010	 str         r3, [r1, #0x10]
  0001c	e5923014	 ldr         r3, [r2, #0x14]

; 2785 : 	s_perfTimerContext.TCLR = INREG32(&g_pPerfTimer->TCLR);		// 0024
; 2786 : 	s_perfTimerContext.TCRR = INREG32(&g_pPerfTimer->TCRR);		// 0028

  00020	e5813014	 str         r3, [r1, #0x14]
  00024	e5923018	 ldr         r3, [r2, #0x18]

; 2787 : 	s_perfTimerContext.TLDR = INREG32(&g_pPerfTimer->TLDR);		// 002C
; 2788 : 	s_perfTimerContext.TTGR = INREG32(&g_pPerfTimer->TTGR);		// 0030

  00028	e5813018	 str         r3, [r1, #0x18]
  0002c	e592301c	 ldr         r3, [r2, #0x1C]

; 2789 : 	s_perfTimerContext.TWPS = INREG32(&g_pPerfTimer->TWPS);		// 0034
; 2790 : 	s_perfTimerContext.TMAR = INREG32(&g_pPerfTimer->TMAR);		// 0038

  00030	e581301c	 str         r3, [r1, #0x1C]
  00034	e5923020	 ldr         r3, [r2, #0x20]

; 2791 : 	s_perfTimerContext.TCAR1 = INREG32(&g_pPerfTimer->TCAR1);	// 003C
; 2792 : 	s_perfTimerContext.TSICR = INREG32(&g_pPerfTimer->TSICR);	// 0040

  00038	e5813020	 str         r3, [r1, #0x20]
  0003c	e5923024	 ldr         r3, [r2, #0x24]

; 2793 : 	s_perfTimerContext.TCAR2 = INREG32(&g_pPerfTimer->TCAR2);	// 0044
; 2794 : 	s_perfTimerContext.TPIR = INREG32(&g_pPerfTimer->TPIR);		// 0x48

  00040	e5813024	 str         r3, [r1, #0x24]
  00044	e5923028	 ldr         r3, [r2, #0x28]

; 2795 : 	s_perfTimerContext.TNIR = INREG32(&g_pPerfTimer->TNIR);		// 0x4C
; 2796 : 	s_perfTimerContext.TCVR = INREG32(&g_pPerfTimer->TCVR);		// 0x50

  00048	e5813028	 str         r3, [r1, #0x28]
  0004c	e592302c	 ldr         r3, [r2, #0x2C]

; 2797 : 	s_perfTimerContext.TOCR = INREG32(&g_pPerfTimer->TOCR);		// 0x54
; 2798 : 	s_perfTimerContext.TOWR = INREG32(&g_pPerfTimer->TOWR);		// 0x58

  00050	e581302c	 str         r3, [r1, #0x2C]
  00054	e5923030	 ldr         r3, [r2, #0x30]
  00058	e5813030	 str         r3, [r1, #0x30]
  0005c	e5923034	 ldr         r3, [r2, #0x34]
  00060	e5813034	 str         r3, [r1, #0x34]
  00064	e5923038	 ldr         r3, [r2, #0x38]
  00068	e5813038	 str         r3, [r1, #0x38]
  0006c	e592303c	 ldr         r3, [r2, #0x3C]
  00070	e581303c	 str         r3, [r1, #0x3C]
  00074	e5923040	 ldr         r3, [r2, #0x40]
  00078	e5813040	 str         r3, [r1, #0x40]
  0007c	e5923044	 ldr         r3, [r2, #0x44]
  00080	e5813044	 str         r3, [r1, #0x44]
  00084	e5923048	 ldr         r3, [r2, #0x48]
  00088	e5813048	 str         r3, [r1, #0x48]
  0008c	e592304c	 ldr         r3, [r2, #0x4C]
  00090	e581304c	 str         r3, [r1, #0x4C]
  00094	e5923050	 ldr         r3, [r2, #0x50]
  00098	e5813050	 str         r3, [r1, #0x50]
  0009c	e5923054	 ldr         r3, [r2, #0x54]
  000a0	e5813054	 str         r3, [r1, #0x54]
  000a4	e5923058	 ldr         r3, [r2, #0x58]
  000a8	e5813058	 str         r3, [r1, #0x58]

; 2799 : }

  000ac	e12fff1e	 bx          lr
  000b0		 |$LN6@OALContext@9|
  000b0		 |$LN7@OALContext@9|
  000b0	00000000	 DCD         |s_perfTimerContext|
  000b4		 |$LN8@OALContext@9|
  000b4	00000000	 DCD         |g_pPerfTimer|
  000b8		 |$M50824|

			 ENDP  ; |OALContextSavePerfTimer|

	EXPORT	|OALContextSaveMux|

  00000			 AREA	 |.pdata|, PDATA
|$T50837| DCD	|$LN8@OALContext@10|
	DCD	0x40000f00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALContextSaveMux| PROC

; 2809 : {

  00000		 |$LN8@OALContext@10|
  00000		 |$M50834|

; 2810 :     // Save all the PADCONF so the values are retained on wakeup from CORE OFF
; 2811 :     SETREG32(&g_pSysCtrlGenReg->CONTROL_PADCONF_OFF, STARTSAVE);

  00000	e59f3030	 ldr         r3, [pc, #0x30]
  00004	e5932000	 ldr         r2, [r3]
  00008	e5923000	 ldr         r3, [r2]
  0000c	e3833002	 orr         r3, r3, #2
  00010	e4823084	 str         r3, [r2], #0x84
  00014		 |$LL2@OALContext@10|

; 2812 :     while ((INREG32(&g_pSysCtrlGenReg->CONTROL_GENERAL_PURPOSE_STATUS) & SAVEDONE) == 0);

  00014	e5923000	 ldr         r3, [r2]
  00018	e3130001	 tst         r3, #1
  0001c	0afffffc	 beq         |$LL2@OALContext@10|

; 2813 : 
; 2814 :     g_ffContextSaveMask &= ~HAL_CONTEXTSAVE_PINMUX;

  00020	e59f200c	 ldr         r2, [pc, #0xC]
  00024	e5923000	 ldr         r3, [r2]
  00028	e3c33c01	 bic         r3, r3, #1, 24
  0002c	e5823000	 str         r3, [r2]

; 2815 : }

  00030	e12fff1e	 bx          lr
  00034		 |$LN9@OALContext@10|
  00034		 |$LN10@OALContext@10|
  00034	00000000	 DCD         |g_ffContextSaveMask|
  00038		 |$LN11@OALContext@10|
  00038	00000000	 DCD         |g_pSysCtrlGenReg|
  0003c		 |$M50835|

			 ENDP  ; |OALContextSaveMux|

	EXPORT	|OALContextRestoreGPIO|

  00000			 AREA	 |.pdata|, PDATA
|$T50849| DCD	|$LN10@OALContext@11|
	DCD	0x40003401
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALContextRestoreGPIO| PROC

; 2825 : {

  00000		 |$LN10@OALContext@11|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M50846|

; 2826 :     UINT32 i;
; 2827 : 
; 2828 :     for(i=0; i< OMAP_GPIO_BANK_TO_RESTORE; i++)

  00004	e59f30c0	 ldr         r3, [pc, #0xC0]
  00008	e59fe0b8	 ldr         lr, [pc, #0xB8]
  0000c	e3a04006	 mov         r4, #6
  00010	e2830010	 add         r0, r3, #0x10
  00014		 |$LL3@OALContext@11|

; 2829 : 	{
; 2830 :         OUTREG32(&s_rgGpioRegsAddr[i]->SYSCONFIG, s_rgGpioContext[i].SYSCONFIG );

  00014	e59e2000	 ldr         r2, [lr]
  00018	e5903000	 ldr         r3, [r0]

; 2831 :         OUTREG32(&s_rgGpioRegsAddr[i]->CTRL, s_rgGpioContext[i].CTRL);
; 2832 :         OUTREG32(&s_rgGpioRegsAddr[i]->DATAOUT, s_rgGpioContext[i].DATAOUT);
; 2833 :         OUTREG32(&s_rgGpioRegsAddr[i]->OE, s_rgGpioContext[i].OE);
; 2834 :         OUTREG32(&s_rgGpioRegsAddr[i]->LEVELDETECT0, s_rgGpioContext[i].LEVELDETECT0);
; 2835 :         OUTREG32(&s_rgGpioRegsAddr[i]->LEVELDETECT1, s_rgGpioContext[i].LEVELDETECT1);
; 2836 :         OUTREG32(&s_rgGpioRegsAddr[i]->RISINGDETECT, s_rgGpioContext[i].RISINGDETECT);
; 2837 :         OUTREG32(&s_rgGpioRegsAddr[i]->FALLINGDETECT, s_rgGpioContext[i].FALLINGDETECT);
; 2838 : 
; 2839 :         // Note : Context restore of debouncing register is removed since no modules are 
; 2840 :         // using h/w debouncing. If debounce registers are restored, gpio fclk should be 
; 2841 :         // enabled and enough delay should be provided before disabling the gpio fclk
; 2842 :         // so that debouncing logic sync in h/w and Per domain acks idle request.
; 2843 : 
; 2844 :         OUTREG32(&s_rgGpioRegsAddr[i]->DEBOUNCENABLE, s_rgGpioContext[i].DEBOUNCENABLE);
; 2845 :         OUTREG32(&s_rgGpioRegsAddr[i]->DEBOUNCINGTIME, s_rgGpioContext[i].DEBOUNCINGTIME);
; 2846 : 
; 2847 :         OUTREG32(&s_rgGpioRegsAddr[i]->IRQENABLE1, s_rgGpioContext[i].IRQENABLE1);
; 2848 :         OUTREG32(&s_rgGpioRegsAddr[i]->WAKEUPENABLE, s_rgGpioContext[i].WAKEUPENABLE);
; 2849 :         OUTREG32(&s_rgGpioRegsAddr[i]->IRQENABLE2, s_rgGpioContext[i].IRQENABLE2);

  0001c	e280101c	 add         r1, r0, #0x1C
  00020	e2544001	 subs        r4, r4, #1
  00024	e5823010	 str         r3, [r2, #0x10]
  00028	e59e2000	 ldr         r2, [lr]
  0002c	e5903020	 ldr         r3, [r0, #0x20]
  00030	e5823030	 str         r3, [r2, #0x30]
  00034	e59e2000	 ldr         r2, [lr]
  00038	e590302c	 ldr         r3, [r0, #0x2C]
  0003c	e582303c	 str         r3, [r2, #0x3C]
  00040	e59e2000	 ldr         r2, [lr]
  00044	e5903024	 ldr         r3, [r0, #0x24]
  00048	e5823034	 str         r3, [r2, #0x34]
  0004c	e59e2000	 ldr         r2, [lr]
  00050	e5903030	 ldr         r3, [r0, #0x30]
  00054	e5823040	 str         r3, [r2, #0x40]
  00058	e59e2000	 ldr         r2, [lr]
  0005c	e5903034	 ldr         r3, [r0, #0x34]
  00060	e5823044	 str         r3, [r2, #0x44]
  00064	e59e2000	 ldr         r2, [lr]
  00068	e5903038	 ldr         r3, [r0, #0x38]
  0006c	e5823048	 str         r3, [r2, #0x48]
  00070	e59e2000	 ldr         r2, [lr]
  00074	e590303c	 ldr         r3, [r0, #0x3C]
  00078	e582304c	 str         r3, [r2, #0x4C]
  0007c	e59e2000	 ldr         r2, [lr]
  00080	e5903040	 ldr         r3, [r0, #0x40]
  00084	e5823050	 str         r3, [r2, #0x50]
  00088	e59e2000	 ldr         r2, [lr]
  0008c	e5903044	 ldr         r3, [r0, #0x44]
  00090	e5823054	 str         r3, [r2, #0x54]
  00094	e59e2000	 ldr         r2, [lr]
  00098	e590300c	 ldr         r3, [r0, #0xC]
  0009c	e582301c	 str         r3, [r2, #0x1C]
  000a0	e59e2000	 ldr         r2, [lr]
  000a4	e5903010	 ldr         r3, [r0, #0x10]
  000a8	e28000a0	 add         r0, r0, #0xA0
  000ac	e5823020	 str         r3, [r2, #0x20]
  000b0	e49e2004	 ldr         r2, [lr], #4
  000b4	e5913000	 ldr         r3, [r1]
  000b8	e582302c	 str         r3, [r2, #0x2C]
  000bc	1affffd4	 bne         |$LL3@OALContext@11|

; 2850 : 	}
; 2851 : }

  000c0	e8bd4010	 ldmia       sp!, {r4, lr}
  000c4	e12fff1e	 bx          lr
  000c8		 |$LN11@OALContext@11|
  000c8		 |$LN12@OALContext@11|
  000c8	00000000	 DCD         |s_rgGpioRegsAddr|
  000cc		 |$LN13@OALContext@11|
  000cc	00000000	 DCD         |s_rgGpioContext|
  000d0		 |$M50847|

			 ENDP  ; |OALContextRestoreGPIO|

	EXPORT	|OALContextRestoreINTC|

  00000			 AREA	 |.pdata|, PDATA
|$T50861| DCD	|$LN10@OALContext@12|
	DCD	0x40003001
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALContextRestoreINTC| PROC

; 2861 : {

  00000		 |$LN10@OALContext@12|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M50858|

; 2862 :     UINT32 i;
; 2863 : 
; 2864 :     OUTREG32(&g_pIntr->pICLRegs->INTC_SYSCONFIG, s_intcContext.INTC_SYSCONFIG);

  00004	e59f00b0	 ldr         r0, [pc, #0xB0]
  00008	e59fe0a8	 ldr         lr, [pc, #0xA8]

; 2865 :     OUTREG32(&g_pIntr->pICLRegs->INTC_PROTECTION, s_intcContext.INTC_PROTECTION);
; 2866 :     OUTREG32(&g_pIntr->pICLRegs->INTC_IDLE, s_intcContext.INTC_IDLE);
; 2867 :     OUTREG32(&g_pIntr->pICLRegs->INTC_THRESHOLD, s_intcContext.INTC_THRESHOLD);
; 2868 : 
; 2869 :     for (i = 0; i < dimof(g_pIntr->pICLRegs->INTC_ILR); i++)

  0000c	e3a01000	 mov         r1, #0
  00010	e5903000	 ldr         r3, [r0]
  00014	e59e2010	 ldr         r2, [lr, #0x10]
  00018	e28e4c01	 add         r4, lr, #1, 24
  0001c	e5933000	 ldr         r3, [r3]
  00020	e5832010	 str         r2, [r3, #0x10]
  00024	e5903000	 ldr         r3, [r0]
  00028	e59e204c	 ldr         r2, [lr, #0x4C]
  0002c	e5933000	 ldr         r3, [r3]
  00030	e583204c	 str         r2, [r3, #0x4C]
  00034	e5903000	 ldr         r3, [r0]
  00038	e59e2050	 ldr         r2, [lr, #0x50]
  0003c	e5933000	 ldr         r3, [r3]
  00040	e5832050	 str         r2, [r3, #0x50]
  00044	e5903000	 ldr         r3, [r0]
  00048	e59e2068	 ldr         r2, [lr, #0x68]
  0004c	e5933000	 ldr         r3, [r3]
  00050	e5832068	 str         r2, [r3, #0x68]
  00054		 |$LL3@OALContext@12|
  00054	e5903000	 ldr         r3, [r0]

; 2870 :         OUTREG32(&g_pIntr->pICLRegs->INTC_ILR[i], s_intcContext.INTC_ILR[i]);

  00058	e7912004	 ldr         r2, [r1, +r4]
  0005c	e5933000	 ldr         r3, [r3]
  00060	e0813003	 add         r3, r1, r3
  00064	e2811004	 add         r1, r1, #4
  00068	e3510d06	 cmp         r1, #6, 26
  0006c	e5832100	 str         r2, [r3, #0x100]
  00070	3afffff7	 bcc         |$LL3@OALContext@12|

; 2871 : 
; 2872 :     OUTREG32(&g_pIntr->pICLRegs->INTC_MIR_CLEAR0, ~s_intcContext.INTC_MIR0);

  00074	e5902000	 ldr         r2, [r0]
  00078	e59e3084	 ldr         r3, [lr, #0x84]
  0007c	e5922000	 ldr         r2, [r2]
  00080	e1e03003	 mvn         r3, r3
  00084	e5823088	 str         r3, [r2, #0x88]

; 2873 :     OUTREG32(&g_pIntr->pICLRegs->INTC_MIR_CLEAR1, ~s_intcContext.INTC_MIR1);

  00088	e5902000	 ldr         r2, [r0]
  0008c	e59e30a4	 ldr         r3, [lr, #0xA4]
  00090	e5922000	 ldr         r2, [r2]
  00094	e1e03003	 mvn         r3, r3
  00098	e58230a8	 str         r3, [r2, #0xA8]

; 2874 :     OUTREG32(&g_pIntr->pICLRegs->INTC_MIR_CLEAR2, ~s_intcContext.INTC_MIR2);

  0009c	e5902000	 ldr         r2, [r0]
  000a0	e59e30c4	 ldr         r3, [lr, #0xC4]
  000a4	e5922000	 ldr         r2, [r2]
  000a8	e1e03003	 mvn         r3, r3
  000ac	e58230c8	 str         r3, [r2, #0xC8]

; 2875 : }

  000b0	e8bd4010	 ldmia       sp!, {r4, lr}
  000b4	e12fff1e	 bx          lr
  000b8		 |$LN11@OALContext@12|
  000b8		 |$LN12@OALContext@12|
  000b8	00000000	 DCD         |s_intcContext|
  000bc		 |$LN13@OALContext@12|
  000bc	00000000	 DCD         |g_pIntr|
  000c0		 |$M50859|

			 ENDP  ; |OALContextRestoreINTC|

	EXPORT	|OALContextRestorePRCM|
	IMPORT	|PrcmDomainSetClockState|
	IMPORT	|PrcmContextRestore|

  00000			 AREA	 |.pdata|, PDATA
|$T50871| DCD	|$LN5@OALContext@13|
	DCD	0x40005201
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALContextRestorePRCM| PROC

; 2885 : {

  00000		 |$LN5@OALContext@13|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M50868|

; 2886 :     PrcmContextRestore();

  00004	eb000000	 bl          PrcmContextRestore

; 2887 :     
; 2888 :     OUTREG32(&g_PrcmCm.pOMAP_OCP_SYSTEM_CM->CM_SYSCONFIG, s_ocpSysCmContext.CM_SYSCONFIG);

  00008	e59fe134	 ldr         lr, [pc, #0x134]
  0000c	e59f612c	 ldr         r6, [pc, #0x12C]

; 2889 : 
; 2890 :     OUTREG32(&g_PrcmCm.pOMAP_CORE_CM->CM_AUTOIDLE1_CORE, s_coreCmContext.CM_AUTOIDLE1_CORE);

  00010	e59f1124	 ldr         r1, [pc, #0x124]
  00014	e59e3010	 ldr         r3, [lr, #0x10]
  00018	e5962030	 ldr         r2, [r6, #0x30]

; 2891 :     OUTREG32(&g_PrcmCm.pOMAP_CORE_CM->CM_AUTOIDLE2_CORE, s_coreCmContext.CM_AUTOIDLE2_CORE);
; 2892 :     OUTREG32(&g_PrcmCm.pOMAP_CORE_CM->CM_AUTOIDLE3_CORE, s_coreCmContext.CM_AUTOIDLE3_CORE);
; 2893 : 
; 2894 :     OUTREG32(&g_PrcmCm.pOMAP_WKUP_CM->CM_FCLKEN_WKUP, s_wkupCmContext.CM_FCLKEN_WKUP);
; 2895 :     OUTREG32(&g_PrcmCm.pOMAP_WKUP_CM->CM_ICLKEN_WKUP, s_wkupCmContext.CM_ICLKEN_WKUP);
; 2896 :     OUTREG32(&g_PrcmCm.pOMAP_WKUP_CM->CM_AUTOIDLE_WKUP, s_wkupCmContext.CM_AUTOIDLE_WKUP);
; 2897 : 
; 2898 :     OUTREG32(&g_PrcmCm.pOMAP_CLOCK_CONTROL_CM->CM_AUTOIDLE2_PLL, DPLL_AUTOIDLE_DISABLED);
; 2899 :     OUTREG32(&g_PrcmCm.pOMAP_CLOCK_CONTROL_CM->CM_CLKSEL4_PLL, s_clkCtrlCmContext.CM_CLKSEL4_PLL);

  0001c	e59f4114	 ldr         r4, [pc, #0x114]
  00020	e3a07000	 mov         r7, #0
  00024	e5823010	 str         r3, [r2, #0x10]
  00028	e5913030	 ldr         r3, [r1, #0x30]
  0002c	e5962004	 ldr         r2, [r6, #4]

; 2900 :     OUTREG32(&g_PrcmCm.pOMAP_CLOCK_CONTROL_CM->CM_CLKSEL5_PLL, s_clkCtrlCmContext.CM_CLKSEL5_PLL);
; 2901 :     OUTREG32(&g_PrcmCm.pOMAP_CLOCK_CONTROL_CM->CM_CLKEN2_PLL, s_clkCtrlCmContext.CM_CLKEN2_PLL);
; 2902 :     OUTREG32(&g_PrcmCm.pOMAP_CLOCK_CONTROL_CM->CM_AUTOIDLE2_PLL, s_clkCtrlCmContext.CM_AUTOIDLE2_PLL);
; 2903 : 
; 2904 :     OUTREG32(&g_PrcmCm.pOMAP_GLOBAL_CM->CM_POLCTRL, s_globalCmContext.CM_POLCTRL);

  00030	e59f00fc	 ldr         r0, [pc, #0xFC]

; 2905 : 
; 2906 :     OUTREG32(&g_PrcmCm.pOMAP_CLOCK_CONTROL_CM->CM_CLKOUT_CTRL, s_clkCtrlCmContext.CM_CLKOUT_CTRL);
; 2907 : 
; 2908 :     // Restore EMU CM Registers
; 2909 :     OUTREG32(&g_PrcmCm.pOMAP_EMU_CM->CM_CLKSEL1_EMU,  s_emuCmContext.CM_CLKSEL1_EMU);

  00034	e59f50f4	 ldr         r5, [pc, #0xF4]
  00038	e5823030	 str         r3, [r2, #0x30]
  0003c	e5962004	 ldr         r2, [r6, #4]
  00040	e5913034	 ldr         r3, [r1, #0x34]
  00044	e5823034	 str         r3, [r2, #0x34]
  00048	e5962004	 ldr         r2, [r6, #4]
  0004c	e5913038	 ldr         r3, [r1, #0x38]
  00050	e5823038	 str         r3, [r2, #0x38]
  00054	e59e2014	 ldr         r2, [lr, #0x14]
  00058	e5963000	 ldr         r3, [r6]
  0005c	e5832000	 str         r2, [r3]
  00060	e59e1024	 ldr         r1, [lr, #0x24]
  00064	e5963000	 ldr         r3, [r6]

; 2910 :     OUTREG32(&g_PrcmCm.pOMAP_EMU_CM->CM_CLKSTCTRL_EMU, s_emuCmContext.CM_CLKSTCTRL_EMU);
; 2911 :     OUTREG32(&g_PrcmCm.pOMAP_EMU_CM->CM_CLKSEL2_EMU, s_emuCmContext.CM_CLKSEL2_EMU);
; 2912 :     OUTREG32(&g_PrcmCm.pOMAP_EMU_CM->CM_CLKSEL3_EMU, s_emuCmContext.CM_CLKSEL3_EMU);
; 2913 : 
; 2914 :     PrcmDomainSetClockState(POWERDOMAIN_EMULATION, CLOCKDOMAIN_EMULATION, CLKSTCTRL_AUTOMATIC);

  00068	e3a02003	 mov         r2, #3
  0006c	e5831010	 str         r1, [r3, #0x10]
  00070	e5961000	 ldr         r1, [r6]
  00074	e59e3044	 ldr         r3, [lr, #0x44]
  00078	e5813030	 str         r3, [r1, #0x30]
  0007c	e5963034	 ldr         r3, [r6, #0x34]
  00080	e5837034	 str         r7, [r3, #0x34]
  00084	e5961034	 ldr         r1, [r6, #0x34]
  00088	e594304c	 ldr         r3, [r4, #0x4C]
  0008c	e581304c	 str         r3, [r1, #0x4C]
  00090	e5961034	 ldr         r1, [r6, #0x34]
  00094	e5943050	 ldr         r3, [r4, #0x50]
  00098	e5813050	 str         r3, [r1, #0x50]
  0009c	e5961034	 ldr         r1, [r6, #0x34]
  000a0	e5943004	 ldr         r3, [r4, #4]
  000a4	e5813004	 str         r3, [r1, #4]
  000a8	e5961034	 ldr         r1, [r6, #0x34]
  000ac	e5943034	 ldr         r3, [r4, #0x34]
  000b0	e5813034	 str         r3, [r1, #0x34]
  000b4	e596102c	 ldr         r1, [r6, #0x2C]
  000b8	e590309c	 ldr         r3, [r0, #0x9C]
  000bc	e3a00004	 mov         r0, #4
  000c0	e581309c	 str         r3, [r1, #0x9C]
  000c4	e5961034	 ldr         r1, [r6, #0x34]
  000c8	e5943070	 ldr         r3, [r4, #0x70]
  000cc	e5813070	 str         r3, [r1, #0x70]
  000d0	e5961010	 ldr         r1, [r6, #0x10]
  000d4	e5953040	 ldr         r3, [r5, #0x40]
  000d8	e5813040	 str         r3, [r1, #0x40]
  000dc	e5961010	 ldr         r1, [r6, #0x10]
  000e0	e5953048	 ldr         r3, [r5, #0x48]
  000e4	e5813048	 str         r3, [r1, #0x48]
  000e8	e5961010	 ldr         r1, [r6, #0x10]
  000ec	e5953050	 ldr         r3, [r5, #0x50]
  000f0	e5813050	 str         r3, [r1, #0x50]
  000f4	e5961010	 ldr         r1, [r6, #0x10]
  000f8	e5953054	 ldr         r3, [r5, #0x54]
  000fc	e5813054	 str         r3, [r1, #0x54]
  00100	e3a01004	 mov         r1, #4
  00104	eb000000	 bl          PrcmDomainSetClockState

; 2915 :     PrcmDomainSetClockState(POWERDOMAIN_NEON, CLOCKDOMAIN_NEON, CLKSTCTRL_AUTOMATIC);

  00108	e3a02003	 mov         r2, #3
  0010c	e3a01007	 mov         r1, #7
  00110	e3a00007	 mov         r0, #7
  00114	eb000000	 bl          PrcmDomainSetClockState

; 2916 :     PrcmDomainSetClockState(POWERDOMAIN_IVA2, CLOCKDOMAIN_IVA2, CLKSTCTRL_AUTOMATIC);

  00118	e3a02003	 mov         r2, #3
  0011c	e3a01008	 mov         r1, #8
  00120	e3a00008	 mov         r0, #8
  00124	eb000000	 bl          PrcmDomainSetClockState

; 2917 : }

  00128	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  0012c	e12fff1e	 bx          lr
  00130		 |$LN6@OALContext@13|
  00130		 |$LN7@OALContext@13|
  00130	00000000	 DCD         |s_emuCmContext|
  00134		 |$LN8@OALContext@13|
  00134	00000000	 DCD         |s_globalCmContext|
  00138		 |$LN9@OALContext@13|
  00138	00000000	 DCD         |s_clkCtrlCmContext|
  0013c		 |$LN10@OALContext@13|
  0013c	00000000	 DCD         |s_coreCmContext|
  00140		 |$LN11@OALContext@13|
  00140	00000000	 DCD         |g_PrcmCm|
  00144		 |$LN12@OALContext@13|
  00144	00000000	 DCD         |s_ocpSysCmContext|
  00148		 |$M50869|

			 ENDP  ; |OALContextRestorePRCM|

	EXPORT	|OALContextRestoreGPMC|

  00000			 AREA	 |.pdata|, PDATA
|$T50885| DCD	|$LN13@OALContext@14|
	DCD	0x4000da00
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALContextRestoreGPMC| PROC

; 2927 : {

  00000		 |$LN13@OALContext@14|
  00000		 |$M50882|

; 2928 : 
; 2929 :     OUTREG32(&g_pGPMCRegs->GPMC_SYSCONFIG, s_gpmcContext.GPMC_SYSCONFIG);

  00000	e59f035c	 ldr         r0, [pc, #0x35C]
  00004	e59f1354	 ldr         r1, [pc, #0x354]
  00008	e5902000	 ldr         r2, [r0]
  0000c	e5913010	 ldr         r3, [r1, #0x10]
  00010	e5823010	 str         r3, [r2, #0x10]

; 2930 :     OUTREG32(&g_pGPMCRegs->GPMC_IRQENABLE, s_gpmcContext.GPMC_IRQENABLE);

  00014	e5902000	 ldr         r2, [r0]
  00018	e591301c	 ldr         r3, [r1, #0x1C]
  0001c	e582301c	 str         r3, [r2, #0x1C]

; 2931 :     OUTREG32(&g_pGPMCRegs->GPMC_TIMEOUT_CONTROL, s_gpmcContext.GPMC_TIMEOUT_CONTROL);

  00020	e5902000	 ldr         r2, [r0]
  00024	e5913040	 ldr         r3, [r1, #0x40]
  00028	e5823040	 str         r3, [r2, #0x40]

; 2932 :     OUTREG32(&g_pGPMCRegs->GPMC_CONFIG, s_gpmcContext.GPMC_CONFIG);

  0002c	e5902000	 ldr         r2, [r0]
  00030	e5913050	 ldr         r3, [r1, #0x50]
  00034	e5823050	 str         r3, [r2, #0x50]

; 2933 :     OUTREG32(&g_pGPMCRegs->GPMC_PREFETCH_CONFIG1, s_gpmcContext.GPMC_PREFETCH_CONFIG1);

  00038	e5902000	 ldr         r2, [r0]
  0003c	e59131e0	 ldr         r3, [r1, #0x1E0]
  00040	e58231e0	 str         r3, [r2, #0x1E0]

; 2934 :     OUTREG32(&g_pGPMCRegs->GPMC_PREFETCH_CONFIG2, s_gpmcContext.GPMC_PREFETCH_CONFIG2);

  00044	e5902000	 ldr         r2, [r0]
  00048	e59131e4	 ldr         r3, [r1, #0x1E4]
  0004c	e58231e4	 str         r3, [r2, #0x1E4]

; 2935 :     OUTREG32(&g_pGPMCRegs->GPMC_PREFETCH_CONTROL, s_gpmcContext.GPMC_PREFETCH_CONTROL);

  00050	e5902000	 ldr         r2, [r0]
  00054	e59131ec	 ldr         r3, [r1, #0x1EC]
  00058	e58231ec	 str         r3, [r2, #0x1EC]

; 2936 :     if(s_gpmcContext.GPMC_CONFIG7_0 & GPMC_CSVALID)

  0005c	e5913078	 ldr         r3, [r1, #0x78]
  00060	e3130040	 tst         r3, #0x40
  00064	0a000014	 beq         |$LN8@OALContext@14|

; 2937 :     {
; 2938 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG1_0, s_gpmcContext.GPMC_CONFIG1_0);

  00068	e5902000	 ldr         r2, [r0]
  0006c	e5913060	 ldr         r3, [r1, #0x60]
  00070	e5823060	 str         r3, [r2, #0x60]

; 2939 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG2_0, s_gpmcContext.GPMC_CONFIG2_0);

  00074	e5902000	 ldr         r2, [r0]
  00078	e5913064	 ldr         r3, [r1, #0x64]
  0007c	e5823064	 str         r3, [r2, #0x64]

; 2940 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG3_0, s_gpmcContext.GPMC_CONFIG3_0);

  00080	e5902000	 ldr         r2, [r0]
  00084	e5913068	 ldr         r3, [r1, #0x68]
  00088	e5823068	 str         r3, [r2, #0x68]

; 2941 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG4_0, s_gpmcContext.GPMC_CONFIG4_0);

  0008c	e5902000	 ldr         r2, [r0]
  00090	e591306c	 ldr         r3, [r1, #0x6C]
  00094	e582306c	 str         r3, [r2, #0x6C]

; 2942 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG5_0, s_gpmcContext.GPMC_CONFIG5_0);

  00098	e5902000	 ldr         r2, [r0]
  0009c	e5913070	 ldr         r3, [r1, #0x70]
  000a0	e5823070	 str         r3, [r2, #0x70]

; 2943 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG6_0, s_gpmcContext.GPMC_CONFIG6_0);

  000a4	e5902000	 ldr         r2, [r0]
  000a8	e5913074	 ldr         r3, [r1, #0x74]
  000ac	e5823074	 str         r3, [r2, #0x74]

; 2944 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG7_0, s_gpmcContext.GPMC_CONFIG7_0);

  000b0	e5902000	 ldr         r2, [r0]
  000b4	e5913078	 ldr         r3, [r1, #0x78]
  000b8	e5823078	 str         r3, [r2, #0x78]
  000bc		 |$LN8@OALContext@14|

; 2945 :     }
; 2946 :     if(s_gpmcContext.GPMC_CONFIG7_1 & GPMC_CSVALID)

  000bc	e59130a8	 ldr         r3, [r1, #0xA8]
  000c0	e3130040	 tst         r3, #0x40
  000c4	0a000014	 beq         |$LN7@OALContext@14|

; 2947 :     {
; 2948 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG1_1, s_gpmcContext.GPMC_CONFIG1_1);

  000c8	e5902000	 ldr         r2, [r0]
  000cc	e5913090	 ldr         r3, [r1, #0x90]
  000d0	e5823090	 str         r3, [r2, #0x90]

; 2949 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG2_1, s_gpmcContext.GPMC_CONFIG2_1);

  000d4	e5902000	 ldr         r2, [r0]
  000d8	e5913094	 ldr         r3, [r1, #0x94]
  000dc	e5823094	 str         r3, [r2, #0x94]

; 2950 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG3_1, s_gpmcContext.GPMC_CONFIG3_1);

  000e0	e5902000	 ldr         r2, [r0]
  000e4	e5913098	 ldr         r3, [r1, #0x98]
  000e8	e5823098	 str         r3, [r2, #0x98]

; 2951 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG4_1, s_gpmcContext.GPMC_CONFIG4_1);

  000ec	e5902000	 ldr         r2, [r0]
  000f0	e591309c	 ldr         r3, [r1, #0x9C]
  000f4	e582309c	 str         r3, [r2, #0x9C]

; 2952 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG5_1, s_gpmcContext.GPMC_CONFIG5_1);

  000f8	e5902000	 ldr         r2, [r0]
  000fc	e59130a0	 ldr         r3, [r1, #0xA0]
  00100	e58230a0	 str         r3, [r2, #0xA0]

; 2953 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG6_1, s_gpmcContext.GPMC_CONFIG6_1);

  00104	e5902000	 ldr         r2, [r0]
  00108	e59130a4	 ldr         r3, [r1, #0xA4]
  0010c	e58230a4	 str         r3, [r2, #0xA4]

; 2954 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG7_1, s_gpmcContext.GPMC_CONFIG7_1);

  00110	e5902000	 ldr         r2, [r0]
  00114	e59130a8	 ldr         r3, [r1, #0xA8]
  00118	e58230a8	 str         r3, [r2, #0xA8]
  0011c		 |$LN7@OALContext@14|

; 2955 :     }
; 2956 :     if(s_gpmcContext.GPMC_CONFIG7_2 & GPMC_CSVALID)

  0011c	e59130d8	 ldr         r3, [r1, #0xD8]
  00120	e3130040	 tst         r3, #0x40
  00124	0a000014	 beq         |$LN6@OALContext@14|

; 2957 :     {
; 2958 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG1_2, s_gpmcContext.GPMC_CONFIG1_2);

  00128	e5902000	 ldr         r2, [r0]
  0012c	e59130c0	 ldr         r3, [r1, #0xC0]
  00130	e58230c0	 str         r3, [r2, #0xC0]

; 2959 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG2_2, s_gpmcContext.GPMC_CONFIG2_2);

  00134	e5902000	 ldr         r2, [r0]
  00138	e59130c4	 ldr         r3, [r1, #0xC4]
  0013c	e58230c4	 str         r3, [r2, #0xC4]

; 2960 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG3_2, s_gpmcContext.GPMC_CONFIG3_2);

  00140	e5902000	 ldr         r2, [r0]
  00144	e59130c8	 ldr         r3, [r1, #0xC8]
  00148	e58230c8	 str         r3, [r2, #0xC8]

; 2961 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG4_2, s_gpmcContext.GPMC_CONFIG4_2);

  0014c	e5902000	 ldr         r2, [r0]
  00150	e59130cc	 ldr         r3, [r1, #0xCC]
  00154	e58230cc	 str         r3, [r2, #0xCC]

; 2962 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG5_2, s_gpmcContext.GPMC_CONFIG5_2);

  00158	e5902000	 ldr         r2, [r0]
  0015c	e59130d0	 ldr         r3, [r1, #0xD0]
  00160	e58230d0	 str         r3, [r2, #0xD0]

; 2963 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG6_2, s_gpmcContext.GPMC_CONFIG6_2);

  00164	e5902000	 ldr         r2, [r0]
  00168	e59130d4	 ldr         r3, [r1, #0xD4]
  0016c	e58230d4	 str         r3, [r2, #0xD4]

; 2964 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG7_2, s_gpmcContext.GPMC_CONFIG7_2);

  00170	e5902000	 ldr         r2, [r0]
  00174	e59130d8	 ldr         r3, [r1, #0xD8]
  00178	e58230d8	 str         r3, [r2, #0xD8]
  0017c		 |$LN6@OALContext@14|

; 2965 :     }
; 2966 :     if(s_gpmcContext.GPMC_CONFIG7_3 & GPMC_CSVALID)

  0017c	e5913108	 ldr         r3, [r1, #0x108]
  00180	e3130040	 tst         r3, #0x40
  00184	0a000014	 beq         |$LN5@OALContext@14|

; 2967 :     {
; 2968 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG1_3, s_gpmcContext.GPMC_CONFIG1_3);

  00188	e5902000	 ldr         r2, [r0]
  0018c	e59130f0	 ldr         r3, [r1, #0xF0]
  00190	e58230f0	 str         r3, [r2, #0xF0]

; 2969 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG2_3, s_gpmcContext.GPMC_CONFIG2_3);

  00194	e5902000	 ldr         r2, [r0]
  00198	e59130f4	 ldr         r3, [r1, #0xF4]
  0019c	e58230f4	 str         r3, [r2, #0xF4]

; 2970 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG3_3, s_gpmcContext.GPMC_CONFIG3_3);

  001a0	e5902000	 ldr         r2, [r0]
  001a4	e59130f8	 ldr         r3, [r1, #0xF8]
  001a8	e58230f8	 str         r3, [r2, #0xF8]

; 2971 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG4_3, s_gpmcContext.GPMC_CONFIG4_3);

  001ac	e5902000	 ldr         r2, [r0]
  001b0	e59130fc	 ldr         r3, [r1, #0xFC]
  001b4	e58230fc	 str         r3, [r2, #0xFC]

; 2972 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG5_3, s_gpmcContext.GPMC_CONFIG5_3);

  001b8	e5902000	 ldr         r2, [r0]
  001bc	e5913100	 ldr         r3, [r1, #0x100]
  001c0	e5823100	 str         r3, [r2, #0x100]

; 2973 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG6_3, s_gpmcContext.GPMC_CONFIG6_3);

  001c4	e5902000	 ldr         r2, [r0]
  001c8	e5913104	 ldr         r3, [r1, #0x104]
  001cc	e5823104	 str         r3, [r2, #0x104]

; 2974 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG7_3, s_gpmcContext.GPMC_CONFIG7_3);

  001d0	e5902000	 ldr         r2, [r0]
  001d4	e5913108	 ldr         r3, [r1, #0x108]
  001d8	e5823108	 str         r3, [r2, #0x108]
  001dc		 |$LN5@OALContext@14|

; 2975 :     }
; 2976 :     if(s_gpmcContext.GPMC_CONFIG7_4 & GPMC_CSVALID)

  001dc	e5913138	 ldr         r3, [r1, #0x138]
  001e0	e3130040	 tst         r3, #0x40
  001e4	0a000014	 beq         |$LN4@OALContext@14|

; 2977 :     {
; 2978 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG1_4, s_gpmcContext.GPMC_CONFIG1_4);

  001e8	e5902000	 ldr         r2, [r0]
  001ec	e5913120	 ldr         r3, [r1, #0x120]
  001f0	e5823120	 str         r3, [r2, #0x120]

; 2979 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG2_4, s_gpmcContext.GPMC_CONFIG2_4);

  001f4	e5902000	 ldr         r2, [r0]
  001f8	e5913124	 ldr         r3, [r1, #0x124]
  001fc	e5823124	 str         r3, [r2, #0x124]

; 2980 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG3_4, s_gpmcContext.GPMC_CONFIG3_4);

  00200	e5902000	 ldr         r2, [r0]
  00204	e5913128	 ldr         r3, [r1, #0x128]
  00208	e5823128	 str         r3, [r2, #0x128]

; 2981 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG4_4, s_gpmcContext.GPMC_CONFIG4_4);

  0020c	e5902000	 ldr         r2, [r0]
  00210	e591312c	 ldr         r3, [r1, #0x12C]
  00214	e582312c	 str         r3, [r2, #0x12C]

; 2982 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG5_4, s_gpmcContext.GPMC_CONFIG5_4);

  00218	e5902000	 ldr         r2, [r0]
  0021c	e5913130	 ldr         r3, [r1, #0x130]
  00220	e5823130	 str         r3, [r2, #0x130]

; 2983 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG6_4, s_gpmcContext.GPMC_CONFIG6_4);

  00224	e5902000	 ldr         r2, [r0]
  00228	e5913134	 ldr         r3, [r1, #0x134]
  0022c	e5823134	 str         r3, [r2, #0x134]

; 2984 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG7_4, s_gpmcContext.GPMC_CONFIG7_4);

  00230	e5902000	 ldr         r2, [r0]
  00234	e5913138	 ldr         r3, [r1, #0x138]
  00238	e5823138	 str         r3, [r2, #0x138]
  0023c		 |$LN4@OALContext@14|

; 2985 :     }
; 2986 :     if(s_gpmcContext.GPMC_CONFIG7_5 & GPMC_CSVALID)

  0023c	e5913168	 ldr         r3, [r1, #0x168]
  00240	e3130040	 tst         r3, #0x40
  00244	0a000014	 beq         |$LN3@OALContext@14|

; 2987 :     {
; 2988 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG1_5, s_gpmcContext.GPMC_CONFIG1_5);

  00248	e5902000	 ldr         r2, [r0]
  0024c	e5913150	 ldr         r3, [r1, #0x150]
  00250	e5823150	 str         r3, [r2, #0x150]

; 2989 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG2_5, s_gpmcContext.GPMC_CONFIG2_5);

  00254	e5902000	 ldr         r2, [r0]
  00258	e5913154	 ldr         r3, [r1, #0x154]
  0025c	e5823154	 str         r3, [r2, #0x154]

; 2990 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG3_5, s_gpmcContext.GPMC_CONFIG3_5);

  00260	e5902000	 ldr         r2, [r0]
  00264	e5913158	 ldr         r3, [r1, #0x158]
  00268	e5823158	 str         r3, [r2, #0x158]

; 2991 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG4_5, s_gpmcContext.GPMC_CONFIG4_5);

  0026c	e5902000	 ldr         r2, [r0]
  00270	e591315c	 ldr         r3, [r1, #0x15C]
  00274	e582315c	 str         r3, [r2, #0x15C]

; 2992 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG5_5, s_gpmcContext.GPMC_CONFIG5_5);

  00278	e5902000	 ldr         r2, [r0]
  0027c	e5913160	 ldr         r3, [r1, #0x160]
  00280	e5823160	 str         r3, [r2, #0x160]

; 2993 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG6_5, s_gpmcContext.GPMC_CONFIG6_5);

  00284	e5902000	 ldr         r2, [r0]
  00288	e5913164	 ldr         r3, [r1, #0x164]
  0028c	e5823164	 str         r3, [r2, #0x164]

; 2994 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG7_5, s_gpmcContext.GPMC_CONFIG7_5);

  00290	e5902000	 ldr         r2, [r0]
  00294	e5913168	 ldr         r3, [r1, #0x168]
  00298	e5823168	 str         r3, [r2, #0x168]
  0029c		 |$LN3@OALContext@14|

; 2995 :     }
; 2996 :     if(s_gpmcContext.GPMC_CONFIG7_6 & GPMC_CSVALID)

  0029c	e5913198	 ldr         r3, [r1, #0x198]
  002a0	e3130040	 tst         r3, #0x40
  002a4	0a000014	 beq         |$LN2@OALContext@14|

; 2997 :     {
; 2998 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG1_6, s_gpmcContext.GPMC_CONFIG1_6);

  002a8	e5902000	 ldr         r2, [r0]
  002ac	e5913180	 ldr         r3, [r1, #0x180]
  002b0	e5823180	 str         r3, [r2, #0x180]

; 2999 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG2_6, s_gpmcContext.GPMC_CONFIG2_6);

  002b4	e5902000	 ldr         r2, [r0]
  002b8	e5913184	 ldr         r3, [r1, #0x184]
  002bc	e5823184	 str         r3, [r2, #0x184]

; 3000 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG3_6, s_gpmcContext.GPMC_CONFIG3_6);

  002c0	e5902000	 ldr         r2, [r0]
  002c4	e5913188	 ldr         r3, [r1, #0x188]
  002c8	e5823188	 str         r3, [r2, #0x188]

; 3001 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG4_6, s_gpmcContext.GPMC_CONFIG4_6);

  002cc	e5902000	 ldr         r2, [r0]
  002d0	e591318c	 ldr         r3, [r1, #0x18C]
  002d4	e582318c	 str         r3, [r2, #0x18C]

; 3002 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG5_6, s_gpmcContext.GPMC_CONFIG5_6);

  002d8	e5902000	 ldr         r2, [r0]
  002dc	e5913190	 ldr         r3, [r1, #0x190]
  002e0	e5823190	 str         r3, [r2, #0x190]

; 3003 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG6_6, s_gpmcContext.GPMC_CONFIG6_6);

  002e4	e5902000	 ldr         r2, [r0]
  002e8	e5913194	 ldr         r3, [r1, #0x194]
  002ec	e5823194	 str         r3, [r2, #0x194]

; 3004 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG7_6, s_gpmcContext.GPMC_CONFIG7_6);

  002f0	e5902000	 ldr         r2, [r0]
  002f4	e5913198	 ldr         r3, [r1, #0x198]
  002f8	e5823198	 str         r3, [r2, #0x198]
  002fc		 |$LN2@OALContext@14|

; 3005 :     }
; 3006 :     if(s_gpmcContext.GPMC_CONFIG7_7 & GPMC_CSVALID)

  002fc	e59131c8	 ldr         r3, [r1, #0x1C8]
  00300	e3130040	 tst         r3, #0x40
  00304	0a000014	 beq         |$LN1@OALContext@14|

; 3007 :     {
; 3008 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG1_7, s_gpmcContext.GPMC_CONFIG1_7);

  00308	e5902000	 ldr         r2, [r0]
  0030c	e59131b0	 ldr         r3, [r1, #0x1B0]
  00310	e58231b0	 str         r3, [r2, #0x1B0]

; 3009 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG2_7, s_gpmcContext.GPMC_CONFIG2_7);

  00314	e5902000	 ldr         r2, [r0]
  00318	e59131b4	 ldr         r3, [r1, #0x1B4]
  0031c	e58231b4	 str         r3, [r2, #0x1B4]

; 3010 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG3_7, s_gpmcContext.GPMC_CONFIG3_7);

  00320	e5902000	 ldr         r2, [r0]
  00324	e59131b8	 ldr         r3, [r1, #0x1B8]
  00328	e58231b8	 str         r3, [r2, #0x1B8]

; 3011 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG4_7, s_gpmcContext.GPMC_CONFIG4_7);

  0032c	e5902000	 ldr         r2, [r0]
  00330	e59131bc	 ldr         r3, [r1, #0x1BC]
  00334	e58231bc	 str         r3, [r2, #0x1BC]

; 3012 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG5_7, s_gpmcContext.GPMC_CONFIG5_7);

  00338	e5902000	 ldr         r2, [r0]
  0033c	e59131c0	 ldr         r3, [r1, #0x1C0]
  00340	e58231c0	 str         r3, [r2, #0x1C0]

; 3013 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG6_7, s_gpmcContext.GPMC_CONFIG6_7);

  00344	e5902000	 ldr         r2, [r0]
  00348	e59131c4	 ldr         r3, [r1, #0x1C4]
  0034c	e58231c4	 str         r3, [r2, #0x1C4]

; 3014 :         OUTREG32(&g_pGPMCRegs->GPMC_CONFIG7_7, s_gpmcContext.GPMC_CONFIG7_7);

  00350	e5902000	 ldr         r2, [r0]
  00354	e59131c8	 ldr         r3, [r1, #0x1C8]
  00358	e58231c8	 str         r3, [r2, #0x1C8]
  0035c		 |$LN1@OALContext@14|

; 3015 :     }
; 3016 : }

  0035c	e12fff1e	 bx          lr
  00360		 |$LN14@OALContext@14|
  00360		 |$LN15@OALContext@14|
  00360	00000000	 DCD         |s_gpmcContext|
  00364		 |$LN16@OALContext@14|
  00364	00000000	 DCD         |g_pGPMCRegs|
  00368		 |$M50883|

			 ENDP  ; |OALContextRestoreGPMC|

	EXPORT	|OALContextRestoreSCM|

  00000			 AREA	 |.pdata|, PDATA
|$T50895| DCD	|$LN5@OALContext@15|
	DCD	0x40007000
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALContextRestoreSCM| PROC

; 3026 : {

  00000		 |$LN5@OALContext@15|
  00000		 |$M50892|

; 3027 :     OUTREG32(&s_pSyscIFContext->CONTROL_SYSCONFIG, s_syscIntContext.CONTROL_SYSCONFIG);

  00000	e59f31b4	 ldr         r3, [pc, #0x1B4]
  00004	e59f01ac	 ldr         r0, [pc, #0x1AC]

; 3028 : 
; 3029 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_DEVCONF0, s_syscGenContext.CONTROL_DEVCONF0);

  00008	e59f11a4	 ldr         r1, [pc, #0x1A4]
  0000c	e5932000	 ldr         r2, [r3]
  00010	e590333c	 ldr         r3, [r0, #0x33C]
  00014	e5823010	 str         r3, [r2, #0x10]
  00018	e5912000	 ldr         r2, [r1]
  0001c	e5903004	 ldr         r3, [r0, #4]
  00020	e5823004	 str         r3, [r2, #4]

; 3030 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_MEM_DFTRW0, s_syscGenContext.CONTROL_MEM_DFTRW0);

  00024	e5912000	 ldr         r2, [r1]
  00028	e5903008	 ldr         r3, [r0, #8]
  0002c	e5823008	 str         r3, [r2, #8]

; 3031 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_MEM_DFTRW1, s_syscGenContext.CONTROL_MEM_DFTRW1);

  00030	e5912000	 ldr         r2, [r1]
  00034	e590300c	 ldr         r3, [r0, #0xC]
  00038	e582300c	 str         r3, [r2, #0xC]

; 3032 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_MSUSPENDMUX_0, s_syscGenContext.CONTROL_MSUSPENDMUX_0);

  0003c	e5912000	 ldr         r2, [r1]
  00040	e5903020	 ldr         r3, [r0, #0x20]
  00044	e5823020	 str         r3, [r2, #0x20]

; 3033 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_MSUSPENDMUX_1, s_syscGenContext.CONTROL_MSUSPENDMUX_1);

  00048	e5912000	 ldr         r2, [r1]
  0004c	e5903024	 ldr         r3, [r0, #0x24]
  00050	e5823024	 str         r3, [r2, #0x24]

; 3034 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_MSUSPENDMUX_2, s_syscGenContext.CONTROL_MSUSPENDMUX_2);

  00054	e5912000	 ldr         r2, [r1]
  00058	e5903028	 ldr         r3, [r0, #0x28]
  0005c	e5823028	 str         r3, [r2, #0x28]

; 3035 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_MSUSPENDMUX_3, s_syscGenContext.CONTROL_MSUSPENDMUX_3);

  00060	e5912000	 ldr         r2, [r1]
  00064	e590302c	 ldr         r3, [r0, #0x2C]
  00068	e582302c	 str         r3, [r2, #0x2C]

; 3036 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_MSUSPENDMUX_4, s_syscGenContext.CONTROL_MSUSPENDMUX_4);

  0006c	e5912000	 ldr         r2, [r1]
  00070	e5903030	 ldr         r3, [r0, #0x30]
  00074	e5823030	 str         r3, [r2, #0x30]

; 3037 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_MSUSPENDMUX_5, s_syscGenContext.CONTROL_MSUSPENDMUX_5);

  00078	e5912000	 ldr         r2, [r1]
  0007c	e5903034	 ldr         r3, [r0, #0x34]
  00080	e5823034	 str         r3, [r2, #0x34]

; 3038 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_SEC_CTRL, s_syscGenContext.CONTROL_SEC_CTRL);

  00084	e5912000	 ldr         r2, [r1]
  00088	e5903040	 ldr         r3, [r0, #0x40]
  0008c	e5823040	 str         r3, [r2, #0x40]

; 3039 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_DEVCONF1, s_syscGenContext.CONTROL_DEVCONF1);

  00090	e5912000	 ldr         r2, [r1]
  00094	e5903068	 ldr         r3, [r0, #0x68]
  00098	e5823068	 str         r3, [r2, #0x68]

; 3040 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_CSIRXFE, s_syscGenContext.CONTROL_CSIRXFE);

  0009c	e5912000	 ldr         r2, [r1]
  000a0	e590306c	 ldr         r3, [r0, #0x6C]
  000a4	e582306c	 str         r3, [r2, #0x6C]

; 3041 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_IVA2_BOOTADDR, s_syscGenContext.CONTROL_IVA2_BOOTADDR);

  000a8	e5912000	 ldr         r2, [r1]
  000ac	e5903190	 ldr         r3, [r0, #0x190]
  000b0	e5823190	 str         r3, [r2, #0x190]

; 3042 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_IVA2_BOOTMOD, s_syscGenContext.CONTROL_IVA2_BOOTMOD);

  000b4	e5912000	 ldr         r2, [r1]
  000b8	e5903194	 ldr         r3, [r0, #0x194]
  000bc	e5823194	 str         r3, [r2, #0x194]

; 3043 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_DEBOBS_0, s_syscGenContext.CONTROL_DEBOBS_0);

  000c0	e5912000	 ldr         r2, [r1]
  000c4	e59031b0	 ldr         r3, [r0, #0x1B0]
  000c8	e58231b0	 str         r3, [r2, #0x1B0]

; 3044 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_DEBOBS_1, s_syscGenContext.CONTROL_DEBOBS_1);

  000cc	e5912000	 ldr         r2, [r1]
  000d0	e59031b4	 ldr         r3, [r0, #0x1B4]
  000d4	e58231b4	 str         r3, [r2, #0x1B4]

; 3045 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_DEBOBS_2, s_syscGenContext.CONTROL_DEBOBS_2);

  000d8	e5912000	 ldr         r2, [r1]
  000dc	e59031b8	 ldr         r3, [r0, #0x1B8]
  000e0	e58231b8	 str         r3, [r2, #0x1B8]

; 3046 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_DEBOBS_3, s_syscGenContext.CONTROL_DEBOBS_3);

  000e4	e5912000	 ldr         r2, [r1]
  000e8	e59031bc	 ldr         r3, [r0, #0x1BC]
  000ec	e58231bc	 str         r3, [r2, #0x1BC]

; 3047 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_DEBOBS_4, s_syscGenContext.CONTROL_DEBOBS_4);

  000f0	e5912000	 ldr         r2, [r1]
  000f4	e59031c0	 ldr         r3, [r0, #0x1C0]
  000f8	e58231c0	 str         r3, [r2, #0x1C0]

; 3048 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_DEBOBS_5, s_syscGenContext.CONTROL_DEBOBS_5);

  000fc	e5912000	 ldr         r2, [r1]
  00100	e59031c4	 ldr         r3, [r0, #0x1C4]
  00104	e58231c4	 str         r3, [r2, #0x1C4]

; 3049 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_DEBOBS_6, s_syscGenContext.CONTROL_DEBOBS_6);

  00108	e5912000	 ldr         r2, [r1]
  0010c	e59031c8	 ldr         r3, [r0, #0x1C8]
  00110	e58231c8	 str         r3, [r2, #0x1C8]

; 3050 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_DEBOBS_7, s_syscGenContext.CONTROL_DEBOBS_7);

  00114	e5912000	 ldr         r2, [r1]
  00118	e59031cc	 ldr         r3, [r0, #0x1CC]
  0011c	e58231cc	 str         r3, [r2, #0x1CC]

; 3051 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_DEBOBS_8, s_syscGenContext.CONTROL_DEBOBS_8);

  00120	e5912000	 ldr         r2, [r1]
  00124	e59031d0	 ldr         r3, [r0, #0x1D0]
  00128	e58231d0	 str         r3, [r2, #0x1D0]

; 3052 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_PROG_IO0, s_syscGenContext.CONTROL_PROG_IO0);

  0012c	e5912000	 ldr         r2, [r1]
  00130	e59031d4	 ldr         r3, [r0, #0x1D4]
  00134	e58231d4	 str         r3, [r2, #0x1D4]

; 3053 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_PROG_IO1, s_syscGenContext.CONTROL_PROG_IO1);

  00138	e5912000	 ldr         r2, [r1]
  0013c	e59031d8	 ldr         r3, [r0, #0x1D8]
  00140	e58231d8	 str         r3, [r2, #0x1D8]

; 3054 : 
; 3055 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_DSS_DPLL_SPREADING, s_syscGenContext.CONTROL_DSS_DPLL_SPREADING);

  00144	e5912000	 ldr         r2, [r1]
  00148	e59031e0	 ldr         r3, [r0, #0x1E0]
  0014c	e58231e0	 str         r3, [r2, #0x1E0]

; 3056 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_CORE_DPLL_SPREADING, s_syscGenContext.CONTROL_CORE_DPLL_SPREADING);

  00150	e5912000	 ldr         r2, [r1]
  00154	e59031e4	 ldr         r3, [r0, #0x1E4]
  00158	e58231e4	 str         r3, [r2, #0x1E4]

; 3057 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_PER_DPLL_SPREADING, s_syscGenContext.CONTROL_PER_DPLL_SPREADING);

  0015c	e5912000	 ldr         r2, [r1]
  00160	e59031e8	 ldr         r3, [r0, #0x1E8]
  00164	e58231e8	 str         r3, [r2, #0x1E8]

; 3058 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_USBHOST_DPLL_SPREADING, s_syscGenContext.CONTROL_USBHOST_DPLL_SPREADING);

  00168	e5912000	 ldr         r2, [r1]
  0016c	e59031ec	 ldr         r3, [r0, #0x1EC]
  00170	e58231ec	 str         r3, [r2, #0x1EC]

; 3059 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_PBIAS_LITE, s_syscGenContext.CONTROL_PBIAS_LITE);

  00174	e5912000	 ldr         r2, [r1]
  00178	e59032b0	 ldr         r3, [r0, #0x2B0]
  0017c	e58232b0	 str         r3, [r2, #0x2B0]

; 3060 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_TEMP_SENSOR, s_syscGenContext.CONTROL_TEMP_SENSOR);

  00180	e5912000	 ldr         r2, [r1]
  00184	e59032b4	 ldr         r3, [r0, #0x2B4]
  00188	e58232b4	 str         r3, [r2, #0x2B4]

; 3061 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_SRAMLDO4, s_syscGenContext.CONTROL_SRAMLDO4);

  0018c	e5912000	 ldr         r2, [r1]
  00190	e59032b8	 ldr         r3, [r0, #0x2B8]
  00194	e58232b8	 str         r3, [r2, #0x2B8]

; 3062 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_SRAMLDO5, s_syscGenContext.CONTROL_SRAMLDO5);

  00198	e5912000	 ldr         r2, [r1]
  0019c	e59032bc	 ldr         r3, [r0, #0x2BC]
  001a0	e58232bc	 str         r3, [r2, #0x2BC]

; 3063 :     OUTREG32(&g_pSysCtrlGenReg->CONTROL_CSI, s_syscGenContext.CONTROL_CSI);

  001a4	e5912000	 ldr         r2, [r1]
  001a8	e59032c0	 ldr         r3, [r0, #0x2C0]
  001ac	e58232c0	 str         r3, [r2, #0x2C0]

; 3064 : }

  001b0	e12fff1e	 bx          lr
  001b4		 |$LN6@OALContext@15|
  001b4		 |$LN7@OALContext@15|
  001b4	00000000	 DCD         |g_pSysCtrlGenReg|
  001b8		 |$LN8@OALContext@15|
  001b8	00000000	 DCD         |s_syscGenContext|
  001bc		 |$LN9@OALContext@15|
  001bc	00000000	 DCD         |s_pSyscIFContext|
  001c0		 |$M50893|

			 ENDP  ; |OALContextRestoreSCM|

	EXPORT	|OALContextRestoreDMA|

  00000			 AREA	 |.pdata|, PDATA
|$T50906| DCD	|$LN5@OALContext@16|
	DCD	0x40001000
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALContextRestoreDMA| PROC

; 3074 : {

  00000		 |$LN5@OALContext@16|
  00000		 |$M50903|

; 3075 :     OUTREG32(&s_pDmaController->DMA4_GCR, s_dmaController.DMA4_GCR);

  00000	e59f2034	 ldr         r2, [pc, #0x34]
  00004	e5921d78	 ldr         r1, [r2, #0xD78]
  00008	e5923078	 ldr         r3, [r2, #0x78]
  0000c	e5813078	 str         r3, [r1, #0x78]

; 3076 :     OUTREG32(&s_pDmaController->DMA4_OCP_SYSCONFIG, s_dmaController.DMA4_OCP_SYSCONFIG);

  00010	e592302c	 ldr         r3, [r2, #0x2C]

; 3077 :     OUTREG32(&s_pDmaController->DMA4_IRQENABLE_L0, s_dmaController.DMA4_IRQENABLE_L0);

  00014	e581302c	 str         r3, [r1, #0x2C]
  00018	e5923018	 ldr         r3, [r2, #0x18]

; 3078 :     OUTREG32(&s_pDmaController->DMA4_IRQENABLE_L1, s_dmaController.DMA4_IRQENABLE_L1);
; 3079 :     OUTREG32(&s_pDmaController->DMA4_IRQENABLE_L2, s_dmaController.DMA4_IRQENABLE_L2);

  0001c	e5813018	 str         r3, [r1, #0x18]
  00020	e592301c	 ldr         r3, [r2, #0x1C]

; 3080 :     OUTREG32(&s_pDmaController->DMA4_IRQENABLE_L3, s_dmaController.DMA4_IRQENABLE_L3);

  00024	e581301c	 str         r3, [r1, #0x1C]
  00028	e5923020	 ldr         r3, [r2, #0x20]
  0002c	e5813020	 str         r3, [r1, #0x20]
  00030	e5923024	 ldr         r3, [r2, #0x24]
  00034	e5813024	 str         r3, [r1, #0x24]

; 3081 : }

  00038	e12fff1e	 bx          lr
  0003c		 |$LN6@OALContext@16|
  0003c		 |$LN7@OALContext@16|
  0003c	00000000	 DCD         |s_dmaController|
  00040		 |$M50904|

			 ENDP  ; |OALContextRestoreDMA|

	EXPORT	|OALContextRestoreSMS|

  00000			 AREA	 |.pdata|, PDATA
|$T50915| DCD	|$LN5@OALContext@17|
	DCD	0x40000800
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALContextRestoreSMS| PROC

; 3091 : {

  00000		 |$LN5@OALContext@17|
  00000		 |$M50912|

; 3092 :     OUTREG32(&g_pSMSRegs->SMS_SYSCONFIG, s_smsContext.SMS_SYSCONFIG);

  00000	e59f3014	 ldr         r3, [pc, #0x14]
  00004	e59f200c	 ldr         r2, [pc, #0xC]
  00008	e5931000	 ldr         r1, [r3]
  0000c	e5923010	 ldr         r3, [r2, #0x10]
  00010	e5813010	 str         r3, [r1, #0x10]

; 3093 : }

  00014	e12fff1e	 bx          lr
  00018		 |$LN6@OALContext@17|
  00018		 |$LN7@OALContext@17|
  00018	00000000	 DCD         |s_smsContext|
  0001c		 |$LN8@OALContext@17|
  0001c	00000000	 DCD         |g_pSMSRegs|
  00020		 |$M50913|

			 ENDP  ; |OALContextRestoreSMS|

	EXPORT	|OALContextRestoreVRFB|

  00000			 AREA	 |.pdata|, PDATA
|$T50927| DCD	|$LN10@OALContext@18|
	DCD	0x40001901
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALContextRestoreVRFB| PROC

; 3103 : {

  00000		 |$LN10@OALContext@18|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M50924|

; 3104 :     int i;
; 3105 : 
; 3106 :     for (i = 0; i < VRFB_ROTATION_CONTEXTS; ++i)

  00004	e59fe054	 ldr         lr, [pc, #0x54]
  00008	e3a04000	 mov         r4, #0
  0000c	e3a05020	 mov         r5, #0x20
  00010	e28e6020	 add         r6, lr, #0x20
  00014		 |$LL3@OALContext@18|

; 3107 :         {
; 3108 :         OUTREG32(&g_pVRFBRegs->aVRFB_SMS_ROT_CTRL[i].VRFB_SMS_ROT_CONTROL,
; 3109 :             s_vrfbContext.aVRFB_SMS_ROT_CTRL[i].VRFB_SMS_ROT_CONTROL
; 3110 :             );

  00014	e0840006	 add         r0, r4, r6
  00018	e59e1ea0	 ldr         r1, [lr, #0xEA0]
  0001c	e2403004	 sub         r3, r0, #4
  00020	e5932000	 ldr         r2, [r3]
  00024	e0843001	 add         r3, r4, r1
  00028	e583201c	 str         r2, [r3, #0x1C]
  0002c	e59e2ea0	 ldr         r2, [lr, #0xEA0]

; 3111 : 
; 3112 :         OUTREG32(&g_pVRFBRegs->aVRFB_SMS_ROT_CTRL[i].VRFB_SMS_ROT_SIZE,
; 3113 :             s_vrfbContext.aVRFB_SMS_ROT_CTRL[i].VRFB_SMS_ROT_SIZE
; 3114 :             );

  00030	e5903000	 ldr         r3, [r0]
  00034	e7853002	 str         r3, [r5, +r2]

; 3115 : 
; 3116 :         OUTREG32(&g_pVRFBRegs->aVRFB_SMS_ROT_CTRL[i].VRFB_SMS_ROT_PHYSICAL_BA,
; 3117 :             s_vrfbContext.aVRFB_SMS_ROT_CTRL[i].VRFB_SMS_ROT_PHYSICAL_BA
; 3118 :             );

  00038	e59e3ea0	 ldr         r3, [lr, #0xEA0]
  0003c	e5902004	 ldr         r2, [r0, #4]
  00040	e2855010	 add         r5, r5, #0x10
  00044	e0843003	 add         r3, r4, r3
  00048	e2844010	 add         r4, r4, #0x10
  0004c	e35400c0	 cmp         r4, #0xC0
  00050	e5832024	 str         r2, [r3, #0x24]
  00054	baffffee	 blt         |$LL3@OALContext@18|

; 3119 :         }
; 3120 : }

  00058	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0005c	e12fff1e	 bx          lr
  00060		 |$LN11@OALContext@18|
  00060		 |$LN12@OALContext@18|
  00060	00000000	 DCD         |s_vrfbContext|
  00064		 |$M50925|

			 ENDP  ; |OALContextRestoreVRFB|

	EXPORT	|OALContextRestorePerfTimer|

  00000			 AREA	 |.pdata|, PDATA
|$T50936| DCD	|$LN5@OALContext@19|
	DCD	0x40004100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALContextRestorePerfTimer| PROC

; 3130 : {	

  00000		 |$LN5@OALContext@19|
  00000		 |$M50933|

; 3131 : 	OUTREG32(&g_pPerfTimer->TIDR,s_perfTimerContext.TIDR);		// 0000

  00000	e59f00f8	 ldr         r0, [pc, #0xF8]
  00004	e59f10f0	 ldr         r1, [pc, #0xF0]
  00008	e5902000	 ldr         r2, [r0]
  0000c	e5913000	 ldr         r3, [r1]
  00010	e5832000	 str         r2, [r3]

; 3132 : 	OUTREG32(&g_pPerfTimer->TIOCP,s_perfTimerContext.TIOCP);	// 0010

  00014	e5902010	 ldr         r2, [r0, #0x10]
  00018	e5913000	 ldr         r3, [r1]
  0001c	e5832010	 str         r2, [r3, #0x10]

; 3133 : 	OUTREG32(&g_pPerfTimer->TISTAT,s_perfTimerContext.TISTAT);	// 0014

  00020	e5912000	 ldr         r2, [r1]
  00024	e5903014	 ldr         r3, [r0, #0x14]
  00028	e5823014	 str         r3, [r2, #0x14]

; 3134 : 	OUTREG32(&g_pPerfTimer->TISR,s_perfTimerContext.TISR);		// 0018

  0002c	e5912000	 ldr         r2, [r1]
  00030	e5903018	 ldr         r3, [r0, #0x18]
  00034	e5823018	 str         r3, [r2, #0x18]

; 3135 : 	OUTREG32(&g_pPerfTimer->TIER,s_perfTimerContext.TIER);		// 001C

  00038	e5912000	 ldr         r2, [r1]
  0003c	e590301c	 ldr         r3, [r0, #0x1C]
  00040	e582301c	 str         r3, [r2, #0x1C]

; 3136 : 	OUTREG32(&g_pPerfTimer->TWER,s_perfTimerContext.TWER);		// 0020

  00044	e5912000	 ldr         r2, [r1]
  00048	e5903020	 ldr         r3, [r0, #0x20]
  0004c	e5823020	 str         r3, [r2, #0x20]

; 3137 : 	OUTREG32(&g_pPerfTimer->TCLR,s_perfTimerContext.TCLR);		// 0024

  00050	e5912000	 ldr         r2, [r1]
  00054	e5903024	 ldr         r3, [r0, #0x24]
  00058	e5823024	 str         r3, [r2, #0x24]

; 3138 : 	OUTREG32(&g_pPerfTimer->TCRR,s_perfTimerContext.TCRR);		// 0028

  0005c	e5912000	 ldr         r2, [r1]
  00060	e5903028	 ldr         r3, [r0, #0x28]
  00064	e5823028	 str         r3, [r2, #0x28]

; 3139 : 	OUTREG32(&g_pPerfTimer->TLDR,s_perfTimerContext.TLDR);		// 002C

  00068	e5912000	 ldr         r2, [r1]
  0006c	e590302c	 ldr         r3, [r0, #0x2C]
  00070	e582302c	 str         r3, [r2, #0x2C]

; 3140 : 	OUTREG32(&g_pPerfTimer->TTGR,s_perfTimerContext.TTGR);		// 0030

  00074	e5912000	 ldr         r2, [r1]
  00078	e5903030	 ldr         r3, [r0, #0x30]
  0007c	e5823030	 str         r3, [r2, #0x30]

; 3141 : 	OUTREG32(&g_pPerfTimer->TWPS,s_perfTimerContext.TWPS);		// 0034

  00080	e5912000	 ldr         r2, [r1]
  00084	e5903034	 ldr         r3, [r0, #0x34]
  00088	e5823034	 str         r3, [r2, #0x34]

; 3142 : 	OUTREG32(&g_pPerfTimer->TMAR,s_perfTimerContext.TMAR);		// 0038

  0008c	e5912000	 ldr         r2, [r1]
  00090	e5903038	 ldr         r3, [r0, #0x38]
  00094	e5823038	 str         r3, [r2, #0x38]

; 3143 : 	OUTREG32(&g_pPerfTimer->TCAR1,s_perfTimerContext.TCAR1);	// 003C

  00098	e5912000	 ldr         r2, [r1]
  0009c	e590303c	 ldr         r3, [r0, #0x3C]
  000a0	e582303c	 str         r3, [r2, #0x3C]

; 3144 : 	OUTREG32(&g_pPerfTimer->TSICR,s_perfTimerContext.TSICR);	// 0040

  000a4	e5912000	 ldr         r2, [r1]
  000a8	e5903040	 ldr         r3, [r0, #0x40]
  000ac	e5823040	 str         r3, [r2, #0x40]

; 3145 : 	OUTREG32(&g_pPerfTimer->TCAR2,s_perfTimerContext.TCAR2);	// 0044

  000b0	e5912000	 ldr         r2, [r1]
  000b4	e5903044	 ldr         r3, [r0, #0x44]
  000b8	e5823044	 str         r3, [r2, #0x44]

; 3146 : 	OUTREG32(&g_pPerfTimer->TPIR,s_perfTimerContext.TPIR);		// 0x48

  000bc	e5912000	 ldr         r2, [r1]
  000c0	e5903048	 ldr         r3, [r0, #0x48]
  000c4	e5823048	 str         r3, [r2, #0x48]

; 3147 : 	OUTREG32(&g_pPerfTimer->TNIR,s_perfTimerContext.TNIR);		// 0x4C

  000c8	e5912000	 ldr         r2, [r1]
  000cc	e590304c	 ldr         r3, [r0, #0x4C]
  000d0	e582304c	 str         r3, [r2, #0x4C]

; 3148 : 	OUTREG32(&g_pPerfTimer->TCVR,s_perfTimerContext.TCVR);		// 0x50

  000d4	e5912000	 ldr         r2, [r1]
  000d8	e5903050	 ldr         r3, [r0, #0x50]
  000dc	e5823050	 str         r3, [r2, #0x50]

; 3149 : 	OUTREG32(&g_pPerfTimer->TOCR,s_perfTimerContext.TOCR);		// 0x54

  000e0	e5912000	 ldr         r2, [r1]
  000e4	e5903054	 ldr         r3, [r0, #0x54]
  000e8	e5823054	 str         r3, [r2, #0x54]

; 3150 : 	OUTREG32(&g_pPerfTimer->TOWR,s_perfTimerContext.TOWR);		// 0x58	

  000ec	e5912000	 ldr         r2, [r1]
  000f0	e5903058	 ldr         r3, [r0, #0x58]
  000f4	e5823058	 str         r3, [r2, #0x58]

; 3151 : }

  000f8	e12fff1e	 bx          lr
  000fc		 |$LN6@OALContext@19|
  000fc		 |$LN7@OALContext@19|
  000fc	00000000	 DCD         |g_pPerfTimer|
  00100		 |$LN8@OALContext@19|
  00100	00000000	 DCD         |s_perfTimerContext|
  00104		 |$M50934|

			 ENDP  ; |OALContextRestorePerfTimer|

	EXPORT	|OALContextRestoreInit|

  00000			 AREA	 |.pdata|, PDATA
|$T50946| DCD	|$LN5@OALContext@20|
	DCD	0x40003701
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALContextRestoreInit| PROC

; 3162 : {

  00000		 |$LN5@OALContext@20|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004		 |$M50943|
  00004	e3a05312	 mov         r5, #0x12, 6

; 3163 :     // Initalize
; 3164 :     s_pSyscIFContext = OALPAtoUA(OMAP_SYSC_INTERFACE_REGS_PA);

  00008	e3850a02	 orr         r0, r5, #2, 20
  0000c	e3a01000	 mov         r1, #0
  00010	eb000000	 bl          OALPAtoVA
  00014	e59f40bc	 ldr         r4, [pc, #0xBC]

; 3165 :     s_pDmaController = OALPAtoUA(OMAP_SDMA_REGS_PA);

  00018	e3a01000	 mov         r1, #0
  0001c	e584004c	 str         r0, [r4, #0x4C]
  00020	e3850a56	 orr         r0, r5, #0x56, 20
  00024	eb000000	 bl          OALPAtoVA
  00028	e1a03000	 mov         r3, r0

; 3166 : 
; 3167 :     s_rgGpioRegsAddr[0] = OALPAtoUA(OMAP_GPIO1_REGS_PA);

  0002c	e3850831	 orr         r0, r5, #0x31, 16
  00030	e3a01000	 mov         r1, #0
  00034	e5843058	 str         r3, [r4, #0x58]
  00038	eb000000	 bl          OALPAtoVA
  0003c	e3a05449	 mov         r5, #0x49, 8
  00040	e1a03000	 mov         r3, r0

; 3168 :     s_rgGpioRegsAddr[1] = OALPAtoUA(OMAP_GPIO2_REGS_PA);

  00044	e3850805	 orr         r0, r5, #5, 16
  00048	e3a01000	 mov         r1, #0
  0004c	e5843000	 str         r3, [r4]
  00050	eb000000	 bl          OALPAtoVA
  00054	e1a03000	 mov         r3, r0

; 3169 :     s_rgGpioRegsAddr[2] = OALPAtoUA(OMAP_GPIO3_REGS_PA);

  00058	e3850a52	 orr         r0, r5, #0x52, 20
  0005c	e3a01000	 mov         r1, #0
  00060	e5843004	 str         r3, [r4, #4]
  00064	eb000000	 bl          OALPAtoVA
  00068	e1a03000	 mov         r3, r0

; 3170 :     s_rgGpioRegsAddr[3] = OALPAtoUA(OMAP_GPIO4_REGS_PA);

  0006c	e3850915	 orr         r0, r5, #0x15, 18
  00070	e3a01000	 mov         r1, #0
  00074	e5843008	 str         r3, [r4, #8]
  00078	eb000000	 bl          OALPAtoVA
  0007c	e1a03000	 mov         r3, r0

; 3171 :     s_rgGpioRegsAddr[4] = OALPAtoUA(OMAP_GPIO5_REGS_PA);

  00080	e3850a56	 orr         r0, r5, #0x56, 20
  00084	e3a01000	 mov         r1, #0
  00088	e584300c	 str         r3, [r4, #0xC]
  0008c	eb000000	 bl          OALPAtoVA
  00090	e1a03000	 mov         r3, r0

; 3172 :     s_rgGpioRegsAddr[5] = OALPAtoUA(OMAP_GPIO6_REGS_PA);

  00094	e3850916	 orr         r0, r5, #0x16, 18
  00098	e3a01000	 mov         r1, #0
  0009c	e5843010	 str         r3, [r4, #0x10]
  000a0	eb000000	 bl          OALPAtoVA

; 3173 :     
; 3174 :     // Configure OMAP to send Sys OFF for OFF mode and I2C Command for RET. - Page 622
; 3175 :     OUTREG32(&g_PrcmPrm.pOMAP_GLOBAL_PRM->PRM_VOLTCTRL, 
; 3176 :         (AUTO_OFF_ENABLED|SEL_OFF_SIGNALLINE|AUTO_RET_DISABLED));

  000a4	e59f3028	 ldr         r3, [pc, #0x28]
  000a8	e3a0100c	 mov         r1, #0xC
  000ac	e5840014	 str         r0, [r4, #0x14]
  000b0	e593302c	 ldr         r3, [r3, #0x2C]
  000b4	e3a02c77	 mov         r2, #0x77, 24

; 3177 : 
; 3178 :     // Configure the OFFMODE values for SYS_NIRQ to get wakeup from T2
; 3179 :     OUTREG16(&g_pSyscPadConfsRegs->CONTROL_PADCONF_SYS_NIRQ,
; 3180 :                        (OFF_WAKE_ENABLE | OFF_INPUT_PULL_UP | INPUT_ENABLE |
; 3181 :                         PULL_UP | MUX_MODE_4));    	

  000b8	e382201c	 orr         r2, r2, #0x1C
  000bc	e5831060	 str         r1, [r3, #0x60]
  000c0	e5943054	 ldr         r3, [r4, #0x54]
  000c4	e2833e1b	 add         r3, r3, #0x1B, 28
  000c8	e1c320b0	 strh        r2, [r3]

; 3182 : 
; 3183 : }

  000cc	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  000d0	e12fff1e	 bx          lr
  000d4		 |$LN6@OALContext@20|
  000d4		 |$LN7@OALContext@20|
  000d4	00000000	 DCD         |g_PrcmPrm|
  000d8		 |$LN8@OALContext@20|
  000d8	00000000	 DCD         |s_rgGpioRegsAddr|
  000dc		 |$M50944|

			 ENDP  ; |OALContextRestoreInit|

	EXPORT	|OALContextUpdateDirtyRegister|

  00000			 AREA	 |.pdata|, PDATA
|$T50957| DCD	|$LN5@OALContext@21|
	DCD	0x40000600
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALContextUpdateDirtyRegister| PROC

; 3193 : {

  00000		 |$LN5@OALContext@21|
  00000		 |$M50954|

; 3194 :     g_ffContextSaveMask |= ffRegisterSet;

  00000	e59f200c	 ldr         r2, [pc, #0xC]
  00004	e5923000	 ldr         r3, [r2]
  00008	e1833000	 orr         r3, r3, r0
  0000c	e5823000	 str         r3, [r2]

; 3195 : }

  00010	e12fff1e	 bx          lr
  00014		 |$LN6@OALContext@21|
  00014		 |$LN7@OALContext@21|
  00014	00000000	 DCD         |g_ffContextSaveMask|
  00018		 |$M50955|

			 ENDP  ; |OALContextUpdateDirtyRegister|

	EXPORT	|OALContextUpdateCleanRegister|

  00000			 AREA	 |.pdata|, PDATA
|$T50976| DCD	|$LN20@OALContext@22|
	DCD	0x40003f01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALContextUpdateCleanRegister| PROC

; 3205 : {

  00000		 |$LN20@OALContext@22|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M50973|

; 3206 :     switch (ffRegisterSet)

  00004	e3500001	 cmp         r0, #1
  00008	0a000034	 beq         |$LN7@OALContext@22|
  0000c	e3500002	 cmp         r0, #2
  00010	0a00002f	 beq         |$LN6@OALContext@22|
  00014	e3500004	 cmp         r0, #4
  00018	0a000018	 beq         |$LN4@OALContext@22|
  0001c	e3500010	 cmp         r0, #0x10
  00020	0a000013	 beq         |$LN5@OALContext@22|
  00024	e3500080	 cmp         r0, #0x80
  00028	0a00000e	 beq         |$LN1@OALContext@22|
  0002c	e3500c01	 cmp         r0, #1, 24
  00030	0a000012	 beq         |$LN4@OALContext@22|
  00034	e3500c02	 cmp         r0, #2, 24
  00038	1a000029	 bne         |$LN8@OALContext@22|

; 3222 :             break;
; 3223 : 
; 3224 :         case HAL_CONTEXTSAVE_PINMUX:
; 3225 :             OALContextSaveDMA();
; 3226 :             break;
; 3227 : 
; 3228 :         case HAL_CONTEXTSAVE_SMS:
; 3229 :             OALContextSaveSMS();

  0003c	e59f30b4	 ldr         r3, [pc, #0xB4]
  00040	e59f10a4	 ldr         r1, [pc, #0xA4]
  00044	e59f00a4	 ldr         r0, [pc, #0xA4]
  00048	e5932000	 ldr         r2, [r3]
  0004c	e5913000	 ldr         r3, [r1]
  00050	e5922010	 ldr         r2, [r2, #0x10]
  00054	e3c33c02	 bic         r3, r3, #2, 24
  00058	e5813000	 str         r3, [r1]
  0005c	e5802010	 str         r2, [r0, #0x10]

; 3234 :             break;
; 3235 : }
; 3236 : }

  00060	e49de004	 ldr         lr, [sp], #4
  00064	e12fff1e	 bx          lr
  00068		 |$LN1@OALContext@22|

; 3230 :             break;
; 3231 : 
; 3232 :         case HAL_CONTEXTSAVE_VRFB:
; 3233 :             OALContextSaveVRFB();

  00068	eb000000	 bl          OALContextSaveVRFB

; 3234 :             break;
; 3235 : }
; 3236 : }

  0006c	e49de004	 ldr         lr, [sp], #4
  00070	e12fff1e	 bx          lr
  00074		 |$LN5@OALContext@22|

; 3214 :             break;
; 3215 : 
; 3216 :         case HAL_CONTEXTSAVE_GPMC:
; 3217 :             OALContextSaveGPMC();

  00074	eb000000	 bl          OALContextSaveGPMC

; 3234 :             break;
; 3235 : }
; 3236 : }

  00078	e49de004	 ldr         lr, [sp], #4
  0007c	e12fff1e	 bx          lr
  00080		 |$LN4@OALContext@22|

; 3218 :             break;
; 3219 : 
; 3220 :         case HAL_CONTEXTSAVE_DMA:
; 3221 :             OALContextSaveDMA();

  00080	e59f306c	 ldr         r3, [pc, #0x6C]
  00084	e59f0064	 ldr         r0, [pc, #0x64]
  00088	e59fe05c	 ldr         lr, [pc, #0x5C]
  0008c	e5932000	 ldr         r2, [r3]
  00090	e59e1000	 ldr         r1, [lr]
  00094	e5923078	 ldr         r3, [r2, #0x78]
  00098	e5803638	 str         r3, [r0, #0x638]
  0009c	e592302c	 ldr         r3, [r2, #0x2C]
  000a0	e58035ec	 str         r3, [r0, #0x5EC]
  000a4	e5923018	 ldr         r3, [r2, #0x18]
  000a8	e58035d8	 str         r3, [r0, #0x5D8]
  000ac	e592301c	 ldr         r3, [r2, #0x1C]
  000b0	e58035dc	 str         r3, [r0, #0x5DC]
  000b4	e5923020	 ldr         r3, [r2, #0x20]
  000b8	e58035e0	 str         r3, [r0, #0x5E0]
  000bc	e5922024	 ldr         r2, [r2, #0x24]
  000c0	e3c13004	 bic         r3, r1, #4
  000c4	e58e3000	 str         r3, [lr]
  000c8	e58025e4	 str         r2, [r0, #0x5E4]

; 3234 :             break;
; 3235 : }
; 3236 : }

  000cc	e49de004	 ldr         lr, [sp], #4
  000d0	e12fff1e	 bx          lr
  000d4		 |$LN6@OALContext@22|

; 3210 :             break;
; 3211 : 
; 3212 :         case HAL_CONTEXTSAVE_SCM:
; 3213 :             OALContextSaveSCM();

  000d4	eb000000	 bl          OALContextSaveSCM

; 3234 :             break;
; 3235 : }
; 3236 : }

  000d8	e49de004	 ldr         lr, [sp], #4
  000dc	e12fff1e	 bx          lr
  000e0		 |$LN7@OALContext@22|

; 3207 :         {
; 3208 :         case HAL_CONTEXTSAVE_GPIO:
; 3209 :             OALContextSaveGPIO();

  000e0	eb000000	 bl          OALContextSaveGPIO
  000e4		 |$LN8@OALContext@22|

; 3234 :             break;
; 3235 : }
; 3236 : }

  000e4	e49de004	 ldr         lr, [sp], #4
  000e8	e12fff1e	 bx          lr
  000ec		 |$LN21@OALContext@22|
  000ec		 |$LN22@OALContext@22|
  000ec	00000000	 DCD         |g_ffContextSaveMask|
  000f0		 |$LN23@OALContext@22|
  000f0	00000000	 DCD         |s_smsContext|
  000f4		 |$LN24@OALContext@22|
  000f4	00000000	 DCD         |s_pDmaController|
  000f8		 |$LN25@OALContext@22|
  000f8	00000000	 DCD         |g_pSMSRegs|
  000fc		 |$M50974|

			 ENDP  ; |OALContextUpdateCleanRegister|

	EXPORT	|OALContextSave|

  00000			 AREA	 |.pdata|, PDATA
|$T50996| DCD	|$LN15@OALContext@23|
	DCD	0x40005001
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALContextSave| PROC

; 3246 : {

  00000		 |$LN15@OALContext@23|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M50993|

; 3247 :     BOOL    rc = TRUE;
; 3248 :     
; 3249 :     // save dirty registers
; 3250 :     if (g_ffContextSaveMask != 0)

  00004	e59f4130	 ldr         r4, [pc, #0x130]
  00008	e59f6128	 ldr         r6, [pc, #0x128]
  0000c	e5943000	 ldr         r3, [r4]
  00010	e3530000	 cmp         r3, #0
  00014	0a000024	 beq         |$LN1@OALContext@23|

; 3251 :         {
; 3252 :            
; 3253 :         //if ((g_ffContextSaveMask & HAL_CONTEXTSAVE_GPIO) != 0)
; 3254 :             {
; 3255 :             OALContextSaveGPIO();

  00018	eb000000	 bl          OALContextSaveGPIO

; 3256 :             }
; 3257 : 
; 3258 :         if ((g_ffContextSaveMask & HAL_CONTEXTSAVE_SCM) != 0)

  0001c	e5943000	 ldr         r3, [r4]
  00020	e3130002	 tst         r3, #2

; 3259 :             {
; 3260 :             OALContextSaveSCM ();

  00024	1b000000	 blne        OALContextSaveSCM

; 3261 :             }
; 3262 :         // always save GPMC before suspend
; 3263 :         //if ((g_ffContextSaveMask & HAL_CONTEXTSAVE_GPMC) != 0)
; 3264 :             {
; 3265 :             OALContextSaveGPMC();

  00028	eb000000	 bl          OALContextSaveGPMC

; 3266 :             }
; 3267 : 
; 3268 :         if ((g_ffContextSaveMask & HAL_CONTEXTSAVE_DMA) != 0)

  0002c	e5941000	 ldr         r1, [r4]
  00030	e3110004	 tst         r1, #4
  00034	0a00000f	 beq         |$LN9@OALContext@23|

; 3269 :             {
; 3270 :             OALContextSaveDMA();

  00038	e59f30f4	 ldr         r3, [pc, #0xF4]
  0003c	e3c11004	 bic         r1, r1, #4
  00040	e5932000	 ldr         r2, [r3]
  00044	e5923078	 ldr         r3, [r2, #0x78]
  00048	e5863d68	 str         r3, [r6, #0xD68]
  0004c	e592302c	 ldr         r3, [r2, #0x2C]
  00050	e5863d1c	 str         r3, [r6, #0xD1C]
  00054	e5923018	 ldr         r3, [r2, #0x18]
  00058	e5863d08	 str         r3, [r6, #0xD08]
  0005c	e592301c	 ldr         r3, [r2, #0x1C]
  00060	e5863d0c	 str         r3, [r6, #0xD0C]
  00064	e5923020	 ldr         r3, [r2, #0x20]
  00068	e5863d10	 str         r3, [r6, #0xD10]
  0006c	e5923024	 ldr         r3, [r2, #0x24]
  00070	e5841000	 str         r1, [r4]
  00074	e5863d14	 str         r3, [r6, #0xD14]
  00078		 |$LN9@OALContext@23|

; 3271 :             }
; 3272 : 
; 3273 :         if ((g_ffContextSaveMask & HAL_CONTEXTSAVE_PINMUX) != 0)

  00078	e3110c01	 tst         r1, #1, 24
  0007c	0a000001	 beq         |$LN3@OALContext@23|

; 3274 :             {
; 3275 :             OALContextSaveMux();

  00080	eb000000	 bl          OALContextSaveMux
  00084	e5941000	 ldr         r1, [r4]
  00088		 |$LN3@OALContext@23|

; 3276 :             }
; 3277 : 
; 3278 :         if ((g_ffContextSaveMask & HAL_CONTEXTSAVE_SMS) != 0)

  00088	e3110c02	 tst         r1, #2, 24

; 3279 :             {
; 3280 :             OALContextSaveSMS();

  0008c	159f309c	 ldrne       r3, [pc, #0x9C]
  00090	13c11c02	 bicne       r1, r1, #2, 24
  00094	15933000	 ldrne       r3, [r3]
  00098	15933010	 ldrne       r3, [r3, #0x10]
  0009c	15841000	 strne       r1, [r4]
  000a0	15863740	 strne       r3, [r6, #0x740]

; 3281 :             }
; 3282 : 
; 3283 :         if ((g_ffContextSaveMask & HAL_CONTEXTSAVE_VRFB) != 0)

  000a4	e3110080	 tst         r1, #0x80

; 3284 :             {
; 3285 :             OALContextSaveVRFB();

  000a8	1b000000	 blne        OALContextSaveVRFB
  000ac		 |$LN1@OALContext@23|

; 3286 :             }
; 3287 :         }	
; 3288 : 
; 3289 :     // Save the MPU Interrupt controller MIR registers
; 3290 :     s_intcContext.INTC_MIR0 = INREG32(&g_pIntr->pICLRegs->INTC_MIR0);

  000ac	e59f3078	 ldr         r3, [pc, #0x78]

; 3291 :     s_intcContext.INTC_MIR1 = INREG32(&g_pIntr->pICLRegs->INTC_MIR1);
; 3292 :     s_intcContext.INTC_MIR2 = INREG32(&g_pIntr->pICLRegs->INTC_MIR2);
; 3293 : 
; 3294 :     // need to clear all gpio interface clocks for per to enter OFF
; 3295 :     CLRREG32(&g_PrcmCm.pOMAP_PER_CM->CM_ICLKEN_PER, 0x3E000);

  000b0	e59f5070	 ldr         r5, [pc, #0x70]

; 3296 : 	
; 3297 :     // need to clear all gpio functional clocks for per to enter OFF
; 3298 :     CLRREG32(&g_PrcmCm.pOMAP_PER_CM->CM_FCLKEN_PER, 0x3E000);
; 3299 : 
; 3300 :     // Errata 2.23. GPIO is driving random values when device is coming 
; 3301 :     // back from OFF mode.
; 3302 :     // Set PER domain sleep dependency with Wkup to avoid GPIO glitch
; 3303 :     SETREG32(&g_PrcmPrm.pOMAP_PER_PRM->PM_WKDEP_PER, SLEEPDEP_EN_WKUP);
; 3304 : 
; 3305 :     s_bCoreOffModeSet = TRUE;

  000b4	e59f2068	 ldr         r2, [pc, #0x68]
  000b8	e5933000	 ldr         r3, [r3]
  000bc	e595e008	 ldr         lr, [r5, #8]
  000c0	e3a00001	 mov         r0, #1
  000c4	e5931000	 ldr         r1, [r3]
  000c8	e5820000	 str         r0, [r2]
  000cc	e59f404c	 ldr         r4, [pc, #0x4C]
  000d0	e5913084	 ldr         r3, [r1, #0x84]

; 3306 : 
; 3307 :     return rc;    

  000d4	e3a00001	 mov         r0, #1
  000d8	e5863084	 str         r3, [r6, #0x84]
  000dc	e59130a4	 ldr         r3, [r1, #0xA4]
  000e0	e58630a4	 str         r3, [r6, #0xA4]
  000e4	e59130c4	 ldr         r3, [r1, #0xC4]
  000e8	e58630c4	 str         r3, [r6, #0xC4]
  000ec	e59e3010	 ldr         r3, [lr, #0x10]
  000f0	e3c33a3e	 bic         r3, r3, #0x3E, 20
  000f4	e58e3010	 str         r3, [lr, #0x10]
  000f8	e5952008	 ldr         r2, [r5, #8]
  000fc	e5923000	 ldr         r3, [r2]
  00100	e3c33a3e	 bic         r3, r3, #0x3E, 20
  00104	e5823000	 str         r3, [r2]
  00108	e5942008	 ldr         r2, [r4, #8]
  0010c	e59230c8	 ldr         r3, [r2, #0xC8]
  00110	e3833010	 orr         r3, r3, #0x10
  00114	e58230c8	 str         r3, [r2, #0xC8]

; 3308 : }

  00118	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0011c	e12fff1e	 bx          lr
  00120		 |$LN16@OALContext@23|
  00120		 |$LN17@OALContext@23|
  00120	00000000	 DCD         |g_PrcmPrm|
  00124		 |$LN18@OALContext@23|
  00124	00000000	 DCD         |s_bCoreOffModeSet|
  00128		 |$LN19@OALContext@23|
  00128	00000000	 DCD         |g_PrcmCm|
  0012c		 |$LN20@OALContext@23|
  0012c	00000000	 DCD         |g_pIntr|
  00130		 |$LN21@OALContext@23|
  00130	00000000	 DCD         |g_pSMSRegs|
  00134		 |$LN22@OALContext@23|
  00134	00000000	 DCD         |s_pDmaController|
  00138		 |$LN23@OALContext@23|
  00138	00000000	 DCD         |s_intcContext|
  0013c		 |$LN24@OALContext@23|
  0013c	00000000	 DCD         |g_ffContextSaveMask|
  00140		 |$M50994|

			 ENDP  ; |OALContextSave|

	EXPORT	|OALContextRestore|
	IMPORT	|g_dwCpuFamily|
	IMPORT	|PrcmRestoreDomain|
	IMPORT	|PrcmDomainClearReset|

  00000			 AREA	 |.pdata|, PDATA
|$T51021| DCD	|$LN18@OALContext@24|
	DCD	0x40006a01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALContextRestore| PROC

; 3322 : {

  00000		 |$LN18@OALContext@24|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004		 |$M51018|
  00004	e1a06002	 mov         r6, r2

; 3323 :     if(((prevMpuState & POWERSTATE_MASK) == POWERSTATE_OFF) ||
; 3324 :       (((prevMpuState & POWERSTATE_MASK) == POWERSTATE_RETENTION) &&
; 3325 :        ((prevMpuState & LOGICRETSTATE_MASK) == LOGICRETSTATE_LOGICOFF_DOMAINRET)))

  00008	e59f7194	 ldr         r7, [pc, #0x194]
  0000c	e59f518c	 ldr         r5, [pc, #0x18C]
  00010	e2103003	 ands        r3, r0, #3
  00014	0a000003	 beq         |$LN8@OALContext@24|
  00018	e3530001	 cmp         r3, #1
  0001c	1a000004	 bne         |$LN9@OALContext@24|
  00020	e3100004	 tst         r0, #4
  00024	1a000002	 bne         |$LN9@OALContext@24|
  00028		 |$LN8@OALContext@24|

; 3326 : 	{
; 3327 : 	    // ROMCODE restores the CM_AUTOIDLE_PLL register with value in scratchpad when
; 3328 : 	    // MPU is OFF. Since scratch pad value is set to 0 to reduce the wakeup
; 3329 : 	    // latency for off mode, restore CM_AUTOIDLE_PLL register with actual value.
; 3330 : 	    OUTREG32(&g_PrcmCm.pOMAP_CLOCK_CONTROL_CM->CM_AUTOIDLE_PLL,
; 3331 : 	                                   s_clkCtrlCmContext.CM_AUTOIDLE_PLL);

  00028	e5950034	 ldr         r0, [r5, #0x34]
  0002c	e5973030	 ldr         r3, [r7, #0x30]
  00030	e5803030	 str         r3, [r0, #0x30]
  00034		 |$LN9@OALContext@24|

; 3332 : 	}
; 3333 : 	/* WorkAround for EHCI/USBHost: Somehow touching the ICLKEN_WKUP register is causing USBHost 
; 3334 : 	     power domain to be up reliably */
; 3335 :     if(((prevCoreState & POWERSTATE_MASK) == POWERSTATE_OFF) ||
; 3336 :       (((prevCoreState & POWERSTATE_MASK) == POWERSTATE_RETENTION) &&
; 3337 :        ((prevCoreState & LOGICRETSTATE_MASK) == LOGICRETSTATE_LOGICOFF_DOMAINRET)))

  00034	e2114003	 ands        r4, r1, #3
  00038	0a000003	 beq         |$LN6@OALContext@24|
  0003c	e3540001	 cmp         r4, #1
  00040	1a000030	 bne         |$LN4@OALContext@24|
  00044	e3110004	 tst         r1, #4
  00048	1a00002e	 bne         |$LN4@OALContext@24|
  0004c		 |$LN6@OALContext@24|

; 3338 :         {
; 3339 :         	//UNDONE: should we need to do this all the time ?
; 3340 :             PrcmDomainClearReset();

  0004c	eb000000	 bl          PrcmDomainClearReset

; 3341 :         
; 3342 :             // Restore the PRCM Registers from shadow variable
; 3343 :             OALContextRestorePRCM();

  00050	eb000000	 bl          OALContextRestorePRCM

; 3344 :         
; 3345 :             // Handle CORE OFF case
; 3346 :             if((prevCoreState & POWERSTATE_MASK) == POWERSTATE_OFF)

  00054	e3540000	 cmp         r4, #0
  00058	1a00002a	 bne         |$LN4@OALContext@24|

; 3347 :         	{
; 3348 :                 // Restore the SMS Registers from shadow variable
; 3349 :                 OALContextRestoreSMS ();

  0005c	e59f3138	 ldr         r3, [pc, #0x138]
  00060	e5972088	 ldr         r2, [r7, #0x88]
  00064	e5933000	 ldr         r3, [r3]
  00068	e5832010	 str         r2, [r3, #0x10]

; 3350 :         
; 3351 :                 // Restore the VRFB Registers from shadow variable
; 3352 :                 OALContextRestoreVRFB ();

  0006c	eb000000	 bl          OALContextRestoreVRFB

; 3353 :         
; 3354 :                 // Restore the GPMC Registers from shadow variable
; 3355 :                 OALContextRestoreGPMC ();

  00070	eb000000	 bl          OALContextRestoreGPMC

; 3356 :         
; 3357 :                 // Restore the SCM Registers from shadow variable
; 3358 :                 OALContextRestoreSCM ();

  00074	eb000000	 bl          OALContextRestoreSCM

; 3359 :         
; 3360 :                 // Restore the MPU IC Registers from shadow variable
; 3361 :                 OALContextRestoreINTC ();

  00078	eb000000	 bl          OALContextRestoreINTC

; 3362 :         
; 3363 :                 // Restore DMA context
; 3364 :                 OALContextRestoreDMA ();		

  0007c	e59f3114	 ldr         r3, [pc, #0x114]
  00080	e59f110c	 ldr         r1, [pc, #0x10C]

; 3365 :         
; 3366 :                 // restore CM registers for all power domains
; 3367 :                 PrcmRestoreDomain(POWERDOMAIN_PERIPHERAL);

  00084	e3a00002	 mov         r0, #2
  00088	e5932000	 ldr         r2, [r3]
  0008c	e5913078	 ldr         r3, [r1, #0x78]
  00090	e5823078	 str         r3, [r2, #0x78]
  00094	e591302c	 ldr         r3, [r1, #0x2C]
  00098	e582302c	 str         r3, [r2, #0x2C]
  0009c	e5913018	 ldr         r3, [r1, #0x18]
  000a0	e5823018	 str         r3, [r2, #0x18]
  000a4	e591301c	 ldr         r3, [r1, #0x1C]
  000a8	e582301c	 str         r3, [r2, #0x1C]
  000ac	e5913020	 ldr         r3, [r1, #0x20]
  000b0	e5823020	 str         r3, [r2, #0x20]
  000b4	e5913024	 ldr         r3, [r1, #0x24]
  000b8	e5823024	 str         r3, [r2, #0x24]
  000bc	eb000000	 bl          PrcmRestoreDomain

; 3368 :                 PrcmRestoreDomain(POWERDOMAIN_DSS);

  000c0	e3a00006	 mov         r0, #6
  000c4	eb000000	 bl          PrcmRestoreDomain

; 3369 :                 PrcmRestoreDomain(POWERDOMAIN_CAMERA);

  000c8	e3a00009	 mov         r0, #9
  000cc	eb000000	 bl          PrcmRestoreDomain

; 3370 :                 PrcmRestoreDomain(POWERDOMAIN_USBHOST);

  000d0	e3a00003	 mov         r0, #3
  000d4	eb000000	 bl          PrcmRestoreDomain

; 3371 :                 PrcmRestoreDomain(POWERDOMAIN_SGX);

  000d8	e3a0000a	 mov         r0, #0xA
  000dc	eb000000	 bl          PrcmRestoreDomain

; 3372 :                 PrcmRestoreDomain(POWERDOMAIN_NEON);

  000e0	e3a00007	 mov         r0, #7
  000e4	eb000000	 bl          PrcmRestoreDomain

; 3373 :                 PrcmRestoreDomain(POWERDOMAIN_EMULATION);

  000e8	e3a00004	 mov         r0, #4
  000ec	eb000000	 bl          PrcmRestoreDomain

; 3374 :                 PrcmRestoreDomain(POWERDOMAIN_IVA2);

  000f0	e3a00008	 mov         r0, #8
  000f4	eb000000	 bl          PrcmRestoreDomain

; 3375 : 				
; 3376 : 		  // Workaround for 3730 VDD1/VDD2 drop to 0V issue, need to be re-visited 
; 3377 : 	         if(g_dwCpuFamily == CPU_FAMILY_DM37XX)

  000f8	e59f3090	 ldr         r3, [pc, #0x90]
  000fc	e5933000	 ldr         r3, [r3]
  00100	e3530001	 cmp         r3, #1

; 3378 :                     PrcmSetIVA2OffMode();

  00104	0b000000	 bleq        PrcmSetIVA2OffMode
  00108		 |$LN4@OALContext@24|

; 3379 :         	}
; 3380 :         }
; 3381 : 
; 3382 :     if (s_bCoreOffModeSet)

  00108	e59f007c	 ldr         r0, [pc, #0x7C]
  0010c	e5903000	 ldr         r3, [r0]
  00110	e3530000	 cmp         r3, #0
  00114	0a000012	 beq         |$LN3@OALContext@24|

; 3383 : 	{
; 3384 :         // enable GPIO ICLKs
; 3385 :         SETREG32(&g_PrcmCm.pOMAP_PER_CM->CM_AUTOIDLE_PER, 0x3E000);

  00118	e5952008	 ldr         r2, [r5, #8]

; 3386 :         SETREG32(&g_PrcmCm.pOMAP_PER_CM->CM_ICLKEN_PER, 0x3E000);
; 3387 : 		SETREG32(&g_PrcmCm.pOMAP_PER_CM->CM_FCLKEN_PER, 0x3E000);
; 3388 : 
; 3389 :         // Errata 2.23. GPIO is driving random values when device is coming 
; 3390 :         // back from OFF mode.
; 3391 :         // Set PER domain sleep dependency with Wkup to avoid GPIO glitch
; 3392 :         CLRREG32(&g_PrcmPrm.pOMAP_PER_PRM->PM_WKDEP_PER, SLEEPDEP_EN_WKUP);

  0011c	e59f1064	 ldr         r1, [pc, #0x64]

; 3393 :         
; 3394 :         s_bCoreOffModeSet = FALSE;

  00120	e3a0e000	 mov         lr, #0
  00124	e5923030	 ldr         r3, [r2, #0x30]
  00128	e580e000	 str         lr, [r0]
  0012c	e3833a3e	 orr         r3, r3, #0x3E, 20
  00130	e5823030	 str         r3, [r2, #0x30]
  00134	e5952008	 ldr         r2, [r5, #8]
  00138	e5923010	 ldr         r3, [r2, #0x10]
  0013c	e3833a3e	 orr         r3, r3, #0x3E, 20
  00140	e5823010	 str         r3, [r2, #0x10]
  00144	e5952008	 ldr         r2, [r5, #8]
  00148	e5923000	 ldr         r3, [r2]
  0014c	e3833a3e	 orr         r3, r3, #0x3E, 20
  00150	e5823000	 str         r3, [r2]
  00154	e5912008	 ldr         r2, [r1, #8]
  00158	e59230c8	 ldr         r3, [r2, #0xC8]
  0015c	e3c33010	 bic         r3, r3, #0x10
  00160	e58230c8	 str         r3, [r2, #0xC8]
  00164		 |$LN3@OALContext@24|

; 3395 : 	}
; 3396 : 
; 3397 :     if(((prevPerState & POWERSTATE_MASK) == POWERSTATE_OFF) ||
; 3398 :       (((prevPerState & POWERSTATE_MASK) == POWERSTATE_RETENTION) &&
; 3399 :        ((prevPerState & LOGICRETSTATE_MASK) == LOGICRETSTATE_LOGICOFF_DOMAINRET)))

  00164	e2163003	 ands        r3, r6, #3
  00168	0a000003	 beq         |$LN1@OALContext@24|
  0016c	e3530001	 cmp         r3, #1
  00170	1a000002	 bne         |$LN2@OALContext@24|
  00174	e3160004	 tst         r6, #4
  00178	1a000000	 bne         |$LN2@OALContext@24|
  0017c		 |$LN1@OALContext@24|

; 3400 : 	{
; 3401 :         // restore GPIO registers
; 3402 :         OALContextRestoreGPIO();

  0017c	eb000000	 bl          OALContextRestoreGPIO
  00180		 |$LN2@OALContext@24|

; 3403 : 	}
; 3404 :  }

  00180	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00184	e12fff1e	 bx          lr
  00188		 |$LN19@OALContext@24|
  00188		 |$LN20@OALContext@24|
  00188	00000000	 DCD         |g_PrcmPrm|
  0018c		 |$LN21@OALContext@24|
  0018c	00000000	 DCD         |s_bCoreOffModeSet|
  00190		 |$LN22@OALContext@24|
  00190	00000000	 DCD         |g_dwCpuFamily|
  00194		 |$LN23@OALContext@24|
  00194	00000000	 DCD         |s_dmaController|
  00198		 |$LN24@OALContext@24|
  00198	00000000	 DCD         |s_pDmaController|
  0019c		 |$LN25@OALContext@24|
  0019c	00000000	 DCD         |g_pSMSRegs|
  001a0		 |$LN26@OALContext@24|
  001a0	00000000	 DCD         |g_PrcmCm|
  001a4		 |$LN27@OALContext@24|
  001a4	00000000	 DCD         |s_clkCtrlCmContext|
  001a8		 |$M51019|

			 ENDP  ; |OALContextRestore|

	EXPORT	|OutShadowReg32|

  00000			 AREA	 |.pdata|, PDATA
|$T51042| DCD	|$LN14@OutShadowR|
	DCD	0x40003501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OutShadowReg32| PROC

; 3419 : {

  00000		 |$LN14@OutShadowR|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M51039|
  00004	e1a0e002	 mov         lr, r2
  00008	e3a03312	 mov         r3, #0x12, 6

; 3420 :     UINT32 *pShadowRegBase = NULL;
; 3421 : 
; 3422 :     // change the byte offset to 4 bytes offset
; 3423 :     offset = offset/4;
; 3424 : 
; 3425 :     switch(deviceGroup)

  0000c	e3833b12	 orr         r3, r3, #0x12, 22
  00010	e1500003	 cmp         r0, r3
  00014	e1a01121	 mov         r1, r1, lsr #2
  00018	0a000020	 beq         |$LN6@OutShadowR|
  0001c	e3a03312	 mov         r3, #0x12, 6
  00020	e3833c4a	 orr         r3, r3, #0x4A, 24
  00024	e1500003	 cmp         r0, r3
  00028	0a000018	 beq         |$LN4@OutShadowR|
  0002c	e3a03312	 mov         r3, #0x12, 6
  00030	e3833b13	 orr         r3, r3, #0x13, 22
  00034	e1500003	 cmp         r0, r3
  00038	0a00000f	 beq         |$LN5@OutShadowR|
  0003c	e3a03312	 mov         r3, #0x12, 6
  00040	e3833c4d	 orr         r3, r3, #0x4D, 24
  00044	e1500003	 cmp         r0, r3
  00048	0a000007	 beq         |$LN3@OutShadowR|
  0004c	e3a03312	 mov         r3, #0x12, 6
  00050	e3833c52	 orr         r3, r3, #0x52, 24
  00054	e1500003	 cmp         r0, r3
  00058	1a000016	 bne         |$LN7@OutShadowR|

; 3471 : 
; 3472 :         case OMAP_PRCM_GLOBAL_CM_REGS_PA:
; 3473 :             pShadowRegBase = (UINT32 *)&s_globalCmContext;
; 3474 :             pShadowRegBase += offset;
; 3475 : 
; 3476 :             // Update the register content
; 3477 :             OUTREG32(((UINT32*)g_PrcmCm.pOMAP_GLOBAL_CM+offset), value);

  0005c	e59f3060	 ldr         r3, [pc, #0x60]

; 3478 : 
; 3479 :             // Update the shadow content.
; 3480 :             *pShadowRegBase = value;

  00060	e59f2068	 ldr         r2, [pc, #0x68]
  00064	e593302c	 ldr         r3, [r3, #0x2C]

; 3481 :             break;

  00068	ea00000f	 b           |$LN11@OutShadowR|
  0006c		 |$LN3@OutShadowR|

; 3459 : 
; 3460 : 
; 3461 :         case OMAP_PRCM_CLOCK_CONTROL_CM_REGS_PA:
; 3462 :             pShadowRegBase = (UINT32 *)&s_clkCtrlCmContext;
; 3463 :             pShadowRegBase += offset;
; 3464 : 
; 3465 :             // Update the register content
; 3466 :             OUTREG32(((UINT32*)g_PrcmCm.pOMAP_CLOCK_CONTROL_CM+offset), value);

  0006c	e59f3050	 ldr         r3, [pc, #0x50]

; 3467 : 
; 3468 :             // Update the shadow content.
; 3469 :             *pShadowRegBase = value;

  00070	e59f2054	 ldr         r2, [pc, #0x54]
  00074	e5933034	 ldr         r3, [r3, #0x34]

; 3470 :             break;

  00078	ea00000b	 b           |$LN11@OutShadowR|
  0007c		 |$LN5@OutShadowR|

; 3436 :             break;
; 3437 : 
; 3438 :         case OMAP_PRCM_WKUP_CM_REGS_PA:
; 3439 :             pShadowRegBase = (UINT32 *)&s_wkupCmContext;
; 3440 :             pShadowRegBase += offset;
; 3441 : 
; 3442 :             // Update the register content
; 3443 :             OUTREG32(((UINT32*)g_PrcmCm.pOMAP_WKUP_CM+offset), value);

  0007c	e59f3040	 ldr         r3, [pc, #0x40]

; 3444 : 
; 3445 :             // Update the shadow content.
; 3446 :             *pShadowRegBase = value;

  00080	e59f2038	 ldr         r2, [pc, #0x38]
  00084	e5933000	 ldr         r3, [r3]
  00088	e2822014	 add         r2, r2, #0x14

; 3447 :             break;

  0008c	ea000006	 b           |$LN11@OutShadowR|
  00090		 |$LN4@OutShadowR|

; 3448 : 
; 3449 :         case OMAP_PRCM_CORE_CM_REGS_PA:
; 3450 :             pShadowRegBase = (UINT32 *)&s_coreCmContext;
; 3451 :             pShadowRegBase += offset;
; 3452 : 
; 3453 :             // Update the register content
; 3454 :             OUTREG32(((UINT32*)g_PrcmCm.pOMAP_CORE_CM+offset), value);

  00090	e59f302c	 ldr         r3, [pc, #0x2C]

; 3455 : 
; 3456 :             // Update the shadow content.
; 3457 :             *pShadowRegBase = value;

  00094	e59f202c	 ldr         r2, [pc, #0x2C]
  00098	e5933004	 ldr         r3, [r3, #4]

; 3458 :             break;

  0009c	ea000002	 b           |$LN11@OutShadowR|
  000a0		 |$LN6@OutShadowR|

; 3426 :         {
; 3427 :         case OMAP_PRCM_OCP_SYSTEM_CM_REGS_PA:
; 3428 :             pShadowRegBase = (UINT32 *)&s_ocpSysCmContext;
; 3429 :             pShadowRegBase += offset;
; 3430 : 
; 3431 :             // Update the register content
; 3432 :             OUTREG32(((UINT32*)g_PrcmCm.pOMAP_OCP_SYSTEM_CM+offset), value);

  000a0	e59f301c	 ldr         r3, [pc, #0x1C]

; 3433 : 
; 3434 :             // Update the shadow content.
; 3435 :             *pShadowRegBase = value;

  000a4	e59f2014	 ldr         r2, [pc, #0x14]
  000a8	e5933030	 ldr         r3, [r3, #0x30]
  000ac		 |$LN11@OutShadowR|
  000ac	e0833101	 add         r3, r3, r1, lsl #2
  000b0	e583e000	 str         lr, [r3]
  000b4	e782e101	 str         lr, [r2, +r1, lsl #2]
  000b8		 |$LN7@OutShadowR|

; 3482 : 
; 3483 : 
; 3484 :         default:
; 3485 :             break;
; 3486 :         }
; 3487 : }

  000b8	e49de004	 ldr         lr, [sp], #4
  000bc	e12fff1e	 bx          lr
  000c0		 |$LN15@OutShadowR|
  000c0		 |$LN16@OutShadowR|
  000c0	00000000	 DCD         |s_ocpSysCmContext|
  000c4		 |$LN17@OutShadowR|
  000c4	00000000	 DCD         |g_PrcmCm|
  000c8		 |$LN18@OutShadowR|
  000c8	00000000	 DCD         |s_coreCmContext|
  000cc		 |$LN19@OutShadowR|
  000cc	00000000	 DCD         |s_clkCtrlCmContext|
  000d0		 |$LN20@OutShadowR|
  000d0	00000000	 DCD         |s_globalCmContext|
  000d4		 |$M51040|

			 ENDP  ; |OutShadowReg32|

	EXPORT	|SetShadowReg32|

  00000			 AREA	 |.pdata|, PDATA
|$T51065| DCD	|$LN14@SetShadowR|
	DCD	0x40005201
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetShadowReg32| PROC

; 3502 : {

  00000		 |$LN14@SetShadowR|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M51062|
  00004	e1a04002	 mov         r4, r2
  00008	e3a03312	 mov         r3, #0x12, 6

; 3503 :     UINT32 *pShadowRegBase = NULL;
; 3504 : 
; 3505 :     // change the byte offset to 4 bytes offset
; 3506 :     offset = offset/4;
; 3507 : 
; 3508 :     switch(deviceGroup)

  0000c	e3833b12	 orr         r3, r3, #0x12, 22
  00010	e1500003	 cmp         r0, r3
  00014	e1a02121	 mov         r2, r1, lsr #2
  00018	0a000038	 beq         |$LN6@SetShadowR|
  0001c	e3a03312	 mov         r3, #0x12, 6
  00020	e3833c4a	 orr         r3, r3, #0x4A, 24
  00024	e1500003	 cmp         r0, r3
  00028	0a00002b	 beq         |$LN4@SetShadowR|
  0002c	e3a03312	 mov         r3, #0x12, 6
  00030	e3833b13	 orr         r3, r3, #0x13, 22
  00034	e1500003	 cmp         r0, r3
  00038	0a000019	 beq         |$LN5@SetShadowR|
  0003c	e3a03312	 mov         r3, #0x12, 6
  00040	e3833c4d	 orr         r3, r3, #0x4D, 24
  00044	e1500003	 cmp         r0, r3
  00048	0a00000c	 beq         |$LN3@SetShadowR|
  0004c	e3a03312	 mov         r3, #0x12, 6
  00050	e3833c52	 orr         r3, r3, #0x52, 24
  00054	e1500003	 cmp         r0, r3
  00058	1a000033	 bne         |$LN7@SetShadowR|

; 3554 : 
; 3555 :         case OMAP_PRCM_GLOBAL_CM_REGS_PA:
; 3556 :             pShadowRegBase = (UINT32 *)&s_globalCmContext;
; 3557 :             pShadowRegBase += offset;
; 3558 : 
; 3559 :             // Update the register content
; 3560 :             SETREG32(((UINT32*)g_PrcmCm.pOMAP_GLOBAL_CM+offset), value);

  0005c	e59f10d4	 ldr         r1, [pc, #0xD4]
  00060	e1a0e102	 mov         lr, r2, lsl #2
  00064	e59f00d8	 ldr         r0, [pc, #0xD8]
  00068	e591202c	 ldr         r2, [r1, #0x2C]
  0006c	e79e3002	 ldr         r3, [lr, +r2]
  00070	e1833004	 orr         r3, r3, r4
  00074	e78e3002	 str         r3, [lr, +r2]

; 3561 : 
; 3562 :             // Update the shadow content.
; 3563 :             *pShadowRegBase = (INREG32((UINT32*)g_PrcmCm.pOMAP_GLOBAL_CM+offset)|value);

  00078	e591302c	 ldr         r3, [r1, #0x2C]

; 3564 :             break;

  0007c	ea000027	 b           |$LN11@SetShadowR|
  00080		 |$LN3@SetShadowR|

; 3542 : 
; 3543 : 
; 3544 :         case OMAP_PRCM_CLOCK_CONTROL_CM_REGS_PA:
; 3545 :             pShadowRegBase = (UINT32 *)&s_clkCtrlCmContext;
; 3546 :             pShadowRegBase += offset;
; 3547 : 
; 3548 :             // Update the register content
; 3549 :             SETREG32(((UINT32*)g_PrcmCm.pOMAP_CLOCK_CONTROL_CM+offset), value);

  00080	e59f10b0	 ldr         r1, [pc, #0xB0]
  00084	e1a0e102	 mov         lr, r2, lsl #2
  00088	e59f00b0	 ldr         r0, [pc, #0xB0]
  0008c	e5912034	 ldr         r2, [r1, #0x34]
  00090	e79e3002	 ldr         r3, [lr, +r2]
  00094	e1833004	 orr         r3, r3, r4
  00098	e78e3002	 str         r3, [lr, +r2]

; 3550 : 
; 3551 :             // Update the shadow content.
; 3552 :             *pShadowRegBase = (INREG32((UINT32*)g_PrcmCm.pOMAP_CLOCK_CONTROL_CM+offset)|value);

  0009c	e5913034	 ldr         r3, [r1, #0x34]

; 3553 :             break;

  000a0	ea00001e	 b           |$LN11@SetShadowR|
  000a4		 |$LN5@SetShadowR|

; 3519 :             break;
; 3520 : 
; 3521 :         case OMAP_PRCM_WKUP_CM_REGS_PA:
; 3522 :             pShadowRegBase = (UINT32 *)&s_wkupCmContext;
; 3523 :             pShadowRegBase += offset;
; 3524 : 
; 3525 :             // Update the register content
; 3526 :             SETREG32(((UINT32*)g_PrcmCm.pOMAP_WKUP_CM+offset), value);

  000a4	e59f008c	 ldr         r0, [pc, #0x8C]
  000a8	e59f3084	 ldr         r3, [pc, #0x84]
  000ac	e1a0e102	 mov         lr, r2, lsl #2
  000b0	e5902000	 ldr         r2, [r0]
  000b4	e2831014	 add         r1, r3, #0x14
  000b8	e79e3002	 ldr         r3, [lr, +r2]
  000bc	e1833004	 orr         r3, r3, r4
  000c0	e78e3002	 str         r3, [lr, +r2]

; 3527 : 
; 3528 :             // Update the shadow content.
; 3529 :             *pShadowRegBase = (INREG32((UINT32*)g_PrcmCm.pOMAP_WKUP_CM+offset)|value);

  000c4	e5903000	 ldr         r3, [r0]
  000c8	e79e3003	 ldr         r3, [lr, +r3]
  000cc	e1833004	 orr         r3, r3, r4
  000d0	e7ae3001	 str         r3, [lr, +r1]!

; 3565 : 
; 3566 :         default:
; 3567 :             break;
; 3568 :         }
; 3569 : }

  000d4	e8bd4010	 ldmia       sp!, {r4, lr}
  000d8	e12fff1e	 bx          lr
  000dc		 |$LN4@SetShadowR|

; 3530 :             break;
; 3531 : 
; 3532 :         case OMAP_PRCM_CORE_CM_REGS_PA:
; 3533 :             pShadowRegBase = (UINT32 *)&s_coreCmContext;
; 3534 :             pShadowRegBase += offset;
; 3535 : 
; 3536 :             // Update the register content
; 3537 :             SETREG32(((UINT32*)g_PrcmCm.pOMAP_CORE_CM+offset), value);

  000dc	e59f1054	 ldr         r1, [pc, #0x54]
  000e0	e1a0e102	 mov         lr, r2, lsl #2
  000e4	e59f0050	 ldr         r0, [pc, #0x50]
  000e8	e5912004	 ldr         r2, [r1, #4]
  000ec	e79e3002	 ldr         r3, [lr, +r2]
  000f0	e1833004	 orr         r3, r3, r4
  000f4	e78e3002	 str         r3, [lr, +r2]

; 3538 : 
; 3539 :             // Update the shadow content.
; 3540 :             *pShadowRegBase = (INREG32((UINT32*)g_PrcmCm.pOMAP_CORE_CM+offset)|value);

  000f8	e5913004	 ldr         r3, [r1, #4]

; 3541 :             break;

  000fc	ea000007	 b           |$LN11@SetShadowR|
  00100		 |$LN6@SetShadowR|

; 3509 :         {
; 3510 :         case OMAP_PRCM_OCP_SYSTEM_CM_REGS_PA:
; 3511 :             pShadowRegBase = (UINT32 *)&s_ocpSysCmContext;
; 3512 :             pShadowRegBase += offset;
; 3513 : 
; 3514 :             // Update the register content
; 3515 :             SETREG32(((UINT32*)g_PrcmCm.pOMAP_OCP_SYSTEM_CM+offset), value);

  00100	e59f1030	 ldr         r1, [pc, #0x30]
  00104	e1a0e102	 mov         lr, r2, lsl #2
  00108	e59f0024	 ldr         r0, [pc, #0x24]
  0010c	e5912030	 ldr         r2, [r1, #0x30]
  00110	e79e3002	 ldr         r3, [lr, +r2]
  00114	e1833004	 orr         r3, r3, r4
  00118	e78e3002	 str         r3, [lr, +r2]

; 3516 : 
; 3517 :             // Update the shadow content.
; 3518 :             *pShadowRegBase = (INREG32((UINT32*)g_PrcmCm.pOMAP_OCP_SYSTEM_CM+offset)|value);

  0011c	e5913030	 ldr         r3, [r1, #0x30]
  00120		 |$LN11@SetShadowR|
  00120	e79e3003	 ldr         r3, [lr, +r3]
  00124	e1833004	 orr         r3, r3, r4
  00128	e7ae3000	 str         r3, [lr, +r0]!
  0012c		 |$LN7@SetShadowR|

; 3565 : 
; 3566 :         default:
; 3567 :             break;
; 3568 :         }
; 3569 : }

  0012c	e8bd4010	 ldmia       sp!, {r4, lr}
  00130	e12fff1e	 bx          lr
  00134		 |$LN15@SetShadowR|
  00134		 |$LN16@SetShadowR|
  00134	00000000	 DCD         |s_ocpSysCmContext|
  00138		 |$LN17@SetShadowR|
  00138	00000000	 DCD         |g_PrcmCm|
  0013c		 |$LN18@SetShadowR|
  0013c	00000000	 DCD         |s_coreCmContext|
  00140		 |$LN19@SetShadowR|
  00140	00000000	 DCD         |s_clkCtrlCmContext|
  00144		 |$LN20@SetShadowR|
  00144	00000000	 DCD         |s_globalCmContext|
  00148		 |$M51063|

			 ENDP  ; |SetShadowReg32|

	EXPORT	|OALPowerInit|
	EXPORT	|??_C@_1CE@IPHHBGKL@?$AA?9?$AAO?$AAA?$AAL?$AAP?$AAo?$AAw?$AAe?$AAr?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@NIHPAAL@?$AA?5?$AAS?$AAe?$AAr?$AAi?$AAa?$AAl?$AA?5?$AAd?$AAe?$AAb?$AAu?$AAg?$AA?5?$AAm?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AAs?$AA?5?$AAr?$AAe?$AAn?$AAa?$AAb?$AAl?$AAe?$AAd?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HO@BBDDKKCD@?$AA?5?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAs?$AAe?$AAr?$AAi?$AAa?$AAl?$AA?5?$AAd?$AAe?$AAb?$AAu?$AAg?$AA?5?$AAm?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AAs?$AA?5?$AAd@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@EGLHOBFH@?$AA?$CL?$AAO?$AAA?$AAL?$AAP?$AAo?$AAw?$AAe?$AAr?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|OEMEnableDebugOutput|
	IMPORT	|PrcmClockSetExternalClockRequestMode|
	IMPORT	|PrcmVoltSetControlPolarity|
	IMPORT	|PrcmVoltSetAutoControl|
	IMPORT	|PrcmClockSetSystemClockSetupTime|
	IMPORT	|OALMux_InitMuxTable|
	IMPORT	|EnableDeviceClocks|
	IMPORT	|OALI2CInit|
	IMPORT	|PrcmInit|
	IMPORT	|dwOEMPRCMCLKSSetupTime|

  00000			 AREA	 |.pdata|, PDATA
|$T51134| DCD	|$LN49@OALPowerIn|
	DCD	0x4001c302

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@IPHHBGKL@?$AA?9?$AAO?$AAA?$AAL?$AAP?$AAo?$AAw?$AAe?$AAr?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "P", 0x0, "o", 0x0, "w"
	DCB	0x0, "e", 0x0, "r", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "(", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@NIHPAAL@?$AA?5?$AAS?$AAe?$AAr?$AAi?$AAa?$AAl?$AA?5?$AAd?$AAe?$AAb?$AAu?$AAg?$AA?5?$AAm?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AAs?$AA?5?$AAr?$AAe?$AAn?$AAa?$AAb?$AAl?$AAe?$AAd?$AA?$AN@| DCB " "
	DCB	0x0, "S", 0x0, "e", 0x0, "r", 0x0, "i", 0x0, "a", 0x0, "l"
	DCB	0x0, " ", 0x0, "d", 0x0, "e", 0x0, "b", 0x0, "u", 0x0, "g"
	DCB	0x0, " ", 0x0, "m", 0x0, "e", 0x0, "s", 0x0, "s", 0x0, "a"
	DCB	0x0, "g", 0x0, "e", 0x0, "s", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "n", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HO@BBDDKKCD@?$AA?5?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAs?$AAe?$AAr?$AAi?$AAa?$AAl?$AA?5?$AAd?$AAe?$AAb?$AAu?$AAg?$AA?5?$AAm?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AAs?$AA?5?$AAd@| DCB " "
	DCB	0x0, "D", 0x0, "i", 0x0, "s", 0x0, "a", 0x0, "b", 0x0, "l"
	DCB	0x0, "e", 0x0, " ", 0x0, "s", 0x0, "e", 0x0, "r", 0x0, "i"
	DCB	0x0, "a", 0x0, "l", 0x0, " ", 0x0, "d", 0x0, "e", 0x0, "b"
	DCB	0x0, "u", 0x0, "g", 0x0, " ", 0x0, "m", 0x0, "e", 0x0, "s"
	DCB	0x0, "s", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "s", 0x0, " "
	DCB	0x0, "d", 0x0, "u", 0x0, "r", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "P", 0x0, "R", 0x0, "C", 0x0, "M", 0x0, " "
	DCB	0x0, "D", 0x0, "e", 0x0, "v", 0x0, "i", 0x0, "c", 0x0, "e"
	DCB	0x0, " ", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, "i"
	DCB	0x0, "a", 0x0, "l", 0x0, "i", 0x0, "z", 0x0, "e", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@EGLHOBFH@?$AA?$CL?$AAO?$AAA?$AAL?$AAP?$AAo?$AAw?$AAe?$AAr?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "P", 0x0, "o", 0x0, "w"
	DCB	0x0, "e", 0x0, "r", 0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t"
	DCB	0x0, "(", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALPowerInit| PROC

; 1953 : { 

  00000		 |$LN49@OALPowerIn|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M51131|

; 1954 :     PrcmInitInfo info;
; 1955 :     OMAP_SYSC_INTERFACE_REGS   *pSyscIF;
; 1956 :     OALMSG(1, (L"+OALPowerInit()\r\n"));

  00008	e59f06f8	 ldr         r0, [pc, #0x6F8]
  0000c	eb000000	 bl          NKDbgPrintfW
  00010	e3a09312	 mov         r9, #0x12, 6

; 1957 : 
; 1958 :     pSyscIF                             = OALPAtoUA(OMAP_SYSC_INTERFACE_REGS_PA);

  00014	e3890a02	 orr         r0, r9, #2, 20
  00018	e3a01000	 mov         r1, #0
  0001c	eb000000	 bl          OALPAtoVA

; 1959 :     g_pGPMCRegs                         = OALPAtoUA(OMAP_GPMC_REGS_PA);

  00020	e3a01000	 mov         r1, #0
  00024	e3a0046e	 mov         r0, #0x6E, 8
  00028	eb000000	 bl          OALPAtoVA
  0002c	e59f66d0	 ldr         r6, [pc, #0x6D0]

; 1960 :     g_pSDRCRegs                         = OALPAtoUA(OMAP_SDRC_REGS_PA);

  00030	e3a01000	 mov         r1, #0
  00034	e5860000	 str         r0, [r6]
  00038	e3a0046d	 mov         r0, #0x6D, 8
  0003c	eb000000	 bl          OALPAtoVA
  00040	e59f76b8	 ldr         r7, [pc, #0x6B8]

; 1961 :     g_pSMSRegs                          = OALPAtoUA(OMAP_SMS_REGS_PA);

  00044	e3a01000	 mov         r1, #0
  00048	e5870000	 str         r0, [r7]
  0004c	e3a0031b	 mov         r0, #0x1B, 6
  00050	eb000000	 bl          OALPAtoVA
  00054	e59f86a0	 ldr         r8, [pc, #0x6A0]
  00058	e3a0331b	 mov         r3, #0x1B, 6

; 1962 :     g_pVRFBRegs                         = OALPAtoUA(OMAP_VRFB_REGS_PA);

  0005c	e3a01000	 mov         r1, #0
  00060	e5880000	 str         r0, [r8]
  00064	e3830f59	 orr         r0, r3, #0x59, 30
  00068	eb000000	 bl          OALPAtoVA
  0006c	e59f3684	 ldr         r3, [pc, #0x684]
  00070	e1a02000	 mov         r2, r0

; 1963 :     g_pSysCtrlGenReg                    = OALPAtoUA(OMAP_SYSC_GENERAL_REGS_PA);

  00074	e59f0678	 ldr         r0, [pc, #0x678]
  00078	e3a01000	 mov         r1, #0
  0007c	e5832000	 str         r2, [r3]
  00080	eb000000	 bl          OALPAtoVA
  00084	e59f3664	 ldr         r3, [pc, #0x664]
  00088	e1a02000	 mov         r2, r0

; 1964 : 
; 1965 :     g_PrcmPrm.pOMAP_GLOBAL_PRM          = OALPAtoUA(OMAP_PRCM_GLOBAL_PRM_REGS_PA);

  0008c	e59f0658	 ldr         r0, [pc, #0x658]
  00090	e3a01000	 mov         r1, #0
  00094	e5832000	 str         r2, [r3]
  00098	eb000000	 bl          OALPAtoVA
  0009c	e59f5644	 ldr         r5, [pc, #0x644]
  000a0	e1a03000	 mov         r3, r0

; 1966 :     g_PrcmPrm.pOMAP_OCP_SYSTEM_PRM      = OALPAtoUA(OMAP_PRCM_OCP_SYSTEM_PRM_REGS_PA);

  000a4	e59f0638	 ldr         r0, [pc, #0x638]
  000a8	e3a01000	 mov         r1, #0
  000ac	e585302c	 str         r3, [r5, #0x2C]
  000b0	eb000000	 bl          OALPAtoVA
  000b4	e1a03000	 mov         r3, r0

; 1967 :     g_PrcmPrm.pOMAP_CLOCK_CONTROL_PRM   = OALPAtoUA(OMAP_PRCM_CLOCK_CONTROL_PRM_REGS_PA);

  000b8	e59f0620	 ldr         r0, [pc, #0x620]
  000bc	e3a01000	 mov         r1, #0
  000c0	e5853030	 str         r3, [r5, #0x30]
  000c4	eb000000	 bl          OALPAtoVA
  000c8	e1a03000	 mov         r3, r0

; 1968 :     g_PrcmPrm.pOMAP_WKUP_PRM            = OALPAtoUA(OMAP_PRCM_WKUP_PRM_REGS_PA);

  000cc	e59f0608	 ldr         r0, [pc, #0x608]
  000d0	e3a01000	 mov         r1, #0
  000d4	e5853034	 str         r3, [r5, #0x34]
  000d8	eb000000	 bl          OALPAtoVA
  000dc	e1a03000	 mov         r3, r0

; 1969 :     g_PrcmPrm.pOMAP_PER_PRM             = OALPAtoUA(OMAP_PRCM_PER_PRM_REGS_PA);

  000e0	e59f05f0	 ldr         r0, [pc, #0x5F0]
  000e4	e3a01000	 mov         r1, #0
  000e8	e5853000	 str         r3, [r5]
  000ec	eb000000	 bl          OALPAtoVA
  000f0	e1a03000	 mov         r3, r0

; 1970 :     g_PrcmPrm.pOMAP_CORE_PRM            = OALPAtoUA(OMAP_PRCM_CORE_PRM_REGS_PA);    

  000f4	e59f05d8	 ldr         r0, [pc, #0x5D8]
  000f8	e3a01000	 mov         r1, #0
  000fc	e5853008	 str         r3, [r5, #8]
  00100	eb000000	 bl          OALPAtoVA
  00104	e1a03000	 mov         r3, r0

; 1971 :     g_PrcmPrm.pOMAP_MPU_PRM             = OALPAtoUA(OMAP_PRCM_MPU_PRM_REGS_PA);

  00108	e59f05c0	 ldr         r0, [pc, #0x5C0]
  0010c	e3a01000	 mov         r1, #0
  00110	e5853004	 str         r3, [r5, #4]
  00114	eb000000	 bl          OALPAtoVA
  00118	e1a03000	 mov         r3, r0

; 1972 :     g_PrcmPrm.pOMAP_IVA2_PRM            = OALPAtoUA(OMAP_PRCM_IVA2_PRM_REGS_PA);

  0011c	e59f05a8	 ldr         r0, [pc, #0x5A8]
  00120	e3a01000	 mov         r1, #0
  00124	e5853014	 str         r3, [r5, #0x14]
  00128	eb000000	 bl          OALPAtoVA
  0012c	e1a03000	 mov         r3, r0

; 1973 :     g_PrcmPrm.pOMAP_DSS_PRM             = OALPAtoUA(OMAP_PRCM_DSS_PRM_REGS_PA);

  00130	e59f0590	 ldr         r0, [pc, #0x590]
  00134	e3a01000	 mov         r1, #0
  00138	e5853020	 str         r3, [r5, #0x20]
  0013c	eb000000	 bl          OALPAtoVA
  00140	e1a03000	 mov         r3, r0

; 1974 :     g_PrcmPrm.pOMAP_SGX_PRM             = OALPAtoUA(OMAP_PRCM_SGX_PRM_REGS_PA);

  00144	e59f0578	 ldr         r0, [pc, #0x578]
  00148	e3a01000	 mov         r1, #0
  0014c	e5853018	 str         r3, [r5, #0x18]
  00150	eb000000	 bl          OALPAtoVA
  00154	e1a03000	 mov         r3, r0

; 1975 :     g_PrcmPrm.pOMAP_CAM_PRM             = OALPAtoUA(OMAP_PRCM_CAM_PRM_REGS_PA);    

  00158	e59f0560	 ldr         r0, [pc, #0x560]
  0015c	e3a01000	 mov         r1, #0
  00160	e5853028	 str         r3, [r5, #0x28]
  00164	eb000000	 bl          OALPAtoVA
  00168	e1a03000	 mov         r3, r0

; 1976 :     g_PrcmPrm.pOMAP_NEON_PRM            = OALPAtoUA(OMAP_PRCM_NEON_PRM_REGS_PA);

  0016c	e59f0548	 ldr         r0, [pc, #0x548]
  00170	e3a01000	 mov         r1, #0
  00174	e5853024	 str         r3, [r5, #0x24]
  00178	eb000000	 bl          OALPAtoVA
  0017c	e1a03000	 mov         r3, r0

; 1977 :     g_PrcmPrm.pOMAP_EMU_PRM             = OALPAtoUA(OMAP_PRCM_EMU_PRM_REGS_PA);

  00180	e59f0530	 ldr         r0, [pc, #0x530]
  00184	e3a01000	 mov         r1, #0
  00188	e585301c	 str         r3, [r5, #0x1C]
  0018c	eb000000	 bl          OALPAtoVA
  00190	e1a03000	 mov         r3, r0

; 1978 :     g_PrcmPrm.pOMAP_USBHOST_PRM         = OALPAtoUA(OMAP_PRCM_USBHOST_PRM_REGS_PA);

  00194	e59f0518	 ldr         r0, [pc, #0x518]
  00198	e3a01000	 mov         r1, #0
  0019c	e5853010	 str         r3, [r5, #0x10]
  001a0	eb000000	 bl          OALPAtoVA
  001a4	e1a03000	 mov         r3, r0

; 1979 :     
; 1980 :     g_PrcmCm.pOMAP_GLOBAL_CM            = OALPAtoUA(OMAP_PRCM_GLOBAL_CM_REGS_PA);

  001a8	e3890c52	 orr         r0, r9, #0x52, 24
  001ac	e3a01000	 mov         r1, #0
  001b0	e585300c	 str         r3, [r5, #0xC]
  001b4	eb000000	 bl          OALPAtoVA
  001b8	e59f44f0	 ldr         r4, [pc, #0x4F0]

; 1981 :     g_PrcmCm.pOMAP_OCP_SYSTEM_CM        = OALPAtoUA(OMAP_PRCM_OCP_SYSTEM_CM_REGS_PA);

  001bc	e3a01000	 mov         r1, #0
  001c0	e584002c	 str         r0, [r4, #0x2C]
  001c4	e3890b12	 orr         r0, r9, #0x12, 22
  001c8	eb000000	 bl          OALPAtoVA
  001cc	e1a03000	 mov         r3, r0

; 1982 :     g_PrcmCm.pOMAP_CLOCK_CONTROL_CM     = OALPAtoUA(OMAP_PRCM_CLOCK_CONTROL_CM_REGS_PA);

  001d0	e3890c4d	 orr         r0, r9, #0x4D, 24
  001d4	e3a01000	 mov         r1, #0
  001d8	e5843030	 str         r3, [r4, #0x30]
  001dc	eb000000	 bl          OALPAtoVA
  001e0	e1a03000	 mov         r3, r0

; 1983 :     g_PrcmCm.pOMAP_WKUP_CM              = OALPAtoUA(OMAP_PRCM_WKUP_CM_REGS_PA);

  001e4	e3890b13	 orr         r0, r9, #0x13, 22
  001e8	e3a01000	 mov         r1, #0
  001ec	e5843034	 str         r3, [r4, #0x34]
  001f0	eb000000	 bl          OALPAtoVA
  001f4	e1a03000	 mov         r3, r0

; 1984 :     g_PrcmCm.pOMAP_PER_CM               = OALPAtoUA(OMAP_PRCM_PER_CM_REGS_PA);

  001f8	e3890a05	 orr         r0, r9, #5, 20
  001fc	e3a01000	 mov         r1, #0
  00200	e5843000	 str         r3, [r4]
  00204	eb000000	 bl          OALPAtoVA
  00208	e1a03000	 mov         r3, r0

; 1985 :     g_PrcmCm.pOMAP_CORE_CM              = OALPAtoUA(OMAP_PRCM_CORE_CM_REGS_PA);

  0020c	e3890c4a	 orr         r0, r9, #0x4A, 24
  00210	e3a01000	 mov         r1, #0
  00214	e5843008	 str         r3, [r4, #8]
  00218	eb000000	 bl          OALPAtoVA
  0021c	e1a03000	 mov         r3, r0

; 1986 :     g_PrcmCm.pOMAP_MPU_CM               = OALPAtoUA(OMAP_PRCM_MPU_CM_REGS_PA);

  00220	e3890c49	 orr         r0, r9, #0x49, 24
  00224	e3a01000	 mov         r1, #0
  00228	e5843004	 str         r3, [r4, #4]
  0022c	eb000000	 bl          OALPAtoVA
  00230	e1a03000	 mov         r3, r0

; 1987 :     g_PrcmCm.pOMAP_DSS_CM               = OALPAtoUA(OMAP_PRCM_DSS_CM_REGS_PA);

  00234	e3890c4e	 orr         r0, r9, #0x4E, 24
  00238	e3a01000	 mov         r1, #0
  0023c	e5843014	 str         r3, [r4, #0x14]
  00240	eb000000	 bl          OALPAtoVA
  00244	e1a03000	 mov         r3, r0

; 1988 :     g_PrcmCm.pOMAP_SGX_CM               = OALPAtoUA(OMAP_PRCM_SGX_CM_REGS_PA);

  00248	e3890c4b	 orr         r0, r9, #0x4B, 24
  0024c	e3a01000	 mov         r1, #0
  00250	e5843018	 str         r3, [r4, #0x18]
  00254	eb000000	 bl          OALPAtoVA
  00258	e1a03000	 mov         r3, r0

; 1989 :     g_PrcmCm.pOMAP_CAM_CM               = OALPAtoUA(OMAP_PRCM_CAM_CM_REGS_PA);    

  0025c	e3890c4f	 orr         r0, r9, #0x4F, 24
  00260	e3a01000	 mov         r1, #0
  00264	e5843028	 str         r3, [r4, #0x28]
  00268	eb000000	 bl          OALPAtoVA
  0026c	e5840024	 str         r0, [r4, #0x24]

; 1990 :     g_PrcmCm.pOMAP_NEON_CM              = OALPAtoUA(OMAP_PRCM_NEON_CM_REGS_PA);

  00270	e3890c53	 orr         r0, r9, #0x53, 24
  00274	e3a01000	 mov         r1, #0
  00278	eb000000	 bl          OALPAtoVA
  0027c	e1a03000	 mov         r3, r0

; 1991 :     g_PrcmCm.pOMAP_EMU_CM               = OALPAtoUA(OMAP_PRCM_EMU_CM_REGS_PA); 

  00280	e584301c	 str         r3, [r4, #0x1C]
  00284	e3890c51	 orr         r0, r9, #0x51, 24
  00288	e3a01000	 mov         r1, #0
  0028c	eb000000	 bl          OALPAtoVA
  00290	e1a03000	 mov         r3, r0

; 1992 :     g_PrcmCm.pOMAP_IVA2_CM              = OALPAtoUA(OMAP_PRCM_IVA2_CM_REGS_PA);

  00294	e3890901	 orr         r0, r9, #1, 18
  00298	e3a01000	 mov         r1, #0
  0029c	e5843010	 str         r3, [r4, #0x10]
  002a0	eb000000	 bl          OALPAtoVA
  002a4	e1a03000	 mov         r3, r0

; 1993 :     g_PrcmCm.pOMAP_USBHOST_CM           = OALPAtoUA(OMAP_PRCM_USBHOST_CM_REGS_PA);

  002a8	e3890b15	 orr         r0, r9, #0x15, 22
  002ac	e3a01000	 mov         r1, #0
  002b0	e5843020	 str         r3, [r4, #0x20]
  002b4	eb000000	 bl          OALPAtoVA
  002b8	e1a03000	 mov         r3, r0

; 1994 : 
; 1995 :     g_pContextRestore                   = OALPAtoUA(OMAP_CONTEXT_RESTORE_REGS_PA);

  002bc	e59f03e8	 ldr         r0, [pc, #0x3E8]
  002c0	e3a01000	 mov         r1, #0
  002c4	e584300c	 str         r3, [r4, #0xC]
  002c8	eb000000	 bl          OALPAtoVA
  002cc	e59f33d4	 ldr         r3, [pc, #0x3D4]
  002d0	e1a02000	 mov         r2, r0

; 1996 :     g_pPrcmRestore                      = OALPAtoUA(OMAP_PRCM_RESTORE_REGS_PA);

  002d4	e59f03c8	 ldr         r0, [pc, #0x3C8]
  002d8	e3a01000	 mov         r1, #0
  002dc	e5832000	 str         r2, [r3]
  002e0	eb000000	 bl          OALPAtoVA
  002e4	e59f33b4	 ldr         r3, [pc, #0x3B4]
  002e8	e1a02000	 mov         r2, r0

; 1997 :     g_pSdrcRestore                      = OALPAtoUA(OMAP_SDRC_RESTORE_REGS_PA);

  002ec	e59f03a8	 ldr         r0, [pc, #0x3A8]
  002f0	e3a01000	 mov         r1, #0
  002f4	e5832000	 str         r2, [r3]
  002f8	eb000000	 bl          OALPAtoVA
  002fc	e59f3394	 ldr         r3, [pc, #0x394]

; 1998 :     g_pSyscPadWkupRegs                  = OALPAtoUA(OMAP_SYSC_PADCONFS_WKUP_REGS_PA);

  00300	e3a01000	 mov         r1, #0
  00304	e5830000	 str         r0, [r3]
  00308	e3890c2a	 orr         r0, r9, #0x2A, 24
  0030c	eb000000	 bl          OALPAtoVA
  00310	e59f337c	 ldr         r3, [pc, #0x37C]
  00314	e1a02000	 mov         r2, r0

; 1999 :     g_pSyscPadConfsRegs                 = OALPAtoUA(OMAP_SYSC_PADCONFS_REGS_PA);

  00318	e59f0370	 ldr         r0, [pc, #0x370]
  0031c	e3a01000	 mov         r1, #0
  00320	e5832000	 str         r2, [r3]
  00324	eb000000	 bl          OALPAtoVA
  00328	e59f335c	 ldr         r3, [pc, #0x35C]
  0032c	e1a02000	 mov         r2, r0

; 2000 :     g_pIdCodeReg                        = OALPAtoUA(OMAP_IDCORE_REGS_PA);

  00330	e59f0350	 ldr         r0, [pc, #0x350]
  00334	e3a01000	 mov         r1, #0
  00338	e5832000	 str         r2, [r3]
  0033c	eb000000	 bl          OALPAtoVA
  00340	e59f333c	 ldr         r3, [pc, #0x33C]

; 2001 :     info.pPrcmPrm                       = &g_PrcmPrm;

  00344	e58d5000	 str         r5, [sp]

; 2002 :     info.pPrcmCm                        = &g_PrcmCm;

  00348	e58d4004	 str         r4, [sp, #4]
  0034c	e5830000	 str         r0, [r3]

; 2003 : 
; 2004 :      // initialize the context restore module
; 2005 :     OALContextRestoreInit();

  00350	eb000000	 bl          OALContextRestoreInit

; 2006 :     SETSYSREG32(OMAP_PRCM_CORE_CM_REGS, CM_ICLKEN1_CORE, CM_CLKEN_OMAPCTRL); // SCM clock enable

  00354	e3a02040	 mov         r2, #0x40
  00358	e3a01010	 mov         r1, #0x10
  0035c	e3890c4a	 orr         r0, r9, #0x4A, 24
  00360	eb000000	 bl          SetShadowReg32

; 2007 :         
; 2008 :     // initialize all devices to autoidle
; 2009 :     OUTSYSREG32(OMAP_PRCM_CORE_CM_REGS, CM_AUTOIDLE1_CORE, CM_AUTOIDLE1_CORE_INIT);

  00364	e5943004	 ldr         r3, [r4, #4]
  00368	e3e0210a	 mvn         r2, #0xA, 2
  0036c	e2222f4b	 eor         r2, r2, #0x4B, 30
  00370	e59f1308	 ldr         r1, [pc, #0x308]
  00374	e5832030	 str         r2, [r3, #0x30]

; 2010 :     OUTSYSREG32(OMAP_PRCM_CORE_CM_REGS, CM_AUTOIDLE2_CORE, CM_AUTOIDLE2_CORE_INIT);

  00378	e5943004	 ldr         r3, [r4, #4]
  0037c	e3a0001f	 mov         r0, #0x1F
  00380	e5812934	 str         r2, [r1, #0x934]
  00384	e5830034	 str         r0, [r3, #0x34]

; 2011 :     OUTSYSREG32(OMAP_PRCM_CORE_CM_REGS, CM_AUTOIDLE3_CORE, CM_AUTOIDLE3_CORE_INIT);

  00388	e5943004	 ldr         r3, [r4, #4]
  0038c	e3a0201f	 mov         r2, #0x1F
  00390	e3a0b004	 mov         r11, #4
  00394	e5812938	 str         r2, [r1, #0x938]
  00398	e583b038	 str         r11, [r3, #0x38]

; 2012 : 
; 2013 :     OUTSYSREG32(OMAP_PRCM_WKUP_CM_REGS, CM_AUTOIDLE_WKUP, CM_AUTOIDLE_WKUP_INIT);

  0039c	e5943000	 ldr         r3, [r4]
  003a0	e3a02004	 mov         r2, #4
  003a4	e581293c	 str         r2, [r1, #0x93C]
  003a8	e3a0203f	 mov         r2, #0x3F
  003ac	e5832030	 str         r2, [r3, #0x30]

; 2014 : 
; 2015 :     OUTREG32(&g_PrcmCm.pOMAP_PER_CM->CM_AUTOIDLE_PER, CM_AUTOIDLE_PER_INIT);

  003b0	e5942008	 ldr         r2, [r4, #8]
  003b4	e3e034ff	 mvn         r3, #0xFF, 8
  003b8	e3a0003f	 mov         r0, #0x3F
  003bc	e223373e	 eor         r3, r3, #0x3E, 14
  003c0	e5810044	 str         r0, [r1, #0x44]
  003c4	e5823030	 str         r3, [r2, #0x30]

; 2016 :     OUTREG32(&g_PrcmCm.pOMAP_CAM_CM->CM_AUTOIDLE_CAM, CM_AUTOIDLE_CAM_INIT);

  003c8	e5943024	 ldr         r3, [r4, #0x24]
  003cc	e3a0a001	 mov         r10, #1

; 2017 :     OUTREG32(&g_PrcmCm.pOMAP_DSS_CM->CM_AUTOIDLE_DSS, CM_AUTOIDLE_DSS_INIT);
; 2018 :     OUTREG32(&g_PrcmCm.pOMAP_USBHOST_CM->CM_AUTOIDLE_USBHOST, CM_AUTOIDLE_USBHOST_INIT);
; 2019 : 
; 2020 :     // clear all sleep dependencies.
; 2021 :     OUTREG32(&g_PrcmCm.pOMAP_SGX_CM->CM_SLEEPDEP_SGX, CM_SLEEPDEP_SGX_INIT);

  003d0	e583a030	 str         r10, [r3, #0x30]
  003d4	e5943018	 ldr         r3, [r4, #0x18]
  003d8	e3a09000	 mov         r9, #0

; 2022 :     OUTREG32(&g_PrcmCm.pOMAP_DSS_CM->CM_SLEEPDEP_DSS, CM_SLEEPDEP_DSS_INIT);
; 2023 :     OUTREG32(&g_PrcmCm.pOMAP_CAM_CM->CM_SLEEPDEP_CAM, CM_SLEEPDEP_CAM_INIT);
; 2024 :     OUTREG32(&g_PrcmCm.pOMAP_PER_CM->CM_SLEEPDEP_PER, CM_SLEEPDEP_PER_INIT);
; 2025 :     OUTREG32(&g_PrcmCm.pOMAP_USBHOST_CM->CM_SLEEPDEP_USBHOST, CM_SLEEPDEP_USBHOST_INIT);
; 2026 : 
; 2027 :     // clear all wake dependencies.
; 2028 :     OUTREG32(&g_PrcmPrm.pOMAP_IVA2_PRM->PM_WKDEP_IVA2, CM_WKDEP_IVA2_INIT);
; 2029 :     OUTREG32(&g_PrcmPrm.pOMAP_MPU_PRM->PM_WKDEP_MPU, CM_WKDEP_MPU_INIT);
; 2030 :     OUTREG32(&g_PrcmPrm.pOMAP_SGX_PRM->PM_WKDEP_SGX, CM_WKDEP_SGX_INIT);
; 2031 :     OUTREG32(&g_PrcmPrm.pOMAP_DSS_PRM->PM_WKDEP_DSS, CM_WKDEP_DSS_INIT);
; 2032 :     OUTREG32(&g_PrcmPrm.pOMAP_CAM_PRM->PM_WKDEP_CAM, CM_WKDEP_CAM_INIT);
; 2033 :     OUTREG32(&g_PrcmPrm.pOMAP_PER_PRM->PM_WKDEP_PER, CM_WKDEP_PER_INIT);
; 2034 :     OUTREG32(&g_PrcmPrm.pOMAP_NEON_PRM->PM_WKDEP_NEON, CM_WKDEP_NEON_INIT);

  003dc	e3a02002	 mov         r2, #2

; 2035 :     OUTREG32(&g_PrcmPrm.pOMAP_USBHOST_PRM->PM_WKDEP_USBHOST, CM_WKDEP_USBHOST_INIT);
; 2036 : 
; 2037 :     // clear all wake ability
; 2038 :     OUTREG32(&g_PrcmPrm.pOMAP_WKUP_PRM->PM_WKEN_WKUP, CM_WKEN_WKUP_INIT);

  003e0	e583a030	 str         r10, [r3, #0x30]
  003e4	e594300c	 ldr         r3, [r4, #0xC]
  003e8	e3a0ec01	 mov         lr, #1, 24

; 2039 :     OUTREG32(&g_PrcmPrm.pOMAP_CORE_PRM->PM_WKEN1_CORE, CM_WKEN1_CORE_INIT);
; 2040 :     OUTREG32(&g_PrcmPrm.pOMAP_PER_PRM->PM_WKEN_PER, CM_WKEN_PER_INIT);
; 2041 :     OUTREG32(&g_PrcmPrm.pOMAP_DSS_PRM->PM_WKEN_DSS, CM_WKEN_DSS_INIT);
; 2042 :     OUTREG32(&g_PrcmPrm.pOMAP_USBHOST_PRM->PM_WKEN_USBHOST, CM_WKEN_USBHOST_INIT);
; 2043 : 
; 2044 :     // UNDONE:
; 2045 :     // For now have allow all devices mpu wakeup cap.
; 2046 :     OUTREG32(OALPAtoVA(0x48306CA4, FALSE), 0x3CB);          // PM_MPUGRPSEL_WKUP

  003ec	e59f0288	 ldr         r0, [pc, #0x288]
  003f0	e583a030	 str         r10, [r3, #0x30]
  003f4	e5943028	 ldr         r3, [r4, #0x28]
  003f8	e3a01000	 mov         r1, #0
  003fc	e5839044	 str         r9, [r3, #0x44]
  00400	e5943018	 ldr         r3, [r4, #0x18]
  00404	e5839044	 str         r9, [r3, #0x44]
  00408	e5943024	 ldr         r3, [r4, #0x24]
  0040c	e5839044	 str         r9, [r3, #0x44]
  00410	e5943008	 ldr         r3, [r4, #8]
  00414	e5839044	 str         r9, [r3, #0x44]
  00418	e594300c	 ldr         r3, [r4, #0xC]
  0041c	e5839044	 str         r9, [r3, #0x44]
  00420	e5953020	 ldr         r3, [r5, #0x20]
  00424	e58390c8	 str         r9, [r3, #0xC8]
  00428	e5953014	 ldr         r3, [r5, #0x14]
  0042c	e58390c8	 str         r9, [r3, #0xC8]
  00430	e5953028	 ldr         r3, [r5, #0x28]
  00434	e58390c8	 str         r9, [r3, #0xC8]
  00438	e5953018	 ldr         r3, [r5, #0x18]
  0043c	e58390c8	 str         r9, [r3, #0xC8]
  00440	e5953024	 ldr         r3, [r5, #0x24]
  00444	e58390c8	 str         r9, [r3, #0xC8]
  00448	e5953008	 ldr         r3, [r5, #8]
  0044c	e58390c8	 str         r9, [r3, #0xC8]
  00450	e595301c	 ldr         r3, [r5, #0x1C]
  00454	e58320c8	 str         r2, [r3, #0xC8]
  00458	e595300c	 ldr         r3, [r5, #0xC]
  0045c	e58390c8	 str         r9, [r3, #0xC8]
  00460	e5953000	 ldr         r3, [r5]
  00464	e583e0a0	 str         lr, [r3, #0xA0]
  00468	e5953004	 ldr         r3, [r5, #4]
  0046c	e58390a0	 str         r9, [r3, #0xA0]
  00470	e5953008	 ldr         r3, [r5, #8]
  00474	e58390a0	 str         r9, [r3, #0xA0]
  00478	e5953018	 ldr         r3, [r5, #0x18]
  0047c	e58390a0	 str         r9, [r3, #0xA0]
  00480	e595300c	 ldr         r3, [r5, #0xC]
  00484	e58390a0	 str         r9, [r3, #0xA0]
  00488	eb000000	 bl          OALPAtoVA
  0048c	e1a02000	 mov         r2, r0

; 2047 :     OUTREG32(OALPAtoVA(0x48306AA4, FALSE), 0xC33FFE18);     // PM_MPUGRPSEL1_CORE

  00490	e59f01e0	 ldr         r0, [pc, #0x1E0]
  00494	e3a03c03	 mov         r3, #3, 24
  00498	e38330cb	 orr         r3, r3, #0xCB
  0049c	e3a01000	 mov         r1, #0
  004a0	e5823000	 str         r3, [r2]
  004a4	eb000000	 bl          OALPAtoVA
  004a8	e59f31c4	 ldr         r3, [pc, #0x1C4]
  004ac	e1a02000	 mov         r2, r0

; 2048 :     OUTREG32(OALPAtoVA(0x48306AF8, FALSE), 0x00000004);     // PM_MPUGRPSEL3_CORE

  004b0	e59f01b8	 ldr         r0, [pc, #0x1B8]
  004b4	e3a01000	 mov         r1, #0
  004b8	e5823000	 str         r3, [r2]
  004bc	eb000000	 bl          OALPAtoVA
  004c0	e1a03000	 mov         r3, r0

; 2049 :     OUTREG32(OALPAtoVA(0x483070A4, FALSE), 0x0003EFFF);     // PM_MPUGRPSEL_PER

  004c4	e59f01a0	 ldr         r0, [pc, #0x1A0]
  004c8	e3a01000	 mov         r1, #0
  004cc	e583b000	 str         r11, [r3]
  004d0	eb000000	 bl          OALPAtoVA
  004d4	e1a02000	 mov         r2, r0

; 2050 :     OUTREG32(OALPAtoVA(0x483074A4, FALSE), 0x00000001);     // PM_MPUGRPSEL_USBHOST

  004d8	e59f0188	 ldr         r0, [pc, #0x188]
  004dc	e3a03a3f	 mov         r3, #0x3F, 20
  004e0	e2433001	 sub         r3, r3, #1
  004e4	e3a01000	 mov         r1, #0
  004e8	e5823000	 str         r3, [r2]
  004ec	eb000000	 bl          OALPAtoVA

; 2051 : 
; 2052 :     // If a UART is used during the basic intialization, the system will lock up.
; 2053 :     // The problem appears to be cause by enabling domain power management as soon 
; 2054 :     // as the first device in the domain is initialized, instead of initializing all
; 2055 :     // devices in domain before enabling domain autoidle. Since the system is single
; 2056 :     // threaded when this function is called, the UART use during init is the only problem.
; 2057 :     OALMSG(OAL_FUNC, (L" Disable serial debug messages during PRCM Device Initialize\r\n"));

  004f0	e59f416c	 ldr         r4, [pc, #0x16C]
  004f4	e580a000	 str         r10, [r0]
  004f8	e5943440	 ldr         r3, [r4, #0x440]
  004fc	e3130004	 tst         r3, #4
  00500	159f0158	 ldrne       r0, [pc, #0x158]
  00504	1b000000	 blne        NKDbgPrintfW

; 2058 :     //brian OEMEnableDebugOutput(FALSE);
; 2059 : 
; 2060 :     OUTREG32(&g_PrcmPrm.pOMAP_GLOBAL_PRM->PRM_RSTST,
; 2061 :         INREG32(&g_PrcmPrm.pOMAP_GLOBAL_PRM->PRM_RSTST)); // PRM_RSTST - clear to 0
; 2062 : 
; 2063 :     // ERRATA WORKAROUND: 1.107
; 2064 :     // clear an EMU reserved bit so the EMU power domain
; 2065 :     // won't lock-up on wake-up
; 2066 :     OUTREG32(&g_PrcmPrm.pOMAP_EMU_PRM->PM_PWSTST_EMU, 0);
; 2067 : 
; 2068 :     // set SDRC_POWER_REG register
; 2069 :     OUTREG32(&g_pSDRCRegs->SDRC_POWER, BSP_SDRC_POWER_REG);
; 2070 : 
; 2071 :     // configure setup times for voltage and src clk
; 2072 :     OUTREG32(&g_PrcmPrm.pOMAP_GLOBAL_PRM->PRM_CLKSETUP, BSP_PRM_CLKSETUP);
; 2073 :     OUTREG32(&g_PrcmPrm.pOMAP_GLOBAL_PRM->PRM_VOLTSETUP1, BSP_PRM_VOLTSETUP1_INIT);

  00508	e59fe14c	 ldr         lr, [pc, #0x14C]
  0050c	e595202c	 ldr         r2, [r5, #0x2C]
  00510	e59f1140	 ldr         r1, [pc, #0x140]
  00514	e5923058	 ldr         r3, [r2, #0x58]

; 2074 :     OUTREG32(&g_PrcmPrm.pOMAP_GLOBAL_PRM->PRM_VOLTSETUP2, BSP_PRM_VOLTSETUP2);
; 2075 :     OUTREG32(&g_PrcmPrm.pOMAP_GLOBAL_PRM->PRM_VOLTOFFSET, BSP_PRM_VOLTOFFSET);
; 2076 : 
; 2077 :     // initialize prcm library
; 2078 :     PrcmInit(&info);

  00518	e28d0000	 add         r0, sp, #0
  0051c	e5823058	 str         r3, [r2, #0x58]
  00520	e5953010	 ldr         r3, [r5, #0x10]
  00524	e58390e4	 str         r9, [r3, #0xE4]
  00528	e5973000	 ldr         r3, [r7]
  0052c	e5831070	 str         r1, [r3, #0x70]
  00530	e595302c	 ldr         r3, [r5, #0x2C]
  00534	e583b098	 str         r11, [r3, #0x98]
  00538	e595302c	 ldr         r3, [r5, #0x2C]
  0053c	e583e090	 str         lr, [r3, #0x90]
  00540	e595302c	 ldr         r3, [r5, #0x2C]
  00544	e58390a0	 str         r9, [r3, #0xA0]
  00548	e595302c	 ldr         r3, [r5, #0x2C]
  0054c	e5839094	 str         r9, [r3, #0x94]
  00550	eb000000	 bl          PrcmInit

; 2079 :     
; 2080 :     //----------------------------------------------------------------------
; 2081 :     // Initialize I2C devices
; 2082 :     //----------------------------------------------------------------------
; 2083 :     OALI2CInit(OMAP_DEVICE_I2C1); // TPS65950

  00554	e3a0000c	 mov         r0, #0xC
  00558	eb000000	 bl          OALI2CInit

; 2084 :     OALI2CInit(OMAP_DEVICE_I2C2); // G-Sensor

  0055c	e3a0000d	 mov         r0, #0xD
  00560	eb000000	 bl          OALI2CInit

; 2085 :     //OALI2CInit(OMAP_DEVICE_I2C3); // DVI
; 2086 : 
; 2087 :     //----------------------------------------------------------------------
; 2088 :     // clock GPIO banks
; 2089 :     //----------------------------------------------------------------------
; 2090 :     EnableDeviceClocks(OMAP_DEVICE_GPIO1,TRUE);

  00564	e3a01001	 mov         r1, #1
  00568	e3a00029	 mov         r0, #0x29
  0056c	eb000000	 bl          EnableDeviceClocks

; 2091 :     EnableDeviceClocks(OMAP_DEVICE_GPIO2,TRUE);

  00570	e3a01001	 mov         r1, #1
  00574	e3a0002d	 mov         r0, #0x2D
  00578	eb000000	 bl          EnableDeviceClocks

; 2092 :     EnableDeviceClocks(OMAP_DEVICE_GPIO3,TRUE);

  0057c	e3a01001	 mov         r1, #1
  00580	e3a0002e	 mov         r0, #0x2E
  00584	eb000000	 bl          EnableDeviceClocks

; 2093 :     EnableDeviceClocks(OMAP_DEVICE_GPIO4,TRUE);

  00588	e3a01001	 mov         r1, #1
  0058c	e3a0002f	 mov         r0, #0x2F
  00590	eb000000	 bl          EnableDeviceClocks

; 2094 :     EnableDeviceClocks(OMAP_DEVICE_GPIO5,TRUE);

  00594	e3a01001	 mov         r1, #1
  00598	e3a00030	 mov         r0, #0x30
  0059c	eb000000	 bl          EnableDeviceClocks

; 2095 :     EnableDeviceClocks(OMAP_DEVICE_GPIO6,TRUE);

  005a0	e3a01001	 mov         r1, #1
  005a4	e3a00031	 mov         r0, #0x31
  005a8	eb000000	 bl          EnableDeviceClocks

; 2096 : 
; 2097 :     // initialize pin mux table
; 2098 :     OALMux_InitMuxTable(); // nothing

  005ac	eb000000	 bl          OALMux_InitMuxTable

; 2099 :    
; 2100 :     // set clock transition delay
; 2101 :     PrcmClockSetSystemClockSetupTime((USHORT)dwOEMPRCMCLKSSetupTime);

  005b0	e59f309c	 ldr         r3, [pc, #0x9C]
  005b4	e5933000	 ldr         r3, [r3]
  005b8	e1a00803	 mov         r0, r3, lsl #16
  005bc	e1a00820	 mov         r0, r0, lsr #16
  005c0	eb000000	 bl          PrcmClockSetSystemClockSetupTime

; 2102 : 
; 2103 :     // - Automatically send command for off, retention, sleep
; 2104 :     PrcmVoltSetAutoControl(
; 2105 :         AUTO_OFF_ENABLED | AUTO_RET_DISABLED | AUTO_SLEEP_DISABLED,
; 2106 :         AUTO_OFF | AUTO_RET | AUTO_SLEEP);

  005c4	e3a01007	 mov         r1, #7
  005c8	e3a00004	 mov         r0, #4
  005cc	eb000000	 bl          PrcmVoltSetAutoControl

; 2107 : 
; 2108 :     // - set polarity modes
; 2109 :     // - SYS_CLKREQ is active high
; 2110 :     PrcmVoltSetControlPolarity(
; 2111 :         CLKREQ_POL_ACTIVEHIGH | OFFMODE_POL_ACTIVELOW | CLKOUT_POL_INACTIVELOW | EXTVOL_POL_ACTIVELOW,
; 2112 :         OFFMODE_POL | CLKOUT_POL | CLKREQ_POL | EXTVOL_POL);

  005d0	e3a0100f	 mov         r1, #0xF
  005d4	e3a00002	 mov         r0, #2
  005d8	eb000000	 bl          PrcmVoltSetControlPolarity

; 2113 : 
; 2114 :     // de-assert external clk req on retention and off
; 2115 :     PrcmClockSetExternalClockRequestMode(AUTOEXTCLKMODE_INRETENTION);

  005dc	e3a00010	 mov         r0, #0x10
  005e0	eb000000	 bl          PrcmClockSetExternalClockRequestMode

; 2116 : 
; 2117 :     InitT2PowerSequence();

  005e4	eb000000	 bl          InitT2PowerSequence

; 2118 : 
; 2119 :     // we need to write FORCEIDLE to the GPMC register or else it will prevent
; 2120 :     // the core from entering retention.  After the write smartidle can be
; 2121 :     // selected
; 2122 :     OUTREG32(&g_pGPMCRegs->GPMC_SYSCONFIG, SYSCONFIG_FORCEIDLE | SYSCONFIG_AUTOIDLE);
; 2123 : 
; 2124 :     // configure SCM, SDRC, SMS, and GPMC to smartidle/autoidle
; 2125 :     OUTREG32(&s_pSyscIFContext->CONTROL_SYSCONFIG, SYSCONFIG_SMARTIDLE | SYSCONFIG_AUTOIDLE);

  005e8	e59f3060	 ldr         r3, [pc, #0x60]
  005ec	e5962000	 ldr         r2, [r6]
  005f0	e3a01011	 mov         r1, #0x11
  005f4	e5933000	 ldr         r3, [r3]
  005f8	e582a010	 str         r10, [r2, #0x10]

; 2126 :     OUTREG32(&g_pSMSRegs->SMS_SYSCONFIG, SYSCONFIG_AUTOIDLE | SYSCONFIG_SMARTIDLE);
; 2127 :     OUTREG32(&g_pSDRCRegs->SDRC_SYSCONFIG, SYSCONFIG_SMARTIDLE);

  005fc	e3a02010	 mov         r2, #0x10
  00600	e5831010	 str         r1, [r3, #0x10]
  00604	e5983000	 ldr         r3, [r8]

; 2128 :     OUTREG32(&g_pGPMCRegs->GPMC_SYSCONFIG, SYSCONFIG_SMARTIDLE | SYSCONFIG_AUTOIDLE);
; 2129 : 
; 2130 :     #ifdef DEBUG_PRCM_SUSPEND_RESUME
; 2131 :         g_PrcmDebugSuspendResume = TRUE;
; 2132 :     #endif
; 2133 : 		
; 2134 :     // re-enable serial debug output
; 2135 :     OEMEnableDebugOutput(TRUE);

  00608	e3a00001	 mov         r0, #1
  0060c	e5831010	 str         r1, [r3, #0x10]
  00610	e5973000	 ldr         r3, [r7]
  00614	e5832010	 str         r2, [r3, #0x10]
  00618	e5963000	 ldr         r3, [r6]
  0061c	e5831010	 str         r1, [r3, #0x10]
  00620	eb000000	 bl          OEMEnableDebugOutput

; 2136 :     OALMSG(OAL_FUNC, (L" Serial debug messages renabled\r\n"));

  00624	e5943440	 ldr         r3, [r4, #0x440]
  00628	e3130004	 tst         r3, #4
  0062c	159f0018	 ldrne       r0, [pc, #0x18]
  00630	1b000000	 blne        NKDbgPrintfW

; 2137 : 
; 2138 :     OALMSG(1, (L"-OALPowerInit()\r\n"));

  00634	e59f000c	 ldr         r0, [pc, #0xC]
  00638	eb000000	 bl          NKDbgPrintfW

; 2139 : }

  0063c	e28dd008	 add         sp, sp, #8
  00640	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00644	e12fff1e	 bx          lr
  00648		 |$LN50@OALPowerIn|
  00648		 |$LN51@OALPowerIn|
  00648	00000000	 DCD         |??_C@_1CE@IPHHBGKL@?$AA?9?$AAO?$AAA?$AAL?$AAP?$AAo?$AAw?$AAe?$AAr?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  0064c		 |$LN52@OALPowerIn|
  0064c	00000000	 DCD         |??_C@_1EE@NIHPAAL@?$AA?5?$AAS?$AAe?$AAr?$AAi?$AAa?$AAl?$AA?5?$AAd?$AAe?$AAb?$AAu?$AAg?$AA?5?$AAm?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AAs?$AA?5?$AAr?$AAe?$AAn?$AAa?$AAb?$AAl?$AAe?$AAd?$AA?$AN@|
  00650		 |$LN53@OALPowerIn|
  00650	00000000	 DCD         |s_pSyscIFContext|
  00654		 |$LN54@OALPowerIn|
  00654	00000000	 DCD         |dwOEMPRCMCLKSSetupTime|
  00658		 |$LN55@OALPowerIn|
  00658	001112ed	 DCD         0x1112ed
  0065c		 |$LN56@OALPowerIn|
  0065c	01120112	 DCD         0x1120112
  00660		 |$LN57@OALPowerIn|
  00660	00000000	 DCD         |??_C@_1HO@BBDDKKCD@?$AA?5?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AA?5?$AAs?$AAe?$AAr?$AAi?$AAa?$AAl?$AA?5?$AAd?$AAe?$AAb?$AAu?$AAg?$AA?5?$AAm?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AAs?$AA?5?$AAd@|
  00664		 |$LN58@OALPowerIn|
  00664	00000000	 DCD         |dpCurSettings|
  00668		 |$LN59@OALPowerIn|
  00668	483074a4	 DCD         0x483074a4
  0066c		 |$LN60@OALPowerIn|
  0066c	483070a4	 DCD         0x483070a4
  00670		 |$LN61@OALPowerIn|
  00670	48306af8	 DCD         0x48306af8
  00674		 |$LN62@OALPowerIn|
  00674	c33ffe18	 DCD         0xc33ffe18
  00678		 |$LN63@OALPowerIn|
  00678	48306aa4	 DCD         0x48306aa4
  0067c		 |$LN64@OALPowerIn|
  0067c	48306ca4	 DCD         0x48306ca4
  00680		 |$LN65@OALPowerIn|
  00680	00000000	 DCD         |s_ocpSysCmContext|
  00684		 |$LN66@OALPowerIn|
  00684	00000000	 DCD         |g_pIdCodeReg|
  00688		 |$LN67@OALPowerIn|
  00688	4830a204	 DCD         0x4830a204
  0068c		 |$LN68@OALPowerIn|
  0068c	00000000	 DCD         |g_pSyscPadConfsRegs|
  00690		 |$LN69@OALPowerIn|
  00690	48002030	 DCD         0x48002030
  00694		 |$LN70@OALPowerIn|
  00694	00000000	 DCD         |g_pSyscPadWkupRegs|
  00698		 |$LN71@OALPowerIn|
  00698	00000000	 DCD         |g_pSdrcRestore|
  0069c		 |$LN72@OALPowerIn|
  0069c	48002974	 DCD         0x48002974
  006a0		 |$LN73@OALPowerIn|
  006a0	00000000	 DCD         |g_pPrcmRestore|
  006a4		 |$LN74@OALPowerIn|
  006a4	48002934	 DCD         0x48002934
  006a8		 |$LN75@OALPowerIn|
  006a8	00000000	 DCD         |g_pContextRestore|
  006ac		 |$LN76@OALPowerIn|
  006ac	48002910	 DCD         0x48002910
  006b0		 |$LN77@OALPowerIn|
  006b0	00000000	 DCD         |g_PrcmCm|
  006b4		 |$LN78@OALPowerIn|
  006b4	48307400	 DCD         0x48307400
  006b8		 |$LN79@OALPowerIn|
  006b8	48307100	 DCD         0x48307100
  006bc		 |$LN80@OALPowerIn|
  006bc	48307300	 DCD         0x48307300
  006c0		 |$LN81@OALPowerIn|
  006c0	48306f00	 DCD         0x48306f00
  006c4		 |$LN82@OALPowerIn|
  006c4	48306b00	 DCD         0x48306b00
  006c8		 |$LN83@OALPowerIn|
  006c8	48306e00	 DCD         0x48306e00
  006cc		 |$LN84@OALPowerIn|
  006cc	48306000	 DCD         0x48306000
  006d0		 |$LN85@OALPowerIn|
  006d0	48306900	 DCD         0x48306900
  006d4		 |$LN86@OALPowerIn|
  006d4	48306a00	 DCD         0x48306a00
  006d8		 |$LN87@OALPowerIn|
  006d8	48307000	 DCD         0x48307000
  006dc		 |$LN88@OALPowerIn|
  006dc	48306c00	 DCD         0x48306c00
  006e0		 |$LN89@OALPowerIn|
  006e0	48306d00	 DCD         0x48306d00
  006e4		 |$LN90@OALPowerIn|
  006e4	48306800	 DCD         0x48306800
  006e8		 |$LN91@OALPowerIn|
  006e8	00000000	 DCD         |g_PrcmPrm|
  006ec		 |$LN92@OALPowerIn|
  006ec	48307200	 DCD         0x48307200
  006f0		 |$LN93@OALPowerIn|
  006f0	00000000	 DCD         |g_pSysCtrlGenReg|
  006f4		 |$LN94@OALPowerIn|
  006f4	48002270	 DCD         0x48002270
  006f8		 |$LN95@OALPowerIn|
  006f8	00000000	 DCD         |g_pVRFBRegs|
  006fc		 |$LN96@OALPowerIn|
  006fc	00000000	 DCD         |g_pSMSRegs|
  00700		 |$LN97@OALPowerIn|
  00700	00000000	 DCD         |g_pSDRCRegs|
  00704		 |$LN98@OALPowerIn|
  00704	00000000	 DCD         |g_pGPMCRegs|
  00708		 |$LN99@OALPowerIn|
  00708	00000000	 DCD         |??_C@_1CE@EGLHOBFH@?$AA?$CL?$AAO?$AAA?$AAL?$AAP?$AAo?$AAw?$AAe?$AAr?$AAI?$AAn?$AAi?$AAt?$AA?$CI?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  0070c		 |$M51132|

			 ENDP  ; |OALPowerInit|

	EXPORT	|OALPowerPostInit|
	EXPORT	|??_C@_1CI@CGLJHOCE@?$AA?9?$AAO?$AAA?$AAL?$AAP?$AAo?$AAw?$AAe?$AAr?$AAP?$AAo?$AAs?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@KBFDMENB@?$AAC?$AAP?$AAU?$AA?5?$AAf?$AAa?$AAm?$AAi?$AAl?$AAy?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAi?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAS?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?4@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@HDMABPDE@?$AA?$CL?$AAO?$AAA?$AAL?$AAP?$AAo?$AAw?$AAe?$AAr?$AAP?$AAo?$AAs?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|PrcmVoltScaleVoltageABB|
	IMPORT	|PrcmInterruptEnable|
	IMPORT	|OALWakeupLatency_Initialize|
	IMPORT	|g_dwCpuRevision|
	IMPORT	|PrcmDomainSetMemoryState|
	IMPORT	|PrcmVoltSetControlMode|
	IMPORT	|OALSDRCRefreshCounter|
	IMPORT	|SmartReflex_PostInitialize|
	IMPORT	|SmartReflex_Initialize|
	IMPORT	|Opp_init|
	IMPORT	|PrcmContextRestoreInit|
	IMPORT	|OALI2CPostInit|
	IMPORT	|PrcmPostInit|
	IMPORT	|OALArgsQuery|

  00000			 AREA	 |.pdata|, PDATA
|$T51246| DCD	|$LN33@OALPowerPo|
	DCD	0x40014d02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@CGLJHOCE@?$AA?9?$AAO?$AAA?$AAL?$AAP?$AAo?$AAw?$AAe?$AAr?$AAP?$AAo?$AAs?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "-"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "P", 0x0, "o", 0x0, "w"
	DCB	0x0, "e", 0x0, "r", 0x0, "P", 0x0, "o", 0x0, "s", 0x0, "t"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@KBFDMENB@?$AAC?$AAP?$AAU?$AA?5?$AAf?$AAa?$AAm?$AAi?$AAl?$AAy?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAi?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAS?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?4@| DCB "C"
	DCB	0x0, "P", 0x0, "U", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "m"
	DCB	0x0, "i", 0x0, "l", 0x0, "y", 0x0, "(", 0x0, "%", 0x0, "d"
	DCB	0x0, ")", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, "n"
	DCB	0x0, "o", 0x0, "t", 0x0, " ", 0x0, "S", 0x0, "u", 0x0, "p"
	DCB	0x0, "p", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, "e", 0x0, "d"
	DCB	0x0, ".", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@HDMABPDE@?$AA?$CL?$AAO?$AAA?$AAL?$AAP?$AAo?$AAw?$AAe?$AAr?$AAP?$AAo?$AAs?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "+"
	DCB	0x0, "O", 0x0, "A", 0x0, "L", 0x0, "P", 0x0, "o", 0x0, "w"
	DCB	0x0, "e", 0x0, "r", 0x0, "P", 0x0, "o", 0x0, "s", 0x0, "t"
	DCB	0x0, "I", 0x0, "n", 0x0, "i", 0x0, "t", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALPowerPostInit| PROC

; 2150 : {

  00000		 |$LN33@OALPowerPo|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd02c	 sub         sp, sp, #0x2C
  00008		 |$M51243|

; 2151 :     IOCTL_PRCM_CLOCK_SET_DPLLSTATE_IN dpllInfo;
; 2152 :     
; 2153 :     DWORD rgDomain = DVFS_MPU1_OPP;

  00008	e3a03010	 mov         r3, #0x10

; 2154 :     DWORD * rgOpp = OALArgsQuery(OAL_ARGS_QUERY_OPP_MODE);    

  0000c	e3a00049	 mov         r0, #0x49
  00010	e58d3008	 str         r3, [sp, #8]
  00014	eb000000	 bl          OALArgsQuery
  00018	e1a04000	 mov         r4, r0

; 2155 : 
; 2156 :     OALMSG(1, (L"+OALPowerPostInit\r\n"));

  0001c	e59f050c	 ldr         r0, [pc, #0x50C]
  00020	eb000000	 bl          NKDbgPrintfW

; 2157 : 
; 2158 :     // Allow power compontents to initialize with a full featured kernel
; 2159 :     // before threads are scheduled
; 2160 :     PrcmPostInit();

  00024	eb000000	 bl          PrcmPostInit

; 2161 :     OALI2CPostInit();

  00028	eb000000	 bl          OALI2CPostInit

; 2162 :     PrcmContextRestoreInit();

  0002c	eb000000	 bl          PrcmContextRestoreInit

; 2163 :     Opp_init();

  00030	eb000000	 bl          Opp_init

; 2164 :     SmartReflex_Initialize();

  00034	eb000000	 bl          SmartReflex_Initialize

; 2165 :     SmartReflex_PostInitialize();

  00038	eb000000	 bl          SmartReflex_PostInitialize

; 2166 : 
; 2167 :     SetOpp(&rgDomain,rgOpp,1);

  0003c	e3a02001	 mov         r2, #1
  00040	e1a01004	 mov         r1, r4
  00044	e28d0008	 add         r0, sp, #8
  00048	eb000000	 bl          SetOpp

; 2168 : 
; 2169 :     if(g_dwCpuFamily == CPU_FAMILY_DM37XX)

  0004c	e59f54d8	 ldr         r5, [pc, #0x4D8]
  00050	e5951000	 ldr         r1, [r5]
  00054	e3510001	 cmp         r1, #1
  00058	1a000005	 bne         |$LN6@OALPowerPo|
  0005c	e3a03c02	 mov         r3, #2, 24
  00060	e3a02c05	 mov         r2, #5, 24

; 2170 :     {
; 2171 :         OALSDRCRefreshCounter(BSP_HYNIX_ARCV, BSP_HYNIX_ARCV_LOW);

  00064	e3831012	 orr         r1, r3, #0x12
  00068	e38200e6	 orr         r0, r2, #0xE6

; 2174 :     {
; 2175 :         OALSDRCRefreshCounter(BSP_MICRON_ARCV, BSP_MICRON_ARCV_LOW);

  0006c	eb000000	 bl          OALSDRCRefreshCounter

; 2176 :     }
; 2177 :     else

  00070	ea00000c	 b           |$LN9@OALPowerPo|
  00074		 |$LN6@OALPowerPo|

; 2172 :     }
; 2173 :     else if (g_dwCpuFamily == CPU_FAMILY_OMAP35XX)

  00074	e3510000	 cmp         r1, #0
  00078	1a000005	 bne         |$LN4@OALPowerPo|
  0007c	e3a03c02	 mov         r3, #2, 24
  00080	e3a02b01	 mov         r2, #1, 22

; 2174 :     {
; 2175 :         OALSDRCRefreshCounter(BSP_MICRON_ARCV, BSP_MICRON_ARCV_LOW);

  00084	e3831055	 orr         r1, r3, #0x55
  00088	e38200e2	 orr         r0, r2, #0xE2
  0008c	eb000000	 bl          OALSDRCRefreshCounter

; 2176 :     }
; 2177 :     else

  00090	ea000004	 b           |$LN9@OALPowerPo|
  00094		 |$LN4@OALPowerPo|

; 2178 :     {
; 2179 :         OALMSG(OAL_ERROR, (L"CPU family(%d) is not Supported.\r\n", g_dwCpuFamily));

  00094	e59f348c	 ldr         r3, [pc, #0x48C]
  00098	e5933440	 ldr         r3, [r3, #0x440]
  0009c	e3130001	 tst         r3, #1
  000a0	159f047c	 ldrne       r0, [pc, #0x47C]
  000a4	1b000000	 blne        NKDbgPrintfW
  000a8		 |$LN9@OALPowerPo|

; 2180 :     }
; 2181 : 
; 2182 :     // ES 1.0
; 2183 :     // Need to force USB into standby mode to allow OMAP to go
; 2184 :     // into full retention
; 2185 :     ForceStandbyUSB();

  000a8	eb000000	 bl          ForceStandbyUSB

; 2186 : 
; 2187 :     // Force MMC into idle
; 2188 :     ForceIdleMMC();

  000ac	eb000000	 bl          ForceIdleMMC

; 2189 : 
; 2190 :     // Disable clocks enabled by bootloader, except display
; 2191 :     PrcmDeviceEnableClocks(OMAP_DEVICE_MMC1, FALSE);

  000b0	e3a01000	 mov         r1, #0
  000b4	e3a00015	 mov         r0, #0x15
  000b8	eb000000	 bl          PrcmDeviceEnableClocks

; 2192 :     PrcmDeviceEnableClocks(OMAP_DEVICE_DSS2, FALSE);

  000bc	e3a01000	 mov         r1, #0
  000c0	e3a00041	 mov         r0, #0x41
  000c4	eb000000	 bl          PrcmDeviceEnableClocks

; 2193 :     PrcmDeviceEnableClocks(OMAP_DEVICE_TVOUT, FALSE);

  000c8	e3a01000	 mov         r1, #0
  000cc	e3a00042	 mov         r0, #0x42
  000d0	eb000000	 bl          PrcmDeviceEnableClocks

; 2194 :     PrcmDeviceEnableClocks(OMAP_DEVICE_WDT2, FALSE);

  000d4	e3a01000	 mov         r1, #0
  000d8	e3a00028	 mov         r0, #0x28
  000dc	eb000000	 bl          PrcmDeviceEnableClocks

; 2195 :     PrcmDeviceEnableClocks(OMAP_DEVICE_GPTIMER1, FALSE);

  000e0	e3a01000	 mov         r1, #0
  000e4	e3a00024	 mov         r0, #0x24
  000e8	eb000000	 bl          PrcmDeviceEnableClocks

; 2196 :     PrcmDeviceEnableClocks(OMAP_DEVICE_HSOTGUSB, FALSE);

  000ec	e3a01000	 mov         r1, #0
  000f0	e3a00003	 mov         r0, #3
  000f4	eb000000	 bl          PrcmDeviceEnableClocks

; 2197 : 
; 2198 :     // - PowerIC controlled via I2C
; 2199 :     // - T2 doesn't support OFF command via I2C
; 2200 :     PrcmVoltSetControlMode(
; 2201 :         SEL_VMODE_I2C | SEL_OFF_SIGNALLINE,
; 2202 :         SEL_VMODE | SEL_OFF
; 2203 :         );

  000f8	e3a01018	 mov         r1, #0x18
  000fc	e3a00008	 mov         r0, #8
  00100	eb000000	 bl          PrcmVoltSetControlMode

; 2204 : 
; 2205 :     // configure memory on/retention/off levels
; 2206 :     PrcmDomainSetMemoryState(POWERDOMAIN_MPU,
; 2207 :         L2CACHEONSTATE_MEMORYON_DOMAINON | L2CACHERETSTATE_MEMORYRET_DOMAINRET |
; 2208 :         LOGICRETSTATE_LOGICRET_DOMAINRET,
; 2209 :         L2CACHEONSTATE | L2CACHERETSTATE |
; 2210 :         LOGICRETSTATE
; 2211 :         );

  00104	e3a03803	 mov         r3, #3, 16
  00108	e3832f41	 orr         r2, r3, #0x41, 30
  0010c	e3831f41	 orr         r1, r3, #0x41, 30
  00110	e3a00005	 mov         r0, #5
  00114	eb000000	 bl          PrcmDomainSetMemoryState

; 2212 : 
; 2213 :     PrcmDomainSetMemoryState(POWERDOMAIN_IVA2,
; 2214 :         L2FLATMEMONSTATE_MEMORYON_DOMAINON | SHAREDL2CACHEFLATONSTATE_MEMORYON_DOMAINON |
; 2215 :         L1FLATMEMONSTATE_MEMORYON_DOMAINON | SHAREDL1CACHEFLATONSTATE_MEMORYON_DOMAINON |
; 2216 :         L2FLATMEMRETSTATE_MEMORYRET_DOMAINRET | SHAREDL2CACHEFLATRETSTATE_MEMORYRET_DOMAINRET |
; 2217 :         L1FLATMEMRETSTATE_MEMORYRET_DOMAINRET | SHAREDL1CACHEFLATRETSTATE_MEMORYRET_DOMAINRET |
; 2218 :         LOGICRETSTATE_LOGICRET_DOMAINRET,
; 2219 :         L2FLATMEMONSTATE | SHAREDL2CACHEFLATONSTATE |
; 2220 :         L1FLATMEMONSTATE | SHAREDL1CACHEFLATONSTATE |
; 2221 :         L2FLATMEMRETSTATE | SHAREDL2CACHEFLATRETSTATE |
; 2222 :         L1FLATMEMRETSTATE | SHAREDL1CACHEFLATRETSTATE |
; 2223 :         LOGICRETSTATE
; 2224 :         );

  00118	e59f1400	 ldr         r1, [pc, #0x400]
  0011c	e3a00008	 mov         r0, #8
  00120	e1a02001	 mov         r2, r1
  00124	eb000000	 bl          PrcmDomainSetMemoryState

; 2225 : 
; 2226 :     PrcmDomainSetMemoryState(POWERDOMAIN_CORE,
; 2227 :         MEM2ONSTATE_MEMORYON_DOMAINON | MEM1ONSTATE_MEMORYON_DOMAINON |
; 2228 :         MEM2RETSTATE_MEMORYRET_DOMAINRET | MEM2RETSTATE_MEMORYRET_DOMAINRET |
; 2229 :         LOGICRETSTATE_LOGICRET_DOMAINRET,
; 2230 :         MEM2ONSTATE | MEM1ONSTATE |
; 2231 :         MEM2RETSTATE | MEM2RETSTATE |
; 2232 :         LOGICRETSTATE
; 2233 :         );

  00128	e3a0380f	 mov         r3, #0xF, 16
  0012c	e3832f81	 orr         r2, r3, #0x81, 30
  00130	e3831f81	 orr         r1, r3, #0x81, 30
  00134	e3a00001	 mov         r0, #1
  00138	eb000000	 bl          PrcmDomainSetMemoryState

; 2234 : 
; 2235 :     PrcmDomainSetMemoryState(POWERDOMAIN_PERIPHERAL,
; 2236 :         LOGICRETSTATE_LOGICRET_DOMAINRET,
; 2237 :         LOGICRETSTATE
; 2238 :         );

  0013c	e3a02004	 mov         r2, #4
  00140	e3a01004	 mov         r1, #4
  00144	e3a00002	 mov         r0, #2
  00148	eb000000	 bl          PrcmDomainSetMemoryState

; 2239 : 
; 2240 : 
; 2241 :     // ES3.1 fix
; 2242 :     if (g_dwCpuRevision == CPU_FAMILY_35XX_REVISION_ES_3_1)

  0014c	e59f33c8	 ldr         r3, [pc, #0x3C8]
  00150	e5933000	 ldr         r3, [r3]
  00154	e3530006	 cmp         r3, #6
  00158	1a000008	 bne         |$LN2@OALPowerPo|

; 2243 :         {
; 2244 :         // enable USBTLL SAR
; 2245 :         PrcmDomainSetMemoryState(POWERDOMAIN_CORE, SAVEANDRESTORE, SAVEANDRESTORE);

  0015c	e3a02010	 mov         r2, #0x10
  00160	e3a01010	 mov         r1, #0x10
  00164	e3a00001	 mov         r0, #1
  00168	eb000000	 bl          PrcmDomainSetMemoryState

; 2246 : 
; 2247 :         // configure USBHOST for memory on when domain is on, logic retained when domain is in retention
; 2248 :         PrcmDomainSetMemoryState(POWERDOMAIN_USBHOST,
; 2249 :             LOGICRETSTATE_LOGICRET_DOMAINRET | MEMONSTATE_MEMORYON_DOMAINON,
; 2250 :             LOGICRETSTATE | MEMONSTATE
; 2251 :             );

  0016c	e3a03803	 mov         r3, #3, 16
  00170	e3832004	 orr         r2, r3, #4
  00174	e3831004	 orr         r1, r3, #4
  00178	e3a00003	 mov         r0, #3
  0017c	eb000000	 bl          PrcmDomainSetMemoryState
  00180		 |$LN2@OALPowerPo|

; 2252 :         }
; 2253 : 
; 2254 :     // update dpll settings    
; 2255 :     dpllInfo.size = sizeof(IOCTL_PRCM_CLOCK_SET_DPLLSTATE_IN);
; 2256 :     dpllInfo.lowPowerEnabled = FALSE;
; 2257 :     dpllInfo.driftGuardEnabled = FALSE;
; 2258 :     dpllInfo.dpllMode = DPLL_MODE_LOCK; 

  00180	e3a00007	 mov         r0, #7

; 2259 :     dpllInfo.ffMask = DPLL_UPDATE_ALL;
; 2260 :     dpllInfo.rampTime = DPLL_RAMPTIME_20;
; 2261 :     dpllInfo.dpllAutoidleState = DPLL_AUTOIDLE_LOWPOWERSTOPMODE;
; 2262 :    
; 2263 :     // dpll1
; 2264 :     dpllInfo.dpllId = kDPLL1;

  00184	e58d0024	 str         r0, [sp, #0x24]
  00188	e3a03020	 mov         r3, #0x20
  0018c	e3a02000	 mov         r2, #0
  00190	e3a01000	 mov         r1, #0
  00194	e3a0e01f	 mov         lr, #0x1F
  00198	e3a04c02	 mov         r4, #2, 24
  0019c	e3a06001	 mov         r6, #1
  001a0	e3a07000	 mov         r7, #0

; 2265 :     PrcmClockSetDpllState(&dpllInfo);

  001a4	e28d000c	 add         r0, sp, #0xC
  001a8	e58d300c	 str         r3, [sp, #0xC]
  001ac	e58d2018	 str         r2, [sp, #0x18]
  001b0	e58d1020	 str         r1, [sp, #0x20]
  001b4	e58de014	 str         lr, [sp, #0x14]
  001b8	e58d401c	 str         r4, [sp, #0x1C]
  001bc	e58d6028	 str         r6, [sp, #0x28]
  001c0	e58d7010	 str         r7, [sp, #0x10]
  001c4	eb000000	 bl          PrcmClockSetDpllState

; 2266 : 
; 2267 :     // dpll2
; 2268 :     dpllInfo.dpllId = kDPLL2;  

  001c8	e3a03001	 mov         r3, #1

; 2269 :     PrcmClockSetDpllState(&dpllInfo);

  001cc	e28d000c	 add         r0, sp, #0xC
  001d0	e58d3010	 str         r3, [sp, #0x10]
  001d4	eb000000	 bl          PrcmClockSetDpllState

; 2270 : 
; 2271 :     // dpll3
; 2272 :     dpllInfo.rampTime = DPLL_RAMPTIME_DISABLE;

  001d8	e3a03000	 mov         r3, #0

; 2273 :     dpllInfo.dpllId = kDPLL3;

  001dc	e3a02002	 mov         r2, #2

; 2274 :     PrcmClockSetDpllState(&dpllInfo);

  001e0	e28d000c	 add         r0, sp, #0xC
  001e4	e58d301c	 str         r3, [sp, #0x1C]
  001e8	e58d2010	 str         r2, [sp, #0x10]
  001ec	eb000000	 bl          PrcmClockSetDpllState

; 2275 : 
; 2276 :     // dpll4
; 2277 :     dpllInfo.dpllId = kDPLL4;

  001f0	e3a03003	 mov         r3, #3

; 2278 :     PrcmClockSetDpllState(&dpllInfo);

  001f4	e28d000c	 add         r0, sp, #0xC
  001f8	e58d3010	 str         r3, [sp, #0x10]
  001fc	eb000000	 bl          PrcmClockSetDpllState

; 2279 : 
; 2280 :     // dpll5
; 2281 :     dpllInfo.dpllId = kDPLL5;

  00200	e3a03004	 mov         r3, #4

; 2282 :     PrcmClockSetDpllState(&dpllInfo);

  00204	e28d000c	 add         r0, sp, #0xC
  00208	e58d3010	 str         r3, [sp, #0x10]
  0020c	eb000000	 bl          PrcmClockSetDpllState

; 2283 : 
; 2284 :     OALWakeupLatency_Initialize();

  00210	eb000000	 bl          OALWakeupLatency_Initialize

; 2285 : 
; 2286 :     // set the floor for powerdomains to be retention
; 2287 :     PrcmDomainSetPowerState(POWERDOMAIN_CORE, POWERSTATE_RETENTION, LOGICRETSTATE);

  00214	e3a02004	 mov         r2, #4
  00218	e3a01001	 mov         r1, #1
  0021c	e3a00001	 mov         r0, #1
  00220	eb000000	 bl          PrcmDomainSetPowerState

; 2288 :     PrcmDomainSetPowerState(POWERDOMAIN_MPU, POWERSTATE_RETENTION, LOGICRETSTATE);

  00224	e3a02004	 mov         r2, #4
  00228	e3a01001	 mov         r1, #1
  0022c	e3a00005	 mov         r0, #5
  00230	eb000000	 bl          PrcmDomainSetPowerState

; 2289 :     PrcmDomainSetPowerState(POWERDOMAIN_CAMERA, POWERSTATE_OFF, LOGICRETSTATE);

  00234	e3a02004	 mov         r2, #4
  00238	e3a01000	 mov         r1, #0
  0023c	e3a00009	 mov         r0, #9
  00240	eb000000	 bl          PrcmDomainSetPowerState

; 2290 :     PrcmDomainSetPowerState(POWERDOMAIN_PERIPHERAL, POWERSTATE_RETENTION, LOGICRETSTATE);

  00244	e3a02004	 mov         r2, #4
  00248	e3a01001	 mov         r1, #1
  0024c	e3a00002	 mov         r0, #2
  00250	eb000000	 bl          PrcmDomainSetPowerState

; 2291 :     PrcmDomainSetPowerState(POWERDOMAIN_DSS, POWERSTATE_RETENTION, LOGICRETSTATE);

  00254	e3a02004	 mov         r2, #4
  00258	e3a01001	 mov         r1, #1
  0025c	e3a00006	 mov         r0, #6
  00260	eb000000	 bl          PrcmDomainSetPowerState

; 2292 :     PrcmDomainSetPowerState(POWERDOMAIN_SGX, POWERSTATE_OFF, LOGICRETSTATE);

  00264	e3a02004	 mov         r2, #4
  00268	e3a01000	 mov         r1, #0
  0026c	e3a0000a	 mov         r0, #0xA
  00270	eb000000	 bl          PrcmDomainSetPowerState

; 2293 :     PrcmDomainSetPowerState(POWERDOMAIN_USBHOST, POWERSTATE_OFF, LOGICRETSTATE);

  00274	e3a02004	 mov         r2, #4
  00278	e3a01000	 mov         r1, #0
  0027c	e3a00003	 mov         r0, #3
  00280	eb000000	 bl          PrcmDomainSetPowerState

; 2294 :     PrcmDomainSetPowerState(POWERDOMAIN_EMULATION, POWERSTATE_OFF, LOGICRETSTATE);

  00284	e3a02004	 mov         r2, #4
  00288	e3a01000	 mov         r1, #0
  0028c	e3a00004	 mov         r0, #4
  00290	eb000000	 bl          PrcmDomainSetPowerState

; 2295 :     PrcmDomainSetPowerState(POWERDOMAIN_NEON, POWERSTATE_RETENTION, LOGICRETSTATE);

  00294	e3a02004	 mov         r2, #4
  00298	e3a01001	 mov         r1, #1
  0029c	e3a00007	 mov         r0, #7
  002a0	eb000000	 bl          PrcmDomainSetPowerState

; 2296 :     PrcmDomainSetPowerState(POWERDOMAIN_IVA2, POWERSTATE_OFF, LOGICRETSTATE);

  002a4	e3a02004	 mov         r2, #4
  002a8	e3a01000	 mov         r1, #0
  002ac	e3a00008	 mov         r0, #8
  002b0	eb000000	 bl          PrcmDomainSetPowerState

; 2297 : 
; 2298 :     PrcmDomainSetClockState(POWERDOMAIN_CORE, CLOCKDOMAIN_L3, CLKSTCTRL_AUTOMATIC);

  002b4	e3a02003	 mov         r2, #3
  002b8	e3a01000	 mov         r1, #0
  002bc	e3a00001	 mov         r0, #1
  002c0	eb000000	 bl          PrcmDomainSetClockState

; 2299 :     PrcmDomainSetClockState(POWERDOMAIN_CORE, CLOCKDOMAIN_L4, CLKSTCTRL_AUTOMATIC);

  002c4	e3a02003	 mov         r2, #3
  002c8	e3a01001	 mov         r1, #1
  002cc	e3a00001	 mov         r0, #1
  002d0	eb000000	 bl          PrcmDomainSetClockState

; 2300 :     PrcmDomainSetClockState(POWERDOMAIN_CORE, CLOCKDOMAIN_D2D, CLKSTCTRL_AUTOMATIC);

  002d4	e3a02003	 mov         r2, #3
  002d8	e3a0100b	 mov         r1, #0xB
  002dc	e3a00001	 mov         r0, #1
  002e0	eb000000	 bl          PrcmDomainSetClockState

; 2301 :     PrcmDomainSetClockState(POWERDOMAIN_MPU, CLOCKDOMAIN_MPU, CLKSTCTRL_AUTOMATIC);

  002e4	e3a02003	 mov         r2, #3
  002e8	e3a01005	 mov         r1, #5
  002ec	e3a00005	 mov         r0, #5
  002f0	eb000000	 bl          PrcmDomainSetClockState

; 2302 :     PrcmDomainSetClockState(POWERDOMAIN_CAMERA, CLOCKDOMAIN_CAMERA, CLKSTCTRL_AUTOMATIC);

  002f4	e3a02003	 mov         r2, #3
  002f8	e3a01009	 mov         r1, #9
  002fc	e3a00009	 mov         r0, #9
  00300	eb000000	 bl          PrcmDomainSetClockState

; 2303 :     PrcmDomainSetClockState(POWERDOMAIN_PERIPHERAL, CLOCKDOMAIN_PERIPHERAL, CLKSTCTRL_AUTOMATIC);

  00304	e3a02003	 mov         r2, #3
  00308	e3a01002	 mov         r1, #2
  0030c	e3a00002	 mov         r0, #2
  00310	eb000000	 bl          PrcmDomainSetClockState

; 2304 :     PrcmDomainSetClockState(POWERDOMAIN_DSS, CLOCKDOMAIN_DSS, CLKSTCTRL_AUTOMATIC);

  00314	e3a02003	 mov         r2, #3
  00318	e3a01006	 mov         r1, #6
  0031c	e3a00006	 mov         r0, #6
  00320	eb000000	 bl          PrcmDomainSetClockState

; 2305 :     PrcmDomainSetClockState(POWERDOMAIN_SGX, CLOCKDOMAIN_SGX, CLKSTCTRL_AUTOMATIC);

  00324	e3a02003	 mov         r2, #3
  00328	e3a0100a	 mov         r1, #0xA
  0032c	e3a0000a	 mov         r0, #0xA
  00330	eb000000	 bl          PrcmDomainSetClockState

; 2306 :     PrcmDomainSetClockState(POWERDOMAIN_USBHOST, CLOCKDOMAIN_USBHOST, CLKSTCTRL_AUTOMATIC);

  00334	e3a02003	 mov         r2, #3
  00338	e3a01003	 mov         r1, #3
  0033c	e3a00003	 mov         r0, #3
  00340	eb000000	 bl          PrcmDomainSetClockState

; 2307 :     PrcmDomainSetClockState(POWERDOMAIN_EMULATION, CLOCKDOMAIN_EMULATION, CLKSTCTRL_AUTOMATIC);

  00344	e3a02003	 mov         r2, #3
  00348	e3a01004	 mov         r1, #4
  0034c	e3a00004	 mov         r0, #4
  00350	eb000000	 bl          PrcmDomainSetClockState

; 2308 :     PrcmDomainSetClockState(POWERDOMAIN_NEON, CLOCKDOMAIN_NEON, CLKSTCTRL_AUTOMATIC);

  00354	e3a02003	 mov         r2, #3
  00358	e3a01007	 mov         r1, #7
  0035c	e3a00007	 mov         r0, #7
  00360	eb000000	 bl          PrcmDomainSetClockState

; 2309 :     PrcmDomainSetClockState(POWERDOMAIN_IVA2, CLOCKDOMAIN_IVA2, CLKSTCTRL_AUTOMATIC);

  00364	e3a02003	 mov         r2, #3
  00368	e3a01008	 mov         r1, #8
  0036c	e3a00008	 mov         r0, #8
  00370	eb000000	 bl          PrcmDomainSetClockState

; 2310 : 
; 2311 :     // Enable IO interrupt
; 2312 :     PrcmInterruptEnable(PRM_IRQENABLE_IO_EN, TRUE);

  00374	e3a01001	 mov         r1, #1
  00378	e3a00c02	 mov         r0, #2, 24
  0037c	eb000000	 bl          PrcmInterruptEnable

; 2313 :     TWLconfigOFFmode();

  00380	eb000000	 bl          TWLOpen
  00384	e1b04000	 movs        r4, r0
  00388	0a000034	 beq         |$LN12@OALPowerPo|
  0038c	e3a030ce	 mov         r3, #0xCE
  00390	e3a06803	 mov         r6, #3, 16
  00394	e5cd3004	 strb        r3, [sp, #4]
  00398	e3a03001	 mov         r3, #1
  0039c	e3861044	 orr         r1, r6, #0x44
  003a0	e28d2004	 add         r2, sp, #4
  003a4	e1a00004	 mov         r0, r4
  003a8	eb000000	 bl          TWLWriteRegs
  003ac	e3a030ec	 mov         r3, #0xEC
  003b0	e5cd3004	 strb        r3, [sp, #4]
  003b4	e3a03001	 mov         r3, #1
  003b8	e28d2004	 add         r2, sp, #4
  003bc	e3861044	 orr         r1, r6, #0x44
  003c0	e1a00004	 mov         r0, r4
  003c4	eb000000	 bl          TWLWriteRegs
  003c8	e3861036	 orr         r1, r6, #0x36
  003cc	e3a03001	 mov         r3, #1
  003d0	e28d2000	 add         r2, sp, #0
  003d4	e1a00004	 mov         r0, r4
  003d8	eb000000	 bl          TWLReadRegs
  003dc	e5dd3000	 ldrb        r3, [sp]
  003e0	e28d2004	 add         r2, sp, #4
  003e4	e3861036	 orr         r1, r6, #0x36
  003e8	e20330fd	 and         r3, r3, #0xFD
  003ec	e5cd3000	 strb        r3, [sp]
  003f0	e5cd3004	 strb        r3, [sp, #4]
  003f4	e3a03001	 mov         r3, #1
  003f8	e1a00004	 mov         r0, r4
  003fc	eb000000	 bl          TWLWriteRegs
  00400	e3a03000	 mov         r3, #0
  00404	e5cd3004	 strb        r3, [sp, #4]
  00408	e3a03001	 mov         r3, #1
  0040c	e28d2004	 add         r2, sp, #4
  00410	e3861044	 orr         r1, r6, #0x44
  00414	e1a00004	 mov         r0, r4
  00418	eb000000	 bl          TWLWriteRegs
  0041c	e3a06803	 mov         r6, #3, 16
  00420	e3a0e000	 mov         lr, #0
  00424	e38610b2	 orr         r1, r6, #0xB2
  00428	e3a03001	 mov         r3, #1
  0042c	e28d2004	 add         r2, sp, #4
  00430	e1a00004	 mov         r0, r4
  00434	e5cde004	 strb        lr, [sp, #4]
  00438	eb000000	 bl          TWLWriteRegs
  0043c	e3a03000	 mov         r3, #0
  00440	e5cd3004	 strb        r3, [sp, #4]
  00444	e3a03001	 mov         r3, #1
  00448	e28d2004	 add         r2, sp, #4
  0044c	e38610c0	 orr         r1, r6, #0xC0
  00450	e1a00004	 mov         r0, r4
  00454	eb000000	 bl          TWLWriteRegs
  00458	e1a00004	 mov         r0, r4
  0045c	eb000000	 bl          TWLClose
  00460		 |$LN12@OALPowerPo|

; 2314 : 	
; 2315 :     // Enable FBB for higher OPP on 37x
; 2316 :     if (g_dwCpuFamily == CPU_FAMILY_DM37XX)

  00460	e5953000	 ldr         r3, [r5]
  00464	e3530001	 cmp         r3, #1

; 2317 :         PrcmVoltScaleVoltageABB(BSP_OPM_SELECT_37XX);

  00468	03a00004	 moveq       r0, #4
  0046c	0b000000	 bleq        PrcmVoltScaleVoltageABB

; 2318 : 
; 2319 :     // save context for all registers restored by the kernel
; 2320 :     OALContextSaveSMS();

  00470	e59f30a0	 ldr         r3, [pc, #0xA0]
  00474	e59f4098	 ldr         r4, [pc, #0x98]
  00478	e59f5090	 ldr         r5, [pc, #0x90]
  0047c	e5932000	 ldr         r2, [r3]
  00480	e5943000	 ldr         r3, [r4]
  00484	e5922010	 ldr         r2, [r2, #0x10]
  00488	e3c33c02	 bic         r3, r3, #2, 24
  0048c	e5843000	 str         r3, [r4]
  00490	e5852010	 str         r2, [r5, #0x10]

; 2321 :     OALContextSaveGPMC();

  00494	eb000000	 bl          OALContextSaveGPMC

; 2322 :     OALContextSaveINTC();

  00498	eb000000	 bl          OALContextSaveINTC

; 2323 :     OALContextSavePRCM();

  0049c	eb000000	 bl          OALContextSavePRCM

; 2324 :     OALContextSaveGPIO();

  004a0	eb000000	 bl          OALContextSaveGPIO

; 2325 :     OALContextSaveSCM();

  004a4	eb000000	 bl          OALContextSaveSCM

; 2326 :     OALContextSaveDMA();

  004a8	e59f305c	 ldr         r3, [pc, #0x5C]
  004ac	e5942000	 ldr         r2, [r4]
  004b0	e5931000	 ldr         r1, [r3]
  004b4	e3c22004	 bic         r2, r2, #4
  004b8	e5913078	 ldr         r3, [r1, #0x78]
  004bc	e5853638	 str         r3, [r5, #0x638]
  004c0	e591302c	 ldr         r3, [r1, #0x2C]
  004c4	e58535ec	 str         r3, [r5, #0x5EC]
  004c8	e5913018	 ldr         r3, [r1, #0x18]
  004cc	e58535d8	 str         r3, [r5, #0x5D8]
  004d0	e591301c	 ldr         r3, [r1, #0x1C]
  004d4	e58535dc	 str         r3, [r5, #0x5DC]
  004d8	e5913020	 ldr         r3, [r1, #0x20]
  004dc	e58535e0	 str         r3, [r5, #0x5E0]
  004e0	e5913024	 ldr         r3, [r1, #0x24]
  004e4	e5842000	 str         r2, [r4]
  004e8	e58535e4	 str         r3, [r5, #0x5E4]

; 2327 :     OALContextSaveMux();

  004ec	eb000000	 bl          OALContextSaveMux

; 2328 :     OALContextSaveVRFB();

  004f0	eb000000	 bl          OALContextSaveVRFB

; 2329 : 
; 2330 :     OALMSG(1, (L"-OALPowerPostInit\r\n"));

  004f4	e59f000c	 ldr         r0, [pc, #0xC]
  004f8	eb000000	 bl          NKDbgPrintfW

; 2331 : }

  004fc	e28dd02c	 add         sp, sp, #0x2C
  00500	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  00504	e12fff1e	 bx          lr
  00508		 |$LN34@OALPowerPo|
  00508		 |$LN35@OALPowerPo|
  00508	00000000	 DCD         |??_C@_1CI@CGLJHOCE@?$AA?9?$AAO?$AAA?$AAL?$AAP?$AAo?$AAw?$AAe?$AAr?$AAP?$AAo?$AAs?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  0050c		 |$LN36@OALPowerPo|
  0050c	00000000	 DCD         |s_pDmaController|
  00510		 |$LN37@OALPowerPo|
  00510	00000000	 DCD         |s_smsContext|
  00514		 |$LN38@OALPowerPo|
  00514	00000000	 DCD         |g_ffContextSaveMask|
  00518		 |$LN39@OALPowerPo|
  00518	00000000	 DCD         |g_pSMSRegs|
  0051c		 |$LN40@OALPowerPo|
  0051c	00000000	 DCD         |g_dwCpuRevision|
  00520		 |$LN41@OALPowerPo|
  00520	00ff0f04	 DCD         0xff0f04
  00524		 |$LN42@OALPowerPo|
  00524	00000000	 DCD         |??_C@_1EG@KBFDMENB@?$AAC?$AAP?$AAU?$AA?5?$AAf?$AAa?$AAm?$AAi?$AAl?$AAy?$AA?$CI?$AA?$CF?$AAd?$AA?$CJ?$AA?5?$AAi?$AAs?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAS?$AAu?$AAp?$AAp?$AAo?$AAr?$AAt?$AAe?$AAd?$AA?4@|
  00528		 |$LN43@OALPowerPo|
  00528	00000000	 DCD         |dpCurSettings|
  0052c		 |$LN44@OALPowerPo|
  0052c	00000000	 DCD         |g_dwCpuFamily|
  00530		 |$LN45@OALPowerPo|
  00530	00000000	 DCD         |??_C@_1CI@HDMABPDE@?$AA?$CL?$AAO?$AAA?$AAL?$AAP?$AAo?$AAw?$AAe?$AAr?$AAP?$AAo?$AAs?$AAt?$AAI?$AAn?$AAi?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  00534		 |$M51244|

			 ENDP  ; |OALPowerPostInit|

	END
