; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\Z2170P\SRC\test\Tux_SPI\test.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|DEVICE_IFC_SPI_GUID| [ DATA ]
	EXPORT	|?g_Fail@@3HA| [ DATA ]			; g_Fail

  00000			 AREA	 |.bss|, NOINIT
|?g_Fail@@3HA| % 0x4					; g_Fail

  00000			 AREA	 |.rdata|, DATA, READONLY
|DEVICE_IFC_SPI_GUID| DCD 0x2e559225
	DCW	0xc95e
	DCW	0x4300
	DCB	0x86
	DCB	0xe9
	DCB	0x6a
	DCB	0x5c
	DCB	0xbc
	DCB	0x7
	DCB	0x32
	DCB	0x8f
	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|??_C@_1CK@NLHJNDEG@?$AAC?$AAl?$AAo?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@NCKKNNEK@?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@GJJDPBGB@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAi?$AAn?$AA?5?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?4?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAm?$AAe?$AAm@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EM@EDBJIAA@?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAS?$AAP?$AAI?$AA?5?$AAp?$AAo?$AAr?$AAt?$AA?4?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AA?$DN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HA@BNPHNGPL@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAZ?$AA2?$AA1?$AA7?$AA0?$AAP?$AA?2?$AAS?$AAR?$AAC?$AA?2@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@EEEJOJDE@?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAe?$AA?5?$AAS?$AAP?$AAI?$AA?5?$AAp?$AAo?$AAr?$AAt?$AA?4?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1O@JGJPCHKD@?$AAS?$AAP?$AAI?$AA?$CF?$AAd?$AA?3?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@PGLPEEIG@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAp?$AAi?$AA?5?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|LocalFree|
	IMPORT	|CloseHandle|
	IMPORT	|Sleep|
	IMPORT	|?g_Writes@@3KA|			; g_Writes
	IMPORT	|GetLastError|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|DeviceIoControl|
	IMPORT	|?g_ChipSelect@@3KA|			; g_ChipSelect
	IMPORT	|CreateFileW|
	IMPORT	|swprintf|
	IMPORT	|?g_Port@@3KA|				; g_Port
	IMPORT	|LocalAlloc|
	IMPORT	|?g_BufferSize@@3KA|			; g_BufferSize
	IMPORT	|?g_pKato@@3PAVCKato@@A|		; g_pKato
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__security_cookie|
	IMPORT	|__imp_?Log@CKato@@QAAHKPBGZZ|
	IMPORT	|__security_check_cookie|
; File c:\wince600\platform\z2170p\src\test\tux_spi\test.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T32971| DCD	|$LN34@WriteThrea|
	DCD	0xc000ca02

  00000			 AREA	 |.xdata|, DATA
|$T32967| DCD	0xffffffd8

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CK@NLHJNDEG@?$AAC?$AAl?$AAo?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "C"
	DCB	0x0, "l", 0x0, "o", 0x0, "s", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a"
	DCB	0x0, "d", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@NCKKNNEK@?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "T"
	DCB	0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@GJJDPBGB@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAi?$AAn?$AA?5?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?4?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAm?$AAe?$AAm@| DCB "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "u", 0x0, "r", 0x0, "e"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "T", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, ".", 0x0, " ", 0x0, "O", 0x0, "u", 0x0, "t"
	DCB	0x0, " ", 0x0, "o", 0x0, "f", 0x0, " ", 0x0, "m", 0x0, "e"
	DCB	0x0, "m", 0x0, "o", 0x0, "r", 0x0, "y", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EM@EDBJIAA@?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAS?$AAP?$AAI?$AA?5?$AAp?$AAo?$AAr?$AAt?$AA?4?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AA?$DN@| DCB "C"
	DCB	0x0, "o", 0x0, "u", 0x0, "l", 0x0, "d", 0x0, " ", 0x0, "n"
	DCB	0x0, "o", 0x0, "t", 0x0, " ", 0x0, "o", 0x0, "p", 0x0, "e"
	DCB	0x0, "n", 0x0, " ", 0x0, "S", 0x0, "P", 0x0, "I", 0x0, " "
	DCB	0x0, "p", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, ".", 0x0, " "
	DCB	0x0, "E", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, " "
	DCB	0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@BNPHNGPL@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAZ?$AA2?$AA1?$AA7?$AA0?$AAP?$AA?2?$AAS?$AAR?$AAC?$AA?2@| DCB "C"
	DCB	0x0, ":", 0x0, "\\", 0x0, "W", 0x0, "I", 0x0, "N", 0x0, "C"
	DCB	0x0, "E", 0x0, "6", 0x0, "0", 0x0, "0", 0x0, "\\", 0x0, "P"
	DCB	0x0, "L", 0x0, "A", 0x0, "T", 0x0, "F", 0x0, "O", 0x0, "R"
	DCB	0x0, "M", 0x0, "\\", 0x0, "Z", 0x0, "2", 0x0, "1", 0x0, "7"
	DCB	0x0, "0", 0x0, "P", 0x0, "\\", 0x0, "S", 0x0, "R", 0x0, "C"
	DCB	0x0, "\\", 0x0, "t", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, "\\"
	DCB	0x0, "T", 0x0, "u", 0x0, "x", 0x0, "_", 0x0, "S", 0x0, "P"
	DCB	0x0, "I", 0x0, "\\", 0x0, ".", 0x0, "\\", 0x0, "t", 0x0, "e"
	DCB	0x0, "s", 0x0, "t", 0x0, ".", 0x0, "c", 0x0, "p", 0x0, "p"
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "%", 0x0, "s", 0x0, " ", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ":", 0x0, " "
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@EEEJOJDE@?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAe?$AA?5?$AAS?$AAP?$AAI?$AA?5?$AAp?$AAo?$AAr?$AAt?$AA?4?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5@| DCB "C"
	DCB	0x0, "o", 0x0, "u", 0x0, "l", 0x0, "d", 0x0, " ", 0x0, "n"
	DCB	0x0, "o", 0x0, "t", 0x0, " ", 0x0, "w", 0x0, "r", 0x0, "i"
	DCB	0x0, "t", 0x0, "e", 0x0, " ", 0x0, "S", 0x0, "P", 0x0, "I"
	DCB	0x0, " ", 0x0, "p", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, "."
	DCB	0x0, " ", 0x0, "E", 0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r"
	DCB	0x0, " ", 0x0, "=", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1O@JGJPCHKD@?$AAS?$AAP?$AAI?$AA?$CF?$AAd?$AA?3?$AA?$AA@| DCB "S", 0x0
	DCB	"P", 0x0, "I", 0x0, "%", 0x0, "d", 0x0, ":", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@PGLPEEIG@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAp?$AAi?$AA?5?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "S", 0x0, "p", 0x0, "i", 0x0, " "
	DCB	0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T32967|

  00008		 |?WriteThread@@YAKPAX@Z| PROC		; WriteThread

; 81   : {

  00008		 |$LN34@WriteThrea|
  00008	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  0000c	e24ddf8b	 sub         sp, sp, #0x8B, 30
  00010		 |$M32968|
  00010	e59f3314	 ldr         r3, [pc, #0x314]
  00014	e5933000	 ldr         r3, [r3]
  00018	e58d3228	 str         r3, [sp, #0x228]

; 82   :     HANDLE hSpi = 0;
; 83   :     PBYTE pOutBuffer = NULL; //[BUFFER_SIZE] = {0};
; 84   :     PBYTE pInBuffer = NULL; //[BUFFER_SIZE] = {0};
; 85   :     DWORD dwBytesReturned = 0;
; 86   :     DWORD bThreadNumber = *(PDWORD)pvarg;
; 87   :     IOCTL_SPI_CONFIGURE_IN SpiConfigure;
; 88   :     wchar_t DeviceName[MAX_PATH];
; 89   :     BOOL bRet = TRUE;
; 90   : 
; 91   :     g_pKato->Log(1, TEXT("Starting Spi Thread %d\r\n"), bThreadNumber);

  0001c	e59f32c8	 ldr         r3, [pc, #0x2C8]
  00020	e59f7300	 ldr         r7, [pc, #0x300]
  00024	e590a000	 ldr         r10, [r0]
  00028	e5934000	 ldr         r4, [r3]
  0002c	e3a06000	 mov         r6, #0
  00030	e5970000	 ldr         r0, [r7]
  00034	e59f22e8	 ldr         r2, [pc, #0x2E8]
  00038	e58d6014	 str         r6, [sp, #0x14]
  0003c	e1a0300a	 mov         r3, r10
  00040	e58da010	 str         r10, [sp, #0x10]
  00044	e3a01001	 mov         r1, #1
  00048	e3a05000	 mov         r5, #0
  0004c	e3a06001	 mov         r6, #1
  00050	e1a0e00f	 mov         lr, pc
  00054	e12fff14	 bx          r4

; 92   : 
; 93   :     pOutBuffer = (PBYTE)LocalAlloc(LPTR, sizeof(BYTE)*g_BufferSize);

  00058	e59f42c0	 ldr         r4, [pc, #0x2C0]
  0005c	e3a00040	 mov         r0, #0x40
  00060	e5941000	 ldr         r1, [r4]
  00064	eb000000	 bl          LocalAlloc

; 94   :     pInBuffer = (PBYTE)LocalAlloc(LPTR, sizeof(BYTE)*g_BufferSize);

  00068	e5941000	 ldr         r1, [r4]
  0006c	e1a09000	 mov         r9, r0
  00070	e3a00040	 mov         r0, #0x40
  00074	eb000000	 bl          LocalAlloc
  00078	e1a08000	 mov         r8, r0

; 95   : 
; 96   :     if(pOutBuffer == NULL || pInBuffer == NULL)

  0007c	e3590000	 cmp         r9, #0
  00080	0a00008e	 beq         |$LN19@WriteThrea|
  00084	e3580000	 cmp         r8, #0
  00088	0a00008c	 beq         |$LN19@WriteThrea|

; 100  :         goto CLOSE;
; 101  :     }
; 102  : 
; 103  :     for(DWORD i = 0; i < g_BufferSize; i++)

  0008c	e5943000	 ldr         r3, [r4]
  00090	e3a02000	 mov         r2, #0
  00094	e3530000	 cmp         r3, #0
  00098	0a000004	 beq         |$LN15@WriteThrea|
  0009c		 |$LL17@WriteThrea|

; 104  :     {
; 105  :         pOutBuffer[i] = (BYTE)i;

  0009c	e7c22009	 strb        r2, [r2, +r9]
  000a0	e5943000	 ldr         r3, [r4]
  000a4	e2822001	 add         r2, r2, #1
  000a8	e1520003	 cmp         r2, r3
  000ac	3afffffa	 bcc         |$LL17@WriteThrea|
  000b0		 |$LN15@WriteThrea|

; 106  :     }
; 107  : 
; 108  :     //Open SPI port
; 109  :     swprintf(DeviceName, TEXT("SPI%d:"), g_Port);

  000b0	e59f3264	 ldr         r3, [pc, #0x264]
  000b4	e59f125c	 ldr         r1, [pc, #0x25C]
  000b8	e28d0020	 add         r0, sp, #0x20
  000bc	e5932000	 ldr         r2, [r3]
  000c0	eb000000	 bl          swprintf

; 110  :     hSpi = CreateFile(DeviceName, GENERIC_READ | GENERIC_WRITE, FILE_SHARE_READ | FILE_SHARE_WRITE, NULL, OPEN_EXISTING, 0, NULL);

  000c4	e3a03003	 mov         r3, #3
  000c8	e58d3000	 str         r3, [sp]
  000cc	e3a0b000	 mov         r11, #0
  000d0	e3a03000	 mov         r3, #0
  000d4	e3a02003	 mov         r2, #3
  000d8	e3a01103	 mov         r1, #3, 2
  000dc	e28d0020	 add         r0, sp, #0x20
  000e0	e58db008	 str         r11, [sp, #8]
  000e4	e58db004	 str         r11, [sp, #4]
  000e8	eb000000	 bl          CreateFileW
  000ec	e1b05000	 movs        r5, r0

; 111  :     if(hSpi == 0 || hSpi == INVALID_HANDLE_VALUE)

  000f0	0a000067	 beq         |$LN13@WriteThrea|
  000f4	e3750001	 cmn         r5, #1
  000f8	0a000065	 beq         |$LN13@WriteThrea|

; 114  :         bRet = FALSE;
; 115  :         goto CLOSE;
; 116  :     }
; 117  : 
; 118  :     //configure SPI
; 119  :     SpiConfigure.address = g_ChipSelect;

  000fc	e59f3210	 ldr         r3, [pc, #0x210]
  00100	e3a01822	 mov         r1, #0x22, 16

; 120  :     SpiConfigure.config = 0;

  00104	e3a04000	 mov         r4, #0
  00108	e5932000	 ldr         r2, [r3]

; 121  :     if(!DeviceIoControl(hSpi, IOCTL_SPI_CONFIGURE, &SpiConfigure, sizeof(SpiConfigure), NULL, 0, &dwBytesReturned, NULL))

  0010c	e28de014	 add         lr, sp, #0x14
  00110	e3a03008	 mov         r3, #8
  00114	e58d2018	 str         r2, [sp, #0x18]
  00118	e28d2018	 add         r2, sp, #0x18
  0011c	e3811b02	 orr         r1, r1, #2, 22
  00120	e1a00005	 mov         r0, r5
  00124	e58d401c	 str         r4, [sp, #0x1C]
  00128	e58db00c	 str         r11, [sp, #0xC]
  0012c	e58de008	 str         lr, [sp, #8]
  00130	e58db004	 str         r11, [sp, #4]
  00134	e58db000	 str         r11, [sp]
  00138	eb000000	 bl          DeviceIoControl
  0013c	e3500000	 cmp         r0, #0
  00140	1a000009	 bne         |$LN11@WriteThrea|

; 122  :     {
; 123  :         ERRORMSG(1, (TEXT("Could not write SPI port. Error = %d\r\n"), GetLastError()));

  00144	e59f11c4	 ldr         r1, [pc, #0x1C4]
  00148	e59f01bc	 ldr         r0, [pc, #0x1BC]
  0014c	e3a0207b	 mov         r2, #0x7B
  00150	eb000000	 bl          NKDbgPrintfW
  00154	eb000000	 bl          GetLastError
  00158	e1a01000	 mov         r1, r0
  0015c	e59f0190	 ldr         r0, [pc, #0x190]
  00160	eb000000	 bl          NKDbgPrintfW

; 124  :         bRet = FALSE;

  00164	e3a06000	 mov         r6, #0

; 137  :     }

  00168	ea000019	 b           |$CLOSE$32879|
  0016c		 |$LN11@WriteThrea|

; 125  :         goto CLOSE;
; 126  :     }
; 127  : 
; 128  :     for(DWORD i = 0; i < g_Writes; i++)

  0016c	e59fa194	 ldr         r10, [pc, #0x194]
  00170	e3a04000	 mov         r4, #0
  00174	e59a3000	 ldr         r3, [r10]
  00178	e3530000	 cmp         r3, #0
  0017c	0a000013	 beq         |$LN30@WriteThrea|
  00180	e28db014	 add         r11, sp, #0x14
  00184		 |$LL9@WriteThrea|

; 129  :     {
; 130  :         if(!DeviceIoControl(hSpi, IOCTL_SPI_WRITEREAD, pOutBuffer, sizeof(pOutBuffer), pInBuffer, sizeof(pInBuffer), &dwBytesReturned, NULL))

  00184	e3a0e000	 mov         lr, #0
  00188	e59f1174	 ldr         r1, [pc, #0x174]
  0018c	e58de00c	 str         lr, [sp, #0xC]
  00190	e3a0e004	 mov         lr, #4
  00194	e3a03004	 mov         r3, #4
  00198	e1a02009	 mov         r2, r9
  0019c	e1a00005	 mov         r0, r5
  001a0	e58de004	 str         lr, [sp, #4]
  001a4	e58db008	 str         r11, [sp, #8]
  001a8	e58d8000	 str         r8, [sp]
  001ac	eb000000	 bl          DeviceIoControl
  001b0	e3500000	 cmp         r0, #0
  001b4	0a00002b	 beq         |$LN27@WriteThrea|

; 134  :             goto CLOSE;
; 135  :         }
; 136  :         Sleep(10);

  001b8	e3a0000a	 mov         r0, #0xA
  001bc	eb000000	 bl          Sleep
  001c0	e59a3000	 ldr         r3, [r10]
  001c4	e2844001	 add         r4, r4, #1
  001c8	e1540003	 cmp         r4, r3
  001cc	3affffec	 bcc         |$LL9@WriteThrea|
  001d0		 |$LN30@WriteThrea|

; 129  :     {
; 130  :         if(!DeviceIoControl(hSpi, IOCTL_SPI_WRITEREAD, pOutBuffer, sizeof(pOutBuffer), pInBuffer, sizeof(pInBuffer), &dwBytesReturned, NULL))

  001d0	e59da010	 ldr         r10, [sp, #0x10]

; 99   :         bRet = FALSE;

  001d4		 |$CLOSE$32879|

; 138  : CLOSE:
; 139  :     if(hSpi != 0 && hSpi != INVALID_HANDLE_VALUE)

  001d4	e3550000	 cmp         r5, #0
  001d8	13750001	 cmnne       r5, #1

; 140  :     {
; 141  :         CloseHandle(hSpi);

  001dc	11a00005	 movne       r0, r5
  001e0	1b000000	 blne        CloseHandle

; 142  :     }
; 143  :     if(pInBuffer != NULL)

  001e4	e3580000	 cmp         r8, #0

; 144  :     {
; 145  :         LocalFree(pInBuffer);

  001e8	11a00008	 movne       r0, r8
  001ec	1b000000	 blne        LocalFree

; 146  :     }
; 147  :     if(pOutBuffer != NULL)

  001f0	e3590000	 cmp         r9, #0

; 148  :     {
; 149  :         LocalFree(pOutBuffer);

  001f4	11a00009	 movne       r0, r9
  001f8	1b000000	 blne        LocalFree

; 150  :     }
; 151  :     if(bRet == FALSE)

  001fc	e3560000	 cmp         r6, #0
  00200	1a00000a	 bne         |$LN1@WriteThrea|

; 152  :     {
; 153  :         g_pKato->Log(1, TEXT("Thread %d failed\r\n"), bThreadNumber);

  00204	e59f10e0	 ldr         r1, [pc, #0xE0]
  00208	e59f20f0	 ldr         r2, [pc, #0xF0]
  0020c	e5970000	 ldr         r0, [r7]
  00210	e5914000	 ldr         r4, [r1]
  00214	e3a01001	 mov         r1, #1
  00218	e1a0300a	 mov         r3, r10
  0021c	e1a0e00f	 mov         lr, pc
  00220	e12fff14	 bx          r4

; 154  :         g_Fail = TRUE;

  00224	e59f20d0	 ldr         r2, [pc, #0xD0]
  00228	e3a03001	 mov         r3, #1
  0022c	e5823000	 str         r3, [r2]
  00230		 |$LN1@WriteThrea|

; 155  :     }
; 156  :     /*if(bThreadNumber == 0)
; 157  :     {
; 158  :     for(;;)
; 159  :     Sleep(10);
; 160  :     }*/
; 161  :     g_pKato->Log(1, TEXT("Closing Thread %d \r\n"), bThreadNumber);

  00230	e59f10b4	 ldr         r1, [pc, #0xB4]
  00234	e59f20bc	 ldr         r2, [pc, #0xBC]
  00238	e5970000	 ldr         r0, [r7]
  0023c	e5914000	 ldr         r4, [r1]
  00240	e3a01001	 mov         r1, #1
  00244	e1a0300a	 mov         r3, r10
  00248	e1a0e00f	 mov         lr, pc
  0024c	e12fff14	 bx          r4

; 162  :     return 0;

  00250	e59d0228	 ldr         r0, [sp, #0x228]
  00254	eb000000	 bl          __security_check_cookie
  00258	e3a00000	 mov         r0, #0

; 163  : }

  0025c	e28ddf8b	 add         sp, sp, #0x8B, 30
  00260	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00264	e12fff1e	 bx          lr
  00268		 |$LN27@WriteThrea|

; 131  :         {
; 132  :             g_pKato->Log(1, TEXT("Could not write SPI port. Error = %d\r\n"), GetLastError());

  00268	eb000000	 bl          GetLastError
  0026c	e59f1078	 ldr         r1, [pc, #0x78]
  00270	e59f207c	 ldr         r2, [pc, #0x7C]
  00274	e1a03000	 mov         r3, r0
  00278	e5914000	 ldr         r4, [r1]
  0027c	e5970000	 ldr         r0, [r7]
  00280	e3a01001	 mov         r1, #1
  00284	e1a0e00f	 mov         lr, pc
  00288	e12fff14	 bx          r4

; 133  :             bRet = FALSE;

  0028c	e3a06000	 mov         r6, #0

; 137  :     }

  00290	eaffffce	 b           |$LN30@WriteThrea|
  00294		 |$LN13@WriteThrea|

; 112  :     {
; 113  :         g_pKato->Log(1, TEXT("Could not open SPI port. Error = %d\r\n"), GetLastError());

  00294	eb000000	 bl          GetLastError
  00298	e59f104c	 ldr         r1, [pc, #0x4C]
  0029c	e59f204c	 ldr         r2, [pc, #0x4C]
  002a0	e1a03000	 mov         r3, r0
  002a4	e5914000	 ldr         r4, [r1]
  002a8	e5970000	 ldr         r0, [r7]
  002ac	e3a01001	 mov         r1, #1
  002b0	e1a0e00f	 mov         lr, pc
  002b4	e12fff14	 bx          r4

; 124  :         bRet = FALSE;

  002b8	e3a06000	 mov         r6, #0

; 137  :     }

  002bc	eaffffc4	 b           |$CLOSE$32879|
  002c0		 |$LN19@WriteThrea|

; 97   :     {
; 98   :         g_pKato->Log(1, TEXT("Failure in Thread %d. Out of memory\r\n"), bThreadNumber);

  002c0	e59f3024	 ldr         r3, [pc, #0x24]
  002c4	e59f201c	 ldr         r2, [pc, #0x1C]
  002c8	e5970000	 ldr         r0, [r7]
  002cc	e5934000	 ldr         r4, [r3]
  002d0	e1a0300a	 mov         r3, r10
  002d4	e3a01001	 mov         r1, #1
  002d8	e1a0e00f	 mov         lr, pc
  002dc	e12fff14	 bx          r4

; 124  :         bRet = FALSE;

  002e0	e3a06000	 mov         r6, #0

; 137  :     }

  002e4	eaffffba	 b           |$CLOSE$32879|
  002e8		 |$LN35@WriteThrea|
  002e8		 |$LN36@WriteThrea|
  002e8	00000000	 DCD         |??_C@_1EM@GJJDPBGB@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAi?$AAn?$AA?5?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?4?$AA?5?$AAO?$AAu?$AAt?$AA?5?$AAo?$AAf?$AA?5?$AAm?$AAe?$AAm@|
  002ec		 |$LN37@WriteThrea|
  002ec	00000000	 DCD         |__imp_?Log@CKato@@QAAHKPBGZZ|
  002f0		 |$LN38@WriteThrea|
  002f0	00000000	 DCD         |??_C@_1EM@EDBJIAA@?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAS?$AAP?$AAI?$AA?5?$AAp?$AAo?$AAr?$AAt?$AA?4?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AA?$DN@|
  002f4		 |$LN39@WriteThrea|
  002f4	00000000	 DCD         |??_C@_1EO@EEEJOJDE@?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAe?$AA?5?$AAS?$AAP?$AAI?$AA?5?$AAp?$AAo?$AAr?$AAt?$AA?4?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5@|
  002f8		 |$LN40@WriteThrea|
  002f8	00000000	 DCD         |??_C@_1CK@NLHJNDEG@?$AAC?$AAl?$AAo?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  002fc		 |$LN41@WriteThrea|
  002fc	00000000	 DCD         |?g_Fail@@3HA|
  00300		 |$LN42@WriteThrea|
  00300	00000000	 DCD         |??_C@_1CG@NCKKNNEK@?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00304		 |$LN43@WriteThrea|
  00304	00220804	 DCD         0x220804
  00308		 |$LN44@WriteThrea|
  00308	00000000	 DCD         |?g_Writes@@3KA|
  0030c		 |$LN45@WriteThrea|
  0030c	00000000	 DCD         |??_C@_1CI@OHCJFJPM@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AA?$CF?$AAs?$AA?5?$AAl?$AAi?$AAn?$AAe?$AA?5?$AA?$CF?$AAd?$AA?3?$AA?5?$AA?$AA@|
  00310		 |$LN46@WriteThrea|
  00310	00000000	 DCD         |??_C@_1HA@BNPHNGPL@?$AAC?$AA?3?$AA?2?$AAW?$AAI?$AAN?$AAC?$AAE?$AA6?$AA0?$AA0?$AA?2?$AAP?$AAL?$AAA?$AAT?$AAF?$AAO?$AAR?$AAM?$AA?2?$AAZ?$AA2?$AA1?$AA7?$AA0?$AAP?$AA?2?$AAS?$AAR?$AAC?$AA?2@|
  00314		 |$LN47@WriteThrea|
  00314	00000000	 DCD         |?g_ChipSelect@@3KA|
  00318		 |$LN48@WriteThrea|
  00318	00000000	 DCD         |??_C@_1O@JGJPCHKD@?$AAS?$AAP?$AAI?$AA?$CF?$AAd?$AA?3?$AA?$AA@|
  0031c		 |$LN49@WriteThrea|
  0031c	00000000	 DCD         |?g_Port@@3KA|
  00320		 |$LN50@WriteThrea|
  00320	00000000	 DCD         |?g_BufferSize@@3KA|
  00324		 |$LN51@WriteThrea|
  00324	00000000	 DCD         |??_C@_1DC@PGLPEEIG@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAp?$AAi?$AA?5?$AAT?$AAh?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00328		 |$LN52@WriteThrea|
  00328	00000000	 DCD         |?g_pKato@@3PAVCKato@@A|
  0032c		 |$LN53@WriteThrea|
  0032c	00000000	 DCD         |__security_cookie|
  00330		 |$M32969|

			 ENDP  ; |?WriteThread@@YAKPAX@Z|, WriteThread

	EXPORT	|?TestSPIMultipleInstances@@YAHIPAKPAU_FUNCTION_TABLE_ENTRY@@@Z| ; TestSPIMultipleInstances
	EXPORT	|??_C@_1CE@BHDBOKCL@?$AAE?$AAn?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAp?$AAi?$AAT?$AAe?$AAs?$AAt?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@FLEMGJLK@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAi?$AAn?$AA?5?$AAw?$AAa?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AAs?$AA?5?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@PJJMDCLP@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAP?$AAI?$AAT?$AAe?$AAs?$AAt?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@FCOIKHJL@?$AAU?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAp?$AAi?$AA?5?$AAp?$AAo?$AAr?$AAt?$AA?5?$AA?$CF?$AAd?$AA?5?$AAC?$AAh?$AAi?$AAp?$AAs?$AAe?$AAl?$AAe?$AAc?$AAt?$AA?5?$AA?$CF?$AAd?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HA@NDPBBFJH@?$AAC?$AAr?$AAe?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AAs?$AA?5?$AAt?$AAh?$AAa?$AAt?$AA?5?$AAw?$AAi?$AAl?$AAl?$AA?5?$AAw?$AAr@| [ DATA ] ; `string'
	IMPORT	|WaitForSingleObject|
	IMPORT	|CreateThread|
	IMPORT	|?g_NbThreads@@3KA|			; g_NbThreads

  00000			 AREA	 |.pdata|, PDATA
|$T33010| DCD	|$LN20@TestSPIMul|
	DCD	0x40007602

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@BHDBOKCL@?$AAE?$AAn?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAp?$AAi?$AAT?$AAe?$AAs?$AAt?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "E"
	DCB	0x0, "n", 0x0, "d", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "S", 0x0, "p", 0x0, "i", 0x0, "T", 0x0, "e", 0x0, "s"
	DCB	0x0, "t", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@FLEMGJLK@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAi?$AAn?$AA?5?$AAw?$AAa?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AAs?$AA?5?$AA?$AN@| DCB "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "u", 0x0, "r", 0x0, "e"
	DCB	0x0, " ", 0x0, "i", 0x0, "n", 0x0, " ", 0x0, "w", 0x0, "a"
	DCB	0x0, "i", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "f", 0x0, "o", 0x0, "r", 0x0, " ", 0x0, "t", 0x0, "h"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "s", 0x0, " "
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@PJJMDCLP@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAP?$AAI?$AAT?$AAe?$AAs?$AAt?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "S", 0x0, "P", 0x0, "I", 0x0, "T"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@FCOIKHJL@?$AAU?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAp?$AAi?$AA?5?$AAp?$AAo?$AAr?$AAt?$AA?5?$AA?$CF?$AAd?$AA?5?$AAC?$AAh?$AAi?$AAp?$AAs?$AAe?$AAl?$AAe?$AAc?$AAt?$AA?5?$AA?$CF?$AAd?$AA?$AN@| DCB "U"
	DCB	0x0, "s", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "S"
	DCB	0x0, "p", 0x0, "i", 0x0, " ", 0x0, "p", 0x0, "o", 0x0, "r"
	DCB	0x0, "t", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "C"
	DCB	0x0, "h", 0x0, "i", 0x0, "p", 0x0, "s", 0x0, "e", 0x0, "l"
	DCB	0x0, "e", 0x0, "c", 0x0, "t", 0x0, " ", 0x0, "%", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HA@NDPBBFJH@?$AAC?$AAr?$AAe?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AAs?$AA?5?$AAt?$AAh?$AAa?$AAt?$AA?5?$AAw?$AAi?$AAl?$AAl?$AA?5?$AAw?$AAr@| DCB "C"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, "s"
	DCB	0x0, " ", 0x0, "t", 0x0, "h", 0x0, "a", 0x0, "t", 0x0, " "
	DCB	0x0, "w", 0x0, "i", 0x0, "l", 0x0, "l", 0x0, " ", 0x0, "w"
	DCB	0x0, "r", 0x0, "i", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, "b", 0x0, "y", 0x0, "t", 0x0, "e"
	DCB	0x0, "s", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " ", 0x0, "t"
	DCB	0x0, "i", 0x0, "m", 0x0, "e", 0x0, "s", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?TestSPIMultipleInstances@@YAHIPAKPAU_FUNCTION_TABLE_ENTRY@@@Z| PROC ; TestSPIMultipleInstances

; 39   : {

  00000		 |$LN20@TestSPIMul|
  00000	e92d47f0	 stmdb       sp!, {r4 - r10, lr}
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M33007|

; 40   :     HANDLE *ThreadHandles = NULL;
; 41   :     DWORD *ThreadId = NULL;
; 42   :     g_pKato->Log(1, TEXT("Starting SPITest \r\n"));

  00008	e59f91c4	 ldr         r9, [pc, #0x1C4]
  0000c	e59f3194	 ldr         r3, [pc, #0x194]
  00010	e59f21b8	 ldr         r2, [pc, #0x1B8]
  00014	e5990000	 ldr         r0, [r9]
  00018	e5933000	 ldr         r3, [r3]
  0001c	e3a01001	 mov         r1, #1
  00020	e1a0e00f	 mov         lr, pc
  00024	e12fff13	 bx          r3

; 43   : 
; 44   :     g_pKato->Log(1, TEXT("Using Spi port %d Chipselect %d\r\n"), g_Port, g_ChipSelect);

  00028	e59f319c	 ldr         r3, [pc, #0x19C]
  0002c	e59f2194	 ldr         r2, [pc, #0x194]
  00030	e59f1170	 ldr         r1, [pc, #0x170]
  00034	e593e000	 ldr         lr, [r3]
  00038	e5923000	 ldr         r3, [r2]
  0003c	e5914000	 ldr         r4, [r1]
  00040	e59f217c	 ldr         r2, [pc, #0x17C]
  00044	e5990000	 ldr         r0, [r9]
  00048	e58de000	 str         lr, [sp]
  0004c	e3a01001	 mov         r1, #1
  00050	e1a0e00f	 mov         lr, pc
  00054	e12fff14	 bx          r4

; 45   :     g_pKato->Log(1, TEXT("Creating %d threads that will write %d bytes %d times\r\n"), g_NbThreads, g_BufferSize, g_Writes);

  00058	e59f2160	 ldr         r2, [pc, #0x160]
  0005c	e59f3158	 ldr         r3, [pc, #0x158]
  00060	e59f7150	 ldr         r7, [pc, #0x150]
  00064	e5921000	 ldr         r1, [r2]
  00068	e59fe138	 ldr         lr, [pc, #0x138]
  0006c	e5935000	 ldr         r5, [r3]
  00070	e5973000	 ldr         r3, [r7]
  00074	e59f2138	 ldr         r2, [pc, #0x138]
  00078	e5990000	 ldr         r0, [r9]
  0007c	e59e4000	 ldr         r4, [lr]
  00080	e58d1000	 str         r1, [sp]
  00084	e3a01001	 mov         r1, #1
  00088	e58d5004	 str         r5, [sp, #4]
  0008c	e1a0e00f	 mov         lr, pc
  00090	e12fff14	 bx          r4

; 46   : 
; 47   :     ThreadHandles = (HANDLE*)LocalAlloc(LPTR, sizeof(HANDLE)*g_NbThreads);

  00094	e5973000	 ldr         r3, [r7]
  00098	e3a00040	 mov         r0, #0x40
  0009c	e1a01103	 mov         r1, r3, lsl #2
  000a0	eb000000	 bl          LocalAlloc

; 48   :     ThreadId = (DWORD*)LocalAlloc(LPTR, sizeof(DWORD)*g_NbThreads);

  000a4	e5973000	 ldr         r3, [r7]
  000a8	e1a05000	 mov         r5, r0
  000ac	e3a00040	 mov         r0, #0x40
  000b0	e1a01103	 mov         r1, r3, lsl #2
  000b4	eb000000	 bl          LocalAlloc

; 49   : 
; 50   :     for(DWORD i = 0; i < g_NbThreads; i++)

  000b8	e5973000	 ldr         r3, [r7]
  000bc	e1a04000	 mov         r4, r0
  000c0	e3a06000	 mov         r6, #0
  000c4	e3530000	 cmp         r3, #0
  000c8	0a00000f	 beq         |$LN8@TestSPIMul|
  000cc	e0458004	 sub         r8, r5, r4
  000d0	e3a0a000	 mov         r10, #0
  000d4		 |$LL10@TestSPIMul|

; 51   :     {
; 52   :         ThreadId[i] = i;
; 53   :         //g_pKato->Log(1, TEXT("Starting thread %d \r\n"), i);
; 54   :         ThreadHandles[i] = CreateThread(NULL, FALSE, (LPTHREAD_START_ROUTINE) WriteThread, &ThreadId[i], 0, NULL);

  000d4	e59f20d4	 ldr         r2, [pc, #0xD4]
  000d8	e1a03004	 mov         r3, r4
  000dc	e3a01000	 mov         r1, #0
  000e0	e3a00000	 mov         r0, #0
  000e4	e5846000	 str         r6, [r4]
  000e8	e58da004	 str         r10, [sp, #4]
  000ec	e58da000	 str         r10, [sp]
  000f0	eb000000	 bl          CreateThread
  000f4	e7880004	 str         r0, [r8, +r4]
  000f8	e5973000	 ldr         r3, [r7]
  000fc	e2866001	 add         r6, r6, #1
  00100	e2844004	 add         r4, r4, #4
  00104	e1560003	 cmp         r6, r3
  00108	3afffff1	 bcc         |$LL10@TestSPIMul|
  0010c		 |$LN8@TestSPIMul|

; 55   :     }
; 56   : 
; 57   :     for(DWORD i = 0; i < g_NbThreads; i++)

  0010c	e3a04000	 mov         r4, #0
  00110	e3530000	 cmp         r3, #0
  00114	0a000012	 beq         |$CLOSE$32854|
  00118		 |$LL7@TestSPIMul|

; 58   :     {
; 59   :         DWORD dwRet = 0;
; 60   :         dwRet = WaitForSingleObject(ThreadHandles[i], INFINITE);

  00118	e5950000	 ldr         r0, [r5]
  0011c	e3e01000	 mvn         r1, #0
  00120	eb000000	 bl          WaitForSingleObject

; 61   :         if(dwRet == WAIT_FAILED)

  00124	e3700001	 cmn         r0, #1
  00128	0a000005	 beq         |$LN15@TestSPIMul|
  0012c	e5973000	 ldr         r3, [r7]
  00130	e2844001	 add         r4, r4, #1
  00134	e2855004	 add         r5, r5, #4
  00138	e1540003	 cmp         r4, r3
  0013c	3afffff5	 bcc         |$LL7@TestSPIMul|
  00140	ea000007	 b           |$CLOSE$32854|
  00144		 |$LN15@TestSPIMul|

; 62   :         {
; 63   :             g_pKato->Log(1, TEXT("Failure in waiting for threads \r\n"), dwRet-WAIT_OBJECT_0);

  00144	e59f105c	 ldr         r1, [pc, #0x5C]
  00148	e59f205c	 ldr         r2, [pc, #0x5C]
  0014c	e5990000	 ldr         r0, [r9]
  00150	e5914000	 ldr         r4, [r1]
  00154	e3a01001	 mov         r1, #1
  00158	e3e03000	 mvn         r3, #0
  0015c	e1a0e00f	 mov         lr, pc
  00160	e12fff14	 bx          r4
  00164		 |$CLOSE$32854|

; 64   :             goto CLOSE;
; 65   :         }
; 66   :     }
; 67   : 
; 68   : CLOSE:
; 69   :     g_pKato->Log(1, TEXT("Ending SpiTest \r\n"));

  00164	e59f303c	 ldr         r3, [pc, #0x3C]
  00168	e59f2034	 ldr         r2, [pc, #0x34]
  0016c	e5990000	 ldr         r0, [r9]
  00170	e5933000	 ldr         r3, [r3]
  00174	e3a01001	 mov         r1, #1
  00178	e1a0e00f	 mov         lr, pc
  0017c	e12fff13	 bx          r3

; 70   :     if(g_Fail == TRUE)

  00180	e59f3018	 ldr         r3, [pc, #0x18]
  00184	e5933000	 ldr         r3, [r3]
  00188	e3530001	 cmp         r3, #1

; 71   :     {
; 72   :         return TPR_FAIL;

  0018c	03a00004	 moveq       r0, #4

; 73   :     }
; 74   :     else
; 75   :     {
; 76   :         return TPR_PASS;

  00190	13a00003	 movne       r0, #3

; 77   :     }
; 78   : }

  00194	e28dd008	 add         sp, sp, #8
  00198	e8bd47f0	 ldmia       sp!, {r4 - r10, lr}
  0019c	e12fff1e	 bx          lr
  001a0		 |$LN21@TestSPIMul|
  001a0		 |$LN22@TestSPIMul|
  001a0	00000000	 DCD         |?g_Fail@@3HA|
  001a4		 |$LN23@TestSPIMul|
  001a4	00000000	 DCD         |??_C@_1CE@BHDBOKCL@?$AAE?$AAn?$AAd?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAp?$AAi?$AAT?$AAe?$AAs?$AAt?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  001a8		 |$LN24@TestSPIMul|
  001a8	00000000	 DCD         |__imp_?Log@CKato@@QAAHKPBGZZ|
  001ac		 |$LN25@TestSPIMul|
  001ac	00000000	 DCD         |??_C@_1EE@FLEMGJLK@?$AAF?$AAa?$AAi?$AAl?$AAu?$AAr?$AAe?$AA?5?$AAi?$AAn?$AA?5?$AAw?$AAa?$AAi?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AAs?$AA?5?$AA?$AN@|
  001b0		 |$LN26@TestSPIMul|
  001b0	00000000	 DCD         |?WriteThread@@YAKPAX@Z|
  001b4		 |$LN27@TestSPIMul|
  001b4	00000000	 DCD         |??_C@_1HA@NDPBBFJH@?$AAC?$AAr?$AAe?$AAa?$AAt?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAd?$AA?5?$AAt?$AAh?$AAr?$AAe?$AAa?$AAd?$AAs?$AA?5?$AAt?$AAh?$AAa?$AAt?$AA?5?$AAw?$AAi?$AAl?$AAl?$AA?5?$AAw?$AAr@|
  001b8		 |$LN28@TestSPIMul|
  001b8	00000000	 DCD         |?g_NbThreads@@3KA|
  001bc		 |$LN29@TestSPIMul|
  001bc	00000000	 DCD         |?g_Writes@@3KA|
  001c0		 |$LN30@TestSPIMul|
  001c0	00000000	 DCD         |?g_BufferSize@@3KA|
  001c4		 |$LN31@TestSPIMul|
  001c4	00000000	 DCD         |??_C@_1EE@FCOIKHJL@?$AAU?$AAs?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAp?$AAi?$AA?5?$AAp?$AAo?$AAr?$AAt?$AA?5?$AA?$CF?$AAd?$AA?5?$AAC?$AAh?$AAi?$AAp?$AAs?$AAe?$AAl?$AAe?$AAc?$AAt?$AA?5?$AA?$CF?$AAd?$AA?$AN@|
  001c8		 |$LN32@TestSPIMul|
  001c8	00000000	 DCD         |?g_Port@@3KA|
  001cc		 |$LN33@TestSPIMul|
  001cc	00000000	 DCD         |?g_ChipSelect@@3KA|
  001d0		 |$LN34@TestSPIMul|
  001d0	00000000	 DCD         |??_C@_1CI@PJJMDCLP@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAP?$AAI?$AAT?$AAe?$AAs?$AAt?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  001d4		 |$LN35@TestSPIMul|
  001d4	00000000	 DCD         |?g_pKato@@3PAVCKato@@A|
  001d8		 |$M33008|

			 ENDP  ; |?TestSPIMultipleInstances@@YAHIPAKPAU_FUNCTION_TABLE_ENTRY@@@Z|, TestSPIMultipleInstances

	END
