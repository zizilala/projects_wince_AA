; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\Z2170P\SRC\test\testSerialPerf\testSerialPerf.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-INCLUDE:__@@_PchSym_@00@UdrmxvGAAUkozgulinUaCBHAkUhixUg"
	DCB	"vhgUgvhghvirzokviuUlyqUzineErUivgzroUhgwzucOlyq@testSeri"
	DCB	"alPerf "
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|wmain|
	EXPORT	|??_C@_1BI@EPEFENKE@?$AAT?$AAE?$AAS?$AAT?$AA?3?$AA?5?$AAF?$AAA?$AAI?$AAL?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@LDJLJIBF@?$AAT?$AAE?$AAS?$AAT?$AA?3?$AA?5?$AAP?$AAA?$AAS?$AAS?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IK@CLJNNLN@?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?5?$AAo?$AAf?$AA?5?$AAt?$AAe?$AAs?$AAt?$AA?5?$AAB?$AAy?$AAt?$AAe?$AAs?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAW?$AAr?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@CBJDOMPC@?$AAn?$AAb?$AAR?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAn?$AAb?$AAR?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CE@FEKMNKEJ@?$AAB?$AAa?$AAu?$AAd?$AAr?$AAa?$AAt?$AAe?$AA?5?$AAi?$AAs?$AA?5?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@GLMPOJKD@?$AAO?$AAp?$AAe?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAs?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JC@KAKOMDHN@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?5?$AAo?$AAf?$AA?5?$AAp?$AAa?$AAr?$AAa?$AAm?$AAe?$AAt?$AAe?$AAr?$AAs?$AA?6?$AAu?$AAs?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EK@LIAPIEIH@?$AAS?$AAi?$AAm?$AAp?$AAl?$AAe?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?9?$AAr?$AAe?$AAc?$AAi?$AAe?$AAv?$AAe?$AA?5?$AAa?$AAp?$AAp?$AAl?$AAi?$AAc?$AAa?$AAt@| [ DATA ] ; `string'
	IMPORT	|CloseHandle|
	IMPORT	|ReadFile|
	IMPORT	|WriteFile|
	IMPORT	|GetTickCount|
	IMPORT	|SetCommTimeouts|
	IMPORT	|GetCommTimeouts|
	IMPORT	|SetCommState|
	IMPORT	|_wtol|
	IMPORT	|GetCommState|
	IMPORT	|CreateFileW|
	IMPORT	|NKDbgPrintfW|
; File c:\wince600\platform\z2170p\src\test\testserialperf\testserialperf.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T32120| DCD	|$LN45@wmain|
	DCD	0x4000d403

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@EPEFENKE@?$AAT?$AAE?$AAS?$AAT?$AA?3?$AA?5?$AAF?$AAA?$AAI?$AAL?$AA?6?$AA?$AA@| DCB "T"
	DCB	0x0, "E", 0x0, "S", 0x0, "T", 0x0, ":", 0x0, " ", 0x0, "F"
	DCB	0x0, "A", 0x0, "I", 0x0, "L", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@LDJLJIBF@?$AAT?$AAE?$AAS?$AAT?$AA?3?$AA?5?$AAP?$AAA?$AAS?$AAS?$AA?6?$AA?$AA@| DCB "T"
	DCB	0x0, "E", 0x0, "S", 0x0, "T", 0x0, ":", 0x0, " ", 0x0, "P"
	DCB	0x0, "A", 0x0, "S", 0x0, "S", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IK@CLJNNLN@?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?5?$AAo?$AAf?$AA?5?$AAt?$AAe?$AAs?$AAt?$AA?5?$AAB?$AAy?$AAt?$AAe?$AAs?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAW?$AAr?$AAi@| DCB "N"
	DCB	0x0, "u", 0x0, "m", 0x0, "b", 0x0, "e", 0x0, "r", 0x0, " "
	DCB	0x0, "o", 0x0, "f", 0x0, " ", 0x0, "t", 0x0, "e", 0x0, "s"
	DCB	0x0, "t", 0x0, " ", 0x0, "B", 0x0, "y", 0x0, "t", 0x0, "e"
	DCB	0x0, "s", 0x0, " ", 0x0, "a", 0x0, "r", 0x0, "e", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "W", 0x0, "r"
	DCB	0x0, "i", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "T", 0x0, "i"
	DCB	0x0, "m", 0x0, "e", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, " "
	DCB	0x0, "m", 0x0, "s", 0x0, " ", 0x0, "a", 0x0, "n", 0x0, "d"
	DCB	0x0, " ", 0x0, "R", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, " "
	DCB	0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, " ", 0x0, "m", 0x0, "s", 0x0, ".", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@CBJDOMPC@?$AAn?$AAb?$AAR?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAn?$AAb?$AAR?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "n"
	DCB	0x0, "b", 0x0, "R", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, " ", 0x0, "!", 0x0, "=", 0x0, " "
	DCB	0x0, "n", 0x0, "b", 0x0, "R", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CE@FEKMNKEJ@?$AAB?$AAa?$AAu?$AAd?$AAr?$AAa?$AAt?$AAe?$AA?5?$AAi?$AAs?$AA?5?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "B"
	DCB	0x0, "a", 0x0, "u", 0x0, "d", 0x0, "r", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, " ", 0x0, "i", 0x0, "s", 0x0, " ", 0x0, " "
	DCB	0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@GLMPOJKD@?$AAO?$AAp?$AAe?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAs?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "p", 0x0, "e", 0x0, "n", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "%", 0x0, "s", 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JC@KAKOMDHN@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?5?$AAo?$AAf?$AA?5?$AAp?$AAa?$AAr?$AAa?$AAm?$AAe?$AAt?$AAe?$AAr?$AAs?$AA?6?$AAu?$AAs?$AAa@| DCB "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "n", 0x0, "u", 0x0, "m", 0x0, "b", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "o", 0x0, "f", 0x0, " ", 0x0, "p"
	DCB	0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, "t"
	DCB	0x0, "e", 0x0, "r", 0x0, "s", 0x0, 0xa, 0x0, "u", 0x0, "s"
	DCB	0x0, "a", 0x0, "g", 0x0, "e", 0x0, ":", 0x0, "%", 0x0, "s"
	DCB	0x0, " ", 0x0, "p", 0x0, "o", 0x0, "r", 0x0, "t", 0x0, "_"
	DCB	0x0, "n", 0x0, "a", 0x0, "m", 0x0, "e", 0x0, " ", 0x0, "("
	DCB	0x0, "e", 0x0, "x", 0x0, ":", 0x0, "%", 0x0, "s", 0x0, " "
	DCB	0x0, "C", 0x0, "O", 0x0, "M", 0x0, "1", 0x0, ":", 0x0, " "
	DCB	0x0, "1", 0x0, "1", 0x0, "5", 0x0, "2", 0x0, "0", 0x0, "0"
	DCB	0x0, " ", 0x0, "5", 0x0, "0", 0x0, ")", 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@LIAPIEIH@?$AAS?$AAi?$AAm?$AAp?$AAl?$AAe?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?9?$AAr?$AAe?$AAc?$AAi?$AAe?$AAv?$AAe?$AA?5?$AAa?$AAp?$AAp?$AAl?$AAi?$AAc?$AAa?$AAt@| DCB "S"
	DCB	0x0, "i", 0x0, "m", 0x0, "p", 0x0, "l", 0x0, "e", 0x0, " "
	DCB	0x0, "t", 0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "m"
	DCB	0x0, "i", 0x0, "t", 0x0, "-", 0x0, "r", 0x0, "e", 0x0, "c"
	DCB	0x0, "i", 0x0, "e", 0x0, "v", 0x0, "e", 0x0, " ", 0x0, "a"
	DCB	0x0, "p", 0x0, "p", 0x0, "l", 0x0, "i", 0x0, "c", 0x0, "a"
	DCB	0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n", 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |wmain| PROC

; 18   : {    

  00000		 |$LN45@wmain|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e59fc340	 ldr         r12, [pc, #0x340]
  00008	e08dd00c	 add         sp, sp, r12
  0000c		 |$M32117|
  0000c	e1a04001	 mov         r4, r1
  00010	e1a05000	 mov         r5, r0

; 19   :     HANDLE h;
; 20   :     DCB dcb;
; 21   :     COMMTIMEOUTS		timeouts;
; 22   : 	DWORD  dwTickCountWrite[100],dwTickCountRead[100]; 
; 23   :     DWORD			              dstBuff1[DATASIZE],srcBuff1[DATASIZE];
; 24   : 	volatile int				i,j;
; 25   :     int      				passStatus = 0;
; 26   : 	TCHAR *   temp;
; 27   : 	int baudRate = 115200;
; 28   : 	int maxIteration = 100; 
; 29   :     RETAILMSG(1,(TEXT("Simple transmit-recieve application\n")));

  00014	e59f032c	 ldr         r0, [pc, #0x32C]
  00018	e3a03907	 mov         r3, #7, 18
  0001c	e3a09000	 mov         r9, #0
  00020	e3837c02	 orr         r7, r3, #2, 24
  00024	e3a08064	 mov         r8, #0x64
  00028	eb000000	 bl          NKDbgPrintfW

; 30   :     if (argc != 4 && argc != 2)

  0002c	e3550004	 cmp         r5, #4
  00030	0a000007	 beq         |$LN16@wmain|
  00034	e3550002	 cmp         r5, #2
  00038	0a000005	 beq         |$LN16@wmain|

; 31   :     {
; 32   :         RETAILMSG(1,(TEXT("Invalid number of parameters\nusage:%s port_name (ex:%s COM1: 115200 50)\n"),argv[0],argv[0]));

  0003c	e5941000	 ldr         r1, [r4]
  00040	e59f02fc	 ldr         r0, [pc, #0x2FC]
  00044	e1a02001	 mov         r2, r1
  00048	eb000000	 bl          NKDbgPrintfW

; 33   :         return -1;

  0004c	e3e00000	 mvn         r0, #0
  00050	ea0000b0	 b           |$LN17@wmain|
  00054		 |$LN16@wmain|

; 34   :     }
; 35   :     RETAILMSG(1,(TEXT("Opening %s\n"),argv[1]));

  00054	e5941004	 ldr         r1, [r4, #4]
  00058	e59f02e0	 ldr         r0, [pc, #0x2E0]
  0005c	eb000000	 bl          NKDbgPrintfW

; 36   : 	temp =  envp[0];
; 37   :     h = CreateFile(argv[1],GENERIC_READ | GENERIC_WRITE,0,NULL,OPEN_EXISTING,0,NULL);

  00060	e5940004	 ldr         r0, [r4, #4]
  00064	e3a0e003	 mov         lr, #3
  00068	e3a0a000	 mov         r10, #0
  0006c	e3a03000	 mov         r3, #0
  00070	e3a02000	 mov         r2, #0
  00074	e3a01103	 mov         r1, #3, 2
  00078	e58de000	 str         lr, [sp]
  0007c	e58da008	 str         r10, [sp, #8]
  00080	e58da004	 str         r10, [sp, #4]
  00084	eb000000	 bl          CreateFileW

; 38   :     GetCommState(h,&dcb);

  00088	e28d102c	 add         r1, sp, #0x2C
  0008c	e1a06000	 mov         r6, r0
  00090	eb000000	 bl          GetCommState

; 39   : 	if (argc == 4)

  00094	e3550004	 cmp         r5, #4
  00098	1a000005	 bne         |$LN15@wmain|

; 40   : 	{
; 41   : 	  baudRate = (DWORD)_wtol(argv[2]);

  0009c	e5940008	 ldr         r0, [r4, #8]
  000a0	eb000000	 bl          _wtol
  000a4	e1a07000	 mov         r7, r0

; 42   :       maxIteration = (DWORD)_wtol(argv[3]);

  000a8	e594000c	 ldr         r0, [r4, #0xC]
  000ac	eb000000	 bl          _wtol
  000b0	e1a08000	 mov         r8, r0
  000b4		 |$LN15@wmain|

; 43   : 	}
; 44   : 
; 45   : 	RETAILMSG(1,(TEXT("Baudrate is  %d\r\n"),baudRate));

  000b4	e59f0280	 ldr         r0, [pc, #0x280]
  000b8	e1a01007	 mov         r1, r7
  000bc	eb000000	 bl          NKDbgPrintfW

; 46   :     dcb.BaudRate = baudRate;   
; 47   :     dcb.fBinary          = TRUE;
; 48   :     dcb.fParity          = FALSE;
; 49   :     dcb.fOutxCtsFlow     = FALSE;
; 50   :     dcb.fOutxDsrFlow     = FALSE;
; 51   :     dcb.fDtrControl      = DTR_CONTROL_DISABLE;
; 52   :     dcb.fDsrSensitivity  = FALSE;
; 53   :     dcb.fOutX            = FALSE;
; 54   :     dcb.fInX             = FALSE;
; 55   :     dcb.fErrorChar       = 0;    
; 56   :     dcb.fNull            = 0;    
; 57   :     dcb.fRtsControl      = RTS_CONTROL_ENABLE;

  000c0	e59d2034	 ldr         r2, [sp, #0x34]
  000c4	e3e03c6f	 mvn         r3, #0x6F, 24
  000c8	e223307e	 eor         r3, r3, #0x7E
  000cc	e3a01a01	 mov         r1, #1, 20
  000d0	e0022003	 and         r2, r2, r3
  000d4	e3813001	 orr         r3, r1, #1
  000d8	e1823003	 orr         r3, r2, r3

; 58   :     dcb.fAbortOnError    = FALSE;
; 59   :     dcb.ByteSize         = 8;    

  000dc	e3a02008	 mov         r2, #8

; 60   :     dcb.Parity           = NOPARITY;

  000e0	e3a0e000	 mov         lr, #0

; 61   :     dcb.StopBits         = ONESTOPBIT;

  000e4	e3a04000	 mov         r4, #0

; 62   :     SetCommState(h,&dcb);

  000e8	e28d102c	 add         r1, sp, #0x2C
  000ec	e1a00006	 mov         r0, r6
  000f0	e5cd203e	 strb        r2, [sp, #0x3E]
  000f4	e58d3034	 str         r3, [sp, #0x34]
  000f8	e58d7030	 str         r7, [sp, #0x30]
  000fc	e5cde03f	 strb        lr, [sp, #0x3F]
  00100	e5cd4040	 strb        r4, [sp, #0x40]
  00104	eb000000	 bl          SetCommState

; 63   :     //timeout configuration  
; 64   :     GetCommTimeouts(h,&timeouts);

  00108	e28d1018	 add         r1, sp, #0x18
  0010c	e1a00006	 mov         r0, r6
  00110	eb000000	 bl          GetCommTimeouts

; 65   :     timeouts.ReadIntervalTimeout = 100;
; 66   :     timeouts.ReadTotalTimeoutMultiplier = 10;
; 67   :     timeouts.ReadTotalTimeoutConstant = 1000;

  00114	e3a01ffa	 mov         r1, #0xFA, 30

; 68   :     timeouts.WriteTotalTimeoutMultiplier = 10;

  00118	e3a0000a	 mov         r0, #0xA

; 69   :     timeouts.WriteTotalTimeoutConstant = 1000;

  0011c	e58d1020	 str         r1, [sp, #0x20]
  00120	e58d0024	 str         r0, [sp, #0x24]
  00124	e3a03064	 mov         r3, #0x64
  00128	e3a0200a	 mov         r2, #0xA
  0012c	e3a0effa	 mov         lr, #0xFA, 30

; 70   :     SetCommTimeouts(h,&timeouts);

  00130	e28d1018	 add         r1, sp, #0x18
  00134	e1a00006	 mov         r0, r6
  00138	e58d3018	 str         r3, [sp, #0x18]
  0013c	e58d201c	 str         r2, [sp, #0x1C]
  00140	e58de028	 str         lr, [sp, #0x28]
  00144	eb000000	 bl          SetCommTimeouts

; 71   : 	//Inialize destination buffer to junk value
; 72   :     for(i=0;i<DATASIZE;i++)

  00148	e58da00c	 str         r10, [sp, #0xC]
  0014c	e59d300c	 ldr         r3, [sp, #0xC]
  00150	e3530c02	 cmp         r3, #2, 24
  00154	aa00000a	 bge         |$LN12@wmain|
  00158	e3a01c0b	 mov         r1, #0xB, 24
  0015c	e381106c	 orr         r1, r1, #0x6C
  00160	e08d1001	 add         r1, sp, r1
  00164		 |$LL14@wmain|

; 73   :      {	
; 74   : 	    dstBuff1[i] = 0;

  00164	e59d300c	 ldr         r3, [sp, #0xC]
  00168	e59d200c	 ldr         r2, [sp, #0xC]
  0016c	e781a103	 str         r10, [r1, +r3, lsl #2]
  00170	e2823001	 add         r3, r2, #1
  00174	e58d300c	 str         r3, [sp, #0xC]
  00178	e59d300c	 ldr         r3, [sp, #0xC]
  0017c	e3530c02	 cmp         r3, #2, 24
  00180	bafffff7	 blt         |$LL14@wmain|
  00184		 |$LN12@wmain|

; 75   : 		//dstBuff1++;
; 76   : 	}
; 77   : 
; 78   :   /* Initialize source buffer to known data value */
; 79   :     for (i= 0;i < DATASIZE; i++) 

  00184	e58da00c	 str         r10, [sp, #0xC]
  00188	e59d300c	 ldr         r3, [sp, #0xC]
  0018c	e3530c02	 cmp         r3, #2, 24
  00190	aa00000a	 bge         |$LN9@wmain|
  00194	e28d0fdb	 add         r0, sp, #0xDB, 30
  00198		 |$LL11@wmain|

; 80   :     	srcBuff1[i] = (i+1);

  00198	e59d300c	 ldr         r3, [sp, #0xC]
  0019c	e59d200c	 ldr         r2, [sp, #0xC]
  001a0	e59d100c	 ldr         r1, [sp, #0xC]
  001a4	e2833001	 add         r3, r3, #1
  001a8	e7803102	 str         r3, [r0, +r2, lsl #2]
  001ac	e2813001	 add         r3, r1, #1
  001b0	e58d300c	 str         r3, [sp, #0xC]
  001b4	e59d300c	 ldr         r3, [sp, #0xC]
  001b8	e3530c02	 cmp         r3, #2, 24
  001bc	bafffff5	 blt         |$LL11@wmain|
  001c0		 |$LN9@wmain|

; 81   : 
; 82   : 	for (i= 0;i < maxIteration; i++) 

  001c0	e58da00c	 str         r10, [sp, #0xC]
  001c4	e59d300c	 ldr         r3, [sp, #0xC]
  001c8	e1530008	 cmp         r3, r8
  001cc	aa00004c	 bge         |$LN41@wmain|
  001d0	e3a02000	 mov         r2, #0
  001d4	e3a01000	 mov         r1, #0
  001d8	e28d404c	 add         r4, sp, #0x4C
  001dc	e28daf77	 add         r10, sp, #0x77, 30
  001e0	e28dbf77	 add         r11, sp, #0x77, 30
  001e4	e28d5f77	 add         r5, sp, #0x77, 30
  001e8	e28d704c	 add         r7, sp, #0x4C
  001ec		 |$LL8@wmain|

; 83   :      {
; 84   :         //UCHAR buffer[512];
; 85   :         DWORD nbRead=0,nbWritten=0;

  001ec	e58d2014	 str         r2, [sp, #0x14]
  001f0	e58d1010	 str         r1, [sp, #0x10]

; 86   : 		 dwTickCountWrite[i] = GetTickCount();

  001f4	eb000000	 bl          GetTickCount
  001f8	e59d200c	 ldr         r2, [sp, #0xC]

; 87   :         if (WriteFile(h,srcBuff1,DATASIZE,&nbWritten,NULL))

  001fc	e3a0e000	 mov         lr, #0
  00200	e28d3010	 add         r3, sp, #0x10
  00204	e7840102	 str         r0, [r4, +r2, lsl #2]
  00208	e3a02c02	 mov         r2, #2, 24
  0020c	e1a00006	 mov         r0, r6
  00210	e28d1fdb	 add         r1, sp, #0xDB, 30
  00214	e58de000	 str         lr, [sp]
  00218	eb000000	 bl          WriteFile
  0021c	e3500000	 cmp         r0, #0
  00220	0a000023	 beq         |$LN3@wmain|

; 88   :         {
; 89   :             //Calculate time to read
; 90   :             dwTickCountWrite[i] = GetTickCount() - dwTickCountWrite[i];

  00224	eb000000	 bl          GetTickCount
  00228	e59d300c	 ldr         r3, [sp, #0xC]
  0022c	e28d104c	 add         r1, sp, #0x4C
  00230	e59d200c	 ldr         r2, [sp, #0xC]
  00234	e7913103	 ldr         r3, [r1, +r3, lsl #2]
  00238	e28d104c	 add         r1, sp, #0x4C
  0023c	e0403003	 sub         r3, r0, r3
  00240	e7813102	 str         r3, [r1, +r2, lsl #2]

; 91   :             dwTickCountRead[i] = GetTickCount();

  00244	eb000000	 bl          GetTickCount
  00248	e59d200c	 ldr         r2, [sp, #0xC]

; 92   : 		    if (ReadFile(h,dstBuff1,sizeof(srcBuff1),&nbRead,NULL))

  0024c	e28d1f77	 add         r1, sp, #0x77, 30
  00250	e3a0e000	 mov         lr, #0
  00254	e7810102	 str         r0, [r1, +r2, lsl #2]
  00258	e3a02b02	 mov         r2, #2, 22
  0025c	e3a01c0b	 mov         r1, #0xB, 24
  00260	e381106c	 orr         r1, r1, #0x6C
  00264	e08d1001	 add         r1, sp, r1
  00268	e1a00006	 mov         r0, r6
  0026c	e28d3014	 add         r3, sp, #0x14
  00270	e58de000	 str         lr, [sp]
  00274	eb000000	 bl          ReadFile
  00278	e3500000	 cmp         r0, #0
  0027c	0a00000c	 beq         |$LN3@wmain|

; 93   : 			{
; 94   :     		  dwTickCountRead[i] = GetTickCount() - dwTickCountRead[i];

  00280	eb000000	 bl          GetTickCount
  00284	e59d300c	 ldr         r3, [sp, #0xC]
  00288	e59de00c	 ldr         lr, [sp, #0xC]

; 95   :              if (nbWritten != nbRead)

  0028c	e59d1010	 ldr         r1, [sp, #0x10]
  00290	e79a3103	 ldr         r3, [r10, +r3, lsl #2]
  00294	e59d2014	 ldr         r2, [sp, #0x14]
  00298	e0403003	 sub         r3, r0, r3
  0029c	e78b310e	 str         r3, [r11, +lr, lsl #2]
  002a0	e1510002	 cmp         r1, r2
  002a4	0a000002	 beq         |$LN3@wmain|

; 96   :               {
; 97   :                 RETAILMSG(1,(TEXT("nbRead %d != nbRead %d\r\n"),nbWritten,nbRead));

  002a8	e59f0088	 ldr         r0, [pc, #0x88]
  002ac	eb000000	 bl          NKDbgPrintfW

; 98   : 				passStatus = 1;

  002b0	e3a09001	 mov         r9, #1
  002b4		 |$LN3@wmain|

; 99   :              }
; 100  : 		   }
; 101  :         }
; 102  : 	//Verify that data send was recieved 
; 103  :     j=0;

  002b4	e3a03000	 mov         r3, #0
  002b8	e58d3048	 str         r3, [sp, #0x48]

; 104  :     /*for(j=0;j<DATASIZE;j++)
; 105  : 	{
; 106  : 		if(dstBuff1[j] != srcBuff1[j])
; 107  : 		{	
; 108  : 			passStatus = 0;
; 109  : 			    printf("FAILED: Serial Data Not Read Successfully [Expected = %d, Obtained = %d].\n",srcBuff1[j],dstBuff1[j]); 
; 110  : 			
; 111  : 		}
; 112  : 		else
; 113  : 		{
; 114  :          printf("DATA SEND %d , RECIEVED %d\n",srcBuff1[j],dstBuff1[j]);	
; 115  : 			passStatus = 1;
; 116  : 		}
; 117  : 		
; 118  : 	}
; 119  : 	*/
; 120  : 
; 121  : 	RETAILMSG(1,(TEXT("Number of test Bytes are %d, Write Time %d ms and Read Time %d ms.\r\n"),DATASIZE,dwTickCountWrite[i],dwTickCountRead[i]));	

  002bc	e59d300c	 ldr         r3, [sp, #0xC]
  002c0	e59d200c	 ldr         r2, [sp, #0xC]
  002c4	e59f0068	 ldr         r0, [pc, #0x68]
  002c8	e7953103	 ldr         r3, [r5, +r3, lsl #2]
  002cc	e7972102	 ldr         r2, [r7, +r2, lsl #2]
  002d0	e3a01c02	 mov         r1, #2, 24
  002d4	eb000000	 bl          NKDbgPrintfW
  002d8	e59d300c	 ldr         r3, [sp, #0xC]
  002dc	e3a02000	 mov         r2, #0
  002e0	e3a01000	 mov         r1, #0
  002e4	e2833001	 add         r3, r3, #1
  002e8	e58d300c	 str         r3, [sp, #0xC]
  002ec	e59d300c	 ldr         r3, [sp, #0xC]
  002f0	e1530008	 cmp         r3, r8
  002f4	baffffbc	 blt         |$LL8@wmain|

; 122  : } // end of for loop  
; 123  : 
; 124  : 	if (passStatus == 0)

  002f8	e3590000	 cmp         r9, #0

; 127  : 	}
; 128  : 	else 
; 129  : 	{
; 130  :        RETAILMSG(1,(TEXT("TEST: FAIL\n")));

  002fc	159f002c	 ldrne       r0, [pc, #0x2C]
  00300	1a000000	 bne         |$LN42@wmain|
  00304		 |$LN41@wmain|

; 125  : 	{
; 126  : 		RETAILMSG(1,(TEXT("TEST: PASS\n")));

  00304	e59f0020	 ldr         r0, [pc, #0x20]
  00308		 |$LN42@wmain|
  00308	eb000000	 bl          NKDbgPrintfW

; 131  : 	}
; 132  : 
; 133  :     CloseHandle(h);

  0030c	e1a00006	 mov         r0, r6
  00310	eb000000	 bl          CloseHandle

; 134  :     return 0;

  00314	e3a00000	 mov         r0, #0
  00318		 |$LN17@wmain|

; 135  : }

  00318	e3a0cc13	 mov         r12, #0x13, 24
  0031c	e38cc06c	 orr         r12, r12, #0x6C
  00320	e08dd00c	 add         sp, sp, r12
  00324	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00328	e12fff1e	 bx          lr
  0032c		 |$LN46@wmain|
  0032c		 |$LN47@wmain|
  0032c	00000000	 DCD         |??_C@_1BI@LDJLJIBF@?$AAT?$AAE?$AAS?$AAT?$AA?3?$AA?5?$AAP?$AAA?$AAS?$AAS?$AA?6?$AA?$AA@|
  00330		 |$LN48@wmain|
  00330	00000000	 DCD         |??_C@_1BI@EPEFENKE@?$AAT?$AAE?$AAS?$AAT?$AA?3?$AA?5?$AAF?$AAA?$AAI?$AAL?$AA?6?$AA?$AA@|
  00334		 |$LN49@wmain|
  00334	00000000	 DCD         |??_C@_1IK@CLJNNLN@?$AAN?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?5?$AAo?$AAf?$AA?5?$AAt?$AAe?$AAs?$AAt?$AA?5?$AAB?$AAy?$AAt?$AAe?$AAs?$AA?5?$AAa?$AAr?$AAe?$AA?5?$AA?$CF?$AAd?$AA?0?$AA?5?$AAW?$AAr?$AAi@|
  00338		 |$LN50@wmain|
  00338	00000000	 DCD         |??_C@_1DC@CBJDOMPC@?$AAn?$AAb?$AAR?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAn?$AAb?$AAR?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  0033c		 |$LN51@wmain|
  0033c	00000000	 DCD         |??_C@_1CE@FEKMNKEJ@?$AAB?$AAa?$AAu?$AAd?$AAr?$AAa?$AAt?$AAe?$AA?5?$AAi?$AAs?$AA?5?$AA?5?$AA?$CF?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  00340		 |$LN52@wmain|
  00340	00000000	 DCD         |??_C@_1BI@GLMPOJKD@?$AAO?$AAp?$AAe?$AAn?$AAi?$AAn?$AAg?$AA?5?$AA?$CF?$AAs?$AA?6?$AA?$AA@|
  00344		 |$LN53@wmain|
  00344	00000000	 DCD         |??_C@_1JC@KAKOMDHN@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAn?$AAu?$AAm?$AAb?$AAe?$AAr?$AA?5?$AAo?$AAf?$AA?5?$AAp?$AAa?$AAr?$AAa?$AAm?$AAe?$AAt?$AAe?$AAr?$AAs?$AA?6?$AAu?$AAs?$AAa@|
  00348		 |$LN54@wmain|
  00348	00000000	 DCD         |??_C@_1EK@LIAPIEIH@?$AAS?$AAi?$AAm?$AAp?$AAl?$AAe?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAm?$AAi?$AAt?$AA?9?$AAr?$AAe?$AAc?$AAi?$AAe?$AAv?$AAe?$AA?5?$AAa?$AAp?$AAp?$AAl?$AAi?$AAc?$AAa?$AAt@|
  0034c		 |$LN55@wmain|
  0034c	ffffec94	 DCD         0xffffec94
  00350		 |$M32118|

			 ENDP  ; |wmain|

	END
