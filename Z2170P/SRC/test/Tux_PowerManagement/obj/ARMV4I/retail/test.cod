; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\Z2170P\SRC\test\Tux_PowerManagement\test.cpp
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "

	EXPORT	|?g_hPMThread2@@3PAXA| [ DATA ]		; g_hPMThread2
	EXPORT	|?g_StateInfoTable@@3PAUStateInfo@@A| [ DATA ] ; g_StateInfoTable
	EXPORT	|?g_hPMThread1@@3PAXA| [ DATA ]		; g_hPMThread1
	EXPORT	|?g_CurrentSystemTime@@3U_FILETIME@@A| [ DATA ] ; g_CurrentSystemTime
	EXPORT	|?dwStateId_on@@3KA| [ DATA ]		; dwStateId_on
	EXPORT	|?dwStateId_useridle@@3KA| [ DATA ]	; dwStateId_useridle
	EXPORT	|?dwStateId_systemidle@@3KA| [ DATA ]	; dwStateId_systemidle
	EXPORT	|?dwStateId_suspend@@3KA| [ DATA ]	; dwStateId_suspend
	EXPORT	|?bOnState@@3HA| [ DATA ]		; bOnState
	EXPORT	|?bUserIdleState@@3HA| [ DATA ]		; bUserIdleState
	EXPORT	|?bSystemIdleState@@3HA| [ DATA ]	; bSystemIdleState
	EXPORT	|?bSuspendState@@3HA| [ DATA ]		; bSuspendState
	EXPORT	|?g_bTestStatus@@3KA| [ DATA ]		; g_bTestStatus
	EXPORT	|?g_bTestResult@@3KA| [ DATA ]		; g_bTestResult
	EXPORT	|?g_dwMaxTimeout@@3KA| [ DATA ]		; g_dwMaxTimeout
	EXPORT	|?g_dwOnStateSeen@@3KA| [ DATA ]	; g_dwOnStateSeen
	EXPORT	|?g_dwUserIdleStateSeen@@3KA| [ DATA ]	; g_dwUserIdleStateSeen
	EXPORT	|?g_dwSystemIdleStateSeen@@3KA| [ DATA ] ; g_dwSystemIdleStateSeen
	EXPORT	|?g_dwSuspendStateSeen@@3KA| [ DATA ]	; g_dwSuspendStateSeen
	EXPORT	|?g_dwSaveACUserIdle@@3KA| [ DATA ]	; g_dwSaveACUserIdle
	EXPORT	|?g_dwSaveACSystemIdle@@3KA| [ DATA ]	; g_dwSaveACSystemIdle
	EXPORT	|?g_dwSaveACSuspend@@3KA| [ DATA ]	; g_dwSaveACSuspend
	EXPORT	|?g_dwSaveBattUserIdle@@3KA| [ DATA ]	; g_dwSaveBattUserIdle
	EXPORT	|?g_dwSaveBattSystemIdle@@3KA| [ DATA ]	; g_dwSaveBattSystemIdle
	EXPORT	|?g_dwSaveBattSuspend@@3KA| [ DATA ]	; g_dwSaveBattSuspend
	EXPORT	|?g_bTestBegin@@3HA| [ DATA ]		; g_bTestBegin
	EXPORT	|?g_TestStartTime@@3KA| [ DATA ]	; g_TestStartTime
	EXPORT	|?g_numofstates@@3KA| [ DATA ]		; g_numofstates
	EXPORT	|?g_PreviousState@@3KA| [ DATA ]	; g_PreviousState
	EXPORT	|?g_CurrentState@@3KA| [ DATA ]		; g_CurrentState

  00000			 AREA	 |.bss|, NOINIT
|?g_hPMThread2@@3PAXA| % 0x4				; g_hPMThread2
|?g_StateInfoTable@@3PAUStateInfo@@A| % 0x19960		; g_StateInfoTable
|?g_hPMThread1@@3PAXA| % 0x4				; g_hPMThread1
|?g_CurrentSystemTime@@3U_FILETIME@@A| % 0x8		; g_CurrentSystemTime
|?dwStateId_on@@3KA| % 0x4				; dwStateId_on
|?bOnState@@3HA| % 0x4					; bOnState
|?bUserIdleState@@3HA| % 0x4				; bUserIdleState
|?bSystemIdleState@@3HA| % 0x4				; bSystemIdleState
|?bSuspendState@@3HA| % 0x4				; bSuspendState
|?g_dwMaxTimeout@@3KA| % 0x4				; g_dwMaxTimeout
|?g_dwSaveACUserIdle@@3KA| % 0x4			; g_dwSaveACUserIdle
|?g_dwSaveACSystemIdle@@3KA| % 0x4			; g_dwSaveACSystemIdle
|?g_dwSaveACSuspend@@3KA| % 0x4				; g_dwSaveACSuspend
|?g_dwSaveBattUserIdle@@3KA| % 0x4			; g_dwSaveBattUserIdle
|?g_dwSaveBattSystemIdle@@3KA| % 0x4			; g_dwSaveBattSystemIdle
|?g_dwSaveBattSuspend@@3KA| % 0x4			; g_dwSaveBattSuspend
|?g_bTestBegin@@3HA| % 0x4				; g_bTestBegin
|?g_TestStartTime@@3KA| % 0x4				; g_TestStartTime
|?g_PreviousState@@3KA| % 0x4				; g_PreviousState
|?g_CurrentState@@3KA| % 0x4				; g_CurrentState

  00000			 AREA	 |.data|, DATA
|?dwStateId_useridle@@3KA| DCD 0x1			; dwStateId_useridle
|?dwStateId_systemidle@@3KA| DCD 0x2			; dwStateId_systemidle
|?dwStateId_suspend@@3KA| DCD 0x3			; dwStateId_suspend
|?g_bTestStatus@@3KA| DCD 0xe				; g_bTestStatus
|?g_bTestResult@@3KA| DCD 0xf				; g_bTestResult
|?g_dwOnStateSeen@@3KA| DCD 0x3				; g_dwOnStateSeen
|?g_dwUserIdleStateSeen@@3KA| DCD 0x3			; g_dwUserIdleStateSeen
|?g_dwSystemIdleStateSeen@@3KA| DCD 0x3			; g_dwSystemIdleStateSeen
|?g_dwSuspendStateSeen@@3KA| DCD 0x3			; g_dwSuspendStateSeen
|?g_numofstates@@3KA| DCD 0x1				; g_numofstates
	EXPORT	|SetEvent|
	IMPORT	|EventModify|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T33330| DCD	|$LN5@SetEvent|
	DCD	0x40000501
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |SetEvent| PROC

; 235  : _inline BOOL SetEvent(HANDLE h) {

  00000		 |$LN5@SetEvent|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M33327|

; 236  : 	return EventModify(h,EVENT_SET);

  00004	e3a01003	 mov         r1, #3
  00008	eb000000	 bl          EventModify

; 237  : }

  0000c	e49de004	 ldr         lr, [sp], #4
  00010	e12fff1e	 bx          lr
  00014		 |$M33328|

			 ENDP  ; |SetEvent|

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|?file_thread@@YAKPAX@Z|		; file_thread
	EXPORT	|??_C@_1FG@INLINDEP@?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAe?$AAx?$AAp?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAb?$AAy?$AAt?$AAe?$AAs?$AA?5?$AAf@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@CFAPMLEH@?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAe?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAe?$AAx?$AAp?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAb?$AAy?$AAt?$AAe?$AAs?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CG@PDCNFPKJ@?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@OKBCCAC@?$AAB?$AAy?$AAt?$AAe?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAu?$AA?5?$AAi?$AAs?$AA?5?$AAd?$AAi?$AAf?$AAf?$AAe?$AAr?$AAe?$AAn?$AAt?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAb@| [ DATA ] ; `string'
	EXPORT	|??_C@_01KDCPPGHE@r?$AA@| [ DATA ]	; `string'
	EXPORT	|??_C@_01NOFIACDB@w?$AA@| [ DATA ]	; `string'
	EXPORT	|??_C@_08DCCHEKFN@test?4bin?$AA@| [ DATA ] ; `string'
	IMPORT	|fread|
	IMPORT	|fclose|
	IMPORT	|fwrite|
	IMPORT	|fopen|
	IMPORT	|?g_pKato@@3PAVCKato@@A|		; g_pKato
	IMPORT	|__GSHandlerCheck|
	IMPORT	|__imp_?Log@CKato@@QAAHKPBGZZ|
	IMPORT	|__security_cookie|
	IMPORT	|__security_check_cookie|
; File c:\wince600\platform\z2170p\src\test\tux_powermanagement\test.cpp

  00000			 AREA	 |.pdata|, PDATA
|$T33365| DCD	|$LN32@file_threa|
	DCD	0xc0008902

  00000			 AREA	 |.xdata|, DATA
|$T33361| DCD	0xffffffd8

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@INLINDEP@?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAe?$AAx?$AAp?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAb?$AAy?$AAt?$AAe?$AAs?$AA?5?$AAf@| DCB "C"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d", 0x0, " ", 0x0, "a"
	DCB	0x0, "l", 0x0, "l", 0x0, " ", 0x0, "e", 0x0, "x", 0x0, "p"
	DCB	0x0, "e", 0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "b", 0x0, "y", 0x0, "t", 0x0, "e", 0x0, "s", 0x0, " "
	DCB	0x0, "f", 0x0, "r", 0x0, "o", 0x0, "m", 0x0, " ", 0x0, "f"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@CFAPMLEH@?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAe?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAe?$AAx?$AAp?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAb?$AAy?$AAt?$AAe?$AAs?$AA?5@| DCB "C"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, " "
	DCB	0x0, "w", 0x0, "r", 0x0, "i", 0x0, "t", 0x0, "e", 0x0, " "
	DCB	0x0, "a", 0x0, "l", 0x0, "l", 0x0, " ", 0x0, "e", 0x0, "x"
	DCB	0x0, "p", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "b", 0x0, "y", 0x0, "t", 0x0, "e", 0x0, "s"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "f", 0x0, "i"
	DCB	0x0, "l", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CG@PDCNFPKJ@?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "C"
	DCB	0x0, "a", 0x0, "n", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, " "
	DCB	0x0, "o", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, " ", 0x0, "f"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@OKBCCAC@?$AAB?$AAy?$AAt?$AAe?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAu?$AA?5?$AAi?$AAs?$AA?5?$AAd?$AAi?$AAf?$AAf?$AAe?$AAr?$AAe?$AAn?$AAt?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAb@| DCB "B"
	DCB	0x0, "y", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "d", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, " "
	DCB	0x0, "i", 0x0, "s", 0x0, " ", 0x0, "d", 0x0, "i", 0x0, "f"
	DCB	0x0, "f", 0x0, "e", 0x0, "r", 0x0, "e", 0x0, "n", 0x0, "t"
	DCB	0x0, " ", 0x0, "f", 0x0, "r", 0x0, "o", 0x0, "m", 0x0, " "
	DCB	0x0, "b", 0x0, "y", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "e"
	DCB	0x0, "x", 0x0, "p", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "%", 0x0, "u", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_01KDCPPGHE@r?$AA@| DCB "r", 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_01NOFIACDB@w?$AA@| DCB "w", 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_08DCCHEKFN@test?4bin?$AA@| DCB "test.bin", 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T33361|

  00008		 |?file_thread@@YAKPAX@Z| PROC		; file_thread

; 362  : {

  00008		 |$LN32@file_threa|
  00008	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  0000c	e24ddf82	 sub         sp, sp, #0x82, 30
  00010		 |$M33362|
  00010	e1a09000	 mov         r9, r0
  00014	e59f320c	 ldr         r3, [pc, #0x20C]
  00018	e5933000	 ldr         r3, [r3]
  0001c	e58d3204	 str         r3, [sp, #0x204]

; 363  : 	struct test_args_t *test_args = (struct test_args_t *)args;
; 364  : 	FILE * pFile;
; 365  : 	BYTE buffer[255];
; 366  : 	BYTE buffer_read[255];
; 367  : 	int size;
; 368  : 	int i;
; 369  : 
; 370  : 	size = MIN(test_args->n_bytes, 255);

  00020	e5995008	 ldr         r5, [r9, #8]

; 371  : 
; 372  : 	for (i =0; i<size; i++)

  00024	e3a03000	 mov         r3, #0
  00028	e35500ff	 cmp         r5, #0xFF
  0002c	a3a050ff	 movge       r5, #0xFF
  00030	e3550000	 cmp         r5, #0
  00034	da000004	 ble         |$LN20@file_threa|
  00038	e28d2f41	 add         r2, sp, #0x41, 30
  0003c		 |$LL14@file_threa|

; 373  : 	{
; 374  : 		buffer[i] = i;

  0003c	e7c33002	 strb        r3, [r3, +r2]
  00040	e2833001	 add         r3, r3, #1
  00044	e1530005	 cmp         r3, r5
  00048	bafffffb	 blt         |$LL14@file_threa|
  0004c		 |$LN20@file_threa|

; 375  : 	}
; 376  : 
; 377  : 	while (test_args->running)

  0004c	e599300c	 ldr         r3, [r9, #0xC]
  00050	e3530000	 cmp         r3, #0
  00054	0a000063	 beq         |$LN27@file_threa|
  00058	e59f71c4	 ldr         r7, [pc, #0x1C4]
  0005c	e59f61bc	 ldr         r6, [pc, #0x1BC]
  00060	e28db004	 add         r11, sp, #4
  00064		 |$LL11@file_threa|

; 378  : 	{
; 379  : 		pFile=fopen(FILE_PATH, "w");

  00064	e59f11b0	 ldr         r1, [pc, #0x1B0]
  00068	e59f01a4	 ldr         r0, [pc, #0x1A4]
  0006c	eb000000	 bl          fopen
  00070	e1b04000	 movs        r4, r0

; 380  : 		
; 381  : 		if (pFile == NULL)

  00074	0a000052	 beq         |$LN23@file_threa|

; 385  : 			break;
; 386  : 		}
; 387  : 
; 388  : 		if (fwrite(buffer,1,size,pFile) != size)

  00078	e1a03004	 mov         r3, r4
  0007c	e1a02005	 mov         r2, r5
  00080	e3a01001	 mov         r1, #1
  00084	e28d0f41	 add         r0, sp, #0x41, 30
  00088	eb000000	 bl          fwrite
  0008c	e1500005	 cmp         r0, r5
  00090	1a000041	 bne         |$LN24@file_threa|

; 393  : 		}
; 394  : 
; 395  : 		fclose(pFile);

  00094	e1a00004	 mov         r0, r4
  00098	eb000000	 bl          fclose

; 396  : 
; 397  : 		pFile=fopen(FILE_PATH, "r");

  0009c	e59f1174	 ldr         r1, [pc, #0x174]
  000a0	e59f016c	 ldr         r0, [pc, #0x16C]
  000a4	eb000000	 bl          fopen
  000a8	e1b0a000	 movs        r10, r0

; 398  : 		
; 399  : 		if (pFile == NULL)

  000ac	0a000030	 beq         |$LN25@file_threa|

; 404  : 		}
; 405  : 
; 406  : 		if (fread(buffer_read,1,size,pFile) != size)

  000b0	e1a0300a	 mov         r3, r10
  000b4	e1a02005	 mov         r2, r5
  000b8	e3a01001	 mov         r1, #1
  000bc	e28d0004	 add         r0, sp, #4
  000c0	eb000000	 bl          fread
  000c4	e1500005	 cmp         r0, r5
  000c8	1a00001f	 bne         |$LN26@file_threa|

; 410  : 			break;
; 411  : 		}
; 412  : 
; 413  : 		for (i = 0; i<size; i++)

  000cc	e3a08000	 mov         r8, #0
  000d0	e3550000	 cmp         r5, #0
  000d4	da000013	 ble         |$LN3@file_threa|
  000d8		 |$LL5@file_threa|

; 414  : 		{
; 415  : 			if (buffer_read[i] != i)

  000d8	e7d8300b	 ldrb        r3, [r8, +r11]
  000dc	e1530008	 cmp         r3, r8
  000e0	1a000003	 bne         |$LN22@file_threa|
  000e4	e2888001	 add         r8, r8, #1
  000e8	e1580005	 cmp         r8, r5
  000ec	bafffff9	 blt         |$LL5@file_threa|

; 424  : 
; 425  : 		if (g_bTestStatus == TEST_ERROR)

  000f0	ea00000c	 b           |$LN3@file_threa|
  000f4		 |$LN22@file_threa|

; 416  : 			{
; 417  : 				g_bTestStatus=TEST_ERROR;
; 418  : 				g_pKato->Log(LOG_COMMENT,TEXT("Byte read %u is different from byte expected %u\r\n"),buffer_read[i],i);

  000f4	e59f2108	 ldr         r2, [pc, #0x108]
  000f8	e28d3004	 add         r3, sp, #4
  000fc	e7d83003	 ldrb        r3, [r8, +r3]
  00100	e5924000	 ldr         r4, [r2]
  00104	e59f2104	 ldr         r2, [pc, #0x104]
  00108	e5970000	 ldr         r0, [r7]
  0010c	e3a0b00d	 mov         r11, #0xD
  00110	e3a0100e	 mov         r1, #0xE
  00114	e586b000	 str         r11, [r6]
  00118	e58d8000	 str         r8, [sp]
  0011c	e1a0e00f	 mov         lr, pc
  00120	e12fff14	 bx          r4
  00124	e28db004	 add         r11, sp, #4
  00128		 |$LN3@file_threa|

; 419  : 				break;
; 420  : 			}
; 421  : 		}
; 422  : 
; 423  : 		fclose(pFile);

  00128	e1a0000a	 mov         r0, r10
  0012c	eb000000	 bl          fclose

; 424  : 
; 425  : 		if (g_bTestStatus == TEST_ERROR)

  00130	e5963000	 ldr         r3, [r6]
  00134	e353000d	 cmp         r3, #0xD
  00138	0a00002a	 beq         |$LN27@file_threa|
  0013c	e599300c	 ldr         r3, [r9, #0xC]
  00140	e3530000	 cmp         r3, #0
  00144	1affffc6	 bne         |$LL11@file_threa|
  00148	ea000026	 b           |$LN27@file_threa|
  0014c		 |$LN26@file_threa|

; 407  : 		{
; 408  : 			g_bTestStatus=TEST_ERROR;
; 409  : 			g_pKato->Log(LOG_COMMENT,(TEXT("Cannot read all expected bytes from file\r\n")));

  0014c	e59f30b0	 ldr         r3, [pc, #0xB0]
  00150	e59f20b4	 ldr         r2, [pc, #0xB4]
  00154	e5970000	 ldr         r0, [r7]
  00158	e5933000	 ldr         r3, [r3]
  0015c	e3a0400d	 mov         r4, #0xD
  00160	e3a0100e	 mov         r1, #0xE
  00164	e5864000	 str         r4, [r6]
  00168	e1a0e00f	 mov         lr, pc
  0016c	e12fff13	 bx          r3
  00170	ea00001c	 b           |$LN27@file_threa|
  00174		 |$LN25@file_threa|

; 400  : 		{
; 401  : 			g_bTestStatus=TEST_ERROR;
; 402  : 			g_pKato->Log(LOG_COMMENT,(TEXT("Cannot open file\r\n")));

  00174	e59f3088	 ldr         r3, [pc, #0x88]
  00178	e59f2080	 ldr         r2, [pc, #0x80]
  0017c	e5970000	 ldr         r0, [r7]
  00180	e5933000	 ldr         r3, [r3]
  00184	e3a0400d	 mov         r4, #0xD
  00188	e3a0100e	 mov         r1, #0xE
  0018c	e5864000	 str         r4, [r6]
  00190	e1a0e00f	 mov         lr, pc
  00194	e12fff13	 bx          r3

; 403  : 			break;

  00198	ea000012	 b           |$LN27@file_threa|
  0019c		 |$LN24@file_threa|

; 389  : 		{
; 390  : 			g_bTestStatus=TEST_ERROR;
; 391  : 			g_pKato->Log(LOG_COMMENT,(TEXT("Cannot write all expected bytes to file\r\n")));

  0019c	e59f3060	 ldr         r3, [pc, #0x60]
  001a0	e59f2060	 ldr         r2, [pc, #0x60]
  001a4	e5970000	 ldr         r0, [r7]
  001a8	e5933000	 ldr         r3, [r3]
  001ac	e3a0400d	 mov         r4, #0xD
  001b0	e3a0100e	 mov         r1, #0xE
  001b4	e5864000	 str         r4, [r6]
  001b8	e1a0e00f	 mov         lr, pc
  001bc	e12fff13	 bx          r3

; 392  : 			break;

  001c0	ea000008	 b           |$LN27@file_threa|
  001c4		 |$LN23@file_threa|

; 382  : 		{
; 383  : 			g_bTestStatus=TEST_ERROR;
; 384  : 			g_pKato->Log(LOG_COMMENT,(TEXT("Cannot open file\r\n")));

  001c4	e59f3038	 ldr         r3, [pc, #0x38]
  001c8	e59f2030	 ldr         r2, [pc, #0x30]
  001cc	e5970000	 ldr         r0, [r7]
  001d0	e5933000	 ldr         r3, [r3]
  001d4	e3a0400d	 mov         r4, #0xD
  001d8	e3a0100e	 mov         r1, #0xE
  001dc	e5864000	 str         r4, [r6]
  001e0	e1a0e00f	 mov         lr, pc
  001e4	e12fff13	 bx          r3

; 407  : 		{
; 408  : 			g_bTestStatus=TEST_ERROR;
; 409  : 			g_pKato->Log(LOG_COMMENT,(TEXT("Cannot read all expected bytes from file\r\n")));

  001e8		 |$LN27@file_threa|

; 426  : 		{
; 427  : 			break;
; 428  : 		}
; 429  : 	}
; 430  : 
; 431  : 	return TEST_PASS;

  001e8	e59d0204	 ldr         r0, [sp, #0x204]
  001ec	eb000000	 bl          __security_check_cookie
  001f0	e3a0000f	 mov         r0, #0xF

; 432  : }

  001f4	e28ddf82	 add         sp, sp, #0x82, 30
  001f8	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  001fc	e12fff1e	 bx          lr
  00200		 |$LN33@file_threa|
  00200		 |$LN34@file_threa|
  00200	00000000	 DCD         |??_C@_1CG@PDCNFPKJ@?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAf?$AAi?$AAl?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  00204		 |$LN35@file_threa|
  00204	00000000	 DCD         |__imp_?Log@CKato@@QAAHKPBGZZ|
  00208		 |$LN36@file_threa|
  00208	00000000	 DCD         |??_C@_1FE@CFAPMLEH@?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAw?$AAr?$AAi?$AAt?$AAe?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAe?$AAx?$AAp?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAb?$AAy?$AAt?$AAe?$AAs?$AA?5@|
  0020c		 |$LN37@file_threa|
  0020c	00000000	 DCD         |??_C@_1FG@INLINDEP@?$AAC?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AAa?$AAl?$AAl?$AA?5?$AAe?$AAx?$AAp?$AAe?$AAc?$AAt?$AAe?$AAd?$AA?5?$AAb?$AAy?$AAt?$AAe?$AAs?$AA?5?$AAf@|
  00210		 |$LN38@file_threa|
  00210	00000000	 DCD         |??_C@_1GE@OKBCCAC@?$AAB?$AAy?$AAt?$AAe?$AA?5?$AAr?$AAe?$AAa?$AAd?$AA?5?$AA?$CF?$AAu?$AA?5?$AAi?$AAs?$AA?5?$AAd?$AAi?$AAf?$AAf?$AAe?$AAr?$AAe?$AAn?$AAt?$AA?5?$AAf?$AAr?$AAo?$AAm?$AA?5?$AAb@|
  00214		 |$LN39@file_threa|
  00214	00000000	 DCD         |??_C@_08DCCHEKFN@test?4bin?$AA@|
  00218		 |$LN40@file_threa|
  00218	00000000	 DCD         |??_C@_01KDCPPGHE@r?$AA@|
  0021c		 |$LN41@file_threa|
  0021c	00000000	 DCD         |??_C@_01NOFIACDB@w?$AA@|
  00220		 |$LN42@file_threa|
  00220	00000000	 DCD         |?g_bTestStatus@@3KA|
  00224		 |$LN43@file_threa|
  00224	00000000	 DCD         |?g_pKato@@3PAVCKato@@A|
  00228		 |$LN44@file_threa|
  00228	00000000	 DCD         |__security_cookie|
  0022c		 |$M33363|

			 ENDP  ; |?file_thread@@YAKPAX@Z|, file_thread

	EXPORT	|?TestSuspendResume@@YAHIPAKPAU_FUNCTION_TABLE_ENTRY@@@Z| ; TestSuspendResume
	EXPORT	|??_C@_1BG@GJPBPDCP@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAE?$AAn?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@IEBHJAND@?$AA?2?$AA?2?$AA?4?$AA?2?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?2?$AAN?$AAa?$AAm?$AAe?$AAd?$AAE?$AAv?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAR?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CA@ICPALGO@?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAi?$AAn?$AAg?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@CCJADCIO@?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AAd?$AA?5?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DM@JCEKNHLI@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAm?$AAe?$AAd?$AA?5?$AA?$CF?$AAu?$AA?5?$AAt?$AAi?$AAm?$AAe?$AA?$CI?$AAs?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@LNFJDFFK@?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|CloseHandle|
	IMPORT	|WaitForSingleObject|
	IMPORT	|Sleep|
	IMPORT	|SetSystemPowerState|
	IMPORT	|NKDbgPrintfW|
	IMPORT	|CeRunAppAtTime|
	IMPORT	|FileTimeToSystemTime|
	IMPORT	|SystemTimeToFileTime|
	IMPORT	|GetLocalTime|
	IMPORT	|CreateThread|
	IMPORT	|CreateEventW|
	IMPORT	|?g_NbBytes@@3KA|			; g_NbBytes
	IMPORT	|?g_TimeToSleep@@3KA|			; g_TimeToSleep
	IMPORT	|?g_NbLoop@@3KA|			; g_NbLoop

  00000			 AREA	 |.pdata|, PDATA
|$T33401| DCD	|$LN18@TestSuspen|
	DCD	0x40007a02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@GJPBPDCP@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAE?$AAn?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "T"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "E", 0x0, "n"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@IEBHJAND@?$AA?2?$AA?2?$AA?4?$AA?2?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?2?$AAN?$AAa?$AAm?$AAe?$AAd?$AAE?$AAv?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAR?$AAe@| DCB "\\"
	DCB	0x0, "\\", 0x0, ".", 0x0, "\\", 0x0, "N", 0x0, "o", 0x0, "t"
	DCB	0x0, "i", 0x0, "f", 0x0, "i", 0x0, "c", 0x0, "a", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, "s", 0x0, "\\", 0x0, "N"
	DCB	0x0, "a", 0x0, "m", 0x0, "e", 0x0, "d", 0x0, "E", 0x0, "v"
	DCB	0x0, "e", 0x0, "n", 0x0, "t", 0x0, "s", 0x0, "\\", 0x0, "R"
	DCB	0x0, "e", 0x0, "s", 0x0, "u", 0x0, "m", 0x0, "e", 0x0, "E"
	DCB	0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CA@ICPALGO@?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAi?$AAn?$AAg?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "u", 0x0, "s", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, ".", 0x0, ".", 0x0, "."
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@| DCB "s", 0x0
	DCB	"u", 0x0, "s", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d", 0x0
	DCB	0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@CCJADCIO@?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AAd?$AA?5?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "s", 0x0, "u", 0x0, "m", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DM@JCEKNHLI@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAm?$AAe?$AAd?$AA?5?$AA?$CF?$AAu?$AA?5?$AAt?$AAi?$AAm?$AAe?$AA?$CI?$AAs?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@| DCB "P"
	DCB	0x0, "l", 0x0, "a", 0x0, "t", 0x0, "f", 0x0, "o", 0x0, "r"
	DCB	0x0, "m", 0x0, " ", 0x0, "r", 0x0, "e", 0x0, "s", 0x0, "u"
	DCB	0x0, "m", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "%", 0x0, "u"
	DCB	0x0, " ", 0x0, "t", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "("
	DCB	0x0, "s", 0x0, ")", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@LNFJDFFK@?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "s", 0x0, "u", 0x0, "m", 0x0, "e", 0x0, "E"
	DCB	0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?TestSuspendResume@@YAHIPAKPAU_FUNCTION_TABLE_ENTRY@@@Z| PROC ; TestSuspendResume

; 448  : {

  00000		 |$LN18@TestSuspen|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd034	 sub         sp, sp, #0x34
  00008		 |$M33398|

; 449  : 	DWORD dwRet;
; 450  : 	struct test_args_t test_args;
; 451  : 	HANDLE thread;
; 452  : 	HANDLE hEvent;
; 453  : 	int i;
; 454  : 	SYSTEMTIME curSysTime;
; 455  : 	FILETIME fileTime;
; 456  : 
; 457  :     if(uMsg != TPM_EXECUTE)

  00008	e3500065	 cmp         r0, #0x65

; 458  :     {
; 459  :         return TPR_NOT_HANDLED;

  0000c	13a00000	 movne       r0, #0
  00010	1a000062	 bne         |$LN6@TestSuspen|

; 460  :     }
; 461  : 
; 462  : 	// Fill arguments structure
; 463  : 	test_args.n_loops = g_NbLoop;

  00014	e59f31c8	 ldr         r3, [pc, #0x1C8]

; 464  : 	test_args.sleep_time = g_TimeToSleep;

  00018	e59f21c0	 ldr         r2, [pc, #0x1C0]

; 465  : 	test_args.n_bytes = g_NbBytes;

  0001c	e59f11b8	 ldr         r1, [pc, #0x1B8]
  00020	e5930000	 ldr         r0, [r3]
  00024	e5922000	 ldr         r2, [r2]
  00028	e5911000	 ldr         r1, [r1]

; 466  : 	test_args.running = TRUE;
; 467  : 
; 468  : 	// Create event
; 469  : 	hEvent = CreateEvent(NULL, FALSE, FALSE, RESUME_EVENT);

  0002c	e59f31a4	 ldr         r3, [pc, #0x1A4]
  00030	e58d0014	 str         r0, [sp, #0x14]
  00034	e58d2018	 str         r2, [sp, #0x18]
  00038	e58d101c	 str         r1, [sp, #0x1C]
  0003c	e3a0e001	 mov         lr, #1
  00040	e3a02000	 mov         r2, #0
  00044	e3a01000	 mov         r1, #0
  00048	e3a00000	 mov         r0, #0
  0004c	e58de020	 str         lr, [sp, #0x20]
  00050	eb000000	 bl          CreateEventW

; 470  : 
; 471  : 	g_bTestStatus = TEST_RUNNING;

  00054	e59f6178	 ldr         r6, [pc, #0x178]

; 472  : 
; 473  : 	// Create thread
; 474  : 	thread = CreateThread(NULL, 0, (LPTHREAD_START_ROUTINE)file_thread, (void *)&test_args, 0, NULL);

  00058	e59f2170	 ldr         r2, [pc, #0x170]
  0005c	e3a0300e	 mov         r3, #0xE
  00060	e5863000	 str         r3, [r6]
  00064	e1a08000	 mov         r8, r0
  00068	e3a0e000	 mov         lr, #0
  0006c	e28d3014	 add         r3, sp, #0x14
  00070	e3a01000	 mov         r1, #0
  00074	e3a00000	 mov         r0, #0
  00078	e58d8008	 str         r8, [sp, #8]
  0007c	e58de004	 str         lr, [sp, #4]
  00080	e58de000	 str         lr, [sp]
  00084	eb000000	 bl          CreateThread

; 475  : 
; 476  : 	for (i = 0; i < test_args.n_loops; i++)

  00088	e59d3014	 ldr         r3, [sp, #0x14]
  0008c	e59f7138	 ldr         r7, [pc, #0x138]
  00090	e1a05000	 mov         r5, r0
  00094	e3530000	 cmp         r3, #0
  00098	e3a0b000	 mov         r11, #0
  0009c	da00002e	 ble         |$LN13@TestSuspen|
  000a0	e59f9120	 ldr         r9, [pc, #0x120]
  000a4	e59fa104	 ldr         r10, [pc, #0x104]
  000a8	e3a08c27	 mov         r8, #0x27, 24
  000ac		 |$LL4@TestSuspen|

; 477  : 	{
; 478  : 		if (g_bTestStatus != TEST_RUNNING)

  000ac	e5963000	 ldr         r3, [r6]
  000b0	e353000e	 cmp         r3, #0xE
  000b4	1a000027	 bne         |$LN15@TestSuspen|

; 479  : 		{
; 480  : 			dwRet = TPR_FAIL;
; 481  : 			break;
; 482  : 		}
; 483  : 		// Set time of user notification
; 484  : 		GetLocalTime(&curSysTime);

  000b8	e28d0024	 add         r0, sp, #0x24
  000bc	eb000000	 bl          GetLocalTime

; 485  : 		SystemTimeToFileTime(&curSysTime, &fileTime);

  000c0	e28d100c	 add         r1, sp, #0xC
  000c4	e28d0024	 add         r0, sp, #0x24
  000c8	eb000000	 bl          SystemTimeToFileTime

; 486  : 		*((UINT64 *)&fileTime) += test_args.sleep_time * 10000000;

  000cc	e59d2018	 ldr         r2, [sp, #0x18]
  000d0	e59de00c	 ldr         lr, [sp, #0xC]
  000d4	e59d0010	 ldr         r0, [sp, #0x10]
  000d8	e0030992	 mul         r3, r2, r9

; 487  : 		FileTimeToSystemTime(&fileTime, &curSysTime);

  000dc	e28d1024	 add         r1, sp, #0x24
  000e0	e09e2003	 adds        r2, lr, r3
  000e4	e0a03fc3	 adc         r3, r0, r3, asr #31
  000e8	e28d000c	 add         r0, sp, #0xC
  000ec	e58d3010	 str         r3, [sp, #0x10]
  000f0	e58d200c	 str         r2, [sp, #0xC]
  000f4	eb000000	 bl          FileTimeToSystemTime

; 488  : 
; 489  : 		// Launch notification
; 490  : 		CeRunAppAtTime(L"\\\\.\\Notifications\\NamedEvents\\"RESUME_EVENT, &curSysTime);

  000f8	e59f00c4	 ldr         r0, [pc, #0xC4]
  000fc	e28d1024	 add         r1, sp, #0x24
  00100	eb000000	 bl          CeRunAppAtTime

; 491  : 
; 492  : 		// Suspend the system
; 493  : 		RETAILMSG(1, (L"Suspending...\r\n"));

  00104	e59f00b4	 ldr         r0, [pc, #0xB4]
  00108	eb000000	 bl          NKDbgPrintfW

; 494  : 		SetSystemPowerState(SSTATE_NAME_SUSPEND,NULL,POWER_FORCE);

  0010c	e59f00a8	 ldr         r0, [pc, #0xA8]
  00110	e3a02a01	 mov         r2, #1, 20
  00114	e3a01000	 mov         r1, #0
  00118	eb000000	 bl          SetSystemPowerState

; 495  : 		RETAILMSG(1, (L"Resumed !\r\n"));

  0011c	e59f0094	 ldr         r0, [pc, #0x94]
  00120	eb000000	 bl          NKDbgPrintfW

; 496  : 		g_pKato->Log(LOG_COMMENT,TEXT("Platform resumed %u time(s)\r\n"),i+1);

  00124	e28bb001	 add         r11, r11, #1
  00128	e5970000	 ldr         r0, [r7]
  0012c	e59a4000	 ldr         r4, [r10]
  00130	e59f207c	 ldr         r2, [pc, #0x7C]
  00134	e1a0300b	 mov         r3, r11
  00138	e3a0100e	 mov         r1, #0xE
  0013c	e1a0e00f	 mov         lr, pc
  00140	e12fff14	 bx          r4

; 497  : 		Sleep(10000);

  00144	e3880010	 orr         r0, r8, #0x10
  00148	eb000000	 bl          Sleep
  0014c	e59d3014	 ldr         r3, [sp, #0x14]
  00150	e15b0003	 cmp         r11, r3
  00154	baffffd4	 blt         |$LL4@TestSuspen|
  00158		 |$LN15@TestSuspen|

; 472  : 
; 473  : 	// Create thread
; 474  : 	thread = CreateThread(NULL, 0, (LPTHREAD_START_ROUTINE)file_thread, (void *)&test_args, 0, NULL);

  00158	e59d8008	 ldr         r8, [sp, #8]
  0015c		 |$LN13@TestSuspen|

; 498  : 	}
; 499  : 
; 500  : 	// Stop thread
; 501  : 	test_args.running = FALSE;

  0015c	e3a03000	 mov         r3, #0

; 502  : 	WaitForSingleObject(thread,INFINITE);

  00160	e3e01000	 mvn         r1, #0
  00164	e1a00005	 mov         r0, r5
  00168	e58d3020	 str         r3, [sp, #0x20]
  0016c	eb000000	 bl          WaitForSingleObject

; 503  : 
; 504  : 	// Close handles
; 505  : 	CloseHandle(thread);

  00170	e1a00005	 mov         r0, r5
  00174	eb000000	 bl          CloseHandle

; 506  : 	CloseHandle(hEvent);

  00178	e1a00008	 mov         r0, r8
  0017c	eb000000	 bl          CloseHandle

; 507  : 
; 508  : 	g_pKato->Log(LOG_COMMENT,(TEXT("Test End\r\n")));

  00180	e59f3028	 ldr         r3, [pc, #0x28]
  00184	e59f2020	 ldr         r2, [pc, #0x20]
  00188	e5970000	 ldr         r0, [r7]
  0018c	e5933000	 ldr         r3, [r3]
  00190	e3a0100e	 mov         r1, #0xE
  00194	e1a0e00f	 mov         lr, pc
  00198	e12fff13	 bx          r3

; 509  : 	dwRet =  TPR_PASS;
; 510  : 
; 511  : 	return dwRet;

  0019c	e3a00003	 mov         r0, #3
  001a0		 |$LN6@TestSuspen|

; 512  : }

  001a0	e28dd034	 add         sp, sp, #0x34
  001a4	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  001a8	e12fff1e	 bx          lr
  001ac		 |$LN19@TestSuspen|
  001ac		 |$LN20@TestSuspen|
  001ac	00000000	 DCD         |??_C@_1BG@GJPBPDCP@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAE?$AAn?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  001b0		 |$LN21@TestSuspen|
  001b0	00000000	 DCD         |__imp_?Log@CKato@@QAAHKPBGZZ|
  001b4		 |$LN22@TestSuspen|
  001b4	00000000	 DCD         |??_C@_1DM@JCEKNHLI@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?5?$AAr?$AAe?$AAs?$AAu?$AAm?$AAe?$AAd?$AA?5?$AA?$CF?$AAu?$AA?5?$AAt?$AAi?$AAm?$AAe?$AA?$CI?$AAs?$AA?$CJ?$AA?$AN?$AA?6?$AA?$AA@|
  001b8		 |$LN23@TestSuspen|
  001b8	00000000	 DCD         |??_C@_1BI@CCJADCIO@?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AAd?$AA?5?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@|
  001bc		 |$LN24@TestSuspen|
  001bc	00000000	 DCD         |??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@|
  001c0		 |$LN25@TestSuspen|
  001c0	00000000	 DCD         |??_C@_1CA@ICPALGO@?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AAi?$AAn?$AAg?$AA?4?$AA?4?$AA?4?$AA?$AN?$AA?6?$AA?$AA@|
  001c4		 |$LN26@TestSuspen|
  001c4	00000000	 DCD         |??_C@_1FE@IEBHJAND@?$AA?2?$AA?2?$AA?4?$AA?2?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?2?$AAN?$AAa?$AAm?$AAe?$AAd?$AAE?$AAv?$AAe?$AAn?$AAt?$AAs?$AA?2?$AAR?$AAe@|
  001c8		 |$LN27@TestSuspen|
  001c8	00989680	 DCD         0x989680
  001cc		 |$LN28@TestSuspen|
  001cc	00000000	 DCD         |?g_pKato@@3PAVCKato@@A|
  001d0		 |$LN29@TestSuspen|
  001d0	00000000	 DCD         |?file_thread@@YAKPAX@Z|
  001d4		 |$LN30@TestSuspen|
  001d4	00000000	 DCD         |?g_bTestStatus@@3KA|
  001d8		 |$LN31@TestSuspen|
  001d8	00000000	 DCD         |??_C@_1BI@LNFJDFFK@?$AAR?$AAe?$AAs?$AAu?$AAm?$AAe?$AAE?$AAv?$AAe?$AAn?$AAt?$AA?$AA@|
  001dc		 |$LN32@TestSuspen|
  001dc	00000000	 DCD         |?g_NbBytes@@3KA|
  001e0		 |$LN33@TestSuspen|
  001e0	00000000	 DCD         |?g_TimeToSleep@@3KA|
  001e4		 |$LN34@TestSuspen|
  001e4	00000000	 DCD         |?g_NbLoop@@3KA|
  001e8		 |$M33399|

			 ENDP  ; |?TestSuspendResume@@YAHIPAKPAU_FUNCTION_TABLE_ENTRY@@@Z|, TestSuspendResume

	EXPORT	|??_C@_1BG@COFBNNCL@?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AAi?$AAd?$AAl?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BC@IJEKHFDC@?$AAu?$AAs?$AAe?$AAr?$AAi?$AAd?$AAl?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_15GMGGGDOD@?$AAo?$AAn?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@IAIMDKPN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@JICMBMDM@?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu?$AAe?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|??3@YAXPAX@Z|				; operator delete
	IMPORT	|ReadMsgQueue|
	IMPORT	|??2@YAPAXI@Z|				; operator new
	IMPORT	|RequestPowerNotifications|
	IMPORT	|CreateMsgQueue|
	IMPORT	|wcsncmp|

  00000			 AREA	 |.pdata|, PDATA
|$T33434| DCD	|$LN22@PMNotifica|
	DCD	0x40008c02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@COFBNNCL@?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AAi?$AAd?$AAl?$AAe?$AA?$AA@| DCB "s"
	DCB	0x0, "y", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m", 0x0, "i"
	DCB	0x0, "d", 0x0, "l", 0x0, "e", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BC@IJEKHFDC@?$AAu?$AAs?$AAe?$AAr?$AAi?$AAd?$AAl?$AAe?$AA?$AA@| DCB "u"
	DCB	0x0, "s", 0x0, "e", 0x0, "r", 0x0, "i", 0x0, "d", 0x0, "l"
	DCB	0x0, "e", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_15GMGGGDOD@?$AAo?$AAn?$AA?$AA@| DCB "o", 0x0, "n", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@IAIMDKPN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy@| DCB "E"
	DCB	0x0, "R", 0x0, "R", 0x0, "O", 0x0, "R", 0x0, ":", 0x0, " "
	DCB	0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "a", 0x0, "l"
	DCB	0x0, "l", 0x0, "o", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, " ", 0x0, "m", 0x0, "e", 0x0, "m", 0x0, "o", 0x0, "r"
	DCB	0x0, "y", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@JICMBMDM@?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu?$AAe?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AA?$AN?$AA?6?$AA?$AA@| DCB "C"
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, "M"
	DCB	0x0, "s", 0x0, "g", 0x0, "Q", 0x0, "u", 0x0, "e", 0x0, "u"
	DCB	0x0, "e", 0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l"
	DCB	0x0, "e", 0x0, "d", 0x0, " ", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PMNotificationThread2@@YAKXZ| PROC	; PMNotificationThread2

; 541  : {

  00000		 |$LN22@PMNotifica|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd024	 sub         sp, sp, #0x24
  00008		 |$M33431|

; 542  : 	DWORD cbPowerMsgSize = sizeof(POWER_BROADCAST) + (MAX_PATH * sizeof TCHAR);
; 543  : 	DWORD dwWaitStatus = WAIT_OBJECT_0;
; 544  : 
; 545  : 	// Initialize a MSGQUEUEOPTIONS structure
; 546  : 	MSGQUEUEOPTIONS mqo;
; 547  : 	mqo.dwSize = sizeof(MSGQUEUEOPTIONS);
; 548  : 	mqo.dwFlags = MSGQUEUE_NOPRECOMMIT;
; 549  : 	mqo.dwMaxMessages = 4;

  00008	e3a01004	 mov         r1, #4

; 550  : 	mqo.cbMaxMessage = cbPowerMsgSize;

  0000c	e3a00f86	 mov         r0, #0x86, 30

; 551  : 	mqo.bReadAccess = TRUE;

  00010	e58d1018	 str         r1, [sp, #0x18]
  00014	e58d001c	 str         r0, [sp, #0x1C]
  00018	e3a03014	 mov         r3, #0x14
  0001c	e3a02001	 mov         r2, #1
  00020	e3a0e001	 mov         lr, #1

; 552  : 
; 553  : 	// Create a message queue to receive power notifications
; 554  : 	HANDLE hPowerMsgQ = CreateMsgQueue(NULL, &mqo);

  00024	e28d1010	 add         r1, sp, #0x10
  00028	e3a00000	 mov         r0, #0
  0002c	e58d3010	 str         r3, [sp, #0x10]
  00030	e58d2014	 str         r2, [sp, #0x14]
  00034	e58de020	 str         lr, [sp, #0x20]
  00038	eb000000	 bl          CreateMsgQueue
  0003c	e59f41e8	 ldr         r4, [pc, #0x1E8]
  00040	e59f81c4	 ldr         r8, [pc, #0x1C4]
  00044	e1b06000	 movs        r6, r0

; 555  : 	if (NULL == hPowerMsgQ)

  00048	1a000008	 bne         |$LN14@PMNotifica|

; 556  : 	{
; 557  : 		g_pKato->Log(LOG_ABORT,(L"CreateMsgQueue failed \r\n"));

  0004c	e59f31b4	 ldr         r3, [pc, #0x1B4]
  00050	e59f21d0	 ldr         r2, [pc, #0x1D0]
  00054	e5980000	 ldr         r0, [r8]
  00058	e5933000	 ldr         r3, [r3]
  0005c	e3a01004	 mov         r1, #4
  00060	e1a0e00f	 mov         lr, pc
  00064	e12fff13	 bx          r3

; 558  : 		//RETAILMSG(1, (L"CreateMsgQueue failed: %x\n", GetLastError()));
; 559  : 		g_bTestStatus = TEST_ERROR;

  00068	e3a0300d	 mov         r3, #0xD
  0006c	e5843000	 str         r3, [r4]
  00070		 |$LN14@PMNotifica|

; 560  : 	}
; 561  : 	// Request power notifications.
; 562  : 	HANDLE hPowerNotifications = RequestPowerNotifications(hPowerMsgQ, PBT_TRANSITION);

  00070	e3a01001	 mov         r1, #1
  00074	e1a00006	 mov         r0, r6
  00078	eb000000	 bl          RequestPowerNotifications

; 563  : 
; 564  : 	while(WaitForSingleObject(hPowerMsgQ, INFINITE) == WAIT_OBJECT_0)

  0007c	e3e01000	 mvn         r1, #0
  00080	e1a00006	 mov         r0, r6
  00084	eb000000	 bl          WaitForSingleObject
  00088	e3500000	 cmp         r0, #0
  0008c	1a000059	 bne         |$LN12@PMNotifica|
  00090	e59f9170	 ldr         r9, [pc, #0x170]
  00094	e28da008	 add         r10, sp, #8
  00098	e28db008	 add         r11, sp, #8
  0009c	e3a05000	 mov         r5, #0
  000a0		 |$LL13@PMNotifica|

; 565  : 	{
; 566  : 		DWORD cbRead;
; 567  : 		DWORD dwFlags;
; 568  : 
; 569  : 		//g_pKato->Log(LOG_DETAIL,(TEXT("Recieved a new Power Notification!\r\n")));
; 570  : 
; 571  : 		POWER_BROADCAST *ppb = (POWER_BROADCAST *)new BYTE[cbPowerMsgSize];

  000a0	e3a00f86	 mov         r0, #0x86, 30
  000a4	eb000000	 bl          |??2@YAPAXI@Z|
  000a8	e1b07000	 movs        r7, r0

; 572  : 		if (!ppb)

  000ac	1a000007	 bne         |$LN18@PMNotifica|

; 573  : 		{
; 574  : 			g_pKato->Log(LOG_ABORT,(TEXT("ERROR: failed to allocate memory\r\n")));

  000b0	e5980000	 ldr         r0, [r8]
  000b4	e5993000	 ldr         r3, [r9]
  000b8	e59f2164	 ldr         r2, [pc, #0x164]
  000bc	e3a01004	 mov         r1, #4
  000c0	e1a0e00f	 mov         lr, pc
  000c4	e12fff13	 bx          r3

; 575  : 			g_bTestStatus = TEST_ERROR;

  000c8	e3a0300d	 mov         r3, #0xD
  000cc	e5843000	 str         r3, [r4]
  000d0		 |$LN18@PMNotifica|

; 576  : 		}
; 577  : 
; 578  : 		// Loop through in case there is more than 1 msg
; 579  : 		while(ReadMsgQueue(hPowerMsgQ, ppb, cbPowerMsgSize, &cbRead, 0, &dwFlags))

  000d0	e28d300c	 add         r3, sp, #0xC
  000d4	e3a02f86	 mov         r2, #0x86, 30
  000d8	e1a01007	 mov         r1, r7
  000dc	e1a00006	 mov         r0, r6
  000e0	e58da004	 str         r10, [sp, #4]
  000e4	e58d5000	 str         r5, [sp]
  000e8	eb000000	 bl          ReadMsgQueue
  000ec	e3500000	 cmp         r0, #0
  000f0	0a000039	 beq         |$LN9@PMNotifica|
  000f4	e59f8124	 ldr         r8, [pc, #0x124]
  000f8	e3a09000	 mov         r9, #0
  000fc	e3a0a001	 mov         r10, #1
  00100		 |$LL10@PMNotifica|

; 580  : 		{
; 581  : 			if (ppb->Message == PBT_TRANSITION)

  00100	e5973000	 ldr         r3, [r7]
  00104	e3530001	 cmp         r3, #1
  00108	1a000026	 bne         |$LN1@PMNotifica|

; 582  : 			{
; 583  : 				//RETAILMSG(1, (L"SystemPowerState = %s\r\n", ppb->SystemPowerState));
; 584  : 
; 585  : 				if(wcsncmp(ppb->SystemPowerState,SSTATE_NAME_ON,sizeof(ppb->SystemPowerState))==0 && g_bTestBegin)

  0010c	e59f1108	 ldr         r1, [pc, #0x108]
  00110	e3a02002	 mov         r2, #2
  00114	e287000c	 add         r0, r7, #0xC
  00118	eb000000	 bl          wcsncmp
  0011c	e5985000	 ldr         r5, [r8]
  00120	e3500000	 cmp         r0, #0
  00124	1a000002	 bne         |$LN7@PMNotifica|
  00128	e3550000	 cmp         r5, #0

; 586  : 				{
; 587  : 					g_dwOnStateSeen = STATE_SEEN;

  0012c	1584a008	 strne       r10, [r4, #8]
  00130	1a00001c	 bne         |$LN1@PMNotifica|
  00134		 |$LN7@PMNotifica|

; 588  : 				}
; 589  : 				else if(wcsncmp(ppb->SystemPowerState,SSTATE_NAME_USERIDLE,sizeof(ppb->SystemPowerState))==0 && g_bTestBegin)

  00134	e59f10dc	 ldr         r1, [pc, #0xDC]
  00138	e3a02002	 mov         r2, #2
  0013c	e287000c	 add         r0, r7, #0xC
  00140	eb000000	 bl          wcsncmp
  00144	e3500000	 cmp         r0, #0
  00148	1a000003	 bne         |$LN5@PMNotifica|
  0014c	e3550000	 cmp         r5, #0

; 590  : 				{
; 591  : 					g_dwUserIdleStateSeen = STATE_SEEN;

  00150	13a03001	 movne       r3, #1
  00154	1584300c	 strne       r3, [r4, #0xC]
  00158	1a000012	 bne         |$LN1@PMNotifica|
  0015c		 |$LN5@PMNotifica|

; 592  : 				}
; 593  : 				else if(wcsncmp(ppb->SystemPowerState,SSTATE_NAME_SYSTEMIDLE,sizeof(ppb->SystemPowerState))==0 && g_bTestBegin)

  0015c	e59f10b0	 ldr         r1, [pc, #0xB0]
  00160	e3a02002	 mov         r2, #2
  00164	e287000c	 add         r0, r7, #0xC
  00168	eb000000	 bl          wcsncmp
  0016c	e3500000	 cmp         r0, #0
  00170	1a000003	 bne         |$LN3@PMNotifica|
  00174	e3550000	 cmp         r5, #0

; 594  : 				{
; 595  : 					g_dwSystemIdleStateSeen = STATE_SEEN;

  00178	13a03001	 movne       r3, #1
  0017c	15843010	 strne       r3, [r4, #0x10]
  00180	1a000008	 bne         |$LN1@PMNotifica|
  00184		 |$LN3@PMNotifica|

; 596  : 				}
; 597  : 				else if(wcsncmp(ppb->SystemPowerState,SSTATE_NAME_SUSPEND,sizeof(ppb->SystemPowerState))==0 && g_bTestBegin)

  00184	e59f1084	 ldr         r1, [pc, #0x84]
  00188	e3a02002	 mov         r2, #2
  0018c	e287000c	 add         r0, r7, #0xC
  00190	eb000000	 bl          wcsncmp
  00194	e3500000	 cmp         r0, #0
  00198	1a000002	 bne         |$LN1@PMNotifica|
  0019c	e3550000	 cmp         r5, #0

; 598  : 				{
; 599  : 					g_dwSuspendStateSeen = STATE_SEEN;

  001a0	13a03001	 movne       r3, #1
  001a4	15843014	 strne       r3, [r4, #0x14]
  001a8		 |$LN1@PMNotifica|
  001a8	e28d300c	 add         r3, sp, #0xC
  001ac	e3a02f86	 mov         r2, #0x86, 30
  001b0	e1a01007	 mov         r1, r7
  001b4	e1a00006	 mov         r0, r6
  001b8	e58db004	 str         r11, [sp, #4]
  001bc	e58d9000	 str         r9, [sp]
  001c0	eb000000	 bl          ReadMsgQueue
  001c4	e3500000	 cmp         r0, #0
  001c8	1affffcc	 bne         |$LL10@PMNotifica|
  001cc	e59f8038	 ldr         r8, [pc, #0x38]
  001d0	e59f9030	 ldr         r9, [pc, #0x30]
  001d4	e28da008	 add         r10, sp, #8
  001d8	e3a05000	 mov         r5, #0
  001dc		 |$LN9@PMNotifica|

; 600  : 				}
; 601  : 
; 602  : 			}
; 603  : 		}
; 604  : 
; 605  : 		delete [] ppb;

  001dc	e1a00007	 mov         r0, r7
  001e0	eb000000	 bl          |??3@YAXPAX@Z|
  001e4	e3e01000	 mvn         r1, #0
  001e8	e1a00006	 mov         r0, r6
  001ec	eb000000	 bl          WaitForSingleObject
  001f0	e3500000	 cmp         r0, #0
  001f4	0affffa9	 beq         |$LL13@PMNotifica|
  001f8		 |$LN12@PMNotifica|

; 606  : 	}
; 607  : 
; 608  : 	return 0;

  001f8	e3a00000	 mov         r0, #0

; 609  : }

  001fc	e28dd024	 add         sp, sp, #0x24
  00200	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00204	e12fff1e	 bx          lr
  00208		 |$LN23@PMNotifica|
  00208		 |$LN24@PMNotifica|
  00208	00000000	 DCD         |__imp_?Log@CKato@@QAAHKPBGZZ|
  0020c		 |$LN25@PMNotifica|
  0020c	00000000	 DCD         |?g_pKato@@3PAVCKato@@A|
  00210		 |$LN26@PMNotifica|
  00210	00000000	 DCD         |??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@|
  00214		 |$LN27@PMNotifica|
  00214	00000000	 DCD         |??_C@_1BG@COFBNNCL@?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AAi?$AAd?$AAl?$AAe?$AA?$AA@|
  00218		 |$LN28@PMNotifica|
  00218	00000000	 DCD         |??_C@_1BC@IJEKHFDC@?$AAu?$AAs?$AAe?$AAr?$AAi?$AAd?$AAl?$AAe?$AA?$AA@|
  0021c		 |$LN29@PMNotifica|
  0021c	00000000	 DCD         |??_C@_15GMGGGDOD@?$AAo?$AAn?$AA?$AA@|
  00220		 |$LN30@PMNotifica|
  00220	00000000	 DCD         |?g_bTestBegin@@3HA|
  00224		 |$LN31@PMNotifica|
  00224	00000000	 DCD         |??_C@_1EG@IAIMDKPN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy@|
  00228		 |$LN32@PMNotifica|
  00228	00000000	 DCD         |??_C@_1DC@JICMBMDM@?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu?$AAe?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  0022c		 |$LN33@PMNotifica|
  0022c	00000000	 DCD         |?g_bTestStatus@@3KA|
  00230		 |$M33432|

			 ENDP  ; |?PMNotificationThread2@@YAKXZ|, PMNotificationThread2

	EXPORT	|??_C@_1GE@EFHOMKPO@?$AAT?$AAu?$AAx?$AA_?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAo?$AAp?$AAe?$AAn?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@PLCDGEBN@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?3?$AA?5?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAP?$AAM?$AA?5?$AAr?$AAe?$AAl?$AAo?$AAa?$AAd?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BG@BDFEBKKE@?$AAA?$AAC?$AAU?$AAs?$AAe?$AAr?$AAI?$AAd?$AAl?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@LDFDNBMD@?$AAA?$AAC?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAI?$AAd?$AAl?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BE@MEMPIFKD@?$AAA?$AAC?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@ONLBCKCN@?$AAB?$AAa?$AAt?$AAt?$AAU?$AAs?$AAe?$AAr?$AAI?$AAd?$AAl?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@HOGFBFFA@?$AAB?$AAa?$AAt?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAI?$AAd?$AAl?$AAe?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BI@IBLOPCAN@?$AAB?$AAa?$AAt?$AAt?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@FPBANDCM@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AAR?$AAe?$AAl?$AAo?$AAa?$AAd?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@BFBHIFBH@?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| [ DATA ] ; `string'
	IMPORT	|RegCloseKey|
	IMPORT	|OpenEventW|
	IMPORT	|RegSetValueExW|
	IMPORT	|RegOpenKeyExW|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T33462| DCD	|$LN15@RestoreSta|
	DCD	0x40006202

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@EFHOMKPO@?$AAT?$AAu?$AAx?$AA_?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAo?$AAp?$AAe?$AAn?$AAi@| DCB "T"
	DCB	0x0, "u", 0x0, "x", 0x0, "_", 0x0, "P", 0x0, "o", 0x0, "w"
	DCB	0x0, "e", 0x0, "r", 0x0, "M", 0x0, "a", 0x0, "n", 0x0, "a"
	DCB	0x0, "g", 0x0, "e", 0x0, "m", 0x0, "e", 0x0, "n", 0x0, "t"
	DCB	0x0, ":", 0x0, " ", 0x0, "E", 0x0, "r", 0x0, "r", 0x0, "o"
	DCB	0x0, "r", 0x0, " ", 0x0, "o", 0x0, "p", 0x0, "e", 0x0, "n"
	DCB	0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "r", 0x0, "e"
	DCB	0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "r", 0x0, "y"
	DCB	0x0, " ", 0x0, "k", 0x0, "e", 0x0, "y", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@PLCDGEBN@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?3?$AA?5?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAP?$AAM?$AA?5?$AAr?$AAe?$AAl?$AAo?$AAa?$AAd?$AA?5@| DCB "E"
	DCB	0x0, "r", 0x0, "r", 0x0, "o", 0x0, "r", 0x0, ":", 0x0, " "
	DCB	0x0, "C", 0x0, "o", 0x0, "u", 0x0, "l", 0x0, "d", 0x0, " "
	DCB	0x0, "n", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "o", 0x0, "p"
	DCB	0x0, "e", 0x0, "n", 0x0, " ", 0x0, "P", 0x0, "M", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "l", 0x0, "o", 0x0, "a", 0x0, "d"
	DCB	0x0, " ", 0x0, "e", 0x0, "v", 0x0, "e", 0x0, "n", 0x0, "t"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BG@BDFEBKKE@?$AAA?$AAC?$AAU?$AAs?$AAe?$AAr?$AAI?$AAd?$AAl?$AAe?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, "U", 0x0, "s", 0x0, "e", 0x0, "r", 0x0, "I"
	DCB	0x0, "d", 0x0, "l", 0x0, "e", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@LDFDNBMD@?$AAA?$AAC?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAI?$AAd?$AAl?$AAe?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, "S", 0x0, "y", 0x0, "s", 0x0, "t", 0x0, "e"
	DCB	0x0, "m", 0x0, "I", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BE@MEMPIFKD@?$AAA?$AAC?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@| DCB "A"
	DCB	0x0, "C", 0x0, "S", 0x0, "u", 0x0, "s", 0x0, "p", 0x0, "e"
	DCB	0x0, "n", 0x0, "d", 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@ONLBCKCN@?$AAB?$AAa?$AAt?$AAt?$AAU?$AAs?$AAe?$AAr?$AAI?$AAd?$AAl?$AAe?$AA?$AA@| DCB "B"
	DCB	0x0, "a", 0x0, "t", 0x0, "t", 0x0, "U", 0x0, "s", 0x0, "e"
	DCB	0x0, "r", 0x0, "I", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@HOGFBFFA@?$AAB?$AAa?$AAt?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAI?$AAd?$AAl?$AAe?$AA?$AA@| DCB "B"
	DCB	0x0, "a", 0x0, "t", 0x0, "t", 0x0, "S", 0x0, "y", 0x0, "s"
	DCB	0x0, "t", 0x0, "e", 0x0, "m", 0x0, "I", 0x0, "d", 0x0, "l"
	DCB	0x0, "e", 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BI@IBLOPCAN@?$AAB?$AAa?$AAt?$AAt?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@| DCB "B"
	DCB	0x0, "a", 0x0, "t", 0x0, "t", 0x0, "S", 0x0, "u", 0x0, "s"
	DCB	0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@FPBANDCM@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AAR?$AAe?$AAl?$AAo?$AAa?$AAd?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo@| DCB "P"
	DCB	0x0, "o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "M", 0x0, "a"
	DCB	0x0, "n", 0x0, "a", 0x0, "g", 0x0, "e", 0x0, "r", 0x0, "/"
	DCB	0x0, "R", 0x0, "e", 0x0, "l", 0x0, "o", 0x0, "a", 0x0, "d"
	DCB	0x0, "A", 0x0, "c", 0x0, "t", 0x0, "i", 0x0, "v", 0x0, "i"
	DCB	0x0, "t", 0x0, "y", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e"
	DCB	0x0, "o", 0x0, "u", 0x0, "t", 0x0, "s", 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@BFBHIFBH@?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@| DCB "S"
	DCB	0x0, "y", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m", 0x0, "\\"
	DCB	0x0, "C", 0x0, "u", 0x0, "r", 0x0, "r", 0x0, "e", 0x0, "n"
	DCB	0x0, "t", 0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r"
	DCB	0x0, "o", 0x0, "l", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "\\"
	DCB	0x0, "C", 0x0, "o", 0x0, "n", 0x0, "t", 0x0, "r", 0x0, "o"
	DCB	0x0, "l", 0x0, "\\", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e"
	DCB	0x0, "r", 0x0, "\\", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e"
	DCB	0x0, "o", 0x0, "u", 0x0, "t", 0x0, "s", 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\test\tux_powermanagement\test.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?RestoreStateTimeouts@@YAHXZ| PROC	; RestoreStateTimeouts

; 718  : {

  00000		 |$LN15@RestoreSta|
  00000	e92d4030	 stmdb       sp!, {r4, r5, lr}
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M33459|

; 719  : 	HKEY    hRegKey             = NULL;
; 720  : 	DWORD   dwNumSubKeys        = 0;
; 721  : 	LPWSTR  SubKeyName           = NULL;
; 722  : 	LPCWSTR regSubkey		    = TEXT("System\\CurrentControlSet\\Control\\Power\\Timeouts");
; 723  : 
; 724  :     DWORD dwKeyIndex = 0;       
; 725  :     TCHAR szNewKey[MAX_PATH]; 
; 726  : 	DWORD valuedatasize = sizeof(DWORD);
; 727  :     DWORD dwNewKeySize;       // size of name of DeviceX subkey
; 728  :     dwNewKeySize = (sizeof(szNewKey) / sizeof(TCHAR));
; 729  : 
; 730  : 	// find all of the states that are defined in the registry
; 731  :     if (RegOpenKeyEx(HKEY_LOCAL_MACHINE, regSubkey, 0, 0, &hRegKey) == ERROR_SUCCESS)

  00008	e59f1174	 ldr         r1, [pc, #0x174]
  0000c	e3a04000	 mov         r4, #0
  00010	e28de008	 add         lr, sp, #8
  00014	e3a03000	 mov         r3, #0
  00018	e3a02000	 mov         r2, #0
  0001c	e3a0010a	 mov         r0, #0xA, 2
  00020	e58d4008	 str         r4, [sp, #8]
  00024	e58de000	 str         lr, [sp]
  00028	eb000000	 bl          RegOpenKeyExW
  0002c	e3500000	 cmp         r0, #0
  00030	1a000043	 bne         |$LN4@RestoreSta|

; 732  : 	{
; 733  : 		RegSetValueEx(hRegKey,SREGISTRY_AC_USERIDLE,0,REG_DWORD,(BYTE *)&g_dwSaveACUserIdle,sizeof(DWORD));

  00034	e59f4144	 ldr         r4, [pc, #0x144]
  00038	e59f113c	 ldr         r1, [pc, #0x13C]
  0003c	e59d0008	 ldr         r0, [sp, #8]
  00040	e3a05004	 mov         r5, #4
  00044	e3a03004	 mov         r3, #4
  00048	e3a02000	 mov         r2, #0
  0004c	e58d4000	 str         r4, [sp]
  00050	e58d5004	 str         r5, [sp, #4]
  00054	eb000000	 bl          RegSetValueExW

; 734  : 		RegSetValueEx(hRegKey,SREGISTRY_AC_SYSTEMIDLE,0,REG_DWORD,(BYTE *)&g_dwSaveACSystemIdle,sizeof(DWORD));

  00058	e59f1118	 ldr         r1, [pc, #0x118]
  0005c	e59d0008	 ldr         r0, [sp, #8]
  00060	e284e004	 add         lr, r4, #4
  00064	e3a03004	 mov         r3, #4
  00068	e3a02000	 mov         r2, #0
  0006c	e58de000	 str         lr, [sp]
  00070	e58d5004	 str         r5, [sp, #4]
  00074	eb000000	 bl          RegSetValueExW

; 735  : 		RegSetValueEx(hRegKey,SREGISTRY_AC_SUSPEND,0,REG_DWORD,(BYTE *)&g_dwSaveACSuspend,sizeof(DWORD));

  00078	e59f10f4	 ldr         r1, [pc, #0xF4]
  0007c	e59d0008	 ldr         r0, [sp, #8]
  00080	e284e008	 add         lr, r4, #8
  00084	e3a03004	 mov         r3, #4
  00088	e3a02000	 mov         r2, #0
  0008c	e58de000	 str         lr, [sp]
  00090	e58d5004	 str         r5, [sp, #4]
  00094	eb000000	 bl          RegSetValueExW

; 736  : 		RegSetValueEx(hRegKey,SREGISTRY_BATTERY_USERIDLE,0,REG_DWORD,(BYTE *)&g_dwSaveBattUserIdle,sizeof(DWORD));

  00098	e59f10d0	 ldr         r1, [pc, #0xD0]
  0009c	e59d0008	 ldr         r0, [sp, #8]
  000a0	e284e00c	 add         lr, r4, #0xC
  000a4	e3a03004	 mov         r3, #4
  000a8	e3a02000	 mov         r2, #0
  000ac	e58de000	 str         lr, [sp]
  000b0	e58d5004	 str         r5, [sp, #4]
  000b4	eb000000	 bl          RegSetValueExW

; 737  : 		RegSetValueEx(hRegKey,SREGISTRY_BATTERY_SYSTEMIDLE,0,REG_DWORD,(BYTE *)&g_dwSaveBattSystemIdle,sizeof(DWORD));

  000b8	e59f10ac	 ldr         r1, [pc, #0xAC]
  000bc	e59d0008	 ldr         r0, [sp, #8]
  000c0	e284e010	 add         lr, r4, #0x10
  000c4	e3a03004	 mov         r3, #4
  000c8	e3a02000	 mov         r2, #0
  000cc	e58de000	 str         lr, [sp]
  000d0	e58d5004	 str         r5, [sp, #4]
  000d4	eb000000	 bl          RegSetValueExW

; 738  : 		RegSetValueEx(hRegKey,SREGISTRY_BATTERY_SUSPEND,0,REG_DWORD,(BYTE *)&g_dwSaveBattSuspend,sizeof(DWORD));

  000d8	e59f1088	 ldr         r1, [pc, #0x88]
  000dc	e59d0008	 ldr         r0, [sp, #8]
  000e0	e284e014	 add         lr, r4, #0x14
  000e4	e3a03004	 mov         r3, #4
  000e8	e3a02000	 mov         r2, #0
  000ec	e58de000	 str         lr, [sp]
  000f0	e58d5004	 str         r5, [sp, #4]
  000f4	eb000000	 bl          RegSetValueExW

; 739  : 		
; 740  : 		// Tell power manager to reload the registry timeouts
; 741  : 		HANDLE hevReloadActivityTimeouts = 
; 742  : 			OpenEvent(EVENT_ALL_ACCESS, FALSE, _T("PowerManager/ReloadActivityTimeouts"));

  000f8	e59f2064	 ldr         r2, [pc, #0x64]
  000fc	e3a0381f	 mov         r3, #0x1F, 16
  00100	e3830003	 orr         r0, r3, #3
  00104	e3a01000	 mov         r1, #0
  00108	eb000000	 bl          OpenEventW
  0010c	e1b04000	 movs        r4, r0

; 743  : 		if (hevReloadActivityTimeouts) {

  00110	0a000005	 beq         |$LN3@RestoreSta|

; 744  : 			SetEvent(hevReloadActivityTimeouts);

  00114	e3a01003	 mov         r1, #3
  00118	e1a00004	 mov         r0, r4
  0011c	eb000000	 bl          EventModify

; 745  : 			CloseHandle(hevReloadActivityTimeouts);

  00120	e1a00004	 mov         r0, r4
  00124	eb000000	 bl          CloseHandle

; 746  : 		}
; 747  : 		else {

  00128	ea000001	 b           |$LN8@RestoreSta|
  0012c		 |$LN3@RestoreSta|

; 748  : 			RETAILMSG(1, (TEXT("Error: Could not open PM reload event\r\n")));

  0012c	e59f002c	 ldr         r0, [pc, #0x2C]
  00130	eb000000	 bl          NKDbgPrintfW
  00134		 |$LN8@RestoreSta|

; 749  : 		}
; 750  : 
; 751  : 		// done with the key, close it
; 752  : 		RegCloseKey(hRegKey);

  00134	e59d0008	 ldr         r0, [sp, #8]
  00138	eb000000	 bl          RegCloseKey

; 758  : 	}
; 759  : 
; 760  : 	return TRUE;

  0013c	e3a00001	 mov         r0, #1
  00140	ea000002	 b           |$LN5@RestoreSta|
  00144		 |$LN4@RestoreSta|

; 753  : 	}
; 754  : 	else
; 755  : 	{
; 756  : 		RETAILMSG(1, (TEXT("Tux_PowerManagement: Error opening registry key\r\n")));

  00144	e59f0010	 ldr         r0, [pc, #0x10]
  00148	eb000000	 bl          NKDbgPrintfW

; 757  : 		return FALSE;

  0014c	e3a00000	 mov         r0, #0
  00150		 |$LN5@RestoreSta|

; 761  : }

  00150	e28dd00c	 add         sp, sp, #0xC
  00154	e8bd4030	 ldmia       sp!, {r4, r5, lr}
  00158	e12fff1e	 bx          lr
  0015c		 |$LN16@RestoreSta|
  0015c		 |$LN17@RestoreSta|
  0015c	00000000	 DCD         |??_C@_1GE@EFHOMKPO@?$AAT?$AAu?$AAx?$AA_?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAo?$AAp?$AAe?$AAn?$AAi@|
  00160		 |$LN18@RestoreSta|
  00160	00000000	 DCD         |??_C@_1FA@PLCDGEBN@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?3?$AA?5?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAP?$AAM?$AA?5?$AAr?$AAe?$AAl?$AAo?$AAa?$AAd?$AA?5@|
  00164		 |$LN19@RestoreSta|
  00164	00000000	 DCD         |??_C@_1EI@FPBANDCM@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AAR?$AAe?$AAl?$AAo?$AAa?$AAd?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo@|
  00168		 |$LN20@RestoreSta|
  00168	00000000	 DCD         |??_C@_1BI@IBLOPCAN@?$AAB?$AAa?$AAt?$AAt?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@|
  0016c		 |$LN21@RestoreSta|
  0016c	00000000	 DCD         |??_C@_1BO@HOGFBFFA@?$AAB?$AAa?$AAt?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAI?$AAd?$AAl?$AAe?$AA?$AA@|
  00170		 |$LN22@RestoreSta|
  00170	00000000	 DCD         |??_C@_1BK@ONLBCKCN@?$AAB?$AAa?$AAt?$AAt?$AAU?$AAs?$AAe?$AAr?$AAI?$AAd?$AAl?$AAe?$AA?$AA@|
  00174		 |$LN23@RestoreSta|
  00174	00000000	 DCD         |??_C@_1BE@MEMPIFKD@?$AAA?$AAC?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@|
  00178		 |$LN24@RestoreSta|
  00178	00000000	 DCD         |??_C@_1BK@LDFDNBMD@?$AAA?$AAC?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAI?$AAd?$AAl?$AAe?$AA?$AA@|
  0017c		 |$LN25@RestoreSta|
  0017c	00000000	 DCD         |??_C@_1BG@BDFEBKKE@?$AAA?$AAC?$AAU?$AAs?$AAe?$AAr?$AAI?$AAd?$AAl?$AAe?$AA?$AA@|
  00180		 |$LN26@RestoreSta|
  00180	00000000	 DCD         |?g_dwSaveACUserIdle@@3KA|
  00184		 |$LN27@RestoreSta|
  00184	00000000	 DCD         |??_C@_1GA@BFBHIFBH@?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@|
  00188		 |$M33460|

			 ENDP  ; |?RestoreStateTimeouts@@YAHXZ|, RestoreStateTimeouts

	IMPORT	|GetSystemPowerStatusEx2|
	IMPORT	|RegQueryValueExW|
; File c:\wince600\public\common\sdk\inc\kfuncs.h

  00000			 AREA	 |.pdata|, PDATA
|$T33492| DCD	|$LN18@DisableSta|
	DCD	0x4000bf02
; Function compile flags: /Ogspy
; File c:\wince600\platform\z2170p\src\test\tux_powermanagement\test.cpp

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?DisableStateTimeouts@@YAHXZ| PROC	; DisableStateTimeouts

; 765  : {

  00000		 |$LN18@DisableSta|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004	e24dd04c	 sub         sp, sp, #0x4C
  00008		 |$M33489|

; 766  : 	HKEY    hRegKey             = NULL;
; 767  : 	DWORD   dwNumSubKeys        = 0;
; 768  : 	LPWSTR  SubKeyName           = NULL;
; 769  : 	LPCWSTR regSubkey		    = TEXT("System\\CurrentControlSet\\Control\\Power\\Timeouts");
; 770  : 
; 771  : 	SYSTEM_POWER_STATUS_EX2		powerStatus;
; 772  :     DWORD dwKeyIndex = 0;       
; 773  :     TCHAR szNewKey[MAX_PATH]; 
; 774  : 	DWORD valuedatasize = sizeof(DWORD);
; 775  :     DWORD dwNewKeySize;       // size of name of DeviceX subkey
; 776  :     dwNewKeySize = (sizeof(szNewKey) / sizeof(TCHAR));
; 777  : 
; 778  : 	// find all of the states that are defined in the registry
; 779  :     if (RegOpenKeyEx(HKEY_LOCAL_MACHINE, regSubkey, 0, 0, &hRegKey) == ERROR_SUCCESS)

  00008	e59f12e8	 ldr         r1, [pc, #0x2E8]
  0000c	e3a04000	 mov         r4, #0
  00010	e28de008	 add         lr, sp, #8
  00014	e3a03000	 mov         r3, #0
  00018	e3a02000	 mov         r2, #0
  0001c	e3a0010a	 mov         r0, #0xA, 2
  00020	e58d4008	 str         r4, [sp, #8]
  00024	e58de000	 str         lr, [sp]
  00028	eb000000	 bl          RegOpenKeyExW
  0002c	e3500000	 cmp         r0, #0
  00030	1a0000a0	 bne         |$LN6@DisableSta|

; 780  : 	{
; 781  : 		DWORD dwKeyValue = 0;
; 782  : 		DWORD dwBuffSize = sizeof(DWORD);
; 783  : 
; 784  : 		RegQueryValueEx(hRegKey,SREGISTRY_AC_USERIDLE,NULL,NULL,(LPBYTE)&g_dwSaveACUserIdle,&dwBuffSize);

  00034	e59f52b8	 ldr         r5, [pc, #0x2B8]
  00038	e59d0008	 ldr         r0, [sp, #8]
  0003c	e59f12ac	 ldr         r1, [pc, #0x2AC]
  00040	e3a04000	 mov         r4, #0
  00044	e3a06004	 mov         r6, #4
  00048	e28de010	 add         lr, sp, #0x10
  0004c	e3a03000	 mov         r3, #0
  00050	e3a02000	 mov         r2, #0
  00054	e58d5000	 str         r5, [sp]
  00058	e58d400c	 str         r4, [sp, #0xC]
  0005c	e58d6010	 str         r6, [sp, #0x10]
  00060	e58de004	 str         lr, [sp, #4]
  00064	eb000000	 bl          RegQueryValueExW

; 785  : 		RegQueryValueEx(hRegKey,SREGISTRY_AC_SYSTEMIDLE,NULL,NULL,(LPBYTE)&g_dwSaveACSystemIdle,&dwBuffSize);

  00068	e59d0008	 ldr         r0, [sp, #8]
  0006c	e59f1268	 ldr         r1, [pc, #0x268]
  00070	e28de010	 add         lr, sp, #0x10
  00074	e2854004	 add         r4, r5, #4
  00078	e3a03000	 mov         r3, #0
  0007c	e3a02000	 mov         r2, #0
  00080	e58de004	 str         lr, [sp, #4]
  00084	e58d4000	 str         r4, [sp]
  00088	eb000000	 bl          RegQueryValueExW

; 786  : 		RegQueryValueEx(hRegKey,SREGISTRY_AC_SUSPEND,NULL,NULL,(LPBYTE)&g_dwSaveACSuspend,&dwBuffSize);

  0008c	e59d0008	 ldr         r0, [sp, #8]
  00090	e59f1254	 ldr         r1, [pc, #0x254]
  00094	e28de010	 add         lr, sp, #0x10
  00098	e2854008	 add         r4, r5, #8
  0009c	e3a03000	 mov         r3, #0
  000a0	e3a02000	 mov         r2, #0
  000a4	e58de004	 str         lr, [sp, #4]
  000a8	e58d4000	 str         r4, [sp]
  000ac	eb000000	 bl          RegQueryValueExW

; 787  : 		RegQueryValueEx(hRegKey,SREGISTRY_BATTERY_USERIDLE,NULL,NULL,(LPBYTE)&g_dwSaveBattUserIdle,&dwBuffSize);

  000b0	e59d0008	 ldr         r0, [sp, #8]
  000b4	e59f122c	 ldr         r1, [pc, #0x22C]
  000b8	e28de010	 add         lr, sp, #0x10
  000bc	e285400c	 add         r4, r5, #0xC
  000c0	e3a03000	 mov         r3, #0
  000c4	e3a02000	 mov         r2, #0
  000c8	e58de004	 str         lr, [sp, #4]
  000cc	e58d4000	 str         r4, [sp]
  000d0	eb000000	 bl          RegQueryValueExW

; 788  : 		RegQueryValueEx(hRegKey,SREGISTRY_BATTERY_SYSTEMIDLE,NULL,NULL,(LPBYTE)&g_dwSaveBattSystemIdle,&dwBuffSize);

  000d4	e59d0008	 ldr         r0, [sp, #8]
  000d8	e59f1200	 ldr         r1, [pc, #0x200]
  000dc	e28de010	 add         lr, sp, #0x10
  000e0	e2854010	 add         r4, r5, #0x10
  000e4	e3a03000	 mov         r3, #0
  000e8	e3a02000	 mov         r2, #0
  000ec	e58de004	 str         lr, [sp, #4]
  000f0	e58d4000	 str         r4, [sp]
  000f4	eb000000	 bl          RegQueryValueExW

; 789  : 		RegQueryValueEx(hRegKey,SREGISTRY_BATTERY_SUSPEND,NULL,NULL,(LPBYTE)&g_dwSaveBattSuspend,&dwBuffSize);

  000f8	e59d0008	 ldr         r0, [sp, #8]
  000fc	e59f11e0	 ldr         r1, [pc, #0x1E0]
  00100	e28de010	 add         lr, sp, #0x10
  00104	e2854014	 add         r4, r5, #0x14
  00108	e3a03000	 mov         r3, #0
  0010c	e3a02000	 mov         r2, #0
  00110	e58de004	 str         lr, [sp, #4]
  00114	e58d4000	 str         r4, [sp]
  00118	eb000000	 bl          RegQueryValueExW

; 790  : 
; 791  : 
; 792  : 		// By default, settings are set for a platform running on AC power
; 793  : 		RegSetValueEx(hRegKey,SREGISTRY_AC_USERIDLE,0,REG_DWORD,(BYTE *)&dwKeyValue,sizeof(DWORD));

  0011c	e59d0008	 ldr         r0, [sp, #8]
  00120	e59f11c8	 ldr         r1, [pc, #0x1C8]
  00124	e28de00c	 add         lr, sp, #0xC
  00128	e3a05004	 mov         r5, #4
  0012c	e3a03004	 mov         r3, #4
  00130	e3a02000	 mov         r2, #0
  00134	e58de000	 str         lr, [sp]
  00138	e58d5004	 str         r5, [sp, #4]
  0013c	eb000000	 bl          RegSetValueExW

; 794  : 		dwKeyValue = 5;
; 795  : 		RegSetValueEx(hRegKey,SREGISTRY_AC_SYSTEMIDLE,0,REG_DWORD,(BYTE *)&dwKeyValue,sizeof(DWORD));

  00140	e59d0008	 ldr         r0, [sp, #8]
  00144	e59f1190	 ldr         r1, [pc, #0x190]
  00148	e3a02005	 mov         r2, #5
  0014c	e28d300c	 add         r3, sp, #0xC
  00150	e58d200c	 str         r2, [sp, #0xC]
  00154	e58d3000	 str         r3, [sp]
  00158	e3a03004	 mov         r3, #4
  0015c	e3a02000	 mov         r2, #0
  00160	e58d5004	 str         r5, [sp, #4]
  00164	eb000000	 bl          RegSetValueExW

; 796  : 		dwKeyValue = 0;
; 797  : 		RegSetValueEx(hRegKey,SREGISTRY_AC_SUSPEND,0,REG_DWORD,(BYTE *)&dwKeyValue,sizeof(DWORD));

  00168	e59d0008	 ldr         r0, [sp, #8]
  0016c	e28de00c	 add         lr, sp, #0xC
  00170	e3a04000	 mov         r4, #0
  00174	e3a03004	 mov         r3, #4
  00178	e59f116c	 ldr         r1, [pc, #0x16C]
  0017c	e3a02000	 mov         r2, #0
  00180	e58d400c	 str         r4, [sp, #0xC]
  00184	e58d5004	 str         r5, [sp, #4]
  00188	e58de000	 str         lr, [sp]
  0018c	eb000000	 bl          RegSetValueExW

; 798  : 		RegSetValueEx(hRegKey,SREGISTRY_BATTERY_USERIDLE,0,REG_DWORD,(BYTE *)&dwKeyValue,sizeof(DWORD));

  00190	e59d0008	 ldr         r0, [sp, #8]
  00194	e59f114c	 ldr         r1, [pc, #0x14C]
  00198	e28de00c	 add         lr, sp, #0xC
  0019c	e3a03004	 mov         r3, #4
  001a0	e3a02000	 mov         r2, #0
  001a4	e58de000	 str         lr, [sp]
  001a8	e58d5004	 str         r5, [sp, #4]
  001ac	eb000000	 bl          RegSetValueExW

; 799  : 		RegSetValueEx(hRegKey,SREGISTRY_BATTERY_SYSTEMIDLE,0,REG_DWORD,(BYTE *)&dwKeyValue,sizeof(DWORD));

  001b0	e59d0008	 ldr         r0, [sp, #8]
  001b4	e59f1124	 ldr         r1, [pc, #0x124]
  001b8	e28de00c	 add         lr, sp, #0xC
  001bc	e3a03004	 mov         r3, #4
  001c0	e3a02000	 mov         r2, #0
  001c4	e58de000	 str         lr, [sp]
  001c8	e58d5004	 str         r5, [sp, #4]
  001cc	eb000000	 bl          RegSetValueExW

; 800  : 		RegSetValueEx(hRegKey,SREGISTRY_BATTERY_SUSPEND,0,REG_DWORD,(BYTE *)&dwKeyValue,sizeof(DWORD));

  001d0	e59d0008	 ldr         r0, [sp, #8]
  001d4	e59f1108	 ldr         r1, [pc, #0x108]
  001d8	e28de00c	 add         lr, sp, #0xC
  001dc	e3a03004	 mov         r3, #4
  001e0	e3a02000	 mov         r2, #0
  001e4	e58de000	 str         lr, [sp]
  001e8	e58d5004	 str         r5, [sp, #4]
  001ec	eb000000	 bl          RegSetValueExW

; 801  : 
; 802  : 		
; 803  : 		// If a real battery driver is present
; 804  : 		if (GetSystemPowerStatusEx2(&powerStatus,sizeof(powerStatus),TRUE))

  001f0	e3a02001	 mov         r2, #1
  001f4	e3a01038	 mov         r1, #0x38
  001f8	e28d0014	 add         r0, sp, #0x14
  001fc	eb000000	 bl          GetSystemPowerStatusEx2
  00200	e3500000	 cmp         r0, #0
  00204	0a000019	 beq         |$LN4@DisableSta|

; 805  : 		{
; 806  : 			// If the platform runs currently only on battery
; 807  : 			if ( (powerStatus.ACLineStatus == AC_LINE_OFFLINE) && (powerStatus.BatteryFlag!=BATTERY_FLAG_NO_BATTERY))

  00208	e5dd3014	 ldrb        r3, [sp, #0x14]
  0020c	e3530000	 cmp         r3, #0
  00210	1a000016	 bne         |$LN4@DisableSta|
  00214	e5dd3015	 ldrb        r3, [sp, #0x15]
  00218	e3530080	 cmp         r3, #0x80
  0021c	0a000013	 beq         |$LN4@DisableSta|

; 808  : 			{
; 809  : 				dwKeyValue = 5;
; 810  : 				RegSetValueEx(hRegKey,SREGISTRY_BATTERY_SYSTEMIDLE,0,REG_DWORD,(BYTE *)&dwKeyValue,sizeof(DWORD));

  00220	e59d0008	 ldr         r0, [sp, #8]
  00224	e59f10b4	 ldr         r1, [pc, #0xB4]
  00228	e3a04005	 mov         r4, #5
  0022c	e28de00c	 add         lr, sp, #0xC
  00230	e3a03004	 mov         r3, #4
  00234	e3a02000	 mov         r2, #0
  00238	e58d400c	 str         r4, [sp, #0xC]
  0023c	e58d5004	 str         r5, [sp, #4]
  00240	e58de000	 str         lr, [sp]
  00244	eb000000	 bl          RegSetValueExW

; 811  : 				dwKeyValue = 0;
; 812  : 				RegSetValueEx(hRegKey,SREGISTRY_AC_SYSTEMIDLE,0,REG_DWORD,(BYTE *)&dwKeyValue,sizeof(DWORD));

  00248	e59d0008	 ldr         r0, [sp, #8]
  0024c	e59f1088	 ldr         r1, [pc, #0x88]
  00250	e28de00c	 add         lr, sp, #0xC
  00254	e3a04000	 mov         r4, #0
  00258	e3a03004	 mov         r3, #4
  0025c	e3a02000	 mov         r2, #0
  00260	e58de000	 str         lr, [sp]
  00264	e58d400c	 str         r4, [sp, #0xC]
  00268	e58d5004	 str         r5, [sp, #4]
  0026c	eb000000	 bl          RegSetValueExW
  00270		 |$LN4@DisableSta|

; 813  : 			}
; 814  : 		}
; 815  : 		
; 816  : 		// Tell power manager to reload the registry timeouts
; 817  : 		HANDLE hevReloadActivityTimeouts = 
; 818  : 			OpenEvent(EVENT_ALL_ACCESS, FALSE, _T("PowerManager/ReloadActivityTimeouts"));

  00270	e59f2060	 ldr         r2, [pc, #0x60]
  00274	e3a0381f	 mov         r3, #0x1F, 16
  00278	e3830003	 orr         r0, r3, #3
  0027c	e3a01000	 mov         r1, #0
  00280	eb000000	 bl          OpenEventW
  00284	e1b04000	 movs        r4, r0

; 819  : 		if (hevReloadActivityTimeouts) {

  00288	0a000008	 beq         |$LN3@DisableSta|

; 820  : 			SetEvent(hevReloadActivityTimeouts);

  0028c	e3a01003	 mov         r1, #3
  00290	e1a00004	 mov         r0, r4
  00294	eb000000	 bl          EventModify

; 821  : 			CloseHandle(hevReloadActivityTimeouts);

  00298	e1a00004	 mov         r0, r4
  0029c	eb000000	 bl          CloseHandle

; 826  : 		}
; 827  : 
; 828  : 		// done with the key, close it
; 829  : 		RegCloseKey(hRegKey);

  002a0	e59d0008	 ldr         r0, [sp, #8]
  002a4	eb000000	 bl          RegCloseKey

; 835  : 	}
; 836  : 
; 837  : 	return TRUE;

  002a8	e3a00001	 mov         r0, #1
  002ac	ea000004	 b           |$LN7@DisableSta|
  002b0		 |$LN3@DisableSta|

; 822  : 		}
; 823  : 		else {
; 824  : 			RETAILMSG(1, (TEXT("Error: Could not open PM reload event\r\n")));

  002b0	e59f001c	 ldr         r0, [pc, #0x1C]

; 825  : 			return FALSE;

  002b4	ea000000	 b           |$LN15@DisableSta|
  002b8		 |$LN6@DisableSta|

; 830  : 	}
; 831  : 	else
; 832  : 	{
; 833  : 		RETAILMSG(1, (TEXT("Tux_PowerManagement: Error opening registry key\r\n")));

  002b8	e59f0010	 ldr         r0, [pc, #0x10]
  002bc		 |$LN15@DisableSta|
  002bc	eb000000	 bl          NKDbgPrintfW

; 834  : 		return FALSE;

  002c0	e3a00000	 mov         r0, #0
  002c4		 |$LN7@DisableSta|

; 838  : }

  002c4	e28dd04c	 add         sp, sp, #0x4C
  002c8	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  002cc	e12fff1e	 bx          lr
  002d0		 |$LN19@DisableSta|
  002d0		 |$LN20@DisableSta|
  002d0	00000000	 DCD         |??_C@_1GE@EFHOMKPO@?$AAT?$AAu?$AAx?$AA_?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAo?$AAp?$AAe?$AAn?$AAi@|
  002d4		 |$LN21@DisableSta|
  002d4	00000000	 DCD         |??_C@_1FA@PLCDGEBN@?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?3?$AA?5?$AAC?$AAo?$AAu?$AAl?$AAd?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAo?$AAp?$AAe?$AAn?$AA?5?$AAP?$AAM?$AA?5?$AAr?$AAe?$AAl?$AAo?$AAa?$AAd?$AA?5@|
  002d8		 |$LN22@DisableSta|
  002d8	00000000	 DCD         |??_C@_1EI@FPBANDCM@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAr?$AA?1?$AAR?$AAe?$AAl?$AAo?$AAa?$AAd?$AAA?$AAc?$AAt?$AAi?$AAv?$AAi?$AAt?$AAy?$AAT?$AAi?$AAm?$AAe?$AAo@|
  002dc		 |$LN23@DisableSta|
  002dc	00000000	 DCD         |??_C@_1BK@LDFDNBMD@?$AAA?$AAC?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAI?$AAd?$AAl?$AAe?$AA?$AA@|
  002e0		 |$LN24@DisableSta|
  002e0	00000000	 DCD         |??_C@_1BO@HOGFBFFA@?$AAB?$AAa?$AAt?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAI?$AAd?$AAl?$AAe?$AA?$AA@|
  002e4		 |$LN25@DisableSta|
  002e4	00000000	 DCD         |??_C@_1BI@IBLOPCAN@?$AAB?$AAa?$AAt?$AAt?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@|
  002e8		 |$LN26@DisableSta|
  002e8	00000000	 DCD         |??_C@_1BK@ONLBCKCN@?$AAB?$AAa?$AAt?$AAt?$AAU?$AAs?$AAe?$AAr?$AAI?$AAd?$AAl?$AAe?$AA?$AA@|
  002ec		 |$LN27@DisableSta|
  002ec	00000000	 DCD         |??_C@_1BE@MEMPIFKD@?$AAA?$AAC?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@|
  002f0		 |$LN28@DisableSta|
  002f0	00000000	 DCD         |??_C@_1BG@BDFEBKKE@?$AAA?$AAC?$AAU?$AAs?$AAe?$AAr?$AAI?$AAd?$AAl?$AAe?$AA?$AA@|
  002f4		 |$LN29@DisableSta|
  002f4	00000000	 DCD         |?g_dwSaveACUserIdle@@3KA|
  002f8		 |$LN30@DisableSta|
  002f8	00000000	 DCD         |??_C@_1GA@BFBHIFBH@?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@|
  002fc		 |$M33490|

			 ENDP  ; |?DisableStateTimeouts@@YAHXZ|, DisableStateTimeouts

	EXPORT	|__$ArrayPad$| [ DATA ]
	EXPORT	|??_C@_1BA@KNMKEODK@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAO?$AAn?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|RegEnumValueW|
	IMPORT	|wcsncpy|

  00000			 AREA	 |.pdata|, PDATA
|$T33527| DCD	|$LN25@Initialize|
	DCD	0xc000c902

  00000			 AREA	 |.xdata|, DATA
|$T33523| DCD	0xffffffd8

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BA@KNMKEODK@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAO?$AAn?$AA?$AA@| DCB "P", 0x0
	DCB	"o", 0x0, "w", 0x0, "e", 0x0, "r", 0x0, "O", 0x0, "n", 0x0
	DCB	0x0, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000	00000000	 DCD         |__GSHandlerCheck|
  00004	00000000	 DCD         |$T33523|

  00008		 |?InitializeStateMachine@@YAHXZ| PROC	; InitializeStateMachine

; 842  : {

  00008		 |$LN25@Initialize|
  00008	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  0000c	e24ddf9b	 sub         sp, sp, #0x9B, 30
  00010		 |$M33524|
  00010	e59f3310	 ldr         r3, [pc, #0x310]
  00014	e5933000	 ldr         r3, [r3]
  00018	e58d3268	 str         r3, [sp, #0x268]

; 843  : 	HKEY    hRegKey             = NULL;
; 844  : 	DWORD   dwNumSubKeys        = 0;
; 845  : 	LPWSTR  SubKeyName           = NULL;
; 846  : 	LPCWSTR regSubkey		    = TEXT("System\\CurrentControlSet\\Control\\Power\\Timeouts");
; 847  : 
; 848  :     DWORD dwKeyIndex = 0;       
; 849  :     TCHAR szNewKey[MAX_PATH]; 
; 850  : 	DWORD valuedata;
; 851  : 	DWORD valuedatasize = sizeof(DWORD);
; 852  :     DWORD dwNewKeySize;       // size of name of DeviceX subkey
; 853  :     dwNewKeySize = (sizeof(szNewKey) / sizeof(TCHAR));
; 854  : 
; 855  : 	SYSTEM_POWER_STATUS_EX2		powerStatus;
; 856  : 	WCHAR* powerStateName[3];
; 857  : 
; 858  : 	g_StateInfoTable[dwStateId_on].dwStateTimeout = 0x00;

  0001c	e59f3300	 ldr         r3, [pc, #0x300]
  00020	e59f82f8	 ldr         r8, [pc, #0x2F8]
  00024	e3a02b01	 mov         r2, #1, 22
  00028	e5934000	 ldr         r4, [r3]
  0002c	e3826018	 orr         r6, r2, #0x18

; 859  : 	wcsncpy(g_StateInfoTable[dwStateId_on].szStateName,L"on",MAX_PATH);

  00030	e59f12e4	 ldr         r1, [pc, #0x2E4]
  00034	e3a07004	 mov         r7, #4
  00038	e0258694	 mla         r5, r4, r6, r8
  0003c	e0208694	 mla         r0, r4, r6, r8
  00040	e58d701c	 str         r7, [sp, #0x1C]
  00044	e3a03000	 mov         r3, #0
  00048	e3a09f41	 mov         r9, #0x41, 30
  0004c	e3a0e000	 mov         lr, #0
  00050	e3a07000	 mov         r7, #0
  00054	e3a02f41	 mov         r2, #0x41, 30
  00058	e5857410	 str         r7, [r5, #0x410]
  0005c	e58d3010	 str         r3, [sp, #0x10]
  00060	e58de018	 str         lr, [sp, #0x18]
  00064	e58d9014	 str         r9, [sp, #0x14]
  00068	eb000000	 bl          wcsncpy

; 860  : 	wcsncpy(g_StateInfoTable[dwStateId_on].szTimeoutName,L"PowerOn",MAX_PATH);

  0006c	e2883f82	 add         r3, r8, #0x82, 30
  00070	e59f12a0	 ldr         r1, [pc, #0x2A0]
  00074	e0203694	 mla         r0, r4, r6, r3
  00078	e3a02f41	 mov         r2, #0x41, 30
  0007c	eb000000	 bl          wcsncpy

; 861  : 	g_StateInfoTable[dwStateId_on].bEnabled = TRUE;
; 862  : 	g_dwMaxTimeout = 0x00;

  00080	e59f928c	 ldr         r9, [pc, #0x28C]

; 863  : 
; 864  : 
; 865  : 	powerStateName[0]=SREGISTRY_AC_USERIDLE;

  00084	e59f6284	 ldr         r6, [pc, #0x284]

; 866  : 	powerStateName[1]=SREGISTRY_AC_SYSTEMIDLE;

  00088	e59fa27c	 ldr         r10, [pc, #0x27C]

; 867  : 	powerStateName[2]=SREGISTRY_AC_SUSPEND;

  0008c	e59fb274	 ldr         r11, [pc, #0x274]
  00090	e3a03000	 mov         r3, #0
  00094	e3a0e001	 mov         lr, #1

; 868  : 
; 869  : 	// If a real battery driver is present
; 870  : 	if (GetSystemPowerStatusEx2(&powerStatus,sizeof(powerStatus),TRUE))

  00098	e3a02001	 mov         r2, #1
  0009c	e3a01038	 mov         r1, #0x38
  000a0	e28d0028	 add         r0, sp, #0x28
  000a4	e58d6020	 str         r6, [sp, #0x20]
  000a8	e5893000	 str         r3, [r9]
  000ac	e585e414	 str         lr, [r5, #0x414]
  000b0	eb000000	 bl          GetSystemPowerStatusEx2
  000b4	e3500000	 cmp         r0, #0
  000b8	0a000008	 beq         |$LN13@Initialize|

; 871  : 	{
; 872  : 		// If the platform runs currently only on battery
; 873  : 		if ( (powerStatus.ACLineStatus == AC_LINE_OFFLINE) && (powerStatus.BatteryFlag!=BATTERY_FLAG_NO_BATTERY))

  000bc	e5dd3028	 ldrb        r3, [sp, #0x28]
  000c0	e3530000	 cmp         r3, #0
  000c4	1a000005	 bne         |$LN13@Initialize|
  000c8	e5dd3029	 ldrb        r3, [sp, #0x29]
  000cc	e3530080	 cmp         r3, #0x80

; 874  : 		{
; 875  : 			powerStateName[0]=SREGISTRY_BATTERY_USERIDLE;

  000d0	159f622c	 ldrne       r6, [pc, #0x22C]

; 876  : 			powerStateName[1]=SREGISTRY_BATTERY_SYSTEMIDLE;

  000d4	159fa224	 ldrne       r10, [pc, #0x224]

; 877  : 			powerStateName[2]=SREGISTRY_BATTERY_SUSPEND;

  000d8	159fb21c	 ldrne       r11, [pc, #0x21C]
  000dc	158d6020	 strne       r6, [sp, #0x20]
  000e0		 |$LN13@Initialize|

; 878  : 		}
; 879  : 	}
; 880  : 	
; 881  : 
; 882  : 	// find all of the states that are defined in the registry
; 883  :     if (RegOpenKeyEx(HKEY_LOCAL_MACHINE, regSubkey, 0, 0, &hRegKey) == ERROR_SUCCESS)

  000e0	e59f1210	 ldr         r1, [pc, #0x210]
  000e4	e28de010	 add         lr, sp, #0x10
  000e8	e3a03000	 mov         r3, #0
  000ec	e3a02000	 mov         r2, #0
  000f0	e3a0010a	 mov         r0, #0xA, 2
  000f4	e58de000	 str         lr, [sp]
  000f8	eb000000	 bl          RegOpenKeyExW
  000fc	e3500000	 cmp         r0, #0
  00100	1a00006f	 bne         |$LN12@Initialize|

; 884  : 	{
; 885  : 		//RETAILMSG(1, (TEXT("Tux_PowerManagement: getting PM timeouts from registry\r\n")));
; 886  : 
; 887  : 
; 888  : 		while (ERROR_SUCCESS == RegEnumValue(hRegKey,dwKeyIndex,
; 889  : 			szNewKey,
; 890  : 			&dwNewKeySize,NULL,NULL,
; 891  : 			(LPBYTE)&valuedata,
; 892  : 			&valuedatasize))

  00104	e59d0010	 ldr         r0, [sp, #0x10]
  00108	e28de01c	 add         lr, sp, #0x1C
  0010c	e28d4024	 add         r4, sp, #0x24
  00110	e28d3014	 add         r3, sp, #0x14
  00114	e28d2060	 add         r2, sp, #0x60
  00118	e3a01000	 mov         r1, #0
  0011c	e58de00c	 str         lr, [sp, #0xC]
  00120	e58d4008	 str         r4, [sp, #8]
  00124	e58d7004	 str         r7, [sp, #4]
  00128	e58d7000	 str         r7, [sp]
  0012c	eb000000	 bl          RegEnumValueW
  00130	e3500000	 cmp         r0, #0
  00134	1a00005c	 bne         |$LN10@Initialize|
  00138	e59f71b4	 ldr         r7, [pc, #0x1B4]
  0013c	e3a0ef41	 mov         lr, #0x41, 30
  00140	e2884f82	 add         r4, r8, #0x82, 30
  00144		 |$LL11@Initialize|

; 893  : 		{
; 894  : 			dwKeyIndex += 1;
; 895  : 			dwNewKeySize = (sizeof(szNewKey) / sizeof(TCHAR));
; 896  : 
; 897  : 			//RETAILMSG(1,(TEXT("name: %s   value: %x\r\n"),szNewKey,valuedata));
; 898  : 
; 899  : 			if(wcsncmp(szNewKey,powerStateName[0],dwNewKeySize)==0 && valuedata != 0)

  00144	e59d3018	 ldr         r3, [sp, #0x18]
  00148	e3a02f41	 mov         r2, #0x41, 30
  0014c	e1a01006	 mov         r1, r6
  00150	e2833001	 add         r3, r3, #1
  00154	e28d0060	 add         r0, sp, #0x60
  00158	e58d3018	 str         r3, [sp, #0x18]
  0015c	e58de014	 str         lr, [sp, #0x14]
  00160	eb000000	 bl          wcsncmp
  00164	e59d6024	 ldr         r6, [sp, #0x24]
  00168	e3500000	 cmp         r0, #0
  0016c	1a00000c	 bne         |$LN9@Initialize|
  00170	e3560000	 cmp         r6, #0
  00174	0a00000a	 beq         |$LN9@Initialize|

; 900  : 			{
; 901  : 				//RETAILMSG(1,(TEXT("mapping useridle: key: %x\r\n"),dwKeyIndex));
; 902  : 				//dwStateId_useridle = dwKeyIndex;
; 903  : 				wcsncpy(g_StateInfoTable[dwStateId_useridle].szTimeoutName,szNewKey,dwNewKeySize);

  00178	e5975000	 ldr         r5, [r7]
  0017c	e3a00b01	 mov         r0, #1, 22
  00180	e3803018	 orr         r3, r0, #0x18
  00184	e0204395	 mla         r0, r5, r3, r4
  00188	e3a02f41	 mov         r2, #0x41, 30
  0018c	e28d1060	 add         r1, sp, #0x60
  00190	eb000000	 bl          wcsncpy

; 904  : 				g_StateInfoTable[dwStateId_useridle].dwStateTimeout = valuedata;
; 905  : 				wcsncpy(g_StateInfoTable[dwStateId_useridle].szStateName,L"useridle",dwNewKeySize);

  00194	e3a02b01	 mov         r2, #1, 22
  00198	e59f1150	 ldr         r1, [pc, #0x150]
  0019c	e3823018	 orr         r3, r2, #0x18

; 906  : 				g_StateInfoTable[dwStateId_useridle].bEnabled = TRUE;
; 907  : 
; 908  : 				// check if this transition is the longest transition
; 909  : 				if(valuedata > g_dwMaxTimeout)
; 910  : 					g_dwMaxTimeout = valuedata;
; 911  : 
; 912  : 				g_numofstates++;

  001a0	ea000023	 b           |$LN21@Initialize|
  001a4		 |$LN9@Initialize|

; 913  : 			}
; 914  : 			else if(wcsncmp(szNewKey,powerStateName[1],dwNewKeySize)==0 && valuedata != 0)

  001a4	e3a02f41	 mov         r2, #0x41, 30
  001a8	e1a0100a	 mov         r1, r10
  001ac	e28d0060	 add         r0, sp, #0x60
  001b0	eb000000	 bl          wcsncmp
  001b4	e3500000	 cmp         r0, #0
  001b8	1a00000b	 bne         |$LN6@Initialize|
  001bc	e3560000	 cmp         r6, #0
  001c0	0a000009	 beq         |$LN6@Initialize|

; 915  : 			{
; 916  : 				//RETAILMSG(1,(TEXT("mapping systemidle: key: %x\r\n"),dwKeyIndex));
; 917  : 				//dwStateId_systemidle = dwKeyIndex;
; 918  : 				wcsncpy(g_StateInfoTable[dwStateId_systemidle].szTimeoutName,szNewKey,dwNewKeySize);

  001c4	e5975004	 ldr         r5, [r7, #4]
  001c8	e3a04b01	 mov         r4, #1, 22
  001cc	e3843018	 orr         r3, r4, #0x18
  001d0	e2880f82	 add         r0, r8, #0x82, 30
  001d4	e0200395	 mla         r0, r5, r3, r0
  001d8	e3a02f41	 mov         r2, #0x41, 30
  001dc	e28d1060	 add         r1, sp, #0x60
  001e0	eb000000	 bl          wcsncpy

; 919  : 				g_StateInfoTable[dwStateId_systemidle].dwStateTimeout = valuedata;
; 920  : 				wcsncpy(g_StateInfoTable[dwStateId_systemidle].szStateName,L"systemidle",dwNewKeySize);

  001e4	e59f1100	 ldr         r1, [pc, #0x100]

; 921  : 				g_StateInfoTable[dwStateId_systemidle].bEnabled = TRUE;
; 922  : 
; 923  : 				if(valuedata > g_dwMaxTimeout)
; 924  : 					g_dwMaxTimeout = valuedata;
; 925  : 
; 926  : 				g_numofstates++;

  001e8	ea000010	 b           |$LN22@Initialize|
  001ec		 |$LN6@Initialize|

; 927  : 			}
; 928  : 			else if(wcsncmp(szNewKey,powerStateName[2],dwNewKeySize)==0 && valuedata != 0)

  001ec	e3a02f41	 mov         r2, #0x41, 30
  001f0	e1a0100b	 mov         r1, r11
  001f4	e28d0060	 add         r0, sp, #0x60
  001f8	eb000000	 bl          wcsncmp
  001fc	e3500000	 cmp         r0, #0
  00200	1a000019	 bne         |$LN3@Initialize|
  00204	e3560000	 cmp         r6, #0
  00208	0a000017	 beq         |$LN3@Initialize|

; 929  : 			{
; 930  : 				//RETAILMSG(1,(TEXT("mapping suspend key: %x\r\n"),dwKeyIndex));
; 931  : 				//dwStateId_suspend = dwKeyIndex;
; 932  : 				wcsncpy(g_StateInfoTable[dwStateId_suspend].szTimeoutName,szNewKey,dwNewKeySize);

  0020c	e5975008	 ldr         r5, [r7, #8]
  00210	e3a04b01	 mov         r4, #1, 22
  00214	e3843018	 orr         r3, r4, #0x18
  00218	e2880f82	 add         r0, r8, #0x82, 30
  0021c	e0200395	 mla         r0, r5, r3, r0
  00220	e3a02f41	 mov         r2, #0x41, 30
  00224	e28d1060	 add         r1, sp, #0x60
  00228	eb000000	 bl          wcsncpy

; 933  : 				g_StateInfoTable[dwStateId_suspend].dwStateTimeout = valuedata;
; 934  : 				wcsncpy(g_StateInfoTable[dwStateId_suspend].szStateName,L"suspend",dwNewKeySize);

  0022c	e59f10b4	 ldr         r1, [pc, #0xB4]
  00230		 |$LN22@Initialize|
  00230	e3843018	 orr         r3, r4, #0x18
  00234		 |$LN21@Initialize|
  00234	e0248395	 mla         r4, r5, r3, r8
  00238	e0208395	 mla         r0, r5, r3, r8
  0023c	e3a02f41	 mov         r2, #0x41, 30
  00240	e5846410	 str         r6, [r4, #0x410]
  00244	eb000000	 bl          wcsncpy

; 935  : 				g_StateInfoTable[dwStateId_suspend].bEnabled = TRUE;
; 936  : 
; 937  : 				if(valuedata > g_dwMaxTimeout)

  00248	e5993000	 ldr         r3, [r9]
  0024c	e3a02001	 mov         r2, #1
  00250	e5842414	 str         r2, [r4, #0x414]
  00254	e1560003	 cmp         r6, r3

; 938  : 					g_dwMaxTimeout = valuedata;
; 939  : 
; 940  : 				g_numofstates++;

  00258	e5973024	 ldr         r3, [r7, #0x24]
  0025c	85896000	 strhi       r6, [r9]
  00260	e2884f82	 add         r4, r8, #0x82, 30
  00264	e2833001	 add         r3, r3, #1
  00268	e5873024	 str         r3, [r7, #0x24]
  0026c		 |$LN3@Initialize|
  0026c	e28de01c	 add         lr, sp, #0x1C
  00270	e58de00c	 str         lr, [sp, #0xC]
  00274	e28de024	 add         lr, sp, #0x24
  00278	e59d0010	 ldr         r0, [sp, #0x10]
  0027c	e59d1018	 ldr         r1, [sp, #0x18]
  00280	e58de008	 str         lr, [sp, #8]
  00284	e3a0e000	 mov         lr, #0
  00288	e28d3014	 add         r3, sp, #0x14
  0028c	e28d2060	 add         r2, sp, #0x60
  00290	e58de004	 str         lr, [sp, #4]
  00294	e58de000	 str         lr, [sp]
  00298	eb000000	 bl          RegEnumValueW
  0029c	e59d6020	 ldr         r6, [sp, #0x20]
  002a0	e3500000	 cmp         r0, #0
  002a4	e3a0ef41	 mov         lr, #0x41, 30
  002a8	0affffa5	 beq         |$LL11@Initialize|
  002ac		 |$LN10@Initialize|

; 941  : 			}
; 942  : 		}		
; 943  : 
; 944  : 		// done with the key, close it
; 945  : 		RegCloseKey(hRegKey);

  002ac	e59d0010	 ldr         r0, [sp, #0x10]
  002b0	eb000000	 bl          RegCloseKey

; 951  : 	}
; 952  : 
; 953  : 	return TEST_RUNNING;

  002b4	e59d0268	 ldr         r0, [sp, #0x268]
  002b8	eb000000	 bl          __security_check_cookie
  002bc	e3a0000e	 mov         r0, #0xE
  002c0	ea000004	 b           |$LN15@Initialize|
  002c4		 |$LN12@Initialize|

; 946  : 	}
; 947  : 	else
; 948  : 	{
; 949  : 		RETAILMSG(1, (TEXT("Tux_PowerManagement: Error opening registry key\r\n")));

  002c4	e59f0018	 ldr         r0, [pc, #0x18]
  002c8	eb000000	 bl          NKDbgPrintfW

; 950  : 		return FALSE;

  002cc	e59d0268	 ldr         r0, [sp, #0x268]
  002d0	eb000000	 bl          __security_check_cookie
  002d4	e3a00000	 mov         r0, #0
  002d8		 |$LN15@Initialize|

; 954  : }

  002d8	e28ddf9b	 add         sp, sp, #0x9B, 30
  002dc	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  002e0	e12fff1e	 bx          lr
  002e4		 |$LN26@Initialize|
  002e4		 |$LN27@Initialize|
  002e4	00000000	 DCD         |??_C@_1GE@EFHOMKPO@?$AAT?$AAu?$AAx?$AA_?$AAP?$AAo?$AAw?$AAe?$AAr?$AAM?$AAa?$AAn?$AAa?$AAg?$AAe?$AAm?$AAe?$AAn?$AAt?$AA?3?$AA?5?$AAE?$AAr?$AAr?$AAo?$AAr?$AA?5?$AAo?$AAp?$AAe?$AAn?$AAi@|
  002e8		 |$LN28@Initialize|
  002e8	00000000	 DCD         |??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@|
  002ec		 |$LN29@Initialize|
  002ec	00000000	 DCD         |??_C@_1BG@COFBNNCL@?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AAi?$AAd?$AAl?$AAe?$AA?$AA@|
  002f0		 |$LN30@Initialize|
  002f0	00000000	 DCD         |??_C@_1BC@IJEKHFDC@?$AAu?$AAs?$AAe?$AAr?$AAi?$AAd?$AAl?$AAe?$AA?$AA@|
  002f4		 |$LN31@Initialize|
  002f4	00000000	 DCD         |?dwStateId_useridle@@3KA|
  002f8		 |$LN32@Initialize|
  002f8	00000000	 DCD         |??_C@_1GA@BFBHIFBH@?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@|
  002fc		 |$LN33@Initialize|
  002fc	00000000	 DCD         |??_C@_1BI@IBLOPCAN@?$AAB?$AAa?$AAt?$AAt?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@|
  00300		 |$LN34@Initialize|
  00300	00000000	 DCD         |??_C@_1BO@HOGFBFFA@?$AAB?$AAa?$AAt?$AAt?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAI?$AAd?$AAl?$AAe?$AA?$AA@|
  00304		 |$LN35@Initialize|
  00304	00000000	 DCD         |??_C@_1BK@ONLBCKCN@?$AAB?$AAa?$AAt?$AAt?$AAU?$AAs?$AAe?$AAr?$AAI?$AAd?$AAl?$AAe?$AA?$AA@|
  00308		 |$LN36@Initialize|
  00308	00000000	 DCD         |??_C@_1BE@MEMPIFKD@?$AAA?$AAC?$AAS?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@|
  0030c		 |$LN37@Initialize|
  0030c	00000000	 DCD         |??_C@_1BK@LDFDNBMD@?$AAA?$AAC?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAI?$AAd?$AAl?$AAe?$AA?$AA@|
  00310		 |$LN38@Initialize|
  00310	00000000	 DCD         |??_C@_1BG@BDFEBKKE@?$AAA?$AAC?$AAU?$AAs?$AAe?$AAr?$AAI?$AAd?$AAl?$AAe?$AA?$AA@|
  00314		 |$LN39@Initialize|
  00314	00000000	 DCD         |?g_dwMaxTimeout@@3KA|
  00318		 |$LN40@Initialize|
  00318	00000000	 DCD         |??_C@_1BA@KNMKEODK@?$AAP?$AAo?$AAw?$AAe?$AAr?$AAO?$AAn?$AA?$AA@|
  0031c		 |$LN41@Initialize|
  0031c	00000000	 DCD         |??_C@_15GMGGGDOD@?$AAo?$AAn?$AA?$AA@|
  00320		 |$LN42@Initialize|
  00320	00000000	 DCD         |?g_StateInfoTable@@3PAUStateInfo@@A|
  00324		 |$LN43@Initialize|
  00324	00000000	 DCD         |?dwStateId_on@@3KA|
  00328		 |$LN44@Initialize|
  00328	00000000	 DCD         |__security_cookie|
  0032c		 |$M33525|

			 ENDP  ; |?InitializeStateMachine@@YAHXZ|, InitializeStateMachine


  00000			 AREA	 |.pdata|, PDATA
|$T33558| DCD	|$LN10@IsLastStat|
	DCD	0x40001100
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?IsLastState@@YAHK@Z| PROC		; IsLastState

; 1062 : {

  00000		 |$LN10@IsLastStat|
  00000		 |$M33555|

; 1063 : 	DWORD dwNextStateId = dwStateId + 1;
; 1064 : 
; 1065 : 	if(dwStateId == dwStateId_suspend)

  00000	e59f3038	 ldr         r3, [pc, #0x38]
  00004	e5933000	 ldr         r3, [r3]
  00008	e1500003	 cmp         r0, r3
  0000c	1a000001	 bne         |$LN4@IsLastStat|
  00010		 |$LN7@IsLastStat|

; 1066 : 	{
; 1067 : 		return TRUE;

  00010	e3a00001	 mov         r0, #1

; 1076 : 	}
; 1077 : }

  00014	e12fff1e	 bx          lr
  00018		 |$LN4@IsLastStat|

; 1068 : 	}
; 1069 : 	else if(g_StateInfoTable[dwNextStateId].bEnabled == FALSE)

  00018	e59f201c	 ldr         r2, [pc, #0x1C]
  0001c	e3a03b01	 mov         r3, #1, 22
  00020	e3833018	 orr         r3, r3, #0x18
  00024	e0232390	 mla         r3, r0, r3, r2
  00028	e593382c	 ldr         r3, [r3, #0x82C]
  0002c	e3530000	 cmp         r3, #0

; 1070 : 	{
; 1071 : 		return TRUE;

  00030	0afffff6	 beq         |$LN7@IsLastStat|

; 1072 : 	}
; 1073 : 	else
; 1074 : 	{
; 1075 : 		return FALSE;

  00034	e3a00000	 mov         r0, #0

; 1076 : 	}
; 1077 : }

  00038	e12fff1e	 bx          lr
  0003c		 |$LN11@IsLastStat|
  0003c		 |$LN12@IsLastStat|
  0003c	00000000	 DCD         |?g_StateInfoTable@@3PAUStateInfo@@A|
  00040		 |$LN13@IsLastStat|
  00040	00000000	 DCD         |?dwStateId_suspend@@3KA|
  00044		 |$M33556|

			 ENDP  ; |?IsLastState@@YAHK@Z|, IsLastState

	EXPORT	|??_C@_1EE@CBBDDOBO@?$AAT?$AAr?$AAa?$AAn?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AAI?$AAD?$AAL?$AAE?$AA?9?$AA?$DO?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1JO@EDLNMEAP@?$AAT?$AAr?$AAa?$AAn?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AAU?$AAS?$AAE?$AAR?$AAI?$AAD?$AAL?$AAE?$AA?9?$AA?$DO?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AAI?$AAD?$AAL?$AAE@| [ DATA ] ; `string'
	EXPORT	|??_C@_1IO@GMDPPHDB@?$AAT?$AAr?$AAa?$AAn?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AAO?$AAN?$AA?9?$AA?$DO?$AAU?$AAS?$AAE?$AAR?$AAI?$AAD?$AAL?$AAE?$AA?0?$AA?5?$AAm?$AAe?$AAa?$AAs?$AAu?$AAr@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@FEHGJCJM@?$AAT?$AAr?$AAa?$AAn?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AAO?$AAN?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T33574| DCD	|$LN14@UpdateTest|
	DCD	0x40005b02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@CBBDDOBO@?$AAT?$AAr?$AAa?$AAn?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AAI?$AAD?$AAL?$AAE?$AA?9?$AA?$DO?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AA?$AN@| DCB "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, ":", 0x0, " ", 0x0, "S"
	DCB	0x0, "Y", 0x0, "S", 0x0, "T", 0x0, "E", 0x0, "M", 0x0, "I"
	DCB	0x0, "D", 0x0, "L", 0x0, "E", 0x0, "-", 0x0, ">", 0x0, "S"
	DCB	0x0, "U", 0x0, "S", 0x0, "P", 0x0, "E", 0x0, "N", 0x0, "D"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1JO@EDLNMEAP@?$AAT?$AAr?$AAa?$AAn?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AAU?$AAS?$AAE?$AAR?$AAI?$AAD?$AAL?$AAE?$AA?9?$AA?$DO?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AAI?$AAD?$AAL?$AAE@| DCB "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, ":", 0x0, " ", 0x0, "U"
	DCB	0x0, "S", 0x0, "E", 0x0, "R", 0x0, "I", 0x0, "D", 0x0, "L"
	DCB	0x0, "E", 0x0, "-", 0x0, ">", 0x0, "S", 0x0, "Y", 0x0, "S"
	DCB	0x0, "T", 0x0, "E", 0x0, "M", 0x0, "I", 0x0, "D", 0x0, "L"
	DCB	0x0, "E", 0x0, ",", 0x0, " ", 0x0, "m", 0x0, "e", 0x0, "a"
	DCB	0x0, "s", 0x0, "u", 0x0, "r", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "i", 0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u"
	DCB	0x0, "t", 0x0, ":", 0x0, " ", 0x0, "%", 0x0, "d", 0x0, ","
	DCB	0x0, " ", 0x0, "e", 0x0, "x", 0x0, "p", 0x0, "e", 0x0, "c"
	DCB	0x0, "t", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "i"
	DCB	0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1IO@GMDPPHDB@?$AAT?$AAr?$AAa?$AAn?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AAO?$AAN?$AA?9?$AA?$DO?$AAU?$AAS?$AAE?$AAR?$AAI?$AAD?$AAL?$AAE?$AA?0?$AA?5?$AAm?$AAe?$AAa?$AAs?$AAu?$AAr@| DCB "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, ":", 0x0, " ", 0x0, "O"
	DCB	0x0, "N", 0x0, "-", 0x0, ">", 0x0, "U", 0x0, "S", 0x0, "E"
	DCB	0x0, "R", 0x0, "I", 0x0, "D", 0x0, "L", 0x0, "E", 0x0, ","
	DCB	0x0, " ", 0x0, "m", 0x0, "e", 0x0, "a", 0x0, "s", 0x0, "u"
	DCB	0x0, "r", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "t", 0x0, "i"
	DCB	0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, ":"
	DCB	0x0, " ", 0x0, "%", 0x0, "d", 0x0, ",", 0x0, " ", 0x0, "e"
	DCB	0x0, "x", 0x0, "p", 0x0, "e", 0x0, "c", 0x0, "t", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "t", 0x0, "i", 0x0, "m", 0x0, "e"
	DCB	0x0, "o", 0x0, "u", 0x0, "t", 0x0, ":", 0x0, " ", 0x0, "%"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@FEHGJCJM@?$AAT?$AAr?$AAa?$AAn?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AAO?$AAN?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?$AN?$AA?6?$AA?$AA@| DCB "T"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, ":", 0x0, " ", 0x0, "O"
	DCB	0x0, "N", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?UpdateTestTicker@@YAHKK@Z| PROC	; UpdateTestTicker

; 1080 : {

  00000		 |$LN14@UpdateTest|
  00000	e92d40f0	 stmdb       sp!, {r4 - r7, lr}
  00004	e24dd004	 sub         sp, sp, #4
  00008		 |$M33571|
  00008	e1a05001	 mov         r5, r1

; 1081 : 	DWORD dwElapsedTime;
; 1082 : 	dwElapsedTime = (tcount-g_TestStartTime)/(10000000);

  0000c	e59f6154	 ldr         r6, [pc, #0x154]

; 1083 : 
; 1084 : 	if(dwStateId == dwStateId_on)

  00010	e59f314c	 ldr         r3, [pc, #0x14C]
  00014	e59f4144	 ldr         r4, [pc, #0x144]
  00018	e5962000	 ldr         r2, [r6]
  0001c	e593e000	 ldr         lr, [r3]
  00020	e0452002	 sub         r2, r5, r2
  00024	e0873492	 umull       r3, r7, r2, r4
  00028	e150000e	 cmp         r0, lr
  0002c	1a00000a	 bne         |$LN8@UpdateTest|

; 1085 : 	{
; 1086 : 		g_TestStartTime = tcount;
; 1087 : 		g_pKato->Log(1,(TEXT("Transition: ON state\r\n")));

  00030	e59f3110	 ldr         r3, [pc, #0x110]
  00034	e59fe108	 ldr         lr, [pc, #0x108]
  00038	e59f211c	 ldr         r2, [pc, #0x11C]
  0003c	e5930000	 ldr         r0, [r3]
  00040	e59e3000	 ldr         r3, [lr]
  00044	e3a01001	 mov         r1, #1
  00048	e5865000	 str         r5, [r6]
  0004c	e1a0e00f	 mov         lr, pc
  00050	e12fff13	 bx          r3

; 1115 : 
; 1116 : 	return TRUE;

  00054	e3a00001	 mov         r0, #1
  00058	ea000035	 b           |$LN9@UpdateTest|
  0005c		 |$LN8@UpdateTest|

; 1088 : 		//RETAILMSG(1,(TEXT("Transition Detected: On					Starting to measure elapsed time.\r\n")));
; 1089 : 		//return TRUE;
; 1090 : 	}
; 1091 : 	else if(dwStateId == dwStateId_useridle)

  0005c	e59f30f4	 ldr         r3, [pc, #0xF4]
  00060	e5931000	 ldr         r1, [r3]
  00064	e1500001	 cmp         r0, r1
  00068	1a00000f	 bne         |$LN6@UpdateTest|

; 1092 : 	{
; 1093 : 		g_pKato->Log(1, TEXT("Transition: ON->USERIDLE, measured timeout: %d, expected timeout: %d\r\n"),
; 1094 : 			dwElapsedTime,
; 1095 : 			g_StateInfoTable[dwStateId_useridle].dwStateTimeout);

  0006c	e59f20dc	 ldr         r2, [pc, #0xDC]
  00070	e3a03b01	 mov         r3, #1, 22
  00074	e3833018	 orr         r3, r3, #0x18
  00078	e0232391	 mla         r3, r1, r3, r2
  0007c	e59f10c4	 ldr         r1, [pc, #0xC4]
  00080	e59fe0bc	 ldr         lr, [pc, #0xBC]
  00084	e5933410	 ldr         r3, [r3, #0x410]
  00088	e5910000	 ldr         r0, [r1]
  0008c	e59f20c0	 ldr         r2, [pc, #0xC0]
  00090	e59e4000	 ldr         r4, [lr]
  00094	e58d3000	 str         r3, [sp]
  00098	e1a03b27	 mov         r3, r7, lsr #22
  0009c	e3a01001	 mov         r1, #1
  000a0	e1a0e00f	 mov         lr, pc
  000a4	e12fff14	 bx          r4

; 1096 : 
; 1097 : 		g_TestStartTime = tcount;

  000a8	ea00001d	 b           |$LN11@UpdateTest|
  000ac		 |$LN6@UpdateTest|

; 1098 : 	}
; 1099 : 	else if(dwStateId == dwStateId_systemidle)

  000ac	e5931004	 ldr         r1, [r3, #4]
  000b0	e1500001	 cmp         r0, r1
  000b4	1a00000f	 bne         |$LN4@UpdateTest|

; 1100 : 	{
; 1101 : 		g_pKato->Log(1, TEXT("Transition: USERIDLE->SYSTEMIDLE, measured timeout: %d, expected timeout: %d\r\n"),
; 1102 : 			dwElapsedTime,
; 1103 : 			g_StateInfoTable[dwStateId_systemidle].dwStateTimeout);

  000b8	e59f2090	 ldr         r2, [pc, #0x90]
  000bc	e3a03b01	 mov         r3, #1, 22
  000c0	e3833018	 orr         r3, r3, #0x18
  000c4	e0232391	 mla         r3, r1, r3, r2
  000c8	e59f1078	 ldr         r1, [pc, #0x78]
  000cc	e59fe070	 ldr         lr, [pc, #0x70]
  000d0	e5933410	 ldr         r3, [r3, #0x410]
  000d4	e5910000	 ldr         r0, [r1]
  000d8	e59f206c	 ldr         r2, [pc, #0x6C]
  000dc	e59e4000	 ldr         r4, [lr]
  000e0	e58d3000	 str         r3, [sp]
  000e4	e1a03b27	 mov         r3, r7, lsr #22
  000e8	e3a01001	 mov         r1, #1
  000ec	e1a0e00f	 mov         lr, pc
  000f0	e12fff14	 bx          r4

; 1104 : 
; 1105 : 		g_TestStartTime = tcount;

  000f4	ea00000a	 b           |$LN11@UpdateTest|
  000f8		 |$LN4@UpdateTest|

; 1106 : 	}
; 1107 : 	else if(dwStateId == dwStateId_suspend)

  000f8	e5933008	 ldr         r3, [r3, #8]
  000fc	e1500003	 cmp         r0, r3
  00100	1a00000a	 bne         |$LN2@UpdateTest|

; 1108 : 	{
; 1109 : 		g_pKato->Log(1, TEXT("Transition: SYSTEMIDLE->SUSPEND\r\n"));

  00104	e59f303c	 ldr         r3, [pc, #0x3C]
  00108	e59f1034	 ldr         r1, [pc, #0x34]
  0010c	e59f202c	 ldr         r2, [pc, #0x2C]
  00110	e5930000	 ldr         r0, [r3]
  00114	e5913000	 ldr         r3, [r1]
  00118	e3a01001	 mov         r1, #1
  0011c	e1a0e00f	 mov         lr, pc
  00120	e12fff13	 bx          r3
  00124		 |$LN11@UpdateTest|

; 1110 : 
; 1111 : 		g_TestStartTime = tcount;

  00124	e5865000	 str         r5, [r6]

; 1115 : 
; 1116 : 	return TRUE;

  00128	e3a00001	 mov         r0, #1
  0012c	ea000000	 b           |$LN9@UpdateTest|
  00130		 |$LN2@UpdateTest|

; 1112 : 	}
; 1113 : 	else
; 1114 : 		return FALSE;

  00130	e3a00000	 mov         r0, #0
  00134		 |$LN9@UpdateTest|

; 1117 : }

  00134	e28dd004	 add         sp, sp, #4
  00138	e8bd40f0	 ldmia       sp!, {r4 - r7, lr}
  0013c	e12fff1e	 bx          lr
  00140		 |$LN15@UpdateTest|
  00140		 |$LN16@UpdateTest|
  00140	00000000	 DCD         |??_C@_1EE@CBBDDOBO@?$AAT?$AAr?$AAa?$AAn?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AAI?$AAD?$AAL?$AAE?$AA?9?$AA?$DO?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AA?$AN@|
  00144		 |$LN17@UpdateTest|
  00144	00000000	 DCD         |__imp_?Log@CKato@@QAAHKPBGZZ|
  00148		 |$LN18@UpdateTest|
  00148	00000000	 DCD         |?g_pKato@@3PAVCKato@@A|
  0014c		 |$LN19@UpdateTest|
  0014c	00000000	 DCD         |??_C@_1JO@EDLNMEAP@?$AAT?$AAr?$AAa?$AAn?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AAU?$AAS?$AAE?$AAR?$AAI?$AAD?$AAL?$AAE?$AA?9?$AA?$DO?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AAI?$AAD?$AAL?$AAE@|
  00150		 |$LN20@UpdateTest|
  00150	00000000	 DCD         |?g_StateInfoTable@@3PAUStateInfo@@A|
  00154		 |$LN21@UpdateTest|
  00154	00000000	 DCD         |??_C@_1IO@GMDPPHDB@?$AAT?$AAr?$AAa?$AAn?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AAO?$AAN?$AA?9?$AA?$DO?$AAU?$AAS?$AAE?$AAR?$AAI?$AAD?$AAL?$AAE?$AA?0?$AA?5?$AAm?$AAe?$AAa?$AAs?$AAu?$AAr@|
  00158		 |$LN22@UpdateTest|
  00158	00000000	 DCD         |?dwStateId_useridle@@3KA|
  0015c		 |$LN23@UpdateTest|
  0015c	00000000	 DCD         |??_C@_1CO@FEHGJCJM@?$AAT?$AAr?$AAa?$AAn?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?3?$AA?5?$AAO?$AAN?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?$AN?$AA?6?$AA?$AA@|
  00160		 |$LN24@UpdateTest|
  00160	6b5fca6b	 DCD         0x6b5fca6b
  00164		 |$LN25@UpdateTest|
  00164	00000000	 DCD         |?dwStateId_on@@3KA|
  00168		 |$LN26@UpdateTest|
  00168	00000000	 DCD         |?g_TestStartTime@@3KA|
  0016c		 |$M33572|

			 ENDP  ; |?UpdateTestTicker@@YAHKK@Z|, UpdateTestTicker

	EXPORT	|??_C@_1FA@EOEDFPAC@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAP?$AAM?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAT@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T33597| DCD	|$LN8@StartPMNot|
	DCD	0x40001902

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@EOEDFPAC@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAP?$AAM?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAT@| DCB "F"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " "
	DCB	0x0, "t", 0x0, "o", 0x0, " ", 0x0, "c", 0x0, "r", 0x0, "e"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "P", 0x0, "M"
	DCB	0x0, "N", 0x0, "o", 0x0, "t", 0x0, "i", 0x0, "f", 0x0, "i"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, "T", 0x0, "h", 0x0, "r", 0x0, "e", 0x0, "a", 0x0, "d"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?StartPMNotifications@@YAHXZ| PROC	; StartPMNotifications

; 515  : {

  00000		 |$LN8@StartPMNot|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M33594|

; 516  : 	g_hPMThread2 = CreateThread(NULL,0,(LPTHREAD_START_ROUTINE)PMNotificationThread2,NULL,0,NULL);

  00008	e59f2050	 ldr         r2, [pc, #0x50]
  0000c	e3a0e000	 mov         lr, #0
  00010	e3a03000	 mov         r3, #0
  00014	e3a01000	 mov         r1, #0
  00018	e3a00000	 mov         r0, #0
  0001c	e58de004	 str         lr, [sp, #4]
  00020	e58de000	 str         lr, [sp]
  00024	eb000000	 bl          CreateThread
  00028	e59f302c	 ldr         r3, [pc, #0x2C]
  0002c	e3500000	 cmp         r0, #0
  00030	e5830000	 str         r0, [r3]

; 517  : 	if(g_hPMThread2 == NULL)

  00034	1a000003	 bne         |$LN1@StartPMNot|

; 518  : 	{
; 519  : 		RETAILMSG(1,(TEXT("Failed to create PMNotificationThread\r\n")));

  00038	e59f0018	 ldr         r0, [pc, #0x18]
  0003c	eb000000	 bl          NKDbgPrintfW

; 520  : 		return TPR_ABORT;

  00040	e3a00005	 mov         r0, #5
  00044	ea000000	 b           |$LN2@StartPMNot|
  00048		 |$LN1@StartPMNot|

; 521  : 	}
; 522  : 
; 523  : 	return TRUE;

  00048	e3a00001	 mov         r0, #1
  0004c		 |$LN2@StartPMNot|

; 524  : }

  0004c	e28dd008	 add         sp, sp, #8
  00050	e49de004	 ldr         lr, [sp], #4
  00054	e12fff1e	 bx          lr
  00058		 |$LN9@StartPMNot|
  00058		 |$LN10@StartPMNot|
  00058	00000000	 DCD         |??_C@_1FA@EOEDFPAC@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAP?$AAM?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAT@|
  0005c		 |$LN11@StartPMNot|
  0005c	00000000	 DCD         |?g_hPMThread2@@3PAXA|
  00060		 |$LN12@StartPMNot|
  00060	00000000	 DCD         |?PMNotificationThread2@@YAKXZ|
  00064		 |$M33595|

			 ENDP  ; |?StartPMNotifications@@YAHXZ|, StartPMNotifications

	EXPORT	|??_C@_1GC@MNKINKMA@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAp?$AAa?$AAr?$AAa?$AAm?$AAe?$AAt?$AAe?$AAr?$AAs?$AA?5?$AAp?$AAa?$AAs?$AAs?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAC?$AAh?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@MOOHLGBE@?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAt?$AAr?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GA@GEJMMJDJ@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAF?$AAi?$AAn?$AAi?$AAs?$AAh?$AAe?$AAd?$AA?5?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAo?$AAn?$AA?5?$AA?$CC?$AAS@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@DHACNHEC@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAo?$AAn?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAt?$AAo?$AA?5?$AAS?$AAu?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GI@BPELOFCG@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAF?$AAi?$AAn?$AAi?$AAs?$AAh?$AAe?$AAd?$AA?5?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAo?$AAn?$AA?5?$AA?$CC?$AAS@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@HBEFAMNM@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAo?$AAn?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAt?$AAo?$AA?5?$AAS?$AAy?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1GE@KCIONJEN@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAF?$AAi?$AAn?$AAi?$AAs?$AAh?$AAe?$AAd?$AA?5?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAo?$AAn?$AA?5?$AA?$CC?$AAU@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FC@IIOOPGDK@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAo?$AAn?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAt?$AAo?$AA?5?$AAU?$AAs?$AAe@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FG@BJDAAOMM@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAF?$AAi?$AAn?$AAi?$AAs?$AAh?$AAe?$AAd?$AA?5?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAo?$AAn?$AA?5?$AA?$CC?$AAO@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T33616| DCD	|$LN30@CheckState|
	DCD	0x4000d101

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GC@MNKINKMA@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAp?$AAa?$AAr?$AAa?$AAm?$AAe?$AAt?$AAe?$AAr?$AAs?$AA?5?$AAp?$AAa?$AAs?$AAs?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAC?$AAh?$AAe@| DCB "I"
	DCB	0x0, "n", 0x0, "v", 0x0, "a", 0x0, "l", 0x0, "i", 0x0, "d"
	DCB	0x0, " ", 0x0, "p", 0x0, "a", 0x0, "r", 0x0, "a", 0x0, "m"
	DCB	0x0, "e", 0x0, "t", 0x0, "e", 0x0, "r", 0x0, "s", 0x0, " "
	DCB	0x0, "p", 0x0, "a", 0x0, "s", 0x0, "s", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "C", 0x0, "h"
	DCB	0x0, "e", 0x0, "c", 0x0, "k", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, "M", 0x0, "a", 0x0, "c", 0x0, "h"
	DCB	0x0, "i", 0x0, "n", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@MOOHLGBE@?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAt?$AAr?$AAa@| DCB "R"
	DCB	0x0, "e", 0x0, "c", 0x0, "e", 0x0, "i", 0x0, "v", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "i", 0x0, "n", 0x0, "v", 0x0, "a"
	DCB	0x0, "l", 0x0, "i", 0x0, "d", 0x0, " ", 0x0, "p", 0x0, "o"
	DCB	0x0, "w", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "s", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "t", 0x0, "r"
	DCB	0x0, "a", 0x0, "n", 0x0, "s", 0x0, "i", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GA@GEJMMJDJ@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAF?$AAi?$AAn?$AAi?$AAs?$AAh?$AAe?$AAd?$AA?5?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAo?$AAn?$AA?5?$AA?$CC?$AAS@| DCB "T"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "F", 0x0, "i"
	DCB	0x0, "n", 0x0, "i", 0x0, "s", 0x0, "h", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "S", 0x0, "u", 0x0, "c", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "f", 0x0, "u", 0x0, "l", 0x0, "l"
	DCB	0x0, "y", 0x0, " ", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, """"
	DCB	0x0, "S", 0x0, "u", 0x0, "s", 0x0, "p", 0x0, "e", 0x0, "n"
	DCB	0x0, "d", 0x0, """", 0x0, " ", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@DHACNHEC@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAo?$AAn?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAt?$AAo?$AA?5?$AAS?$AAu?$AAs@| DCB "T"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "f", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "o"
	DCB	0x0, "n", 0x0, " ", 0x0, "t", 0x0, "r", 0x0, "a", 0x0, "n"
	DCB	0x0, "s", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "S", 0x0, "u"
	DCB	0x0, "s", 0x0, "p", 0x0, "e", 0x0, "n", 0x0, "d", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GI@BPELOFCG@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAF?$AAi?$AAn?$AAi?$AAs?$AAh?$AAe?$AAd?$AA?5?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAo?$AAn?$AA?5?$AA?$CC?$AAS@| DCB "T"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "F", 0x0, "i"
	DCB	0x0, "n", 0x0, "i", 0x0, "s", 0x0, "h", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "S", 0x0, "u", 0x0, "c", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "f", 0x0, "u", 0x0, "l", 0x0, "l"
	DCB	0x0, "y", 0x0, " ", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, """"
	DCB	0x0, "S", 0x0, "y", 0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m"
	DCB	0x0, " ", 0x0, "I", 0x0, "d", 0x0, "l", 0x0, "e", 0x0, """"
	DCB	0x0, " ", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@HBEFAMNM@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAo?$AAn?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAt?$AAo?$AA?5?$AAS?$AAy?$AAs@| DCB "T"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "f", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "o"
	DCB	0x0, "n", 0x0, " ", 0x0, "t", 0x0, "r", 0x0, "a", 0x0, "n"
	DCB	0x0, "s", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "S", 0x0, "y"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m", 0x0, " ", 0x0, "I"
	DCB	0x0, "d", 0x0, "l", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GE@KCIONJEN@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAF?$AAi?$AAn?$AAi?$AAs?$AAh?$AAe?$AAd?$AA?5?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAo?$AAn?$AA?5?$AA?$CC?$AAU@| DCB "T"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "F", 0x0, "i"
	DCB	0x0, "n", 0x0, "i", 0x0, "s", 0x0, "h", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "S", 0x0, "u", 0x0, "c", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "f", 0x0, "u", 0x0, "l", 0x0, "l"
	DCB	0x0, "y", 0x0, " ", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, """"
	DCB	0x0, "U", 0x0, "s", 0x0, "e", 0x0, "r", 0x0, " ", 0x0, "I"
	DCB	0x0, "d", 0x0, "l", 0x0, "e", 0x0, """", 0x0, " ", 0x0, "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FC@IIOOPGDK@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAo?$AAn?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAt?$AAo?$AA?5?$AAU?$AAs?$AAe@| DCB "T"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "f", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, " ", 0x0, "o"
	DCB	0x0, "n", 0x0, " ", 0x0, "t", 0x0, "r", 0x0, "a", 0x0, "n"
	DCB	0x0, "s", 0x0, "i", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, " ", 0x0, "t", 0x0, "o", 0x0, " ", 0x0, "U", 0x0, "s"
	DCB	0x0, "e", 0x0, "r", 0x0, " ", 0x0, "I", 0x0, "d", 0x0, "l"
	DCB	0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FG@BJDAAOMM@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAF?$AAi?$AAn?$AAi?$AAs?$AAh?$AAe?$AAd?$AA?5?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAo?$AAn?$AA?5?$AA?$CC?$AAO@| DCB "T"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "F", 0x0, "i"
	DCB	0x0, "n", 0x0, "i", 0x0, "s", 0x0, "h", 0x0, "e", 0x0, "d"
	DCB	0x0, " ", 0x0, "S", 0x0, "u", 0x0, "c", 0x0, "c", 0x0, "e"
	DCB	0x0, "s", 0x0, "s", 0x0, "f", 0x0, "u", 0x0, "l", 0x0, "l"
	DCB	0x0, "y", 0x0, " ", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, """"
	DCB	0x0, "O", 0x0, "n", 0x0, """", 0x0, " ", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?CheckStateMachine@@YAKPAU_POWER_BROADCAST@@PAU_FILETIME@@@Z| PROC ; CheckStateMachine

; 957  : {

  00000		 |$LN30@CheckState|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M33613|
  00004	e1a06001	 mov         r6, r1
  00008	e1b04000	 movs        r4, r0

; 958  : 	if(ppb == NULL || systime == NULL)

  0000c	0a0000b0	 beq         |$LN20@CheckState|
  00010	e3560000	 cmp         r6, #0
  00014	0a0000ae	 beq         |$LN20@CheckState|

; 962  : 	}
; 963  : 
; 964  : 	if(wcsncmp(ppb->SystemPowerState,SSTATE_NAME_ON,sizeof(ppb->SystemPowerState))==0)

  00018	e59f1320	 ldr         r1, [pc, #0x320]
  0001c	e284000c	 add         r0, r4, #0xC
  00020	e3a02002	 mov         r2, #2
  00024	eb000000	 bl          wcsncmp
  00028	e3500000	 cmp         r0, #0
  0002c	1a000017	 bne         |$LN19@CheckState|

; 965  : 	{
; 966  : 		//RETAILMSG(1,(TEXT("got state1: %s, %x\r\n"),g_StateInfoTable[dwStateId_on].szStateName,g_StateInfoTable[dwStateId_on].dwStateTimeout));
; 967  : 		
; 968  : 		bOnState = TRUE;

  00030	e59f42e4	 ldr         r4, [pc, #0x2E4]
  00034	e3a03001	 mov         r3, #1

; 969  : 
; 970  : 		if(!UpdateTestTicker(dwStateId_on, systime->dwLowDateTime))

  00038	e5940000	 ldr         r0, [r4]
  0003c	e5843004	 str         r3, [r4, #4]
  00040	e5961000	 ldr         r1, [r6]
  00044	eb000000	 bl          |?UpdateTestTicker@@YAHKK@Z|
  00048	e3500000	 cmp         r0, #0

; 971  : 			return TEST_ERROR;

  0004c	0a0000a8	 beq         |$LN24@CheckState|

; 972  : 
; 973  : 		if(IsLastState(dwStateId_on))

  00050	e5945000	 ldr         r5, [r4]
  00054	e1a00005	 mov         r0, r5
  00058	eb000000	 bl          |?IsLastState@@YAHK@Z|
  0005c	e3500000	 cmp         r0, #0
  00060	0a000036	 beq         |$LN12@CheckState|

; 974  : 		{
; 975  : 			g_pKato->Log(LOG_DETAIL,(TEXT("Test Finished Successfully on \"On\" State\r\n")));

  00064	e59f329c	 ldr         r3, [pc, #0x29C]
  00068	e59f1294	 ldr         r1, [pc, #0x294]
  0006c	e59f22c8	 ldr         r2, [pc, #0x2C8]
  00070	e5930000	 ldr         r0, [r3]
  00074	e5913000	 ldr         r3, [r1]
  00078	e3a0100c	 mov         r1, #0xC
  0007c	e1a0e00f	 mov         lr, pc
  00080	e12fff13	 bx          r3
  00084		 |$LN26@CheckState|

; 976  : 			return TEST_COMPLETE;

  00084	e3a0000a	 mov         r0, #0xA

; 1059 : }

  00088	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0008c	e12fff1e	 bx          lr
  00090		 |$LN19@CheckState|

; 977  : 		}
; 978  : 
; 979  : 		g_PreviousState = dwStateId_on;
; 980  : 	}
; 981  : 	else if(wcsncmp(ppb->SystemPowerState,SSTATE_NAME_USERIDLE,sizeof(ppb->SystemPowerState))==0)

  00090	e59f12a0	 ldr         r1, [pc, #0x2A0]
  00094	e3a02002	 mov         r2, #2
  00098	e284000c	 add         r0, r4, #0xC
  0009c	eb000000	 bl          wcsncmp
  000a0	e3500000	 cmp         r0, #0
  000a4	1a000029	 bne         |$LN15@CheckState|

; 982  : 	{
; 983  : 		//RETAILMSG(1,(TEXT("got state2: %s, %x\r\n"),g_StateInfoTable[dwStateId_useridle].szStateName,g_StateInfoTable[dwStateId_useridle].dwStateTimeout));
; 984  : 		bUserIdleState = TRUE;

  000a8	e59f426c	 ldr         r4, [pc, #0x26C]
  000ac	e3a01001	 mov         r1, #1

; 985  : 
; 986  : 		// we got user idle state, if previous state wasn't on, something is wrong
; 987  : 		if(g_PreviousState != dwStateId_on)

  000b0	e5942038	 ldr         r2, [r4, #0x38]
  000b4	e5943000	 ldr         r3, [r4]
  000b8	e5841008	 str         r1, [r4, #8]
  000bc	e1520003	 cmp         r2, r3
  000c0	0a00000a	 beq         |$LN14@CheckState|

; 988  : 		{
; 989  : 			g_pKato->Log(LOG_DETAIL,(TEXT("Test failed on transition to User Idle\r\n")));

  000c4	e59f323c	 ldr         r3, [pc, #0x23C]
  000c8	e59f1234	 ldr         r1, [pc, #0x234]
  000cc	e59f2260	 ldr         r2, [pc, #0x260]
  000d0	e5930000	 ldr         r0, [r3]
  000d4	e5913000	 ldr         r3, [r1]
  000d8	e3a0100c	 mov         r1, #0xC
  000dc	e1a0e00f	 mov         lr, pc
  000e0	e12fff13	 bx          r3
  000e4		 |$LN27@CheckState|

; 990  : 			return TEST_FAIL;

  000e4	e3a00010	 mov         r0, #0x10

; 1059 : }

  000e8	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  000ec	e12fff1e	 bx          lr
  000f0		 |$LN14@CheckState|

; 991  : 		}
; 992  : 
; 993  : 		// check this state's timeout to see if it matches the registry
; 994  : 		if(!UpdateTestTicker(dwStateId_useridle, systime->dwLowDateTime))

  000f0	e59f5220	 ldr         r5, [pc, #0x220]
  000f4	e5961000	 ldr         r1, [r6]
  000f8	e5950000	 ldr         r0, [r5]
  000fc	eb000000	 bl          |?UpdateTestTicker@@YAHKK@Z|
  00100	e3500000	 cmp         r0, #0

; 995  : 			return TEST_ERROR;

  00104	0a00007a	 beq         |$LN24@CheckState|

; 996  : 		
; 997  : 		if(IsLastState(dwStateId_useridle))

  00108	e5955000	 ldr         r5, [r5]
  0010c	e1a00005	 mov         r0, r5
  00110	eb000000	 bl          |?IsLastState@@YAHK@Z|
  00114	e3500000	 cmp         r0, #0
  00118	0a000008	 beq         |$LN12@CheckState|

; 998  : 		{
; 999  : 			g_pKato->Log(LOG_DETAIL,(TEXT("Test Finished Successfully on \"User Idle\" State\r\n")));

  0011c	e59f31e4	 ldr         r3, [pc, #0x1E4]
  00120	e59f11dc	 ldr         r1, [pc, #0x1DC]
  00124	e59f2204	 ldr         r2, [pc, #0x204]
  00128	e5930000	 ldr         r0, [r3]
  0012c	e5913000	 ldr         r3, [r1]
  00130	e3a0100c	 mov         r1, #0xC
  00134	e1a0e00f	 mov         lr, pc
  00138	e12fff13	 bx          r3

; 1000 : 			return TEST_COMPLETE;

  0013c	eaffffd0	 b           |$LN26@CheckState|
  00140		 |$LN12@CheckState|

; 1001 : 		}
; 1002 : 
; 1003 : 		g_PreviousState = dwStateId_useridle;

  00140	e5845038	 str         r5, [r4, #0x38]

; 1056 : 	}
; 1057 : 
; 1058 : 	return TRUE;

  00144	e3a00001	 mov         r0, #1

; 1059 : }

  00148	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0014c	e12fff1e	 bx          lr
  00150		 |$LN15@CheckState|

; 1004 : 	}
; 1005 : 	else if(wcsncmp(ppb->SystemPowerState,SSTATE_NAME_SYSTEMIDLE,sizeof(ppb->SystemPowerState))==0)

  00150	e59f11d4	 ldr         r1, [pc, #0x1D4]
  00154	e3a02002	 mov         r2, #2
  00158	e284000c	 add         r0, r4, #0xC
  0015c	eb000000	 bl          wcsncmp
  00160	e3500000	 cmp         r0, #0
  00164	1a000023	 bne         |$LN10@CheckState|

; 1006 : 	{
; 1007 : 		//RETAILMSG(1,(TEXT("got state3: %s, %x\r\n"),g_StateInfoTable[dwStateId_systemidle].szStateName,g_StateInfoTable[dwStateId_systemidle].dwStateTimeout));
; 1008 : 		bSystemIdleState = TRUE;

  00168	e59f51ac	 ldr         r5, [pc, #0x1AC]

; 1009 : 
; 1010 : 		// we got system idle state, if previous state wasn't user idle, something is wrong
; 1011 : 		if(g_PreviousState != dwStateId_useridle)

  0016c	e59f41a4	 ldr         r4, [pc, #0x1A4]
  00170	e3a01001	 mov         r1, #1
  00174	e5952038	 ldr         r2, [r5, #0x38]
  00178	e5943000	 ldr         r3, [r4]
  0017c	e585100c	 str         r1, [r5, #0xC]
  00180	e1520003	 cmp         r2, r3
  00184	0a000008	 beq         |$LN9@CheckState|

; 1012 : 		{
; 1013 : 			g_pKato->Log(LOG_DETAIL,(TEXT("Test failed on transition to System Idle\r\n")));

  00188	e59f3178	 ldr         r3, [pc, #0x178]
  0018c	e59f1170	 ldr         r1, [pc, #0x170]
  00190	e59f2190	 ldr         r2, [pc, #0x190]
  00194	e5930000	 ldr         r0, [r3]
  00198	e5913000	 ldr         r3, [r1]
  0019c	e3a0100c	 mov         r1, #0xC
  001a0	e1a0e00f	 mov         lr, pc
  001a4	e12fff13	 bx          r3

; 1014 : 			return TEST_FAIL;

  001a8	eaffffcd	 b           |$LN27@CheckState|
  001ac		 |$LN9@CheckState|

; 1015 : 		}
; 1016 : 
; 1017 : 		if(!UpdateTestTicker(dwStateId_systemidle, systime->dwLowDateTime))

  001ac	e5961000	 ldr         r1, [r6]
  001b0	e5940004	 ldr         r0, [r4, #4]
  001b4	eb000000	 bl          |?UpdateTestTicker@@YAHKK@Z|
  001b8	e3500000	 cmp         r0, #0

; 1018 : 			return TEST_ERROR;

  001bc	0a00004c	 beq         |$LN24@CheckState|

; 1019 : 
; 1020 : 		if(IsLastState(dwStateId_systemidle))

  001c0	e5944004	 ldr         r4, [r4, #4]
  001c4	e1a00004	 mov         r0, r4
  001c8	eb000000	 bl          |?IsLastState@@YAHK@Z|
  001cc	e3500000	 cmp         r0, #0
  001d0	0a000032	 beq         |$LN2@CheckState|

; 1021 : 		{
; 1022 : 			g_pKato->Log(LOG_DETAIL,(TEXT("Test Finished Successfully on \"System Idle\" State\r\n")));

  001d4	e59f312c	 ldr         r3, [pc, #0x12C]
  001d8	e59f1124	 ldr         r1, [pc, #0x124]
  001dc	e59f2140	 ldr         r2, [pc, #0x140]
  001e0	e5930000	 ldr         r0, [r3]
  001e4	e5913000	 ldr         r3, [r1]
  001e8	e3a0100c	 mov         r1, #0xC
  001ec	e1a0e00f	 mov         lr, pc
  001f0	e12fff13	 bx          r3

; 1023 : 			return TEST_COMPLETE;
; 1024 : 		}
; 1025 : 
; 1026 : 		g_PreviousState = dwStateId_systemidle;

  001f4	eaffffa2	 b           |$LN26@CheckState|
  001f8		 |$LN10@CheckState|

; 1027 : 	}
; 1028 : 	else if(wcsncmp(ppb->SystemPowerState,SSTATE_NAME_SUSPEND,sizeof(ppb->SystemPowerState))==0)

  001f8	e59f1120	 ldr         r1, [pc, #0x120]
  001fc	e3a02002	 mov         r2, #2
  00200	e284000c	 add         r0, r4, #0xC
  00204	eb000000	 bl          wcsncmp
  00208	e3500000	 cmp         r0, #0
  0020c	1a000027	 bne         |$LN5@CheckState|

; 1029 : 	{
; 1030 : 		//RETAILMSG(1,(TEXT("got state4: %s, %x\r\n"),g_StateInfoTable[dwStateId_suspend].szStateName,g_StateInfoTable[dwStateId_suspend].dwStateTimeout));
; 1031 : 		bSuspendState = TRUE;

  00210	e59f5104	 ldr         r5, [pc, #0x104]

; 1032 : 
; 1033 : 		// we got suspend state, if previous state wasn't system idle, something is wrong
; 1034 : 		if(g_PreviousState != dwStateId_systemidle)

  00214	e59f40fc	 ldr         r4, [pc, #0xFC]
  00218	e3a01001	 mov         r1, #1
  0021c	e5952038	 ldr         r2, [r5, #0x38]
  00220	e5943004	 ldr         r3, [r4, #4]
  00224	e5851010	 str         r1, [r5, #0x10]
  00228	e1520003	 cmp         r2, r3
  0022c	0a000008	 beq         |$LN4@CheckState|

; 1035 : 		{
; 1036 : 			g_pKato->Log(LOG_DETAIL,(TEXT("Test failed on transition to Suspend\r\n")));

  00230	e59f30d0	 ldr         r3, [pc, #0xD0]
  00234	e59f10c8	 ldr         r1, [pc, #0xC8]
  00238	e59f20d4	 ldr         r2, [pc, #0xD4]
  0023c	e5930000	 ldr         r0, [r3]
  00240	e5913000	 ldr         r3, [r1]
  00244	e3a0100c	 mov         r1, #0xC
  00248	e1a0e00f	 mov         lr, pc
  0024c	e12fff13	 bx          r3

; 1037 : 			return TEST_FAIL;

  00250	eaffffa3	 b           |$LN27@CheckState|
  00254		 |$LN4@CheckState|

; 1038 : 		}
; 1039 : 
; 1040 : 		if(!UpdateTestTicker(dwStateId_suspend, systime->dwLowDateTime))

  00254	e5961000	 ldr         r1, [r6]
  00258	e5940008	 ldr         r0, [r4, #8]
  0025c	eb000000	 bl          |?UpdateTestTicker@@YAHKK@Z|
  00260	e3500000	 cmp         r0, #0

; 1041 : 			return TEST_ERROR;

  00264	0a000022	 beq         |$LN24@CheckState|

; 1042 : 
; 1043 : 		if(IsLastState(dwStateId_suspend))

  00268	e5944008	 ldr         r4, [r4, #8]
  0026c	e1a00004	 mov         r0, r4
  00270	eb000000	 bl          |?IsLastState@@YAHK@Z|
  00274	e3500000	 cmp         r0, #0
  00278	0a000008	 beq         |$LN2@CheckState|

; 1044 : 		{
; 1045 : 			g_pKato->Log(LOG_DETAIL,(TEXT("Test Finished Successfully on \"Suspend\" State\r\n")));

  0027c	e59f3084	 ldr         r3, [pc, #0x84]
  00280	e59f107c	 ldr         r1, [pc, #0x7C]
  00284	e59f2084	 ldr         r2, [pc, #0x84]
  00288	e5930000	 ldr         r0, [r3]
  0028c	e5913000	 ldr         r3, [r1]
  00290	e3a0100c	 mov         r1, #0xC
  00294	e1a0e00f	 mov         lr, pc
  00298	e12fff13	 bx          r3

; 1046 : 			return TEST_COMPLETE;

  0029c	eaffff78	 b           |$LN26@CheckState|
  002a0		 |$LN2@CheckState|

; 1047 : 		}
; 1048 : 
; 1049 : 		g_PreviousState = dwStateId_suspend;

  002a0	e5854038	 str         r4, [r5, #0x38]

; 1056 : 	}
; 1057 : 
; 1058 : 	return TRUE;

  002a4	e3a00001	 mov         r0, #1

; 1059 : }

  002a8	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  002ac	e12fff1e	 bx          lr
  002b0		 |$LN5@CheckState|

; 1050 : 	}
; 1051 : 	else
; 1052 : 	{
; 1053 : 		// PM notified us of a state that shouldn't be transitioning to
; 1054 : 		g_pKato->Log(LOG_DETAIL,(TEXT("Received invalid power state transition\r\n")));

  002b0	e59f3050	 ldr         r3, [pc, #0x50]
  002b4	e59f1048	 ldr         r1, [pc, #0x48]
  002b8	e59f204c	 ldr         r2, [pc, #0x4C]
  002bc	e5930000	 ldr         r0, [r3]
  002c0	e5913000	 ldr         r3, [r1]
  002c4	e3a0100c	 mov         r1, #0xC
  002c8	e1a0e00f	 mov         lr, pc
  002cc	e12fff13	 bx          r3

; 1055 : 		return TEST_FAIL;

  002d0	eaffff83	 b           |$LN27@CheckState|
  002d4		 |$LN20@CheckState|

; 959  : 	{
; 960  : 		g_pKato->Log(LOG_ABORT,(TEXT("Invalid parameters passed to CheckStateMachine\r\n")));

  002d4	e59f302c	 ldr         r3, [pc, #0x2C]
  002d8	e59f1024	 ldr         r1, [pc, #0x24]
  002dc	e59f201c	 ldr         r2, [pc, #0x1C]
  002e0	e5930000	 ldr         r0, [r3]
  002e4	e5913000	 ldr         r3, [r1]
  002e8	e3a01004	 mov         r1, #4
  002ec	e1a0e00f	 mov         lr, pc
  002f0	e12fff13	 bx          r3
  002f4		 |$LN24@CheckState|

; 961  : 		return TEST_ERROR;

  002f4	e3a0000d	 mov         r0, #0xD

; 1059 : }

  002f8	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  002fc	e12fff1e	 bx          lr
  00300		 |$LN31@CheckState|
  00300		 |$LN32@CheckState|
  00300	00000000	 DCD         |??_C@_1GC@MNKINKMA@?$AAI?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAp?$AAa?$AAr?$AAa?$AAm?$AAe?$AAt?$AAe?$AAr?$AAs?$AA?5?$AAp?$AAa?$AAs?$AAs?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAC?$AAh?$AAe@|
  00304		 |$LN33@CheckState|
  00304	00000000	 DCD         |__imp_?Log@CKato@@QAAHKPBGZZ|
  00308		 |$LN34@CheckState|
  00308	00000000	 DCD         |?g_pKato@@3PAVCKato@@A|
  0030c		 |$LN35@CheckState|
  0030c	00000000	 DCD         |??_C@_1FE@MOOHLGBE@?$AAR?$AAe?$AAc?$AAe?$AAi?$AAv?$AAe?$AAd?$AA?5?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAp?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAt?$AAr?$AAa@|
  00310		 |$LN36@CheckState|
  00310	00000000	 DCD         |??_C@_1GA@GEJMMJDJ@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAF?$AAi?$AAn?$AAi?$AAs?$AAh?$AAe?$AAd?$AA?5?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAo?$AAn?$AA?5?$AA?$CC?$AAS@|
  00314		 |$LN37@CheckState|
  00314	00000000	 DCD         |??_C@_1EO@DHACNHEC@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAo?$AAn?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAt?$AAo?$AA?5?$AAS?$AAu?$AAs@|
  00318		 |$LN38@CheckState|
  00318	00000000	 DCD         |?dwStateId_useridle@@3KA|
  0031c		 |$LN39@CheckState|
  0031c	00000000	 DCD         |?dwStateId_on@@3KA|
  00320		 |$LN40@CheckState|
  00320	00000000	 DCD         |??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@|
  00324		 |$LN41@CheckState|
  00324	00000000	 DCD         |??_C@_1GI@BPELOFCG@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAF?$AAi?$AAn?$AAi?$AAs?$AAh?$AAe?$AAd?$AA?5?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAo?$AAn?$AA?5?$AA?$CC?$AAS@|
  00328		 |$LN42@CheckState|
  00328	00000000	 DCD         |??_C@_1FG@HBEFAMNM@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAo?$AAn?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAt?$AAo?$AA?5?$AAS?$AAy?$AAs@|
  0032c		 |$LN43@CheckState|
  0032c	00000000	 DCD         |??_C@_1BG@COFBNNCL@?$AAs?$AAy?$AAs?$AAt?$AAe?$AAm?$AAi?$AAd?$AAl?$AAe?$AA?$AA@|
  00330		 |$LN44@CheckState|
  00330	00000000	 DCD         |??_C@_1GE@KCIONJEN@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAF?$AAi?$AAn?$AAi?$AAs?$AAh?$AAe?$AAd?$AA?5?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAo?$AAn?$AA?5?$AA?$CC?$AAU@|
  00334		 |$LN45@CheckState|
  00334	00000000	 DCD         |??_C@_1FC@IIOOPGDK@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAo?$AAn?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAt?$AAo?$AA?5?$AAU?$AAs?$AAe@|
  00338		 |$LN46@CheckState|
  00338	00000000	 DCD         |??_C@_1BC@IJEKHFDC@?$AAu?$AAs?$AAe?$AAr?$AAi?$AAd?$AAl?$AAe?$AA?$AA@|
  0033c		 |$LN47@CheckState|
  0033c	00000000	 DCD         |??_C@_1FG@BJDAAOMM@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAF?$AAi?$AAn?$AAi?$AAs?$AAh?$AAe?$AAd?$AA?5?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAo?$AAn?$AA?5?$AA?$CC?$AAO@|
  00340		 |$LN48@CheckState|
  00340	00000000	 DCD         |??_C@_15GMGGGDOD@?$AAo?$AAn?$AA?$AA@|
  00344		 |$M33614|

			 ENDP  ; |?CheckStateMachine@@YAKPAU_POWER_BROADCAST@@PAU_FILETIME@@@Z|, CheckStateMachine

	EXPORT	|?TestPowerStates@@YAHIPAKPAU_FUNCTION_TABLE_ENTRY@@@Z| ; TestPowerStates
	EXPORT	|??_C@_1EA@FDCBOILK@?$AAR?$AAe?$AAs?$AAt?$AAo?$AAr?$AAe?$AA?5?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EO@ECFDONO@?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAn?$AA?0?$AA?5?$AAt?$AAe?$AAs?$AAt?$AA?5?$AAf?$AAa?$AAi@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FE@GJFPBNGL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AAI?$AAD?$AAL?$AAE?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAn?$AA?0?$AA?5?$AAt?$AAe?$AAs?$AAt?$AA?5@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FA@FBKOKNDN@?$AAU?$AAS?$AAE?$AAR?$AAI?$AAD?$AAL?$AAE?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAn?$AA?0?$AA?5?$AAt?$AAe?$AAs?$AAt?$AA?5?$AAf?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EE@MJBHFAGK@?$AAO?$AAN?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAn?$AA?0?$AA?5?$AAt?$AAe?$AAs?$AAt?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$CB?$AA?$AN@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CM@HFCBIJPE@?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAs?$AAe?$AAe?$AAn?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DC@KHBLKIHC@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AAI?$AAD?$AAL?$AAE?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAs?$AAe?$AAe?$AAn?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1HM@GGKMMLIC@?$AAT?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?0?$AA?5?$AAp?$AAl?$AAe?$AAa?$AAs?$AAe?$AA?5?$AAw?$AAa@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CO@JNLECNJ@?$AAU?$AAS?$AAE?$AAR?$AAI?$AAD?$AAL?$AAE?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAs?$AAe?$AAe?$AAn?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DI@CLJLDKGD@?$AAT?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AAI?$AAD?$AAL?$AAE?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@EPEEMMFL@?$AAO?$AAN?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAs?$AAe?$AAe?$AAn?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1DE@DGFCAPHC@?$AAT?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAU?$AAS?$AAE?$AAR?$AAI?$AAD?$AAL?$AAE?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@OACPGEEM@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CI@OHKBINOF@?$AAT?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAO?$AAN?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EG@MIEFDNJL@?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAP?$AAM?$AA?5?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs@| [ DATA ] ; `string'
	EXPORT	|??_C@_1FK@NNJALGKB@?$AAS?$AAa?$AAv?$AAi?$AAn?$AAg?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAS?$AAt?$AAa?$AAt@| [ DATA ] ; `string'
	IMPORT	|TerminateThread|
	IMPORT	|GetExitCodeThread|
	IMPORT	|?g_StressCount@@3KA|			; g_StressCount

  00000			 AREA	 |.pdata|, PDATA
|$T33662| DCD	|$LN38@TestPowerS|
	DCD	0x4000e602

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EA@FDCBOILK@?$AAR?$AAe?$AAs?$AAt?$AAo?$AAr?$AAe?$AA?5?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@| DCB "R"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, "o", 0x0, "r", 0x0, "e"
	DCB	0x0, " ", 0x0, "S", 0x0, "y", 0x0, "s", 0x0, "t", 0x0, "e"
	DCB	0x0, "m", 0x0, " ", 0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, " ", 0x0, "T", 0x0, "i", 0x0, "m", 0x0, "e"
	DCB	0x0, "o", 0x0, "u", 0x0, "t", 0x0, "s", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EO@ECFDONO@?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAn?$AA?0?$AA?5?$AAt?$AAe?$AAs?$AAt?$AA?5?$AAf?$AAa?$AAi@| DCB "S"
	DCB	0x0, "U", 0x0, "S", 0x0, "P", 0x0, "E", 0x0, "N", 0x0, "D"
	DCB	0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, " ", 0x0, "s"
	DCB	0x0, "e", 0x0, "e", 0x0, "n", 0x0, ",", 0x0, " ", 0x0, "t"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "f", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, "!", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FE@GJFPBNGL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AAI?$AAD?$AAL?$AAE?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAn?$AA?0?$AA?5?$AAt?$AAe?$AAs?$AAt?$AA?5@| DCB "S"
	DCB	0x0, "Y", 0x0, "S", 0x0, "T", 0x0, "E", 0x0, "M", 0x0, "I"
	DCB	0x0, "D", 0x0, "L", 0x0, "E", 0x0, " ", 0x0, "s", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "n", 0x0, "o"
	DCB	0x0, "t", 0x0, " ", 0x0, "s", 0x0, "e", 0x0, "e", 0x0, "n"
	DCB	0x0, ",", 0x0, " ", 0x0, "t", 0x0, "e", 0x0, "s", 0x0, "t"
	DCB	0x0, " ", 0x0, "f", 0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e"
	DCB	0x0, "d", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FA@FBKOKNDN@?$AAU?$AAS?$AAE?$AAR?$AAI?$AAD?$AAL?$AAE?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAn?$AA?0?$AA?5?$AAt?$AAe?$AAs?$AAt?$AA?5?$AAf?$AAa@| DCB "U"
	DCB	0x0, "S", 0x0, "E", 0x0, "R", 0x0, "I", 0x0, "D", 0x0, "L"
	DCB	0x0, "E", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, " "
	DCB	0x0, "s", 0x0, "e", 0x0, "e", 0x0, "n", 0x0, ",", 0x0, " "
	DCB	0x0, "t", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, "!"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EE@MJBHFAGK@?$AAO?$AAN?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAn?$AA?0?$AA?5?$AAt?$AAe?$AAs?$AAt?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$CB?$AA?$AN@| DCB "O"
	DCB	0x0, "N", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, " ", 0x0, "n", 0x0, "o", 0x0, "t", 0x0, " "
	DCB	0x0, "s", 0x0, "e", 0x0, "e", 0x0, "n", 0x0, ",", 0x0, " "
	DCB	0x0, "t", 0x0, "e", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "f"
	DCB	0x0, "a", 0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, "!"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CM@HFCBIJPE@?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAs?$AAe?$AAe?$AAn?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "U", 0x0, "S", 0x0, "P", 0x0, "E", 0x0, "N", 0x0, "D"
	DCB	0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e"
	DCB	0x0, " ", 0x0, "s", 0x0, "e", 0x0, "e", 0x0, "n", 0x0, "!"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DC@KHBLKIHC@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AAI?$AAD?$AAL?$AAE?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAs?$AAe?$AAe?$AAn?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "Y", 0x0, "S", 0x0, "T", 0x0, "E", 0x0, "M", 0x0, "I"
	DCB	0x0, "D", 0x0, "L", 0x0, "E", 0x0, " ", 0x0, "s", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "s", 0x0, "e"
	DCB	0x0, "e", 0x0, "n", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1HM@GGKMMLIC@?$AAT?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?0?$AA?5?$AAp?$AAl?$AAe?$AAa?$AAs?$AAe?$AA?5?$AAw?$AAa@| DCB "T"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "S", 0x0, "U", 0x0, "S", 0x0, "P", 0x0, "E"
	DCB	0x0, "N", 0x0, "D", 0x0, " ", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, ",", 0x0, " ", 0x0, "p", 0x0, "l"
	DCB	0x0, "e", 0x0, "a", 0x0, "s", 0x0, "e", 0x0, " ", 0x0, "w"
	DCB	0x0, "a", 0x0, "k", 0x0, "e", 0x0, " ", 0x0, "s", 0x0, "y"
	DCB	0x0, "s", 0x0, "t", 0x0, "e", 0x0, "m", 0x0, " ", 0x0, "t"
	DCB	0x0, "o", 0x0, " ", 0x0, "c", 0x0, "o", 0x0, "n", 0x0, "t"
	DCB	0x0, "i", 0x0, "n", 0x0, "u", 0x0, "e", 0x0, " ", 0x0, "t"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, ":", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CO@JNLECNJ@?$AAU?$AAS?$AAE?$AAR?$AAI?$AAD?$AAL?$AAE?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAs?$AAe?$AAe?$AAn?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| DCB "U"
	DCB	0x0, "S", 0x0, "E", 0x0, "R", 0x0, "I", 0x0, "D", 0x0, "L"
	DCB	0x0, "E", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, " ", 0x0, "s", 0x0, "e", 0x0, "e", 0x0, "n"
	DCB	0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DI@CLJLDKGD@?$AAT?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AAI?$AAD?$AAL?$AAE?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| DCB "T"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "S", 0x0, "Y", 0x0, "S", 0x0, "T", 0x0, "E"
	DCB	0x0, "M", 0x0, "I", 0x0, "D", 0x0, "L", 0x0, "E", 0x0, " "
	DCB	0x0, "S", 0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, ":"
	DCB	0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@EPEEMMFL@?$AAO?$AAN?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAs?$AAe?$AAe?$AAn?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| DCB "O"
	DCB	0x0, "N", 0x0, " ", 0x0, "s", 0x0, "t", 0x0, "a", 0x0, "t"
	DCB	0x0, "e", 0x0, " ", 0x0, "s", 0x0, "e", 0x0, "e", 0x0, "n"
	DCB	0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1DE@DGFCAPHC@?$AAT?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAU?$AAS?$AAE?$AAR?$AAI?$AAD?$AAL?$AAE?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| DCB "T"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "U", 0x0, "S", 0x0, "E", 0x0, "R", 0x0, "I"
	DCB	0x0, "D", 0x0, "L", 0x0, "E", 0x0, " ", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, ":", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@OACPGEEM@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| DCB "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "r", 0x0, "t", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "T", 0x0, "e", 0x0, "s", 0x0, "t"
	DCB	0x0, ":", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CI@OHKBINOF@?$AAT?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAO?$AAN?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?3?$AA?$AN?$AA?6?$AA?$AA@| DCB "T"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, "i", 0x0, "n", 0x0, "g"
	DCB	0x0, " ", 0x0, "O", 0x0, "N", 0x0, " ", 0x0, "S", 0x0, "t"
	DCB	0x0, "a", 0x0, "t", 0x0, "e", 0x0, ":", 0x0, 0xd, 0x0, 0xa
	DCB	0x0, 0x0, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EG@MIEFDNJL@?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAP?$AAM?$AA?5?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs@| DCB "R"
	DCB	0x0, "e", 0x0, "g", 0x0, "i", 0x0, "s", 0x0, "t", 0x0, "e"
	DCB	0x0, "r", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " ", 0x0, "f"
	DCB	0x0, "o", 0x0, "r", 0x0, " ", 0x0, "P", 0x0, "M", 0x0, " "
	DCB	0x0, "N", 0x0, "o", 0x0, "t", 0x0, "i", 0x0, "f", 0x0, "i"
	DCB	0x0, "c", 0x0, "a", 0x0, "t", 0x0, "i", 0x0, "o", 0x0, "n"
	DCB	0x0, "s", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1FK@NNJALGKB@?$AAS?$AAa?$AAv?$AAi?$AAn?$AAg?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAS?$AAt?$AAa?$AAt@| DCB "S"
	DCB	0x0, "a", 0x0, "v", 0x0, "i", 0x0, "n", 0x0, "g", 0x0, " "
	DCB	0x0, "a", 0x0, "n", 0x0, "d", 0x0, " ", 0x0, "D", 0x0, "i"
	DCB	0x0, "s", 0x0, "a", 0x0, "b", 0x0, "l", 0x0, "i", 0x0, "n"
	DCB	0x0, "g", 0x0, " ", 0x0, "S", 0x0, "y", 0x0, "s", 0x0, "t"
	DCB	0x0, "e", 0x0, "m", 0x0, " ", 0x0, "S", 0x0, "t", 0x0, "a"
	DCB	0x0, "t", 0x0, "e", 0x0, " ", 0x0, "T", 0x0, "i", 0x0, "m"
	DCB	0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, "s", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?TestPowerStates@@YAHIPAKPAU_FUNCTION_TABLE_ENTRY@@@Z| PROC ; TestPowerStates

; 135  : {

  00000		 |$LN38@TestPowerS|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M33659|

; 136  : 	DWORD dwExitCode;
; 137  : 	DWORD dwRet;
; 138  : 
; 139  :     if(uMsg != TPM_EXECUTE)

  00008	e3500065	 cmp         r0, #0x65

; 140  :     {
; 141  :         return TPR_NOT_HANDLED;

  0000c	13a04000	 movne       r4, #0
  00010	1a0000a9	 bne         |$LN22@TestPowerS|

; 142  :     }
; 143  : 
; 144  : 	// disable all of the system state timeouts so we don't go into any of
; 145  : 	// the states accidentally.
; 146  : 	g_pKato->Log(LOG_COMMENT,(TEXT("Saving and Disabling System State Timeouts\r\n")));

  00014	e59f5378	 ldr         r5, [pc, #0x378]
  00018	e59f3314	 ldr         r3, [pc, #0x314]
  0001c	e59f236c	 ldr         r2, [pc, #0x36C]
  00020	e5950000	 ldr         r0, [r5]
  00024	e5933000	 ldr         r3, [r3]
  00028	e3a0100e	 mov         r1, #0xE
  0002c	e1a0e00f	 mov         lr, pc
  00030	e12fff13	 bx          r3

; 147  : 	if(!DisableStateTimeouts())

  00034	eb000000	 bl          |?DisableStateTimeouts@@YAHXZ|
  00038	e3500000	 cmp         r0, #0
  0003c	e59f8348	 ldr         r8, [pc, #0x348]
  00040	e59f6340	 ldr         r6, [pc, #0x340]

; 148  : 	{
; 149  : 		dwRet = TPR_ABORT;

  00044	03a04005	 moveq       r4, #5
  00048	0a000086	 beq         |$end$32782|

; 150  : 		goto end;
; 151  : 	}
; 152  : 
; 153  : 	// start watching for the PM notifications
; 154  : 	g_pKato->Log(LOG_COMMENT,(TEXT("Registering for PM Notifications\r\n")));

  0004c	e59f32e0	 ldr         r3, [pc, #0x2E0]
  00050	e59f232c	 ldr         r2, [pc, #0x32C]
  00054	e5950000	 ldr         r0, [r5]
  00058	e5933000	 ldr         r3, [r3]
  0005c	e3a0100e	 mov         r1, #0xE
  00060	e1a0e00f	 mov         lr, pc
  00064	e12fff13	 bx          r3

; 155  : 	if(!StartPMNotifications())

  00068	e59f2310	 ldr         r2, [pc, #0x310]
  0006c	e3a0e000	 mov         lr, #0
  00070	e3a03000	 mov         r3, #0
  00074	e3a01000	 mov         r1, #0
  00078	e3a00000	 mov         r0, #0
  0007c	e58de004	 str         lr, [sp, #4]
  00080	e58de000	 str         lr, [sp]
  00084	eb000000	 bl          CreateThread
  00088	e3500000	 cmp         r0, #0
  0008c	e5860000	 str         r0, [r6]
  00090	059f02e4	 ldreq       r0, [pc, #0x2E4]
  00094	0b000000	 bleq        NKDbgPrintfW

; 156  : 	{
; 157  : 		dwRet = TPR_ABORT;
; 158  : 		goto end;
; 159  : 	}
; 160  : 
; 161  : 	for(DWORD i = 0; i < g_StressCount; i++)

  00098	e59f42d8	 ldr         r4, [pc, #0x2D8]
  0009c	e3a07000	 mov         r7, #0
  000a0	e5943000	 ldr         r3, [r4]
  000a4	e3530000	 cmp         r3, #0
  000a8	0a00006d	 beq         |$LN14@TestPowerS|
  000ac	e59f2280	 ldr         r2, [pc, #0x280]
  000b0	e59f92bc	 ldr         r9, [pc, #0x2BC]
  000b4	e1a0b002	 mov         r11, r2
  000b8	e1a0a002	 mov         r10, r2
  000bc		 |$LL16@TestPowerS|

; 162  : 	{
; 163  : 		// Give time for the PM notifications to start
; 164  : 		g_pKato->Log(LOG_COMMENT,(TEXT("Starting Test:\r\n")));

  000bc	e5923000	 ldr         r3, [r2]
  000c0	e59f22a8	 ldr         r2, [pc, #0x2A8]
  000c4	e5950000	 ldr         r0, [r5]
  000c8	e3a0100e	 mov         r1, #0xE
  000cc	e1a0e00f	 mov         lr, pc
  000d0	e12fff13	 bx          r3

; 165  : 		Sleep(5000);

  000d4	e3a03c13	 mov         r3, #0x13, 24
  000d8	e3830088	 orr         r0, r3, #0x88
  000dc	eb000000	 bl          Sleep

; 166  : 
; 167  : 		// test that we can go into the ON state correctly
; 168  : 		g_pKato->Log(LOG_COMMENT,(TEXT("Testing ON State:\r\n")));

  000e0	e59f324c	 ldr         r3, [pc, #0x24C]
  000e4	e5950000	 ldr         r0, [r5]
  000e8	e59f227c	 ldr         r2, [pc, #0x27C]
  000ec	e5933000	 ldr         r3, [r3]
  000f0	e3a0100e	 mov         r1, #0xE
  000f4	e1a0e00f	 mov         lr, pc
  000f8	e12fff13	 bx          r3

; 169  : 		g_bTestBegin = TRUE;
; 170  : 		SetSystemPowerState(SSTATE_NAME_ON,NULL,POWER_FORCE);

  000fc	e59f0264	 ldr         r0, [pc, #0x264]
  00100	e3a03001	 mov         r3, #1
  00104	e3a02a01	 mov         r2, #1, 20
  00108	e3a01000	 mov         r1, #0
  0010c	e5883000	 str         r3, [r8]
  00110	eb000000	 bl          SetSystemPowerState

; 171  : 		Sleep(5000);

  00114	e3a03c13	 mov         r3, #0x13, 24
  00118	e3830088	 orr         r0, r3, #0x88
  0011c	eb000000	 bl          Sleep

; 172  : 		if(g_dwOnStateSeen != STATE_SEEN)

  00120	e5993000	 ldr         r3, [r9]

; 175  : 			dwRet = TPR_FAIL;
; 176  : 			goto end;
; 177  : 		}
; 178  : 		else
; 179  : 		{
; 180  : 			g_pKato->Log(LOG_COMMENT,(TEXT("ON state seen!\r\n")));

  00124	e5950000	 ldr         r0, [r5]
  00128	e3a0100e	 mov         r1, #0xE
  0012c	e3530001	 cmp         r3, #1
  00130	e59f31fc	 ldr         r3, [pc, #0x1FC]
  00134	e5933000	 ldr         r3, [r3]
  00138	1a000076	 bne         |$LN30@TestPowerS|
  0013c	e59f2220	 ldr         r2, [pc, #0x220]
  00140	e1a0e00f	 mov         lr, pc
  00144	e12fff13	 bx          r3

; 181  : 		}
; 182  : 
; 183  : 		// test that we can go into the USERIDLE state correctly
; 184  : 		g_pKato->Log(LOG_COMMENT,(TEXT("Testing USERIDLE State:\r\n")));

  00148	e59f31e4	 ldr         r3, [pc, #0x1E4]
  0014c	e5950000	 ldr         r0, [r5]
  00150	e59f2208	 ldr         r2, [pc, #0x208]
  00154	e5933000	 ldr         r3, [r3]
  00158	e3a0100e	 mov         r1, #0xE
  0015c	e1a0e00f	 mov         lr, pc
  00160	e12fff13	 bx          r3

; 185  : 		SetSystemPowerState(SSTATE_NAME_USERIDLE,NULL,POWER_FORCE);

  00164	e59f01f0	 ldr         r0, [pc, #0x1F0]
  00168	e3a02a01	 mov         r2, #1, 20
  0016c	e3a01000	 mov         r1, #0
  00170	eb000000	 bl          SetSystemPowerState

; 186  : 		Sleep(5000);

  00174	e3a03c13	 mov         r3, #0x13, 24
  00178	e3830088	 orr         r0, r3, #0x88
  0017c	eb000000	 bl          Sleep

; 187  : 		if(g_dwUserIdleStateSeen != STATE_SEEN)

  00180	e5993004	 ldr         r3, [r9, #4]

; 190  : 			dwRet = TPR_FAIL;
; 191  : 			goto end;
; 192  : 		}
; 193  : 		else
; 194  : 		{
; 195  : 			g_pKato->Log(LOG_COMMENT,(TEXT("USERIDLE state seen!\r\n")));

  00184	e5950000	 ldr         r0, [r5]
  00188	e3a0100e	 mov         r1, #0xE
  0018c	e3530001	 cmp         r3, #1
  00190	1a000059	 bne         |$LN31@TestPowerS|
  00194	e59b3000	 ldr         r3, [r11]
  00198	e59f21b8	 ldr         r2, [pc, #0x1B8]
  0019c	e1a0e00f	 mov         lr, pc
  001a0	e12fff13	 bx          r3

; 196  : 		}
; 197  : 
; 198  : 		// 5 seconds after useridle state is on, system idle will trigger
; 199  : 		// check that this has happened
; 200  : 		g_pKato->Log(LOG_COMMENT,(TEXT("Testing SYSTEMIDLE State:\r\n")));

  001a4	e59f3188	 ldr         r3, [pc, #0x188]
  001a8	e5950000	 ldr         r0, [r5]
  001ac	e59f21a0	 ldr         r2, [pc, #0x1A0]
  001b0	e5933000	 ldr         r3, [r3]
  001b4	e3a0100e	 mov         r1, #0xE
  001b8	e1a0e00f	 mov         lr, pc
  001bc	e12fff13	 bx          r3

; 201  : 		Sleep(5000);

  001c0	e3a03c13	 mov         r3, #0x13, 24
  001c4	e3830088	 orr         r0, r3, #0x88
  001c8	eb000000	 bl          Sleep

; 202  : 		if(g_dwSystemIdleStateSeen != STATE_SEEN)

  001cc	e5993008	 ldr         r3, [r9, #8]

; 205  : 			dwRet = TPR_FAIL;
; 206  : 			goto end;
; 207  : 		}
; 208  : 		else
; 209  : 		{
; 210  : 			g_pKato->Log(LOG_COMMENT,(TEXT("SYSTEMIDLE state seen!\r\n")));

  001d0	e5950000	 ldr         r0, [r5]
  001d4	e3a0100e	 mov         r1, #0xE
  001d8	e3530001	 cmp         r3, #1
  001dc	e59f3150	 ldr         r3, [pc, #0x150]
  001e0	e5933000	 ldr         r3, [r3]
  001e4	1a00003f	 bne         |$LN32@TestPowerS|
  001e8	e59f2160	 ldr         r2, [pc, #0x160]
  001ec	e1a0e00f	 mov         lr, pc
  001f0	e12fff13	 bx          r3

; 211  : 		}
; 212  : 
; 213  : 		// test the suspend state
; 214  : 		g_pKato->Log(LOG_COMMENT,(TEXT("Testing SUSPEND State, please wake system to continue test:\r\n")));

  001f4	e59f3138	 ldr         r3, [pc, #0x138]
  001f8	e5950000	 ldr         r0, [r5]
  001fc	e59f2148	 ldr         r2, [pc, #0x148]
  00200	e5933000	 ldr         r3, [r3]
  00204	e3a0100e	 mov         r1, #0xE
  00208	e1a0e00f	 mov         lr, pc
  0020c	e12fff13	 bx          r3

; 215  : 		SetSystemPowerState(SSTATE_NAME_SUSPEND,NULL,POWER_FORCE);

  00210	e59f0130	 ldr         r0, [pc, #0x130]
  00214	e3a02a01	 mov         r2, #1, 20
  00218	e3a01000	 mov         r1, #0
  0021c	eb000000	 bl          SetSystemPowerState

; 216  : 		Sleep(5000);

  00220	e3a03c13	 mov         r3, #0x13, 24
  00224	e3830088	 orr         r0, r3, #0x88
  00228	eb000000	 bl          Sleep

; 217  : 		if(g_dwUserIdleStateSeen != STATE_SEEN)

  0022c	e5993004	 ldr         r3, [r9, #4]

; 221  : 			goto end;
; 222  : 		}
; 223  : 		else
; 224  : 		{
; 225  : 			g_pKato->Log(LOG_COMMENT,(TEXT("SUSPEND state seen!\r\n")));

  00230	e5950000	 ldr         r0, [r5]
  00234	e3a0100e	 mov         r1, #0xE
  00238	e3530001	 cmp         r3, #1
  0023c	1a000022	 bne         |$LN33@TestPowerS|
  00240	e59a3000	 ldr         r3, [r10]
  00244	e59f20f8	 ldr         r2, [pc, #0xF8]
  00248	e1a0e00f	 mov         lr, pc
  0024c	e12fff13	 bx          r3
  00250	e5943000	 ldr         r3, [r4]
  00254	e2877001	 add         r7, r7, #1
  00258	e59f20d4	 ldr         r2, [pc, #0xD4]
  0025c	e1570003	 cmp         r7, r3
  00260	3affff95	 bcc         |$LL16@TestPowerS|
  00264		 |$LN14@TestPowerS|

; 226  : 		}
; 227  : 
; 228  : 	}
; 229  : 
; 230  : 	dwRet =  TPR_PASS;

  00264	e3a04003	 mov         r4, #3
  00268		 |$end$32782|

; 231  : 
; 232  : end:
; 233  : 	// restore the system state timeout values we disabled before
; 234  : 	g_pKato->Log(LOG_COMMENT,(TEXT("Restore System State Timeouts\r\n")));

  00268	e59f30c4	 ldr         r3, [pc, #0xC4]
  0026c	e59f20cc	 ldr         r2, [pc, #0xCC]
  00270	e5950000	 ldr         r0, [r5]
  00274	e5933000	 ldr         r3, [r3]
  00278	e3a0100e	 mov         r1, #0xE
  0027c	e1a0e00f	 mov         lr, pc
  00280	e12fff13	 bx          r3

; 235  : 	RestoreStateTimeouts();

  00284	eb000000	 bl          |?RestoreStateTimeouts@@YAHXZ|
  00288	e3a03c0b	 mov         r3, #0xB, 24

; 236  : 
; 237  : 	Sleep(3000);

  0028c	e38300b8	 orr         r0, r3, #0xB8
  00290	eb000000	 bl          Sleep

; 238  : 
; 239  : 	// deregister for PM notifications
; 240  : 	if(g_hPMThread2 != NULL)

  00294	e5960000	 ldr         r0, [r6]
  00298	e3500000	 cmp         r0, #0
  0029c	0a000004	 beq         |$LN1@TestPowerS|

; 241  : 	{
; 242  : 		GetExitCodeThread(g_hPMThread2,&dwExitCode);

  002a0	e28d1008	 add         r1, sp, #8
  002a4	eb000000	 bl          GetExitCodeThread

; 243  : 		TerminateThread(g_hPMThread2,dwExitCode);

  002a8	e59d1008	 ldr         r1, [sp, #8]
  002ac	e5960000	 ldr         r0, [r6]
  002b0	eb000000	 bl          TerminateThread
  002b4		 |$LN1@TestPowerS|

; 244  : 	}
; 245  : 
; 246  : 	g_bTestBegin = FALSE;

  002b4	e3a03000	 mov         r3, #0
  002b8	e5883000	 str         r3, [r8]

; 247  : 
; 248  : 	return dwRet;

  002bc		 |$LN22@TestPowerS|

; 249  : }

  002bc	e1a00004	 mov         r0, r4
  002c0	e28dd00c	 add         sp, sp, #0xC
  002c4	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  002c8	e12fff1e	 bx          lr
  002cc		 |$LN33@TestPowerS|

; 218  : 		{
; 219  : 			g_pKato->Log(LOG_COMMENT,(TEXT("SUSPEND state not seen, test failed!\r\n")));

  002cc	e59f3060	 ldr         r3, [pc, #0x60]
  002d0	e59f2064	 ldr         r2, [pc, #0x64]
  002d4	e5933000	 ldr         r3, [r3]
  002d8	e1a0e00f	 mov         lr, pc
  002dc	e12fff13	 bx          r3

; 220  : 			dwRet = TPR_FAIL;

  002e0	e3a04004	 mov         r4, #4

; 226  : 		}
; 227  : 
; 228  : 	}
; 229  : 
; 230  : 	dwRet =  TPR_PASS;

  002e4	eaffffdf	 b           |$end$32782|
  002e8		 |$LN32@TestPowerS|

; 203  : 		{
; 204  : 			g_pKato->Log(LOG_COMMENT,(TEXT("SYSTEMIDLE state not seen, test failed!\r\n")));

  002e8	e59f2048	 ldr         r2, [pc, #0x48]
  002ec	e1a0e00f	 mov         lr, pc
  002f0	e12fff13	 bx          r3

; 220  : 			dwRet = TPR_FAIL;

  002f4	e3a04004	 mov         r4, #4

; 226  : 		}
; 227  : 
; 228  : 	}
; 229  : 
; 230  : 	dwRet =  TPR_PASS;

  002f8	eaffffda	 b           |$end$32782|
  002fc		 |$LN31@TestPowerS|

; 188  : 		{
; 189  : 			g_pKato->Log(LOG_COMMENT,(TEXT("USERIDLE state not seen, test failed!\r\n")));

  002fc	e59f3030	 ldr         r3, [pc, #0x30]
  00300	e59f2028	 ldr         r2, [pc, #0x28]
  00304	e5933000	 ldr         r3, [r3]
  00308	e1a0e00f	 mov         lr, pc
  0030c	e12fff13	 bx          r3

; 220  : 			dwRet = TPR_FAIL;

  00310	e3a04004	 mov         r4, #4

; 226  : 		}
; 227  : 
; 228  : 	}
; 229  : 
; 230  : 	dwRet =  TPR_PASS;

  00314	eaffffd3	 b           |$end$32782|
  00318		 |$LN30@TestPowerS|

; 173  : 		{
; 174  : 			g_pKato->Log(LOG_COMMENT,(TEXT("ON state not seen, test failed!\r\n")));

  00318	e59f200c	 ldr         r2, [pc, #0xC]
  0031c	e1a0e00f	 mov         lr, pc
  00320	e12fff13	 bx          r3

; 220  : 			dwRet = TPR_FAIL;

  00324	e3a04004	 mov         r4, #4

; 226  : 		}
; 227  : 
; 228  : 	}
; 229  : 
; 230  : 	dwRet =  TPR_PASS;

  00328	eaffffce	 b           |$end$32782|
  0032c		 |$LN39@TestPowerS|
  0032c		 |$LN40@TestPowerS|
  0032c	00000000	 DCD         |??_C@_1EE@MJBHFAGK@?$AAO?$AAN?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAn?$AA?0?$AA?5?$AAt?$AAe?$AAs?$AAt?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$CB?$AA?$AN@|
  00330		 |$LN41@TestPowerS|
  00330	00000000	 DCD         |??_C@_1FA@FBKOKNDN@?$AAU?$AAS?$AAE?$AAR?$AAI?$AAD?$AAL?$AAE?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAn?$AA?0?$AA?5?$AAt?$AAe?$AAs?$AAt?$AA?5?$AAf?$AAa@|
  00334		 |$LN42@TestPowerS|
  00334	00000000	 DCD         |__imp_?Log@CKato@@QAAHKPBGZZ|
  00338		 |$LN43@TestPowerS|
  00338	00000000	 DCD         |??_C@_1FE@GJFPBNGL@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AAI?$AAD?$AAL?$AAE?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAn?$AA?0?$AA?5?$AAt?$AAe?$AAs?$AAt?$AA?5@|
  0033c		 |$LN44@TestPowerS|
  0033c	00000000	 DCD         |??_C@_1EO@ECFDONO@?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAn?$AAo?$AAt?$AA?5?$AAs?$AAe?$AAe?$AAn?$AA?0?$AA?5?$AAt?$AAe?$AAs?$AAt?$AA?5?$AAf?$AAa?$AAi@|
  00340		 |$LN45@TestPowerS|
  00340	00000000	 DCD         |??_C@_1EA@FDCBOILK@?$AAR?$AAe?$AAs?$AAt?$AAo?$AAr?$AAe?$AA?5?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAT?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AAs?$AA?$AN?$AA?6?$AA?$AA@|
  00344		 |$LN46@TestPowerS|
  00344	00000000	 DCD         |??_C@_1CM@HFCBIJPE@?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAs?$AAe?$AAe?$AAn?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@|
  00348		 |$LN47@TestPowerS|
  00348	00000000	 DCD         |??_C@_1BA@DAAKBIFE@?$AAs?$AAu?$AAs?$AAp?$AAe?$AAn?$AAd?$AA?$AA@|
  0034c		 |$LN48@TestPowerS|
  0034c	00000000	 DCD         |??_C@_1HM@GGKMMLIC@?$AAT?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAU?$AAS?$AAP?$AAE?$AAN?$AAD?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?0?$AA?5?$AAp?$AAl?$AAe?$AAa?$AAs?$AAe?$AA?5?$AAw?$AAa@|
  00350		 |$LN49@TestPowerS|
  00350	00000000	 DCD         |??_C@_1DC@KHBLKIHC@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AAI?$AAD?$AAL?$AAE?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAs?$AAe?$AAe?$AAn?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@|
  00354		 |$LN50@TestPowerS|
  00354	00000000	 DCD         |??_C@_1DI@CLJLDKGD@?$AAT?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AAI?$AAD?$AAL?$AAE?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?3?$AA?$AN?$AA?6?$AA?$AA@|
  00358		 |$LN51@TestPowerS|
  00358	00000000	 DCD         |??_C@_1CO@JNLECNJ@?$AAU?$AAS?$AAE?$AAR?$AAI?$AAD?$AAL?$AAE?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAs?$AAe?$AAe?$AAn?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@|
  0035c		 |$LN52@TestPowerS|
  0035c	00000000	 DCD         |??_C@_1BC@IJEKHFDC@?$AAu?$AAs?$AAe?$AAr?$AAi?$AAd?$AAl?$AAe?$AA?$AA@|
  00360		 |$LN53@TestPowerS|
  00360	00000000	 DCD         |??_C@_1DE@DGFCAPHC@?$AAT?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAU?$AAS?$AAE?$AAR?$AAI?$AAD?$AAL?$AAE?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?3?$AA?$AN?$AA?6?$AA?$AA@|
  00364		 |$LN54@TestPowerS|
  00364	00000000	 DCD         |??_C@_1CC@EPEEMMFL@?$AAO?$AAN?$AA?5?$AAs?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAs?$AAe?$AAe?$AAn?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@|
  00368		 |$LN55@TestPowerS|
  00368	00000000	 DCD         |??_C@_15GMGGGDOD@?$AAo?$AAn?$AA?$AA@|
  0036c		 |$LN56@TestPowerS|
  0036c	00000000	 DCD         |??_C@_1CI@OHKBINOF@?$AAT?$AAe?$AAs?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAO?$AAN?$AA?5?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?3?$AA?$AN?$AA?6?$AA?$AA@|
  00370		 |$LN57@TestPowerS|
  00370	00000000	 DCD         |??_C@_1CC@OACPGEEM@?$AAS?$AAt?$AAa?$AAr?$AAt?$AAi?$AAn?$AAg?$AA?5?$AAT?$AAe?$AAs?$AAt?$AA?3?$AA?$AN?$AA?6?$AA?$AA@|
  00374		 |$LN58@TestPowerS|
  00374	00000000	 DCD         |?g_dwOnStateSeen@@3KA|
  00378		 |$LN59@TestPowerS|
  00378	00000000	 DCD         |?g_StressCount@@3KA|
  0037c		 |$LN60@TestPowerS|
  0037c	00000000	 DCD         |??_C@_1FA@EOEDFPAC@?$AAF?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAc?$AAr?$AAe?$AAa?$AAt?$AAe?$AA?5?$AAP?$AAM?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAT@|
  00380		 |$LN61@TestPowerS|
  00380	00000000	 DCD         |?PMNotificationThread2@@YAKXZ|
  00384		 |$LN62@TestPowerS|
  00384	00000000	 DCD         |??_C@_1EG@MIEFDNJL@?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAi?$AAn?$AAg?$AA?5?$AAf?$AAo?$AAr?$AA?5?$AAP?$AAM?$AA?5?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo?$AAn?$AAs@|
  00388		 |$LN63@TestPowerS|
  00388	00000000	 DCD         |?g_hPMThread2@@3PAXA|
  0038c		 |$LN64@TestPowerS|
  0038c	00000000	 DCD         |?g_bTestBegin@@3HA|
  00390		 |$LN65@TestPowerS|
  00390	00000000	 DCD         |??_C@_1FK@NNJALGKB@?$AAS?$AAa?$AAv?$AAi?$AAn?$AAg?$AA?5?$AAa?$AAn?$AAd?$AA?5?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAi?$AAn?$AAg?$AA?5?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?5?$AAS?$AAt?$AAa?$AAt@|
  00394		 |$LN66@TestPowerS|
  00394	00000000	 DCD         |?g_pKato@@3PAVCKato@@A|
  00398		 |$M33660|

			 ENDP  ; |?TestPowerStates@@YAHIPAKPAU_FUNCTION_TABLE_ENTRY@@@Z|, TestPowerStates

	EXPORT	|??_C@_1EK@PNGAOHLO@?$AAR?$AAe?$AAc?$AAi?$AAe?$AAv?$AAe?$AAd?$AA?5?$AAa?$AA?5?$AAn?$AAe?$AAw?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo@| [ DATA ] ; `string'
	EXPORT	|??_C@_1EI@ENBHFIGI@?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AAr?$AAe?$AAa?$AAc?$AAh?$AAe?$AAd@| [ DATA ] ; `string'
	IMPORT	|GetSystemTimeAsFileTime|

  00000			 AREA	 |.pdata|, PDATA
|$T33713| DCD	|$LN35@PMNotifica@2|
	DCD	0x4000a902

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EK@PNGAOHLO@?$AAR?$AAe?$AAc?$AAi?$AAe?$AAv?$AAe?$AAd?$AA?5?$AAa?$AA?5?$AAn?$AAe?$AAw?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo@| DCB "R"
	DCB	0x0, "e", 0x0, "c", 0x0, "i", 0x0, "e", 0x0, "v", 0x0, "e"
	DCB	0x0, "d", 0x0, " ", 0x0, "a", 0x0, " ", 0x0, "n", 0x0, "e"
	DCB	0x0, "w", 0x0, " ", 0x0, "P", 0x0, "o", 0x0, "w", 0x0, "e"
	DCB	0x0, "r", 0x0, " ", 0x0, "N", 0x0, "o", 0x0, "t", 0x0, "i"
	DCB	0x0, "f", 0x0, "i", 0x0, "c", 0x0, "a", 0x0, "t", 0x0, "i"
	DCB	0x0, "o", 0x0, "n", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1EI@ENBHFIGI@?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AAr?$AAe?$AAa?$AAc?$AAh?$AAe?$AAd@| DCB "S"
	DCB	0x0, "t", 0x0, "a", 0x0, "t", 0x0, "e", 0x0, " ", 0x0, "t"
	DCB	0x0, "r", 0x0, "a", 0x0, "n", 0x0, "s", 0x0, "i", 0x0, "t"
	DCB	0x0, "i", 0x0, "o", 0x0, "n", 0x0, " ", 0x0, "t", 0x0, "i"
	DCB	0x0, "m", 0x0, "e", 0x0, "o", 0x0, "u", 0x0, "t", 0x0, " "
	DCB	0x0, "r", 0x0, "e", 0x0, "a", 0x0, "c", 0x0, "h", 0x0, "e"
	DCB	0x0, "d", 0x0, "!", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?PMNotificationThread@@YAKXZ| PROC	; PMNotificationThread

; 612  : {

  00000		 |$LN35@PMNotifica@2|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd02c	 sub         sp, sp, #0x2C
  00008		 |$M33710|

; 613  : 	DWORD cbPowerMsgSize = sizeof(POWER_BROADCAST) + (MAX_PATH * sizeof TCHAR);
; 614  : 	DWORD dwWaitStatus = WAIT_OBJECT_0;
; 615  : 
; 616  : 	// Initialize a MSGQUEUEOPTIONS structure
; 617  : 	MSGQUEUEOPTIONS mqo;
; 618  : 	mqo.dwSize = sizeof(MSGQUEUEOPTIONS);
; 619  : 	mqo.dwFlags = MSGQUEUE_NOPRECOMMIT;
; 620  : 	mqo.dwMaxMessages = 4;

  00008	e3a01004	 mov         r1, #4

; 621  : 	mqo.cbMaxMessage = cbPowerMsgSize;

  0000c	e3a00f86	 mov         r0, #0x86, 30

; 622  : 	mqo.bReadAccess = TRUE;

  00010	e58d1020	 str         r1, [sp, #0x20]
  00014	e58d0024	 str         r0, [sp, #0x24]
  00018	e3a03014	 mov         r3, #0x14
  0001c	e3a02001	 mov         r2, #1
  00020	e3a0e001	 mov         lr, #1

; 623  : 
; 624  : 	//RETAILMSG(1,(TEXT("starting  pm notification thread!!!!!!!!!!!!!!!\r\n")));
; 625  : 
; 626  : 	// Create a message queue to receive power notifications
; 627  : 	HANDLE hPowerMsgQ = CreateMsgQueue(NULL, &mqo);

  00024	e28d1018	 add         r1, sp, #0x18
  00028	e3a00000	 mov         r0, #0
  0002c	e58d3018	 str         r3, [sp, #0x18]
  00030	e58d201c	 str         r2, [sp, #0x1C]
  00034	e58de028	 str         lr, [sp, #0x28]
  00038	e3a08000	 mov         r8, #0
  0003c	eb000000	 bl          CreateMsgQueue
  00040	e59f4258	 ldr         r4, [pc, #0x258]
  00044	e59f6234	 ldr         r6, [pc, #0x234]
  00048	e1b07000	 movs        r7, r0

; 628  : 	if (NULL == hPowerMsgQ)

  0004c	1a000008	 bne         |$LN21@PMNotifica@2|

; 629  : 	{
; 630  : 		g_pKato->Log(LOG_ABORT,(L"CreateMsgQueue failed \r\n"));

  00050	e59f3220	 ldr         r3, [pc, #0x220]
  00054	e59f2240	 ldr         r2, [pc, #0x240]
  00058	e5960000	 ldr         r0, [r6]
  0005c	e5933000	 ldr         r3, [r3]
  00060	e3a01004	 mov         r1, #4
  00064	e1a0e00f	 mov         lr, pc
  00068	e12fff13	 bx          r3

; 631  : 		//RETAILMSG(1, (L"CreateMsgQueue failed: %x\n", GetLastError()));
; 632  : 		g_bTestStatus = TEST_ERROR;

  0006c	e3a0300d	 mov         r3, #0xD
  00070	e5843000	 str         r3, [r4]
  00074		 |$LN21@PMNotifica@2|

; 633  : 	}
; 634  : 	// Request power notifications.
; 635  : 	HANDLE hPowerNotifications = RequestPowerNotifications(hPowerMsgQ, PBT_TRANSITION);

  00074	e3a01001	 mov         r1, #1
  00078	e1a00007	 mov         r0, r7
  0007c	eb000000	 bl          RequestPowerNotifications

; 636  : 
; 637  : 	// Wait for a power notification or for the app to exit.
; 638  : 	while(g_bTestStatus == TEST_RUNNING)

  00080	e5943000	 ldr         r3, [r4]
  00084	e353000e	 cmp         r3, #0xE
  00088	1a000076	 bne         |$LN29@PMNotifica@2|
  0008c	e3a02c01	 mov         r2, #1, 24
  00090	e3829002	 orr         r9, r2, #2
  00094	e59fa1e0	 ldr         r10, [pc, #0x1E0]
  00098	e59fb1d8	 ldr         r11, [pc, #0x1D8]
  0009c	e58d9014	 str         r9, [sp, #0x14]
  000a0		 |$LN32@PMNotifica@2|
  000a0	e59f51d0	 ldr         r5, [pc, #0x1D0]
  000a4		 |$LN30@PMNotifica@2|
  000a4	e59f11ec	 ldr         r1, [pc, #0x1EC]
  000a8	e3a0effa	 mov         lr, #0xFA, 30
  000ac		 |$LL18@PMNotifica@2|

; 639  : 	{
; 640  : 		while(dwWaitStatus == WAIT_TIMEOUT || dwWaitStatus == WAIT_OBJECT_0)

  000ac	e1580009	 cmp         r8, r9
  000b0	0a000001	 beq         |$LN16@PMNotifica@2|
  000b4	e3580000	 cmp         r8, #0
  000b8	1a000068	 bne         |$LN17@PMNotifica@2|
  000bc		 |$LN16@PMNotifica@2|

; 641  : 		{
; 642  : 			DWORD cbRead;
; 643  : 			DWORD dwFlags;
; 644  : 
; 645  : 			dwWaitStatus = WaitForSingleObject(hPowerMsgQ, ((g_dwMaxTimeout*1000)+10000));

  000bc	e5913000	 ldr         r3, [r1]
  000c0	e1a00007	 mov         r0, r7
  000c4	e283300a	 add         r3, r3, #0xA
  000c8	e0010e93	 mul         r1, r3, lr
  000cc	eb000000	 bl          WaitForSingleObject
  000d0	e1a08000	 mov         r8, r0
  000d4	e58d8010	 str         r8, [sp, #0x10]

; 646  : 
; 647  : 		//while(WaitForSingleObject(hPowerMsgQ, ((g_dwMaxTimeout*1000)+10000)) == WAIT_OBJECT_0)
; 648  : 		//{
; 649  : 
; 650  : 			if(dwWaitStatus == WAIT_TIMEOUT)

  000d8	e1580009	 cmp         r8, r9
  000dc	1a000013	 bne         |$LN15@PMNotifica@2|

; 651  : 			{
; 652  : 				// if timeout occurs, it could be because we are in on state already,
; 653  : 				// so no transition will occur and we will timeout
; 654  : 				// if this is the case the test still passes, we just dont have any
; 655  : 				// power states to transition to
; 656  : 				if(IsLastState(dwStateId_on))

  000e0	e59a0000	 ldr         r0, [r10]
  000e4	eb000000	 bl          |?IsLastState@@YAHK@Z|
  000e8	e3500000	 cmp         r0, #0

; 657  : 				{
; 658  : 					g_pKato->Log(LOG_DETAIL,(TEXT("Test Finished Successfully on \"On\" State\r\n")));

  000ec	e5960000	 ldr         r0, [r6]
  000f0	e3a0100c	 mov         r1, #0xC
  000f4	0a000006	 beq         |$LN14@PMNotifica@2|
  000f8	e59b3000	 ldr         r3, [r11]
  000fc	e59f2190	 ldr         r2, [pc, #0x190]
  00100	e1a0e00f	 mov         lr, pc
  00104	e12fff13	 bx          r3

; 659  : 					g_bTestStatus = TEST_PASS;

  00108	e3a0300f	 mov         r3, #0xF

; 664  : 					g_bTestStatus = TEST_FAIL;

  0010c	e5843000	 str         r3, [r4]

; 665  : 				}
; 666  : 			}
; 667  : 			else

  00110	eaffffe3	 b           |$LN30@PMNotifica@2|
  00114		 |$LN14@PMNotifica@2|

; 660  : 				}
; 661  : 				else
; 662  : 				{
; 663  : 					g_pKato->Log(LOG_DETAIL,(TEXT("State transition timeout reached!\r\n")));

  00114	e5953000	 ldr         r3, [r5]
  00118	e59f2170	 ldr         r2, [pc, #0x170]
  0011c	e1a0e00f	 mov         lr, pc
  00120	e12fff13	 bx          r3

; 664  : 					g_bTestStatus = TEST_FAIL;

  00124	e3a03010	 mov         r3, #0x10
  00128	e5843000	 str         r3, [r4]

; 665  : 				}
; 666  : 			}
; 667  : 			else

  0012c	eaffffdc	 b           |$LN30@PMNotifica@2|
  00130		 |$LN15@PMNotifica@2|

; 668  : 			{
; 669  : 				g_pKato->Log(LOG_DETAIL,(TEXT("Recieved a new Power Notification!\r\n")));

  00130	e59f3140	 ldr         r3, [pc, #0x140]
  00134	e5960000	 ldr         r0, [r6]
  00138	e59f214c	 ldr         r2, [pc, #0x14C]
  0013c	e5933000	 ldr         r3, [r3]
  00140	e3a0100c	 mov         r1, #0xC
  00144	e1a0e00f	 mov         lr, pc
  00148	e12fff13	 bx          r3

; 670  : 
; 671  : 				POWER_BROADCAST *ppb = (POWER_BROADCAST *)new BYTE[cbPowerMsgSize];

  0014c	e3a00f86	 mov         r0, #0x86, 30
  00150	eb000000	 bl          |??2@YAPAXI@Z|
  00154	e1b05000	 movs        r5, r0

; 672  : 				if (!ppb)

  00158	1a000008	 bne         |$LN26@PMNotifica@2|

; 673  : 				{
; 674  : 					g_pKato->Log(LOG_ABORT,(TEXT("ERROR: failed to allocate memory\r\n")));

  0015c	e59f3114	 ldr         r3, [pc, #0x114]
  00160	e5960000	 ldr         r0, [r6]
  00164	e59f211c	 ldr         r2, [pc, #0x11C]
  00168	e5933000	 ldr         r3, [r3]
  0016c	e3a01004	 mov         r1, #4
  00170	e1a0e00f	 mov         lr, pc
  00174	e12fff13	 bx          r3

; 675  : 					g_bTestStatus = TEST_ERROR;

  00178	e3a0300d	 mov         r3, #0xD
  0017c	e5843000	 str         r3, [r4]
  00180		 |$LN26@PMNotifica@2|

; 676  : 				}
; 677  : 
; 678  : 				// Loop through in case there is more than 1 msg
; 679  : 				while(ReadMsgQueue(hPowerMsgQ, ppb, cbPowerMsgSize, &cbRead, 0, &dwFlags))

  00180	e28de008	 add         lr, sp, #8
  00184	e58de004	 str         lr, [sp, #4]
  00188	e3a0e000	 mov         lr, #0
  0018c	e28d300c	 add         r3, sp, #0xC
  00190	e3a02f86	 mov         r2, #0x86, 30
  00194	e1a01005	 mov         r1, r5
  00198	e1a00007	 mov         r0, r7
  0019c	e58de000	 str         lr, [sp]
  001a0	eb000000	 bl          ReadMsgQueue
  001a4	e3500000	 cmp         r0, #0
  001a8	0a000028	 beq         |$LN9@PMNotifica@2|
  001ac	e28da008	 add         r10, sp, #8
  001b0	e3a0b000	 mov         r11, #0
  001b4	e3a06010	 mov         r6, #0x10
  001b8	e3a0900d	 mov         r9, #0xD
  001bc	e3a0800f	 mov         r8, #0xF
  001c0		 |$LL10@PMNotifica@2|

; 680  : 				{
; 681  : 					if (ppb->Message == PBT_TRANSITION)

  001c0	e5953000	 ldr         r3, [r5]
  001c4	e3530001	 cmp         r3, #1
  001c8	1a000012	 bne         |$LN5@PMNotifica@2|

; 682  : 					{
; 683  : 						//RETAILMSG(1, (L"Transition detected !\r\n"));
; 684  : 						//RETAILMSG(1, (L"SystemPowerState = %s\r\n", ppb->SystemPowerState));
; 685  : 						
; 686  : 						// got a new power state, check if it happened in the correct amount of time
; 687  : 						GetSystemTimeAsFileTime(&g_CurrentSystemTime);

  001cc	e59f00b0	 ldr         r0, [pc, #0xB0]
  001d0	eb000000	 bl          GetSystemTimeAsFileTime

; 688  : 
; 689  : 						// only check the state transition if the test hasn't already finished
; 690  : 						if(g_bTestStatus == TEST_RUNNING)

  001d4	e5943000	 ldr         r3, [r4]
  001d8	e353000e	 cmp         r3, #0xE
  001dc	1a00000d	 bne         |$LN5@PMNotifica@2|

; 691  : 						{
; 692  : 							switch(CheckStateMachine(ppb,&g_CurrentSystemTime))

  001e0	e59f109c	 ldr         r1, [pc, #0x9C]
  001e4	e1a00005	 mov         r0, r5
  001e8	eb000000	 bl          |?CheckStateMachine@@YAKPAU_POWER_BROADCAST@@PAU_FILETIME@@@Z|
  001ec	e350000a	 cmp         r0, #0xA
  001f0	0a000007	 beq         |$LN4@PMNotifica@2|
  001f4	e350000d	 cmp         r0, #0xD
  001f8	0a000003	 beq         |$LN2@PMNotifica@2|
  001fc	e3500010	 cmp         r0, #0x10
  00200	1a000004	 bne         |$LN5@PMNotifica@2|

; 696  : 									break;
; 697  : 								case TEST_FAIL:
; 698  : 									g_bTestStatus = TEST_FAIL;

  00204	e5846000	 str         r6, [r4]

; 699  : 									break;

  00208	ea000002	 b           |$LN5@PMNotifica@2|
  0020c		 |$LN2@PMNotifica@2|

; 700  : 								case TEST_ERROR:
; 701  : 									g_bTestStatus = TEST_ERROR;

  0020c	e5849000	 str         r9, [r4]

; 702  : 									break;

  00210	ea000000	 b           |$LN5@PMNotifica@2|
  00214		 |$LN4@PMNotifica@2|

; 693  : 							{
; 694  : 								case TEST_COMPLETE:
; 695  : 									g_bTestStatus = TEST_PASS;

  00214	e5848000	 str         r8, [r4]
  00218		 |$LN5@PMNotifica@2|

; 676  : 				}
; 677  : 
; 678  : 				// Loop through in case there is more than 1 msg
; 679  : 				while(ReadMsgQueue(hPowerMsgQ, ppb, cbPowerMsgSize, &cbRead, 0, &dwFlags))

  00218	e28d300c	 add         r3, sp, #0xC
  0021c	e3a02f86	 mov         r2, #0x86, 30
  00220	e1a01005	 mov         r1, r5
  00224	e1a00007	 mov         r0, r7
  00228	e58da004	 str         r10, [sp, #4]
  0022c	e58db000	 str         r11, [sp]
  00230	eb000000	 bl          ReadMsgQueue
  00234	e3500000	 cmp         r0, #0
  00238	1affffe0	 bne         |$LL10@PMNotifica@2|
  0023c	e59f603c	 ldr         r6, [pc, #0x3C]
  00240	e59d8010	 ldr         r8, [sp, #0x10]
  00244	e59d9014	 ldr         r9, [sp, #0x14]
  00248	e59fa02c	 ldr         r10, [pc, #0x2C]
  0024c	e59fb024	 ldr         r11, [pc, #0x24]
  00250		 |$LN9@PMNotifica@2|

; 703  : 								case TEST_RUNNING:
; 704  : 									break;
; 705  : 							}
; 706  : 						}
; 707  : 					}
; 708  : 				}
; 709  : 
; 710  : 				delete [] ppb;

  00250	e1a00005	 mov         r0, r5
  00254	eb000000	 bl          |??3@YAXPAX@Z|

; 711  : 			}
; 712  : 		}

  00258	e5943000	 ldr         r3, [r4]
  0025c	eaffff8f	 b           |$LN32@PMNotifica@2|
  00260		 |$LN17@PMNotifica@2|

; 636  : 
; 637  : 	// Wait for a power notification or for the app to exit.
; 638  : 	while(g_bTestStatus == TEST_RUNNING)

  00260	e353000e	 cmp         r3, #0xE
  00264	0affff90	 beq         |$LL18@PMNotifica@2|
  00268		 |$LN29@PMNotifica@2|

; 713  : 	}
; 714  : 	return 0;

  00268	e3a00000	 mov         r0, #0

; 715  : }

  0026c	e28dd02c	 add         sp, sp, #0x2C
  00270	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  00274	e12fff1e	 bx          lr
  00278		 |$LN36@PMNotifica@2|
  00278		 |$LN37@PMNotifica@2|
  00278	00000000	 DCD         |__imp_?Log@CKato@@QAAHKPBGZZ|
  0027c		 |$LN38@PMNotifica@2|
  0027c	00000000	 DCD         |?dwStateId_on@@3KA|
  00280		 |$LN39@PMNotifica@2|
  00280	00000000	 DCD         |?g_pKato@@3PAVCKato@@A|
  00284		 |$LN40@PMNotifica@2|
  00284	00000000	 DCD         |?g_CurrentSystemTime@@3U_FILETIME@@A|
  00288		 |$LN41@PMNotifica@2|
  00288	00000000	 DCD         |??_C@_1EG@IAIMDKPN@?$AAE?$AAR?$AAR?$AAO?$AAR?$AA?3?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AAt?$AAo?$AA?5?$AAa?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA?5?$AAm?$AAe?$AAm?$AAo?$AAr?$AAy@|
  0028c		 |$LN42@PMNotifica@2|
  0028c	00000000	 DCD         |??_C@_1EK@PNGAOHLO@?$AAR?$AAe?$AAc?$AAi?$AAe?$AAv?$AAe?$AAd?$AA?5?$AAa?$AA?5?$AAn?$AAe?$AAw?$AA?5?$AAP?$AAo?$AAw?$AAe?$AAr?$AA?5?$AAN?$AAo?$AAt?$AAi?$AAf?$AAi?$AAc?$AAa?$AAt?$AAi?$AAo@|
  00290		 |$LN43@PMNotifica@2|
  00290	00000000	 DCD         |??_C@_1EI@ENBHFIGI@?$AAS?$AAt?$AAa?$AAt?$AAe?$AA?5?$AAt?$AAr?$AAa?$AAn?$AAs?$AAi?$AAt?$AAi?$AAo?$AAn?$AA?5?$AAt?$AAi?$AAm?$AAe?$AAo?$AAu?$AAt?$AA?5?$AAr?$AAe?$AAa?$AAc?$AAh?$AAe?$AAd@|
  00294		 |$LN44@PMNotifica@2|
  00294	00000000	 DCD         |??_C@_1FG@BJDAAOMM@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAF?$AAi?$AAn?$AAi?$AAs?$AAh?$AAe?$AAd?$AA?5?$AAS?$AAu?$AAc?$AAc?$AAe?$AAs?$AAs?$AAf?$AAu?$AAl?$AAl?$AAy?$AA?5?$AAo?$AAn?$AA?5?$AA?$CC?$AAO@|
  00298		 |$LN45@PMNotifica@2|
  00298	00000000	 DCD         |?g_dwMaxTimeout@@3KA|
  0029c		 |$LN46@PMNotifica@2|
  0029c	00000000	 DCD         |??_C@_1DC@JICMBMDM@?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAM?$AAs?$AAg?$AAQ?$AAu?$AAe?$AAu?$AAe?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?5?$AA?$AN?$AA?6?$AA?$AA@|
  002a0		 |$LN47@PMNotifica@2|
  002a0	00000000	 DCD         |?g_bTestStatus@@3KA|
  002a4		 |$M33711|

			 ENDP  ; |?PMNotificationThread@@YAKXZ|, PMNotificationThread


  00000			 AREA	 |.pdata|, PDATA
|$T33734| DCD	|$LN6@Initialize@2|
	DCD	0x40001402
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?InitializePMNotifications@@YAHXZ| PROC ; InitializePMNotifications

; 528  : {

  00000		 |$LN6@Initialize@2|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004	e24dd008	 sub         sp, sp, #8
  00008		 |$M33731|

; 529  : 	g_hPMThread1 = CreateThread(NULL,0,(LPTHREAD_START_ROUTINE)PMNotificationThread,NULL,0,NULL);

  00008	e59f203c	 ldr         r2, [pc, #0x3C]
  0000c	e3a0e000	 mov         lr, #0
  00010	e3a03000	 mov         r3, #0
  00014	e3a01000	 mov         r1, #0
  00018	e3a00000	 mov         r0, #0
  0001c	e58de004	 str         lr, [sp, #4]
  00020	e58de000	 str         lr, [sp]
  00024	eb000000	 bl          CreateThread
  00028	e59f3018	 ldr         r3, [pc, #0x18]
  0002c	e3500000	 cmp         r0, #0
  00030	e5830000	 str         r0, [r3]

; 530  : 	if(g_hPMThread1 == NULL)
; 531  : 	{
; 532  : 		//RETAILMSG(1,(TEXT("KERNUTILS_InitPMMessageQueue: Failed to create PMNotificationThread\r\n")));
; 533  : 		return FALSE;

  00034	03a00000	 moveq       r0, #0

; 534  : 	}
; 535  : 
; 536  : 	return TRUE;

  00038	13a00001	 movne       r0, #1

; 537  : }

  0003c	e28dd008	 add         sp, sp, #8
  00040	e49de004	 ldr         lr, [sp], #4
  00044	e12fff1e	 bx          lr
  00048		 |$LN7@Initialize@2|
  00048		 |$LN8@Initialize@2|
  00048	00000000	 DCD         |?g_hPMThread1@@3PAXA|
  0004c		 |$LN9@Initialize@2|
  0004c	00000000	 DCD         |?PMNotificationThread@@YAKXZ|
  00050		 |$M33732|

			 ENDP  ; |?InitializePMNotifications@@YAHXZ|, InitializePMNotifications

	EXPORT	|?TestSystemStateMachine@@YAHIPAKPAU_FUNCTION_TABLE_ENTRY@@@Z| ; TestSystemStateMachine
	EXPORT	|??_C@_1BK@JEPHKMEI@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAA?$AAb?$AAo?$AAr?$AAt?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BK@LHMDEIBD@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1BO@KLNMJA@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_1CC@FGOJDFKB@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAs?$AAu?$AAc?$AAc?$AAe?$AAe?$AAd?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| [ DATA ] ; `string'
	IMPORT	|keybd_event|

  00000			 AREA	 |.pdata|, PDATA
|$T33763| DCD	|$LN39@TestSystem|
	DCD	0x40008102

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@JEPHKMEI@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAA?$AAb?$AAo?$AAr?$AAt?$AA?$AN?$AA?6?$AA?$AA@| DCB "T"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "A", 0x0, "b"
	DCB	0x0, "o", 0x0, "r", 0x0, "t", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BK@LHMDEIBD@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?$AN?$AA?6?$AA?$AA@| DCB "T"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "e", 0x0, "r"
	DCB	0x0, "r", 0x0, "o", 0x0, "r", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0
	DCB	0x0					; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1BO@KLNMJA@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@| DCB "T"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "f", 0x0, "a"
	DCB	0x0, "i", 0x0, "l", 0x0, "e", 0x0, "d", 0x0, "!", 0x0, 0xd
	DCB	0x0, 0xa, 0x0, 0x0, 0x0			; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1CC@FGOJDFKB@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAs?$AAu?$AAc?$AAc?$AAe?$AAe?$AAd?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@| DCB "T"
	DCB	0x0, "e", 0x0, "s", 0x0, "t", 0x0, " ", 0x0, "s", 0x0, "u"
	DCB	0x0, "c", 0x0, "c", 0x0, "e", 0x0, "e", 0x0, "d", 0x0, "e"
	DCB	0x0, "d", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |?TestSystemStateMachine@@YAHIPAKPAU_FUNCTION_TABLE_ENTRY@@@Z| PROC ; TestSystemStateMachine

; 265  : {

  00000		 |$LN39@TestSystem|
  00000	e92d4ff0	 stmdb       sp!, {r4 - r11, lr}
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M33760|

; 266  : 	DWORD dwExitCode;
; 267  : 	DWORD dwRet;
; 268  :     // The shell doesn't necessarily want us to execute the test. Make sure
; 269  :     // first.
; 270  :     if(uMsg != TPM_EXECUTE)

  00008	e3500065	 cmp         r0, #0x65

; 271  :     {
; 272  :         return TPR_NOT_HANDLED;

  0000c	13a04000	 movne       r4, #0
  00010	1a00006b	 bne         |$LN23@TestSystem|

; 273  :     }
; 274  : 
; 275  : 	if(!InitializeStateMachine())

  00014	eb000000	 bl          |?InitializeStateMachine@@YAHXZ|
  00018	e59f51e0	 ldr         r5, [pc, #0x1E0]
  0001c	e3500000	 cmp         r0, #0

; 276  : 	{
; 277  : 		dwRet = TPR_ABORT;

  00020	0a000060	 beq         |$LN2@TestSystem|

; 278  : 		goto cleanup;
; 279  : 	}
; 280  : 
; 281  : 	if(!InitializePMNotifications())

  00024	e59f21d0	 ldr         r2, [pc, #0x1D0]
  00028	e3a0e000	 mov         lr, #0
  0002c	e3a03000	 mov         r3, #0
  00030	e3a01000	 mov         r1, #0
  00034	e3a00000	 mov         r0, #0
  00038	e58de004	 str         lr, [sp, #4]
  0003c	e58de000	 str         lr, [sp]
  00040	eb000000	 bl          CreateThread
  00044	e3500000	 cmp         r0, #0
  00048	e5850008	 str         r0, [r5, #8]

; 351  : 		//return TPR_ABORT;
; 352  : 		break;
; 353  : 	}

  0004c	0a000055	 beq         |$LN2@TestSystem|
  00050	e59f71a0	 ldr         r7, [pc, #0x1A0]
  00054	e59f6198	 ldr         r6, [pc, #0x198]
  00058	e59f4190	 ldr         r4, [pc, #0x190]
  0005c	e5973000	 ldr         r3, [r7]
  00060	e3a08000	 mov         r8, #0
  00064	e3530000	 cmp         r3, #0
  00068	0a00003c	 beq         |$LN15@TestSystem|
  0006c	e59f9164	 ldr         r9, [pc, #0x164]
  00070	e3a02c0b	 mov         r2, #0xB, 24
  00074	e3a0100e	 mov         r1, #0xE
  00078	e1a0a009	 mov         r10, r9
  0007c	e1a0b009	 mov         r11, r9
  00080		 |$LL17@TestSystem|
  00080	e38200b8	 orr         r0, r2, #0xB8
  00084	e5841000	 str         r1, [r4]
  00088	eb000000	 bl          Sleep
  0008c	e1a00005	 mov         r0, r5
  00090	eb000000	 bl          GetSystemTimeAsFileTime
  00094	e5951000	 ldr         r1, [r5]
  00098	e59f014c	 ldr         r0, [pc, #0x14C]
  0009c	e3a03000	 mov         r3, #0
  000a0	e3a02006	 mov         r2, #6
  000a4	e5801000	 str         r1, [r0]
  000a8	e3a01000	 mov         r1, #0
  000ac	e3a00087	 mov         r0, #0x87
  000b0	eb000000	 bl          keybd_event
  000b4	ea000001	 b           |$LN34@TestSystem|
  000b8		 |$LL14@TestSystem|

; 282  : 	{
; 283  : 		dwRet = TPR_ABORT;
; 284  : 		goto cleanup;
; 285  : 	}
; 286  : 
; 287  : 
; 288  : 	for(DWORD i = 0; i < g_StressCount; i++)
; 289  : 	{
; 290  : 		// reset these values each time we run the test
; 291  : 		g_bTestStatus = TEST_RUNNING;
; 292  : 		//g_PreviousState = dwStateId_on;
; 293  : 
; 294  : 		Sleep(3000);
; 295  : 
; 296  : 		// set the test start time
; 297  : 		GetSystemTimeAsFileTime(&g_CurrentSystemTime);
; 298  : 		g_TestStartTime = g_CurrentSystemTime.dwLowDateTime;
; 299  : 
; 300  : 		// force state to on so that we can see the timeouts happen
; 301  : 		//SetSystemPowerState(NULL,POWER_STATE_USERIDLE,POWER_FORCE);
; 302  : 
; 303  : 		keybd_event((BYTE)0x87,0,(KEYEVENTF_KEYUP|KEYEVENTF_SILENT),0);
; 304  : 
; 305  : 		//wait for test to run
; 306  : 		while(g_bTestStatus == TEST_RUNNING){Sleep(10);}

  000b8	e3a0000a	 mov         r0, #0xA
  000bc	eb000000	 bl          Sleep
  000c0		 |$LN34@TestSystem|
  000c0	e5943000	 ldr         r3, [r4]
  000c4	e353000e	 cmp         r3, #0xE
  000c8	0afffffa	 beq         |$LL14@TestSystem|

; 307  : 
; 308  : 		// check results of test
; 309  : 		if(g_bTestStatus == TEST_PASS)
; 310  : 		{
; 311  : 			g_pKato->Log(LOG_COMMENT,(TEXT("Test succeeded\r\n")));

  000cc	e5960000	 ldr         r0, [r6]
  000d0	e353000f	 cmp         r3, #0xF
  000d4	e3a0100e	 mov         r1, #0xE
  000d8	1a000004	 bne         |$LN12@TestSystem|
  000dc	e5993000	 ldr         r3, [r9]
  000e0	e59f2100	 ldr         r2, [pc, #0x100]
  000e4	e1a0e00f	 mov         lr, pc
  000e8	e12fff13	 bx          r3
  000ec	ea000015	 b           |$LN16@TestSystem|
  000f0		 |$LN12@TestSystem|

; 312  : 		}
; 313  : 		else if(g_bTestStatus == TEST_FAIL)

  000f0	e3530010	 cmp         r3, #0x10
  000f4	1a000005	 bne         |$LN10@TestSystem|

; 314  : 		{
; 315  : 			g_pKato->Log(LOG_COMMENT,(TEXT("Test failed!\r\n")));

  000f8	e59a3000	 ldr         r3, [r10]
  000fc	e59f20e0	 ldr         r2, [pc, #0xE0]
  00100	e1a0e00f	 mov         lr, pc
  00104	e12fff13	 bx          r3

; 316  : 			g_bTestResult = TEST_FAIL;

  00108	e3a03010	 mov         r3, #0x10
  0010c	ea00000c	 b           |$LN35@TestSystem|
  00110		 |$LN10@TestSystem|

; 317  : 			//return TPR_FAIL;
; 318  : 		}
; 319  : 		else if(g_bTestStatus == TEST_ERROR)

  00110	e353000d	 cmp         r3, #0xD
  00114	1a000004	 bne         |$LN8@TestSystem|

; 320  : 		{
; 321  : 			g_pKato->Log(LOG_COMMENT,(TEXT("Test error\r\n")));

  00118	e59b3000	 ldr         r3, [r11]
  0011c	e59f20bc	 ldr         r2, [pc, #0xBC]
  00120	e1a0e00f	 mov         lr, pc
  00124	e12fff13	 bx          r3

; 322  : 			g_bTestResult = TEST_ERROR;
; 323  : 			//return TPR_ABORT;
; 324  : 		}
; 325  : 		else

  00128	ea000004	 b           |$LN36@TestSystem|
  0012c		 |$LN8@TestSystem|

; 326  : 		{
; 327  : 			g_pKato->Log(LOG_COMMENT,(TEXT("Test Abort\r\n")));

  0012c	e59f30a4	 ldr         r3, [pc, #0xA4]
  00130	e59f20a4	 ldr         r2, [pc, #0xA4]
  00134	e5933000	 ldr         r3, [r3]
  00138	e1a0e00f	 mov         lr, pc
  0013c	e12fff13	 bx          r3
  00140		 |$LN36@TestSystem|

; 328  : 			g_bTestResult = TEST_ERROR;

  00140	e3a0300d	 mov         r3, #0xD
  00144		 |$LN35@TestSystem|
  00144	e5843004	 str         r3, [r4, #4]
  00148		 |$LN16@TestSystem|
  00148	e5973000	 ldr         r3, [r7]
  0014c	e2888001	 add         r8, r8, #1
  00150	e3a02c0b	 mov         r2, #0xB, 24
  00154	e1580003	 cmp         r8, r3
  00158	e3a0100e	 mov         r1, #0xE
  0015c	3affffc7	 bcc         |$LL17@TestSystem|
  00160		 |$LN15@TestSystem|

; 329  : 			//return TPR_ABORT;
; 330  : 		}
; 331  : 	}
; 332  : 
; 333  : 	g_pKato->Log(LOG_COMMENT,(TEXT("Test End\r\n")));

  00160	e59f3070	 ldr         r3, [pc, #0x70]
  00164	e59f2068	 ldr         r2, [pc, #0x68]
  00168	e5960000	 ldr         r0, [r6]
  0016c	e5933000	 ldr         r3, [r3]
  00170	e3a0100e	 mov         r1, #0xE
  00174	e1a0e00f	 mov         lr, pc
  00178	e12fff13	 bx          r3

; 334  : 	// if none of the tests failed or had an error, g_bTestResult should still contain TEST_PASS
; 335  : 	switch(g_bTestResult)

  0017c	e5943004	 ldr         r3, [r4, #4]
  00180	e353000d	 cmp         r3, #0xD
  00184	0a000007	 beq         |$LN2@TestSystem|
  00188	e353000f	 cmp         r3, #0xF
  0018c	0a000003	 beq         |$LN4@TestSystem|
  00190	e3530010	 cmp         r3, #0x10

; 347  : 		//return TPR_ABORT;
; 348  : 		break;
; 349  : 	default:
; 350  : 		dwRet = TPR_ABORT;

  00194	1a000003	 bne         |$LN2@TestSystem|

; 341  : 	case TEST_FAIL:
; 342  : 		dwRet = TPR_FAIL;

  00198	e3a04004	 mov         r4, #4

; 343  : 		//return TEST_FAIL;
; 344  : 		break;

  0019c	ea000002	 b           |$cleanup$32833|
  001a0		 |$LN4@TestSystem|

; 336  : 	{
; 337  : 	case TEST_PASS:
; 338  : 		dwRet = TPR_PASS;

  001a0	e3a04003	 mov         r4, #3

; 339  : 		//return TPR_PASS;
; 340  : 		break;

  001a4	ea000000	 b           |$cleanup$32833|
  001a8		 |$LN2@TestSystem|

; 345  : 	case TEST_ERROR:
; 346  : 		dwRet = TPR_ABORT;

  001a8	e3a04005	 mov         r4, #5
  001ac		 |$cleanup$32833|

; 276  : 	{
; 277  : 		dwRet = TPR_ABORT;

  001ac	e5950008	 ldr         r0, [r5, #8]

; 354  : 
; 355  : cleanup:
; 356  : 	GetExitCodeThread(g_hPMThread1,&dwExitCode);

  001b0	e28d1008	 add         r1, sp, #8
  001b4	eb000000	 bl          GetExitCodeThread

; 357  : 	TerminateThread(g_hPMThread1,dwExitCode);

  001b8	e59d1008	 ldr         r1, [sp, #8]
  001bc	e5950008	 ldr         r0, [r5, #8]
  001c0	eb000000	 bl          TerminateThread

; 358  : 	return dwRet;

  001c4		 |$LN23@TestSystem|

; 359  : }

  001c4	e1a00004	 mov         r0, r4
  001c8	e28dd00c	 add         sp, sp, #0xC
  001cc	e8bd4ff0	 ldmia       sp!, {r4 - r11, lr}
  001d0	e12fff1e	 bx          lr
  001d4		 |$LN40@TestSystem|
  001d4		 |$LN41@TestSystem|
  001d4	00000000	 DCD         |??_C@_1BG@GJPBPDCP@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAE?$AAn?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  001d8		 |$LN42@TestSystem|
  001d8	00000000	 DCD         |__imp_?Log@CKato@@QAAHKPBGZZ|
  001dc		 |$LN43@TestSystem|
  001dc	00000000	 DCD         |??_C@_1BK@JEPHKMEI@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAA?$AAb?$AAo?$AAr?$AAt?$AA?$AN?$AA?6?$AA?$AA@|
  001e0		 |$LN44@TestSystem|
  001e0	00000000	 DCD         |??_C@_1BK@LHMDEIBD@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAe?$AAr?$AAr?$AAo?$AAr?$AA?$AN?$AA?6?$AA?$AA@|
  001e4		 |$LN45@TestSystem|
  001e4	00000000	 DCD         |??_C@_1BO@KLNMJA@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAf?$AAa?$AAi?$AAl?$AAe?$AAd?$AA?$CB?$AA?$AN?$AA?6?$AA?$AA@|
  001e8		 |$LN46@TestSystem|
  001e8	00000000	 DCD         |??_C@_1CC@FGOJDFKB@?$AAT?$AAe?$AAs?$AAt?$AA?5?$AAs?$AAu?$AAc?$AAc?$AAe?$AAe?$AAd?$AAe?$AAd?$AA?$AN?$AA?6?$AA?$AA@|
  001ec		 |$LN47@TestSystem|
  001ec	00000000	 DCD         |?g_TestStartTime@@3KA|
  001f0		 |$LN48@TestSystem|
  001f0	00000000	 DCD         |?g_bTestStatus@@3KA|
  001f4		 |$LN49@TestSystem|
  001f4	00000000	 DCD         |?g_pKato@@3PAVCKato@@A|
  001f8		 |$LN50@TestSystem|
  001f8	00000000	 DCD         |?g_StressCount@@3KA|
  001fc		 |$LN51@TestSystem|
  001fc	00000000	 DCD         |?PMNotificationThread@@YAKXZ|
  00200		 |$LN52@TestSystem|
  00200	00000000	 DCD         |?g_CurrentSystemTime@@3U_FILETIME@@A|
  00204		 |$M33761|

			 ENDP  ; |?TestSystemStateMachine@@YAHIPAKPAU_FUNCTION_TABLE_ENTRY@@@Z|, TestSystemStateMachine

	END
