; Listing generated by Microsoft (R) Optimizing Compiler Version 14.01.60511.01 

	TTL	C:\WINCE600\PLATFORM\Z2170P\SRC\KITL\KITLDLL\kitl.c
	CODE32

  00000			 AREA	 |.drectve|, DRECTVE
	DCB	"-defaultlib:LIBCMT "
	DCB	"-defaultlib:OLDNAMES "


  00000			 AREA	 |.data|, DATA
	 COMMON	|g_oalKitlBuffer|, 0x10000


  00000			 AREA	 |.rdata|, DATA, READONLY
|EdbgVendorIds| DCW 0x0
	DCW	0x0
	DCD	0x4033
	DCB	0x1
	DCB	"AD", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x4005
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x1050
	DCW	0x940
	DCD	0x2078
	DCB	0x1
	DCB	"LS", 0x0
	DCW	0x10ec
	DCW	0x8029
	DCD	0xc0f0
	DCB	0x1
	DCB	"KS", 0x0
	DCW	0x10ec
	DCW	0x8129
	DCD	0x0
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0x900b
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xd0c9
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x10ec
	DCW	0x8139
	DCD	0xe04c
	DCB	0x4
	DCB	"RT", 0x0
	DCW	0x1186
	DCW	0x1300
	DCD	0x50ba
	DCB	0x4
	DCB	"DL", 0x0
	DCW	0x100b
	DCW	0x20
	DCD	0xa0cc
	DCB	0x5
	DCB	"NG", 0x0
	DCW	0x10b7
	DCW	0x9050
	DCD	0x6008
	DCB	0x6
	DCB	"3C", 0x0
	DCW	0x10b7
	DCW	0x9200
	DCD	0x476
	DCB	0x6
	DCB	"3C", 0x0
	EXPORT	|OALKitlGetDevLoc|
	IMPORT	|memcpy|

  00000			 AREA	 |.bss|, NOINIT
|g_kitlState| %	0x40
|g_kitlState| %	0x40
; File c:\wince600\platform\z2170p\src\kitl\kitldll\kitl.c

  00000			 AREA	 |.pdata|, PDATA
|$T46567| DCD	|$LN7@OALKitlGet|
	DCD	0x40000e01
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALKitlGetDevLoc| PROC

; 67   : {

  00000		 |$LN7@OALKitlGet|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M46564|
  00004	e3500000	 cmp         r0, #0

; 68   :     if(pDevLoc)

  00008	0a000006	 beq         |$LN2@OALKitlGet|

; 69   :     {
; 70   :         memcpy(pDevLoc, &g_kitlState.args.devLoc, sizeof(*pDevLoc));

  0000c	e59f3020	 ldr         r3, [pc, #0x20]
  00010	e3a02014	 mov         r2, #0x14
  00014	e2831014	 add         r1, r3, #0x14
  00018	eb000000	 bl          memcpy

; 71   :         return TRUE;

  0001c	e3a00001	 mov         r0, #1

; 76   :     }
; 77   : }

  00020	e49de004	 ldr         lr, [sp], #4
  00024	e12fff1e	 bx          lr
  00028		 |$LN2@OALKitlGet|

; 72   :     }
; 73   :     else
; 74   :     {
; 75   :         return FALSE;

  00028	e3a00000	 mov         r0, #0

; 76   :     }
; 77   : }

  0002c	e49de004	 ldr         lr, [sp], #4
  00030	e12fff1e	 bx          lr
  00034		 |$LN8@OALKitlGet|
  00034		 |$LN9@OALKitlGet|
  00034	00000000	 DCD         |g_kitlState|
  00038		 |$M46565|

			 ENDP  ; |OALKitlGetDevLoc|

	EXPORT	|OALKitlGetFlags|

  00000			 AREA	 |.pdata|, PDATA
|$T46579| DCD	|$LN6@OALKitlGet@2|
	DCD	0x40000700
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALKitlGetFlags| PROC

; 86   : {

  00000		 |$LN6@OALKitlGet@2|
  00000		 |$M46576|
  00000	e3500000	 cmp         r0, #0

; 87   :     if(pFlags)
; 88   :     {
; 89   :         memcpy(pFlags, &g_kitlState.args.flags, sizeof(*pFlags));

  00004	159f300c	 ldrne       r3, [pc, #0xC]
  00008	15933010	 ldrne       r3, [r3, #0x10]
  0000c	15803000	 strne       r3, [r0]

; 90   :     }
; 91   :     return TRUE;

  00010	e3a00001	 mov         r0, #1

; 92   : }

  00014	e12fff1e	 bx          lr
  00018		 |$LN7@OALKitlGet@2|
  00018		 |$LN8@OALKitlGet@2|
  00018	00000000	 DCD         |g_kitlState|
  0001c		 |$M46577|

			 ENDP  ; |OALKitlGetFlags|

	EXPORT	|KitlLogSetZones|
	EXPORT	|??_C@_1GM@LBPDAPNJ@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AAO?$AAA?$AAL?$AAL?$AAo?$AAg?$AAS?$AAe?$AAt?$AAZ?$AAo?$AAn?$AAe?$AAs?$AA?3?$AA?5?$AAd?$AAp?$AAC?$AAu?$AAr?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn@| [ DATA ] ; `string'
	IMPORT	|NKDbgPrintfW|
	IMPORT	|dpCurSettings|

  00000			 AREA	 |.pdata|, PDATA
|$T46591| DCD	|$LN7@KitlLogSet|
	DCD	0x40000b01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_1GM@LBPDAPNJ@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AAO?$AAA?$AAL?$AAL?$AAo?$AAg?$AAS?$AAe?$AAt?$AAZ?$AAo?$AAn?$AAe?$AAs?$AA?3?$AA?5?$AAd?$AAp?$AAC?$AAu?$AAr?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn@| DCB "I"
	DCB	0x0, "N", 0x0, "F", 0x0, "O", 0x0, ":", 0x0, "O", 0x0, "A"
	DCB	0x0, "L", 0x0, "L", 0x0, "o", 0x0, "g", 0x0, "S", 0x0, "e"
	DCB	0x0, "t", 0x0, "Z", 0x0, "o", 0x0, "n", 0x0, "e", 0x0, "s"
	DCB	0x0, ":", 0x0, " ", 0x0, "d", 0x0, "p", 0x0, "C", 0x0, "u"
	DCB	0x0, "r", 0x0, "S", 0x0, "e", 0x0, "t", 0x0, "t", 0x0, "i"
	DCB	0x0, "n", 0x0, "g", 0x0, "s", 0x0, ".", 0x0, "u", 0x0, "l"
	DCB	0x0, "Z", 0x0, "o", 0x0, "n", 0x0, "e", 0x0, "M", 0x0, "a"
	DCB	0x0, "s", 0x0, "k", 0x0, ":", 0x0, " ", 0x0, "0", 0x0, "x"
	DCB	0x0, "%", 0x0, "x", 0x0, 0xd, 0x0, 0xa, 0x0, 0x0, 0x0 ; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |KitlLogSetZones| PROC

; 101  : {

  00000		 |$LN7@KitlLogSet|
  00000	e52de004	 str         lr, [sp, #-4]!
  00004		 |$M46588|
  00004	e1a01000	 mov         r1, r0

; 102  :     // Update dpCurSettings mask which actually controls the zones
; 103  :     dpCurSettings.ulZoneMask = newMask;

  00008	e59f3018	 ldr         r3, [pc, #0x18]

; 104  : 
; 105  :     OALMSG(OAL_INFO, (
; 106  :         L"INFO:OALLogSetZones: dpCurSettings.ulZoneMask: 0x%x\r\n",
; 107  :         dpCurSettings.ulZoneMask
; 108  :     ));

  0000c	e3110008	 tst         r1, #8
  00010	159f000c	 ldrne       r0, [pc, #0xC]
  00014	e5831440	 str         r1, [r3, #0x440]
  00018	1b000000	 blne        NKDbgPrintfW

; 109  : }

  0001c	e49de004	 ldr         lr, [sp], #4
  00020	e12fff1e	 bx          lr
  00024		 |$LN8@KitlLogSet|
  00024		 |$LN9@KitlLogSet|
  00024	00000000	 DCD         |??_C@_1GM@LBPDAPNJ@?$AAI?$AAN?$AAF?$AAO?$AA?3?$AAO?$AAA?$AAL?$AAL?$AAo?$AAg?$AAS?$AAe?$AAt?$AAZ?$AAo?$AAn?$AAe?$AAs?$AA?3?$AA?5?$AAd?$AAp?$AAC?$AAu?$AAr?$AAS?$AAe?$AAt?$AAt?$AAi?$AAn@|
  00028		 |$LN10@KitlLogSet|
  00028	00000000	 DCD         |dpCurSettings|
  0002c		 |$M46589|

			 ENDP  ; |KitlLogSetZones|

	EXPORT	|OALKitlInit|
	EXPORT	|??_C@_0BI@KCIPJAAG@?9OALKitlInit?$CIrc?5?$DN?5?$CFd?$CJ?$AN?6?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_0CG@NCCHEHBN@ERROR?3?5OALKitlInit?3?5KitlInit?5fai@| [ DATA ] ; `string'
	EXPORT	|??_C@_0FE@CMGNHMCB@ERROR?3?5OALKitlInit?3?5No?5supported@| [ DATA ] ; `string'
	EXPORT	|??_C@_0CD@KFHIJAFP@WARN?3?5OALKitlInit?3?5KITL?5Disabled@| [ DATA ] ; `string'
	EXPORT	|??_C@_0CB@ICNOHDED@pDevice?9?$DOpDriver?4?4?4?4?4?4?4?4?4?50x?$CFx?$AN?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_0BP@LAJLJKFE@pDevice?9?$DOtype?4?4?4?4?4?4?4?4?4?4?4?4?5?$CFd?$AN?6?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_0BP@OJPECLKF@pDevice?9?$DOresource?4?4?4?4?4?4?4?4?5?$CFd?$AN?6?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_0CB@JAOILBKH@pDevice?9?$DOid?4?4?4?4?4?4?4?4?4?4?4?4?4?4?50x?$CFx?$AN?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_0BP@ELIKEIPK@pDevice?9?$DOifcType?4?4?4?4?4?4?4?4?4?5?$CFd?$AN?6?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_0CA@MADPCADD@pDevice?9?$DOName?4?4?4?4?4?4?4?4?4?4?4?4?5?$CFhs?$AN?6?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_0CL@PIBLEJAN@pArgs?9?$DOmac?4?4?4?4?4?4?4?4?4?4?4?4?4?4?4?50x?$CFx?50@| [ DATA ] ; `string'
	EXPORT	|??_C@_0BP@GCIAPLEP@pArgs?9?$DOip4address?4?4?4?4?4?4?4?4?5?$CFs?$AN?6?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_0BP@EDAFLEND@pArgs?9?$DOdevLoc?4Pin?4?4?4?4?4?4?4?4?5?$CFd?$AN?6?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_0CB@ELNIEECP@pArgs?9?$DOdevLoc?4PhysicalLoc?50x?$CFx?$AN?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_0CB@OOHPGPEK@pArgs?9?$DOdevLoc?4LogicalLoc?4?50x?$CFx?$AN?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_0BP@CLIEPDAL@pArgs?9?$DOdevLoc?4IfcType?4?4?4?4?5?$CFd?$AN?6?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_0CB@LJCIEGGC@pArgs?9?$DOflags?4?4?4?4?4?4?4?4?4?4?4?4?4?50x?$CFx?$AN?6@| [ DATA ] ; `string'
	EXPORT	|??_C@_0BP@HJJCJHBD@DeviceId?4?4?4?4?4?4?4?4?4?4?4?4?4?4?4?4?4?5?$CFs?$AN?6?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_0DF@BBIFGKFF@?$CLOALKitlInit?$CI?8?$CFhs?8?0?50x?$CF08x?5?9?5?$CFd?1@| [ DATA ] ; `string'
	IMPORT	|KitlInit|
	IMPORT	|OALVAtoPA|
	IMPORT	|OALKitlFindDevice|
	IMPORT	|OALKitlIPtoString|
	IMPORT	|KITLOutputDebugString|

  00000			 AREA	 |.pdata|, PDATA
|$T46647| DCD	|$LN48@OALKitlIni|
	DCD	0x4000ae02

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0BI@KCIPJAAG@?9OALKitlInit?$CIrc?5?$DN?5?$CFd?$CJ?$AN?6?$AA@| DCB "-"
	DCB	"OALKitlInit(rc = %d)", 0xd, 0xa, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0CG@NCCHEHBN@ERROR?3?5OALKitlInit?3?5KitlInit?5fai@| DCB "ERROR: O"
	DCB	"ALKitlInit: KitlInit failed", 0xd, 0xa, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0FE@CMGNHMCB@ERROR?3?5OALKitlInit?3?5No?5supported@| DCB "ERROR: O"
	DCB	"ALKitlInit: No supported KITL device at interface %d bus"
	DCB	" %d location 0x%x", 0xd, 0xa, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0CD@KFHIJAFP@WARN?3?5OALKitlInit?3?5KITL?5Disabled@| DCB "WARN: OA"
	DCB	"LKitlInit: KITL Disabled", 0xd, 0xa, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0CB@ICNOHDED@pDevice?9?$DOpDriver?4?4?4?4?4?4?4?4?4?50x?$CFx?$AN?6@| DCB "p"
	DCB	"Device->pDriver......... 0x%x", 0xd, 0xa, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0BP@LAJLJKFE@pDevice?9?$DOtype?4?4?4?4?4?4?4?4?4?4?4?4?5?$CFd?$AN?6?$AA@| DCB "p"
	DCB	"Device->type............ %d", 0xd, 0xa, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0BP@OJPECLKF@pDevice?9?$DOresource?4?4?4?4?4?4?4?4?5?$CFd?$AN?6?$AA@| DCB "p"
	DCB	"Device->resource........ %d", 0xd, 0xa, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0CB@JAOILBKH@pDevice?9?$DOid?4?4?4?4?4?4?4?4?4?4?4?4?4?4?50x?$CFx?$AN?6@| DCB "p"
	DCB	"Device->id.............. 0x%x", 0xd, 0xa, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0BP@ELIKEIPK@pDevice?9?$DOifcType?4?4?4?4?4?4?4?4?4?5?$CFd?$AN?6?$AA@| DCB "p"
	DCB	"Device->ifcType......... %d", 0xd, 0xa, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0CA@MADPCADD@pDevice?9?$DOName?4?4?4?4?4?4?4?4?4?4?4?4?5?$CFhs?$AN?6?$AA@| DCB "p"
	DCB	"Device->Name............ %hs", 0xd, 0xa, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0CL@PIBLEJAN@pArgs?9?$DOmac?4?4?4?4?4?4?4?4?4?4?4?4?4?4?4?50x?$CFx?50@| DCB "p"
	DCB	"Args->mac............... 0x%x 0x%x 0x%x", 0xd, 0xa, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0BP@GCIAPLEP@pArgs?9?$DOip4address?4?4?4?4?4?4?4?4?5?$CFs?$AN?6?$AA@| DCB "p"
	DCB	"Args->ip4address........ %s", 0xd, 0xa, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0BP@EDAFLEND@pArgs?9?$DOdevLoc?4Pin?4?4?4?4?4?4?4?4?5?$CFd?$AN?6?$AA@| DCB "p"
	DCB	"Args->devLoc.Pin........ %d", 0xd, 0xa, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0CB@ELNIEECP@pArgs?9?$DOdevLoc?4PhysicalLoc?50x?$CFx?$AN?6@| DCB "p"
	DCB	"Args->devLoc.PhysicalLoc 0x%x", 0xd, 0xa, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0CB@OOHPGPEK@pArgs?9?$DOdevLoc?4LogicalLoc?4?50x?$CFx?$AN?6@| DCB "p"
	DCB	"Args->devLoc.LogicalLoc. 0x%x", 0xd, 0xa, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0BP@CLIEPDAL@pArgs?9?$DOdevLoc?4IfcType?4?4?4?4?5?$CFd?$AN?6?$AA@| DCB "p"
	DCB	"Args->devLoc.IfcType.... %d", 0xd, 0xa, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0CB@LJCIEGGC@pArgs?9?$DOflags?4?4?4?4?4?4?4?4?4?4?4?4?4?50x?$CFx?$AN?6@| DCB "p"
	DCB	"Args->flags............. 0x%x", 0xd, 0xa, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0BP@HJJCJHBD@DeviceId?4?4?4?4?4?4?4?4?4?4?4?4?4?4?4?4?4?5?$CFs?$AN?6?$AA@| DCB "D"
	DCB	"eviceId................. %s", 0xd, 0xa, 0x0 ; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0DF@BBIFGKFF@?$CLOALKitlInit?$CI?8?$CFhs?8?0?50x?$CF08x?5?9?5?$CFd?1@| DCB "+"
	DCB	"OALKitlInit('%hs', 0x%08x - %d/%d/0x%08x, 0x%08x)", 0xd, 0xa
	DCB	0x0					; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALKitlInit| PROC

; 168  : ) {

  00000		 |$LN48@OALKitlIni|
  00000	e92d43f0	 stmdb       sp!, {r4 - r9, lr}
  00004	e24dd00c	 sub         sp, sp, #0xC
  00008		 |$M46644|
  00008	e1a07002	 mov         r7, r2
  0000c	e1a06001	 mov         r6, r1
  00010	e1a09000	 mov         r9, r0

; 169  :     BOOL rc = FALSE;
; 170  : 
; 171  :     KITL_RETAILMSG(ZONE_KITL_OAL, (
; 172  :         "+OALKitlInit('%hs', 0x%08x - %d/%d/0x%08x, 0x%08x)\r\n", deviceId, 
; 173  :         pArgs->flags, pArgs->devLoc.IfcType, pArgs->devLoc.BusNumber, 
; 174  :         pArgs->devLoc.LogicalLoc, pDevice
; 175  :     ));

  00014	e59f5298	 ldr         r5, [pc, #0x298]
  00018	e3a08000	 mov         r8, #0
  0001c	e5953440	 ldr         r3, [r5, #0x440]
  00020	e3130a01	 tst         r3, #1, 20
  00024	0a000009	 beq         |$LN6@OALKitlIni|
  00028	e596e00c	 ldr         lr, [r6, #0xC]
  0002c	e5964008	 ldr         r4, [r6, #8]
  00030	e5963004	 ldr         r3, [r6, #4]
  00034	e5962000	 ldr         r2, [r6]
  00038	e59f0270	 ldr         r0, [pc, #0x270]
  0003c	e1a01009	 mov         r1, r9
  00040	e58de004	 str         lr, [sp, #4]
  00044	e58d4000	 str         r4, [sp]
  00048	e58d7008	 str         r7, [sp, #8]
  0004c	eb000000	 bl          KITLOutputDebugString
  00050		 |$LN6@OALKitlIni|
  00050	e5953440	 ldr         r3, [r5, #0x440]

; 176  : 
; 177  :     // Display KITL parameters
; 178  :     KITL_RETAILMSG(ZONE_INIT, (
; 179  :         "DeviceId................. %s\r\n", deviceId
; 180  :     ));

  00054	e3130002	 tst         r3, #2
  00058	159f024c	 ldrne       r0, [pc, #0x24C]
  0005c	11a01009	 movne       r1, r9
  00060	1b000000	 blne        KITLOutputDebugString
  00064	e5953440	 ldr         r3, [r5, #0x440]

; 181  :     KITL_RETAILMSG(ZONE_INIT, (
; 182  :         "pArgs->flags............. 0x%x\r\n", pArgs->flags
; 183  :     ));

  00068	e3130002	 tst         r3, #2
  0006c	15961000	 ldrne       r1, [r6]
  00070	159f0230	 ldrne       r0, [pc, #0x230]
  00074	1b000000	 blne        KITLOutputDebugString
  00078	e5953440	 ldr         r3, [r5, #0x440]

; 184  :     KITL_RETAILMSG(ZONE_INIT, (
; 185  :         "pArgs->devLoc.IfcType.... %d\r\n",   pArgs->devLoc.IfcType
; 186  :     ));

  0007c	e3130002	 tst         r3, #2
  00080	15961004	 ldrne       r1, [r6, #4]
  00084	159f0218	 ldrne       r0, [pc, #0x218]
  00088	1b000000	 blne        KITLOutputDebugString
  0008c	e5953440	 ldr         r3, [r5, #0x440]

; 187  :     KITL_RETAILMSG(ZONE_INIT, (
; 188  :         "pArgs->devLoc.LogicalLoc. 0x%x\r\n", pArgs->devLoc.LogicalLoc
; 189  :     ));

  00090	e3130002	 tst         r3, #2
  00094	1596100c	 ldrne       r1, [r6, #0xC]
  00098	159f0200	 ldrne       r0, [pc, #0x200]
  0009c	1b000000	 blne        KITLOutputDebugString
  000a0	e5953440	 ldr         r3, [r5, #0x440]

; 190  :     KITL_RETAILMSG(ZONE_INIT, (
; 191  :         "pArgs->devLoc.PhysicalLoc 0x%x\r\n", pArgs->devLoc.PhysicalLoc
; 192  :     ));

  000a4	e3130002	 tst         r3, #2
  000a8	15961010	 ldrne       r1, [r6, #0x10]
  000ac	159f01e8	 ldrne       r0, [pc, #0x1E8]
  000b0	1b000000	 blne        KITLOutputDebugString
  000b4	e5953440	 ldr         r3, [r5, #0x440]

; 193  :     KITL_RETAILMSG(ZONE_INIT, (
; 194  :         "pArgs->devLoc.Pin........ %d\r\n",   pArgs->devLoc.Pin
; 195  :     ));

  000b8	e3130002	 tst         r3, #2
  000bc	15961014	 ldrne       r1, [r6, #0x14]
  000c0	159f01d0	 ldrne       r0, [pc, #0x1D0]
  000c4	1b000000	 blne        KITLOutputDebugString
  000c8	e5953440	 ldr         r3, [r5, #0x440]

; 196  :     KITL_RETAILMSG(ZONE_INIT, (
; 197  :         "pArgs->ip4address........ %s\r\n",   OALKitlIPtoString(pArgs->ipAddress)
; 198  :     ));

  000cc	e3130002	 tst         r3, #2
  000d0	0a000004	 beq         |$LN20@OALKitlIni|
  000d4	e5960020	 ldr         r0, [r6, #0x20]
  000d8	eb000000	 bl          OALKitlIPtoString
  000dc	e1a01000	 mov         r1, r0
  000e0	e59f01ac	 ldr         r0, [pc, #0x1AC]
  000e4	eb000000	 bl          KITLOutputDebugString
  000e8		 |$LN20@OALKitlIni|
  000e8	e5953440	 ldr         r3, [r5, #0x440]

; 199  :    KITL_RETAILMSG(ZONE_INIT, (
; 200  :         "pArgs->mac............... 0x%x 0x%x 0x%x\r\n", pArgs->mac[0], pArgs->mac[1], pArgs->mac[2]
; 201  :     ));

  000ec	e3130002	 tst         r3, #2
  000f0	11d631bc	 ldrneh      r3, [r6, #0x1C]
  000f4	11d621ba	 ldrneh      r2, [r6, #0x1A]
  000f8	11d611b8	 ldrneh      r1, [r6, #0x18]
  000fc	159f018c	 ldrne       r0, [pc, #0x18C]
  00100	1b000000	 blne        KITLOutputDebugString
  00104	e5953440	 ldr         r3, [r5, #0x440]

; 202  : 
; 203  :     KITL_RETAILMSG(ZONE_INIT, (
; 204  :         "pDevice->Name............ %hs\r\n",   pDevice->name
; 205  :     ));

  00108	e3130002	 tst         r3, #2
  0010c	15971000	 ldrne       r1, [r7]
  00110	159f0174	 ldrne       r0, [pc, #0x174]
  00114	1b000000	 blne        KITLOutputDebugString
  00118	e5953440	 ldr         r3, [r5, #0x440]

; 206  :     KITL_RETAILMSG(ZONE_INIT, (
; 207  :         "pDevice->ifcType......... %d\r\n",   pDevice->ifcType
; 208  :     ));

  0011c	e3130002	 tst         r3, #2
  00120	15971004	 ldrne       r1, [r7, #4]
  00124	159f015c	 ldrne       r0, [pc, #0x15C]
  00128	1b000000	 blne        KITLOutputDebugString
  0012c	e5953440	 ldr         r3, [r5, #0x440]

; 209  :     KITL_RETAILMSG(ZONE_INIT, (
; 210  :         "pDevice->id.............. 0x%x\r\n", pDevice->id
; 211  :     ));

  00130	e3130002	 tst         r3, #2
  00134	15971008	 ldrne       r1, [r7, #8]
  00138	159f0144	 ldrne       r0, [pc, #0x144]
  0013c	1b000000	 blne        KITLOutputDebugString
  00140	e5953440	 ldr         r3, [r5, #0x440]

; 212  :     KITL_RETAILMSG(ZONE_INIT, (
; 213  :         "pDevice->resource........ %d\r\n",   pDevice->resource
; 214  :     ));

  00144	e3130002	 tst         r3, #2
  00148	1597100c	 ldrne       r1, [r7, #0xC]
  0014c	159f012c	 ldrne       r0, [pc, #0x12C]
  00150	1b000000	 blne        KITLOutputDebugString
  00154	e5953440	 ldr         r3, [r5, #0x440]

; 215  :     KITL_RETAILMSG(ZONE_INIT, (
; 216  :         "pDevice->type............ %d\r\n",   pDevice->type
; 217  :     ));

  00158	e3130002	 tst         r3, #2
  0015c	15971010	 ldrne       r1, [r7, #0x10]
  00160	159f0114	 ldrne       r0, [pc, #0x114]
  00164	1b000000	 blne        KITLOutputDebugString
  00168	e5953440	 ldr         r3, [r5, #0x440]

; 218  :     KITL_RETAILMSG(ZONE_INIT, (
; 219  :         "pDevice->pDriver......... 0x%x\r\n", pDevice->pDriver
; 220  :     ));

  0016c	e3130002	 tst         r3, #2
  00170	15971014	 ldrne       r1, [r7, #0x14]
  00174	159f00fc	 ldrne       r0, [pc, #0xFC]
  00178	1b000000	 blne        KITLOutputDebugString

; 221  : 
; 222  :     // If KITL is disabled simply return
; 223  :     if ((pArgs->flags & OAL_KITL_FLAGS_ENABLED) == 0) {

  0017c	e5963000	 ldr         r3, [r6]
  00180	e3130001	 tst         r3, #1
  00184	1a00000d	 bne         |$LN3@OALKitlIni|
  00188	e5953440	 ldr         r3, [r5, #0x440]

; 224  :         KITL_RETAILMSG(ZONE_WARNING, ("WARN: OALKitlInit: KITL Disabled\r\n"));

  0018c	e3130001	 tst         r3, #1
  00190	159f00dc	 ldrne       r0, [pc, #0xDC]
  00194	1b000000	 blne        KITLOutputDebugString
  00198		 |$LN1@OALKitlIni|

; 258  :     }
; 259  :     
; 260  :     rc = TRUE;

  00198	e3a08001	 mov         r8, #1
  0019c		 |$cleanUp$46453|

; 169  :     BOOL rc = FALSE;
; 170  : 
; 171  :     KITL_RETAILMSG(ZONE_KITL_OAL, (
; 172  :         "+OALKitlInit('%hs', 0x%08x - %d/%d/0x%08x, 0x%08x)\r\n", deviceId, 
; 173  :         pArgs->flags, pArgs->devLoc.IfcType, pArgs->devLoc.BusNumber, 
; 174  :         pArgs->devLoc.LogicalLoc, pDevice
; 175  :     ));

  0019c	e5953440	 ldr         r3, [r5, #0x440]

; 261  :     
; 262  : cleanUp:
; 263  :     KITL_RETAILMSG(ZONE_KITL_OAL, ("-OALKitlInit(rc = %d)\r\n", rc));

  001a0	e3130a01	 tst         r3, #1, 20
  001a4	159f00c4	 ldrne       r0, [pc, #0xC4]
  001a8	11a01008	 movne       r1, r8
  001ac	1b000000	 blne        KITLOutputDebugString

; 264  :     return rc;
; 265  : }

  001b0	e1a00008	 mov         r0, r8
  001b4	e28dd00c	 add         sp, sp, #0xC
  001b8	e8bd43f0	 ldmia       sp!, {r4 - r9, lr}
  001bc	e12fff1e	 bx          lr
  001c0		 |$LN3@OALKitlIni|

; 225  :         rc = TRUE;
; 226  :         goto cleanUp;
; 227  :     }
; 228  : 
; 229  :     // Find if we support device on given location
; 230  :     g_kitlState.pDevice = OALKitlFindDevice(&pArgs->devLoc, pDevice);

  001c0	e1a01007	 mov         r1, r7
  001c4	e2860004	 add         r0, r6, #4
  001c8	eb000000	 bl          OALKitlFindDevice
  001cc	e59f4098	 ldr         r4, [pc, #0x98]
  001d0	e3500000	 cmp         r0, #0
  001d4	e584003c	 str         r0, [r4, #0x3C]

; 231  :     if (g_kitlState.pDevice == NULL) {

  001d8	1a000008	 bne         |$LN2@OALKitlIni|
  001dc	e5953440	 ldr         r3, [r5, #0x440]

; 232  :         KITL_RETAILMSG(ZONE_ERROR, (
; 233  :             "ERROR: OALKitlInit: No supported KITL device at interface %d "
; 234  :             "bus %d location 0x%x\r\n", pArgs->devLoc.IfcType,
; 235  :             pArgs->devLoc.BusNumber, pArgs->devLoc.LogicalLoc
; 236  :         ));

  001e0	e3130902	 tst         r3, #2, 18
  001e4	0affffec	 beq         |$cleanUp$46453|
  001e8	e596300c	 ldr         r3, [r6, #0xC]
  001ec	e5962008	 ldr         r2, [r6, #8]
  001f0	e5961004	 ldr         r1, [r6, #4]
  001f4	e59f006c	 ldr         r0, [pc, #0x6C]
  001f8	eb000000	 bl          KITLOutputDebugString

; 237  :         goto cleanUp;

  001fc	eaffffe6	 b           |$cleanUp$46453|
  00200		 |$LN2@OALKitlIni|

; 238  :     }
; 239  : 
; 240  :     // RNDIS_MDD (public code) attempts to map devLoc.PhysicalLoc with
; 241  :     // NKCreateStaticMapping.  NKCreateStaticMapping requires a true
; 242  :     // physical address.  OALKitlFindDevice fills in devLoc.PhysicalLoc
; 243  :     // with the kernel mode virtual address which causes NKCreateStaticMapping
; 244  :     // to fail.
; 245  :     // Overwrite devLoc.PhysicalLoc with the actual physical address so 
; 246  :     // this function succeeds.  Note that all kitl transports need to 
; 247  :     // handle a true physical address in this location.
; 248  :     pArgs->devLoc.PhysicalLoc = (PVOID)OALVAtoPA(pArgs->devLoc.PhysicalLoc);

  00200	e5960010	 ldr         r0, [r6, #0x10]
  00204	eb000000	 bl          OALVAtoPA
  00208	e1a03000	 mov         r3, r0

; 249  :     
; 250  :     // Save KITL configuration 
; 251  :     memcpy(g_kitlState.deviceId, deviceId, sizeof(g_kitlState.deviceId));

  0020c	e1a00004	 mov         r0, r4
  00210	e3a02010	 mov         r2, #0x10
  00214	e1a01009	 mov         r1, r9
  00218	e5863010	 str         r3, [r6, #0x10]
  0021c	eb000000	 bl          memcpy

; 252  :     memcpy(&g_kitlState.args, pArgs, sizeof(g_kitlState.args));

  00220	e2840010	 add         r0, r4, #0x10
  00224	e3a0202c	 mov         r2, #0x2C
  00228	e1a01006	 mov         r1, r6
  0022c	eb000000	 bl          memcpy

; 253  :             
; 254  :     // Start KITL in desired mode
; 255  :     if (!KitlInit((pArgs->flags & OAL_KITL_FLAGS_PASSIVE) == 0)) {

  00230	e5963000	 ldr         r3, [r6]
  00234	e3130002	 tst         r3, #2
  00238	03a00001	 moveq       r0, #1
  0023c	13a00000	 movne       r0, #0
  00240	eb000000	 bl          KitlInit
  00244	e3500000	 cmp         r0, #0
  00248	1affffd2	 bne         |$LN1@OALKitlIni|
  0024c	e5953440	 ldr         r3, [r5, #0x440]

; 256  :         KITL_RETAILMSG(ZONE_ERROR, ("ERROR: OALKitlInit: KitlInit failed\r\n"));

  00250	e3130902	 tst         r3, #2, 18
  00254	0affffd0	 beq         |$cleanUp$46453|
  00258	e59f0004	 ldr         r0, [pc, #4]
  0025c	eb000000	 bl          KITLOutputDebugString

; 257  :         goto cleanUp;

  00260	eaffffcd	 b           |$cleanUp$46453|
  00264		 |$LN49@OALKitlIni|
  00264		 |$LN50@OALKitlIni|
  00264	00000000	 DCD         |??_C@_0CG@NCCHEHBN@ERROR?3?5OALKitlInit?3?5KitlInit?5fai@|
  00268		 |$LN51@OALKitlIni|
  00268	00000000	 DCD         |??_C@_0FE@CMGNHMCB@ERROR?3?5OALKitlInit?3?5No?5supported@|
  0026c		 |$LN52@OALKitlIni|
  0026c	00000000	 DCD         |g_kitlState|
  00270		 |$LN53@OALKitlIni|
  00270	00000000	 DCD         |??_C@_0BI@KCIPJAAG@?9OALKitlInit?$CIrc?5?$DN?5?$CFd?$CJ?$AN?6?$AA@|
  00274		 |$LN54@OALKitlIni|
  00274	00000000	 DCD         |??_C@_0CD@KFHIJAFP@WARN?3?5OALKitlInit?3?5KITL?5Disabled@|
  00278		 |$LN55@OALKitlIni|
  00278	00000000	 DCD         |??_C@_0CB@ICNOHDED@pDevice?9?$DOpDriver?4?4?4?4?4?4?4?4?4?50x?$CFx?$AN?6@|
  0027c		 |$LN56@OALKitlIni|
  0027c	00000000	 DCD         |??_C@_0BP@LAJLJKFE@pDevice?9?$DOtype?4?4?4?4?4?4?4?4?4?4?4?4?5?$CFd?$AN?6?$AA@|
  00280		 |$LN57@OALKitlIni|
  00280	00000000	 DCD         |??_C@_0BP@OJPECLKF@pDevice?9?$DOresource?4?4?4?4?4?4?4?4?5?$CFd?$AN?6?$AA@|
  00284		 |$LN58@OALKitlIni|
  00284	00000000	 DCD         |??_C@_0CB@JAOILBKH@pDevice?9?$DOid?4?4?4?4?4?4?4?4?4?4?4?4?4?4?50x?$CFx?$AN?6@|
  00288		 |$LN59@OALKitlIni|
  00288	00000000	 DCD         |??_C@_0BP@ELIKEIPK@pDevice?9?$DOifcType?4?4?4?4?4?4?4?4?4?5?$CFd?$AN?6?$AA@|
  0028c		 |$LN60@OALKitlIni|
  0028c	00000000	 DCD         |??_C@_0CA@MADPCADD@pDevice?9?$DOName?4?4?4?4?4?4?4?4?4?4?4?4?5?$CFhs?$AN?6?$AA@|
  00290		 |$LN61@OALKitlIni|
  00290	00000000	 DCD         |??_C@_0CL@PIBLEJAN@pArgs?9?$DOmac?4?4?4?4?4?4?4?4?4?4?4?4?4?4?4?50x?$CFx?50@|
  00294		 |$LN62@OALKitlIni|
  00294	00000000	 DCD         |??_C@_0BP@GCIAPLEP@pArgs?9?$DOip4address?4?4?4?4?4?4?4?4?5?$CFs?$AN?6?$AA@|
  00298		 |$LN63@OALKitlIni|
  00298	00000000	 DCD         |??_C@_0BP@EDAFLEND@pArgs?9?$DOdevLoc?4Pin?4?4?4?4?4?4?4?4?5?$CFd?$AN?6?$AA@|
  0029c		 |$LN64@OALKitlIni|
  0029c	00000000	 DCD         |??_C@_0CB@ELNIEECP@pArgs?9?$DOdevLoc?4PhysicalLoc?50x?$CFx?$AN?6@|
  002a0		 |$LN65@OALKitlIni|
  002a0	00000000	 DCD         |??_C@_0CB@OOHPGPEK@pArgs?9?$DOdevLoc?4LogicalLoc?4?50x?$CFx?$AN?6@|
  002a4		 |$LN66@OALKitlIni|
  002a4	00000000	 DCD         |??_C@_0BP@CLIEPDAL@pArgs?9?$DOdevLoc?4IfcType?4?4?4?4?5?$CFd?$AN?6?$AA@|
  002a8		 |$LN67@OALKitlIni|
  002a8	00000000	 DCD         |??_C@_0CB@LJCIEGGC@pArgs?9?$DOflags?4?4?4?4?4?4?4?4?4?4?4?4?4?50x?$CFx?$AN?6@|
  002ac		 |$LN68@OALKitlIni|
  002ac	00000000	 DCD         |??_C@_0BP@HJJCJHBD@DeviceId?4?4?4?4?4?4?4?4?4?4?4?4?4?4?4?4?4?5?$CFs?$AN?6?$AA@|
  002b0		 |$LN69@OALKitlIni|
  002b0	00000000	 DCD         |??_C@_0DF@BBIFGKFF@?$CLOALKitlInit?$CI?8?$CFhs?8?0?50x?$CF08x?5?9?5?$CFd?1@|
  002b4		 |$LN70@OALKitlIni|
  002b4	00000000	 DCD         |dpCurSettings|
  002b8		 |$M46645|

			 ENDP  ; |OALKitlInit|

	EXPORT	|OALKitlPowerOff|
	EXPORT	|??_C@_0BD@GBONLPAN@?9OALKitlPowerOff?$AN?6?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_0BD@PMDBLEBO@?$CLOALKitlPowerOff?$AN?6?$AA@| [ DATA ] ; `string'
	IMPORT	|OEMKitlEnable|

  00000			 AREA	 |.pdata|, PDATA
|$T46682| DCD	|$LN15@OALKitlPow|
	DCD	0x40002801

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0BD@GBONLPAN@?9OALKitlPowerOff?$AN?6?$AA@| DCB "-OALKitlPowerOff", 0xd
	DCB	0xa, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0BD@PMDBLEBO@?$CLOALKitlPowerOff?$AN?6?$AA@| DCB "+OALKitlPowerOff"
	DCB	0xd, 0xa, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALKitlPowerOff| PROC

; 276  : {

  00000		 |$LN15@OALKitlPow|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M46679|

; 277  :     KITL_RETAILMSG(ZONE_KITL_OAL, ("+OALKitlPowerOff\r\n"));

  00004	e59f4090	 ldr         r4, [pc, #0x90]
  00008	e5943440	 ldr         r3, [r4, #0x440]
  0000c	e3130a01	 tst         r3, #1, 20
  00010	159f0080	 ldrne       r0, [pc, #0x80]
  00014	1b000000	 blne        KITLOutputDebugString

; 278  :     
; 279  :     switch (g_kitlState.pDevice->type) {

  00018	e59f3074	 ldr         r3, [pc, #0x74]
  0001c	e593303c	 ldr         r3, [r3, #0x3C]
  00020	e5932010	 ldr         r2, [r3, #0x10]
  00024	e3520001	 cmp         r2, #1
  00028	0a00000a	 beq         |$LN2@OALKitlPow|
  0002c	e3520002	 cmp         r2, #2
  00030	1a00000e	 bne         |$LN1@OALKitlPow|

; 280  : #ifdef KITL_ETHER
; 281  :     case OAL_KITL_TYPE_ETH:
; 282  :         {
; 283  :             OAL_KITL_ETH_DRIVER *pDriver;
; 284  :             pDriver = (OAL_KITL_ETH_DRIVER*)g_kitlState.pDevice->pDriver;

  00034	e5933014	 ldr         r3, [r3, #0x14]
  00038	e3530000	 cmp         r3, #0

; 285  :             if (pDriver && pDriver->pfnPowerOff != NULL) pDriver->pfnPowerOff();

  0003c	0a00000b	 beq         |$LN1@OALKitlPow|
  00040	e593301c	 ldr         r3, [r3, #0x1C]
  00044	e3530000	 cmp         r3, #0
  00048	0a000008	 beq         |$LN1@OALKitlPow|
  0004c	e1a0e00f	 mov         lr, pc
  00050	e12fff13	 bx          r3

; 286  :         }            
; 287  :         break;

  00054	ea000005	 b           |$LN1@OALKitlPow|
  00058		 |$LN2@OALKitlPow|

; 288  : #endif
; 289  : #ifdef KITL_SERIAL
; 290  :      case OAL_KITL_TYPE_SERIAL:
; 291  :         {
; 292  :             OAL_KITL_SERIAL_DRIVER *pDriver;
; 293  :             pDriver = (OAL_KITL_SERIAL_DRIVER*)g_kitlState.pDevice->pDriver;

  00058	e5933014	 ldr         r3, [r3, #0x14]
  0005c	e3530000	 cmp         r3, #0

; 294  :             if (pDriver && pDriver->pfnPowerOff != NULL) pDriver->pfnPowerOff();

  00060	1593301c	 ldrne       r3, [r3, #0x1C]
  00064	13530000	 cmpne       r3, #0
  00068	11a0e00f	 movne       lr, pc
  0006c	112fff13	 bxne        r3
  00070		 |$LN1@OALKitlPow|

; 295  :         }
; 296  :         break;
; 297  : #endif
; 298  :     }        
; 299  : 
; 300  :     OEMKitlEnable(FALSE);    

  00070	e3a00000	 mov         r0, #0
  00074	eb000000	 bl          OEMKitlEnable

; 301  :     KITL_RETAILMSG(ZONE_KITL_OAL, ("-OALKitlPowerOff\r\n"));

  00078	e5943440	 ldr         r3, [r4, #0x440]
  0007c	e3130a01	 tst         r3, #1, 20
  00080	159f0008	 ldrne       r0, [pc, #8]
  00084	1b000000	 blne        KITLOutputDebugString

; 302  : }

  00088	e8bd4010	 ldmia       sp!, {r4, lr}
  0008c	e12fff1e	 bx          lr
  00090		 |$LN16@OALKitlPow|
  00090		 |$LN17@OALKitlPow|
  00090	00000000	 DCD         |??_C@_0BD@GBONLPAN@?9OALKitlPowerOff?$AN?6?$AA@|
  00094		 |$LN18@OALKitlPow|
  00094	00000000	 DCD         |g_kitlState|
  00098		 |$LN19@OALKitlPow|
  00098	00000000	 DCD         |??_C@_0BD@PMDBLEBO@?$CLOALKitlPowerOff?$AN?6?$AA@|
  0009c		 |$LN20@OALKitlPow|
  0009c	00000000	 DCD         |dpCurSettings|
  000a0		 |$M46680|

			 ENDP  ; |OALKitlPowerOff|

	EXPORT	|OALKitlPowerOn|
	EXPORT	|??_C@_0BC@KIOCKNCJ@?9OALKitlPowerOn?$AN?6?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_0BC@KGJOBBKM@?$CLOALKitlPowerOn?$AN?6?$AA@| [ DATA ] ; `string'

  00000			 AREA	 |.pdata|, PDATA
|$T46700| DCD	|$LN15@OALKitlPow@2|
	DCD	0x40002501

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0BC@KIOCKNCJ@?9OALKitlPowerOn?$AN?6?$AA@| DCB "-OALKitlPowerOn", 0xd
	DCB	0xa, 0x0				; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0BC@KGJOBBKM@?$CLOALKitlPowerOn?$AN?6?$AA@| DCB "+OALKitlPowerOn", 0xd
	DCB	0xa, 0x0				; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OALKitlPowerOn| PROC

; 313  : {

  00000		 |$LN15@OALKitlPow@2|
  00000	e92d4010	 stmdb       sp!, {r4, lr}
  00004		 |$M46697|

; 314  :     KITL_RETAILMSG(ZONE_KITL_OAL, ("+OALKitlPowerOn\r\n"));

  00004	e59f4084	 ldr         r4, [pc, #0x84]
  00008	e5943440	 ldr         r3, [r4, #0x440]
  0000c	e3130a01	 tst         r3, #1, 20
  00010	159f0074	 ldrne       r0, [pc, #0x74]
  00014	1b000000	 blne        KITLOutputDebugString

; 315  : 
; 316  : 
; 317  :     OEMKitlEnable(TRUE);

  00018	e3a00001	 mov         r0, #1
  0001c	eb000000	 bl          OEMKitlEnable

; 318  :   
; 319  :     switch (g_kitlState.pDevice->type) {

  00020	e59f3060	 ldr         r3, [pc, #0x60]
  00024	e593203c	 ldr         r2, [r3, #0x3C]
  00028	e5923010	 ldr         r3, [r2, #0x10]
  0002c	e3530001	 cmp         r3, #1
  00030	0a000008	 beq         |$LN2@OALKitlPow@2|
  00034	e3530002	 cmp         r3, #2
  00038	1a00000b	 bne         |$LN1@OALKitlPow@2|

; 320  : #ifdef KITL_ETHER
; 321  :     case OAL_KITL_TYPE_ETH:
; 322  :         {
; 323  :             OAL_KITL_ETH_DRIVER *pDriver;
; 324  :             pDriver = (OAL_KITL_ETH_DRIVER*)g_kitlState.pDevice->pDriver;

  0003c	e5923014	 ldr         r3, [r2, #0x14]

; 325  :             if (pDriver->pfnPowerOn != NULL) pDriver->pfnPowerOn();

  00040	e5933020	 ldr         r3, [r3, #0x20]
  00044	e3530000	 cmp         r3, #0
  00048	0a000007	 beq         |$LN1@OALKitlPow@2|
  0004c	e1a0e00f	 mov         lr, pc
  00050	e12fff13	 bx          r3

; 326  :         }            
; 327  :         break;

  00054	ea000004	 b           |$LN1@OALKitlPow@2|
  00058		 |$LN2@OALKitlPow@2|

; 328  : #endif
; 329  : #ifdef KITL_SERIAL
; 330  :      case OAL_KITL_TYPE_SERIAL:
; 331  :         {
; 332  :             OAL_KITL_SERIAL_DRIVER *pDriver;
; 333  :             pDriver = (OAL_KITL_SERIAL_DRIVER*)g_kitlState.pDevice->pDriver;

  00058	e5923014	 ldr         r3, [r2, #0x14]

; 334  :             if (pDriver->pfnPowerOn != NULL) pDriver->pfnPowerOn();

  0005c	e5933020	 ldr         r3, [r3, #0x20]
  00060	e3530000	 cmp         r3, #0
  00064	11a0e00f	 movne       lr, pc
  00068	112fff13	 bxne        r3
  0006c		 |$LN1@OALKitlPow@2|

; 335  :         }
; 336  :         break;
; 337  : #endif
; 338  :     }        
; 339  : 
; 340  :     KITL_RETAILMSG(ZONE_KITL_OAL, ("-OALKitlPowerOn\r\n"));

  0006c	e5943440	 ldr         r3, [r4, #0x440]
  00070	e3130a01	 tst         r3, #1, 20
  00074	159f0008	 ldrne       r0, [pc, #8]
  00078	1b000000	 blne        KITLOutputDebugString

; 341  : }

  0007c	e8bd4010	 ldmia       sp!, {r4, lr}
  00080	e12fff1e	 bx          lr
  00084		 |$LN16@OALKitlPow@2|
  00084		 |$LN17@OALKitlPow@2|
  00084	00000000	 DCD         |??_C@_0BC@KIOCKNCJ@?9OALKitlPowerOn?$AN?6?$AA@|
  00088		 |$LN18@OALKitlPow@2|
  00088	00000000	 DCD         |g_kitlState|
  0008c		 |$LN19@OALKitlPow@2|
  0008c	00000000	 DCD         |??_C@_0BC@KGJOBBKM@?$CLOALKitlPowerOn?$AN?6?$AA@|
  00090		 |$LN20@OALKitlPow@2|
  00090	00000000	 DCD         |dpCurSettings|
  00094		 |$M46698|

			 ENDP  ; |OALKitlPowerOn|

	EXPORT	|OEMKitlInit|
	EXPORT	|??_C@_0BI@GBPEIAJI@?9OEMKitlInit?$CIrc?5?$DN?5?$CFd?$CJ?$AN?6?$AA@| [ DATA ] ; `string'
	EXPORT	|??_C@_0BH@DJPAMHLI@?$CLOEMKitlInit?$CI0x?$CF08x?$CJ?$AN?6?$AA@| [ DATA ] ; `string'
	IMPORT	|OALKitlSerialInit|
	IMPORT	|OALKitlEthInit|

  00000			 AREA	 |.pdata|, PDATA
|$T46722| DCD	|$LN17@OEMKitlIni|
	DCD	0x40002e01

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0BI@GBPEIAJI@?9OEMKitlInit?$CIrc?5?$DN?5?$CFd?$CJ?$AN?6?$AA@| DCB "-"
	DCB	"OEMKitlInit(rc = %d)", 0xd, 0xa, 0x0	; `string'

  00000			 AREA	 |.rdata|, DATA, READONLY
|??_C@_0BH@DJPAMHLI@?$CLOEMKitlInit?$CI0x?$CF08x?$CJ?$AN?6?$AA@| DCB "+OE"
	DCB	"MKitlInit(0x%08x)", 0xd, 0xa, 0x0	; `string'
; Function compile flags: /Ogspy

  00000			 AREA	 |.text|, CODE, ARM

  00000		 |OEMKitlInit| PROC

; 119  : {

  00000		 |$LN17@OEMKitlIni|
  00000	e92d4070	 stmdb       sp!, {r4 - r6, lr}
  00004		 |$M46719|
  00004	e1a04000	 mov         r4, r0

; 120  :     BOOL rc = FALSE;
; 121  :     
; 122  :   //  KitlLogSetZones(0xFFFF);
; 123  : 
; 124  :     KITL_RETAILMSG(ZONE_KITL_OAL, ("+OEMKitlInit(0x%08x)\r\n", pKitl));

  00008	e59f60a4	 ldr         r6, [pc, #0xA4]
  0000c	e3a05000	 mov         r5, #0
  00010	e5963440	 ldr         r3, [r6, #0x440]
  00014	e3130a01	 tst         r3, #1, 20
  00018	159f0090	 ldrne       r0, [pc, #0x90]
  0001c	11a01004	 movne       r1, r4
  00020	1b000000	 blne        KITLOutputDebugString

; 125  : 
; 126  :     switch (g_kitlState.pDevice->type) {

  00024	e59f0080	 ldr         r0, [pc, #0x80]
  00028	e590103c	 ldr         r1, [r0, #0x3C]
  0002c	e5913010	 ldr         r3, [r1, #0x10]
  00030	e3530001	 cmp         r3, #1
  00034	0a000005	 beq         |$LN3@OEMKitlIni|
  00038	e3530002	 cmp         r3, #2
  0003c	1a00000c	 bne         |$LN2@OEMKitlIni|

; 127  : #ifdef KITL_ETHER             
; 128  :     case OAL_KITL_TYPE_ETH:
; 129  :         rc = OALKitlEthInit(
; 130  :             g_kitlState.deviceId, g_kitlState.pDevice,
; 131  :             &g_kitlState.args, pKitl
; 132  :         );

  00040	e1a03004	 mov         r3, r4
  00044	e2802010	 add         r2, r0, #0x10
  00048	eb000000	 bl          OALKitlEthInit

; 133  :         break;

  0004c	ea000002	 b           |$LN13@OEMKitlIni|
  00050		 |$LN3@OEMKitlIni|

; 134  : #endif
; 135  : #ifdef KITL_SERIAL
; 136  :     case OAL_KITL_TYPE_SERIAL:
; 137  :         rc = OALKitlSerialInit(
; 138  :             g_kitlState.deviceId, g_kitlState.pDevice,
; 139  :             &g_kitlState.args, pKitl
; 140  :         );

  00050	e1a03004	 mov         r3, r4
  00054	e2802010	 add         r2, r0, #0x10
  00058	eb000000	 bl          OALKitlSerialInit
  0005c		 |$LN13@OEMKitlIni|
  0005c	e1a05000	 mov         r5, r0

; 141  :         break;
; 142  : #endif
; 143  :     }
; 144  :     if (rc) {

  00060	e3550000	 cmp         r5, #0

; 145  :         pKitl->pfnPowerOn  = OALKitlPowerOn;
; 146  :         pKitl->pfnPowerOff = OALKitlPowerOff;

  00064	159f203c	 ldrne       r2, [pc, #0x3C]
  00068	159f3034	 ldrne       r3, [pc, #0x34]
  0006c	15842040	 strne       r2, [r4, #0x40]
  00070	1a000001	 bne         |$LN14@OEMKitlIni|
  00074		 |$LN2@OEMKitlIni|

; 147  :     } else {
; 148  :         pKitl->pfnPowerOn  = NULL;

  00074	e3a03000	 mov         r3, #0

; 149  :         pKitl->pfnPowerOff = NULL;

  00078	e5843040	 str         r3, [r4, #0x40]
  0007c		 |$LN14@OEMKitlIni|
  0007c	e584303c	 str         r3, [r4, #0x3C]

; 150  :     }
; 151  : 
; 152  :     KITL_RETAILMSG(ZONE_KITL_OAL, ("-OEMKitlInit(rc = %d)\r\n", rc));

  00080	e5963440	 ldr         r3, [r6, #0x440]
  00084	e3130a01	 tst         r3, #1, 20
  00088	159f0010	 ldrne       r0, [pc, #0x10]
  0008c	11a01005	 movne       r1, r5
  00090	1b000000	 blne        KITLOutputDebugString

; 153  :     return rc;
; 154  : }

  00094	e1a00005	 mov         r0, r5
  00098	e8bd4070	 ldmia       sp!, {r4 - r6, lr}
  0009c	e12fff1e	 bx          lr
  000a0		 |$LN18@OEMKitlIni|
  000a0		 |$LN19@OEMKitlIni|
  000a0	00000000	 DCD         |??_C@_0BI@GBPEIAJI@?9OEMKitlInit?$CIrc?5?$DN?5?$CFd?$CJ?$AN?6?$AA@|
  000a4		 |$LN20@OEMKitlIni|
  000a4	00000000	 DCD         |OALKitlPowerOn|
  000a8		 |$LN21@OEMKitlIni|
  000a8	00000000	 DCD         |OALKitlPowerOff|
  000ac		 |$LN22@OEMKitlIni|
  000ac	00000000	 DCD         |g_kitlState|
  000b0		 |$LN23@OEMKitlIni|
  000b0	00000000	 DCD         |??_C@_0BH@DJPAMHLI@?$CLOEMKitlInit?$CI0x?$CF08x?$CJ?$AN?6?$AA@|
  000b4		 |$LN24@OEMKitlIni|
  000b4	00000000	 DCD         |dpCurSettings|
  000b8		 |$M46720|

			 ENDP  ; |OEMKitlInit|

	END
